<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">

	<import resource="../abstractBase/batchBase.xml" />
	<!--*****************************************************************************
			Job에 대한 상세한 설명을 여기에 표현한다. (주요 처리 내용)
		*****************************************************************************-->
	
	<!-- Job의 실행중 itemReader와 ItemWriter 등의 인터페이스 사용이 필요없는 단순처리되는 작업(파일이동,Procedure호출 등)을 보여주는 예
	     step을 연결하여 처리하는 예: simpleTaskletStep1이 실행에 실패하면 simpleTaskletStep2는 실행되지 않는다. 
	     트랜잭션은 simpleTaskletStep1과 simpleTaskletStep2이 분리된다. -->
	<job id="simpleTaskletJob"  parent="batchBaseJob"
		xmlns="http://www.springframework.org/schema/batch">
		<description>ItemReader와 ItemWriter 사용 없이 Job을 단순 처리한다.</description>
		<step id="simpleTaskletStep1" next="simpleTaskletStep2" parent="batchSimpleStep"> 
			<tasklet ref="simpleTasklet">
				<transaction-attributes propagation="REQUIRED"/>
			</tasklet>
		</step>
		 
		<step id="simpleTaskletStep2" parent="batchSimpleStep"> 
			<tasklet ref="simpleTasklet2">
				<transaction-attributes propagation="REQUIRED"/>
			</tasklet>
		</step>
	</job>
	
 	<!-- Service없이 DAO를 이용하여 처리하는 경우 -->  
 	<bean id="simpleTasklet" class="com.hwfs.batch.guide.sample.SimpleTasklet" scope="step">
 		<property name="value" value="#{jobParameters[value]}" />
	</bean>

	<!-- Service를 이용하여 처리하는 경우 -->  
 	<bean id="simpleTasklet2" class="com.hwfs.batch.guide.sample.SimpleTasklet2" scope="step">
 		<property name="value" value="#{jobParameters[value]}" />
	</bean>
 
</beans>
