<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="fs.fse.eventProcessApprvMgntDAO">
	<desc>이벤트 등록 관리자 승인 HQML Query</desc>

	<!-- 이벤트 분류 목록을 조회한다. -->
	<statement name="selectCboList" type="select">
		/*+ com.hwfs.fs.fse.dao.EventProcessApprvMgntDAO.selectCboList
		*/
		<![CDATA[
            SELECT  MU_CD
                  , LCLASS_CD
                  , MCLASS_CD
                  , MCLASS_NM
                  , LEV
                  , USE_YN
              FROM  FS_MCLASS
             WHERE  LCLASS_CD = 'E01'
          ORDER BY  MU_CD, LCLASS_CD, MCLASS_CD
        ]]>
	</statement>

	<!-- 이벤트 Theme 목록을 조회한다. -->
	<statement name="selectThemeList" type="select">
		/*+ com.hwfs.fs.fse.dao.EventProcessApprvMgntDAO.selectThemeList
		*/
		<![CDATA[
            SELECT  A.MCLASS_CD
                  , A.MCLASS_NM
                  , B.SCLASS_CD
                  , B.SCLASS_NM
                --, A.USE_YN     AS USE_YN_A
                --, B.USE_YN     AS USE_YN_B
              FROM  FS_MCLASS A, FS_SCLASS B
             WHERE  A.MU_CD     = B.MU_CD
               AND  A.LCLASS_CD = B.LCLASS_CD
               AND  A.MCLASS_CD = B.MCLASS_CD
               AND  A.USE_YN    = 'Y'
               AND  B.USE_YN    = 'Y'
               AND  A.LCLASS_CD = 'E01'
              <#if mclassCd?has_content>
               AND  A.MCLASS_CD = :mclassCd
              </#if>
        ]]>
	</statement>

	<!-- 이벤트 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.fs.fse.dao.EventProcessApprvMgntDAO.selectList */
		<![CDATA[
            SELECT  C.MU_CD                   AS MU_CD
                  , C.MU_NM                   AS MU_NM
                --, A.USE_YN                  AS USE_YN_A
                --, B.USE_YN                  AS USE_YN_B
                  , C.TM_CD                   AS TM_CD
                  , C.TM_NM                   AS TM_NM
                  , C.UPJANG_CD               AS UPJANG_CD
                  , C.UPJANG_NM               AS UPJANG_NM
                  , C.REQUEST_CD              AS REQUEST_CD
                  , C.REQUEST_NM              AS REQUEST_NM
                  , C.REQUEST_UPJANG_CD       AS REQUEST_UPJANG_CD
                  , C.REQUEST_UPJANG_NM       AS REQUEST_UPJANG_NM
                  , C.LCLASS_CD               AS LCLASS_CD
                  , C.MCLASS_CD               AS MCLASS_CD
                  , A.MCLASS_NM               AS MCLASS_NM
                  , C.SCLASS_CD               AS SCLASS_CD
                  , B.SCLASS_NM               AS SCLASS_NM
                  , C.SEQ                     AS SEQ
                  , C.EVNT_TITLE              AS EVNT_TITLE
                  , C.SIGN_STATUS             AS SIGN_STATUS
                  , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'EVENT_SIGN_STATUS' AND CODE = C.SIGN_STATUS) AS SIGN_STATUS_NM
                  , C.RESULT_YN               AS RESULT_YN
                  , C.CUSER                   AS CUSER
                  , (SELECT NM_KOR FROM HR_PERSONAL WHERE SABUN = C.CUSER AND ROWNUM = 1)  AS CUSER_NM 
              FROM  FS_MCLASS A, FS_SCLASS B
                  , (
                     SELECT  NVL(N.MU_CD,    J.MU_CD)     AS MU_CD
                           , NVL(N.MU_NM,    J.MU_NM)     AS MU_NM
                           , NVL(N.TM_CD,    J.TM_CD)     AS TM_CD
                           , NVL(N.TM_NM,    J.TM_NM)     AS TM_NM
                           , NVL(N.UPJANG,   J.UPJANG)    AS UPJANG_CD
                           , NVL(N.UPJANGNM, J.UPJANGNM)  AS UPJANG_NM
                           , '001'                        AS REQUEST_CD
                           , '이벤트 마스터'              AS REQUEST_NM
                           , NVL(N.UPJANG,   J.UPJANG)    AS REQUEST_UPJANG_CD
                           , NVL(N.UPJANGNM, J.UPJANGNM)  AS REQUEST_UPJANG_NM
                           , MGRP_CD                      AS LCLASS_CD
                           , MCLASS_CD                    AS MCLASS_CD
                           , SCLASS_CD                    AS SCLASS_CD
                           , SEQ                          AS SEQ
                           , EVNT_TITLE                   AS EVNT_TITLE
                           , SIGN_STATUS                  AS SIGN_STATUS
                           , ''                           AS RESULT_YN
                           , A.CUSER                      AS CUSER
                         --, (SELECT NM_KOR FROM HR_PERSONAL WHERE SABUN = A.CUSER AND ROWNUM = 1)  AS CUSER_NM
                           , NVL(M.NM_KOR,   I.NM_KOR)    AS CUSER_NM
                           , A.SIGN_PRCG_SABUN
                       FROM  FSE_EVNT_MASTER A
                           , SCC_USERINFO I
                           , (SELECT X.UPJANG, X.UPJANGNM, Y.* FROM ST_UPJANG X, HLDC_SC_DEPT_V Y WHERE X.DEPT_ID = Y.DEPT_ID) J
                           , HR_PERSONAL M
                           , (SELECT X.UPJANG, X.UPJANGNM, Y.* FROM ST_UPJANG X, HLDC_SC_DEPT_V Y WHERE X.DEPT_ID = Y.DEPT_ID) N
                      WHERE  A.SIGN_STATUS IS NOT NULL
                        AND  A.USE_YN  = 'Y'
                       -- AND  A.CUSER   = I.SABUN(+)
                        AND A.SIGN_PRCG_SABUN = I.SABUN(+)
                        AND  I.SABUN   = M.SABUN(+)
                        AND  I.USE_YN  = 'Y'
                        AND  I.UPJANG  = J.UPJANG(+)
                        AND  M.DEPT_ID = N.DEPT_ID(+)
                     UNION ALL
                     SELECT  A.MU_CD                  AS MU_CD
                           , A.MU_NM                  AS MU_NM
                           , A.TM_CD                  AS TM_CD
                           , A.TM_NM                  AS TM_NM
                           , B.REQUEST_UPJANG_CD      AS UPJANG_CD
                           , A.UPJANGNM               AS UPJANG_NM
                           , '002'                    AS REQUEST_CD
                           , '이벤트 신청'            AS REQUEST_NM
                           , B.REQUEST_UPJANG_CD      AS REQUEST_UPJANG_CD
                           , Z.UPJANGNM               AS REQUEST_UPJANG_NM
                           , B.LCLASS_CD              AS LCLASS_CD
                           , B.MCLASS_CD              AS MCLASS_CD
                           , B.SCLASS_CD              AS SCLASS_CD
                           , B.EVNT_ID                AS SEQ
                           , B.EVNT_TITLE             AS EVNT_TITLE
                           , B.SIGN_STATUS            AS SIGN_STATUS
                           , NVL((SELECT   DECODE(COUNT(X.EVNT_ID), 0 , 'N', 'Y')
	                                FROM   FSE_EVNT_RESULT  X
	                                   ,   FSE_EVNT_REQUEST Y
	                               WHERE   X.REQUEST_UPJANG_CD = Y.REQUEST_UPJANG_CD
	                                 AND   X.EVNT_ID           = Y.EVNT_ID
	                                 AND   X.EVNT_ID           = B.EVNT_ID
                             ),'N')  AS RESULT_YN
                           , B.CUSER                  AS CUSER
                         --, (SELECT NM_KOR FROM HR_PERSONAL WHERE SABUN = B.CUSER AND ROWNUM = 1)  AS CUSER_NM
                           , NVL(M.NM_KOR,   I.NM_KOR)    AS CUSER_NM
                           , B.SIGN_PRCG_SABUN
                       FROM  SCO_UPJANG_MST_V A
                           , SCO_UPJANG_MST_V Z
                           , FSE_EVNT_REQUEST B
                           , SCC_USERINFO     I
                           , HR_PERSONAL      M
                      WHERE  A.UPJANG = B.REQUEST_UPJANG_CD
                        AND  Z.UPJANG = B.REQUEST_UPJANG_CD
                        AND  B.SIGN_STATUS IS NOT NULL
                       -- AND  B.CUSER  = I.SABUN(+)
                        AND B.SIGN_PRCG_SABUN = I.sabun(+)
                        AND  I.SABUN  = M.SABUN(+)
                        AND  I.USE_YN = 'Y'
                    ) C
             WHERE  A.LCLASS_CD = B.LCLASS_CD
               AND  A.MCLASS_CD = B.MCLASS_CD
               AND  B.LCLASS_CD = C.LCLASS_CD
               AND  B.MCLASS_CD = C.MCLASS_CD
               AND  B.SCLASS_CD = C.SCLASS_CD
               AND  A.USE_YN    = 'Y'
               AND  B.USE_YN    = 'Y'
              <#if muCd?has_content>
               AND  C.MU_CD     = :muCd
             </#if>
             <#if tmCd?has_content>
               AND  C.TM_CD     = :tmCd
             </#if>
             <#if upjangCd?has_content>
               AND  C.UPJANG_CD = :upjangCd
             </#if>
             <#if cuserNm?has_content>
               AND  (SELECT NM_KOR FROM HR_PERSONAL WHERE SABUN = C.CUSER AND ROWNUM = 1)  LIKE  '%' || :cuserNm || '%'
             </#if>
             <#if requestCd?has_content>
               AND  C.REQUEST_CD       = :requestCd
             </#if>
             <#if signStatus?has_content>
               AND  C.SIGN_STATUS      = :signStatus
             </#if>
             AND C.SIGN_PRCG_SABUN = :loginSabun
        ]]>
	</statement>


	<!-- 이벤트 master 정보을 조회한다. -->
	<statement name="selectEventMst" type="select"><![CDATA[
            SELECT  A.LCLASS_CD         AS LCLASS_CD           /* 대분류_코드      */
                  , A.MCLASS_CD         AS MCLASS_CD           /* 중분류_코드      */
                  , A.MCLASS_NM         AS MCLASS_NM           /* 중분류_명        */
                  , B.SCLASS_CD         AS SCLASS_CD           /* 소분류_코드      */
                  , B.SCLASS_NM         AS SCLASS_NM           /* 소분류_명        */
                  , C.FILE_ID           AS FILE_ID_MST         /* 첨부파일ID_MST   */
                --, A.USE_YN            AS USE_YN_A
                --, B.USE_YN            AS USE_YN_B
                --, C.PROPS_TERM_SDATE  AS PROPS_TERM_SDATE    /* 추진_기간_시작일 */
                --, C.PROPS_TERM_EDATE  AS PROPS_TERM_EDATE    /* 추진_기간_종료일 */
                  , SUBSTR(C.PROPS_TERM_SDATE,0,6)   AS PROPS_TERM_SDATE    /* 추진_기간_시작일 */
                  , SUBSTR(C.PROPS_TERM_EDATE,0,6)   AS PROPS_TERM_EDATE    /* 추진_기간_종료일 */
                  , C.EVNT_TITLE        AS EVNT_TITLE          /* 이벤트_제목      */
                  , C.OFFER_MENU        AS OFFER_MENU          /* 제공_식단        */
                  , C.CNPT_EXPL         AS CNPT_EXPL           /* 개념_설명        */
                  , ''                  AS REQUEST_UPJANG_CD
                  , C.SEQ               AS SEQ
                  , ''                  AS PROGRESS_DATE
                  , ''                  AS FILE_ID
                  , C.SIGN_PRCG_SABUN   AS SIGN_PRCG_SABUN
                  , (SELECT NM_KOR FROM HR_PERSONAL WHERE SABUN = SIGN_PRCG_SABUN) AS SIGN_PRCG_NM
                  , C.SIGN_STATUS       AS SIGN_STATUS
                  , C.RTN_REASON        AS RTN_REASON
                  , ''                  AS CNTC_NUM
                  , ''                  AS ZIP_CODE
                  , ''                  AS TRSF_ADDR
                  , ''                  AS TRSF_MTOD1
                  , ''                  AS TRSF_MTOD2
                  , ''                  AS CNTC_NUM_ENC
                  , ''                  AS CNTC_NUM1
                  , ''                  AS CNTC_NUM2
                  , ''                  AS CNTC_NUM3
                  , ''                  AS TRSF_ADDR_ENC
                  , C.CUSER             AS CUSER
                --, (SELECT NM_KOR FROM HR_PERSONAL WHERE SABUN = C.CUSER AND ROWNUM = 1)  AS CUSER_NM
                  , NVL(M.NM_KOR,   I.NM_KOR)    AS CUSER_NM
              FROM  FS_MCLASS A, FS_SCLASS B, FSE_EVNT_MASTER C
                  , SCC_USERINFO I, HR_PERSONAL M
             WHERE  A.MU_CD       = B.MU_CD
               AND  A.LCLASS_CD   = B.LCLASS_CD
               AND  A.MCLASS_CD   = B.MCLASS_CD
               AND  B.LCLASS_CD   = C.MGRP_CD
               AND  B.MCLASS_CD   = C.MCLASS_CD
               AND  B.SCLASS_CD   = C.SCLASS_CD
               AND  A.USE_YN      = 'Y'
               AND  B.USE_YN      = 'Y'
               AND  C.CUSER       = I.SABUN(+)
               AND  I.SABUN       = M.SABUN(+)
--             AND  I.USE_YN      = 'Y'
               AND  A.LCLASS_CD   = :lclassCd
               AND  A.MCLASS_CD   = :mclassCd
               AND  B.SCLASS_CD   = :sclassCd
               AND  C.SEQ         = :seq
        ]]></statement>

	<!-- 이벤트 Master 진행절차 정보를 조회한다.(Master 진행절차) -->
	<statement name="selectMstProgress" type="select">
		/*+
		com.hwfs.fs.fse.dao.EventProcessApprvMgntDAO.selectMstProgress
		*/
		<![CDATA[
            SELECT  ''   AS EVNT_ID
                  , ''   AS REQUEST_UPJANG_CD
                  , ''   AS SEQ
                  , PROGRESS_PRCDR_CD
                  , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0026' AND CODE = PROGRESS_PRCDR_CD) AS PROGRESS_PRCDR_NM
                  , PROGRESS_PRCDR_CONTENTS
              FROM  FSE_EVNT_PRCDR_MASTER
             WHERE  MGRP_CD   = :lclassCd
               AND  MCLASS_CD = :mclassCd
               AND  SCLASS_CD = :sclassCd
               AND  SEQ       = :seq
          ORDER BY  PROGRESS_PRCDR_CD
        ]]>
	</statement>

	<!-- 이벤트 Master 기기/포장제 정보을 조회한다.(Master 기기/포장제) selectUtensilList -->
	<statement name="selectMstUtensil">
		/*+
		com.hwfs.fs.fse.dao.EventProcessApprvMgntDAO.selectMstUtensil */
		<![CDATA[
        SELECT  MGRP_CD     AS LCLASS_CD     /* 대분류_코드    */
              , MCLASS_CD   AS MCLASS_CD     /* 중분류_코드    */
              , SCLASS_CD   AS SCLASS_CD     /* 소분류_코드    */
              , SEQ         AS SEQ           /* 순번           */
              , UTENSIL_ID  AS UTENSIL_ID    /* 기기및기물명ID */
              , UTENSIL     AS UTENSIL       /* 기기및기물명   */
              , VENDOR      AS VENDOR        /* 업체명         */
              , REMARK      AS REMARK        /* 비고           */
          FROM  FSE_EVNT_UTENSIL_MASTER
          WHERE MGRP_CD      =  :lclassCd    /* 대분류_코드    */
            AND MCLASS_CD    =  :mclassCd    /* 중분류_코드    */
            AND SCLASS_CD    =  :sclassCd    /* 소분류_코드    */
            AND SEQ          =  :seq         /* 순번           */
            ]]>
	</statement>

	<!-- 서버 사진을 조회한다.(Master 첨부파일) -->
	<statement name="selectImgList" type="select">
		/*+ com.hwfs.fs.fse.dao.EventProcessApprvMgntDAO.selectImgList
		*/
		<![CDATA[
            SELECT  0                            AS CHK
                  , RGST_SEQ                     AS RGST_SEQ
                  , UPJANG                       AS UPJANG
                  , RGST_DATE                    AS RGST_DATE
                  , GUBUN                        AS GUBUN
                  , FILE_NM                      AS FILE_NM
                  , REL_PATH                     AS REL_PATH
                  , REL_PATH || '/' || FILE_NM   AS PRE_VIEW
                  , FILE_SIZE                    AS FILE_SIZE
                  , BIGO                         AS BIGO
              FROM  SCZ_PHOTO_IMGSEND
             WHERE  RGST_DATE = :rgstDate
               AND  GUBUN     = :gubun
          ORDER BY  CDATE DESC
        ]]>
	</statement>


	<!-- 이벤트 신청 정보을 조회한다. -->
	<statement name="selectEventReq" type="select">
		/*+ com.hwfs.fs.fse.dao.EventProcessApprvMgntDAO.selectEventReq
		*/
		<![CDATA[
            SELECT  REQUEST_UPJANG_CD                    AS REQUEST_UPJANG_CD
                  , EVNT_ID                              AS SEQ
                  , LCLASS_CD                            AS LCLASS_CD
                  , MCLASS_CD                            AS MCLASS_CD
                  , MCLASS_NM                            AS MCLASS_NM
                  , SCLASS_CD                            AS SCLASS_CD
                  , SCLASS_NM                            AS SCLASS_NM
                  , PROPS_TERM_SDATE                     AS PROPS_TERM_SDATE
                  , PROPS_TERM_EDATE                     AS PROPS_TERM_EDATE
                  , EVNT_TITLE                           AS EVNT_TITLE
                  , OFFER_MENU                           AS OFFER_MENU
                  , CNPT_EXPL                            AS CNPT_EXPL
                  , PROGRESS_DATE                        AS PROGRESS_DATE
                  , SIGN_PRCG_SABUN                      AS SIGN_PRCG_SABUN
                  , (SELECT NM_KOR FROM HR_PERSONAL WHERE SABUN = SIGN_PRCG_SABUN) AS SIGN_PRCG_NM
                  , SIGN_STATUS                          AS SIGN_STATUS
                  , RTN_REASON                           AS RTN_REASON
                  , ADDR_KEY                             AS ADDR_KEY
                  , ADDR_INFO                            AS ADDR_INFO
                  , TRSF_MTOD1                           AS TRSF_MTOD1
                  , TRSF_MTOD2                           AS TRSF_MTOD2
                  , CNTC_NUM_ENC                         AS CNTC_NUM_ENC
                  , SCC_TELNO_SPLIT_FUN(CNTC_NUM_ENC, 1) AS CNTC_NUM1
                  , SCC_TELNO_SPLIT_FUN(CNTC_NUM_ENC, 2) AS CNTC_NUM2
                  , SCC_TELNO_SPLIT_FUN(CNTC_NUM_ENC, 3) AS CNTC_NUM3
                  , FILE_ID                              AS FILE_ID
                  , CUSER                                AS CUSER
                  , CUSER_NM                             AS CUSER_NM
              FROM  (SELECT  A.LCLASS_CD                      AS LCLASS_CD
                           , A.MCLASS_CD                      AS MCLASS_CD
                           , A.MCLASS_NM                      AS MCLASS_NM
                           , B.SCLASS_CD                      AS SCLASS_CD
                           , B.SCLASS_NM                      AS SCLASS_NM
                         --, A.USE_YN                         AS USE_YN_A
                         --, B.USE_YN                         AS USE_YN_B
                           , C.REQUEST_UPJANG_CD              AS REQUEST_UPJANG_CD
                           , C.EVNT_ID                        AS EVNT_ID
                           , SUBSTR(C.PROPS_TERM_SDATE,0,6)   AS PROPS_TERM_SDATE
                           , SUBSTR(C.PROPS_TERM_EDATE,0,6)   AS PROPS_TERM_EDATE
                         --, C.PROPS_TERM_SDATE               AS PROPS_TERM_SDATE
                         --, C.PROPS_TERM_EDATE               AS PROPS_TERM_EDATE
                           , C.EVNT_TITLE                     AS EVNT_TITLE
                           , C.OFFER_MENU                     AS OFFER_MENU
                           , C.CNPT_EXPL                      AS CNPT_EXPL
                           , C.PROGRESS_DATE                  AS PROGRESS_DATE
                           , C.SIGN_PRCG_SABUN                AS SIGN_PRCG_SABUN
                           , C.SIGN_STATUS                    AS SIGN_STATUS
                           , C.RTN_REASON                     AS RTN_REASON
                           , C.ADDR_KEY                       AS ADDR_KEY
                           , SCC_ADDR_FUN(C.ADDR_KEY, :loginPersMask, :maskAuth) AS ADDR_INFO
                           , C.TRSF_MTOD1                     AS TRSF_MTOD1
                           , C.TRSF_MTOD2                     AS TRSF_MTOD2
                           , SCC_CRYPTO.MASKAUTH_FUN(C.CNTC_NUM_ENC, 9, :loginPersMask, :maskAuth)  AS CNTC_NUM_ENC
                           , C.FILE_ID                        AS FILE_ID
                           , C.CUSER                          AS CUSER
                         --, (SELECT NM_KOR FROM HR_PERSONAL WHERE SABUN = C.CUSER AND ROWNUM = 1)  AS CUSER_NM
                           , NVL(M.NM_KOR,   I.NM_KOR)        AS CUSER_NM
                       FROM  FS_MCLASS A, FS_SCLASS B, FSE_EVNT_REQUEST C
                           , SCC_USERINFO I, HR_PERSONAL M
                      WHERE  A.LCLASS_CD = B.LCLASS_CD
                        AND  A.MCLASS_CD = B.MCLASS_CD
                        AND  B.LCLASS_CD = C.LCLASS_CD
                        AND  B.MCLASS_CD = C.MCLASS_CD
                        AND  B.SCLASS_CD = C.SCLASS_CD
                        AND  A.USE_YN    = 'Y'
                        AND  B.USE_YN    = 'Y'
                        AND  C.CUSER     = I.SABUN(+)
                        AND  I.SABUN     = M.SABUN(+)
                  --      AND  I.USE_YN    = 'Y'
                        AND  C.EVNT_ID   = :seq
                    )
        ]]>
	</statement>

	<!-- 이벤트 진행정보 관리 목록을 조회한다. -->
	<statement name="selectProgress" type="select">
		/*+ com.hwfs.fs.fse.dao.EventProcessApprvMgntDAO.selectProgress
		*/
		<![CDATA[
            SELECT  EVNT_ID
                  , REQUEST_UPJANG_CD
                  , SEQ
                  , PROGRESS_PRCDR_CD
                  , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0026' AND CODE = PROGRESS_PRCDR_CD) AS PROGRESS_PRCDR_NM
                  , PROGRESS_PRCDR_CONTENTS
              FROM  FSE_EVNT_PRCDR
             WHERE  EVNT_ID = :seq
        ]]>
	</statement>

	<!-- 이벤트 기기 정보 목록을 조회한다. -->
	<statement name="selectInforeg" type="select">
		/*+ com.hwfs.fs.fse.dao.EventProcessApprvMgntDAO.selectInforeg
		*/
		<![CDATA[
            SELECT  A.LCLASS_CD
                  , A.LCLASS_NM
                  , B.MCLASS_CD
                  , B.MCLASS_NM
                  , C.SCLASS_CD
                  , C.SCLASS_NM
                  , D.REQUEST_UPJANG_CD
                  , D.EVNT_ID
                  , D.SEQ
                  , D.REQUEST_QUANTITY
                  , D.USE_DATE_SDATE
                  , D.USE_DATE_EDATE
                  , D.RMA_DATE
                  , (( SELECT NVL(SUM(QTY_DELIVERED), 0) FROM FSM_UTENSIL_MASTER
                        WHERE LCLASS_CD = B.LCLASS_CD AND MCLASS_CD = B.MCLASS_CD
                          AND SCLASS_CD = C.SCLASS_CD AND USE_YN = 'Y')
                     - (NVL((SELECT NVL(SUM(REQUEST_QUANTITY), 0) FROM FSM_UTENSIL_REQUEST
                              WHERE LCLASS_CD = B.LCLASS_CD AND MCLASS_CD = B.MCLASS_CD AND SCLASS_CD = C.SCLASS_CD
                                AND USE_DATE_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND RMA_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                                AND UPJANG_CHG_YN IS NULL AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NULL), 0)
                     + NVL((SELECT NVL(SUM(REQUEST_QUANTITY), 0) FROM FSM_UTENSIL_REQUEST
                             WHERE LCLASS_CD = B.LCLASS_CD AND MCLASS_CD=B.MCLASS_CD AND SCLASS_CD = C.SCLASS_CD
                               AND USE_DATE_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND RMA_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                               AND UPJANG_CHG_YN IS NULL AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NOT NULL AND SECOND_SIGN_STATUS = '002'), 0)
                     + NVL((SELECT NVL(SUM(MNGMV_QUANTITY), 0) FROM FSM_UTENSIL_REQUEST
                             WHERE LCLASS_CD = B.LCLASS_CD AND MCLASS_CD = B.MCLASS_CD AND SCLASS_CD = C.SCLASS_CD
                               AND MNGMV_DAYS_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND MNGMV_DAYS_EDATE >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                               AND UPJANG_CHG_YN = 1 AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NULL),0)
                     + NVL((SELECT NVL(SUM(MNGMV_QUANTITY), 0) FROM FSM_UTENSIL_REQUEST
                             WHERE LCLASS_CD = B.LCLASS_CD AND MCLASS_CD = B.MCLASS_CD AND SCLASS_CD = C.SCLASS_CD
                               AND MNGMV_DAYS_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND MNGMV_DAYS_EDATE >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                               AND UPJANG_CHG_YN = 1  AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NOT NULL AND SECOND_SIGN_STATUS = '002'), 0))
                     - (SELECT NVL(SUM(QUANTITY), 0) FROM FSM_UTENSIL_AS_HISTORY
                         WHERE CLASS = '001' AND LCLASS_CD = B.LCLASS_CD AND MCLASS_CD = B.MCLASS_CD AND SCLASS_CD = C.SCLASS_CD
                           AND REQUEST_DATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND END_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
                     - (SELECT NVL(SUM(QUANTITY), 0) FROM FSM_UTENSIL_AS_HISTORY
                         WHERE CLASS = '002' AND LCLASS_CD = B.LCLASS_CD AND MCLASS_CD = B.MCLASS_CD AND SCLASS_CD = C.SCLASS_CD
                           AND END_DATE < TO_CHAR(SYSDATE, 'YYYYMMDD'))
                     - (SELECT NVL(SUM(REQUEST_QUANTITY), 0) FROM FSC_CATERINGUTENSIL_REG
                         WHERE MACHINE_CLASS_CD = B.LCLASS_CD AND  MACHINE_KIND_CD = B.MCLASS_CD AND MACHINE_CD = C.SCLASS_CD
                           AND APPRV_YN = 'Y' AND LEND_TERM_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND TO_CHAR(RMA_DATE, 'YYYYMMDD') >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
                     - (SELECT NVL(SUM(REQUEST_QUANTITY), 0) FROM FSE_EVNT_INFOREG E, FSE_EVNT_REQUEST F
                         WHERE E.EVNT_ID(+) = F.EVNT_ID AND E.LCLASS_CD = B.LCLASS_CD AND E.MCLASS_CD = B.MCLASS_CD AND E.SCLASS_CD = C.SCLASS_CD
                           --AND F.SIGN_STATUS = '002' AND E.USE_DATE_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND E.RMA_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
                           AND E.RMA_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
                    ) AS RESIDUAL_QTY
              FROM  FS_LCLASS A, FS_MCLASS B, FS_SCLASS C, FSE_EVNT_INFOREG D
             WHERE  A.LCLASS_CD = B.LCLASS_CD
               AND  B.LCLASS_CD = C.LCLASS_CD
               AND  B.MCLASS_CD = C.MCLASS_CD
               AND  C.LCLASS_CD = D.LCLASS_CD
               AND  C.MCLASS_CD = D.MCLASS_CD
               AND  C.SCLASS_CD = D.SCLASS_CD
               AND  B.USE_YN    = 'Y'
               AND  D.EVNT_ID   = :seq
        ]]>
	</statement>

	<!-- 이벤트 사업장 기기 정보 목록을 조회한다. -->
	<statement name="selectUpjangutensil" type="select">
		/*+
		com.hwfs.fs.fse.dao.EventProcessApprvMgntDAO.selectUpjangutensil
		*/
		<![CDATA[
            SELECT  EVNT_ID         AS EVNT_ID
                  , SEQ             AS SEQ
                  , UTENSILNM       AS UTENSILNM
                  , VENDORNM        AS VENDORNM
                  , REQUEST_DATE    AS REQUEST_DATE
                  , REMARK          AS REMARK
              FROM  FSE_EVNT_UPJANGUTENSIL
             WHERE  EVNT_ID   = :seq
        ]]>
	</statement>

	<!-- 이벤트 master 정보(을)를 승인한다. -->
	<statement name="updateMst" type="update">
		/*+ com.hwfs.fs.fse.dao.EventProcessApprvMgntDAO.updateMst */
		<![CDATA[
            UPDATE FSE_EVNT_MASTER
               SET SIGN_PRCG_SABUN   = :signPrcgSabun   /* 결재 담당자 사번 */
                 , SIGN_STATUS       = :signStatus      /* 결재상태         */
                 , RTN_REASON        = :rtnReason       /* 반납_사유        */
                 , OFFER_MENU		 = :offerMenu
                 , CNPT_EXPL		 = :cnptExpl
                -- , PROGRESS_DATE	 = :progressDate
                 , UUSER             = :loginSabun      /* 수정자 사번      */
                 , UDATE             = SYSDATE          /* 수정일시         */
            WHERE  MGRP_CD           = :lclassCd
              AND  MCLASS_CD         = :mclassCd
              AND  SCLASS_CD         = :sclassCd
              AND  SEQ               = :seq
        ]]>
	</statement>

	<!-- 이벤트 신청정보(을)를 승인한다. -->
	<statement name="updateReq" type="update">
		/*+ com.hwfs.fs.fse.dao.EventProcessApprvMgntDAO.updateReq */
		<![CDATA[
            UPDATE FSE_EVNT_REQUEST
               SET SIGN_PRCG_SABUN   = :signPrcgSabun  /* 결재 담당자 사번 */
                 , SIGN_STATUS       = :signStatus     /* 결재상태         */
                 , RTN_REASON        = :rtnReason      /* 반납_사유        */
                 , OFFER_MENU		 = :offerMenu
                 , CNPT_EXPL		 = :cnptExpl
                 , PROGRESS_DATE	 = :progressDate
                 , UUSER             = :loginSabun     /* 수정자 사번      */
                 , UDATE             = SYSDATE         /* 수정일시         */
            WHERE  EVNT_ID           = :seq            /* 이벤트ID         */
        ]]>
	</statement>

</hqml>
