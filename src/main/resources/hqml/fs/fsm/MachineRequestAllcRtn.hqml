<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="fs.fsm.machineRequestAllcRtnDAO">
	<desc>기기/기물 신청 목록 HQML Query</desc>

	<!-- 기기/기물 신청 목록 목록을 조회한다. -->
	<statement name="selectReqRtnList" type="select">
		/*+ com.hwfs.fs.fsm.dao.MachineRequestAllcRtnDAO.selectReqRtnList */
		<![CDATA[
		SELECT 
		        MU_CD
               ,TM_CD
		       ,REQUEST_UPJANG_CD
		       ,(SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = T.REQUEST_UPJANG_CD) AS REQUEST_UPJANG_NM
		       ,SEQ
		       ,LCLASS_CD
		       ,MCLASS_CD
		       ,SCLASS_CD
		       , (( SELECT NVL(SUM(QTY_DELIVERED),0) FROM FSM_UTENSIL_MASTER 
                WHERE LCLASS_CD = T.LCLASS_CD
                AND MCLASS_CD = T.MCLASS_CD
                AND SCLASS_CD = T.SCLASS_CD
                AND USE_YN = 'Y')
                -(
                NVL((SELECT  SUM(REQUEST_QUANTITY) FROM FSM_UTENSIL_REQUEST WHERE LCLASS_CD=T.LCLASS_CD AND MCLASS_CD=T.MCLASS_CD AND SCLASS_CD=T.SCLASS_CD
                      AND USE_DATE_SDATE  <= TO_CHAR(SYSDATE,'YYYYMMDD') AND RMA_DATE  >= TO_CHAR(SYSDATE,'YYYYMMDD') 
                      AND UPJANG_CHG_YN IS NULL AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NULL ),0)+
                NVL((SELECT  SUM(REQUEST_QUANTITY) FROM FSM_UTENSIL_REQUEST WHERE LCLASS_CD=T.LCLASS_CD AND MCLASS_CD=T.MCLASS_CD AND SCLASS_CD=T.SCLASS_CD
                     AND USE_DATE_SDATE  <= TO_CHAR(SYSDATE,'YYYYMMDD') AND RMA_DATE  >= TO_CHAR(SYSDATE,'YYYYMMDD') 
                     AND UPJANG_CHG_YN IS NULL AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NOT NULL AND SECOND_SIGN_STATUS = '002'),0)+
                NVL((SELECT NVL(SUM(MNGMV_QUANTITY),0) FROM FSM_UTENSIL_REQUEST WHERE  LCLASS_CD=T.LCLASS_CD AND MCLASS_CD=T.MCLASS_CD AND SCLASS_CD=T.SCLASS_CD 
                     AND MNGMV_DAYS_SDATE <= TO_CHAR(SYSDATE,'YYYYMMDD') AND MNGMV_DAYS_EDATE  >= TO_CHAR(SYSDATE,'YYYYMMDD') 
                     AND UPJANG_CHG_YN = 1 AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NULL),0)+    
                NVL((SELECT NVL(SUM(MNGMV_QUANTITY),0) FROM FSM_UTENSIL_REQUEST WHERE  LCLASS_CD=T.LCLASS_CD AND MCLASS_CD=T.MCLASS_CD AND SCLASS_CD=T.SCLASS_CD 
                     AND MNGMV_DAYS_SDATE <= TO_CHAR(SYSDATE,'YYYYMMDD') AND MNGMV_DAYS_EDATE  >= TO_CHAR(SYSDATE,'YYYYMMDD') 
                     AND UPJANG_CHG_YN = 1  AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NOT NULL AND SECOND_SIGN_STATUS = '002'),0)
                )
                -(SELECT NVL(SUM(QUANTITY),0) FROM FSM_UTENSIL_AS_HISTORY
             	WHERE CLASS = '001'
             	AND LCLASS_CD = T.LCLASS_CD
                AND MCLASS_CD = T.MCLASS_CD
                AND SCLASS_CD = T.SCLASS_CD   
             	AND REQUEST_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
             	AND END_DATE >= TO_CHAR(SYSDATE,'YYYYMMDD'))
             	-(SELECT NVL(SUM(QUANTITY),0) FROM FSM_UTENSIL_AS_HISTORY
             	WHERE CLASS = '002'
             	AND LCLASS_CD = T.LCLASS_CD
                AND MCLASS_CD = T.MCLASS_CD
                AND SCLASS_CD = T.SCLASS_CD   
             	AND END_DATE < TO_CHAR(SYSDATE,'YYYYMMDD'))
                -(SELECT NVL(SUM(REQUEST_QUANTITY),0) FROM FSC_CATERINGUTENSIL_REG
                WHERE MACHINE_CLASS_CD = T.LCLASS_CD
                AND  MACHINE_KIND_CD = T.MCLASS_CD
                AND MACHINE_CD = T.SCLASS_CD   
                AND APPRV_YN = 'Y'
                AND LEND_TERM_SDATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                AND TO_CHAR(RMA_DATE,'YYYYMMDD') >= TO_CHAR(SYSDATE,'YYYYMMDD'))
                -(SELECT NVL(SUM(X1.REQUEST_QUANTITY),0) 
                FROM FSE_EVNT_INFOREG X1 
                    ,FSE_EVNT_REQUEST X2
                WHERE X1.REQUEST_UPJANG_CD=X2.REQUEST_UPJANG_CD
                AND X1.EVNT_ID=X2.EVNT_ID
                AND X1.LCLASS_CD = T.LCLASS_CD
                AND X1.MCLASS_CD = T.MCLASS_CD
                AND X1.SCLASS_CD = T.SCLASS_CD   
                AND X2.SIGN_STATUS = '002'
                AND X1.USE_DATE_SDATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                AND X1.RMA_DATE >= TO_CHAR(SYSDATE,'YYYYMMDD'))
                ) AS RESIDUAL_QUANTITY
		       ,REQUEST_QUANTITY
		       ,REQUEST_QUANTITY AS ORG_QUANTITY
		       ,USE_DATE_SDATE
		       ,USE_DATE_EDATE
		       ,RMA_DATE
		       ,UPJANG_CHG_YN
		       ,MNGMV_UPJANG_CD
		       ,(SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = T.MNGMV_UPJANG_CD) AS MNGMV_UPJANG_NM
		       ,MNGMV_DAYS_SDATE
		       ,MNGMV_DAYS_EDATE
		       ,MNGMV_QUANTITY
		       ,RMA_QUANTITY
		       ,FIRST_SIGN_PRCG_SABUN
		       ,(SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = T.FIRST_SIGN_PRCG_SABUN) AS FIRST_SIGN_PRCG_NAME
		       ,FIRST_SIGN_STATUS
		       ,FIRST_RTN_REASON
		       ,SECOND_SIGN_PRCG_SABUN
		       ,(SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = T.SECOND_SIGN_PRCG_SABUN) AS SECOND_SIGN_PRCG_NAME
		       ,SECOND_SIGN_STATUS
		       ,SECOND_RTN_REASON
		       ,REMARK
		       ,CUSER AS CUSER_ID
               ,(SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = T.CUSER) AS CUSER_NM
               ,RMA_SABUN
               ,(SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = T.RMA_SABUN) AS RMA_SABUN_NM
		       ,CDATE
		FROM FSM_UTENSIL_REQUEST T
			,(SELECT MU_CD, MU_NM, TM_CD, TM_NM, UPJANG, UPJANGNM  FROM SCO_UPJANG_MST_V) T2
        WHERE T.REQUEST_UPJANG_CD = T2.UPJANG
		<#if muCd?has_content>
		AND	MU_CD = :muCd
		</#if>
		<#if tmCd?has_content>
		AND	TM_CD = :tmCd
		</#if>
		<#if upjangCd?has_content>
		AND	REQUEST_UPJANG_CD = :upjangCd
		</#if>
		<#if lclassCd?has_content>
		AND	LCLASS_CD = :lclassCd
		</#if>
		<#if mclassCd?has_content>
		AND MCLASS_CD = :mclassCd
		</#if>
		<#if sclassCd?has_content>
		AND SCLASS_CD = :sclassCd
		</#if>
		<#if requestorCd?has_content>
		AND CUSER = :requestorCd
		</#if>
		<#if dateFr?has_content && dateTo?has_content>
		AND TO_CHAR(CDATE,'YYYYMMDD') BETWEEN :dateFr AND :dateTo
		</#if>
		ORDER BY LCLASS_CD, MCLASS_CD, SCLASS_CD, REQUEST_UPJANG_CD, SEQ ASC
		]]>
	</statement>
	
	<!-- 기기/기물 신청 목록 목록을 조회한다.(이벤트 신청 포함) -->
	<statement name="selectReqRtnList2" type="select">
		/*+ com.hwfs.fs.fsm.dao.MachineRequestAllcRtnDAO.selectReqRtnList2 */
		<![CDATA[
		SELECT 
		        MU_CD
               ,TM_CD
		       ,REQUEST_UPJANG_CD
		       ,(SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = T.REQUEST_UPJANG_CD) AS REQUEST_UPJANG_NM
		       ,SEQ
		       ,LCLASS_CD
		       ,MCLASS_CD
		       ,SCLASS_CD
		       , (( SELECT NVL(SUM(QTY_DELIVERED),0) FROM FSM_UTENSIL_MASTER 
                WHERE LCLASS_CD = T.LCLASS_CD
                AND MCLASS_CD = T.MCLASS_CD
                AND SCLASS_CD = T.SCLASS_CD
                AND USE_YN = 'Y')
                -(
                NVL((SELECT  SUM(REQUEST_QUANTITY) FROM FSM_UTENSIL_REQUEST WHERE LCLASS_CD=T.LCLASS_CD AND MCLASS_CD=T.MCLASS_CD AND SCLASS_CD=T.SCLASS_CD
                      AND USE_DATE_SDATE  <= TO_CHAR(SYSDATE,'YYYYMMDD') AND RMA_DATE  >= TO_CHAR(SYSDATE,'YYYYMMDD') 
                      AND UPJANG_CHG_YN IS NULL AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NULL ),0)+
                NVL((SELECT  SUM(REQUEST_QUANTITY) FROM FSM_UTENSIL_REQUEST WHERE LCLASS_CD=T.LCLASS_CD AND MCLASS_CD=T.MCLASS_CD AND SCLASS_CD=T.SCLASS_CD
                     AND USE_DATE_SDATE  <= TO_CHAR(SYSDATE,'YYYYMMDD') AND RMA_DATE  >= TO_CHAR(SYSDATE,'YYYYMMDD') 
                     AND UPJANG_CHG_YN IS NULL AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NOT NULL AND SECOND_SIGN_STATUS = '002'),0)+
                NVL((SELECT NVL(SUM(MNGMV_QUANTITY),0) FROM FSM_UTENSIL_REQUEST WHERE  LCLASS_CD=T.LCLASS_CD AND MCLASS_CD=T.MCLASS_CD AND SCLASS_CD=T.SCLASS_CD 
                     AND MNGMV_DAYS_SDATE <= TO_CHAR(SYSDATE,'YYYYMMDD') AND MNGMV_DAYS_EDATE  >= TO_CHAR(SYSDATE,'YYYYMMDD') 
                     AND UPJANG_CHG_YN = 1 AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NULL),0)+    
                NVL((SELECT NVL(SUM(MNGMV_QUANTITY),0) FROM FSM_UTENSIL_REQUEST WHERE  LCLASS_CD=T.LCLASS_CD AND MCLASS_CD=T.MCLASS_CD AND SCLASS_CD=T.SCLASS_CD 
                     AND MNGMV_DAYS_SDATE <= TO_CHAR(SYSDATE,'YYYYMMDD') AND MNGMV_DAYS_EDATE  >= TO_CHAR(SYSDATE,'YYYYMMDD') 
                     AND UPJANG_CHG_YN = 1  AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NOT NULL AND SECOND_SIGN_STATUS = '002'),0)
                )
                -(SELECT NVL(SUM(QUANTITY),0) FROM FSM_UTENSIL_AS_HISTORY
             	WHERE CLASS = '001'
             	AND LCLASS_CD = T.LCLASS_CD
                AND MCLASS_CD = T.MCLASS_CD
                AND SCLASS_CD = T.SCLASS_CD   
             	AND REQUEST_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
             	AND END_DATE >= TO_CHAR(SYSDATE,'YYYYMMDD'))
             	-(SELECT NVL(SUM(QUANTITY),0) FROM FSM_UTENSIL_AS_HISTORY
             	WHERE CLASS = '002'
             	AND LCLASS_CD = T.LCLASS_CD
                AND MCLASS_CD = T.MCLASS_CD
                AND SCLASS_CD = T.SCLASS_CD   
             	AND END_DATE < TO_CHAR(SYSDATE,'YYYYMMDD'))
                -(SELECT NVL(SUM(REQUEST_QUANTITY),0) FROM FSC_CATERINGUTENSIL_REG
                WHERE MACHINE_CLASS_CD = T.LCLASS_CD
                AND  MACHINE_KIND_CD = T.MCLASS_CD
                AND MACHINE_CD = T.SCLASS_CD   
                AND APPRV_YN = 'Y'
                AND LEND_TERM_SDATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                AND TO_CHAR(RMA_DATE,'YYYYMMDD') >= TO_CHAR(SYSDATE,'YYYYMMDD'))
                -(SELECT NVL(SUM(X1.REQUEST_QUANTITY),0) 
                FROM FSE_EVNT_INFOREG X1 
                    ,FSE_EVNT_REQUEST X2
                WHERE X1.REQUEST_UPJANG_CD=X2.REQUEST_UPJANG_CD
                AND X1.EVNT_ID=X2.EVNT_ID
                AND X1.LCLASS_CD = T.LCLASS_CD
                AND X1.MCLASS_CD = T.MCLASS_CD
                AND X1.SCLASS_CD = T.SCLASS_CD   
                AND X2.SIGN_STATUS = '002'
                AND X1.USE_DATE_SDATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                AND X1.RMA_DATE >= TO_CHAR(SYSDATE,'YYYYMMDD'))
                ) AS RESIDUAL_QUANTITY
		       ,REQUEST_QUANTITY
		       ,REQUEST_QUANTITY AS ORG_QUANTITY
		       ,USE_DATE_SDATE
		       ,USE_DATE_EDATE
		       ,RMA_DATE
		       ,UPJANG_CHG_YN
		       ,MNGMV_UPJANG_CD
		       ,(SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = T.MNGMV_UPJANG_CD) AS MNGMV_UPJANG_NM
		       ,MNGMV_DAYS_SDATE
		       ,MNGMV_DAYS_EDATE
		       ,MNGMV_QUANTITY
		       ,RMA_QUANTITY
		       ,FIRST_SIGN_PRCG_SABUN
		       ,(SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = T.FIRST_SIGN_PRCG_SABUN) AS FIRST_SIGN_PRCG_NAME
		       ,FIRST_SIGN_STATUS
		       ,FIRST_RTN_REASON
		       ,SECOND_SIGN_PRCG_SABUN
		       ,(SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = T.SECOND_SIGN_PRCG_SABUN) AS SECOND_SIGN_PRCG_NAME
		       ,SECOND_SIGN_STATUS
		       ,SECOND_RTN_REASON
		       ,REMARK
		       ,CUSER AS CUSER_ID
               ,(SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = T.CUSER) AS CUSER_NM
               ,RMA_SABUN
               ,(SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = T.RMA_SABUN) AS RMA_SABUN_NM
		       ,CDATE
		FROM FSM_UTENSIL_REQUEST T
			,(SELECT MU_CD, MU_NM, TM_CD, TM_NM, UPJANG, UPJANGNM  FROM SCO_UPJANG_MST_V) T2
        WHERE T.REQUEST_UPJANG_CD = T2.UPJANG
		<#if muCd?has_content>
		AND	MU_CD = :muCd
		</#if>
		<#if tmCd?has_content>
		AND	TM_CD = :tmCd
		</#if>
		<#if upjangCd?has_content>
		AND	REQUEST_UPJANG_CD = :upjangCd
		</#if>
		<#if lclassCd?has_content>
		AND	LCLASS_CD = :lclassCd
		</#if>
		<#if mclassCd?has_content>
		AND MCLASS_CD = :mclassCd
		</#if>
		<#if sclassCd?has_content>
		AND SCLASS_CD = :sclassCd
		</#if>
		<#if requestorCd?has_content>
		AND CUSER = :requestorCd
		</#if>
		<#if dateFr?has_content && dateTo?has_content>
		AND TO_CHAR(CDATE,'YYYYMMDD') BETWEEN :dateFr AND :dateTo
		</#if>
		
		
    UNION ALL
    
    SELECT
                  ' ' AS MU_CD        
                  ,' ' AS TM_CD
                  ,C.REQUEST_UPJANG_CD
                  ,(SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = C.REQUEST_UPJANG_CD) AS REQUEST_UPJANG_NM
                  ,C.SEQ
    							,	A.LCLASS_CD
                  , A.MCLASS_CD
                  --, A.MCLASS_NM
                  , B.SCLASS_CD
                  --, B.SCLASS_NM
                  , (( SELECT NVL(SUM(QTY_DELIVERED), 0) FROM FSM_UTENSIL_MASTER
                        WHERE LCLASS_CD = A.LCLASS_CD AND MCLASS_CD = A.MCLASS_CD
                          AND SCLASS_CD = B.SCLASS_CD AND USE_YN = 'Y')
                     - (NVL((SELECT NVL(SUM(REQUEST_QUANTITY), 0) FROM FSM_UTENSIL_REQUEST
                              WHERE LCLASS_CD = A.LCLASS_CD AND MCLASS_CD = A.MCLASS_CD AND SCLASS_CD = B.SCLASS_CD
                                AND USE_DATE_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND RMA_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                                AND UPJANG_CHG_YN IS NULL AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NULL ), 0)
                     + NVL((SELECT NVL(SUM(REQUEST_QUANTITY), 0) FROM FSM_UTENSIL_REQUEST
                             WHERE LCLASS_CD = A.LCLASS_CD AND MCLASS_CD=A.MCLASS_CD AND SCLASS_CD = B.SCLASS_CD
                               AND USE_DATE_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND RMA_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                               AND UPJANG_CHG_YN IS NULL AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NOT NULL AND SECOND_SIGN_STATUS = '002'), 0)
                     + NVL((SELECT NVL(SUM(MNGMV_QUANTITY), 0) FROM FSM_UTENSIL_REQUEST
                             WHERE LCLASS_CD = A.LCLASS_CD AND MCLASS_CD = A.MCLASS_CD AND SCLASS_CD = B.SCLASS_CD
                               AND MNGMV_DAYS_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND MNGMV_DAYS_EDATE >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                               AND UPJANG_CHG_YN = 1 AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NULL),0)
                     + NVL((SELECT NVL(SUM(MNGMV_QUANTITY), 0) FROM FSM_UTENSIL_REQUEST
                             WHERE LCLASS_CD = A.LCLASS_CD AND MCLASS_CD = A.MCLASS_CD AND SCLASS_CD = B.SCLASS_CD
                               AND MNGMV_DAYS_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND MNGMV_DAYS_EDATE >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                               AND UPJANG_CHG_YN = 1  AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NOT NULL AND SECOND_SIGN_STATUS = '002'), 0))
                     - (SELECT NVL(SUM(QUANTITY), 0) FROM FSM_UTENSIL_AS_HISTORY
                         WHERE CLASS = '001' AND LCLASS_CD = A.LCLASS_CD AND MCLASS_CD = A.MCLASS_CD AND SCLASS_CD = B.SCLASS_CD
                           AND REQUEST_DATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND END_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
                     - (SELECT NVL(SUM(QUANTITY), 0) FROM FSM_UTENSIL_AS_HISTORY
                         WHERE CLASS = '002' AND LCLASS_CD = A.LCLASS_CD AND MCLASS_CD = A.MCLASS_CD AND SCLASS_CD = B.SCLASS_CD
                           AND END_DATE < TO_CHAR(SYSDATE, 'YYYYMMDD'))
                     - (SELECT NVL(SUM(REQUEST_QUANTITY), 0) FROM FSC_CATERINGUTENSIL_REG
                         WHERE MACHINE_CLASS_CD = A.LCLASS_CD AND  MACHINE_KIND_CD = A.MCLASS_CD AND MACHINE_CD = B.SCLASS_CD
                           AND APPRV_YN = 'Y' AND LEND_TERM_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND TO_CHAR(RMA_DATE, 'YYYYMMDD') >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
                     - (SELECT NVL(SUM(REQUEST_QUANTITY), 0) FROM FSE_EVNT_INFOREG E, FSE_EVNT_REQUEST F
                         WHERE E.EVNT_ID(+) = F.EVNT_ID AND E.LCLASS_CD = A.LCLASS_CD AND E.MCLASS_CD = A.MCLASS_CD AND E.SCLASS_CD = B.SCLASS_CD
                           
                           -- 사용일자와 종료일자 사이인 경우만 수량체크 수정 2016.08.08 FS메뉴지원팀 염수정 요청
                           AND F.SIGN_STATUS = '002' AND E.USE_DATE_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND E.USE_DATE_EDATE >= TO_CHAR(SYSDATE, 'YYYYMMDD'))          
                           --AND F.SIGN_STATUS = '002' AND E.USE_DATE_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND E.RMA_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
                           --AND E.RMA_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD'))  -- 2016.08.08 주석처리
                    ) AS RESIDUAL_QTY
                  
                   ,C.REQUEST_QUANTITY
                   ,C.REQUEST_QUANTITY AS ORG_QUANTITY
                   ,C.USE_DATE_SDATE
                   ,C.USE_DATE_EDATE
                   ,C.RMA_DATE
                   ,'' AS UPJANG_CHG_YN
                   ,null AS MNGMV_UPJANG_CD
                   ,'' AS MNGMV_UPJANG_NM
                   ,'' AS MNGMV_DAYS_SDATE
                   ,'' AS MNGMV_DAYS_EDATE
                   ,null AS MNGMV_QUANTITY
                   ,null AS RMA_QUANTITY
                   --,'' AS FIRST_SIGN_PRCG_SABUN
                   --,'' AS  FIRST_SIGN_PRCG_NAME
                   ,C.CUSER AS FIRST_SIGN_PRCG_SABUN
                   ,(SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = C.CUSER) AS FIRST_SIGN_PRCG_NAME
                   ,'' AS FIRST_SIGN_STATUS
                   ,'' AS FIRST_RTN_REASON
                   ,'' AS SECOND_SIGN_PRCG_SABUN
                   ,'' AS SECOND_SIGN_PRCG_NAME
                   ,'' AS SECOND_SIGN_STATUS
                   ,'' AS SECOND_RTN_REASON
                   ,'' AS REMARK
                   ,C.CUSER AS CUSER_ID
                   ,(SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = C.CUSER) AS CUSER_NM
                   ,'' AS RMA_SABUN
                   ,'' AS RMA_SABUN_NM
                  , C.CDATE
              FROM  FS_MCLASS A, FS_SCLASS B, FSE_EVNT_INFOREG C
             WHERE  A.USE_YN    = 'Y'
               AND  A.LCLASS_CD = B.LCLASS_CD
               AND  A.MCLASS_CD = B.MCLASS_CD
               AND  B.LCLASS_CD = C.LCLASS_CD
               AND  B.MCLASS_CD = C.MCLASS_CD
               AND  B.SCLASS_CD = C.SCLASS_CD
               <#if lclassCd?has_content>
				AND	C.LCLASS_CD = :lclassCd
				</#if>
				<#if mclassCd?has_content>
				AND C.MCLASS_CD = :mclassCd
				</#if>
				<#if sclassCd?has_content>
				AND C.SCLASS_CD = :sclassCd
				</#if>
				<#if dateFr?has_content && dateTo?has_content>
				AND TO_CHAR(C.CDATE,'YYYYMMDD') BETWEEN :dateFr AND :dateTo
				</#if>
			
		ORDER BY LCLASS_CD, MCLASS_CD, SCLASS_CD, REQUEST_UPJANG_CD, USE_DATE_SDATE, USE_DATE_EDATE, RMA_DATE, SEQ ASC
		]]>
	</statement>
	박인철 대리

	<!-- 기기/기물 신청 목록(을)를 등록한다. -->
	<statement name="insertReqRtnList" type="insert">
		/*+ com.hwfs.fs.fsm.dao.MachineRequestAllcRtnDAO.insertReqRtnList */
		<![CDATA[
		INSERT INTO FSM_UTENSIL_REQUEST(
		 REQUEST_UPJANG_CD
		,SEQ
		,LCLASS_CD
		,MCLASS_CD
		,SCLASS_CD
		,REQUEST_QUANTITY
		,USE_DATE_SDATE
		,USE_DATE_EDATE
		,RMA_DATE
		,UPJANG_CHG_YN
		,MNGMV_UPJANG_CD
		,MNGMV_DAYS_SDATE
		,MNGMV_DAYS_EDATE
		,MNGMV_QUANTITY
		,RMA_QUANTITY
		,FIRST_SIGN_PRCG_SABUN
		,FIRST_SIGN_STATUS
		,FIRST_RTN_REASON
		,SECOND_SIGN_PRCG_SABUN
		,SECOND_SIGN_STATUS
		,SECOND_RTN_REASON 
		,RMA_SABUN   
		,REMARK
		,CUSER
		,CDATE
		)VALUES(
		 --:loginUpjangCd
		 :requestUpjangCd
		,FSM_UTENSIL_REQUEST_S.NEXTVAL  
		,<#if lclassCd?has_content> :lclassCd <#else> null </#if>
		,<#if mclassCd?has_content> :mclassCd <#else> null </#if>
		,<#if sclassCd?has_content> :sclassCd <#else> null </#if>
		,<#if requestQuantity?has_content> :requestQuantity <#else> null </#if>
		,<#if useDateSdate?has_content> :useDateSdate  <#else> null </#if>
		,<#if useDateEdate?has_content> :useDateEdate  <#else> null </#if>
		,<#if rmaDate?has_content> :rmaDate  <#else> null </#if> 
		,<#if upjangChgYn?has_content> :upjangChgYn  <#else> null </#if> 
		,<#if mngmvUpjangCd?has_content> :mngmvUpjangCd  <#else> null </#if>
		,<#if mngmvDaysSdate?has_content> :mngmvDaysSdate  <#else> null </#if>
		,<#if mngmvDaysEdate?has_content> :mngmvDaysEdate  <#else> null </#if>
		,<#if mngmvQuantity?has_content> :mngmvQuantity  <#else> null </#if>
		,<#if rmaQuantity?has_content> :rmaQuantity  <#else> null </#if>
		,<#if firstSignPrcgSabun?has_content> :firstSignPrcgSabun  <#else> null </#if> 
		,<#if rmaFlag?has_content> <#if rmaFlag == 'Y'> :firstSignStatus <#else> '001' </#if> <#else> '001' </#if>  
		,<#if firstRtnReason?has_content> :firstRtnReason  <#else> null </#if> 
		,<#if secondSignPrcgSabun?has_content> :secondSignPrcgSabun  <#else> null </#if>
		,<#if secondSignPrcgSabun?has_content>'001'<#else> null </#if>
		,<#if secondRtnReason?has_content> :secondRtnReason  <#else> null </#if> 
		,<#if rmaSabun?has_content> :rmaSabun  <#else> null </#if> 
		,<#if remark?has_content> :remark  <#else> null </#if> 
		,:loginSabun 
		,SYSDATE
		)  
		]]>
	</statement>
	
	<!-- 기기/기물 신청 목록(을)를 수정한다. -->
	<statement name="updateReqRtnList" type="update">
		/*+ com.hwfs.fs.fsm.dao.MachineRequestAllcRtnDAO.updateReqRtnList */
		<![CDATA[
		UPDATE FSM_UTENSIL_REQUEST 
		SET LCLASS_CD = <#if lclassCd?has_content> :lclassCd <#else> null </#if>
	       ,MCLASS_CD = <#if mclassCd?has_content> :mclassCd <#else> null </#if>
	       ,SCLASS_CD = <#if sclassCd?has_content> :sclassCd <#else> null </#if>
	       ,REQUEST_QUANTITY = <#if requestQuantity?has_content> :requestQuantity <#else> null </#if>
	       ,USE_DATE_SDATE = <#if useDateSdate?has_content> :useDateSdate  <#else> null </#if>
	       ,USE_DATE_EDATE = <#if useDateEdate?has_content> :useDateEdate  <#else> null </#if>
	       ,RMA_DATE = <#if rmaDate?has_content> :rmaDate  <#else> null </#if>
	       ,UPJANG_CHG_YN = <#if upjangChgYn?has_content> :upjangChgYn  <#else> null </#if> 
	       ,MNGMV_UPJANG_CD = <#if mngmvUpjangCd?has_content> :mngmvUpjangCd  <#else> null </#if>
	       ,MNGMV_DAYS_SDATE = <#if mngmvDaysSdate?has_content> :mngmvDaysSdate  <#else> null </#if>
	       ,MNGMV_DAYS_EDATE = <#if mngmvDaysEdate?has_content> :mngmvDaysEdate  <#else> null </#if>
	       ,MNGMV_QUANTITY = <#if mngmvQuantity?has_content> :mngmvQuantity  <#else> null </#if>
	       ,RMA_QUANTITY = <#if rmaQuantity?has_content> :rmaQuantity  <#else> null </#if>
	       ,FIRST_SIGN_PRCG_SABUN = <#if firstSignPrcgSabun?has_content> :firstSignPrcgSabun  <#else> null </#if> 
	       ,FIRST_SIGN_STATUS = <#if firstSignStatus?has_content> :firstSignStatus  <#else> null </#if> 
	       ,FIRST_RTN_REASON = <#if firstRtnReason?has_content> :firstRtnReason  <#else> null </#if> 
	       ,SECOND_SIGN_PRCG_SABUN = <#if secondSignPrcgSabun?has_content> :secondSignPrcgSabun  <#else> null </#if>
	       ,SECOND_SIGN_STATUS = <#if secondSignStatus?has_content> :secondSignStatus  <#else> null </#if>
	       ,SECOND_RTN_REASON  = <#if secondRtnReason?has_content> :secondRtnReason  <#else> null </#if>     
	       ,RMA_SABUN = <#if rmaSabun?has_content> :rmaSabun <#else> null </#if> 
	       ,REMARK = <#if remark?has_content> :remark <#else> null </#if> 
	       ,UUSER = :loginSabun
	       ,UDATE = SYSDATE
		WHERE REQUEST_UPJANG_CD = :requestUpjangCd
		AND   SEQ = :seq   
		]]>
	</statement>

	<!-- 기기/기물 신청 목록(을)를 삭제한다. -->
	<statement name="deleteReqRtnList" type="delete">
		/*+ com.hwfs.fs.fsm.dao.MachineRequestAllcRtnDAO.deleteReqRtnList */
		<![CDATA[
		DELETE 
		FROM   FSM_UTENSIL_REQUEST 
		WHERE  REQUEST_UPJANG_CD = :requestUpjangCd
		AND    SEQ = :seq
		]]>
	</statement>

</hqml>
