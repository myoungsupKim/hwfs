<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="fs.fsc.cateringSupportRegDAO">
	<desc>케터링 지원요청 HQML Query</desc>

	<!-- 케터링 지원요청 목록을 조회한다. -->
	<statement name="selectCeleList" type="select"><![CDATA[
SELECT  
       REQUEST_UPJANG_CD        /* 신청 업장코드  */                      
     , REQUEST_ID               /* 신청ID */
   --  , SEQ                      /* 신청ID 기준 일련번호 */
     , CELE_NM                  /* 행사명  */
     , CELE_TERM_SDATE          /* 행사기간 */
     , CELE_TERM_EDATE          /* 행사기간 */
     , DECODE(LENGTH(TO_CHAR(DUTY_TIME)),3,'0'||TO_CHAR(DUTY_TIME), TO_CHAR(DUTY_TIME)) AS DUTY_TIME                /* 근무시간 */
     , SUP_HUMAN_STRENGTH_CD    /* 지원인력 */
     , NO_MAN                   /* 인원 */
     , GUEST_TYPE               /* 고객유형 */
     , SPCLFACT                 /* 장소 */
     , GUEST_NO_MAN             /* 연회 인원 */
     , CATER_MENU               /* 연회 메뉴 */
     , CATER_UPRICE             /* 연회 단가 */
     , PRCG_NM                  /* 담당자 이름 */
     , PRCG_TELNO               /* 담당자 전화번호 */
    
     , REGEXP_SUBSTR(PRCG_TELNO, '[^-]+',1,1) AS PRCG_TELNO1		/* 담당자 전화번호1 */   
     , REGEXP_SUBSTR(PRCG_TELNO, '[^-]+',1,2) AS PRCG_TELNO2		/* 담당자 전화번호2 */   
     , REGEXP_SUBSTR(PRCG_TELNO, '[^-]+',1,3) AS PRCG_TELNO3		/* 담당자 전화번호3 */   
      
--   , DECODE(NVL(ALLC_YN, '0'), 'Y', '1', '0') AS ALLC_YN           /* 배정여부 */
	 , DECODE(ALLC_YN,'Y','완료','N','대기') AS ALLC_YN 
     , CHFSML                   /* 특이사항 */     
     , DECODE(ALLC_YN,'Y', (SELECT WM_CONCAT(SCC_USERINFO_NM_KOR_FUN(ALLC_SABUN,1)) FROM FSC_CATERINGCELE_ALLC CA WHERE CA.REQUEST_ID = M.REQUEST_ID),'') AS ALLC_SABUN_NM
FROM   FSC_CATERINGCELE_REG M
    , SCO_UPJANG_MST_V B
WHERE M.REQUEST_UPJANG_CD = B.UPJANG
   AND B.FS_UPJANG = 'Y'    
<#if muCd?has_content>
AND    MU_CD = :muCd
</#if>
<#if tmCd?has_content>
AND    TM_CD = :tmCd
</#if>
<#if upjangCd?has_content>
AND    REQUEST_UPJANG_CD = :upjangCd
</#if>
AND (    TO_DATE(CELE_TERM_SDATE,'YYYYMMDD') BETWEEN TO_DATE(:fromDay,'YYYYMMDD')  AND TO_DATE(:toDay,'YYYYMMDD')
      OR TO_DATE(CELE_TERM_EDATE,'YYYYMMDD') BETWEEN TO_DATE(:fromDay,'YYYYMMDD')  AND TO_DATE(:toDay,'YYYYMMDD')
      OR TO_DATE(:fromDay,'YYYYMMDD') BETWEEN TO_DATE( CELE_TERM_SDATE,'YYYYMMDD') AND TO_DATE(CELE_TERM_EDATE,'YYYYMMDD')
      OR TO_DATE(:toDay,'YYYYMMDD') BETWEEN TO_DATE( CELE_TERM_SDATE,'YYYYMMDD') AND TO_DATE(CELE_TERM_EDATE,'YYYYMMDD')
    )
ORDER BY CDATE ASC
		]]></statement>

	<!-- 케터링 지원요청(을)를 등록한다. -->
	<statement name="insertCele" type="insert"><![CDATA[
INSERT INTO FSC_CATERINGCELE_REG (
       REQUEST_UPJANG_CD        /* 신청 업장코드 */                      
     , REQUEST_ID               /* 신청ID */
    -- , SEQ                      /* 신청ID 기준 일련번호 */
     , CELE_NM                  /* 행사명  */
     , CELE_TERM_SDATE          /* 행사기간 */
     , CELE_TERM_EDATE          /* 행사기간 */
     , DUTY_TIME                /* 근무시간 */
     , SUP_HUMAN_STRENGTH_CD    /* 지원인력 */
     , NO_MAN                   /* 인원 */
     , GUEST_TYPE               /* 고객유형 */
     , SPCLFACT                 /* 장소 */
     , GUEST_NO_MAN             /* 연회 인원 */
     , CATER_MENU               /* 연회 메뉴 */
     , CATER_UPRICE             /* 연회 단가 */
     , PRCG_NM                  /* 담당자 이름 */
     , PRCG_TELNO               /* 담당자 전화번호 */
     , ALLC_YN                  /* 배정여부 */
     , CHFSML                   /* 특이사항 */     
     , CUSER                    /* 등록자 */
     , CDATE                    /* 등록일자 */
     , UUSER                    /* 수정자 */
     , UDATE                    /* 수정일자 */    
) VALUES(
       :requestUpjangCd         									/* 신청 업장코드 */                      
     , FSC_CATERINGCELE_REG_S.NEXTVAL               				/* 신청ID */
   --  , 1                     										/* 신청ID 기준 일련번호 */
     , :celeNm                  									/* 행사명  */
     , :celeTermSdate          										/* 행사기간 */
     , :celeTermEdate          										/* 행사기간 */
     , <#if dutyTime?exists> :dutyTime <#else> null </#if>          /* 근무시간 */
     , :supHumanStrengthCd      									/* 지원인력 */
     , :noMan                   									/* 인원 */
     , <#if guestType?exists> :guestType <#else> null </#if>        /* 고객유형 */
     , <#if spclfact?exists> :spclfact <#else> null </#if>          /* 장소 */
     , :guestNoMan       											/* 연회 인원 */
     , :caterMenu               									/* 연회 메뉴 */
     , :caterUprice             									/* 연회 단가 */
     , <#if prcgNm?exists> :prcgNm <#else> null </#if>              /* 담당자 이름 */
     , <#if prcgTelno1?exists> :prcgTelno1 <#else> null </#if>
        ||'-'|| 
       <#if prcgTelno2?exists> :prcgTelno2 <#else> null </#if>  
        ||'-'|| 
       <#if prcgTelno3?exists> :prcgTelno3 <#else> null </#if>    	/* 담당자 전화번호 */
     , 'N'                  										/* 배정여부 */
     , <#if chfsml?exists> :chfsml <#else> null </#if>              /* 특이사항 */     
     , :loginSabun                   								/* 등록자 */
     , SYSDATE                   									/* 등록일자 */
     , :loginSabun                  								/* 수정자 */
     , SYSDATE                   									/* 수정일자 */    
)     
]]></statement>

	<!-- 케터링 지원요청(을)를 수정한다. -->
	<statement name="updateCele" type="update"><![CDATA[
UPDATE FSC_CATERINGCELE_REG SET 
       CELE_NM                = :celeNm               										/* 행사명  */
     , CELE_TERM_SDATE        = :celeTermSdate       										/* 행사기간 */
     , CELE_TERM_EDATE        = :celeTermEdate       										/* 행사기간 */
     , DUTY_TIME              = <#if dutyTime?exists> :dutyTime <#else> null </#if>         /* 근무시간 */
     , SUP_HUMAN_STRENGTH_CD  = :supHumanStrengthCd   										/* 지원인력 */
     , NO_MAN                 = :noMan                										/* 인원 */
     , GUEST_TYPE             = <#if guestType?exists> :guestType <#else> null </#if>       /* 고객유형 */
     , SPCLFACT               = <#if spclfact?exists> :spclfact <#else> null </#if>         /* 장소 */
     , GUEST_NO_MAN      = :guestNoMan											       /* 연회 인원 */
     , CATER_MENU             = :caterMenu            										/* 연회 메뉴 */
     , CATER_UPRICE           = :caterUprice          										/* 연회 단가 */
     , PRCG_NM                = <#if prcgNm?exists> :prcgNm <#else> null </#if>             /* 담당자 이름 */
     , PRCG_TELNO             = <#if prcgTelno1?exists> :prcgTelno1 <#else> null </#if>
		 				         ||'-'|| 
						        <#if prcgTelno2?exists> :prcgTelno2 <#else> null </#if>  
						         ||'-'|| 
						        <#if prcgTelno3?exists> :prcgTelno3 <#else> null </#if>    	/* 담당자 전화번호 */
     , CHFSML                 = <#if chfsml?exists> :chfsml <#else> null </#if>             /* 특이사항 */     
     , UUSER                  = :loginSabun                									/* 수정자 */
     , UDATE                  = SYSDATE               /* 수정일자 */        
WHERE  REQUEST_UPJANG_CD      = :requestUpjangCd      /* 신청 업장코드 */                      
  AND REQUEST_ID              = :requestId            /* 신청ID */
 -- AND SEQ                     = :seq                  /* 신청ID 기준 일련번호 */      
  AND ALLC_YN                 = 'N' 				/* 배정여부 */]]></statement>

	<!-- 케터링 지원요청(을)를 삭제한다. -->
	<statement name="deleteCele" type="delete"><![CDATA[
DELETE 
FROM   FSC_CATERINGCELE_REG 
WHERE  REQUEST_UPJANG_CD      = :requestUpjangCd      /* 신청 업장코드 */                      
  AND REQUEST_ID              = :requestId            /* 신청ID */
 -- AND SEQ                     = :seq                  /* 신청ID 기준 일련번호 */    
  AND ALLC_YN                 = 'N' 				/* 배정여부 */		]]></statement>

	<statement name="selectCookHumanList"><![CDATA[
/*+ fs.fsc.cateringSupportRegDAO.selectCookHumanList */ 
SELECT 
       REQUEST_UPJANG_CD       /* 신청 업장코드 */
  --   , SEQ                     /* 신청ID */ 
     , REQUEST_ID              /* 신청ID 기준 일련번호*/ 
     , SUP_TERM_SDATE          /* 지원기간  */ 
     , SUP_TERM_EDATE          /* 지원기간  */  
     , DUTY_TIME               /* 근무기간 */ 
    -- , DECODE(LENGTH(TO_CHAR(DUTY_TIME)),3,'0'||TO_CHAR(DUTY_TIME), TO_CHAR(DUTY_TIME)) AS DUTY_TIME
     , SUP_HUMAN_STRENGTH_CD   /* 지원인력*/ 
     , NO_MAN                  /* 인원  */ 
 --  , DECODE(NVL(ALLC_YN, '0'), 'Y', '1', '0') AS ALLC_YN                 /* 배정여부 */ 
     , DECODE(ALLC_YN,'Y','완료','N','대기') AS ALLC_YN 
     , REQUEST_REASON          /* 요청사유 */
     , DECODE(ALLC_YN,'Y',(SELECT WM_CONCAT(SCC_USERINFO_NM_KOR_FUN(ALLC_SABUN,1)) FROM FSC_CATERINGCELE_ALLC CA WHERE CA.REQUEST_ID = M.REQUEST_ID), '') AS ALLC_SABUN_NM 
FROM   FSC_CATERINGCOOKHUMAN_REG M
    , SCO_UPJANG_MST_V B
WHERE M.REQUEST_UPJANG_CD = B.UPJANG
   AND B.FS_UPJANG = 'Y'    
<#if muCd?has_content>
AND    MU_CD = :muCd
</#if>
<#if tmCd?has_content>
AND    TM_CD = :tmCd
</#if>
<#if upjangCd?has_content>
AND    REQUEST_UPJANG_CD = :upjangCd
</#if>
AND (    TO_DATE(SUP_TERM_SDATE,'YYYYMMDD') BETWEEN TO_DATE(:fromDay,'YYYYMMDD')  AND TO_DATE(:toDay,'YYYYMMDD')
      OR TO_DATE(SUP_TERM_EDATE,'YYYYMMDD') BETWEEN TO_DATE(:fromDay,'YYYYMMDD')  AND TO_DATE(:toDay,'YYYYMMDD')
      OR TO_DATE(:fromDay,'YYYYMMDD') BETWEEN TO_DATE( SUP_TERM_SDATE,'YYYYMMDD') AND TO_DATE(SUP_TERM_EDATE,'YYYYMMDD')
      OR TO_DATE(:toDay,'YYYYMMDD') BETWEEN TO_DATE( SUP_TERM_SDATE,'YYYYMMDD') AND TO_DATE(SUP_TERM_EDATE,'YYYYMMDD')
    )
ORDER BY CDATE ASC]]></statement>
	<statement name="selectUtensilList"><![CDATA[
SELECT 
       REQUEST_UPJANG_CD    /* 신청 업장코드 */ 
     , REQUEST_ID           /* 신청ID */ 
    -- , SEQ                  /* 신청ID 기준 일련번호 */ 
     , CELE_NM              /* 행사명  */      
     , LEND_TERM_SDATE      /* 대여기간 */ 
     , LEND_TERM_EDATE      /* 대여기간 */      
     , MACHINE_CLASS_CD     /* 기기/기물 구분 */ 
     , (
        SELECT LCLASS_NM 
          FROM FS_LCLASS S
         WHERE S.LCLASS_CD = M.MACHINE_CLASS_CD
           AND USE_YN = 'Y'
           AND ROWNUM = 1
        )                                               AS MACHINE_CLASS_NM
     , MACHINE_KIND_CD      /* 기기/기물 종류  */ 
     
     , (
        SELECT MCLASS_NM 
          FROM FS_MCLASS S
         WHERE S.MCLASS_CD = M.MACHINE_KIND_CD
           AND USE_YN = 'Y'
           AND ROWNUM = 1
        )                                               AS MACHINE_KIND_NM     
     , MACHINE_CD           /* 기기/기물 기물명 */ 
     , (
        SELECT SCLASS_NM 
          FROM FS_SCLASS S
         WHERE S.SCLASS_CD = M.MACHINE_CD
           AND USE_YN = 'Y'
           AND ROWNUM = 1
        )                                               AS MACHINE_NM
     , RMA_QUANTITY         /* 잔여수량 */ 
     , REQUEST_QUANTITY     /* 신청수량 */
     , REQUEST_QUANTITY AS ORG_QUANTITY     /* 신청수량 */ 
     , RMA_DATE                    /* 반납일자  */
 --  , DECODE(NVL(APPRV_YN, '0'), 'Y', '1', '0') AS APPRV_YN             /* 승인여부 */ 
     , DECODE(APPRV_YN,'Y','완료','N','대기') AS APPRV_YN 
     /*, CNTC_NUM              연락처  */ 
     , SCC_CRYPTO.DEC_FUN(CNTC_NUM_ENC) AS  CNTC_NUM       /* 연락처 암호화 */ 
    -- , SUBSTR( ZIP_CODE , 0, 3) AS ZIP_CODE1            /* 우편번호 */ 
  --   , SUBSTR( ZIP_CODE , 4)    AS ZIP_CODE2            /* 우편번호 */
   --  /*, ADDR                  주소 */ 
     , SCC_CRYPTO.DEC_FUN(M.ADDR_ENC) AS ADDR             /* 주소 암호화 */      
     , TRANSPORT_MTOD1      /* 운송방법  */ 
     , TRANSPORT_MTOD2      /* 운송방법 */ 
     , FIRST_SIGN_PRCG_EMP		/* 결재자 */
     , DECODE(APPRV_YN,'Y', SCC_USERINFO_NM_KOR_FUN(M.FIRST_SIGN_PRCG_EMP, 1), '') AS FIRST_SIGN_PRCG_EMP_NM    /* 배정 담당 이름 */
     , SCC_ADDR_FUN(M.ADDR_KEY, :loginPersMask, :maskAuth) AS ADDR_INFO
     , M.ADDR_KEY
FROM   FSC_CATERINGUTENSIL_REG M
    , SCO_UPJANG_MST_V B
WHERE M.REQUEST_UPJANG_CD = B.UPJANG
   AND B.FS_UPJANG = 'Y'    
<#if muCd?has_content>
AND    MU_CD = :muCd
</#if>
<#if tmCd?has_content>
AND    TM_CD = :tmCd
</#if>
<#if upjangCd?has_content>
AND    REQUEST_UPJANG_CD = :upjangCd
</#if>
AND (    TO_DATE(LEND_TERM_SDATE,'YYYYMMDD') BETWEEN TO_DATE(:fromDay,'YYYYMMDD')  AND TO_DATE(:toDay,'YYYYMMDD')
      OR TO_DATE(LEND_TERM_EDATE,'YYYYMMDD') BETWEEN TO_DATE(:fromDay,'YYYYMMDD')  AND TO_DATE(:toDay,'YYYYMMDD')
      OR TO_DATE(:fromDay,'YYYYMMDD') BETWEEN TO_DATE( LEND_TERM_SDATE,'YYYYMMDD') AND TO_DATE(LEND_TERM_EDATE,'YYYYMMDD')
      OR TO_DATE(:toDay,'YYYYMMDD')   BETWEEN TO_DATE( LEND_TERM_SDATE,'YYYYMMDD') AND TO_DATE(LEND_TERM_EDATE,'YYYYMMDD')
    )
ORDER BY CDATE ASC]]></statement>
	<statement name="selectCookGuidList"><![CDATA[
SELECT  
       REQUEST_UPJANG_CD    /* 신청 업장코드 */ 
     , REQUEST_ID           /* 신청ID */ 
   --  , SEQ                  /* 신청ID 기준 일련번호 */ 
     , GUID_TERM_SDATE      /* 지도기간 */ 
     , GUID_TERM_EDATE      /* 지도기간 */ 
   --  , GUID_TIME            /* 지도시간 */ 
     , DECODE(LENGTH(TO_CHAR(GUID_TIME)),3,'0'||TO_CHAR(GUID_TIME), TO_CHAR(GUID_TIME)) AS GUID_TIME
     , EDU_TRGLST           /* 교육대상자 */ 
     , NO_MAN               /* 인원 */ 
--   , DECODE(NVL(ALLC_YN, '0'), 'Y', '1', '0') AS ALLC_YN              /* 배정여부 */ 
	 , DECODE(ALLC_YN,'Y','완료','N','대기') AS ALLC_YN 
     , REQUEST_FACT         /* 요청사항 */ 
     , DECODE(ALLC_YN,'Y',(SELECT WM_CONCAT(SCC_USERINFO_NM_KOR_FUN(ALLC_SABUN,1)) FROM FSC_CATERINGCELE_ALLC CA WHERE CA.REQUEST_ID = M.REQUEST_ID), '') AS ALLC_SABUN_NM
FROM   FSC_CATERINGCOOKGUID_REG M
    , SCO_UPJANG_MST_V B
WHERE M.REQUEST_UPJANG_CD = B.UPJANG
   AND B.FS_UPJANG = 'Y'    
<#if muCd?has_content>
AND    MU_CD = :muCd
</#if>
<#if tmCd?has_content>
AND    TM_CD = :tmCd
</#if>
<#if upjangCd?has_content>
AND    REQUEST_UPJANG_CD = :upjangCd
</#if>
AND (    TO_DATE(GUID_TERM_SDATE,'YYYYMMDD') BETWEEN TO_DATE(:fromDay,'YYYYMMDD')  AND TO_DATE(:toDay,'YYYYMMDD')
      OR TO_DATE(GUID_TERM_EDATE,'YYYYMMDD') BETWEEN TO_DATE(:fromDay,'YYYYMMDD')  AND TO_DATE(:toDay,'YYYYMMDD')
      OR TO_DATE(:fromDay,'YYYYMMDD') BETWEEN TO_DATE( GUID_TERM_SDATE,'YYYYMMDD') AND TO_DATE(GUID_TERM_EDATE,'YYYYMMDD')
      OR TO_DATE(:toDay,'YYYYMMDD')   BETWEEN TO_DATE( GUID_TERM_SDATE,'YYYYMMDD') AND TO_DATE(GUID_TERM_EDATE,'YYYYMMDD')
    )
ORDER BY CDATE ASC]]></statement>
	<statement name="insertCookHuman"><![CDATA[INSERT INTO FSC_CATERINGCOOKHUMAN_REG (
       REQUEST_UPJANG_CD       /* 신청 업장코드 */
   --  , SEQ                     /* 신청ID 기준 일련번호*/ 
     , REQUEST_ID              /* 신청ID*/ 
     , SUP_TERM_SDATE          /* 지원기간  */ 
     , SUP_TERM_EDATE          /* 지원기간  */  
     , DUTY_TIME               /* 근무기간 */ 
     , SUP_HUMAN_STRENGTH_CD   /* 지원인력*/ 
     , NO_MAN                  /* 인원  */ 
     , ALLC_YN                 /* 배정여부 */ 
     , REQUEST_REASON          /* 요청사유 */ 
     , CUSER                   /* */ 
     , CDATE                   /* */ 
     , UUSER                   /* */ 
     , UDATE                   /* */   
)VALUES(  
       :requestUpjangCd        /* 신청 업장코드 */
  --   , 1                     	/* 신청ID 기준 일련번호  */ 
     , FSC_CATERINGCOOKHUMAN_REG_S.nextval               /* 신청ID */ 
     , :supTermSdate            /* 지원기간  */ 
     , :supTermEdate            /* 지원기간  */  
     , <#if dutyTime?exists> :dutyTime <#else> null </#if>                /* 근무기간 */ 
     , :supHumanStrengthCd      /* 지원인력*/ 
     , :noMan                   /* 인원  */ 
     , 'N'                  	/* 배정여부 */ 
     , <#if requestReason?exists> :requestReason <#else> null </#if>           /* 요청사유 */ 
     , :loginSabun              /* */ 
     , SYSDATE                  /* */ 
     , :loginSabun              /* */ 
     , SYSDATE                  /* */   
)]]></statement>
	<statement name="updateCookHuman"><![CDATA[
UPDATE FSC_CATERINGCOOKHUMAN_REG SET 
       SUP_TERM_SDATE        = :supTermSdate          /* 지원기간  */ 
     , SUP_TERM_EDATE        = :supTermEdate          /* 지원기간  */  
     , DUTY_TIME             = <#if dutyTime?exists> :dutyTime <#else> null </#if>              /* 근무기간 */ 
     , SUP_HUMAN_STRENGTH_CD = :supHumanStrengthCd    /* 지원인력*/ 
     , NO_MAN                = :noMan                 /* 인원  */ 
/*     , ALLC_YN               = :allcYn                 배정여부 */ 
     , REQUEST_REASON        = <#if requestReason?exists> :requestReason <#else> null </#if>         /* 요청사유 */ 
     , UUSER                 = :loginSabun            /* 수정자 */ 
     , UDATE                 = SYSDATE                 /* 수정일자 */ 
WHERE REQUEST_UPJANG_CD      = :requestUpjangCd       /* 신청 업장코드 */
  AND REQUEST_ID            = :requestId             /* 신청ID 기준 일련번호 */   
  --AND SEQ                   = :seq                   /* 신청ID */ 
  AND ALLC_YN                 = 'N' 				/* 배정여부 */]]></statement>
	<statement name="deleteCookHuman"><![CDATA[DELETE FROM FSC_CATERINGCOOKHUMAN_REG
WHERE REQUEST_UPJANG_CD      = :requestUpjangCd       /* 신청 업장코드 */
 -- AND SEQ                   = :seq                   /* 신청ID 기준 일련번호*/ 
  AND REQUEST_ID            = :requestId             /* 신청ID */ 
  AND ALLC_YN                 = 'N' 				/* 배정여부 */]]></statement>
	<statement name="insertUtensil"><![CDATA[ 

INSERT INTO FSC_CATERINGUTENSIL_REG (
       REQUEST_UPJANG_CD      /*  */ 
     , REQUEST_ID             /*  */ 
  --   , SEQ                    /*  */ 
     , CELE_NM                /* 행사명  */      
     , LEND_TERM_SDATE        /* 대여기간 */ 
     , LEND_TERM_EDATE        /* 대여기간 */      
     , MACHINE_CLASS_CD       /* 기기/기물 구분 */ 
     , MACHINE_KIND_CD        /* 기기/기물 종류  */ 
     , MACHINE_CD             /* 기기/기물 기물명 */ 
     , RMA_QUANTITY           /* 잔여수량 */ 
     , REQUEST_QUANTITY       /* 신청수량 */ 
     , RMA_DATE                      /* 반납일자  */
     , APPRV_YN               /* 승인여부 */ 
     , CNTC_NUM_ENC           /* 연락처 암호화 */ 
   --  , ZIP_CODE               /* 우편번호 */
   --  , ADDR_ENC               /* 주소 암호화 */
     , ADDR_KEY                 /* ADDR_KEY */      
     , TRANSPORT_MTOD1        /* 운송방법  */ 
     , TRANSPORT_MTOD2        /* 운송방법 */ 
     , CUSER                  /*  */
     , CDATE                  /*  */ 
     , UUSER                  /*  */ 
     , UDATE                  /*  */
     , FIRST_SIGN_PRCG_EMP
      
) VALUES (                    
       :requestUpjangCd        /*  */ 
     , FSC_CATERINGCELE_REG_S.NEXTVAL              /*  */ 
  --   , 1                    /*  */ 
     , :celeNm                 /* 행사명  */      
     , :lendTermSdate          /* 대여기간 */ 
     , :lendTermEdate          /* 대여기간 */      
     , :machineClassCd         /* 기기/기물 구분 */ 
     , :machineKindCd          /* 기기/기물 종류  */ 
     , :machineCd              /* 기기/기물 기물명 */ 
     , :rmaQuantity            /* 잔여수량 */ 
     , :requestQuantity        /* 신청수량 */ 
     ,  TO_DATE(:rmaDate,'YYYY-MM-DD')                         /* 반납일자  */
     , 'N'                /* 승인여부 */ 
     , <#if cntcNum?exists> SCC_CRYPTO.ENC_FUN(:cntcNum) <#else> null </#if>              /* 연락처 암호화 */ 
   --  , <#if zipCode1?exists> :zipCode1 || :zipCode2  <#else> null </#if>   /* 우편번호 */
    -- , <#if addr?exists> SCC_CRYPTO.ENC_FUN(:addr || <#if addrDetail?exists> :addrDetail <#else> null </#if>) <#else> null </#if>                  /* 주소 암호화 */      
     , <#if addrKey?exists> :addrKey <#else> null </#if>
     , <#if transportMtod1?exists> :transportMtod1 <#else> null </#if>          /* 운송방법  */
     , <#if transportMtod2?exists> :transportMtod2 <#else> null </#if>         /* 운송방법 */ 
     , :loginSabun                  /*  */
     , SYSDATE                /*  */ 
     , :loginSabun                  /*  */ 
     , SYSDATE                 /*  */ 
     , :firstSignPrcgEmp
)]]></statement>
	<statement name="updateUtensil"><![CDATA[UPDATE FSC_CATERINGUTENSIL_REG SET 
       CELE_NM            = :celeNm                  /* 행사명  */      
     , LEND_TERM_SDATE    = :lendTermSdate           /* 대여기간 */ 
     , LEND_TERM_EDATE    = :lendTermEdate           /* 대여기간 */      
     , MACHINE_CLASS_CD   = :machineClassCd          /* 기기/기물 구분 */ 
     , MACHINE_KIND_CD    = :machineKindCd           /* 기기/기물 종류  */ 
     , MACHINE_CD         = :machineCd               /* 기기/기물 기물명 */ 
     , RMA_QUANTITY       = :rmaQuantity             /* 잔여수량 */ 
     , REQUEST_QUANTITY   = :requestQuantity         /* 신청수량 */ 
     , RMA_DATE           = TO_DATE(:rmaDate,'YYYY-MM-DD')            /* 반납일자  */
     , CNTC_NUM_ENC       = <#if cntcNum?exists> SCC_CRYPTO.ENC_FUN(:cntcNum) <#else> null </#if>              /* 연락처 암호화 */ 
    -- , ZIP_CODE           = <#if zipCode1?exists> :zipCode1 || :zipCode2  <#else> null </#if>     /* 우편번호 */
    -- , ADDR_ENC           = <#if addr?exists> SCC_CRYPTO.ENC_FUN(:addr || <#if addrDetail?exists> :addrDetail <#else> null </#if>) <#else> null </#if>                /* 주소 암호화 */
     , ADDR_KEY             =  <#if addrKey?exists> :addrKey </#if>                                                /* ADDRKEY */       
     , TRANSPORT_MTOD1    = <#if transportMtod1?exists> :transportMtod1 <#else> null </#if>           /* 운송방법  */ 
     , TRANSPORT_MTOD2    = <#if transportMtod2?exists> :transportMtod2 <#else> null </#if>           /* 운송방법 */ 
     , UUSER              = :loginSabun                   /*  */ 
     , UDATE              = SYSDATE                   /*  */
     , FIRST_SIGN_PRCG_EMP    = :firstSignPrcgEmp 
WHERE  REQUEST_UPJANG_CD  = :requestUpjangCd         /*  */ 
   AND REQUEST_ID         = :requestId               /*  */ 
 --  AND SEQ                = :seq                     /*  */ 
   AND APPRV_YN                 = 'N' 				/* 승인여부 */ ]]></statement>
	<statement name="deleteUtensil"><![CDATA[DELETE FROM FSC_CATERINGUTENSIL_REG
WHERE  REQUEST_UPJANG_CD  = :requestUpjangCd         /*  */ 
   AND REQUEST_ID         = :requestId               /*  */ 
  -- AND SEQ                = :seq                     /*  */ 
   AND APPRV_YN                 = 'N' 				/* 승인여부 */ ]]></statement>
	<statement name="insertCookGuid"><![CDATA[
INSERT INTO FSC_CATERINGCOOKGUID_REG (
       REQUEST_UPJANG_CD    /* 업장 */ 
     , REQUEST_ID           /*  */ 
   --  , SEQ                  /*  */ 
     , GUID_TERM_SDATE      /* 지도기간 */ 
     , GUID_TERM_EDATE      /* 지도기간 */ 
     , GUID_TIME            /* 지도시간 */ 
     , EDU_TRGLST           /* 교육대상자 */ 
     , NO_MAN               /* 인원 */ 
     , ALLC_YN              /* 배정여부 */ 
     , REQUEST_FACT         /* 요청사항 */ 
     , CUSER                /*  */ 
     , CDATE                /*  */ 
     , UUSER                /*  */ 
     , UDATE                /*  */    
) VALUES ( 
       :requestUpjangCd     /* 업장 */ 
     , FSC_CATERINGCELE_REG_S.NEXTVAL           /*  */ 
   --  , 1                 /*  */ 
     , :guidTermSdate       /* 지도기간 */ 
     , :guidTermEdate       /* 지도기간 */ 
     , <#if guidTime?exists> :guidTime <#else> null </#if>            /* 지도시간 */ 
     , :eduTrglst           /* 교육대상자 */ 
     , :noMan               /* 인원 */ 
     , 'N'              /* 배정여부 */ 
     , <#if requestFact?exists> :requestFact <#else> null </#if>           /* 요청사항 */ 
     , :loginSabun               /*  */ 
     , SYSDATE               /*  */ 
     , :loginSabun               /*  */ 
     , SYSDATE               /*  */    
)]]></statement>
	<statement name="updateCookGuid"><![CDATA[
UPDATE FSC_CATERINGCOOKGUID_REG SET        
       GUID_TERM_SDATE   = :guidTermSdate      /* 지도기간 */ 
     , GUID_TERM_EDATE   = :guidTermEdate      /* 지도기간 */ 
     , GUID_TIME         = <#if guidTime?exists> :guidTime <#else> null </#if>          /* 지도시간 */ 
     , EDU_TRGLST        = :eduTrglst          /* 교육대상자 */ 
     , NO_MAN            = :noMan              /* 인원 */ 
     , ALLC_YN           = 'N'             /* 배정여부 */ 
     , REQUEST_FACT      = <#if requestFact?exists> :requestFact <#else> null </#if>       /* 요청사항 */
     , UUSER             = :loginSabun              /*  */ 
     , UDATE             = SYSDATE              /*  */ 
WHERE  REQUEST_UPJANG_CD = :requestUpjangCd    /* 업장 */ 
  AND REQUEST_ID        = :requestId          /*  */ 
 -- AND SEQ               = :seq                /*  */ 
  AND ALLC_YN                 = 'N' 				/* 배정여부 */]]></statement>
	<statement name="deleteCookGuid"><![CDATA[DELETE FROM FSC_CATERINGCOOKGUID_REG
WHERE  REQUEST_UPJANG_CD = :requestUpjangCd    /* 업장 */ 
  AND REQUEST_ID        = :requestId          /*  */ 
--  AND SEQ               = :seq                /*  */ 
  AND ALLC_YN                 = 'N' 				/* 배정여부 */]]></statement>


	<statement name="selectQuantity">
		<![CDATA[
	 			SELECT
                     C.LCLASS_CD
                    ,C.LCLASS_NM
                    ,B.MCLASS_CD
                    ,B.MCLASS_NM
                    ,A.SCLASS_CD
                    ,A.SCLASS_NM
                    , (( SELECT NVL(SUM(QTY_DELIVERED),0) FROM FSM_UTENSIL_MASTER 
                       WHERE LCLASS_CD = A.LCLASS_CD
                       AND MCLASS_CD = A.MCLASS_CD
                       AND SCLASS_CD = A.SCLASS_CD
                       AND USE_YN = 'Y')
                       -(
                       NVL((SELECT  SUM(REQUEST_QUANTITY) FROM FSM_UTENSIL_REQUEST WHERE LCLASS_CD=A.LCLASS_CD AND MCLASS_CD=A.MCLASS_CD AND SCLASS_CD=A.SCLASS_CD
                             AND USE_DATE_SDATE  <= TO_CHAR(SYSDATE,'YYYYMMDD') AND RMA_DATE  >= TO_CHAR(SYSDATE,'YYYYMMDD') 
                             AND UPJANG_CHG_YN IS NULL AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NULL ),0)+
                       NVL((SELECT  SUM(REQUEST_QUANTITY) FROM FSM_UTENSIL_REQUEST WHERE LCLASS_CD=A.LCLASS_CD AND MCLASS_CD=A.MCLASS_CD AND SCLASS_CD=A.SCLASS_CD
                            AND USE_DATE_SDATE  <= TO_CHAR(SYSDATE,'YYYYMMDD') AND RMA_DATE  >= TO_CHAR(SYSDATE,'YYYYMMDD') 
                            AND UPJANG_CHG_YN IS NULL AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NOT NULL AND SECOND_SIGN_STATUS = '002'),0)+
                       NVL((SELECT NVL(SUM(MNGMV_QUANTITY),0) FROM FSM_UTENSIL_REQUEST WHERE  LCLASS_CD=A.LCLASS_CD AND MCLASS_CD=A.MCLASS_CD AND SCLASS_CD=A.SCLASS_CD 
                            AND MNGMV_DAYS_SDATE <= TO_CHAR(SYSDATE,'YYYYMMDD') AND MNGMV_DAYS_EDATE  >= TO_CHAR(SYSDATE,'YYYYMMDD') 
                            AND UPJANG_CHG_YN = 1 AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NULL),0)+    
                       NVL((SELECT NVL(SUM(MNGMV_QUANTITY),0) FROM FSM_UTENSIL_REQUEST WHERE  LCLASS_CD=A.LCLASS_CD AND MCLASS_CD=A.MCLASS_CD AND SCLASS_CD=A.SCLASS_CD 
                            AND MNGMV_DAYS_SDATE <= TO_CHAR(SYSDATE,'YYYYMMDD') AND MNGMV_DAYS_EDATE  >= TO_CHAR(SYSDATE,'YYYYMMDD') 
                            AND UPJANG_CHG_YN = 1  AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NOT NULL AND SECOND_SIGN_STATUS = '002'),0)
                       )
                       -(SELECT NVL(SUM(QUANTITY),0) FROM FSM_UTENSIL_AS_HISTORY
                     WHERE CLASS = '001'
                     AND LCLASS_CD = A.LCLASS_CD
                       AND MCLASS_CD = A.MCLASS_CD
                       AND SCLASS_CD = A.SCLASS_CD   
                     AND REQUEST_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                     AND END_DATE >= TO_CHAR(SYSDATE,'YYYYMMDD'))
                     -(SELECT NVL(SUM(QUANTITY),0) FROM FSM_UTENSIL_AS_HISTORY
                     WHERE CLASS = '002'
                     AND LCLASS_CD = A.LCLASS_CD
                       AND MCLASS_CD = A.MCLASS_CD
                       AND SCLASS_CD = A.SCLASS_CD   
                     AND END_DATE < TO_CHAR(SYSDATE,'YYYYMMDD'))
                       -(SELECT NVL(SUM(REQUEST_QUANTITY),0) FROM FSC_CATERINGUTENSIL_REG
                       WHERE MACHINE_CLASS_CD = A.LCLASS_CD
                       AND  MACHINE_KIND_CD = A.MCLASS_CD
                       AND MACHINE_CD = A.SCLASS_CD   
                     --  AND APPRV_YN = 'Y'
                       AND LEND_TERM_SDATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                       AND TO_CHAR(RMA_DATE,'YYYYMMDD') >= TO_CHAR(SYSDATE,'YYYYMMDD'))
                       -(SELECT NVL(SUM(X1.REQUEST_QUANTITY),0) 
                       FROM FSE_EVNT_INFOREG X1 
                           ,FSE_EVNT_REQUEST X2
                       WHERE X1.REQUEST_UPJANG_CD=X2.REQUEST_UPJANG_CD
                       AND X1.EVNT_ID=X2.EVNT_ID
                       AND X1.LCLASS_CD = A.LCLASS_CD
                       AND X1.MCLASS_CD = A.MCLASS_CD
                       AND X1.SCLASS_CD = A.SCLASS_CD   
                       AND X2.SIGN_STATUS = '002'
                       AND X1.USE_DATE_SDATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                       AND X1.RMA_DATE >= TO_CHAR(SYSDATE,'YYYYMMDD'))
                       ) AS RESIDUAL_QTY
            FROM FS_SCLASS A
                ,FS_MCLASS B  
                ,FS_LCLASS C
            WHERE A.USE_YN = 'Y'
            AND A.LCLASS_CD = B.LCLASS_CD
            AND A.LCLASS_CD = C.LCLASS_CD
            AND B.LCLASS_CD = C.LCLASS_CD  
            AND A.MCLASS_CD = B.MCLASS_CD  
            AND C.LCLASS_CD = :machineClassCd
            AND B.MCLASS_CD = :machineKindCd
            AND A.SCLASS_CD = :machineCd  
	  ]]>
  </statement>
  
  <!-- 사업장 기준정보 목록을 조회한다 -->
  <statement name="selectListUpjangInfo"><![CDATA[
SELECT 
	SCC_CRYPTO.DEC_FUN(CHARGE_SABUNHP_ENC) AS SABUNHP,
    SCC_CRYPTO.DEC_FUN(UPJANG_TEL_ENC)  AS CNTC_NUM,
    SCC_TELNO_SPLIT_FUN(SCC_CRYPTO.DEC_FUN(CHARGE_SABUNHP_ENC), 1)  AS HP_NO1,
    SCC_TELNO_SPLIT_FUN(SCC_CRYPTO.DEC_FUN(CHARGE_SABUNHP_ENC), 2)  AS HP_NO2,
    SCC_TELNO_SPLIT_FUN(SCC_CRYPTO.DEC_FUN(CHARGE_SABUNHP_ENC), 3)  AS HP_NO3,
    SCC_TELNO_SPLIT_FUN(SCC_CRYPTO.DEC_FUN(UPJANG_TEL_ENC), 1) AS TEL_NO1,
    SCC_TELNO_SPLIT_FUN(SCC_CRYPTO.DEC_FUN(UPJANG_TEL_ENC), 2) AS TEL_NO2,
    SCC_TELNO_SPLIT_FUN(SCC_CRYPTO.DEC_FUN(UPJANG_TEL_ENC), 3) AS TEL_NO3,
    ADDR_KEY,
    SCC_ADDR_FUN(ADDR_KEY, 'YYYYYYYYYYYYYY', '0') AS ADDR_INFO
    --SCC_CRYPTO.DEC_FUN(DELIVERY_ADDR_ENC)  AS ADDR_DETAIL
  --  SUBSTR(DELIVERY_POSTNO,1,3) AS ZIP_CODE1,
  --  SUBSTR(DELIVERY_POSTNO,5,3) AS ZIP_CODE2

  	FROM SCO_UPJANG_MST_V
	WHERE UPJANG = :upjangCd
]]></statement>
  
  
</hqml>

