<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="sc.cmn.custSearchDAO">
	<desc>거래처 HQML Query</desc>

	<!-- 거래처 목록을 조회한다. -->
	<statement name="selectStCustList" type="select">
		/*+ com.hwfs.sc.cmn.dao.CustSearchDAO.selectList */
		<![CDATA[
SELECT DISTINCT
       A.CUSTCD,
       TO_CHAR(A.CUSTCD) AS CUST_CODE,
       A.SAP_CUST_CD,
       A.CUST_GRP_CD,
       A.CUSTTYPE,
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'Z01' AND CODE = A.CUSTTYPE) AS CUSTTYPENM,
       A.CUSTGUBUN,
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'Z02' AND CODE = A.CUSTGUBUN) AS CUSTGUBUNNM,
       A.CUSTNM,
       A.CUSTNM AS CUST_NAME,
       A.CUST_CORP_NM,
       A.TEL_NO_ENC,
       A.HAND_PHONE_ENC,
       A.FAX_NO_ENC,
       A.EMAIL_ADDR_ENC,
       SCC_CRYPTO.DEC_FUN(A.TEL_NO_ENC) AS TEL_NO,
       SCC_CRYPTO.DEC_FUN(A.HAND_PHONE_ENC) AS HAND_PHONE,
       SCC_CRYPTO.DEC_FUN(A.FAX_NO_ENC) AS FAX_NO,
       SCC_CRYPTO.DEC_FUN(A.EMAIL_ADDR_ENC) AS EMAIL_ADDR,
       SCC_TELNO_SPLIT_FUN(SCC_CRYPTO.DEC_FUN(A.TEL_NO_ENC), 1) AS TEL_NO1,
       SCC_TELNO_SPLIT_FUN(SCC_CRYPTO.DEC_FUN(A.TEL_NO_ENC), 2) AS TEL_NO2,
       SCC_TELNO_SPLIT_FUN(SCC_CRYPTO.DEC_FUN(A.TEL_NO_ENC), 3) AS TEL_NO3,
       SCC_TELNO_SPLIT_FUN(SCC_CRYPTO.DEC_FUN(A.FAX_NO_ENC), 1) AS FAX_NO1,
       SCC_TELNO_SPLIT_FUN(SCC_CRYPTO.DEC_FUN(A.FAX_NO_ENC), 2) AS FAX_NO2,
       SCC_TELNO_SPLIT_FUN(SCC_CRYPTO.DEC_FUN(A.FAX_NO_ENC), 3) AS FAX_NO3,
       SCC_TELNO_SPLIT_FUN(SCC_CRYPTO.DEC_FUN(A.HAND_PHONE_ENC), 1) AS HP_NO1,
       SCC_TELNO_SPLIT_FUN(SCC_CRYPTO.DEC_FUN(A.HAND_PHONE_ENC), 2) AS HP_NO2,
       SCC_TELNO_SPLIT_FUN(SCC_CRYPTO.DEC_FUN(A.HAND_PHONE_ENC), 3) AS HP_NO3,
       A.ADDR_KEY,
       SCC_GET_ADDR_FUN('CLASS' , A.ADDR_KEY, '', '') AS ADDR_GUBUN,
       SCC_GET_ADDR_FUN('ZIP'   , A.ADDR_KEY, '', '') AS POST_NO,
       SCC_GET_ADDR_FUN('BASE'  , A.ADDR_KEY, '', '') AS ADDR,
       SCC_GET_ADDR_FUN('DETAIL', A.ADDR_KEY, :loginPersMask, '0') AS DETAIL_ADDR_ENC,
       SCC_GET_ADDR_FUN('ETC'   , A.ADDR_KEY, '', '') AS ETC_ADDR,
       SCC_ADDR_FUN(A.ADDR_KEY, :loginPersMask, '0') AS ADDR_INFO,
       A.CEO_ID_NO_ENC,
       SCC_CRYPTO.DEC_FUN(A.CEO_ID_NO_ENC) AS CEO_ID_NO,
       A.FULL_BSN_NO,
       A.SABUN,
       A.FRGN_CUST_CD,
       --개인사업자 세금계산서 발급을 위해 수정 2017.12.19 김호석 시작
       CASE WHEN CUSTTYPE = '010' THEN  --개인인 경우
       		SCC_CRYPTO.DEC_FUN(A.ID_NO_ENC)
       ELSE 
       		A.SAUPNO
       END AS SAUPNO,
       CASE WHEN CUSTTYPE = '010' THEN
       		'0000'
       ELSE 
       		A.SUB_UPJANG_NUM
       END  AS SUB_UPJANG_NUM,
       A.BUBINNO,
       CASE WHEN CUSTTYPE = '010' THEN
       		 A.CUSTNM
       ELSE
       		A.DRNAME1
       END AS DRNAME1,
       A.DRNAME2,
       CASE WHEN CUSTTYPE = '010' THEN
       		'개인' 
       ELSE 
       		A.UP_JONG
       END  AS UP_JONG,
       CASE WHEN CUSTTYPE = '010' THEN
       		'개인' 
       ELSE
       		A.UP_TAE
       END AS UP_TAE,       
       --개인사업자 세금계산서 발급을 위해 수정 2017.12.19 김호석 끝
       A.NATION_CD,
       A.CURRENCY_CD,
       A.ELCTN_TAX_BILL_YN,
       A.VAT_CUSTGUBUN,
       A.AR_PAY_POSS_YN,
       A.C_PER_NAME,
       A.INCHARGE_DEPT_NM,
       A.C_PER_TELNO_ENC,
       A.C_PART_FAX_ENC,
       A.C_PER_HPNO_ENC,
       A.C_PER_EMAIL_ENC,
       A.PO_TYPE,
       A.PO_CENTER_YN,
       A.PO_USEYN,
       A.SUBINV_CODE,
       A.SUBINV_CODE_OUTVAT,
       A.MRO_FLAG,
       A.CUST_CREATION_YN,
       A.CUST_ACCT_CD,
       A.CUST_PAY_COND,
       A.VENDOR_CREATION_YN,
       A.VENDOR_ACCT_CD,
       A.VENDOR_PAY_COND,
       A.DEL_YN,
       A.RTN_REASON,
       A.PROC_RESULT,
       A.PROC_RESULT_MSG,
       A.CHG_REASON,
       A.CUST_REQUEST_SYS_CD,
       A.CUST_REQUEST_NUM,
       A.INSPECT_TYPE,
       A.PROC_TYPE,
       A.HLEVEL_CUST_CD,
       A.OLD_CUST_CD,
       A.USE_YN
FROM   ST_CUST A
<#if tmCd?has_content || ccCd?has_content>
     , (SELECT A.UPJANG,
               A.CUSTCD,
               B.BU_CD,
               B.MU_CD,
               B.TM_CD,
               B.CC_CD,
               B.DEPT_ID
        FROM   ST_UPJANG A,
               HLDC_SC_DEPT_V B
        WHERE  B.CC_CD = A.CC_CD) B
</#if>
<#if upjangCd?has_content>
	,ST_UPJANG C
</#if>
WHERE  1 = 1
AND    A.USE_YN = 'Y'
<#if tmCd?has_content>
AND    B.CUSTCD = A.CUSTCD
AND    B.TM_CD = :tmCd
</#if>
<#if ccCd?has_content>
AND    B.CUSTCD = A.CUSTCD
AND    B.CC_CD = :ccCd
</#if>
<#if custCode?has_content>
AND    A.CUSTCD LIKE '%' || :custCode || '%'
</#if>
<#if custName?has_content>
AND    (A.CUSTNM LIKE '%' || :custName || '%' OR A.SAUPNO LIKE '%' || :custName || '%')
</#if>
<#if custGubun?has_content>
AND    A.CUSTGUBUN IN (:custGubun)
</#if>
<#if saupNo?has_content>
AND    A.SAUPNO LIKE '%' || :saupNo || '%'
</#if>
--업장검색기능 추가 20190315 김호석
<#if upjangCd?has_content>
AND    C.CUSTCD = A.CUSTCD
AND    C.UPJANG = :upjangCd
</#if>
ORDER BY A.CUSTCD
		]]>
	</statement>

	<!-- 거래처 목록을 조회한다. -->
	<statement name="selectOtCustList" type="select">
		/*+ com.hwfs.sc.cmn.dao.CustSearchDAO.selectList */
		<![CDATA[
SELECT A.OTCUSTCD,
       A.OTCUSTNM,
       TO_CHAR(A.OTCUSTCD) AS CUST_CODE,
       A.OTCUSTNM AS CUST_NAME,
       A.SAUPNO
FROM   FMP_OTHER_CUST A
WHERE  1=1
<#if custCode?has_content>
AND    A.OTCUSTCD LIKE '%' || :custCode || '%'
</#if>
<#if custName?has_content>
AND  (A.OTCUSTNM LIKE '%' || :custName || '%' OR A.SAUPNO LIKE '%' || :custName || '%')
</#if>
ORDER BY A.OTCUSTCD
		]]>
	</statement>

	<!-- 거래처 목록을 조회한다. -->
	<statement name="selectScoUpjangCustList" type="select"><![CDATA[
SELECT DISTINCT
       B.CUSTCD,
       TO_CHAR(B.CUSTCD) AS CUST_CODE,
       B.SAP_CUST_CD,
       B.CUST_GRP_CD,
       B.CUSTTYPE,
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'Z01' AND CODE = B.CUSTTYPE) AS CUSTTYPENM,
       B.CUSTGUBUN,
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'Z02' AND CODE = B.CUSTGUBUN) AS CUSTGUBUNNM,
       B.CUSTNM,
       B.CUSTNM AS CUST_NAME,
       B.CUST_CORP_NM,
       B.TEL_NO_ENC,
       B.HAND_PHONE_ENC,
       B.FAX_NO_ENC,
       B.EMAIL_ADDR_ENC,
       B.ADDR_KEY,
       SCC_GET_ADDR_FUN('CLASS' , B.ADDR_KEY, '', '') AS ADDR_GUBUN,
       SCC_GET_ADDR_FUN('ZIP'   , B.ADDR_KEY, '', '') AS POST_NO,
       SCC_GET_ADDR_FUN('BASE'  , B.ADDR_KEY, '', '') AS ADDR,
       SCC_GET_ADDR_FUN('DETAIL', B.ADDR_KEY, :loginPersMask, '0') AS DETAIL_ADDR_ENC,
       SCC_GET_ADDR_FUN('ETC'   , B.ADDR_KEY, '', '') AS ETC_ADDR,
       SCC_ADDR_FUN(B.ADDR_KEY, :loginPersMask, '0') AS ADDR_INFO,
       B.FULL_BSN_NO,
       B.SABUN,
       B.FRGN_CUST_CD,
       
       --개인사업자 세금계산서 발급을 위해 수정 2019.07.30 김호석 시작
       CASE WHEN B.CUSTTYPE = '010' THEN  --개인인 경우
       		SCC_CRYPTO.DEC_FUN(B.ID_NO_ENC)
       ELSE 
       		B.SAUPNO
       END AS SAUPNO,
       CASE WHEN B.CUSTTYPE = '010' THEN
       		'0000'
       ELSE 
       		B.SUB_UPJANG_NUM
       END  AS SUB_UPJANG_NUM,
       B.BUBINNO,
       CASE WHEN B.CUSTTYPE = '010' THEN
       		 B.CUSTNM
       ELSE
       		B.DRNAME1
       END AS DRNAME1,
       B.DRNAME2,
       CASE WHEN B.CUSTTYPE = '010' THEN
       		'개인' 
       ELSE 
       		B.UP_JONG
       END  AS UP_JONG,
       CASE WHEN B.CUSTTYPE = '010' THEN
       		'개인' 
       ELSE
       		B.UP_TAE
       END AS UP_TAE,       
       --개인사업자 세금계산서 발급을 위해 수정 2019.07.30 김호석 끝             
       --B.SAUPNO,
       --B.SUB_UPJANG_NUM,
       --B.BUBINNO,
       --B.DRNAME1,
       --B.DRNAME2,
       --B.UP_JONG,
       --B.UP_TAE,       
       B.NATION_CD,
       B.CURRENCY_CD,
       B.ELCTN_TAX_BILL_YN,
       B.VAT_CUSTGUBUN,
       B.AR_PAY_POSS_YN,
       B.C_PER_NAME,
       B.INCHARGE_DEPT_NM,
       B.C_PER_TELNO_ENC,
       B.C_PART_FAX_ENC,
       B.C_PER_HPNO_ENC,
       B.C_PER_EMAIL_ENC,
       B.PO_TYPE,
       B.PO_CENTER_YN,
       B.PO_USEYN,
       B.SUBINV_CODE,
       B.SUBINV_CODE_OUTVAT,
       B.MRO_FLAG,
       B.CUST_CREATION_YN,
       B.CUST_ACCT_CD,
       B.CUST_PAY_COND,
       B.VENDOR_CREATION_YN,
       B.VENDOR_ACCT_CD,
       B.VENDOR_PAY_COND,
       B.DEL_YN,
       B.RTN_REASON,
       B.PROC_RESULT,
       B.PROC_RESULT_MSG,
       B.CHG_REASON,
       B.CUST_REQUEST_SYS_CD,
       B.CUST_REQUEST_NUM,
       B.INSPECT_TYPE,
       B.PROC_TYPE,
       B.HLEVEL_CUST_CD,
       B.OLD_CUST_CD,
       B.USE_YN,
       A.RELEASE_PRIORITY
FROM   SCO_UPJANG_CUST A,
       ST_CUST B
WHERE  B.CUSTCD = A.CUSTCD
AND    A.USE_YN = 'Y'
<#if upjang?has_content>
AND    A.UPJANG = :upjang
</#if>
<#if custCode?has_content>
AND    B.CUSTCD LIKE '%' || :custCode || '%'
</#if>
<#if custName?has_content>
AND    (B.CUSTNM LIKE '%' || :custName || '%' OR B.SAUPNO LIKE '%' || :custName || '%')
</#if>
UNION ALL
SELECT DISTINCT
       B.CUSTCD,
       TO_CHAR(B.CUSTCD) AS CUST_CODE,
       B.SAP_CUST_CD,
       B.CUST_GRP_CD,
       B.CUSTTYPE,
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'Z01' AND CODE = B.CUSTTYPE) AS CUSTTYPENM,
       B.CUSTGUBUN,
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'Z02' AND CODE = B.CUSTGUBUN) AS CUSTGUBUNNM,
       B.CUSTNM,
       B.CUSTNM AS CUST_NAME,
       B.CUST_CORP_NM,
       B.TEL_NO_ENC,
       B.HAND_PHONE_ENC,
       B.FAX_NO_ENC,
       B.EMAIL_ADDR_ENC,
       B.ADDR_KEY,
       SCC_GET_ADDR_FUN('CLASS' , B.ADDR_KEY, '', '') AS ADDR_GUBUN,
       SCC_GET_ADDR_FUN('ZIP'   , B.ADDR_KEY, '', '') AS POST_NO,
       SCC_GET_ADDR_FUN('BASE'  , B.ADDR_KEY, '', '') AS ADDR,
       SCC_GET_ADDR_FUN('DETAIL', B.ADDR_KEY, :loginPersMask, '0') AS DETAIL_ADDR_ENC,
       SCC_GET_ADDR_FUN('ETC'   , B.ADDR_KEY, '', '') AS ETC_ADDR,
       SCC_ADDR_FUN(B.ADDR_KEY, :loginPersMask, '0') AS ADDR_INFO,
       B.FULL_BSN_NO,
       B.SABUN,
       B.FRGN_CUST_CD,
       B.SAUPNO,
       B.SUB_UPJANG_NUM,
       B.BUBINNO,
       B.DRNAME1,
       B.DRNAME2,
       B.UP_JONG,
       B.UP_TAE,
       B.NATION_CD,
       B.CURRENCY_CD,
       B.ELCTN_TAX_BILL_YN,
       B.VAT_CUSTGUBUN,
       B.AR_PAY_POSS_YN,
       B.C_PER_NAME,
       B.INCHARGE_DEPT_NM,
       B.C_PER_TELNO_ENC,
       B.C_PART_FAX_ENC,
       B.C_PER_HPNO_ENC,
       B.C_PER_EMAIL_ENC,
       B.PO_TYPE,
       B.PO_CENTER_YN,
       B.PO_USEYN,
       B.SUBINV_CODE,
       B.SUBINV_CODE_OUTVAT,
       B.MRO_FLAG,
       B.CUST_CREATION_YN,
       B.CUST_ACCT_CD,
       B.CUST_PAY_COND,
       B.VENDOR_CREATION_YN,
       B.VENDOR_ACCT_CD,
       B.VENDOR_PAY_COND,
       B.DEL_YN,
       B.RTN_REASON,
       B.PROC_RESULT,
       B.PROC_RESULT_MSG,
       B.CHG_REASON,
       B.CUST_REQUEST_SYS_CD,
       B.CUST_REQUEST_NUM,
       B.INSPECT_TYPE,
       B.PROC_TYPE,
       B.HLEVEL_CUST_CD,
       B.OLD_CUST_CD,
       B.USE_YN,
       9999999 AS RELEASE_PRIORITY
FROM   SLA_BUY_CPNY_MGMT A,
       ST_CUST B
WHERE  B.CUSTCD = A.CUST_CD
<#if custCode?has_content>
AND    B.CUSTCD LIKE '%' || :custCode || '%'
</#if>
<#if custName?has_content>
AND    (B.CUSTNM LIKE '%' || :custName || '%' OR B.SAUPNO LIKE '%' || :custName || '%')
</#if>
ORDER BY RELEASE_PRIORITY
		]]></statement>
		
		<!-- 거래처 목록을 조회한다. -->
	<statement name="selectVoFcVendorList" type="select"><![CDATA[
SELECT  VD_CD          AS CUSTCD
      , TO_CHAR(VD_CD) AS CUST_CODE
      , VD_NM          AS CUST_NAME
      , BIZ_REG_NO     AS SAUPNO
      , '0000'         AS SUB_UPJANG_NUM
FROM    VO_FC_VENDOR
WHERE   (1=1)
<#if custCode?has_content>
AND     VD_CD LIKE '%' || :custCode || '%'
</#if>
<#if custName?has_content>
AND     VD_NM LIKE '%' || :custName || '%'
</#if>
ORDER BY VD_CD	
		]]></statement>

</hqml>
