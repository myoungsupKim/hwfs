<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="sc.cmn.sap.eaiListDAO">
	<desc>EAI DB List 처리 HQML Query</desc>

	<!-- 계정별 월합계 집계내역 요청한다. -->
	<statement name="deleteAcctMmSum" type="delete">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.deleteAcctMmSum */
		<![CDATA[
DELETE
FROM   SAP_IF.SAP_IFC_ACCT_MM_SUM
WHERE  SAP_SYS_CLASS = :sapSysClass
AND    BU_CD = :buCd
AND    FISCAL_YEAR = :fiscalYear
AND    FISCAL_MM = :fiscalMm
AND    MU_CD = :muCd
AND    TM_CD = :tmCd
AND    CC_CD = :ccCd
AND    ACCT_CD = :acctCd
		]]>
	</statement>

	<!-- 계정별 월합계 집계내역 요청한다. -->
	<statement name="insertAcctMmSum" type="insert">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.insertAcctMmSum */
		<![CDATA[
INSERT INTO SAP_IF.SAP_IFC_ACCT_MM_SUM (
  SAP_SYS_CLASS,
  BU_CD,
  FISCAL_YEAR,
  FISCAL_MM,
  MU_CD,
  TM_CD,
  CC_CD,
  ACCT_CD,
  DR_AMT,
  CR_AMT,
  PICODE,
  PISTAT,
  PIDATE,
  PITIME,
  PIUSER,
  PIMSG,
  PIMSGID
) VALUES (
  :sapSysClass,
  :buCd,
  :fiscalYear,
  :fiscalMm,
  :muCd,
  :tmCd,
  :ccCd,
  :acctCd,
  :drAmt,
  :crAmt,
  :picode,
  :pistat,
  TO_CHAR(SYSDATE, 'YYYYMMDD'),
  TO_CHAR(SYSDATE, 'HH24MISS'),
  :loginSabun,
  :pimsg,
  :pimsgid
)
		]]>
	</statement>

	<!-- 전표 마스터를 삭제한다. -->
	<statement name="deleteSlipMst" type="delete">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.deleteSlipMst */
		<![CDATA[
DELETE
FROM   SAP_IF.SAP_IFC_SLIP_MST
WHERE  SLIP_NUM = :slipNum
--외식사업부 신조직 가져오기 20200214 김호석
AND    BU_CD = DECODE(:writeEmpMuCd,'2003','1000',:buCd)
  
		]]>
	</statement>

	<!-- 전표 마스터를 생성한다. -->
	<statement name="insertSlipMst" type="insert">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.insertSlipMst */
		<![CDATA[
INSERT INTO SAP_IF.SAP_IFC_SLIP_MST (
  SLIP_NUM,
  BU_CD,
  REF_NUM,
  SLIP_TYPE,
  SLIP_EVIDENCE_DATE,
  SLIP_PERIOD_DATE,
  CURRENCY,
  EXCHANGE_RATE,
  SLIP_TEXT,
  WRITE_EMP_MU_CD,
  ELCTNTAX_BILL_APPRVNUM,
  PUBLISH_CLASS,
  INPUT_DATE,
  INPUT_TIME,
  WRITE_EMP_SABUN,
  WRITE_EMP_DEPT,
  SYS_CD,
  ELCTN_SIGN_ID,
  SLIP_STATUS,
  SIGN_STATUS,
  REMARK,
  FISCAL_SLIP_NUM,
  FISCAL_YEAR,
  REVERSE_SLIP_NUM,
  REVERSE_SLIP_FISCAL_YEAR,
  SLIP_GRP_NUM,
  SIGN_TYPE,
  URGENT_PROC_YN,
  INTERFACE_LOG_NUM,
  PICODE,
  PISTAT,
  PIDATE,
  PITIME,
  PIUSER,
  PIMSG,
  PIMSGID,
  SLIP_IF_NO,
  RESULT_CD,
  RESULT_MSG
) VALUES (
  :slipNum,
  --외식사업부 신조직 가져오기 20200214 김호석
  DECODE(:writeEmpMuCd,'2003','1000',:buCd),
  :refNum,
  :slipType,
  :slipEvidenceDate,
  :slipPeriodDate,
  :currency,
  :exchangeRate,
  :slipText,
  --외식사업부 신조직 가져오기 20200214 김호석
  DECODE(:writeEmpMuCd,'2003','1600',:writeEmpMuCd),
  :elctntaxBillApprvnum,
  :publishClass,
  :inputDate,
  :inputTime,
  :writeEmpSabun,
  --외식사업부 신조직 가져오기 20200214 김호석
  DECODE(:writeEmpMuCd,'2003', CHG_CC_FUN(:writeEmpDept,'0'),:writeEmpDept),
  :sysCd,
  :elctnSignId,
  :slipStatus,
  :signStatus,
  :remark,
  :fiscalSlipNum,
  :fiscalYear,
  :reverseSlipNum,
  :reverseSlipFiscalYear,
  :slipGrpNum,
  :signType,
  :urgentProcYn,
  :interfaceLogNum,
  :picode,
  :pistat,
  TO_CHAR(SYSDATE, 'YYYYMMDD'),
  TO_CHAR(SYSDATE, 'HH24MISS'),
  :loginSabun,
  :pimsg,
  :pimsgid,
  :slipIfNo,
  :resultCd,
  :resultMsg
)
		]]>
	</statement>

	<!-- 전표 디테일을 삭제한다. -->
	<statement name="deleteSlipDtl" type="delete">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.deleteSlipDtl */
		<![CDATA[
DELETE
FROM   SAP_IF.SAP_IFC_SLIP_DTL
WHERE  SLIP_NUM = :slipNum
--외식사업부 신조직 가져오기 20200214 김호석
AND    BU_CD = DECODE(:muCd,'2003','1000',:buCd) 

		]]>
	</statement>

	<!-- 전표 디테일을 생성한다. -->
	<statement name="insertSlipDtl" type="insert">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.insertSlipDtl */
		<![CDATA[
INSERT INTO SAP_IF.SAP_IFC_SLIP_DTL (
  SLIP_NUM,
  BU_CD,
  DTL_NUM,
  SLIP_TYPE,
  SLIP_EVIDENCE_DATE,
  SLIP_PERIOD_DATE,
  MASTER_ACCT,
  DR_CR_CLASS,
  NEXT_BU_CD,
  CC_CD,
  ORDER_NUM,
  FNCT_PRVN,
  PL_CENTER,
  MINUS_PERIOD_YN,
  SLIP_CURRENCY_AMT,
  LCAL_AMT,
  SUPPLYPLCE_NUM,
  GUEST_NUM,
  FO_SUPPLYPLCE_NUM,
  FO_CUST_NM,
  MU_CD,
  INLT_YN,
  ITEM_TEXT,
  VAT_CD,
  UPJANG,
  STD_AMT,
  TAX_AMT,
  QUANTITY,
  UNIT,
  PAYER_NAME,
  EXPIRE_CAL_BASIS_DATE,
  PAY_MTOD,
  PAY_COND,
  PAY_DFER,
  PAY_REF,
  LC_NUM,
  MEMB_NUM,
  REAL_USER,
  TEL_NUM,
  USE_NO_MAN,
  ASSIGN_NUM,
  PO_NUM,
  ATTACH_DEPT,
  MGMT_DEPT,
  MGMT_ARTICLE,
  REASON_CD,
  CRGLEFT_CLASS,
  SINGLE_PAY_YN,
  TEMP_CUST_NM,
  BANK_ACCT_NO,
  BANK_ACCT_OWNR,
  BANK_CD,
  CO_PA_GUEST,
  CO_PA_CC_CD,
  START_DATE,
  END_DATE,
  BL_DATE,
  ASSET_NUM,
  ASSET_LLEVEL_NUM,
  MGMT_GUEST,
  MGMT_SUPPLYPLCE,
  CUST_REMARK,
  REF_DATE,
  LSHIP_DATE,
  TAX_STD_AMT,
  MM_AMT,
  TAX_RATE,
  INT_RATE,
  GU_OFFICE_NUM,
  REMARK1,
  REMARK2,
  ADDR,
  ETC,
  CARD_SRL_NUM,
  CARD_INTERFACE_NUM,
  CARD_NUM,
  INTERFACE_LOG_NUM,
  INPUT_DATE
) VALUES (
  :slipNum,
  --외식사업부 신조직 가져오기 20200214 김호석
  DECODE(:muCd,'2003','1000',:buCd),
  :dtlNum,
  :slipType,
  :slipEvidenceDate,
  :slipPeriodDate,
  :masterAcct,
  :drCrClass,
  :nextBuCd,
  --외식사업부 신조직 가져오기 20200214 김호석
  DECODE(:muCd,'2003', DECODE(SUBSTR(:ccCd,0,1), '3',CHG_CC_FUN(:ccCd,'0'), :ccCd),:ccCd),
  :orderNum,
  :fnctPrvn,
  :plCenter,
  :minusPeriodYn,
  :slipCurrencyAmt,
  :lcalAmt,
  :supplyplceNum,
  :guestNum,
  :foSupplyplceNum,
  :foCustNm,
  --외식사업부 신조직 가져오기 20200214 김호석
  DECODE(:muCd,'2003','1600',:muCd),
  :inltYn,
  :itemText,
  :vatCd,
  :upjang,
  :stdAmt,
  :taxAmt,
  :quantity,
  :unit,
  :payerName,
  :expireCalBasisDate,
  :payMtod,
  :payCond,
  :payDfer,
  :payRef,
  :lcNum,
  :membNum,
  :realUser,
  :telNum,
  :useNoMan,
  :assignNum,
  :poNum,
  --외식사업부 신조직 가져오기 20200214 김호석
  DECODE(:muCd,'2003', DECODE(SUBSTR(:attachDept,0,1), '3',CHG_CC_FUN(:attachDept,'0'), :attachDept),:attachDept),
  --외식사업부 신조직 가져오기 20200214 김호석
  DECODE(:muCd,'2003', DECODE(SUBSTR(:mgmtDept,0,1), '3',CHG_CC_FUN(:mgmtDept,'0'), :mgmtDept),:mgmtDept),
  :mgmtArticle,
  :reasonCd,
  :crgleftClass,
  :singlePayYn,
  :tempCustNm,
  :bankAcctNo,
  :bankAcctOwnr,
  :bankCd,
  :coPaGuest,
  --외식사업부 신조직 가져오기 20200214 김호석
  DECODE(:muCd,'2003', DECODE(SUBSTR(:coPaCcCd,0,1), '3',CHG_CC_FUN(:coPaCcCd,'0'), :coPaCcCd),:coPaCcCd),
  :startDate,
  :endDate,
  :blDate,
  :assetNum,
  :assetLlevelNum,
  :mgmtGuest,
  :mgmtSupplyplce,
  :custRemark,
  :refDate,
  :lshipDate,
  :taxStdAmt,
  :mmAmt,
  :taxRate,
  :intRate,
  :guOfficeNum,
  :remark1,
  :remark2,
  :addr,
  :etc,
  :cardSrlNum,
  :cardInterfaceNum,
  :cardNum,
  :interfaceLogNum,
  :inputDate
)
		]]>
	</statement>

	<!-- 전표취소를 삭제한다. -->
	<statement name="deleteSlipCancel" type="delete">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.deleteSlipCancel */
		<![CDATA[
DELETE
FROM   SAP_IF.SAP_IFC_SLIP_CANCEL
WHERE  SLIP_NUM = :slipNum
--외식사업부 신조직 가져오기 20200214 김호석
AND    BU_CD = DECODE((SELECT WRITE_EMP_MU_CD FROM SAP_IF.SAP_IFC_SLIP_MST WHERE SLIP_NUM = :slipNum),'1600','1000',:buCd) 
AND    SYS_CD = :sysCd
AND    FISCAL_SLIP_NUM = :fiscalSlipNum
AND    FISCAL_YEAR = :fiscalYear
		]]>
	</statement>

	<!-- 전표취소를 생성한다. -->
	<statement name="insertSlipCancel" type="insert">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.insertSlipCancel */
		<![CDATA[
INSERT INTO SAP_IF.SAP_IFC_SLIP_CANCEL (
  SLIP_NUM,
  BU_CD,
  SYS_CD,
  FISCAL_SLIP_NUM,
  FISCAL_YEAR,
  CANCEL_REASON,
  PERIOD_DATE,
  REQUEST_DATE,
  REQUEST_TIME,
  WRITE_EMP_NUM,
  WRITE_EMP_DEPT,
  CANCEL_REASON_MEMO,
  INTERFACE_LOG_NUM,
  PICODE,
  PISTAT,
  PIDATE,
  PITIME,
  PIUSER,
  PIMSG,
  PIMSGID,
  MSG
) VALUES (
  :slipNum,
  --외식사업부 신조직 가져오기 20200214 김호석
  DECODE((SELECT WRITE_EMP_MU_CD FROM SAP_IF.SAP_IFC_SLIP_MST WHERE SLIP_NUM = :slipNum),'1600','1000',:buCd),
  :sysCd,
  :fiscalSlipNum,
  :fiscalYear,
  :cancelReason,
  :periodDate,
  :requestDate,
  :requestTime,
  :writeEmpNum,
  --외식사업부 신조직 가져오기 20200214 김호석
  DECODE((SELECT WRITE_EMP_MU_CD FROM SAP_IF.SAP_IFC_SLIP_MST WHERE SLIP_NUM = :slipNum),'1600', CHG_CC_FUN(:writeEmpDept,'0'),:writeEmpDept),
  :cancelReasonMemo,
  :interfaceLogNum,
  :picode,
  :pistat,
  TO_CHAR(SYSDATE, 'YYYYMMDD'),
  TO_CHAR(SYSDATE, 'HH24MISS'),
  :loginSabun,
  :pimsg,
  :pimsgid,
  :msg
)
		]]>
	</statement>

	<!-- 카드 청구정보를 삭제한다. -->
	<statement name="deleteCardBilling" type="delete">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.deleteCardBilling */
		<![CDATA[
DELETE
FROM   SAP_IF.SAP_IFC_CARD_BILLING
WHERE  BU_CD = :buCd
AND    APPRV_DATE = :apprvDate
AND    GUEST_CD = :guestCd
		]]>
	</statement>

	<!-- 카드 청구정보를 생성한다. -->
	<statement name="insertCardBilling" type="insert">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.insertCardBilling */
		<![CDATA[
INSERT INTO SAP_IF.SAP_IFC_CARD_BILLING (
  BU_CD,
  APPRV_DATE,
  GUEST_CD,
  WITHDRAW_SCHD_DATE,
  CURRENCY,
  APPRV_AMT,
  PICODE,
  PISTAT,
  PIDATE,
  PITIME,
  PIUSER,
  PIMSG,
  PIMSGID
) VALUES (
  :buCd,
  :apprvDate,
  :guestCd,
  :withdrawSchdDate,
  :currency,
  :apprvAmt,
  :picode,
  :pistat,
  TO_CHAR(SYSDATE, 'YYYYMMDD'),
  TO_CHAR(SYSDATE, 'HH24MISS'),
  :loginSabun,
  :pimsg,
  :pimsgid
)
		]]>
	</statement>

	<!-- 은행계좌요청 정보를 삭제한다. -->
	<statement name="deleteBankAcctNoRequest" type="delete">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.deleteBankAcctNoRequest */
		<![CDATA[
DELETE
FROM   SAP_IF.SAP_IFC_BANK_ACCT_NO_REQUEST
WHERE  UPJANG_CD = :upjangCd
		]]>
	</statement>

	<!-- 은행계좌요청 정보를 생성한다. -->
	<statement name="insertBankAcctNoRequest" type="insert">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.insertBankAcctNoRequest */
		<![CDATA[
INSERT INTO SAP_IF.SAP_IFC_BANK_ACCT_NO_REQUEST (
  UPJANG_CD,
  UPJANG_NM,
  CUST_CD,
  CC_CD,
  PICODE,
  PISTAT,
  PIDATE,
  PITIME,
  PIUSER,
  PIMSG,
  PIMSGID,
  E_RETURN,
  E_MSG
)
VALUES (
  :upjangCd,
  :upjangNm,
  :custCd,
  :ccCd,
  :picode,
  :pistat,
  TO_CHAR(SYSDATE, 'YYYYMMDD'),
  TO_CHAR(SYSDATE, 'HH24MISS'),
  :loginSabun,
  :pimsg,
  :pimsgid,
  :eReturn,
  :eMsg
)
		]]>
	</statement>

	<!-- 매출세부내역 정보를 삭제한다. -->
	<statement name="deleteSalsPclsDesc" type="delete">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.deleteSalsPclsDesc */
		<![CDATA[
DELETE
FROM   SAP_IF.SAP_IFC_SALS_PCLS_DESC
WHERE  SAP_SYS_CD = :sapSysCd
AND    SRL_NUM = :srlNum
AND    RECD_CDATE = :recdCdate
		]]>
	</statement>

	<!-- 매출세부내역 정보를 생성한다. -->
	<statement name="insertSalsPclsDesc" type="insert">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.insertSalsPclsDesc */
		<![CDATA[
INSERT INTO SAP_IF.SAP_IFC_SALS_PCLS_DESC (
  SAP_SYS_CD,
  SRL_NUM,
  RECD_CDATE,
  PERIOD_DATE,
  PERIOD_MM,
  FISCAL_YEAR,
  TERM,
  BU_CD,
  MU_CD,
  CC_CD,
  CUST,
  AGES,
  GENDER,
  INSIDE_EXTR_CLASS,
  BLD_CLASS,
  DATE_CLASS,
  MGRP,
  MCALSS,
  SCLASS,
  MENU_CD,
  OCCUR_TIME,
  SALES_EMP,
  CST_ARTICLE,
  RECEIPT_NUM,
  MENU_SRL_NUM,
  CANCEL_CLASS,
  TABLE_NUM,
  TABLE_TYPE,
  QUER_TYPE,
  SALS_AMT,
  CURRENCY,
  EXCHANGE_RATE,
  QUANTITY,
  PSN,
  MAN_PSN,
  WOMAN_PSN,
  AGE_10,
  AGE_20,
  AGE_30,
  AGE_40,
  AGE_50,
  AGE_60,
  AGE_70,
  INSIDE_GUEST_PSN,
  EXTR_GUEST_PSN,
  UNIT,
  PICODE,
  PISTAT,
  PIDATE,
  PITIME,
  PIUSER,
  PIMSG,
  PIMSGID
) VALUES (
  :sapSysCd,
  :srlNum,
  :recdCdate,
  :periodDate,
  :periodMm,
  :fiscalYear,
  :term,
  :buCd,
  :muCd,
  :ccCd,
  :cust,
  :ages,
  :gender,
  :insideExtrClass,
  :bldClass,
  :dateClass,
  :mgrp,
  :mcalss,
  :sclass,
  :menuCd,
  :occurTime,
  :salesEmp,
  :cstArticle,
  :receiptNum,
  :menuSrlNum,
  :cancelClass,
  :tableNum,
  :tableType,
  :querType,
  :salsAmt,
  :currency,
  :exchangeRate,
  :quantity,
  :psn,
  :manPsn,
  :womanPsn,
  :age10,
  :age20,
  :age30,
  :age40,
  :age50,
  :age60,
  :age70,
  :insideGuestPsn,
  :extrGuestPsn,
  :unit,
  :picode,
  'R',
  TO_CHAR(SYSDATE, 'YYYYMMDD'),
  TO_CHAR(SYSDATE, 'HH24MISS'),
  :loginSabun,
  :pimsg,
  :pimsgid
)
		]]>
	</statement>

	<!-- 매출 월합계 집계내역을 삭제한다. -->
	<statement name="deleteSalsMmSum" type="delete">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.deleteSalsMmSum */
		<![CDATA[
DELETE
FROM   SAP_IF.SAP_IFC_SALS_MM_SUM
WHERE  BU_CD = :buCd
AND    FISCAL_YEAR = :fiscalYear
AND    FISCAL_MM = :fiscalMm
AND    MU_CD = :muCd
AND    TM_CD = :tmCd
AND    CC_CD = :ccCd
AND    VAT_CD = :vatCd
AND    ACCT_CD = :acctCd
		]]>
	</statement>

	<!-- 매출 월합계 집계내역을 생성한다. -->
	<statement name="insertSalsMmSum" type="insert">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.insertSalsMmSum */
		<![CDATA[
INSERT INTO SAP_IF.SAP_IFC_SALS_MM_SUM (
  BU_CD,
  FISCAL_YEAR,
  FISCAL_MM,
  MU_CD,
  TM_CD,
  CC_CD,
  VAT_CD,
  ACCT_CD,
  SUPPLY_AMT,
  VAT_AMT,
  PICODE,
  PISTAT,
  PIDATE,
  PITIME,
  PIUSER,
  PIMSG,
  PIMSGID
) VALUES (
  :buCd,
  :fiscalYear,
  :fiscalMm,
  :muCd,
  :tmCd,
  :ccCd,
  :vatCd,
  :acctCd,
  :supplyAmt,
  :vatAmt,
  :picode,
  'R',
  TO_CHAR(SYSDATE, 'YYYYMMDD'),
  TO_CHAR(SYSDATE, 'HH24MISS'),
  :loginSabun,
  :pimsg,
  :pimsgid
)
		]]>
	</statement>

	<!-- 미결잔액을 삭제한다. -->
	<statement name="deleteBalance" type="delete">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.deleteBalance */
		<![CDATA[
DELETE
FROM   SAP_IF.SAP_IFC_BALANCE
WHERE  SAP_SYS_CLASS = :sapSysClass
AND    BU_CD = :buCd
AND    FISCAL_YEAR = :fiscalYear
AND    FISCAL_MM = :fiscalMm
AND    MU_CD = :muCd
AND    TM_CD = :tmCd
AND    CC_CD = :ccCd
AND    ACCT_CD = :acctCd
AND    SAP_CUST_CD = :sapCustCd
		]]>
	</statement>

	<!-- 미결잔액을 생성한다. -->
	<statement name="insertBalance" type="insert">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.insertBalance */
		<![CDATA[
INSERT INTO SAP_IF.SAP_IFC_BALANCE (
  SAP_SYS_CLASS,
  BU_CD,
  FISCAL_YEAR,
  FISCAL_MM,
  MU_CD,
  TM_CD,
  CC_CD,
  ACCT_CD,
  SAP_CUST_CD,
  CUST_CD,
  CUST_NM,
  BALANCE,
  PICODE,
  PISTAT,
  PIDATE,
  PITIME,
  PIUSER,
  PIMSG,
  PIMSGID
) VALUES (
  :sapSysClass,
  :buCd,
  :fiscalYear,
  :fiscalMm,
  :muCd,
  :tmCd,
  :ccCd,
  :acctCd,
  :sapCustCd,
  :custCd,
  :custNm,
  :balance,
  :picode,
  'R',
  TO_CHAR(SYSDATE, 'YYYYMMDD'),
  TO_CHAR(SYSDATE, 'HH24MISS'),
  :loginSabun,
  :pimsg,
  :pimsgid
)
		]]>
	</statement>



	<!-- 삭제한다. -->
	<statement name="deleteElctnTaxShetHdr" type="delete">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.deleteElctnTaxShetHdr */
		<![CDATA[
DELETE
FROM   SAP_IF.SAP_IFC_ELCTN_TAX_SHET_HDR
WHERE  TAX_SHET_NUM = :taxShetNum

		]]>
	</statement>

	<!-- 생성한다. -->
	<statement name="insertElctnTaxShetHdr" type="insert">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.insertElctnTaxShetHdr */
		<![CDATA[
INSERT INTO SAP_IF.SAP_IFC_ELCTN_TAX_SHET_HDR (
  TAX_SHET_NUM,
  ORGNL_TAX_SHET_NUM,
  TAX_SHET_APPRVNUM,
  DOC_CD,
  TAX_SHET_WRITE_DATE,
  TAX_SHET_KIND,
  TAX_SHET_CLSFI,
  TAX_SHET_TYPE,
  MODIFY_CD,
  TAX_SHET_CLASS,
  PUBLISH_CLASS,
  RCPT_BILLING_CLASS,
  SENDCPNY_CD,
  SENDCPNY_BIZ_CD,
  CREATION_MNBD_CD,
  APPRV_PROC_CLASS,
  SEND_MTOD,
  SEND_REQ_DATE,
  INCOME_NEWHGHT_NUM,
  INCOME_PACKISSUE_SDATE,
  INCOME_PACKISSUE_EDATE,
  INCOME_TOT_QUANTITY,
  SUPPLIER_SUB_UPJANG_NUM,
  RCVR_SUB_UPJANG_NUM,
  TRUST_SUB_UPJANG_NUM,
  CLOSE_SDATE,
  CLOSE_EDATE,
  SUPPLIER_BIZ_NO,
  SUPPLIER_BIZ_NM,
  SUPPLIER_CEONM,
  SUPPLIER_ADDR,
  SUPPLIER_BIZ_TYPE,
  SUPPLIER_BIZ_CAT,
  RCVR_BIZ_NO_CLASS,
  RCVR_BIZ_NO,
  RCVR_BIZ_NM,
  RCVR_CEONM,
  RCVR_ADDR,
  RCVR_BIZ_TYPE,
  RCVR_BIZ_CAT,
  TRUST_BIZ_NO,
  TRUST_BIZ_NM,
  TRUST_CEONM,
  TRUST_ADDR,
  TRUST_BIZ_TYPE,
  TRUST_BIZ_CAT,
  SUPPLIER_INCHARGE_YN,
  SUPPLIER_INCHARGE_ID,
  SUPPLIER_INCHARGE_NM,
  SUPPLIER_INCHARGE_TEL,
  SUPPLIER_INCHARGE_HP,
  SUPPLIER_INCHARGE_EMAIL,
  SUPPLIER_INCHARGE_DEPT,
  RCVR_INCHARGE_YN,
  RCVR_INCHARGE_ID,
  RCVR_INCHARGE_NM,
  RCVR_INCHARGE_TEL,
  RCVR_INCHARGE_HP,
  RCVR_INCHARGE_EMAIL,
  RCVR_INCHARGE_DEPT,
  RCVR_INCHARGE_NM2,
  RCVR_INCHARGE_TEL2,
  RCVR_INCHARGE_HP2,
  RCVR_INCHARGE_EMAIL2,
  RCVR_INCHARGE_DEPT2,
  TRUST_INCHARGE_YN,
  TRUST_INCHARGE_ID,
  TRUST_INCHARGE_NM,
  TRUST_INCHARGE_TEL,
  TRUST_INCHARGE_HP,
  TRUST_INCHARGE_EMAIL,
  TRUST_INCHARGE_DEPT,
  SUPPLY_AMT,
  VAT_AMT,
  TOT_AMT,
  TAX_SHET_REMARK,
  SIGN_MTODCD_CASH,
  SIGN_MTODCD_MONEY_CHECK,
  SIGN_MTODCD_NOTES,
  SIGN_MTODCD_CRDT,
  SIGN_MTODAMT_CASH,
  SIGN_MTODAMT_MONEY_CHECK,
  SIGN_MTODAMT_NOTES,
  SIGN_MTODAMT_CRDT,
  EMAIL_DISPATCH_YN,
  SMS_DISPATCH_YN,
  TAX_SHET_XML_DATA,
  XSL_NUM_FILENM,
  VIRTUAL_BANK_ACCT_NO1,
  VIRTUAL_BANK_ACCT_NO2,
  VIRTUAL_BANK_ACCT_NO3,
  VIRTUAL_BANK_ACCT_NO4,
  VIRTUAL_BANK_ACCT_NO5,
  RESERV_COLUMN1,
  RESERV_COLUMN2,
  RESERV_COLUMN3,
  APPEND_DOC_YN,
  APPEND_DOC_CNT,
  CURRENT_DDTT,
  BU_CD,
  SYS_CD,
  RETURN_CD,
  RETURN_MSG,
  PICODE,
  PISTAT,
  PIDATE,
  PITIME,
  PIUSER,
  PIMSG,
  PIMSGID
) VALUES (
  :taxShetNum,
  :orgnlTaxShetNum,
  :taxShetApprvnum,
  :docCd,
  :taxShetWriteDate,
  :taxShetKind,
  :taxShetClsfi,
  :taxShetType,
  :modifyCd,
  :taxShetClass,
  :publishClass,
  :rcptBillingClass,
  :sendcpnyCd,
  :sendcpnyBizCd,
  :creationMnbdCd,
  :apprvProcClass,
  :sendMtod,
  :sendReqDate,
  :incomeNewhghtNum,
  :incomePackissueSdate,
  :incomePackissueEdate,
  :incomeTotQuantity,
  :supplierSubUpjangNum,
  :rcvrSubUpjangNum,
  :trustSubUpjangNum,
  :closeSdate,
  :closeEdate,
  SCC_CRYPTO.ENC_FUN(:supplierBizNo),
  :supplierBizNm,
  :supplierCeonm,
  SCC_CRYPTO.ENC_FUN(:supplierAddr),
  :supplierBizType,
  :supplierBizCat,
  :rcvrBizNoClass,
  SCC_CRYPTO.ENC_FUN(:rcvrBizNo),
  :rcvrBizNm,
  :rcvrCeonm,
  SCC_CRYPTO.ENC_FUN(:rcvrAddr),
  :rcvrBizType,
  :rcvrBizCat,
  SCC_CRYPTO.ENC_FUN(:trustBizNo),
  :trustBizNm,
  :trustCeonm,
  SCC_CRYPTO.ENC_FUN(:trustAddr),
  :trustBizType,
  :trustBizCat,
  :supplierInchargeYn,
  :supplierInchargeId,
  :supplierInchargeNm,
  SCC_CRYPTO.ENC_FUN(:supplierInchargeTel),
  SCC_CRYPTO.ENC_FUN(:supplierInchargeHp),
  SCC_CRYPTO.ENC_FUN(:supplierInchargeEmail),
  :supplierInchargeDept,
  :rcvrInchargeYn,
  :rcvrInchargeId,
  :rcvrInchargeNm,
  SCC_CRYPTO.ENC_FUN(:rcvrInchargeTel),
  SCC_CRYPTO.ENC_FUN(:rcvrInchargeHp),
  SCC_CRYPTO.ENC_FUN(:rcvrInchargeEmail),
  :rcvrInchargeDept,
  :rcvrInchargeNm2,
  SCC_CRYPTO.ENC_FUN(:rcvrInchargeTel2),
  SCC_CRYPTO.ENC_FUN(:rcvrInchargeHp2),
  SCC_CRYPTO.ENC_FUN(:rcvrInchargeEmail2),
  :rcvrInchargeDept2,
  :trustInchargeYn,
  :trustInchargeId,
  :trustInchargeNm,
  SCC_CRYPTO.ENC_FUN(:trustInchargeTel),
  SCC_CRYPTO.ENC_FUN(:trustInchargeHp),
  SCC_CRYPTO.ENC_FUN(:trustInchargeEmail),
  :trustInchargeDept,
  :supplyAmt,
  :vatAmt,
  :totAmt,
  :taxShetRemark,
  :signMtodcdCash,
  :signMtodcdMoneyCheck,
  :signMtodcdNotes,
  :signMtodcdCrdt,
  :signMtodamtCash,
  :signMtodamtMoneyCheck,
  :signMtodamtNotes,
  :signMtodamtCrdt,
  :emailDispatchYn,
  :smsDispatchYn,
  :taxShetXmlData,
  :xslNumFilenm,
  SCC_CRYPTO.ENC_FUN(:virtualBankAcctNo1),
  SCC_CRYPTO.ENC_FUN(:virtualBankAcctNo2),
  SCC_CRYPTO.ENC_FUN(:virtualBankAcctNo3),
  SCC_CRYPTO.ENC_FUN(:virtualBankAcctNo4),
  SCC_CRYPTO.ENC_FUN(:virtualBankAcctNo5),
  :reservColumn1,
  :reservColumn2,
  :reservColumn3,
  :appendDocYn,
  :appendDocCnt,
  :currentDdtt,
  --:buCd,
  --외식사업부인 경우 1000으로 넣도록 변경 20200213 김호석
  (SELECT DECODE(MU_CD, '2003','1000','2000') FROM SLA_TAX_SHET_PUBLISH_MST WHERE TAX_SHET_NUM = :taxShetNum),
  :sysCd,
  :returnCd,
  :returnMsg,
  :picode,
  :pistat,
  TO_CHAR(SYSDATE, 'YYYYMMDD'),
  TO_CHAR(SYSDATE, 'HH24MISS'),
  :loginSabun,
  :pimsg,
  :pimsgid
)
		]]>
	</statement>


	<!-- 삭제한다. -->
	<statement name="deleteElctnTaxShetAppend" type="delete">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.deleteElctnTaxShetAppend */
		<![CDATA[
DELETE
FROM   SAP_IF.SAP_IFC_ELCTN_TAX_SHET_APPEND
WHERE  TAX_SHET_NUM = :taxShetNum
AND    DOC_CD = :docCd
		]]>
	</statement>

	<!-- 생성한다. -->
	<statement name="insertElctnTaxShetAppend" type="insert">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.insertElctnTaxShetAppend */
		<![CDATA[
INSERT INTO SAP_IF.SAP_IFC_ELCTN_TAX_SHET_APPEND (
  TAX_SHET_NUM,
  DOC_CD,
  XSL_NUM_FILENM,
  TAX_SHET_XML_DATA,
  PICODE,
  PISTAT,
  PIDATE,
  PITIME,
  PIUSER,
  PIMSG,
  PIMSGID
) VALUES (
  :taxShetNum,
  :docCd,
  :xslNumFilenm,
  :taxShetXmlData,
  :picode,
  :pistat,
  TO_CHAR(SYSDATE, 'YYYYMMDD'),
  TO_CHAR(SYSDATE, 'HH24MISS'),
  :loginSabun,
  :pimsg,
  :pimsgid
)
		]]>
	</statement>

	<!-- 삭제한다. -->
	<statement name="deleteElctnTaxShetItem" type="delete">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.deleteElctnTaxShetItem */
		<![CDATA[
DELETE
FROM   SAP_IF.SAP_IFC_ELCTN_TAX_SHET_ITEM
WHERE  TAX_SHET_NUM = :taxShetNum
AND    ITEM_SEQ = :itemSeq

		]]>
	</statement>

	<!-- 생성한다. -->
	<statement name="insertElctnTaxShetItem" type="insert">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.insertElctnTaxShetItem */
		<![CDATA[
INSERT INTO SAP_IF.SAP_IFC_ELCTN_TAX_SHET_ITEM (
  TAX_SHET_NUM,
  ITEM_SEQ,
  ITEM_SUPPLY_DATE,
  ITEM_NM,
  ITEM_STAND,
  ITEM_QUANTITY,
  ITEM_UPRICE,
  ITEM_SUPPLY_AMT,
  ITEM_VAT_AMT,
  ITEM_REMARK,
  PICODE,
  PISTAT,
  PIDATE,
  PITIME,
  PIUSER,
  PIMSG,
  PIMSGID
) VALUES (
  :taxShetNum,
  :itemSeq,
  :itemSupplyDate,
  :itemNm,
  :itemStand,
  :itemQuantity,
  :itemUprice,
  :itemSupplyAmt,
  :itemVatAmt,
  :itemRemark,
  :picode,
  :pistat,
  TO_CHAR(SYSDATE, 'YYYYMMDD'),
  TO_CHAR(SYSDATE, 'HH24MISS'),
  :loginSabun,
  :pimsg,
  :pimsgid
)
		]]>
	</statement>


	<!-- 삭제한다. -->
	<statement name="deleteElctnTaxShetPublish" type="delete">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.deleteElctnTaxShetPublish */
		<![CDATA[
DELETE
FROM   SAP_IF.SAP_IFC_TAX_SHET_PUBLISH_INFO
WHERE  PUBLISH_SABUN1 = :publishSabun1
		]]>
	</statement>

	<!-- 생성한다. -->
	<statement name="insertElctnTaxShetPublish" type="insert">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.insertElctnTaxShetPublish */
		<![CDATA[
INSERT INTO SAP_IF.SAP_IFC_TAX_SHET_PUBLISH_INFO (
  TAX_SHET_NUM,
  PUBLISH_SABUN1,
  PUBLISH_NAME1,
  PUBLISH_TEL1,
  PUBLISH_HP1,
  PUBLISH_EMAIL1,
  PUBLISH_SABUN2,
  PUBLISH_NAME2,
  PUBLISH_TEL2,
  PUBLISH_HP2,
  PUBLISH_EMAIL2,
  PROC_USER_SABUN,
  PICODE,
  PISTAT,
  PIDATE,
  PITIME,
  PIUSER,
  PIMSG,
  PIMSGID
) VALUES (
  :taxShetNum,
  :publishSabun1,
  :publishName1,
  SCC_CRYPTO.ENC_FUN(:publishTel1),
  SCC_CRYPTO.ENC_FUN(:publishHp1),
  SCC_CRYPTO.ENC_FUN(:publishEmail1),
  :publishSabun2,
  :publishName2,
  SCC_CRYPTO.ENC_FUN(:publishTel2),
  SCC_CRYPTO.ENC_FUN(:publishHp2),
  SCC_CRYPTO.ENC_FUN(:publishEmail2),
  :procUserSabun,
  :picode,
  :pistat,
  TO_CHAR(SYSDATE, 'YYYYMMDD'),
  TO_CHAR(SYSDATE, 'HH24MISS'),
  :loginSabun,
  :pimsg,
  :pimsgid
)
		]]>
	</statement>



	<!-- 삭제한다. -->
	<statement name="deleteAcctPlanReq" type="delete">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.deleteAcctPlanReq */
		<![CDATA[
DELETE
FROM   SAP_IF.SAP_IFC_ACCT_PLAN_REQ
WHERE  PLAN_TYPE = :planType
AND    PLAN_YEAR = :planYear
AND    VER_CD = :verCd
AND    CC_CD = :ccCd
AND    UPJANG = :upjang
AND    JOB_GRADE_CD = :jobGradeCd
AND    ACCT_CD = :acctCd
		]]>
	</statement>

	<!-- 생성한다. -->
	<statement name="insertAcctPlanReq" type="insert">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.insertAcctPlanReq */
		<![CDATA[
INSERT INTO SAP_IF.SAP_IFC_ACCT_PLAN_REQ (
  PLAN_TYPE,
  PLAN_YEAR,
  VER_CD,
  CC_CD,
  UPJANG,
  JOB_GRADE_CD,
  ACCT_CD,
  JOB_GRADE_NM,
  ACCT_NM,
  MM_AMT_01,
  MM_AMT_02,
  MM_AMT_03,
  MM_AMT_04,
  MM_AMT_05,
  MM_AMT_06,
  MM_AMT_07,
  MM_AMT_08,
  MM_AMT_09,
  MM_AMT_10,
  MM_AMT_11,
  MM_AMT_12,
  PISTAT,
  PIDATE,
  PITIME,
  PIUSER
) VALUES (
  :planType,
  :planYear,
  :verCd,
  :ccCd,
  :upjang,
  :jobGradeCd,
  :acctCd,
  :jobGradeNm,
  :acctNm,
  :mmAmt01,
  :mmAmt02,
  :mmAmt03,
  :mmAmt04,
  :mmAmt05,
  :mmAmt06,
  :mmAmt07,
  :mmAmt08,
  :mmAmt09,
  :mmAmt10,
  :mmAmt11,
  :mmAmt12,
  :pistat,
  TO_CHAR(SYSDATE, 'YYYYMMDD'),
  TO_CHAR(SYSDATE, 'HH24MISS'),
  :loginSabun
)
		]]>
	</statement>

	<!-- 삭제한다. -->
	<statement name="deleteElctnTaxShetStatusSend" type="delete">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.deleteElctnTaxShetStatusSend */
		<![CDATA[
DELETE
FROM   SAP_IF.SAP_IFC_ELCTN_TAX_SHET_PUBLISH
WHERE  TAX_SHET_NUM = :taxShetNum
AND    CHG_REQUEST_DATE = :chgRequestDate
		]]>
	</statement>

	<!-- 생성한다. -->
	<statement name="insertElctnTaxShetStatusSend" type="insert">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.insertElctnTaxShetStatusSend */
		<![CDATA[
INSERT INTO SAP_IF.SAP_IFC_ELCTN_TAX_SHET_PUBLISH (
  TAX_SHET_NUM,
  CHG_REQUEST_DATE,
  WRITE_DATE,
  CHG_REQUEST_CD,
  SEND_DDTT,
  SEND_STATUS_CD,
  SEND_DETAIL_INFO,
  STATUS_PROC_DDTT,
  SENDCPNY_CD,
  SENDCPNY_BIZ_CD,
  REQUESTER_ID,
  CREATION_DATE,
  CREATION_TIME,
  CREATION_NAME,
  MODIFY_DATE,
  MODIFY_TIME,
  MODIFY_NAME,
  RESULT_CD,
  RESULT_MSG,
  BU_CD,
  SYS_CD,
  PISTAT,
  PIDATE,
  PITIME,
  PIUSER
) VALUES (
  :taxShetNum,
  :chgRequestDate,
  :writeDate,
  :chgRequestCd,
  :sendDdtt,
  :sendStatusCd,
  :sendDetailInfo,
  :statusProcDdtt,
  :sendcpnyCd,
  :sendcpnyBizCd,
  :requesterId,
  :creationDate,
  :creationTime,
  :creationName,
  :modifyDate,
  :modifyTime,
  :modifyName,
  :resultCd,
  :resultMsg,
  :buCd,
  :sysCd,
  :pistat,
  TO_CHAR(SYSDATE, 'YYYYMMDD'),
  TO_CHAR(SYSDATE, 'HH24MISS'),
  :loginSabun
)
		]]>
	</statement>

	<!-- 삭제한다. -->
	<statement name="deleteTpl" type="delete">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.deleteTpl */
		<![CDATA[
SELECT SYSDATE FROM DUAL
		]]>
	</statement>

	<!-- 생성한다. -->
	<statement name="insertTpl" type="insert">
		/*+ com.hwfs.sc.cmn.sap.eaiListDAO.insertTpl */
		<![CDATA[
SELECT SYSDATE FROM DUAL
		]]>
	</statement>



</hqml>
