<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="sc.scz.custRequestNewDAO">
	<desc>거래처 신청정보 HQML Query</desc>

	<!-- 거래처 신청정보 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.sc.scz.dao.CustRequestNewDAO.selectList */
		<![CDATA[
SELECT A.REQUEST_SYS_CD,
       A.REQUEST_NUM,
       A.REQUEST_SABUN,
       A.REQUEST_NAME,
       A.REQUEST_DATE,
       A.REQUEST_TIME,
       A.MU_CD,
       A.MU_NM,
       A.CUST_GRP,
       A.CUST_TYPE,
       A.CUST_TYPE_NM,
       A.CUST_CLASS,
       A.CUST_CLASS_NM,
       A.CUST_NM,
       A.CUST_CORP_NM,
       A.FULL_BSN_NO,
       A.BSN_NO,
       A.SUB_UPJANG_NUM,
       A.CORP_NUM,
       A.ID_NO_ENC,
       A.FRGN_CUST_NUM,
       A.ADDR_KEY,
       A.ADDR,
       A.DETAIL_ADDR,
       SCC_TELNO_SPLIT_FUN(A.TEL_NUM_ENC, 1) AS TEL_NO1,
       SCC_TELNO_SPLIT_FUN(A.TEL_NUM_ENC, 2) AS TEL_NO2,
       SCC_TELNO_SPLIT_FUN(A.TEL_NUM_ENC, 3) AS TEL_NO3,
       A.TEL_NUM_ENC AS TEL_NO,
       SCC_TELNO_SPLIT_FUN(A.FAX_NUM_ENC, 1) AS FAX_NO1,
       SCC_TELNO_SPLIT_FUN(A.FAX_NUM_ENC, 2) AS FAX_NO2,
       SCC_TELNO_SPLIT_FUN(A.FAX_NUM_ENC, 3) AS FAX_NO3,
       A.FAX_NUM_ENC AS FAX_NO,
       SCC_TELNO_SPLIT_FUN(A.HAND_PHONE_ENC, 1) AS HP_NO1,
       SCC_TELNO_SPLIT_FUN(A.HAND_PHONE_ENC, 2) AS HP_NO2,
       SCC_TELNO_SPLIT_FUN(A.HAND_PHONE_ENC, 3) AS HP_NO3,
       A.EMAIL_ADDR_ENC,
       A.CEO_HANGUL_NAME,
       A.CEO_ENGLISH_NAME,
       A.CEO_ID_NO_ENC,
       A.BIZ_CAT,
       A.BIZ_TYPE,
       A.NATION_CD,
       A.CURRENCY_CD,
       A.ELCTN_TAX_BILL_YN,
       A.VAT_TYPE,
       A.REQUEST_REASON,
       A.INSPECT_TYPE,
       A.PROC_TYPE,
       A.PROC_RESULT,
       A.PROC_RESULT_NM,
       A.PROC_RESULT_MSG,
       A.RTN_REASON,
       A.CUST_CD,
       A.HLEVEL_CUST_CD,
       A.SAP_CUST_CD,
       A.AR_PAY_POSS_YN,
       A.ACCT_CD,
       A.PAY_COND,
       A.VENDOR_ACCT_CD,
       A.VENDOR_PAY_COND,
       '' AS SAP_REQUEST_YN,
       SIGN_PROGRESS_STATUS,
       SIGN_PROGRESS_STATUS_NAME
FROM   (SELECT A.REQUEST_SYS_CD,
               A.REQUEST_NUM,
               A.REQUEST_SABUN,
               (SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = A.REQUEST_SABUN) AS REQUEST_NAME,
               A.REQUEST_DATE,
               A.REQUEST_TIME,
               A.MU_CD,
               (SELECT MU_NM FROM SCC_MU WHERE MU_CD = A.MU_CD) AS MU_NM,
               A.CUST_GRP,
               A.CUST_TYPE,
               (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'Z01' AND CODE = A.CUST_TYPE) AS CUST_TYPE_NM,
               A.CUST_CLASS,
               (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'Z02' AND CODE = A.CUST_CLASS) AS CUST_CLASS_NM,
               A.CUST_NM,
               A.CUST_CORP_NM,
               A.FULL_BSN_NO,
               A.BSN_NO,
               A.SUB_UPJANG_NUM,
               A.CORP_NUM,
               SCC_CRYPTO.DEC_FUN(A.ID_NO_ENC) AS ID_NO_ENC,
               A.FRGN_CUST_NUM,
               A.ADDR_KEY,
               SCC_ADDR_FUN(A.ADDR_KEY, :loginPersMask, :maskAuth) AS ADDR,
               SCC_CRYPTO.DEC_FUN(A.DETAIL_ADDR_ENC) AS DETAIL_ADDR,
               SCC_CRYPTO.DEC_FUN(A.TEL_NUM_ENC) AS TEL_NUM_ENC,
               SCC_CRYPTO.DEC_FUN(A.FAX_NUM_ENC) AS FAX_NUM_ENC,
               SCC_CRYPTO.DEC_FUN(A.HAND_PHONE_ENC) AS HAND_PHONE_ENC,
               SCC_CRYPTO.DEC_FUN(A.EMAIL_ADDR_ENC) AS EMAIL_ADDR_ENC,
               A.CEO_HANGUL_NAME,
               A.CEO_ENGLISH_NAME,
               SCC_CRYPTO.DEC_FUN(A.CEO_ID_NO_ENC) AS CEO_ID_NO_ENC,
               A.BIZ_CAT,
               A.BIZ_TYPE,
               A.NATION_CD,
               A.CURRENCY_CD,
               A.ELCTN_TAX_BILL_YN,
               A.VAT_TYPE,
               A.REQUEST_REASON,
               A.INSPECT_TYPE,
               A.PROC_TYPE,
               A.PROC_RESULT,
               CASE A.PROC_RESULT 
                 WHEN 'S' THEN '승인' 
                 WHEN 'E' THEN '오류' 
                 WHEN 'B' THEN '부결' 
                 WHEN 'R' THEN '요청' 
                 WHEN 'D' THEN '요청대기' 
                 WHEN '1' THEN '부결(재요청)'
                 WHEN '2' THEN '사용자취소' 
                 ELSE NVL((SELECT REQUEST_SYS_CD || '시스템' FROM SCC_SAP_CUST WHERE SAP_CUST_CD = A.SAP_CUST_CD), '에러') 
               END AS PROC_RESULT_NM,
               A.PROC_RESULT_MSG,
               A.RTN_REASON,
               A.CUST_CD,
               A.HLEVEL_CUST_CD,
               A.SAP_CUST_CD,
               A.AR_PAY_POSS_YN,
               A.ACCT_CD,
               A.PAY_COND,
               A.VENDOR_ACCT_CD,
               A.VENDOR_PAY_COND,
               '' AS SAP_REQUEST_YN,
		       CASE 
		         WHEN A.SIGN_INSTANCE_ID IS NULL THEN CASE A.PROC_RESULT
		                                                WHEN 'S' THEN 'COMPLETE' 
		                                                WHEN '2' THEN 'USERCANL'
		                                                WHEN '1' THEN 'USERCANL'
		                                                ELSE 'NONE' 
		                                              END 
		         ELSE NVL(B.SIGN_PROGRESS_STATUS, 'ING') 
		       END AS SIGN_PROGRESS_STATUS,
		       CASE 
		         WHEN A.SIGN_INSTANCE_ID IS NULL THEN CASE A.PROC_RESULT
		                                                WHEN 'S' THEN '결재완료'
		                                                WHEN '2' THEN '사용자취소' 
		                                                WHEN '1' THEN '사용자취소'
		                                                ELSE '상신대기' 
		                                              END 
		         ELSE CASE 
		                WHEN B.SIGN_PROGRESS_STATUS IS NULL THEN '상신중' 
		                ELSE (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'SIGN_PROGRESS_STATUS' AND CODE = B.SIGN_PROGRESS_STATUS) 
		              END 
		       END AS SIGN_PROGRESS_STATUS_NAME
        FROM   SCC_CUST_REQUEST A,
               SCC_SIGN_INFO B
        WHERE  B.SIGN_INSTANCE_ID(+) = A.SIGN_INSTANCE_ID
        AND    A.REQUEST_SYS_CD = 'IFC'
<#if startRequestDate?has_content>
        AND    A.REQUEST_DATE >= :startRequestDate
</#if>
<#if endRequestDate?has_content>
        AND    A.REQUEST_DATE <= :endRequestDate
</#if>
<#if requestSabun?has_content>
        AND    A.REQUEST_SABUN = :requestSabun
</#if>
<#if muCd?has_content>
        AND    A.MU_CD = :muCd
</#if>
<#if bsnNo?has_content>
        AND    A.BSN_NO = :bsnNo
</#if>
<#if custNm?has_content>
        AND    A.CUST_NM LIKE '%' || :custNm || '%'
</#if>
<#if requestNums?has_content>
        AND    A.REQUEST_NUM IN (:requestNums)
</#if>
        ) A
ORDER BY A.REQUEST_DATE DESC, A.REQUEST_TIME DESC, A.REQUEST_NUM
		]]>
	</statement>

	<!-- SAP에 요청하기 위한 신청정보를 조회한다. -->
	<statement name="selectSapRequest" type="select">
		/*+ com.hwfs.sc.scz.dao.CustRequestNewDAO.selectSapRequest */
		<![CDATA[
SELECT A.REQUEST_SYS_CD AS SYS_CD,
       A.REQUEST_NUM,
       '1' AS INSPECT_TYPE,
       A.PROC_TYPE,
       A.CUST_GRP,
       A.CUST_NM,
       A.FULL_BSN_NO,
       A.BSN_NO,
       A.SUB_UPJANG_NUM,
       A.CORP_NUM,
       A.ID_NO_ENC AS ID_NO,
       A.FRGN_CUST_NUM,
       CASE B.ADDR_CLASS WHEN '1' THEN B.BASE_ADDR1 WHEN '2' THEN B.BASE_ADDR2 ELSE NULL END AS ADDR,
       CASE B.ADDR_CLASS WHEN '1' THEN B.DETAIL_ADDR_ENC1 WHEN '2' THEN B.DETAIL_ADDR_ENC2 ELSE NULL END AS DETAIL_ADDR,
       CASE B.ADDR_CLASS WHEN '1' THEN B.ZIP_CODE1 WHEN '2' THEN B.ZIP_CODE2 ELSE NULL END AS ZIP_CODE,
       A.TEL_NUM_ENC AS TEL_NUM,
       SCC_CRYPTO.DEC_FUN(A.FAX_NUM_ENC) AS FAX_NUM,
       A.EMAIL_ADDR_ENC AS EMAIL_ADDR,
       A.CEO_ID_NO_ENC AS CEO_ID_NO,
       A.CEO_HANGUL_NAME AS CEO_NAME_HANGUL,
       A.CEO_ENGLISH_NAME AS CEO_NAME_ENGLISH,
       A.BIZ_CAT,
       A.BIZ_TYPE,
       A.NATION_CD,
       A.ELCTN_TAX_BILL_YN,
       A.VAT_TYPE,
       A.REQUEST_SABUN,
       A.REQUEST_DATE,
       A.REQUEST_TIME,
       '' AS DEL_YN,
       A.REQUEST_REASON AS CHG_REASON,
       A.ACCT_CD,
       A.PAY_COND,
       A.VENDOR_ACCT_CD,
       A.VENDOR_PAY_COND,
       'FI-002-02' AS PICODE,
       'R' AS PISTAT,
       A.REQUEST_SABUN AS LOGIN_SABUN,
       A.REQUEST_SABUN AS LOGIN_USERID,
       'YYYYYYYYYYY' AS LOGIN_PERS_MASK
FROM   SCC_CUST_REQUEST A,
       SCC_ADDR_INFO B,
       SCC_SIGN_INFO C
WHERE  B.ADDR_KEY(+) = A.ADDR_KEY
AND    C.SIGN_INSTANCE_ID = A.SIGN_INSTANCE_ID
AND    C.SIGN_PROGRESS_STATUS = 'COMPLETE'
AND    A.PROC_RESULT = 'D'
AND    A.REQUEST_SYS_CD = 'IFC'
		]]>
	</statement>

	<!-- ST_CUST에서 조회한다. -->
	<statement name="selectExistsStCust" type="select">
		/*+ com.hwfs.sc.scz.dao.CustRequestNewDAO.selectExistsStCust */
		<![CDATA[
SELECT 'ST_CUST' AS FIND_TABLE,
       A.CUST_GRP,
       A.CUST_TYPE,
       A.CUST_CLASS,
       A.CUST_NM,
       A.CUST_CORP_NM,
       A.FULL_BSN_NO,
       A.BSN_NO,
       A.SUB_UPJANG_NUM,
       A.CORP_NUM,
       A.ID_NO_ENC,
       A.FRGN_CUST_NUM,
       A.ADDR_KEY,
       A.ADDR,
       A.DETAIL_ADDR_ENC,
       SCC_TELNO_SPLIT_FUN(A.TEL_NO_ENC, 1) AS TEL_NO1,
       SCC_TELNO_SPLIT_FUN(A.TEL_NO_ENC, 2) AS TEL_NO2,
       SCC_TELNO_SPLIT_FUN(A.TEL_NO_ENC, 3) AS TEL_NO3,
       SCC_TELNO_SPLIT_FUN(A.FAX_NO_ENC, 1) AS FAX_NO1,
       SCC_TELNO_SPLIT_FUN(A.FAX_NO_ENC, 2) AS FAX_NO2,
       SCC_TELNO_SPLIT_FUN(A.FAX_NO_ENC, 3) AS FAX_NO3,
       SCC_TELNO_SPLIT_FUN(A.HAND_PHONE_ENC, 1) AS HP_NO1,
       SCC_TELNO_SPLIT_FUN(A.HAND_PHONE_ENC, 2) AS HP_NO2,
       SCC_TELNO_SPLIT_FUN(A.HAND_PHONE_ENC, 3) AS HP_NO3,
       A.TEL_NO_ENC AS TEL_NO,
       A.FAX_NO_ENC AS FAX_NO,
       A.EMAIL_ADDR_ENC,
       A.CEO_HANGUL_NAME,
       A.CEO_ENGLISH_NAME,
       A.CEO_ID_NO_ENC,
       A.BIZ_CAT,
       A.BIZ_TYPE,
       A.NATION_CD,
       A.CURRENCY_CD,
       A.ELCTN_TAX_BILL_YN,
       A.VAT_TYPE,
       A.REQUEST_REASON,
       A.INSPECT_TYPE,
       A.PROC_TYPE,
       A.PROC_RESULT,
       CASE A.PROC_RESULT WHEN 'S' THEN '승인' WHEN 'E' THEN '오류' WHEN 'B' THEN '부결' WHEN 'R' THEN '요청' WHEN 'D' THEN '요청대기' ELSE '' END AS PROC_RESULT_NM,
       A.PROC_RESULT_MSG,
       A.RTN_REASON,
       A.CUST_CD,
       A.HLEVEL_CUST_CD,
       A.SAP_CUST_CD,
       A.AR_PAY_POSS_YN,
       A.ACCT_CD,
       A.PAY_COND,
       A.VENDOR_ACCT_CD,
       A.VENDOR_PAY_COND,
       '' AS REQUEST_DATE,
       '' AS REQUEST_SABUN,
       '' AS REQUEST_NAME
FROM   (SELECT A.CUSTCD AS CUST_CD,
               A.SAP_CUST_CD,
               A.CUST_GRP_CD AS CUST_GRP,
               A.CUSTTYPE AS CUST_TYPE,
               A.CUSTGUBUN AS CUST_CLASS,
               A.CUSTNM AS CUST_NM,
               A.CUST_CORP_NM,
               SCC_CRYPTO.DEC_FUN(A.TEL_NO_ENC) AS TEL_NO_ENC,
               SCC_CRYPTO.DEC_FUN(A.HAND_PHONE_ENC) AS HAND_PHONE_ENC,
               SCC_CRYPTO.DEC_FUN(A.FAX_NO_ENC) AS FAX_NO_ENC,
               SCC_CRYPTO.DEC_FUN(A.EMAIL_ADDR_ENC) AS EMAIL_ADDR_ENC,
               A.ADDR_KEY,
               SCC_ADDR_FUN(A.ADDR_KEY, :loginPersMask, :maskAuth) AS ADDR,
               SCC_CRYPTO.DEC_FUN(A.DETAIL_ADDR_ENC) AS DETAIL_ADDR_ENC,
               A.FULL_BSN_NO,
               A.FRGN_CUST_CD AS FRGN_CUST_NUM,
               A.SAUPNO AS BSN_NO,
               A.SUB_UPJANG_NUM,
               A.BUBINNO AS CORP_NUM,
               A.DRNAME1 AS CEO_HANGUL_NAME,
               A.DRNAME2 AS CEO_ENGLISH_NAME,
               A.UP_JONG AS BIZ_CAT,
               A.UP_TAE AS BIZ_TYPE,
               A.NATION_CD,
               A.CURRENCY_CD,
               A.ELCTN_TAX_BILL_YN,
               A.VAT_CUSTGUBUN AS VAT_TYPE,
               A.AR_PAY_POSS_YN,
               A.CUST_ACCT_CD AS ACCT_CD,
               A.CUST_PAY_COND AS PAY_COND,
               A.VENDOR_ACCT_CD,
               A.VENDOR_PAY_COND,
               A.RTN_REASON,
               A.PROC_RESULT,
               A.PROC_RESULT_MSG,
               A.CHG_REASON AS REQUEST_REASON,
               A.INSPECT_TYPE,
               A.PROC_TYPE,
               A.HLEVEL_CUST_CD,
               SCC_CRYPTO.DEC_FUN(A.CEO_ID_NO_ENC) AS CEO_ID_NO_ENC,
               SCC_CRYPTO.DEC_FUN(A.ID_NO_ENC) AS ID_NO_ENC
        FROM   ST_CUST A
        WHERE  1 =1
<#if bsnNo?has_content>
        AND    A.SAUPNO = :bsnNo
</#if>
<#if idNo?has_content>
        AND    A.ID_NO_ENC = SCC_CRYPTO.ENC_FUN(:idNo)
</#if>
<#if frgnNo?has_content>
        AND    A.FRGN_CUST_CD = :frgnNo
</#if>
        ) A
		]]>
	</statement>

	<!-- SCC_SAP_CUST 에서 조회한다. -->
	<statement name="selectExistsSccSapCust" type="select">
		/*+ com.hwfs.sc.scz.dao.CustRequestNewDAO.selectExistsSccSapCust */
		<![CDATA[
SELECT 'SCC_SAP_CUST' AS FIND_TABLE,
       A.CUST_GRP,
       A.CUST_TYPE,
       A.CUST_CLASS,
       A.CUST_NM,
       A.CUST_CORP_NM,
       A.FULL_BSN_NO,
       A.BSN_NO,
       A.SUB_UPJANG_NUM,
       A.CORP_NUM,
       A.ID_NO_ENC,
       A.FRGN_CUST_NUM,
       A.ZIP_CODE,
       A.ADDR,
       A.DETAIL_ADDR_ENC,
       SCC_TELNO_SPLIT_FUN(A.TEL_NO_ENC, 1) AS TEL_NO1,
       SCC_TELNO_SPLIT_FUN(A.TEL_NO_ENC, 2) AS TEL_NO2,
       SCC_TELNO_SPLIT_FUN(A.TEL_NO_ENC, 3) AS TEL_NO3,
       SCC_TELNO_SPLIT_FUN(A.FAX_NO_ENC, 1) AS FAX_NO1,
       SCC_TELNO_SPLIT_FUN(A.FAX_NO_ENC, 2) AS FAX_NO2,
       SCC_TELNO_SPLIT_FUN(A.FAX_NO_ENC, 3) AS FAX_NO3,
       SCC_TELNO_SPLIT_FUN(A.HAND_PHONE_ENC, 1) AS HP_NO1,
       SCC_TELNO_SPLIT_FUN(A.HAND_PHONE_ENC, 2) AS HP_NO2,
       SCC_TELNO_SPLIT_FUN(A.HAND_PHONE_ENC, 3) AS HP_NO3,
       A.TEL_NO_ENC AS TEL_NO,
       A.FAX_NO_ENC AS FAX_NO,
       A.EMAIL_ADDR_ENC,
       A.CEO_HANGUL_NAME,
       A.CEO_ENGLISH_NAME,
       A.CEO_ID_NO_ENC,
       A.BIZ_CAT,
       A.BIZ_TYPE,
       A.NATION_CD,
       A.CURRENCY_CD,
       A.ELCTN_TAX_BILL_YN,
       A.VAT_TYPE,
       A.REQUEST_REASON,
       A.INSPECT_TYPE,
       A.PROC_TYPE,
       A.PROC_RESULT,
       CASE A.PROC_RESULT WHEN 'S' THEN '승인' WHEN 'E' THEN '오류' WHEN 'B' THEN '부결' WHEN 'R' THEN '요청' WHEN 'D' THEN '요청대기' ELSE '' END AS PROC_RESULT_NM,
       A.PROC_RESULT_MSG,
       A.RTN_REASON,
       A.CUST_CD,
       A.HLEVEL_CUST_CD,
       A.SAP_CUST_CD,
       A.AR_PAY_POSS_YN,
       A.ACCT_CD,
       A.PAY_COND,
       A.VENDOR_ACCT_CD,
       A.VENDOR_PAY_COND,
       '' AS REQUEST_DATE,
       '' AS REQUEST_SABUN,
       '' AS REQUEST_NAME
FROM   (SELECT '' AS CUST_CD,
               A.SAP_CUST_CD,
               A.CUST_GRP,
               '' AS CUST_TYPE,
               '' AS CUST_CLASS,
               A.CUST_NM,
               A.CUST_NM AS CUST_CORP_NM,
               '' AS TEL_NO_ENC,
               '' AS HAND_PHONE_ENC,
               '' AS FAX_NO_ENC,
               SCC_CRYPTO.DEC_FUN(A.EMAIL_ADDR_ENC) AS EMAIL_ADDR_ENC,
               ZIP_CODE,
               ADDR,
               SCC_CRYPTO.DEC_FUN(DETAIL_ADDR_ENC) AS DETAIL_ADDR_ENC,
               A.FULL_BSN_NO,
               A.FRGN_CUST_NUM,
               A.BSN_NO,
               A.SUB_UPJANG_NUM,
               A.CEO_NAME_HANGUL AS CEO_HANGUL_NAME,
               A.CEO_NAME_ENGLISH AS CEO_ENGLISH_NAME,
               A.BIZ_CAT,
               A.BIZ_TYPE,
               A.NATION_CD,
               '' AS CURRENCY_CD,
               A.ELCTN_TAX_BILL_YN,
               A.VAT_TYPE,
               'N' AS AR_PAY_POSS_YN,
               B.CUST_ACCT_CD AS ACCT_CD,
               B.CUST_PAY_COND AS PAY_COND,
               B.VENDOR_ACCT_CD,
               B.VENDOR_PAY_COND,
               A.RTN_REASON,
               A.PROC_RESULT,
               A.PROC_RESULT_MSG,
               A.CHG_REASON AS REQUEST_REASON,
               A.INSPECT_TYPE,
               A.PROC_TYPE,
               '' AS HLEVEL_CUST_CD,
               SCC_CRYPTO.DEC_FUN(A.CEO_ID_NO_ENC) AS CEO_ID_NO_ENC,
               SCC_CRYPTO.DEC_FUN(A.ID_NO_ENC) AS ID_NO_ENC,
               A.CORP_NUM
        FROM   SCC_SAP_CUST A
           ,   SAP_IF.SAP_IFC_CUST_BU B
        WHERE  B.SYS_CD = A.SYS_CD
          AND  B.CUST_SEQ = A.CUST_SEQ
          AND  B.BU_CD = '2000'
          AND  NVL(B.CUST_CREATION_YN, 'N') = 'Y'
<#if bsnNo?has_content>
        AND    A.BSN_NO = :bsnNo
</#if>
<#if idNo?has_content>
        AND    A.ID_NO_ENC = SCC_CRYPTO.ENC_FUN(:idNo)
</#if>
<#if frgnNo?has_content>
        AND    A.FRGN_CUST_NUM = :frgnNo
</#if>
        ) A
		]]>
	</statement>

	<!-- SCC_CUST_REQUEST 에서 조회한다. -->
	<statement name="selectExistsSccCustRequest" type="select">
		/*+ com.hwfs.sc.scz.dao.CustRequestNewDAO.selectExistsSccCustRequest */
		<![CDATA[
SELECT 'SCC_CUST_REQUEST' AS FIND_TABLE,
       A.CUST_GRP,
       A.CUST_TYPE,
       A.CUST_CLASS,
       A.CUST_NM,
       A.CUST_CORP_NM,
       A.FULL_BSN_NO,
       A.BSN_NO,
       A.SUB_UPJANG_NUM,
       A.CORP_NUM,
       A.ID_NO_ENC,
       A.FRGN_CUST_NUM,
       A.ADDR_KEY,
       A.ADDR,
       A.DETAIL_ADDR_ENC,
       SCC_TELNO_SPLIT_FUN(A.TEL_NO_ENC, 1) AS TEL_NO1,
       SCC_TELNO_SPLIT_FUN(A.TEL_NO_ENC, 2) AS TEL_NO2,
       SCC_TELNO_SPLIT_FUN(A.TEL_NO_ENC, 3) AS TEL_NO3,
       SCC_TELNO_SPLIT_FUN(A.FAX_NO_ENC, 1) AS FAX_NO1,
       SCC_TELNO_SPLIT_FUN(A.FAX_NO_ENC, 2) AS FAX_NO2,
       SCC_TELNO_SPLIT_FUN(A.FAX_NO_ENC, 3) AS FAX_NO3,
       SCC_TELNO_SPLIT_FUN(A.HAND_PHONE_ENC, 1) AS HP_NO1,
       SCC_TELNO_SPLIT_FUN(A.HAND_PHONE_ENC, 2) AS HP_NO2,
       SCC_TELNO_SPLIT_FUN(A.HAND_PHONE_ENC, 3) AS HP_NO3,
       A.TEL_NO_ENC AS TEL_NO,
       A.FAX_NO_ENC AS FAX_NO,
       A.EMAIL_ADDR_ENC,
       A.CEO_HANGUL_NAME,
       A.CEO_ENGLISH_NAME,
       A.CEO_ID_NO_ENC,
       A.BIZ_CAT,
       A.BIZ_TYPE,
       A.NATION_CD,
       A.CURRENCY_CD,
       A.ELCTN_TAX_BILL_YN,
       A.VAT_TYPE,
       A.REQUEST_REASON,
       A.INSPECT_TYPE,
       A.PROC_TYPE,
       A.PROC_RESULT,
       CASE A.PROC_RESULT WHEN 'S' THEN '승인' WHEN 'E' THEN '오류' WHEN 'B' THEN '부결' WHEN 'R' THEN '요청' WHEN 'D' THEN '요청대기' ELSE '' END AS PROC_RESULT_NM,
       A.PROC_RESULT_MSG,
       A.RTN_REASON,
       A.CUST_CD,
       A.HLEVEL_CUST_CD,
       A.SAP_CUST_CD,
       A.AR_PAY_POSS_YN,
       A.ACCT_CD,
       A.PAY_COND,
       A.VENDOR_ACCT_CD,
       A.VENDOR_PAY_COND,
       A.REQUEST_DATE,
       A.REQUEST_SABUN,
       A.REQUEST_NAME
FROM   (SELECT A.CUST_GRP,
               A.CUST_TYPE,
               A.CUST_CLASS,
               A.CUST_NM,
               A.CUST_CORP_NM,
               A.FULL_BSN_NO,
               A.BSN_NO,
               A.SUB_UPJANG_NUM,
               A.CORP_NUM,
               SCC_CRYPTO.DEC_FUN(A.ID_NO_ENC) AS ID_NO_ENC,
               A.FRGN_CUST_NUM,
               A.ADDR_KEY,
               SCC_ADDR_FUN(A.ADDR_KEY, :loginPersMask, :maskAuth) AS ADDR,
               SCC_CRYPTO.DEC_FUN(A.DETAIL_ADDR_ENC) AS DETAIL_ADDR_ENC,
               SCC_CRYPTO.DEC_FUN(A.TEL_NUM_ENC) AS TEL_NO_ENC,
               SCC_CRYPTO.DEC_FUN(A.FAX_NUM_ENC) AS FAX_NO_ENC,
               SCC_CRYPTO.DEC_FUN(A.HAND_PHONE_ENC) AS HAND_PHONE_ENC,
               SCC_CRYPTO.DEC_FUN(A.EMAIL_ADDR_ENC) AS EMAIL_ADDR_ENC,
               A.CEO_HANGUL_NAME,
               A.CEO_ENGLISH_NAME,
               SCC_CRYPTO.DEC_FUN(A.CEO_ID_NO_ENC) AS CEO_ID_NO_ENC,
               A.BIZ_CAT,
               A.BIZ_TYPE,
               A.NATION_CD,
               A.CURRENCY_CD,
               A.ELCTN_TAX_BILL_YN,
               A.VAT_TYPE,
               A.REQUEST_REASON,
               A.INSPECT_TYPE,
               A.PROC_TYPE,
               A.PROC_RESULT,
               A.PROC_RESULT_MSG,
               A.RTN_REASON,
               A.CUST_CD,
               A.HLEVEL_CUST_CD,
               A.SAP_CUST_CD,
               A.AR_PAY_POSS_YN,
               A.ACCT_CD,
               A.PAY_COND,
               A.VENDOR_ACCT_CD,
               A.VENDOR_PAY_COND,
               TO_CHAR(TO_DATE(A.REQUEST_DATE, 'YYYYMMDD'), 'YYYY-MM-DD') AS REQUEST_DATE,
               A.REQUEST_SABUN,
               (SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = A.REQUEST_SABUN) AS REQUEST_NAME
        FROM   SCC_CUST_REQUEST A
        WHERE  1 = 1
        AND    A.PROC_RESULT <> 'B' -- 반려
        AND    A.PROC_RESULT <> '2' -- 사용자취소
<#if bsnNo?has_content>
        AND    A.BSN_NO = :bsnNo
</#if>
<#if idNo?has_content>
        AND    A.ID_NO_ENC = SCC_CRYPTO.ENC_FUN(:idNo)
</#if>
<#if frgnNo?has_content>
        AND    A.FRGN_CUST_NUM = :frgnNo
</#if>
        ) A
		]]>
	</statement>

	<!-- 거래처 신청정보(을)를 등록한다. -->
	<statement name="insertSccCustRequest" type="insert">
		/*+ com.hwfs.sc.scz.dao.CustRequestNewDAO.insertSccCustRequest */
		<![CDATA[
INSERT INTO SCC_CUST_REQUEST
(
 REQUEST_SYS_CD,
 REQUEST_NUM,
 REQUEST_SABUN,
 REQUEST_DATE,
 REQUEST_TIME,
 MU_CD,
 CUST_GRP,
 CUST_TYPE,
 CUST_CLASS,
 CUST_NM,
 CUST_CORP_NM,
 FULL_BSN_NO,
 BSN_NO,
 SUB_UPJANG_NUM,
 CORP_NUM,
 ID_NO_ENC,
 FRGN_CUST_NUM,
 ADDR_KEY,
 DETAIL_ADDR_ENC,
 TEL_NUM_ENC,
 FAX_NUM_ENC,
 HAND_PHONE_ENC,
 EMAIL_ADDR_ENC,
 CEO_HANGUL_NAME,
 CEO_ENGLISH_NAME,
 CEO_ID_NO_ENC,
 BIZ_CAT,
 BIZ_TYPE,
 NATION_CD,
 CURRENCY_CD,
 ELCTN_TAX_BILL_YN,
 VAT_TYPE,
 REQUEST_REASON,
 INSPECT_TYPE,
 PROC_TYPE,
 PROC_RESULT,
 PROC_RESULT_MSG,
 RTN_REASON,
 CUST_CD,
 HLEVEL_CUST_CD,
 SAP_CUST_CD,
 AR_PAY_POSS_YN,
 ACCT_CD,
 PAY_COND,
 VENDOR_ACCT_CD,
 VENDOR_PAY_COND,
 CUSER,
 CDATE,
 UUSER,
 UDATE
) VALUES (
 'IFC',
 :requestNum,
 :loginSabun,
 TO_CHAR(SYSDATE, 'YYYYMMDD'),
 TO_CHAR(SYSDATE, 'HH24MISS'),
<#if muCd?exists> :muCd, <#else> null, </#if>
<#if custGrp?exists> :custGrp, <#else> null, </#if>
<#if custType?exists> :custType, <#else> null, </#if>
<#if custClass?exists> :custClass, <#else> null, </#if>
<#if custNm?exists> :custNm, <#else> null, </#if>
<#if custCorpNm?exists> :custCorpNm, <#else> null, </#if>
<#if fullBsnNo?exists> :fullBsnNo, <#else> null, </#if>
<#if bsnNo?exists> :bsnNo, <#else> null, </#if>
<#if subUpjangNum?exists> :subUpjangNum, <#else> null, </#if>
<#if corpNum?exists> :corpNum, <#else> null, </#if>
<#if idNoEnc?exists> SCC_CRYPTO.ENC_FUN(:idNoEnc), <#else> null, </#if>
<#if frgnCustNum?exists> :frgnCustNum, <#else> null, </#if>
<#if addrKey?exists> :addrKey, <#else> null, </#if>
<#if detailAddr?exists> SCC_CRYPTO.ENC_FUN(:detailAddr), <#else> null, </#if>
<#if telNumEnc?exists> SCC_CRYPTO.ENC_FUN(:telNumEnc), <#else> null, </#if>
<#if faxNumEnc?exists> SCC_CRYPTO.ENC_FUN(:faxNumEnc), <#else> null, </#if>
<#if handPhoneEnc?exists> SCC_CRYPTO.ENC_FUN(:handPhoneEnc), <#else> null, </#if>
<#if emailAddrEnc?exists> SCC_CRYPTO.ENC_FUN(:emailAddrEnc), <#else> null, </#if>
<#if ceoHangulName?exists> :ceoHangulName, <#else> null, </#if>
<#if ceoEnglishName?exists> :ceoEnglishName, <#else> null, </#if>
<#if ceoIdNoEnc?exists> SCC_CRYPTO.ENC_FUN(:ceoIdNoEnc), <#else> null, </#if>
<#if bizCat?exists> :bizCat, <#else> null, </#if>
<#if bizType?exists> :bizType, <#else> null, </#if>
<#if nationCd?exists> :nationCd, <#else> null, </#if>
<#if currencyCd?exists> :currencyCd, <#else> null, </#if>
<#if elctnTaxBillYn?exists> :elctnTaxBillYn, <#else> null, </#if>
<#if vatType?exists> :vatType, <#else> null, </#if>
<#if requestReason?exists> :requestReason, <#else> null, </#if>
<#if inspectType?exists> :inspectType, <#else> null, </#if>
<#if procType?exists> :procType, <#else> null, </#if>
<#if procResult?exists> :procResult, <#else> null, </#if>
<#if procResultMsg?exists> :procResultMsg, <#else> null, </#if>
<#if rtnReason?exists> :rtnReason, <#else> null, </#if>
<#if custCd?exists> :custCd, <#else> null, </#if>
<#if hlevelCustCd?exists> :hlevelCustCd, <#else> null, </#if>
<#if sapCustCd?exists> :sapCustCd, <#else> null, </#if>
<#if arPayPossYn?exists> :arPayPossYn, <#else> null, </#if>
<#if acctCd?exists> :acctCd, <#else> null, </#if>
<#if payCond?exists> :payCond, <#else> null, </#if>
<#if vendorAcctCd?exists> :vendorAcctCd, <#else> null, </#if>
<#if vendorPayCond?exists> :vendorPayCond, <#else> null, </#if>
       :loginSabun,
       SYSDATE,
       :loginSabun,
       SYSDATE
)
		]]>
	</statement>

	<!-- 거래처(ST_CUST)를 생성한다. -->
	<statement name="insertStCust" type="insert">
		/*+ com.hwfs.sc.scz.dao.CustRequestNewDAO.insertStCust */
		<![CDATA[
INSERT INTO ST_CUST
(
 CUSTCD,
 SAP_CUST_CD,
 CUST_GRP_CD,
 CUSTTYPE,
 CUSTGUBUN,
 CUSTNM,
 CUST_CORP_NM,
 TEL_NO_ENC,
 HAND_PHONE_ENC,
 FAX_NO_ENC,
 EMAIL_ADDR_ENC,
 ADDR_KEY,
 DETAIL_ADDR_ENC,
 FULL_BSN_NO,
 SABUN,
 FRGN_CUST_CD,
 SAUPNO,
 SUB_UPJANG_NUM,
 BUBINNO,
 DRNAME1,
 DRNAME2,
 UP_JONG,
 UP_TAE,
 NATION_CD,
 CURRENCY_CD,
 ELCTN_TAX_BILL_YN,
 VAT_CUSTGUBUN,
 AR_PAY_POSS_YN,
 C_PER_NAME,
 INCHARGE_DEPT_NM,
 C_PER_TELNO_ENC,
 C_PART_FAX_ENC,
 C_PER_HPNO_ENC,
 C_PER_EMAIL_ENC,
 PO_TYPE,
 PO_CENTER_YN,
 PO_USEYN,
 SUBINV_CODE,
 SUBINV_CODE_OUTVAT,
 MRO_FLAG,
 CUST_CREATION_YN,
 CUST_ACCT_CD,
 CUST_PAY_COND,
 VENDOR_CREATION_YN,
 VENDOR_ACCT_CD,
 VENDOR_PAY_COND,
 DEL_YN,
 RTN_REASON,
 PROC_RESULT,
 PROC_RESULT_MSG,
 CHG_REASON,
 CUST_REQUEST_SYS_CD,
 CUST_REQUEST_NUM,
 INSPECT_TYPE,
 PROC_TYPE,
 HLEVEL_CUST_CD,
 OLD_CUST_CD,
 USE_YN,
 CEO_ID_NO_ENC,
 CREATE_BY,
 CREATE_DATE,
 UPDATE_BY,
 UPDATE_DATE
) VALUES (
 :custCd,
<#if sapCustCd?exists> :sapCustCd, <#else> null, </#if>
<#if custGrp?exists> :custGrp, <#else> null, </#if>
<#if custType?exists> :custType, <#else> null, </#if>
<#if custClass?exists> :custClass, <#else> null, </#if>
<#if custNm?exists> :custNm, <#else> null, </#if>
<#if custCorpNm?exists> :custCorpNm, <#else> null, </#if>
<#if telNumEnc?exists> SCC_CRYPTO.ENC_FUN(:telNumEnc), <#else> null, </#if>
<#if handPhoneEnc?exists> SCC_CRYPTO.ENC_FUN(:handPhoneEnc), <#else> null, </#if>
<#if faxNumEnc?exists> SCC_CRYPTO.ENC_FUN(:faxNumEnc), <#else> null, </#if>
<#if emailAddrEnc?exists> SCC_CRYPTO.ENC_FUN(:emailAddrEnc), <#else> null, </#if>
<#if addrKey?exists> :addrKey, <#else> null, </#if>
<#if detailAddr?exists> SCC_CRYPTO.ENC_FUN(:detailAddr), <#else> null, </#if>
<#if fullBsnNo?exists> :fullBsnNo, <#else> null, </#if>
<#if sabun?exists> :sabun, <#else> null, </#if>
<#if frgnCustNum?exists> :frgnCustNum, <#else> null, </#if>
<#if bsnNo?exists> :bsnNo, <#else> null, </#if>
<#if subUpjangNum?exists> :subUpjangNum, <#else> null, </#if>
<#if corpNum?exists> :corpNum, <#else> null, </#if>
<#if ceoHangulName?exists> :ceoHangulName, <#else> null, </#if>
<#if ceoEnglishName?exists> :ceoEnglishName, <#else> null, </#if>
<#if bizCat?exists> :bizCat, <#else> null, </#if>
<#if bizType?exists> :bizType, <#else> null, </#if>
<#if nationCd?exists> :nationCd, <#else> null, </#if>
<#if currencyCd?exists> :currencyCd, <#else> null, </#if>
<#if elctnTaxBillYn?exists> :elctnTaxBillYn, <#else> null, </#if>
<#if vatType?exists> :vatType, <#else> null, </#if>
<#if arPayPossYn?exists> :arPayPossYn, <#else> 'N', </#if>
<#if cPerName?exists> :cPerName, <#else> null, </#if>
<#if inchargeDeptNm?exists> :inchargeDeptNm, <#else> null, </#if>
<#if cPerTelnoEnc?exists> :cPerTelnoEnc, <#else> null, </#if>
<#if cPartFaxEnc?exists> :cPartFaxEnc, <#else> null, </#if>
<#if cPerHpnoEnc?exists> :cPerHpnoEnc, <#else> null, </#if>
<#if cPerEmailEnc?exists> :cPerEmailEnc, <#else> null, </#if>
<#if poType?exists> :poType, <#else> null, </#if>
<#if poCenterYn?exists> DECODE(:poCenterYn, '1', 'Y', 'N'), <#else> null, </#if>
<#if poUseyn?exists> :poUseyn, <#else> null, </#if>
<#if subinvCode?exists> :subinvCode, <#else> null, </#if>
<#if subinvCodeOutvat?exists> :subinvCodeOutvat, <#else> null, </#if>
<#if mroFlag?exists> :mroFlag, <#else> null, </#if>
<#if custCreationYn?exists> :custCreationYn, <#else> null, </#if>
<#if acctCd?exists> :acctCd, <#else> null, </#if>
<#if payCond?exists> :payCond, <#else> null, </#if>
<#if vendorCreationYn?exists> :vendorCreationYn, <#else> null, </#if>
<#if vendorAcctCd?exists> :vendorAcctCd, <#else> null, </#if>
<#if vendorPayCond?exists> :vendorPayCond, <#else> null, </#if>
 'N',
<#if rtnReason?exists> :rtnReason, <#else> null, </#if>
<#if procResult?exists> :procResult, <#else> null, </#if>
<#if procResultMsg?exists> :procResultMsg, <#else> null, </#if>
<#if requestReason?exists> :requestReason, <#else> null, </#if>
 'IFC',
<#if requestNum?exists> :requestNum, <#else> null, </#if>
<#if inspectType?exists> :inspectType, <#else> null, </#if>
<#if procType?exists> :procType, <#else> null, </#if>
<#if hlevelCustCd?exists> :hlevelCustCd, <#else> null, </#if>
 null,
 'Y',
<#if ceoIdNoEnc?exists> SCC_CRYPTO.ENC_FUN(:ceoIdNoEnc), <#else> null, </#if>
 :loginSabun,
 SYSDATE,
 :loginSabun,
 SYSDATE
)
		]]>
	</statement>

	<!-- 거래처 신청정보의 sap요청 상태를 수정한다. -->
	<statement name="updateSapRequestStatus" type="update">
		/*+ com.hwfs.sc.scz.dao.CustRequestNewDAO.updateSapRequestStatus */
		<![CDATA[
UPDATE SCC_CUST_REQUEST
SET    PROC_RESULT = 'R',
       UUSER = :loginSabun,
       UDATE = SYSDATE
WHERE  REQUEST_SYS_CD = 'IFC'
AND    REQUEST_NUM = :requestNum
		]]>
	</statement>

	<!-- 거래처 신청정보의 sap요청 상태를 수정한다. -->
	<statement name="update" type="update">
		/*+ com.hwfs.sc.scz.dao.CustRequestNewDAO.update */
		<![CDATA[
UPDATE SCC_CUST_REQUEST
SET    PROC_RESULT = :procResult,
       UUSER = :loginSabun,
       UDATE = SYSDATE
WHERE  REQUEST_SYS_CD = 'IFC'
AND    REQUEST_NUM = :requestNum
		]]>
	</statement>

	<!-- 기안자 정보 -->
	<statement name="selectSendUser" type="select">
		/*+ com.hwfs.sc.scz.dao.CustRequestNewDAO.selectSendUser */
		<![CDATA[
SELECT A.NM_KOR || '(' || C.CC_NM || ')' AS APPROVAL_USER
  FROM SCC_USERINFO A
     , ST_UPJANG B
     , HLDC_SC_DEPT_V C
 WHERE B.UPJANG = A.UPJANG
   AND C.CC_CD = B.CC_CD
   AND A.SABUN = :sabun
		]]>
	</statement>

	<!-- 제목 정보 -->
	<statement name="selectTitle" type="select">
		/*+ com.hwfs.sc.scz.dao.CustRequestNewDAO.selectTitle */
		<![CDATA[
SELECT '거래처 전산등록/변경 요청(' || CASE WHEN (A.CNT_NEW+A.CNT_CHANGE-1) = 0 THEN A.CUST_NM ELSE A.CUST_NM || '외 ' || TO_CHAR(A.CNT_NEW + A.CNT_CHANGE - 1) || '건' END || ')' AS TITLE
     , A.CNT_NEW
     , A.CNT_CHANGE
  FROM (SELECT A.CUST_NM
             , (SELECT COUNT(*) FROM SCC_CUST_REQUEST WHERE REQUEST_SYS_CD = 'IFC' AND REQUEST_NUM IN (:requestNums) AND PROC_TYPE = '1')  AS CNT_NEW
             , (SELECT COUNT(*) FROM SCC_CUST_REQUEST WHERE REQUEST_SYS_CD = 'IFC' AND REQUEST_NUM IN (:requestNums) AND PROC_TYPE = '2')  AS CNT_CHANGE
          FROM SCC_CUST_REQUEST A
         WHERE A.REQUEST_SYS_CD = 'IFC'
           AND A.REQUEST_NUM IN (:requestNums)
           AND ROWNUM = 1
         ORDER BY A.REQUEST_NUM) A
		]]>
	</statement>

	<!-- 신청 정보 -->
	<statement name="selectRequestNewCust" type="select">
		/*+ com.hwfs.sc.scz.dao.CustRequestNewDAO.selectRequestNewCust */
		<![CDATA[
SELECT A.CUST_NM
     , A.CEO_HANGUL_NAME
     , SUBSTR(A.BSN_NO, 1, 3) || '-' || SUBSTR(A.BSN_NO, 4, 2) || '-' || SUBSTR(A.BSN_NO, 6) || '(' || A.SUB_UPJANG_NUM || ')' AS BSN_NO
     , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'Z02' AND CODE = A.CUST_CLASS) AS CUST_CLASS
     , A.BIZ_TYPE
     , A.BIZ_CAT
     , SCC_GET_ADDR_FUN('ZIP', A.ADDR_KEY, '', '') || ') ' || SCC_GET_ADDR_FUN('BASE', A.ADDR_KEY, '', '') || ' ' || SCC_GET_ADDR_FUN('DETAIL', A.ADDR_KEY, '111111111111', '0') AS ADDR
     , A.REQUEST_REASON
  FROM SCC_CUST_REQUEST A
 WHERE A.REQUEST_SYS_CD = 'IFC'
   AND A.REQUEST_NUM IN (:requestNums)
   AND A.PROC_TYPE = '1'
 ORDER BY A.REQUEST_NUM 
		]]>
	</statement>

	<!-- 신청 정보 -->
	<statement name="selectRequestChangeCust" type="select">
		/*+ com.hwfs.sc.scz.dao.CustRequestNewDAO.selectRequestChangeCust */
		<![CDATA[
SELECT A.CUST_NM
     , A.CEO_HANGUL_NAME
     , SUBSTR(A.BSN_NO, 1, 3) || '-' || SUBSTR(A.BSN_NO, 4, 2) || '-' || SUBSTR(A.BSN_NO, 6) || '(' || A.SUB_UPJANG_NUM || ')' AS BSN_NO
     , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'Z02' AND CODE = A.CUST_CLASS) AS CUST_CLASS
     , A.BIZ_TYPE
     , A.BIZ_CAT
     , SCC_GET_ADDR_FUN('ZIP', A.ADDR_KEY, '', '') || ') ' || SCC_GET_ADDR_FUN('BASE', A.ADDR_KEY, '', '') || ' ' || SCC_GET_ADDR_FUN('DETAIL', A.ADDR_KEY, '111111111111', '0') AS ADDR
     , A.REQUEST_REASON
  FROM SCC_CUST_REQUEST A
 WHERE A.REQUEST_SYS_CD = 'IFC'
   AND A.REQUEST_NUM IN (:requestNums)
   AND A.PROC_TYPE = '2'
 ORDER BY A.REQUEST_NUM 
		]]>
	</statement>

	<!-- 결재아이디를 저장한다. -->
	<statement name="updateGwId" type="update">
		/*+ com.hwfs.sc.scz.dao.CustRequestNewDAO.updateGwId */
		<![CDATA[
UPDATE SCC_CUST_REQUEST
   SET SIGN_INSTANCE_ID = :signInstanceId
 WHERE REQUEST_SYS_CD = 'IFC'
   AND REQUEST_NUM IN (:requestNums)
		]]>
	</statement>

	<!-- 거래처 신청의 상태를 요청으로 변경한다.(스케줄러에 의해서 호출되어진다.) -->
	<statement name="updateProcResult" type="update">
		/*+ com.hwfs.sc.scz.dao.CustRequestNewDAO.updateProcResult */
		<![CDATA[
UPDATE SCC_CUST_REQUEST
   SET PROC_RESULT = 'R'
     , SEND_MAIL_STATUS = '1'
 WHERE REQUEST_SYS_CD = 'IFC'
   AND REQUEST_NUM = :requestNum
		]]>
	</statement>

	<!-- 거래처 요청내용에 대한 메일 내용(스케줄러에 의해서 호출된다.). -->
	<statement name="selectMailContent" type="delete">
		/*+ com.hwfs.sc.scz.dao.CustRequestNewDAO.selectMailContent */
		<![CDATA[
SELECT NVL(SCC_CRYPTO.DEC_FUN(B.EMAIL_ENC), 'NONE') AS EMAIL_ADDR
     , B.NM_KOR
     , B.SABUN
     , A.REQUEST_NUM
     , (SELECT CC_CD FROM ST_UPJANG WHERE UPJANG = B.UPJANG) AS CC_CD
     , '거래처(' || A.CUST_NM || ')에 대한 처리결과입니다.' AS MAIL_SUBJECT
     , 
'<html>' ||
'  <head><title>거래처 신규신청 및 변경요청 처리결과</title></head>' ||
'  <body>' ||
'    <div style="font-size:9pt;">거래처 신규신청 및 변경요청에 대하여 아래와 같이 처리되었습니다.</div>' ||
'    <br/>' ||
'    <table style="border:1px solid gray;width:600px" cellpadding="0" cellspacing="0" border="0">' ||
'      <tr>' ||
'        <td style="font-size:9pt;padding:5px 5px 0 15px;width:20%">요청구분</td>' ||
'        <td style="font-size:9pt;padding:5px 5px 0 5px;border-left:1px solid gray;width:80%">' || CASE A.PROC_TYPE WHEN '1' THEN '신규' ELSE '변경' END || '</td>' ||
'      </tr>' ||
'      <tr>' ||
'        <td style="font-size:9pt;padding:5px 5px 0 15px;border-top:1px solid gray; ">거래처명</td>' ||
'        <td style="font-size:9pt;padding:5px 5px 0 5px;border-top:1px solid gray; border-left:1px solid gray;"> ' || A.CUST_NM || '</td>' ||
'      </tr>' ||
'      <tr>' ||
'        <td style="font-size:9pt;padding:5px 5px 0 15px;border-top:1px solid gray; ">처리상태</td>' ||
'        <td style="font-size:9pt;padding:5px 5px 0 5px;border-top:1px solid gray; border-left:1px solid gray;"> ' || A.PROC_RESULT_MSG || '</td>' ||
'      </tr>' ||
'      <tr>' ||
'        <td style="font-size:9pt;padding:5px 5px 0 15px;border-top:1px solid gray; ">반려사유</td>' ||
'        <td style="font-size:9pt;padding:5px 5px 0 5px;border-top:1px solid gray; border-left:1px solid gray;"> ' || A.RTN_REASON || '</td>' ||
'      </tr>' ||
'    </table>' ||
'  </body>' ||
'</html>' AS MAIL_CONTENT
     , A.REQUEST_SABUN AS LOGIN_SABUN
     , A.REQUEST_SABUN AS LOGIN_USERID
     , 'YYYYYYYYYYY' AS LOGIN_PERS_MASK
  FROM SCC_CUST_REQUEST A
     , SCC_USERINFO B
 WHERE B.SABUN = A.REQUEST_SABUN
   AND A.SEND_MAIL_STATUS = '2'
		]]>
	</statement>


	<!-- 메일발송상태를 변경한다. -->
	<statement name="updataMailStatus" type="update">
		/*+ com.hwfs.sc.scz.dao.CustRequestNewDAO.updataMailStatus */
		<![CDATA[
UPDATE SCC_CUST_REQUEST
   SET SEND_MAIL_STATUS = '9'
 WHERE REQUEST_SYS_CD = 'IFC'
   AND REQUEST_NUM = :requestNum
		]]>
	</statement>

	<!-- 메일발송상태를 변경한다. -->
	<statement name="updataStCust" type="update">
		/*+ com.hwfs.sc.scz.dao.CustRequestNewDAO.updataStCust */
		<![CDATA[
UPDATE ST_CUST
   SET CUST_REQUEST_SYS_CD = 'IFC'
     , CUST_REQUEST_NUM = :requestNum
 WHERE CUSTCD = :custCd
		]]>
	</statement>

	<!-- 사용자 취소 -->
	<statement name="updataUserCancel" type="update">
		/*+ com.hwfs.sc.scz.dao.CustRequestNewDAO.updataUserCancel */
		<![CDATA[
UPDATE SCC_CUST_REQUEST
   SET PROC_RESULT = '2'
     , UUSER = :loginSabun
     , UDATE = SYSDATE
 WHERE REQUEST_SYS_CD = 'IFC'
   AND REQUEST_NUM IN (:requestNums)
		]]>
	</statement>


</hqml>
