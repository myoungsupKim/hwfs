<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="sc.app.approveDAO">
	<desc>FC POS 마스터 외부 인터페이스 HQML</desc>









	<statement name="selectTest"><![CDATA[SELECT '1' AS CHECK_NUM
  FROM DUAL]]></statement>
	<statement name="logInsert"><![CDATA[INSERT INTO APP_INTERFACE_LOG(
INSDT,
TXID,
TXDIV,
TXHEADER,
TXDATA,
TXRESULT)
VALUES(
TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS'),
<#if txId?has_content >:txId,<#else>null,</#if> 
<#if txDiv?has_content >:txDiv,<#else>null,</#if> 
<#if tHeader?has_content >:tHeader,<#else>null,</#if> 
<#if tData?has_content >:tData,<#else>null,</#if> 
<#if tResult?has_content >:tResult<#else>null</#if> 
)]]></statement>

	<statement name="selectApproveType"><![CDATA[
SELECT CODE AS CD
     , CODE_NAME AS CD_NM
     , CONTENTS AS CONTENTS
     , SET1 AS SET1
     , SET2 AS SET2
     , SET3 AS SET3
     , SET4 AS SET4
     , SET5 AS SET5
     , REMARK AS REMARK
FROM   SCC_COMMON_CODE
WHERE GROUP_CODE = 'MS003'
AND USE_YN     = 'Y'
AND ATTR01 = 'Y'
ORDER BY SORT_SEQ
]]></statement>

	<statement name="selectApproveReason1"><![CDATA[
SELECT CODE AS CD
     , CODE_NAME AS CD_NM
     , CONTENTS AS CONTENTS
     , SET1 AS SET1
     , SET2 AS SET2
     , SET3 AS SET3
     , SET4 AS SET4
     , SET5 AS SET5
     , REMARK AS REMARK
FROM   SCC_COMMON_CODE
WHERE GROUP_CODE = 'FS0123'
AND USE_YN = 'Y'
ORDER BY SORT_SEQ
]]></statement>

	<statement name="selectApproveReason2"><![CDATA[
SELECT CODE AS CD
     , CODE_NAME AS CD_NM
     , CONTENTS AS CONTENTS
     , SET1 AS SET1
     , SET2 AS SET2
     , SET3 AS SET3
     , SET4 AS SET4
     , SET5 AS SET5
     , REMARK AS REMARK
FROM   SCC_COMMON_CODE
WHERE GROUP_CODE = 'FS0124'
AND USE_YN = 'Y'
ORDER BY SORT_SEQ
]]></statement>

	<statement name="saveReqChk001"><![CDATA[
SELECT UPJANG, START_DATE, END_DATE 
  FROM FSA_PR_CHECK 
 WHERE UPJANG     = :upjangCd
   AND START_DATE <= :endDt 
   AND END_DATE   >= :startDt
]]></statement>

	<statement name="saveReqChk002"><![CDATA[
SELECT REQ_ID, UPJANG
  FROM MAS_CLOSE_MODIFYREQ V
  WHERE V.REQ_ID = :reqId
    AND V.TEAM_MST_CONGUBN = 'Y'
]]></statement>

	<statement name="saveApprove001"><![CDATA[
MERGE INTO FSA_PR_CHECK
        USING DUAL
        ON   (UPJANG  = :upjangCd
        	 AND START_DATE = :startDt
        	 AND END_DATE = :endDt)
        WHEN  MATCHED THEN
              UPDATE 
				SET PR_REASON    = :reason1
					, ATTR01 = :reason2
					, UUSER = :sabun
					, UDATE = SYSDATE
        WHEN  NOT MATCHED THEN
			  INSERT ( 
		 		  UPJANG
		 		  , START_DATE
		 		  , END_DATE
		 		  , PR_REASON
		 		  , ATTR01
		 		  , CUSER
		 		  , UUSER
			  ) VALUES ( 
				:upjangCd
				, :startDt
				, :endDt
				, :reason1
				, :reason2
				, :sabun
				, :sabun
			  )
]]></statement>

	<statement name="saveApprove002"><![CDATA[
MERGE INTO MAS_CLOSE_MODIFYREQ
        USING DUAL
        ON   (REQ_ID  = :reqId)
        WHEN  MATCHED THEN
              UPDATE 
				SET CLOSE_GUBUN = :gubun
					, CLOSE_DATEFR = :startDt
					, CLOSE_DATETO = :endDt
					, TEAM_MST_SABUN = :teamMstSabun
					, REMARK_DESC    = :remark
					, UUSER = :sabun
					, UDATE = SYSDATE
        WHEN  NOT MATCHED THEN
			  INSERT ( 
		 		  REQ_ID
				, UPJANG
				, CLOSE_GUBUN
				, CLOSE_DATEFR
				, CLOSE_DATETO
				, REQUEST_SABUN
				, REQUEST_DATE
				, TEAM_MST_SABUN
				, REMARK_DESC
				, CUSER
				, CDATE
			  ) VALUES ( 
				  MAS_CLOSE_MODIFYREQ_S.NEXTVAL
				, :upjangCd
				, :gubun
				, :startDt
				, :endDt
				, :sabun
				, SYSDATE
				, :teamMstSabun
				, :remark
				, :sabun
				, SYSDATE
			  )
]]></statement>
	<statement name="selectApproveList"><![CDATA[
SELECT REQ_ID
	 , UPJANG_CD
	 , UPJANG_NM
	 , GUBUN
	 , GUBUN_NM
	 , START_DT
	 , END_DT
	 , REQ_SABUN
	 , REQ_SABUN_NM
	 , TEAM_MST_SABUN
	 , TEAM_MST_SABUNNM
	 , REASON1
	 , REASON2
	 , APPR_YN
	 , REMARK
	 , PR_DATE
	 , CLS_GUBN
     , LISTNUM
     , ROWCNT
FROM (
	SELECT REQ_ID
		 , UPJANG_CD
		 , UPJANG_NM
		 , GUBUN
		 , GUBUN_NM
		 , START_DATE AS START_DT
		 , END_DATE AS END_DT
		 , REQ_SABUN
		 , REQ_SABUN_NM
		 , TEAM_MST_SABUN
		 , TEAM_MST_SABUNNM
		 , REASON1
		 , REASON2
		 , APPR_YN
		 , REMARK
		 , PR_DATE
		 , CLS_GUBN
         , ROW_NUMBER() OVER (ORDER BY A.UPJANG_CD, A.GUBUN, A.START_DATE, A.END_DATE) AS LISTNUM
         , COUNT(1) OVER () AS ROWCNT
	FROM (
	    SELECT   NULL AS REQ_ID
	           , A.UPJANG	                          AS UPJANG_CD
		       , B.UPJANGNM	                          AS UPJANG_NM
	           , '000'						          AS GUBUN
		       , '추가발주'						      AS GUBUN_NM
		       , A.START_DATE						  AS START_DATE
		       , A.END_DATE                           AS END_DATE
	           , A.CUSER                              AS REQ_SABUN
	           , (SELECT NM_KOR
	             FROM    SCO_FS_HR_PERSONAL_V
	             WHERE   SABUN = A.CUSER
	             )                                    AS REQ_SABUN_NM
	           , ''                                   AS TEAM_MST_SABUN
	           , ''                                   AS TEAM_MST_SABUNNM
		       , C.CODE_NAME                          AS REASON1
		       , D.CODE_NAME                          AS REASON2
		       , A.APRV_YN                            AS APPR_YN
	           , ''                                   AS REMARK
	           , A.PR_DATE                            AS PR_DATE
	           , ''                                   AS CLS_GUBN
		FROM     FSA_PR_CHECK A
		       , MAC_UPJANG_V B
		       , SCC_COMMON_CODE C
		       , SCC_COMMON_CODE D
		WHERE    A.UPJANG = B.UPJANG
		AND      A.PR_DATE BETWEEN :reqDate ||'01' AND :reqDate ||'31'
		AND      C.GROUP_CODE = 'FS0123'
		AND      A.ATTR01 = C.CODE
		AND      D.GROUP_CODE = 'FS0124'
		AND      A.PR_REASON = D.CODE
		AND      B.TM_CD   = :tmCd
		AND      C.USE_YN  = 'Y'
		AND      D.USE_YN  = 'Y'
	UNION ALL
	SELECT   V.REQ_ID                             AS REQ_ID
	       , V.UPJANG                             AS UPJANG_CD
	       , A.UPJANGNM                           AS UPJANG_NM
	       , V.CLOSE_GUBUN                        AS GUBUN
	       , (SELECT CODE_NAME
	         FROM    SCC_COMMON_CODE
	         WHERE   GROUP_CODE = 'MA0035'
	         AND     CODE       = V.CLOSE_GUBUN
	         )                                    AS GUBUN_NM
	       , V.CLOSE_DATEFR                       AS START_DATE
	       , V.CLOSE_DATETO                       AS END_DATE
	       , V.REQUEST_SABUN                      AS REQ_SABUN
	       , (SELECT NM_KOR
	         FROM    SCO_FS_HR_PERSONAL_V
	         WHERE   SABUN = V.REQUEST_SABUN
	         )                                    AS REQ_SABUN_NM
	       , V.TEAM_MST_SABUN                     AS TEAM_MST_SABUN
	       , (SELECT NM_KOR
	         FROM    SCO_FS_HR_PERSONAL_V
	         WHERE   SABUN = V.TEAM_MST_SABUN
	         )                                    AS TEAM_MST_SABUNNM
	       , ''                                   AS REASON1
	       , ''                                   AS REASON2
	       , V.TEAM_MST_CONGUBN                   AS APPR_YN
	       , V.REMARK_DESC                        AS REMARK
	       , TO_CHAR(V.CDATE, 'YYYYMMDD')         AS PR_DATE
	       , (SELECT DECODE(SET1,'Y'
	                      ,'Y'
	                      ,'N')
	         FROM    SCC_COMMON_CODE
	         WHERE   GROUP_CODE = 'MA0035'
	         AND     CODE       = V.CLOSE_GUBUN
	         )                                    AS CLS_GUBN
	FROM     MAS_CLOSE_MODIFYREQ V
	       , SCO_UPJANG_MST_V A
	WHERE    V.UPJANG = A.UPJANG
	    AND :tmCd IN (SELECT B.TM_CD FROM SCO_FS_HR_PERSONAL_V B WHERE B.SABUN = V.TEAM_MST_SABUN)
	    AND  V.CLOSE_DATEFR BETWEEN :reqDate ||'01' AND :reqDate ||'31'
	    AND  V.CLOSE_GUBUN IN (SELECT CODE FROM SCC_COMMON_CODE K WHERE K.GROUP_CODE = 'MS003' AND K.ATTR01 = 'Y' AND CODE NOT IN ('ALL', '000'))
	        ) A
	WHERE 1=1
	<#if gubun?has_content>
	AND A.GUBUN IN (${strGubun})
	</#if>
	<#if apprYn?has_content>
	AND	A.APPR_YN = :apprYn
	</#if>
) TT
WHERE 1=1
AND LISTNUM BETWEEN :listCnt * ( :pageNum - 1 ) + 1 AND :listCnt * :pageNum
]]></statement>

	<statement name="saveTlChk001"><![CDATA[
SELECT APRV_YN
FROM   FSA_PR_CHECK
WHERE  START_DATE = :startDt
AND    END_DATE   = :endDt
AND    PR_DATE    = :prDate
AND    UPJANG     = :upjangCd
AND    APRV_YN    = 'Y'
]]></statement>

	<statement name="saveTlApprove001"><![CDATA[
UPDATE FSA_PR_CHECK
SET    APRV_YN    = 'Y'
     , UUSER      = :sabun
     , UDATE      = SYSDATE
WHERE  UPJANG     = :upjangCd
AND    START_DATE = :startDt
AND    END_DATE   = :endDt
]]></statement>

	<statement name="saveTlApprove002"><![CDATA[
UPDATE MAS_CLOSE_MODIFYREQ
SET    TEAM_MST_CONGUBN = 'Y'
  	 , TEAM_MST_DATE    = SYSDATE
  	  --팀장승인 시 완료처리 20200818 (정지희 요청) 011 건별취소(급식)만 완료처리, 001,006,008,009는 마감취소 프로세스 추가 필요하여 제외
   	 , APPROV_SABUN     = DECODE(CLOSE_GUBUN,'011',:sabun, DECODE(:clsGubn, 'Y', :sabun, APPROV_SABUN))
   	 , APPRV_GUBUN      = DECODE(CLOSE_GUBUN,'011','Y', DECODE(:clsGubn, 'Y', 'Y', APPRV_GUBUN))
   	 , APPRV_DATE       = DECODE(CLOSE_GUBUN,'011',SYSDATE, DECODE(:clsGubn, 'Y', SYSDATE, APPRV_DATE))
   	 , ATTR03 = :sabun
   	 , ATTR04 = SYSDATE
   	 , ATTR05 = 'TeamLeaderApp'
WHERE REQ_ID = :reqId
]]></statement>

<statement name="deleteTlApprove002"><![CDATA[
DELETE
FROM   MAS_CLOSE_MGMT
WHERE  UPJANG      = :upjangCd
AND    CLOSE_GUBUN = :gubun
AND    CLOSE_DATE BETWEEN :startDt AND :endDt
]]></statement>
</hqml>
