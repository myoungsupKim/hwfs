<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="rc.rrm.recipeInquirybyItemDAO">
	<desc>업장 레시피 조회(by Item) HQML Query</desc>
	
	<!-- 업장 레시피 조회(By Item) 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.rc.rrm.dao.RecipeInquirybyItemDAO.selectList */
		<![CDATA[
SELECT /*+ USE_HASH(A B C) */
       A.ITEM_CODE AS MATERIAL_CD
     , D.ITEM_NAME AS MATERIAL_NM
     , FN_ITEM_FEATURE_ICON(FSI_DUTY_ITEM_YN(A.CENTER_CODE, A.CUSTCD, A.ITEM_CODE, :stdDate), TRIM(A.PB_YN), TRIM(D.ECO_ITEM), TRIM(D.MANUF_CD)) AS FEATURE_ICON
     , D.MAKER
     , A.PROC_TYP_CD
     , D.ITEM_SIZE
     , D.ORIGIN_TYPE
     , D.ORIGIN_NAT
     , D.UOM_CODE
     , D.PO_UOM
     , NVL(A.ITEM_PRICE, 0) - NVL(B.ITEM_PRICE, 0) AS PRICE_DIF
     , DECODE(NVL(B.ITEM_PRICE, 0), 0, 0, ((NVL(B.ITEM_PRICE, 0)-NVL(A.ITEM_PRICE, 0)) / NVL(A.ITEM_PRICE, 1)) * 100) AS PRICE_RATE
     , D.KG_CONVERT_RATE
     , NVL(B.ITEM_PRICE, 0) AS ITEM_PRICE
     , NVL(A.ITEM_PRICE, 0) AS PRE_ITEM_PRICE
     , B.CONTRACT_PRICE
     , ROUND(NVL(B.CONTRACT_PRICE, 0) / D.KG_CONVERT_RATE / 1000, 2) AS GRAM_PRICE
     , B.CONTRACT_START
     , B.CONTRACT_END
     , ROUND(NVL(A.CONTRACT_PRICE, 0) / D.KG_CONVERT_RATE / 1000, 2) AS STD_GRAM_PRICE
     , A.CONTRACT_START AS STD_CONTRACT_START
     , A.CONTRACT_END AS STD_CONTRACT_END
     , TO_DATE(B.CONTRACT_END, 'YYYYMMDD') - TO_DATE(:comDate, 'YYYYMMDD') AS REMAIN_DAY
     , D.BARCODE
     , CASE WHEN (ROUND(NVL(B.CONTRACT_PRICE, 0) / D.KG_CONVERT_RATE / 1000, 2) = 0 AND :stdDate > :comDate AND B.CONTRACT_START IS NULL) THEN '신규자재'
            WHEN (ROUND(NVL(B.CONTRACT_PRICE, 0) / D.KG_CONVERT_RATE / 1000, 2) = 0 AND :stdDate < :comDate AND B.CONTRACT_START IS NULL) THEN '종료자재'
            ELSE B.REMARK
        END AS REMARK
     , DECODE(B.ITEM_CODE, NULL, 'Y', 'N') AS DISUSE_YN
     , C.ITEM_UPJANG
     , I.SCH_INFO
     , I.PR_YN
     , '' AS PR_REMARK
     , 0 AS PR_QTY
     , G.RESTRICT_REASON
     , G.RESTRICT_PERIOD
     , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_SHP_MAP('100', 'HFC', F.OPER_ORG_SN_PURC, A.UPJANG_GRP, A.ITEM_CODE, :stdDate) = 'CK' THEN 'Y' ELSE 'N' END
                                                    AS SHP_MAP  /* 자재 업장군 맵핑 유효성 체크 CE : 맵핑안되어있음(사용불가), CK : 맵핑되어있음(사용가능) */
     , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_MTG_UNS('100', A.ITEM_CODE) = 'UP' THEN 'Y' ELSE 'N' END
                                                    AS MTG_UNS      /* 자재불용체크 UK: 불용, UP:불용아님, NN: DATA NOT FOUND */
     , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_MTG_STP('100', A.ITEM_CODE, '01') = 'TP' THEN 'Y' ELSE 'N' END
                                                    AS MTG_STP      /* 자재 중지체크 TK : 중지(사용불가), TP : 중지아님(사용가능), NN: DATA NOT FOUND */
     , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_REQ_WKD('100', 'HFC', F.OPER_ORG_SN_PURC, A.ITEM_CODE, A.VD_SN, '01', '20160905') = 'XR' THEN 'Y' ELSE 'N' END
                                                    AS REQ_WKD      /* 요일별 신청불가 체크 XE : 신청불가(사용불가), XR : 신청가능(사용가능), NN : DATA NOT FOUND */
     , NVL(H.D_DAYS,0) + 1 AS D_DAY                                 /*D-DAY */
     , DECODE(H.D_DAYS,NULL,   0, DECODE(SIGN(TO_DATE(:stdDate, 'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - NVL(H.D_DAYS,0) ) , 0,
                                  DECODE(SIGN(DECODE(H.D_TIMES, '', 24, 0, 24, H.D_TIMES) - TO_NUMBER(TO_CHAR(SYSDATE, 'HH24'))), 1, 0, 1), 0) + NVL(H.D_DAYS, 0) )
                                  AS D_DAYS                         /* D_DAYS */
     , DECODE(H.D_DAYS,NULL,   0, DECODE(H.D_TIMES, '', 24, 0, 24, H.D_TIMES))
                                  AS D_TIMES                        /* DAYYN */
     , DECODE(H.D_DAYS,NULL, 'Y', DECODE(SIGN(TO_DATE(:stdDate, 'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - NVL(H.D_DAYS,0)) ,-1, 'N', 0,
                                  DECODE(SIGN(DECODE(H.D_TIMES, '', 24, 0, 24, H.D_TIMES) - TO_NUMBER(TO_CHAR(SYSDATE, 'HH24'))), -1, 'N', 0, 'N', 'C'), 1, 'Y'))
                                  AS D_DAY_YN                       /* DAYYN */
  FROM (
        SELECT /*+ NO_PUSH_PRED(C.V) */
               ITEM_CODE
             , A.CUSTCD
             , DECODE(NVL(A.MARGIN_RATE, 0), 0, A.CONTRACT_PRICE, ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) )  AS ITEM_PRICE
             --, C.UPJANG
             --, C.CENTER_CODE
             , A.UPJANG
             , A.CENTER_CODE
             , A.PROC_TYP_CD
             , A.PB_YN
             , D.VD_NM
             , A.CONTRACT_PRICE
             , A.CONTRACT_START
             , A.CONTRACT_END
             , A.REMARK
             , A.UPJANG_GRP
             , A.VD_SN
          FROM --HLDC_PO_CONTRACT_F A
               EPROCUSR.VO_CONTRACT_F_RCP A -- 논리적 분사이후 단가불러오는 뷰 변경 20200309	   
             --, HLDC_ST_UPJANG B
             --, HLDC_PO_UPJANG_CENTER C
       		 --, EPROCUSR.VO_CENTER_UPJANG_RCP C -- 논리적 분사이후 단가불러오는 뷰 변경 20200309	
             , VO_FC_VENDOR D
             , (SELECT C.N_CC_CD
                                        FROM ST_UPJANGV B
                                           , SAP_IF.SAP_IFC_CC_MAP C
                                         WHERE B.UPJANG = '114356'
	                                        AND B.CC_CD = C.O_CC_CD) X
         WHERE 1=1
           --AND A.CENTER_CODE = C.CENTER_CODE
           AND A.CUSTCD = D.VD_CD
           AND A.USE_YN = 'Y'
           AND A.CONTRACT_PRICE > 0
           --AND A.UPJANG = B.AP_UNITPRICE_UPJANG
           --AND B.AP_UNITPRICE_UPJANG = C.UPJANG
           --AND B.UPJANG = :upjangCd
           -- 논리적 분사이후 신규조직 매핑 20200309
           AND A.UPJANG = X.N_CC_CD	       
           AND :stdDate BETWEEN A.CONTRACT_START AND A.CONTRACT_END
       ) A
     , (
        SELECT /*+ NO_PUSH_PRED(C.V) */
               A.ITEM_CODE
             , A.CUSTCD
             , DECODE(NVL(A.MARGIN_RATE, 0), 0, A.CONTRACT_PRICE, ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) )  AS ITEM_PRICE
             --, C.UPJANG
             , A.UPJANG
             , A.CONTRACT_PRICE
             , A.CONTRACT_START
             , A.CONTRACT_END
             , A.REMARK
         FROM --HLDC_PO_CONTRACT_F2 A 
              EPROCUSR.VO_CONTRACT_F_RCP A -- 논리적 분사이후 단가불러오는 뷰 변경 20200309	   
            --, HLDC_ST_UPJANG B
            --, HLDC_PO_UPJANG_CENTER C
       		--, EPROCUSR.VO_CENTER_UPJANG_RCP C -- 논리적 분사이후 단가불러오는 뷰 변경 20200309	
              , (SELECT C.N_CC_CD
                                        FROM ST_UPJANGV B
                                           , SAP_IF.SAP_IFC_CC_MAP C
                                         WHERE B.UPJANG = '114356'
	                                        AND B.CC_CD = C.O_CC_CD) X
        WHERE 1=1 --A.CENTER_CODE = C.CENTER_CODE
          AND A.USE_YN = 'Y'
          --AND A.UPJANG = B.AP_UNITPRICE_UPJANG
          --AND B.AP_UNITPRICE_UPJANG = C.UPJANG
          --AND B.UPJANG = :upjangCd
          AND A.UPJANG = X.N_CC_CD
          AND :comDate BETWEEN A.CONTRACT_START AND A.CONTRACT_END
       ) B
     , (
        SELECT DISTINCT MATERIAL_CD
             , UPJANG_CD AS ITEM_UPJANG
             , UPJANG_CD
          FROM RSS_UPJANG_RECIPE_CD_DETAIL
         WHERE SEMI_GOODS_YN = 'N'
           AND UPJANG_CD = :upjangCd
           AND :stdDate BETWEEN SDATE AND EDATE
       ) C
     , HLDC_PO_ITEM_MST D
     , VO_CENTER F
     , (
        SELECT UPJANG
             , ITEM_CODE
             , TO_CHAR(TO_DATE(RESTRICT_START, 'YYYYMMDD'), 'YYYY.MM.DD') || '~' || TO_CHAR(TO_DATE(RESTRICT_END, 'YYYYMMDD'), 'YYYY.MM.DD') AS RESTRICT_PERIOD
             , RESTRICT_REASON
          FROM FSI_RESTRICT_SET
         WHERE UPJANG = :upjangCd
           AND (RESTRICT_START <= :stdDate AND RESTRICT_END >= :stdDate)
           AND NOT (CNL_START IS NOT NULL AND CNL_START <= :stdDate AND CNL_END >= :stdDate)
       ) G
     , (
        SELECT A.CENTER_CODE
             , A.ITEM_CODE
             , A.D_DAYS AS D_DAY
             , (SELECT TO_DATE(:stdDate, 'YYYYMMDD') - TO_DATE(Z.NONHOLI_DATE, 'YYYYMMDD')
                  FROM (SELECT ROW_NUMBER() OVER(ORDER BY Z.CD_SY || Z.CD_SM || Z.CD_SD DESC) AS SEQ
                             , Z.CD_SY || Z.CD_SM || Z.CD_SD AS NONHOLI_DATE
                          FROM SCC_CALENDA_DATA Z
                         WHERE Z.CD_SY||Z.CD_SM||Z.CD_SD  < :stdDate
                           AND Z.CD_SY BETWEEN TO_NUMBER(SUBSTR(:stdDate, 1, 4)) - 1 AND TO_NUMBER(SUBSTR(:stdDate, 1, 4))
                           AND Z.CD_WEEK NOT IN ('일')) Z
                 WHERE Z.SEQ = A.D_DAYS ) AS D_DAYS
             , A.D_TIMES
          FROM HLDC_PO_PREORDER_LIST A
         WHERE A.CENTER_CODE = :centerCode
       ) H
     , (
        SELECT /*+ INDEX(Z.MR ESPSSGPITM_PK) */ CENTER_CODE
             , CUSTCD
             , ITEM_CODE
             , 'N' PR_YN
             , DECODE(NVL(MON,'N'),'N','월 ')
               ||DECODE(NVL(TUE,'N'),'N','화 ')
               ||DECODE(NVL(WED,'N'),'N','수 ')
               ||DECODE(NVL(THU,'N'),'N','목 ')
               ||DECODE(NVL(FRI,'N'),'N','금 ')
               ||DECODE(NVL(SAT,'N'),'N','토 ')
               ||DECODE(NVL(SUN,'N'),'N','일') AS SCH_INFO
          FROM HLDC_PO_ORDER_SCHEDULE Z,
                (SELECT C.N_CC_CD
                                        FROM ST_UPJANGV B
                                           , SAP_IF.SAP_IFC_CC_MAP C
                                         WHERE B.UPJANG = '114356'
	                                        AND B.CC_CD = C.O_CC_CD) X
         WHERE CENTER_CODE = :centerCode
           --AND UPJANG = :upjangCd
           AND Z.UPJANG = X.N_CC_CD
           AND USE_YN = 'Y'
           AND UPJANG_TYPE = '01'
           AND DECODE(TO_CHAR(TO_DATE(:stdDate,'YYYYMMDD'),'D'),1,SUN,2,MON,3,TUE,4,WED,5,THU,6,FRI,7,SAT) = 'Y'
         UNION ALL
        (
         SELECT /*+ INDEX(Z.MR ESPSSGPITM_PK) */ CENTER_CODE
              , CUSTCD
              , ITEM_CODE
              , 'N'
              , DECODE(NVL(MON,'N'),'N','월 ')
                ||DECODE(NVL(TUE,'N'),'N','화 ')
                ||DECODE(NVL(WED,'N'),'N','수 ')
                ||DECODE(NVL(THU,'N'),'N','목 ')
                ||DECODE(NVL(FRI,'N'),'N','금 ')
                ||DECODE(NVL(SAT,'N'),'N','토 ')
                ||DECODE(NVL(SUN,'N'),'N','일') AS SCH_INFO
           FROM HLDC_PO_ORDER_SCHEDULE Z
          WHERE CENTER_CODE = :centerCode
            AND UPJANG = -1
            AND USE_YN = 'Y'
            AND UPJANG_TYPE = '01'
            AND DECODE(TO_CHAR(TO_DATE(:stdDate,'YYYYMMDD'),'D'),1,SUN,2,MON,3,TUE,4,WED,5,THU,6,FRI,7,SAT) = 'Y'
          MINUS
         SELECT /*+ INDEX(Z.MR ESPSSGPITM_PK) */ CENTER_CODE
              , CUSTCD
              , ITEM_CODE
              , 'N'
              , DECODE(NVL(MON,'N'),'N','월 ')
                ||DECODE(NVL(TUE,'N'),'N','화 ')
                ||DECODE(NVL(WED,'N'),'N','수 ')
                ||DECODE(NVL(THU,'N'),'N','목 ')
                ||DECODE(NVL(FRI,'N'),'N','금 ')
                ||DECODE(NVL(SAT,'N'),'N','토 ')
                ||DECODE(NVL(SUN,'N'),'N','일') AS SCH_INFO
           FROM HLDC_PO_ORDER_SCHEDULE Z,
                (SELECT C.N_CC_CD
                                        FROM ST_UPJANGV B
                                           , SAP_IF.SAP_IFC_CC_MAP C
                                         WHERE B.UPJANG = '114356'
	                                        AND B.CC_CD = C.O_CC_CD) X
          WHERE CENTER_CODE = :centerCode
            --AND UPJANG = :upjangCd
            AND Z.UPJANG = X.N_CC_CD
            AND USE_YN = 'Y'
            AND UPJANG_TYPE = '01'
            AND DECODE(TO_CHAR(TO_DATE(:stdDate,'YYYYMMDD'),'D'),1,SUN,2,MON,3,TUE,4,WED,5,THU,6,FRI,7,SAT) = 'Y'
        )
       ) I
 WHERE A.ITEM_CODE = B.ITEM_CODE(+)
   AND A.ITEM_CODE = C.MATERIAL_CD(+)
   AND A.ITEM_CODE = D.ITEM_CODE(+)
   AND A.CENTER_CODE = F.CENTER_CODE(+)
   AND A.ITEM_CODE = G.ITEM_CODE(+)
   AND A.CENTER_CODE = H.CENTER_CODE(+)
   AND A.ITEM_CODE = H.ITEM_CODE(+)
   AND A.ITEM_CODE = I.ITEM_CODE(+)
   AND SUBSTR(A.ITEM_CODE, 0, 1) = 'F'
<#if materialNm?has_content>
   AND UPPER(D.ITEM_NAME) LIKE '%'|| UPPER(:materialNm) ||'%'
</#if>
 ORDER BY A.ITEM_CODE ASC
		]]>
	</statement>

	<!-- 업장의 센터코드를 조회한다. -->
	<statement name="selectCenterCode" type="select">
		/*+ com.hwfs.rc.rrm.dao.RecipeInquirybyItemDAO.selectCenterCode */
		<![CDATA[
		SELECT Z.CENTER_CODE
		  --FROM HLDC_PO_UPJANG_CENTER		  
          FROM EPROCUSR.VO_CENTER_UPJANG_RCP Z -- 논리적 분사이후 단가불러오는 뷰 변경 20200309	
               ,(SELECT C.N_CC_CD
                                        FROM ST_UPJANGV B
                                           , SAP_IF.SAP_IFC_CC_MAP C
                                         WHERE B.UPJANG = '114356'
	                                        AND B.CC_CD = C.O_CC_CD) X
		 --WHERE UPJANG = :upjangCd
		 WHERE Z.UPJANG = X.N_CC_CD
		]]>
	</statement>
	
	<!-- 업장 레시피 조회(by Item) 목록을 조회한다. -->
	<statement name="selectListItem" type="select">
		/*+ com.hwfs.rc.rrm.dao.RecipeInquirybyItemDAO.selectListItem */
		<![CDATA[
		SELECT A.MATERIAL_CD,
			   B.ITEM_NAME MATERIAL_NM,
			   B.MAKER,
			   B.ITEM_SIZE,
			   B.UOM_CODE,
			   B.PO_UOM,
			   B.KG_CONVERT_RATE,
			   B.ORIGIN_TYPE,
			   B.ORIGIN_NAT,
			   B.BARCODE,
			   C.MARGIN_PRICE,
			   ROUND(NVL(C.MARGIN_PRICE, 0) / B.KG_CONVERT_RATE / 1000, 2) GRAM_PRICE,
			   B.REMARK
		FROM ( SELECT DISTINCT MATERIAL_CD
			   FROM   RSS_UPJANG_RECIPE_CD_DETAIL M,
			   		  RSS_UPJANG_RECIPE_CD_MST N
			   WHERE  M.UPJANG_CD = N.UPJANG_CD(+)
			   AND	  M.STD_RECIPE_CD = N.STD_RECIPE_CD(+)
			   AND	  M.SEMI_GOODS_YN = 'N'
			   AND	  N.MU_CD = :muCd
			   AND    M.SDATE <= :stdDate
			   AND	  M.EDATE >= :stdDate
			   <#if upjangCd?has_content>
			   AND	  M.UPJANG_CD = :upjangCd
			   </#if>
			   ) A,
			   HLDC_PO_ITEM_MST B,
			   FSI_STD_PRICE C
		WHERE  A.MATERIAL_CD = B.ITEM_CODE(+)
		AND	   A.MATERIAL_CD = C.ITEM_CODE(+)
		<#if materialNm?has_content>
		AND	   B.ITEM_NAME LIKE '%'|| :materialNm ||'%'
		</#if>
		ORDER BY A.MATERIAL_CD ASC
		]]>
	</statement>
	
</hqml>
