<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="rc.sle.outletSalesDAO">
	<desc>업장별 매출</desc>

	<statement name="selectSalesInqList" type="select"><![CDATA[
		/*+ com.hwfs.rc.sle.dao.outletSalesDAO.selectSalesInqList */

				SELECT    A.OUTLET_CD||' : '||D.OUTLET_NM  AS UPJANG_CDNM  --업장코드:업장명
              , A.SALES_DATE  AS SDATE      --'영업일자'
              , CASE TO_CHAR(TO_DATE(A.SALES_DATE,'YYYYMMDD'), 'D') WHEN '1' THEN '일' WHEN '2' THEN '월' WHEN '3' THEN '화' WHEN '4' THEN '수' WHEN '5' THEN '목' WHEN '6' THEN '금' WHEN '7' THEN '토' END AS WEEK
              , B.PSN_QTY     AS GUEST      --'고객수'
              , FOOD_TOT_AMT  AS FOODAMT    --'식료금액'
              , BEVG_TOT_AMT  AS BEVAMT		--'음료금액'
              , ETC_TOT_AMT   AS OTHAMT     --'기타금액'
              , ETC1_TOT_AMT   AS OTHAMT1     --'기타금액'
              , GODS_TOT_AMT  AS SANAMT     --'상품금액'

              , FOOD_DSCN_AMT AS FOODDC     --'식료할인'
              , BEVG_DSCN_AMT AS BEVDC      --'음료할인'
              , ETC_DSCN_AMT  AS OTHDC      --'기타할인'
              , ETC1_DSCN_AMT  AS OTHDC1      --'기타할인'
              , GODS_DSCN_AMT AS SANDC      --'상품할인'

              , NET_SELL_AMT  AS NET        --'공급가액'
              , SVC           AS SVC        --'봉사료'
              , VAT           AS VAT        --'부가세'
              , TOT_SUM_AMT	  AS GROSS      --'매출액'

              , CASH          AS CASH       --'현금'
              , CARD          AS CARD       --'카드'
              , CRED          AS CL         --'후불'
              , ETEC          AS ETC        --'기타'

        FROM(
			SELECT    SALES_DATE, OUTLET_CD
			        , SUM(FOOD_AMT)  AS FOOD_TOT_AMT
			        , SUM(BEVR_AMT)  AS BEVG_TOT_AMT
			        , SUM(OTHER_AMT) AS ETC_TOT_AMT
			        , SUM(OTHER1_AMT) AS ETC1_TOT_AMT
			        , SUM(GODS_AMT)  AS GODS_TOT_AMT

			        , SUM(FOOD_DC)  AS FOOD_DSCN_AMT
			        , SUM(BEVR_DC)  AS BEVG_DSCN_AMT
			        , SUM(OTHER_DC) AS ETC_DSCN_AMT
			        , SUM(OTHER1_DC) AS ETC1_DSCN_AMT
			        , SUM(GODS_DC)  AS GODS_DSCN_AMT

			        , SUM(NET_AMT)  AS NET_SELL_AMT
			        , SUM(SVC_AMT)  AS SVC
			        , SUM(VAT_AMT)  AS VAT
			        , SUM(TOT_AMT)  AS TOT_SUM_AMT
			FROM(
			    SELECT  GOODS.SALES_DATE, GOODS.OUTLET_CD
			          , DECODE(MENU.MENU_CLASS,'F', SUM(GOODS.NET_AMT) , 0) AS FOOD_AMT
			          , DECODE(MENU.MENU_CLASS,'B', SUM(GOODS.NET_AMT) , 0) AS BEVR_AMT
			          , DECODE(MENU.MENU_CLASS,'O', DECODE(MENU.MENU_SCLASS, '02', 0, SUM(GOODS.NET_AMT)) , 0) AS OTHER_AMT
			          , DECODE(MENU.MENU_CLASS,'O', DECODE(MENU.MENU_SCLASS, '02',  SUM(GOODS.NET_AMT),0) , 0) AS OTHER1_AMT
			          , DECODE(MENU.MENU_CLASS,'S', SUM(GOODS.NET_AMT) , 0) AS GODS_AMT

					  --할인
			          , DECODE(MENU.MENU_CLASS,'F', SUM(GOODS.DISCNT_NET) , 0) AS FOOD_DC
			          , DECODE(MENU.MENU_CLASS,'B', SUM(GOODS.DISCNT_NET) , 0) AS BEVR_DC
			         -- , DECODE(MENU.MENU_CLASS,'O', SUM(GOODS.DISCNT_NET) , 0) AS OTHER_DC
			          , DECODE(MENU.MENU_CLASS,'O', DECODE(MENU.MENU_SCLASS, '02', 0, SUM(GOODS.DISCNT_NET)) , 0) AS OTHER_DC
			          , DECODE(MENU.MENU_CLASS,'O', DECODE(MENU.MENU_SCLASS, '02',  SUM(GOODS.DISCNT_NET),0) , 0) AS OTHER1_DC
			          
			          , DECODE(MENU.MENU_CLASS,'S', SUM(GOODS.DISCNT_NET) , 0) AS GODS_DC

					  , SUM(GOODS.NET_AMT) AS NET_AMT
			          , SUM(GOODS.SVC)     AS SVC_AMT
			          , SUM(GOODS.VAT)     AS VAT_AMT
			          , SUM(GOODS.TOT_AMT) AS TOT_AMT
			    FROM SLE_SALS_GOODS GOODS
			      INNER JOIN SLE_OUTLET_MENU MENU ON MENU.OUTLET_CD = GOODS.OUTLET_CD
			                                                     AND MENU.MENU_CD  = GOODS.MENU_CD
		          INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
				               FROM SLE_OUTLET_MST MST
				              INNER JOIN SCO_UPJANG_V UPJANG ON UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
				                     <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
				                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if> 
		                         <#if outletCd?has_content> WHERE MST.OUTLET_CD = :outletCd </#if>
				            ) OUTLET ON OUTLET.OUTLET_CD = GOODS.OUTLET_CD
				  INNER JOIN (
								SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM 
								FROM SLE_SALS_INFO INFO
								LEFT OUTER JOIN (
								      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
								      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
								      <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
								      ORDER BY  OUTLET_CD, POS_NUM
								) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
								WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
								  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
								  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
								  <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)								  
								  AND INFO.SALES_DATE BETWEEN :searchDateFr AND :searchDateTo
								  <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
								  <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
								ORDER BY    INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM
		    				)  INFO ON INFO.OUTLET_CD = GOODS.OUTLET_CD 
		    				       AND INFO.SALES_DATE = GOODS.SALES_DATE
		    				       AND INFO.RECEIPT_NUM = GOODS.RECEIPT_NUM		   
			    WHERE 1=1
			      --GOODS.SALS_YN        = 'Y'	--판매여부			      
                  --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
			      AND GOODS.SELL_YN  = DECODE(GOODS.RECEIPT_STATUS ,'E','N','Y')				--매출 여부
			      --종료
			      AND GOODS.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
			      AND GOODS.DATA_CLASS     = '1'  -- 1:메뉴 3:주문사항 
			      AND GOODS.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
			      <#if internalYn == 'Y' > AND GOODS.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
				  <#if internalYn == 'N' > AND GOODS.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)			      
			      AND GOODS.SALES_DATE BETWEEN :searchDateFr AND :searchDateTo
			      <#if outletCd?has_content> AND GOODS.OUTLET_CD = :outletCd </#if>
			 	GROUP BY GOODS.SALES_DATE, GOODS.OUTLET_CD, MENU.MENU_CLASS, MENU.MENU_SCLASS
			) DUAL
			GROUP BY SALES_DATE, OUTLET_CD
		)  A
        --고객수 구하기
        INNER JOIN (
            SELECT INFO.SALES_DATE, INFO.OUTLET_CD, SUM(INFO.KOR_PSN) + SUM(INFO.FOR_PSN) AS PSN_QTY
            FROM SLE_SALS_INFO INFO
            INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
		               FROM SLE_OUTLET_MST MST
		              INNER JOIN SCO_UPJANG_V UPJANG ON UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
		                     <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
		                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if> 
                         <#if outletCd?has_content> WHERE MST.OUTLET_CD = :outletCd </#if>
		            ) OUTLET ON OUTLET.OUTLET_CD = INFO.OUTLET_CD
		            	  INNER JOIN (
								SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM 
								FROM SLE_SALS_INFO INFO
								LEFT OUTER JOIN (
								      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
								      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
								      <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
								      ORDER BY  OUTLET_CD, POS_NUM
								) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
								WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
								  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
								  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
								  <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)								  
								  AND INFO.SALES_DATE BETWEEN :searchDateFr AND :searchDateTo
								  <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
								  <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
								ORDER BY    INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM
		    				)  INFO2 ON INFO2.OUTLET_CD = INFO.OUTLET_CD 
		    				       AND INFO2.SALES_DATE = INFO.SALES_DATE
		    				       AND INFO2.RECEIPT_NUM = INFO.RECEIPT_NUM		
		    
            WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
			  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
			  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
		      <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
			  AND INFO.SALES_DATE BETWEEN :searchDateFr AND :searchDateTo
			  <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
			  
            GROUP BY INFO.SALES_DATE, INFO.OUTLET_CD
			) B ON B.SALES_DATE = A.SALES_DATE AND B.OUTLET_CD = A.OUTLET_CD
		--지불조건 구하기 (현금, 카드,후불,기타)
        INNER JOIN (
         	SELECT SALES_DATE, OUTLET_CD,
                   SUM(CASH) AS CASH, SUM(CARD) AS CARD, SUM(CRED) AS CRED,  SUM(ETEC) AS ETEC
              FROM
              (
                --현금
                SELECT S_OUTLET.SALES_DATE, S_OUTLET.OUTLET_CD,
                       SUM(S_OUTLET.PAY_AMT) AS CASH, 0 AS CARD, 0 AS CRED, 0 AS ETEC
                  FROM SLE_SALS_OUTLET S_OUTLET
                  INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
		               FROM SLE_OUTLET_MST MST
		              INNER JOIN SCO_UPJANG_V UPJANG ON UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
		                     <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
		                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if> 
                         <#if outletCd?has_content> WHERE MST.OUTLET_CD = :outletCd </#if>
		            ) OUTLET ON OUTLET.OUTLET_CD = S_OUTLET.OUTLET_CD
		             	  INNER JOIN (
								SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM 
								FROM SLE_SALS_INFO INFO
								LEFT OUTER JOIN (
								      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
								      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
								      <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
								      ORDER BY  OUTLET_CD, POS_NUM
								) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
								WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
								  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
								  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
								  <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)								  
								  AND INFO.SALES_DATE BETWEEN :searchDateFr AND :searchDateTo
								  <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
								  <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
								ORDER BY    INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM
		    				)  INFO ON INFO.OUTLET_CD = S_OUTLET.OUTLET_CD 
		    				       AND INFO.SALES_DATE = S_OUTLET.SALES_DATE
		    				       AND INFO.RECEIPT_NUM = S_OUTLET.RECEIPT_NUM		
                 WHERE 1=1
                   <#if internalYn == 'Y' > AND S_OUTLET.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
				   <#if internalYn == 'N' > AND S_OUTLET.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
                   AND S_OUTLET.SALS_CLASS     = '0'		  --0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
                   AND S_OUTLET.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                   AND S_OUTLET.PAY_CD IN (SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0080' )  --현금지불수단목록
                   AND S_OUTLET.SALES_DATE BETWEEN :searchDateFr AND :searchDateTo
                   <#if outletCd?has_content> AND S_OUTLET.OUTLET_CD = :outletCd </#if>
                 GROUP BY S_OUTLET.SALES_DATE, S_OUTLET.OUTLET_CD

                UNION ALL

                --카드
                SELECT C_OUTLET.SALES_DATE, C_OUTLET.OUTLET_CD,
                       0 AS CASH, SUM(C_OUTLET.PAY_AMT) AS CARD, 0 AS CRED, 0 AS ETEC
                  FROM SLE_SALS_OUTLET C_OUTLET
                  INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
		               FROM SLE_OUTLET_MST MST
		              INNER JOIN SCO_UPJANG_V UPJANG ON UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
		                     <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
		                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if> 
                         <#if outletCd?has_content> WHERE MST.OUTLET_CD = :outletCd </#if>
		            ) OUTLET ON OUTLET.OUTLET_CD = C_OUTLET.OUTLET_CD
		              	  INNER JOIN (
								SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM 
								FROM SLE_SALS_INFO INFO
								LEFT OUTER JOIN (
								      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
								      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
								      <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
								      ORDER BY  OUTLET_CD, POS_NUM
								) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
								WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
								  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
								  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
								  <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)								  
								  AND INFO.SALES_DATE BETWEEN :searchDateFr AND :searchDateTo
								  <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
								  <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
								ORDER BY    INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM
		    				)  INFO ON INFO.OUTLET_CD = C_OUTLET.OUTLET_CD 
		    				       AND INFO.SALES_DATE = C_OUTLET.SALES_DATE
		    				       AND INFO.RECEIPT_NUM = C_OUTLET.RECEIPT_NUM		
                 WHERE 1=1
                   <#if internalYn == 'Y' > AND C_OUTLET.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
				   <#if internalYn == 'N' > AND C_OUTLET.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)                   
                   AND C_OUTLET.SALS_CLASS     = '0'		    --0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
                   AND C_OUTLET.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                   AND C_OUTLET.PAY_CD IN (SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0081' )  --카드지불수단목록
                   AND C_OUTLET.SALES_DATE BETWEEN :searchDateFr AND :searchDateTo
                   <#if outletCd?has_content> AND C_OUTLET.OUTLET_CD = :outletCd </#if>
                 GROUP BY C_OUTLET.SALES_DATE, C_OUTLET.OUTLET_CD

                UNION ALL

                --후불
                SELECT D_OUTLET.SALES_DATE, D_OUTLET.OUTLET_CD,
                       0 AS CASH, 0 AS CARD, SUM(D_OUTLET.PAY_AMT) AS CRED, 0 AS ETEC
                  FROM SLE_SALS_OUTLET D_OUTLET
                  INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
		               FROM SLE_OUTLET_MST MST
		              INNER JOIN SCO_UPJANG_V UPJANG ON UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
		                     <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
		                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if> 
                         <#if outletCd?has_content> WHERE MST.OUTLET_CD = :outletCd </#if>
		            ) OUTLET ON OUTLET.OUTLET_CD = D_OUTLET.OUTLET_CD
		            	  INNER JOIN (
								SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM 
								FROM SLE_SALS_INFO INFO
								LEFT OUTER JOIN (
								      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
								      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
								      <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
								      ORDER BY  OUTLET_CD, POS_NUM
								) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
								WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
								  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
								  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
								  <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)								  
								  AND INFO.SALES_DATE BETWEEN :searchDateFr AND :searchDateTo
								  <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
								  <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
								ORDER BY    INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM
		    				)  INFO ON INFO.OUTLET_CD = D_OUTLET.OUTLET_CD 
		    				       AND INFO.SALES_DATE = D_OUTLET.SALES_DATE
		    				       AND INFO.RECEIPT_NUM = D_OUTLET.RECEIPT_NUM		
                 WHERE 1=1
                   <#if internalYn == 'Y' > AND D_OUTLET.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
				   <#if internalYn == 'N' > AND D_OUTLET.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
                   AND D_OUTLET.SALS_CLASS     = '0'		    --0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
                   AND D_OUTLET.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                   AND D_OUTLET.PAY_CD IN (SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0082' )  --후불지불수단목록
                   AND D_OUTLET.SALES_DATE BETWEEN :searchDateFr AND :searchDateTo
                   <#if outletCd?has_content> AND D_OUTLET.OUTLET_CD = :outletCd </#if>
                 GROUP BY D_OUTLET.SALES_DATE, D_OUTLET.OUTLET_CD

                UNION ALL

                --기타
                SELECT E_OUTLET.SALES_DATE, E_OUTLET.OUTLET_CD,
                       0 AS CASH, 0 AS CARD, 0 AS CRED, SUM(E_OUTLET.PAY_AMT) AS ETEC
                  FROM SLE_SALS_PAY E_OUTLET
                  INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
		               FROM SLE_OUTLET_MST MST
		              INNER JOIN SCO_UPJANG_V UPJANG ON UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
		                     <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
		                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if> 
                         <#if outletCd?has_content> WHERE MST.OUTLET_CD = :outletCd </#if>
		            ) OUTLET ON OUTLET.OUTLET_CD = E_OUTLET.OUTLET_CD
		            	  INNER JOIN (
								SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM 
								FROM SLE_SALS_INFO INFO
								LEFT OUTER JOIN (
								      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
								      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
								      <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
								      ORDER BY  OUTLET_CD, POS_NUM
								) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
								WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
								  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
								  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
								  <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)								  
								  AND INFO.SALES_DATE BETWEEN :searchDateFr AND :searchDateTo
								  <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
								  <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
								ORDER BY    INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM
		    				)  INFO ON INFO.OUTLET_CD = E_OUTLET.OUTLET_CD 
		    				       AND INFO.SALES_DATE = E_OUTLET.SALES_DATE
		    				       AND INFO.RECEIPT_NUM = E_OUTLET.RECEIPT_NUM		
                 WHERE 1=1                 		      
                   --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
			       AND E_OUTLET.SELL_YN  = DECODE(E_OUTLET.RECEIPT_STATUS ,'E','N','Y')				--매출 여부
			       --종료
                   <#if internalYn == 'Y' > AND E_OUTLET.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
				   <#if internalYn == 'N' > AND E_OUTLET.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
                   AND E_OUTLET.SALS_CLASS     = '0'		  --0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
                   AND E_OUTLET.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                   AND <#if internalYn == 'Y' > ( </#if>	
			         E_OUTLET.PAY_CD NOT IN (SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0080'
			         					UNION ALL
			                            SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0081' 
			                            UNION ALL
			                            SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0082'
			         					)  --기타 지불은 모두 아닌것
			         <#if internalYn == 'Y' > OR E_OUTLET.PAY_CD = '91')  </#if>                   
                   AND E_OUTLET.SALES_DATE BETWEEN :searchDateFr AND :searchDateTo
                   <#if outletCd?has_content> AND E_OUTLET.OUTLET_CD = :outletCd </#if>
                 GROUP BY E_OUTLET.SALES_DATE, E_OUTLET.OUTLET_CD
              ) CASH_BB
			 GROUP BY SALES_DATE, OUTLET_CD
        ) C ON C.SALES_DATE = A.SALES_DATE AND C.OUTLET_CD = A.OUTLET_CD
		INNER JOIN (SELECT OUTLET_CD, OUTLET_NM FROM  SLE_OUTLET_MST)  D ON D.OUTLET_CD = A.OUTLET_CD
		ORDER BY A.OUTLET_CD, A.SALES_DATE
		]]></statement>
		
	<statement name="selectSalesApprList" type="select"><![CDATA[
		/*+ com.hwfs.rc.sle.dao.outletSalesDAO.selectSalesApprList */

				SELECT    A.OUTLET_CD||' : '||D.OUTLET_NM  AS UPJANG_CDNM  --업장코드:업장명
			  , A.OUTLET_CD AS OUTLET_CD    --'영업코드'
              , A.SALES_DATE  AS SDATE      --'영업일자'
              , CASE TO_CHAR(TO_DATE(A.SALES_DATE,'YYYYMMDD'), 'D') WHEN '1' THEN '일' WHEN '2' THEN '월' WHEN '3' THEN '화' WHEN '4' THEN '수' WHEN '5' THEN '목' WHEN '6' THEN '금' WHEN '7' THEN '토' END AS WEEK
              , B.PSN_QTY     AS GUEST      --'고객수'
              , FOOD_TOT_AMT  AS FOODAMT    --'식료금액'
              , BEVG_TOT_AMT  AS BEVAMT		--'음료금액'
              , ETC_TOT_AMT   AS OTHAMT     --'기타금액'
              , ETC1_TOT_AMT   AS OTHAMT1     --'기타금액'
              , GODS_TOT_AMT  AS SANAMT     --'상품금액'

              , FOOD_DSCN_AMT AS FOODDC     --'식료할인'
              , BEVG_DSCN_AMT AS BEVDC      --'음료할인'
              , ETC_DSCN_AMT  AS OTHDC      --'기타할인'
              , ETC1_DSCN_AMT  AS OTHDC1      --'기타할인'
              , GODS_DSCN_AMT AS SANDC      --'상품할인'

              , NET_SELL_AMT  AS NET        --'공급가액'
              , SVC           AS SVC        --'봉사료'
              , VAT           AS VAT        --'부가세'
              , TOT_SUM_AMT	  AS GROSS      --'매출액'

              , CASH          AS CASH       --'현금'
              , CARD          AS CARD       --'카드'
              , CRED          AS CL         --'후불'
              , ETEC          AS ETC        --'기타'
              , Q.VOID_CNT --'VOID건수합계'
              , Q.VOID_AMT --'VOID금액합계'
              --, '0' AS PART_APPRV_YN
              --, '0' AS TEAM_APPRV_YN
              --, '' AS FILE_PATH
              , DECODE(NVL(E.PART_APPRV_YN, '0'), 'Y', '1', '0') AS PART_APPRV_YN		-- 파트장승인
              , DECODE(NVL(E.TEAM_APPRV_YN, '0'), 'Y', '1', '0') AS TEAM_APPRV_YN		-- 팀장승인
              , E.FILE_PATH AS FILE_PATH												-- 첨부파일경로
              , E.FILE_NAME AS FILE_NAME												-- 첨부파일명
              , E.FILE_ONAME AS FILE_ONAME												-- 최초첨부파일명
              

        FROM(
			SELECT    SALES_DATE, OUTLET_CD
			        , SUM(FOOD_AMT)  AS FOOD_TOT_AMT
			        , SUM(BEVR_AMT)  AS BEVG_TOT_AMT
			        , SUM(OTHER_AMT) AS ETC_TOT_AMT
			        , SUM(OTHER1_AMT) AS ETC1_TOT_AMT
			        , SUM(GODS_AMT)  AS GODS_TOT_AMT

			        , SUM(FOOD_DC)  AS FOOD_DSCN_AMT
			        , SUM(BEVR_DC)  AS BEVG_DSCN_AMT
			        , SUM(OTHER_DC) AS ETC_DSCN_AMT
			        , SUM(OTHER1_DC) AS ETC1_DSCN_AMT
			        , SUM(GODS_DC)  AS GODS_DSCN_AMT

			        , SUM(NET_AMT)  AS NET_SELL_AMT
			        , SUM(SVC_AMT)  AS SVC
			        , SUM(VAT_AMT)  AS VAT
			        , SUM(TOT_AMT)  AS TOT_SUM_AMT
			FROM(
			    SELECT  GOODS.SALES_DATE, GOODS.OUTLET_CD
			          , DECODE(MENU.MENU_CLASS,'F', SUM(GOODS.NET_AMT) , 0) AS FOOD_AMT
			          , DECODE(MENU.MENU_CLASS,'B', SUM(GOODS.NET_AMT) , 0) AS BEVR_AMT
			          , DECODE(MENU.MENU_CLASS,'O', DECODE(MENU.MENU_SCLASS, '02', 0, SUM(GOODS.NET_AMT)) , 0) AS OTHER_AMT
			          , DECODE(MENU.MENU_CLASS,'O', DECODE(MENU.MENU_SCLASS, '02',  SUM(GOODS.NET_AMT),0) , 0) AS OTHER1_AMT
			          , DECODE(MENU.MENU_CLASS,'S', SUM(GOODS.NET_AMT) , 0) AS GODS_AMT

					  --할인
			          , DECODE(MENU.MENU_CLASS,'F', SUM(GOODS.DISCNT_NET) , 0) AS FOOD_DC
			          , DECODE(MENU.MENU_CLASS,'B', SUM(GOODS.DISCNT_NET) , 0) AS BEVR_DC
			         -- , DECODE(MENU.MENU_CLASS,'O', SUM(GOODS.DISCNT_NET) , 0) AS OTHER_DC
			          , DECODE(MENU.MENU_CLASS,'O', DECODE(MENU.MENU_SCLASS, '02', 0, SUM(GOODS.DISCNT_NET)) , 0) AS OTHER_DC
			          , DECODE(MENU.MENU_CLASS,'O', DECODE(MENU.MENU_SCLASS, '02',  SUM(GOODS.DISCNT_NET),0) , 0) AS OTHER1_DC
			          
			          , DECODE(MENU.MENU_CLASS,'S', SUM(GOODS.DISCNT_NET) , 0) AS GODS_DC

					  , SUM(GOODS.NET_AMT) AS NET_AMT
			          , SUM(GOODS.SVC)     AS SVC_AMT
			          , SUM(GOODS.VAT)     AS VAT_AMT
			          , SUM(GOODS.TOT_AMT) AS TOT_AMT
			    FROM SLE_SALS_GOODS GOODS
			      INNER JOIN SLE_OUTLET_MENU MENU ON MENU.OUTLET_CD = GOODS.OUTLET_CD
			                                                     AND MENU.MENU_CD  = GOODS.MENU_CD
		          INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
				               FROM SLE_OUTLET_MST MST
				              INNER JOIN SCO_UPJANG_V UPJANG ON UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
				                     <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
				                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if> 
		                         <#if outletCd?has_content> WHERE MST.OUTLET_CD = :outletCd </#if>
				            ) OUTLET ON OUTLET.OUTLET_CD = GOODS.OUTLET_CD
				  INNER JOIN (
								SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM 
								FROM SLE_SALS_INFO INFO
								<#if outletSub?has_content>
									INNER JOIN (
									      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
									      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
									       WHERE GRP.CODE = :outletSub   --01:다채움 02:마루 03:나무 
									      ORDER BY  OUTLET_CD, POS_NUM
									) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
								</#if>
								WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
								  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
								  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
								  <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)								  
								  AND INFO.SALES_DATE BETWEEN :searchDateFr AND :searchDateTo
								  <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
								  <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
								ORDER BY    INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM
		    				)  INFO ON INFO.OUTLET_CD = GOODS.OUTLET_CD 
		    				       AND INFO.SALES_DATE = GOODS.SALES_DATE
		    				       AND INFO.RECEIPT_NUM = GOODS.RECEIPT_NUM		   
			    WHERE 1=1
			      --GOODS.SALS_YN        = 'Y'	--판매여부
                  --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
			      AND GOODS.SELL_YN  = DECODE(GOODS.RECEIPT_STATUS ,'E','N','Y')				--매출 여부
			      --종료
			      AND GOODS.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
			      AND GOODS.DATA_CLASS     = '1'  -- 1:메뉴 3:주문사항 
			      AND GOODS.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
			      <#if internalYn == 'Y' > AND GOODS.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
				  <#if internalYn == 'N' > AND GOODS.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)			      
			      AND GOODS.SALES_DATE BETWEEN :searchDateFr AND :searchDateTo
			      <#if outletCd?has_content> AND GOODS.OUTLET_CD = :outletCd </#if>
			 	GROUP BY GOODS.SALES_DATE, GOODS.OUTLET_CD, MENU.MENU_CLASS, MENU.MENU_SCLASS
			) DUAL
			GROUP BY SALES_DATE, OUTLET_CD
		)  A
        --고객수 구하기
        INNER JOIN (
            SELECT INFO.SALES_DATE, INFO.OUTLET_CD, SUM(INFO.KOR_PSN) + SUM(INFO.FOR_PSN) AS PSN_QTY
            FROM SLE_SALS_INFO INFO
								<#if outletSub?has_content>
									INNER JOIN (
									      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
									      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
									       WHERE GRP.CODE = :outletSub   --01:다채움 02:마루 03:나무 
									) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
								</#if>
            INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
		               FROM SLE_OUTLET_MST MST
		              INNER JOIN SCO_UPJANG_V UPJANG ON UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
		                     <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
		                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if> 
                         <#if outletCd?has_content> WHERE MST.OUTLET_CD = :outletCd </#if>
		            ) OUTLET ON OUTLET.OUTLET_CD = INFO.OUTLET_CD
		    
            WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
			  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
			  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
		      <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
			  AND INFO.SALES_DATE BETWEEN :searchDateFr AND :searchDateTo
			  <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
			  
            GROUP BY INFO.SALES_DATE, INFO.OUTLET_CD
			) B ON B.SALES_DATE = A.SALES_DATE AND B.OUTLET_CD = A.OUTLET_CD
		--지불조건 구하기 (현금, 카드,후불,기타)
        INNER JOIN (
         	SELECT SALES_DATE, OUTLET_CD,
                   SUM(CASH) AS CASH, SUM(CARD) AS CARD, SUM(CRED) AS CRED,  SUM(ETEC) AS ETEC
              FROM
              (
                --현금
                SELECT S_OUTLET.SALES_DATE, S_OUTLET.OUTLET_CD,
                       SUM(S_OUTLET.PAY_AMT) AS CASH, 0 AS CARD, 0 AS CRED, 0 AS ETEC
                  FROM SLE_SALS_OUTLET S_OUTLET
								<#if outletSub?has_content>
									INNER JOIN (
									      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
									      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
									       WHERE GRP.CODE = :outletSub   --01:다채움 02:마루 03:나무 
									) POS ON POS.OUTLET_CD = S_OUTLET.OUTLET_CD AND POS.POS_NUM = S_OUTLET.POS_NUM
								</#if>
                  INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
		               FROM SLE_OUTLET_MST MST
		              INNER JOIN SCO_UPJANG_V UPJANG ON UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
		                     <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
		                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if> 
                         <#if outletCd?has_content> WHERE MST.OUTLET_CD = :outletCd </#if>
		            ) OUTLET ON OUTLET.OUTLET_CD = S_OUTLET.OUTLET_CD
                 WHERE 1=1
                   <#if internalYn == 'Y' > AND S_OUTLET.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
				   <#if internalYn == 'N' > AND S_OUTLET.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
                   AND S_OUTLET.SALS_CLASS     = '0'		  --0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
                   AND S_OUTLET.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                   AND S_OUTLET.PAY_CD IN (SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0080' )  --현금지불수단목록
                   AND S_OUTLET.SALES_DATE BETWEEN :searchDateFr AND :searchDateTo
                   <#if outletCd?has_content> AND S_OUTLET.OUTLET_CD = :outletCd </#if>
                 GROUP BY S_OUTLET.SALES_DATE, S_OUTLET.OUTLET_CD

                UNION ALL

                --카드
                SELECT C_OUTLET.SALES_DATE, C_OUTLET.OUTLET_CD,
                       0 AS CASH, SUM(C_OUTLET.PAY_AMT) AS CARD, 0 AS CRED, 0 AS ETEC
                  FROM SLE_SALS_OUTLET C_OUTLET          
								<#if outletSub?has_content>
									INNER JOIN (
									      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
									      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
									       WHERE GRP.CODE = :outletSub   --01:다채움 02:마루 03:나무 
									) POS ON POS.OUTLET_CD = C_OUTLET.OUTLET_CD AND POS.POS_NUM = C_OUTLET.POS_NUM
								</#if>
                  INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
		               FROM SLE_OUTLET_MST MST
		              INNER JOIN SCO_UPJANG_V UPJANG ON UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
		                     <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
		                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if> 
                         <#if outletCd?has_content> WHERE MST.OUTLET_CD = :outletCd </#if>
		            ) OUTLET ON OUTLET.OUTLET_CD = C_OUTLET.OUTLET_CD
                 WHERE 1=1
                   <#if internalYn == 'Y' > AND C_OUTLET.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
				   <#if internalYn == 'N' > AND C_OUTLET.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)                   
                   AND C_OUTLET.SALS_CLASS     = '0'		    --0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
                   AND C_OUTLET.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                   AND C_OUTLET.PAY_CD IN (SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0081' )  --카드지불수단목록
                   AND C_OUTLET.SALES_DATE BETWEEN :searchDateFr AND :searchDateTo
                   <#if outletCd?has_content> AND C_OUTLET.OUTLET_CD = :outletCd </#if>
                 GROUP BY C_OUTLET.SALES_DATE, C_OUTLET.OUTLET_CD

                UNION ALL

                --후불
                SELECT D_OUTLET.SALES_DATE, D_OUTLET.OUTLET_CD,
                       0 AS CASH, 0 AS CARD, SUM(D_OUTLET.PAY_AMT) AS CRED, 0 AS ETEC
                  FROM SLE_SALS_OUTLET D_OUTLET   
								<#if outletSub?has_content>
									INNER JOIN (
									      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
									      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
									       WHERE GRP.CODE = :outletSub   --01:다채움 02:마루 03:나무 
									) POS ON POS.OUTLET_CD = D_OUTLET.OUTLET_CD AND POS.POS_NUM = D_OUTLET.POS_NUM
								</#if>
                  INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
		               FROM SLE_OUTLET_MST MST
		              INNER JOIN SCO_UPJANG_V UPJANG ON UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
		                     <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
		                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if> 
                         <#if outletCd?has_content> WHERE MST.OUTLET_CD = :outletCd </#if>
		            ) OUTLET ON OUTLET.OUTLET_CD = D_OUTLET.OUTLET_CD
                 WHERE 1=1
                   <#if internalYn == 'Y' > AND D_OUTLET.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
				   <#if internalYn == 'N' > AND D_OUTLET.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
                   AND D_OUTLET.SALS_CLASS     = '0'		    --0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
                   AND D_OUTLET.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                   AND D_OUTLET.PAY_CD IN (SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0082' )  --후불지불수단목록
                   AND D_OUTLET.SALES_DATE BETWEEN :searchDateFr AND :searchDateTo
                   <#if outletCd?has_content> AND D_OUTLET.OUTLET_CD = :outletCd </#if>
                 GROUP BY D_OUTLET.SALES_DATE, D_OUTLET.OUTLET_CD

                UNION ALL

                --기타
                SELECT E_OUTLET.SALES_DATE, E_OUTLET.OUTLET_CD,
                       0 AS CASH, 0 AS CARD, 0 AS CRED, SUM(E_OUTLET.PAY_AMT) AS ETEC
                  FROM SLE_SALS_PAY E_OUTLET                 
								<#if outletSub?has_content>
									INNER JOIN (
									      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
									      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
									       WHERE GRP.CODE = :outletSub   --01:다채움 02:마루 03:나무 
									) POS ON POS.OUTLET_CD = E_OUTLET.OUTLET_CD AND POS.POS_NUM = E_OUTLET.POS_NUM
								</#if>
                  INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
		               FROM SLE_OUTLET_MST MST
		              INNER JOIN SCO_UPJANG_V UPJANG ON UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
		                     <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
		                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if> 
                         <#if outletCd?has_content> WHERE MST.OUTLET_CD = :outletCd </#if>
		            ) OUTLET ON OUTLET.OUTLET_CD = E_OUTLET.OUTLET_CD
                 WHERE 1=1            		      
                   --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
			       AND E_OUTLET.SELL_YN  = DECODE(E_OUTLET.RECEIPT_STATUS ,'E','N','Y')				--매출 여부
			       --종료
                   <#if internalYn == 'Y' > AND E_OUTLET.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
				   <#if internalYn == 'N' > AND E_OUTLET.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
                   AND E_OUTLET.SALS_CLASS     = '0'		  --0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
                   AND E_OUTLET.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                   AND <#if internalYn == 'Y' > ( </#if>	
			         E_OUTLET.PAY_CD NOT IN (SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0080'
			         					UNION ALL
			                            SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0081' 
			                            UNION ALL
			                            SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0082'
			         					)  --기타 지불은 모두 아닌것
			         <#if internalYn == 'Y' > OR E_OUTLET.PAY_CD = '91')  </#if> 
                   AND E_OUTLET.SALES_DATE BETWEEN :searchDateFr AND :searchDateTo
                   <#if outletCd?has_content> AND E_OUTLET.OUTLET_CD = :outletCd </#if>
                 GROUP BY E_OUTLET.SALES_DATE, E_OUTLET.OUTLET_CD
              ) CASH_BB
			 GROUP BY SALES_DATE, OUTLET_CD
        ) C ON C.SALES_DATE = A.SALES_DATE AND C.OUTLET_CD = A.OUTLET_CD
        --VOID 집게
        LEFT JOIN (
            SELECT PAY.SALES_DATE, PAY.OUTLET_CD, COUNT(*) AS VOID_CNT, SUM(PAY_AMT) AS VOID_AMT
            FROM SLE_SALS_PAY PAY        
								<#if outletSub?has_content>
									INNER JOIN (
									      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
									      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
									       WHERE GRP.CODE = :outletSub   --01:다채움 02:마루 03:나무 
									) POS ON POS.OUTLET_CD = PAY.OUTLET_CD AND POS.POS_NUM = PAY.POS_NUM
								</#if>
            INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
		               FROM SLE_OUTLET_MST MST
		              INNER JOIN SCO_UPJANG_V UPJANG ON UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD)  
		              		 <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
		                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if> 
                         <#if outletCd?has_content> WHERE MST.OUTLET_CD = :outletCd </#if> 
		            ) OUTLET ON OUTLET.OUTLET_CD = PAY.OUTLET_CD
		    
            WHERE PAY.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
			  AND PAY.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
			   AND PAY.RECEIPT_STATUS IN ('V','R','X')  --영수증 상태 Q:정상 R:반품(-)
		       --영수증 상태 Q:정상 R:반품(-)            		      
              --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
			  AND PAY.SELL_YN  = DECODE(PAY.RECEIPT_STATUS ,'E','N','Y')				--매출 여부
			  --종료
			  AND PAY.SALES_DATE BETWEEN :searchDateFr AND :searchDateTo
			  <#if outletCd?has_content> AND PAY.OUTLET_CD = :outletCd </#if>		   
			  
            GROUP BY PAY.SALES_DATE, PAY.OUTLET_CD
			) Q ON Q.SALES_DATE = A.SALES_DATE AND Q.OUTLET_CD = A.OUTLET_CD
		INNER JOIN (SELECT OUTLET_CD, OUTLET_NM FROM  SLE_OUTLET_MST)  D ON D.OUTLET_CD = A.OUTLET_CD
		LEFT OUTER JOIN SLE_SALS_APPRV E ON E.OUTLET_CD = A.OUTLET_CD AND E.SALES_DATE = A.SALES_DATE 
		--ORDER BY A.OUTLET_CD, A.SALES_DATE
		
	  UNION ALL
	  
	  SELECT    A.UPJANG_CD||' : '||D.OUTLET_NM  AS UPJANG_CDNM  --업장코드:업장명
	  		  , TO_CHAR(A.UPJANG_CD) AS OUTLET_CD    --'영업코드'
              , A.OCCUR_DATE  AS SDATE      --'영업일자'
              , CASE TO_CHAR(TO_DATE(A.OCCUR_DATE,'YYYYMMDD'), 'D') WHEN '1' THEN '일' WHEN '2' THEN '월' WHEN '3' THEN '화' WHEN '4' THEN '수' WHEN '5' THEN '목' WHEN '6' THEN '금' WHEN '7' THEN '토' END AS WEEK
              , B.PSN_QTY     AS GUEST      --'고객수'
              , FOOD_TOT_AMT  AS FOODAMT    --'식료금액'
              , BEVG_TOT_AMT  AS BEVAMT		--'음료금액'
              , ETC_TOT_AMT   AS OTHAMT     --'기타금액'
              , ETC1_TOT_AMT   AS OTHAMT1     --'기타금액'
              , GODS_TOT_AMT  AS SANAMT     --'상품금액'

              , FOOD_DSCN_AMT AS FOODDC     --'식료할인'
              , BEVG_DSCN_AMT AS BEVDC      --'음료할인'
              , ETC_DSCN_AMT  AS OTHDC      --'기타할인'
              , ETC1_DSCN_AMT  AS OTHDC1      --'기타할인'
              , GODS_DSCN_AMT AS SANDC      --'상품할인'

              , NET_SELL_AMT  AS NET        --'공급가액'
              , SVC           AS SVC        --'봉사료'
              , VAT           AS VAT        --'부가세'
              , TOT_SUM_AMT	  AS GROSS      --'매출액'

              , CASH          AS CASH       --'현금'
              , CARD          AS CARD       --'카드'
              , CRED          AS CL         --'후불'
              , ETEC          AS ETC        --'기타'
              , null AS  VOID_CNT --'VOID건수합계'
              , null AS  VOID_AMT --'VOID금액합계'
              --, '0' AS PART_APPRV_YN
              --, '0' AS TEAM_APPRV_YN
              --, '' AS FILE_PATH
              , DECODE(NVL(E.PART_APPRV_YN, '0'), 'Y', '1', '0') AS PART_APPRV_YN		-- 파트장승인
              , DECODE(NVL(E.TEAM_APPRV_YN, '0'), 'Y', '1', '0') AS TEAM_APPRV_YN		-- 팀장승인
              , E.FILE_PATH AS FILE_PATH												-- 첨부파일경로
              , E.FILE_NAME AS FILE_NAME												-- 첨부파일명
              , E.FILE_ONAME AS FILE_ONAME												-- 최초첨부파일명

        FROM(
			SELECT    OCCUR_DATE, UPJANG_CD
			        , SUM(FOOD_AMT)  AS FOOD_TOT_AMT
			        , SUM(BEVR_AMT)  AS BEVG_TOT_AMT
			        , SUM(OTHER_AMT) AS ETC_TOT_AMT
			        , SUM(OTHER1_AMT) AS ETC1_TOT_AMT
			        , SUM(GODS_AMT)  AS GODS_TOT_AMT

			        , SUM(FOOD_DC)  AS FOOD_DSCN_AMT
			        , SUM(BEVR_DC)  AS BEVG_DSCN_AMT
			        , SUM(OTHER_DC) AS ETC_DSCN_AMT
			        , SUM(OTHER1_DC) AS ETC1_DSCN_AMT 
			        , SUM(GODS_DC)  AS GODS_DSCN_AMT

			        , SUM(NET_AMT)  AS NET_SELL_AMT
			        , SUM(SVC_AMT)  AS SVC 
			        , SUM(VAT_AMT)  AS VAT
			        , SUM(TOT_AMT)  AS TOT_SUM_AMT
			FROM(
			    SELECT  GOODS.OCCUR_DATE, GOODS.UPJANG_CD
			          , DECODE(GOODS.SALS_CLASS,'1204', SUM(GOODS.NET_AMT) , 0) AS FOOD_AMT
			          , DECODE(GOODS.SALS_CLASS,'1205', SUM(GOODS.NET_AMT) , 0) AS BEVR_AMT
			          , DECODE(GOODS.SALS_CLASS,'1206', SUM(GOODS.NET_AMT) , 0) AS OTHER_AMT
			          , 0 AS OTHER1_AMT
			          , DECODE(GOODS.SALS_CLASS,'1202', SUM(GOODS.NET_AMT) , DECODE(GOODS.SALS_CLASS, '1203',  SUM(GOODS.NET_AMT),0)) AS GODS_AMT

					  --할인
			          , 0 AS FOOD_DC
			          , 0 AS BEVR_DC
			         -- , DECODE(MENU.MENU_CLASS,'O', SUM(GOODS.DISCNT_NET) , 0) AS OTHER_DC
			          , 0 AS OTHER_DC
			          , 0 AS OTHER1_DC
			          , 0 AS GODS_DC

					  , SUM(GOODS.NET_AMT) AS NET_AMT
			          , SUM(GOODS.SVC_AMT)     AS SVC_AMT
			          , SUM(GOODS.VAT_AMT)     AS VAT_AMT
			          , SUM(GOODS.SAL_AMT) AS TOT_AMT
			    FROM SLA_IF_UPJANG_SALS_DETAIL GOODS
			    WHERE 1=1
            AND TO_CHAR(GOODS.UPJANG_CD) IN (SELECT OUTLET_CD FROM SLE_OUTLET_MST WHERE OUTLET_TY = 'Y')
			      AND RECD_STATUS = 'L'
			      --AND GOODS.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
			      --AND GOODS.DATA_CLASS     = '1'  -- 1:메뉴 3:주문사항
			      --AND GOODS.RECEIPT_STATUS IN ('Q','R','E')  --영수증 상태 Q:정상 R:반품(-)
				   --영수증 상태 Q:정상 R:반품(-)
            AND GOODS.SYS_CLASS = '12'
			      AND GOODS.OCCUR_DATE BETWEEN :searchDateFr AND :searchDateTo
			       <#if outletCd?has_content> AND GOODS.UPJANG_CD = :outletCd </#if>
			 	GROUP BY GOODS.OCCUR_DATE, GOODS.UPJANG_CD, GOODS.SALS_CLASS
			) DUAL
			GROUP BY OCCUR_DATE, UPJANG_CD
		)  A
        --고객수 구하기
        INNER JOIN (
            SELECT INFO.OCCUR_DATE, INFO.UPJANG_CD, SUM(INFO.TOT_PSN) AS PSN_QTY
            FROM SLA_IF_UPJANG_SALS_MST INFO
            INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
		               FROM SLE_OUTLET_MST MST
		              INNER JOIN SCO_UPJANG_V UPJANG ON UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD)
		                      <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
		                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if> 
                         <#if outletCd?has_content> WHERE MST.OUTLET_CD = :outletCd </#if>
		            ) OUTLET ON OUTLET.OUTLET_CD = INFO.UPJANG_CD

            WHERE TO_CHAR(INFO.UPJANG_CD) IN (SELECT OUTLET_CD FROM SLE_OUTLET_MST WHERE OUTLET_TY = 'Y')
			   AND INFO.RECD_STATUS = 'L'
			   AND INFO.SYS_CLASS = '12'
			  AND INFO.OCCUR_DATE BETWEEN :searchDateFr AND :searchDateTo
			  <#if outletCd?has_content>AND INFO.UPJANG_CD = :outletCd </#if>

            GROUP BY INFO.OCCUR_DATE, INFO.UPJANG_CD
			) B ON B.OCCUR_DATE = A.OCCUR_DATE AND B.UPJANG_CD = A.UPJANG_CD
		--지불조건 구하기 (현금, 카드,후불,기타)
        INNER JOIN (
         	SELECT OCCUR_DATE, UPJANG_CD,
                   SUM(CASH) AS CASH, SUM(CARD) AS CARD, SUM(CRED) AS CRED,  SUM(ETEC) AS ETEC
              FROM
              (
                --현금
                SELECT S_OUTLET.OCCUR_DATE, S_OUTLET.UPJANG_CD,
                       SUM(S_OUTLET.AMT) AS CASH, 0 AS CARD, 0 AS CRED, 0 AS ETEC
                  FROM SLA_IF_UPJANG_PAYMENT S_OUTLET
                  INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
		               FROM SLE_OUTLET_MST MST
		              INNER JOIN SCO_UPJANG_V UPJANG ON UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD)
		                      <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
		                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if> 
                         <#if outletCd?has_content> WHERE MST.OUTLET_CD = :outletCd </#if>
		            ) OUTLET ON OUTLET.OUTLET_CD = S_OUTLET.UPJANG_CD
                 WHERE TO_CHAR(S_OUTLET.UPJANG_CD) IN (SELECT OUTLET_CD FROM SLE_OUTLET_MST WHERE OUTLET_TY = 'Y')
			   		AND S_OUTLET.RECD_STATUS = 'L'
			   		AND S_OUTLET.SYS_CLASS = '12'
                   --AND S_OUTLET.RECEIPT_STATUS IN ('Q','R','E')  --영수증 상태 Q:정상 R:반품(-)
				    --영수증 상태 Q:정상 R:반품(-)

                   --AND S_OUTLET.SALS_CLASS     = '0'		  --0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
                   AND S_OUTLET.PAY_CD = '1'  --현금지불수단목록
                   AND S_OUTLET.OCCUR_DATE BETWEEN :searchDateFr AND :searchDateTo
                    <#if outletCd?has_content>AND S_OUTLET.UPJANG_CD = :outletCd </#if>
                    
                    
                 GROUP BY S_OUTLET.OCCUR_DATE, S_OUTLET.UPJANG_CD

                UNION ALL

                --카드
                SELECT C_OUTLET.OCCUR_DATE, C_OUTLET.UPJANG_CD,
                       0 AS CASH, SUM(C_OUTLET.AMT) AS CARD, 0 AS CRED, 0 AS ETEC
                  FROM SLA_IF_UPJANG_PAYMENT C_OUTLET
                  INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
		               FROM SLE_OUTLET_MST MST
		              INNER JOIN SCO_UPJANG_V UPJANG ON UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD)
		                     <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
		                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if> 
                         <#if outletCd?has_content> WHERE MST.OUTLET_CD = :outletCd </#if>
		            ) OUTLET ON OUTLET.OUTLET_CD = C_OUTLET.UPJANG_CD
                WHERE TO_CHAR(C_OUTLET.UPJANG_CD) IN (SELECT OUTLET_CD FROM SLE_OUTLET_MST WHERE OUTLET_TY = 'Y')
			   		AND C_OUTLET.RECD_STATUS = 'L'
			   		AND C_OUTLET.SYS_CLASS = '12'
                   AND C_OUTLET.PAY_CD = '2'  --카드지불수단목록
                   AND C_OUTLET.OCCUR_DATE BETWEEN :searchDateFr AND :searchDateTo
                   <#if outletCd?has_content>AND C_OUTLET.UPJANG_CD = :outletCd </#if>
                    
                 GROUP BY C_OUTLET.OCCUR_DATE, C_OUTLET.UPJANG_CD

                UNION ALL

                --후불
                SELECT D_OUTLET.OCCUR_DATE, D_OUTLET.UPJANG_CD,
                       0 AS CASH, 0 AS CARD, SUM(D_OUTLET.AMT) AS CRED, 0 AS ETEC
                  FROM SLA_IF_UPJANG_PAYMENT D_OUTLET
                  INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
		               FROM SLE_OUTLET_MST MST
		              INNER JOIN SCO_UPJANG_V UPJANG ON UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD)
		                      <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
		                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if> 
                         <#if outletCd?has_content> WHERE MST.OUTLET_CD = :outletCd </#if>
		            ) OUTLET ON OUTLET.OUTLET_CD = D_OUTLET.UPJANG_CD
                 WHERE TO_CHAR(D_OUTLET.UPJANG_CD) IN (SELECT OUTLET_CD FROM SLE_OUTLET_MST WHERE OUTLET_TY = 'Y')
			   		AND D_OUTLET.RECD_STATUS = 'L'
			   		AND D_OUTLET.SYS_CLASS = '12'
                   AND D_OUTLET.PAY_CD = '7'  --후불지불수단목록
                   AND D_OUTLET.OCCUR_DATE BETWEEN :searchDateFr AND :searchDateTo
                   <#if outletCd?has_content>AND D_OUTLET.UPJANG_CD = :outletCd </#if>
                 GROUP BY D_OUTLET.OCCUR_DATE, D_OUTLET.UPJANG_CD

                UNION ALL

                --기타
                SELECT E_OUTLET.OCCUR_DATE, E_OUTLET.UPJANG_CD,
                       0 AS CASH, 0 AS CARD, 0 AS CRED, SUM(E_OUTLET.AMT) AS ETEC
                  FROM SLA_IF_UPJANG_PAYMENT E_OUTLET
                  INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
		               FROM SLE_OUTLET_MST MST
		              INNER JOIN SCO_UPJANG_V UPJANG ON UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD)
		                      <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
		                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if> 
                         <#if outletCd?has_content> WHERE MST.OUTLET_CD = :outletCd </#if>
		            ) OUTLET ON OUTLET.OUTLET_CD = E_OUTLET.UPJANG_CD
                 WHERE TO_CHAR(E_OUTLET.UPJANG_CD) IN (SELECT OUTLET_CD FROM SLE_OUTLET_MST WHERE OUTLET_TY = 'Y')
			   		AND E_OUTLET.RECD_STATUS = 'L'
			   		AND E_OUTLET.SYS_CLASS = '12'
                   AND E_OUTLET.PAY_CD NOT IN ('1','2','7') --기타 지불은 모두 아닌것
                   AND E_OUTLET.OCCUR_DATE BETWEEN :searchDateFr AND :searchDateTo
                   <#if outletCd?has_content>AND E_OUTLET.UPJANG_CD = :outletCd </#if>
                 GROUP BY E_OUTLET.OCCUR_DATE, E_OUTLET.UPJANG_CD
              ) CASH_BB
			 GROUP BY OCCUR_DATE, UPJANG_CD
        ) C ON C.OCCUR_DATE = A.OCCUR_DATE AND C.UPJANG_CD = A.UPJANG_CD

		INNER JOIN (SELECT OUTLET_CD, OUTLET_NM FROM  SLE_OUTLET_MST)  D ON D.OUTLET_CD = A.UPJANG_CD
		LEFT OUTER JOIN SLE_SALS_APPRV E ON E.OUTLET_CD = A.UPJANG_CD AND E.SALES_DATE = A.OCCUR_DATE
		
	
		--ORDER BY UPJANG_CD, OCCUR_DATE
		]]></statement>
		
		<statement name="selectYn" type="select">
		<![CDATA[
		/*+ com.hwfs.rc.sle.dao.outletSalesDAO.selectYn */
	
	 SELECT SALES_DATE,OUTLET_CD
	 	FROM SLE_SALS_APPRV
	 	
	 	WHERE SALES_DATE = :sdate
	 		AND OUTLET_CD = :outletCd		
		]]>
	</statement>

	<!--  DATA를 저장한다. -->
	<statement name="insertData" type="insert">
		<![CDATA[
		/*+ com.hwfs.rc.sle.dao.outletSalesDAO.insertData */
	
	 INSERT INTO SLE_SALS_APPRV
		(
		 	SALES_DATE,OUTLET_CD,PART_APPRV_YN,TEAM_APPRV_YN,REMARK,FILE_NAME,FILE_ONAME,FILE_PATH
		 	,CUSER,CDATE,UUSER,UDATE
			
		) VALUES (
		
		 :sdate,:outletCd,DECODE(NVL(:partApprvYn, '0'), '1', 'Y', 'N'),DECODE(NVL(:teamApprvYn, '0'), '1', 'Y', 'N'),'',:fileName,:fileOname,'',
		 :loginSabun, SYSDATE,		 :loginSabun,		 SYSDATE
		 
		)
		
		]]>
	</statement>

	<!--  파트장승인 수정한다. -->
	<statement name="updateData1" type="update">
	<![CDATA[
		/*+ com.hwfs.rc.sle.dao.outletSalesDAO.updateData1 */
		
 		UPDATE SLE_SALS_APPRV SET
 		
 		<#if partApprvYn?exists> PART_APPRV_YN = DECODE(NVL(:partApprvYn, '0'), '1', 'Y', 'N'), </#if>
 		 		
		UDATE = SYSDATE,
		UUSER = :loginSabun
		
		WHERE  SALES_DATE = :sdate
	 		AND OUTLET_CD = :outletCd	
	 
 
		]]>
	</statement>
	
	<!--  팀장승인 수정한다. -->
	<statement name="updateData2" type="update">
	<![CDATA[
		/*+ com.hwfs.rc.sle.dao.outletSalesDAO.updateData2 */
		
 		UPDATE SLE_SALS_APPRV SET

 		<#if teamApprvYn?exists> TEAM_APPRV_YN = DECODE(NVL(:teamApprvYn, '0'), '1', 'Y', 'N'), </#if>
		
		UDATE = SYSDATE,
		UUSER = :loginSabun
		
		WHERE  SALES_DATE = :sdate
	 		AND OUTLET_CD = :outletCd	
	 
 
		]]>
	</statement>
	
	<!--  첨부파일 정보를 수정한다. -->
	<statement name="updateData3" type="update">
	<![CDATA[
		/*+ com.hwfs.rc.sle.dao.outletSalesDAO.updateData3 */
		
 		UPDATE SLE_SALS_APPRV SET

 		<#if fileName?exists> FILE_NAME = :fileName, </#if>
 		<#if fileOname?exists> FILE_ONAME = :fileOname, </#if>
		
		UDATE = SYSDATE,
		UUSER = :loginSabun
		
		WHERE  SALES_DATE = :sdate
	 		AND OUTLET_CD = :outletCd	
	 
 
		]]>
	</statement>
	
</hqml>
