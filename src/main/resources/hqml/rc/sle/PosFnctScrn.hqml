<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="rc.sle.posfnctScrnDAO">
	<desc>포스 기능 화면 관리</desc>

	<!--  DATA를 조회한다. -->
	<statement name="selectList" type="select">
	/*+ com.hwfs.rc.sle.dao.posfnctScrnDAO.selectList */
	<![CDATA[
 
		SELECT 
				MST.BC_CD, MU.MU_NM  AS BC_NM,
				MST.OUTLET_TYPE_CD,
				MST.PIC_ID,
				MST.CLASS AS CLASS_CD,
				MST.PIC_PLACE,
				MST.FNCT_ID,
				MST.AUTH,
				MST.PIC_DSPL_NM1,
				MST.PIC_DSPL_NM2,
				MST.PIC_DSPL_NM3,
				MST.ALTER_FNCT_ID,
				MST.ALTER_PIC_DSPL_NM1,
				MST.ALTER_PIC_DSPL_NM2,
				MST.ALTER_PIC_DSPL_NM3,
				MST.AUTH_CLASS,
				DECODE(MST.USE_YN, 'Y', 1, 0) AS USE_YN,
				MST.CUSER,
				MST.CDATE,
				MST.UUSER,
				MST.UDATE
		FROM   SLE_POS_FNCT_PIC    MST
		INNER JOIN ( SELECT 'ALL' AS MU_CD, 'ALL' AS MU_NM FROM DUAL
		             UNION ALL
		             SELECT MU_CD, MU_NM FROM HLDC_SC_MU MU 
		             ) MU ON MU.MU_CD = MST.BC_CD
		--INNER JOIN SCC_COMMON_CODE BCL   ON BCL.GROUP_CODE  = 'SLE_0026' AND BCL.CODE  = MST.BC_CD
		WHERE  1 = 1
		
		<#if bcCd?has_content>         AND  MST.BC_CD          = :bcCd            </#if> 
		<#if outletTypeCd?has_content> AND  MST.OUTLET_TYPE_CD = :outletTypeCd	  </#if> 
		<#if useYn?has_content>        AND  MST.USE_YN  	   = DECODE(:useYn, '1', 'Y', MST.USE_YN)  </#if> 
	 	 
	]]>
	</statement>
	
 
	
		
	<!--  DATA를 저장한다. -->
	<statement name="insertData" type="insert">
	/*+ com.hwfs.rc.sle.dao.posfnctScrnDAO.insertData */
		<![CDATA[
	 	INSERT INTO SLE_POS_FNCT_PIC
			(
				BC_CD, 
				OUTLET_TYPE_CD,
				PIC_ID,
				CLASS,
				PIC_PLACE,
				FNCT_ID,
				AUTH,
				PIC_DSPL_NM1,
				PIC_DSPL_NM2,
				PIC_DSPL_NM3,
				ALTER_FNCT_ID,
				ALTER_PIC_DSPL_NM1,
				ALTER_PIC_DSPL_NM2,
				ALTER_PIC_DSPL_NM3,
				AUTH_CLASS,
				USE_YN,
				CUSER,
				CDATE,
				UUSER,
				UDATE
			) VALUES (
				 :bcCd,
				 :outletTypeCd,
				 :picId,
				 :classCd,
				 :picPlace,
				<#if fnctId?exists> 		 :fnctId, 				 <#else> null, </#if>
				<#if auth?exists> 			 :auth, 				 <#else> null, </#if>
				<#if picDsplNm1?exists> 	 :picDsplNm1, 			 <#else> null, </#if>
				<#if picDsplNm2?exists> 	 :picDsplNm2, 			 <#else> null, </#if>
				<#if picDsplNm3?exists> 	 :picDsplNm3, 			 <#else> null, </#if>
				<#if alterFnctId?exists> 	 :alterFnctId, 			 <#else> null, </#if>
				<#if alterPicDsplNm1?exists> :alterPicDsplNm1, 		 <#else> null, </#if>
				<#if alterPicDsplNm2?exists> :alterPicDsplNm2, 		 <#else> null, </#if>
				<#if alterPicDsplNm3?exists> :alterPicDsplNm3, 		 <#else> null, </#if>
				<#if authClass?exists> 		 :authClass, 			 <#else> null, </#if>
				<#if useYn?exists>    DECODE(:useYn, '1', 'Y', 'N'), <#else> null, </#if>
				 :loginSabun,
				 SYSDATE,
				 :loginSabun,
				 SYSDATE
			)


		]]>
	</statement>
	
	<!--  DATA를 수정한다. -->
	<statement name="updateData" type="update">
	/*+ com.hwfs.rc.sle.dao.posfnctScrnDAO.updateData */
		<![CDATA[
		UPDATE SLE_POS_FNCT_PIC SET
			<#if fnctId?exists> 		 FNCT_ID 			= :fnctId, 			</#if>
			<#if auth?exists> 			 AUTH 				= :auth, 			</#if>
			<#if picDsplNm1?exists> 	 PIC_DSPL_NM1 		= :picDsplNm1, 		</#if>
			<#if picDsplNm2?exists> 	 PIC_DSPL_NM2 		= :picDsplNm2, 		</#if>
			<#if picDsplNm3?exists> 	 PIC_DSPL_NM3 		= :picDsplNm3, 		</#if>
			<#if alterFnctId?exists> 	 ALTER_FNCT_ID 		= :alterFnctId, 	</#if>
			<#if alterPicDsplNm1?exists> ALTER_PIC_DSPL_NM1 = :alterPicDsplNm1, </#if>
			<#if alterPicDsplNm2?exists> ALTER_PIC_DSPL_NM2 = :alterPicDsplNm2, </#if>
			<#if alterPicDsplNm3?exists> ALTER_PIC_DSPL_NM3 = :alterPicDsplNm3, </#if>
			<#if authClass?exists> 		 AUTH_CLASS			= :authClass, 		</#if>
			<#if useYn?exists> 			 USE_YN 			= DECODE(:useYn, '1', 'Y', 'N'), </#if>
									     UUSER 				= :loginSabun,
									     UDATE 				= SYSDATE
			WHERE  BC_CD 		  = :bcCd
			AND    OUTLET_TYPE_CD = :outletTypeCd
			AND    PIC_ID 		  = :picId
			AND    CLASS 		  = :classCd
			AND    PIC_PLACE 	  = :picPlace
					 

		]]>
	</statement>
	
	
	 
</hqml>	