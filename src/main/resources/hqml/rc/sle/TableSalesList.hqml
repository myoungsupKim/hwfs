<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="rc.sle.tableSalesListDAO">
	<desc>좌석별 매출현황</desc>

	<!--  DATA를 조회한다. -->
	<statement name="selectListTableGrp" type="select">
	/*+ com.hwfs.rc.sle.dao.tableSalesListDAO.selectListTableGrp */
	<![CDATA[	
	
 		SELECT TABLE_GRP, TABLE_GRP_NM FROM SLE_FNB_TABLE_GRP 
	 	WHERE USE_YN = 'Y'
				<#if outletCd?has_content>  AND   OUTLET_CD  = :outletCd  </#if>
	 	ORDER BY TABLE_GRP, TABLE_GRP_NM
	]]>
	
	<!-- 	 -->
	</statement>

	<statement name="selectList" type="select"><![CDATA[
			 
			        --매출해더 매수,총인원,한국인,외국인
			        SELECT INFO.OUTLET_CD, OUTLET.OUTLET_NM,
						   TBL.TABLE_GRP, TBL.TABLE_GRP_NM,
						   TBL.TABLE_GRP || ':' || TBL.TABLE_GRP_NM AS TABLE_GRP_ALL,
						   MST.TABLE_CD, MST.TABLE_NM,
						   MST.TABLE_CD  || ':' || MST.TABLE_NM     AS TABLE_NM_ALL,
                           INFO.RECEIPT_CNT, INFO.TOT_PSN,
                           --매출
                           GOODS.FOOD_AMT, GOODS.BEVG_AMT,
                           GOODS.OTHE_AMT, GOODS.GOOD_AMT,
                           GOODS.NTOT_AMT,

                           --객단가
                           NVL(ROUND(GOODS.FOOD_AMT / DECODE(TOT_PSN,0,NULL,TOT_PSN) ),0) AS FOOD_PSN,
                           NVL(ROUND(GOODS.BEVG_AMT / DECODE(TOT_PSN,0,NULL,TOT_PSN) ),0) AS BEVG_PSN,
                           NVL(ROUND(GOODS.OTHE_AMT / DECODE(TOT_PSN,0,NULL,TOT_PSN) ),0) AS OTHE_PSN,
                           NVL(ROUND(GOODS.GOOD_AMT / DECODE(TOT_PSN,0,NULL,TOT_PSN) ),0) AS GOOD_PSN,
                           NVL(ROUND(GOODS.NTOT_AMT / DECODE(TOT_PSN,0,NULL,TOT_PSN) ),0) AS NTOT_PSN,

                           --영수증단가
                           NVL(ROUND(GOODS.FOOD_AMT / DECODE(RECEIPT_CNT,0,NULL,RECEIPT_CNT) ),0) AS FOOD_BILL,
                           NVL(ROUND(GOODS.BEVG_AMT / DECODE(RECEIPT_CNT,0,NULL,RECEIPT_CNT) ),0) AS BEVG_BILL,
                           NVL(ROUND(GOODS.OTHE_AMT / DECODE(RECEIPT_CNT,0,NULL,RECEIPT_CNT) ),0) AS OTHE_BILL,
                           NVL(ROUND(GOODS.GOOD_AMT / DECODE(RECEIPT_CNT,0,NULL,RECEIPT_CNT) ),0) AS GOOD_BILL,
                           NVL(ROUND(GOODS.NTOT_AMT / DECODE(RECEIPT_CNT,0,NULL,RECEIPT_CNT) ),0) AS NTOT_BILL

			        FROM (
                    	SELECT MST.OUTLET_CD, NVL(MST.TABLE_CD,'00') AS TABLE_CD,
			               			   COUNT(MST.RECEIPT_NUM)  AS RECEIPT_CNT,
                                                  SUM(MST.PSN) AS TOT_PSN
                                 FROM SLE_SALS_INFO MST
                                 INNER JOIN (SELECT MST.OUTLET_CD
                                               FROM   SLE_OUTLET_MST      MST
                                               INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD)
                                                        <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
                                                        <#if tmCd?has_content> AND UPJANG.TM_CD = :tmCd </#if>
                                                <#if outletCd?has_content > WHERE MST.OUTLET_CD   = :outletCd </#if>
                                             ) OUTLET ON OUTLET.OUTLET_CD =  MST.OUTLET_CD
                                
                                LEFT OUTER JOIN (
								      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
								      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
								      <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
								      ORDER BY  OUTLET_CD, POS_NUM
								) POS ON POS.OUTLET_CD = MST.OUTLET_CD AND POS.POS_NUM = MST.POS_NUM
                                  
                                  WHERE 1=1
                                    <#if internalYn == 'Y' > AND MST.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
   				      			    <#if internalYn == 'N' > AND MST.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
			          				AND MST.MODIFY_STATUS IN ('0','1') --매출조정 0:정상 , 1:조정
                                    AND MST.SALS_CLASS = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
                                   
                                    AND MST.SALES_DATE     BETWEEN :searchDateFr AND :searchDateTo
                                    <#if outletCd?has_content>  AND   MST.OUTLET_CD  = :outletCd  </#if>
                                    <#if outletSub?has_content> AND MST.POS_NUM  = POS.POS_NUM  </#if>
                                  GROUP BY  MST.OUTLET_CD, MST.TABLE_CD
                    
                    ) INFO 
                    
                    
			        LEFT OUTER JOIN  SLE_FNB_TABLE_CD  MST ON INFO.OUTLET_CD = MST.OUTLET_CD
                    									  AND INFO.TABLE_CD  = MST.TABLE_CD

                    LEFT OUTER JOIN SLE_FNB_TABLE_GRP TBL ON TBL.OUTLET_CD = MST.OUTLET_CD
                                                         AND TBL.TABLE_GRP = MST.TABLE_GRP
                  
                    INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
		                           FROM   SLE_OUTLET_MST      MST
		                           INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD)
                                              <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
                                              <#if tmCd?has_content> AND UPJANG.TM_CD = :tmCd </#if>
		                           <#if outletCd?has_content > WHERE MST.OUTLET_CD   = :outletCd </#if>
		              			 ) OUTLET ON OUTLET.OUTLET_CD =  INFO.OUTLET_CD

                    INNER JOIN (SELECT OUTLET_CD, TABLE_CD,
                                	   SUM(FOOD_AMT) AS FOOD_AMT,    SUM(BEVG_AMT) AS BEVG_AMT,
                                       SUM(OTHE_AMT) AS OTHE_AMT,    SUM(GOOD_AMT) AS GOOD_AMT,
                                       SUM(NTOT_AMT) AS NTOT_AMT
                                FROM (
                                      SELECT MST.OUTLET_CD,  INFO.TABLE_CD , MENU_CLASS,
                                             DECODE(MST.MENU_CLASS,'F',SUM(MST.NET_AMT),0) AS FOOD_AMT,
                                             DECODE(MST.MENU_CLASS,'B',SUM(MST.NET_AMT),0) AS BEVG_AMT,
                                             DECODE(MST.MENU_CLASS,'O',SUM(MST.NET_AMT),0) AS OTHE_AMT,
                                             DECODE(MST.MENU_CLASS,'P',SUM(MST.NET_AMT),0) AS GOOD_AMT,
                                                                       SUM(MST.NET_AMT)    AS NTOT_AMT

                                      FROM SLE_SALS_GOODS  MST
                                      
                                      INNER JOIN (
													SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM ,NVL(INFO.TABLE_CD,'00') AS TABLE_CD
													FROM SLE_SALS_INFO INFO
													LEFT OUTER JOIN (
													      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
													      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
													      <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
													      ORDER BY  OUTLET_CD, POS_NUM
													) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
													WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
													  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
													  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
   				      			    				  <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
			          								  AND INFO.SALES_DATE BETWEEN :searchDateFr AND :searchDateTo
													  <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
													  <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
													
							    				)  INFO ON INFO.OUTLET_CD = MST.OUTLET_CD 
							    				       AND INFO.SALES_DATE = MST.SALES_DATE
							    				       AND INFO.RECEIPT_NUM = MST.RECEIPT_NUM	                         
                                                                   
                                                                   
                                      INNER JOIN (SELECT MST.OUTLET_CD
                                                     FROM   SLE_OUTLET_MST      MST
                                                     INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD)
                                                              <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
                                                              <#if tmCd?has_content> AND UPJANG.TM_CD = :tmCd </#if>
                                                      <#if outletCd?has_content > WHERE MST.OUTLET_CD   = :outletCd </#if>
                                                   ) OUTLET ON OUTLET.OUTLET_CD =  MST.OUTLET_CD
                                                   
                                      WHERE 1=1
                                    	<#if internalYn == 'Y' > AND MST.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
   				      			    	<#if internalYn == 'N' > AND MST.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)			          				
                                        AND MST.MODIFY_STATUS IN ('0','1') --매출조정 0:정상 , 1:조정
                                        AND MST.SALS_CLASS = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
                                        AND MST.DATA_CLASS     = '1'  -- 1:메뉴 3:주문사항 
                                        AND MST.SALES_DATE     BETWEEN :searchDateFr AND :searchDateTo
	                                    --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
										AND MST.SELL_YN  = DECODE(MST.RECEIPT_STATUS ,'E','N','Y')				--매출 여부
										--종료
                                        <#if outletCd?has_content>  AND   MST.OUTLET_CD  = :outletCd  </#if>
                                      GROUP BY  MST.OUTLET_CD, INFO.TABLE_CD, MST.MENU_CLASS
                    			) DUAL
                                GROUP BY OUTLET_CD,  TABLE_CD 

                              ) GOODS ON  GOODS.OUTLET_CD  = INFO.OUTLET_CD
                                     AND  GOODS.TABLE_CD   = INFO.TABLE_CD
			        WHERE 1=1			        
					<#if outletCd?has_content>  AND   INFO.OUTLET_CD  = :outletCd  </#if>
					<#if tableGrp?has_content>  AND   TBL.TABLE_GRP  = :tableGrp  </#if>
			        ORDER BY  MST.OUTLET_CD




			 
		]]></statement>

</hqml>
