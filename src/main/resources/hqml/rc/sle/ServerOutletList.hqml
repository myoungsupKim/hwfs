<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="rc.sle.serverOutletListDAO">
	<desc>업장 서버별 매출 현황</desc>



	<!--  DATA를 조회한다. -->
	<statement name="selectList" type="select"><![CDATA[

            SELECT A.OUTLET_CD , D.OUTLET_NM
            	 , SVR_ID
                 , E.USER_NM AS SVR_NM
			     , KOR_QTY
			     , FRGN_QTY
			     , CUST_QTY
			     , RCPT_CUNT
                 
			     , FOOD_AMT  AS FOOD_AMT_1
			     , BEVR_AMT  AS BEVG_AMT_1
			     , OTHER_AMT AS ETC_AMT_1
			     , GODS_AMT  AS GODS_AMT_1
			     , ETEC_AMT  AS ETEC_AMT_1
			     , (FOOD_AMT + BEVR_AMT + OTHER_AMT + GODS_AMT + ETEC_AMT) AS SUM_AMT_1
                   
			     , ROUND((FOOD_AMT  / DECODE(CUST_QTY,0,NULL,CUST_QTY)) ,0) AS FOOD_AMT_2
                 , ROUND((BEVR_AMT  / DECODE(CUST_QTY,0,NULL,CUST_QTY)) ,0) AS BEVG_AMT_2
                 , ROUND((OTHER_AMT / DECODE(CUST_QTY,0,NULL,CUST_QTY)) ,0) AS ETC_AMT_2
                 , ROUND((GODS_AMT  / DECODE(CUST_QTY,0,NULL,CUST_QTY)) ,0) AS GODS_AMT_2
                 , ROUND((ETEC_AMT  / DECODE(CUST_QTY,0,NULL,CUST_QTY)) ,0) AS ETEC_AMT_2
                 , ROUND(((FOOD_AMT + BEVR_AMT + OTHER_AMT + GODS_AMT + ETEC_AMT) / DECODE(CUST_QTY,0,NULL,CUST_QTY)),0) AS SUM_AMT_2
                 
			FROM (            
                SELECT INFO.OUTLET_CD
                     , INFO.CLOSE_ID AS SVR_ID
                     , NVL(SUM(INFO.KOR_QTY),0)  AS KOR_QTY
                     , NVL(SUM(INFO.FRGN_QTY),0) AS FRGN_QTY
                     , NVL(SUM(INFO.CUST_QTY),0) AS CUST_QTY 
                     , NVL(COUNT(INFO.RECEIPT_NUM),0) AS RCPT_CUNT
                     , NVL(SUM(FOOD_AMT),0) AS FOOD_AMT
                     , NVL(SUM(BEVR_AMT),0) AS BEVR_AMT
                     , NVL(SUM(OTHER_AMT),0) AS OTHER_AMT
                     , NVL(SUM(GODS_AMT),0) AS GODS_AMT
                     , NVL(SUM(ETEC_AMT),0) AS ETEC_AMT
                FROM (
                        SELECT SALES_DATE, OUTLET_CD, RECEIPT_NUM  
                                , SUM(FOOD_AMT)  AS FOOD_AMT
                                , SUM(BEVR_AMT)  AS BEVR_AMT
                                , SUM(OTHER_AMT) AS OTHER_AMT
                                , SUM(GODS_AMT)  AS GODS_AMT
                                , SUM(ETEC_AMT)  AS ETEC_AMT
                        FROM(
                          SELECT  MST.SALES_DATE, MST.OUTLET_CD, MST.RECEIPT_NUM  
                                , DECODE(MST.MENU_CLASS,'F', SUM(MST.NET_AMT) , 0) AS FOOD_AMT
                                , DECODE(MST.MENU_CLASS,'B', SUM(MST.NET_AMT) , 0) AS BEVR_AMT
                                , DECODE(MST.MENU_CLASS,'O', SUM(MST.NET_AMT) , 0) AS OTHER_AMT
                                , DECODE(MST.MENU_CLASS,'S', SUM(MST.NET_AMT) , 0) AS GODS_AMT
                                , DECODE(MST.MENU_CLASS,'F',0,DECODE(MST.MENU_CLASS,'B',0,DECODE(MST.MENU_CLASS,'O',0,DECODE(MST.MENU_CLASS,'S',0,SUM(MST.NET_AMT) )))) AS ETEC_AMT
                          FROM SLE_SALS_GOODS MST
                          INNER JOIN (SELECT MST.OUTLET_CD
			                           FROM   SLE_OUTLET_MST      MST
			                           INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
			                                         					<#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
			                                         					<#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
			                           <#if outletCd?has_content > WHERE MST.OUTLET_CD   = :outletCd </#if>
			              			 ) OUTLET ON OUTLET.OUTLET_CD =  MST.OUTLET_CD
                          INNER JOIN (
									SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM ,NVL(INFO.TABLE_CD,'00') AS TABLE_CD
									FROM SLE_SALS_INFO INFO
									LEFT OUTER JOIN (
									      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
									      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
									      <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
									      ORDER BY  OUTLET_CD, POS_NUM
									) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
									WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
									  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
									  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
                      				  <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)MST.RECEIPT_STATUS IN('Q','R')   --영수증 상태 Q:정상 R:반품(-)
									  AND INFO.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt
									  <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
									  <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
									
			    				)  INFO ON INFO.OUTLET_CD = MST.OUTLET_CD 
			    				       AND INFO.SALES_DATE = MST.SALES_DATE
			    				       AND INFO.RECEIPT_NUM = MST.RECEIPT_NUM	  
			    				       
                          WHERE 1=1
                            --MST.SALS_YN        = 'Y'	--판매여부                            	                                     
        			        --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
				         	AND MST.SELL_YN  = DECODE(MST.RECEIPT_STATUS ,'E','N','Y')				--매출 여부
  					 		--종료			                       
                            AND MST.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
                            AND MST.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                            <#if internalYn == 'Y' > AND MST.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
                      		<#if internalYn == 'N' > AND MST.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)MST.RECEIPT_STATUS IN('Q','R')   --영수증 상태 Q:정상 R:반품(-)
							AND MST.DATA_CLASS = '1'
                            AND MST.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt
                           <#if outletCd?has_content> AND MST.OUTLET_CD = :outletCd </#if>
                         GROUP BY MST.SALES_DATE, MST.OUTLET_CD, MST.RECEIPT_NUM, MST.MENU_CLASS
                         
                        ) A 
                        GROUP BY SALES_DATE, OUTLET_CD, RECEIPT_NUM
                ) ITEM
                INNER JOIN (  
                        SELECT  SALES_DATE, INFO.OUTLET_CD, RECEIPT_NUM  
                              , CLOSE_ID
                              , SUM(KOR_PSN) AS KOR_QTY
                              , SUM(FOR_PSN) AS FRGN_QTY
                              , SUM(PSN) AS CUST_QTY
			                 
                        FROM  SLE_SALS_INFO INFO 
                        INNER JOIN (SELECT MST.OUTLET_CD
			                           FROM   SLE_OUTLET_MST      MST
			                           INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
			                                         					<#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
			                                         					<#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
			                           <#if outletCd?has_content > WHERE MST.OUTLET_CD   = :outletCd </#if>
			              			 ) OUTLET ON OUTLET.OUTLET_CD =  INFO.OUTLET_CD
                          
                         WHERE SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
                           AND MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                           <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
                      	   <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
                      	   AND SALES_DATE BETWEEN :frSalesDt AND :toSalesDt
                           <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
                           
                         GROUP BY SALES_DATE, INFO.OUTLET_CD, RECEIPT_NUM, CLOSE_ID
			                        
                        ) INFO ON INFO.SALES_DATE = ITEM.SALES_DATE 
                              AND INFO.OUTLET_CD = ITEM.OUTLET_CD 
                              AND INFO.RECEIPT_NUM = ITEM.RECEIPT_NUM
                 GROUP BY    INFO.OUTLET_CD, INFO.CLOSE_ID
			) A
			       
			LEFT OUTER JOIN (
            			SELECT USER_CD , USER_NM 
                          FROM SLE_USER_MST
                        ) E ON E.USER_CD = A.SVR_ID
            INNER JOIN (
            			SELECT OUTLET_CD, OUTLET_NM 
                          FROM SLE_OUTLET_MST
                       ) D  ON D.OUTLET_CD = A.OUTLET_CD
			ORDER BY OUTLET_CD,	SVR_ID		
	
	
	]]></statement>

</hqml>