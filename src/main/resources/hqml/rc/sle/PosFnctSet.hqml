<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="rc.sle.posfnctSetDAO">
	<desc>포스 기능 설정 관리</desc>

	<!--  DATA를 조회한다. -->
	<statement name="selectList" type="select">
	/*+ com.hwfs.rc.sle.dao.posfnctSetDAO.selectList */
	<![CDATA[
 
		SELECT MST.BC_CD,     'ALL'   AS BC_NM,
		       MST.OUTLET_CD, SHOP.OUTLET_NM AS OUTLET_NM,
		       MST.POS_NUM,   DUAL.POS_NUM_NM,
		       MST.FNCT_CLASS,    TT.CODE_NAME AS    FNCT_CLASS_NM,
		       MST.FNCT_CD,       NVL(SS.CODE_NAME,(SELECT CODE_NAME FROM SCC_COMMON_CODE  WHERE GROUP_CODE = 'SLE_0012' AND CODE = '00')) AS    FNCT_CD_NM,
		       MST.FNCT_EXPL,
		       MST.SET1,
		       MST.SET2,
		       MST.SET3,
		       MST.SET4,
		       MST.SET5,
		       MST.SET6,
		       MST.SET7,
		       MST.SET8,
		       MST.SET9,
		       MST.SET10,
		       DECODE(MST.USE_YN, 'Y', 1, 0) AS USE_YN,
		       MST.CUSER,
		       MST.CDATE,
		       MST.UUSER,
		       MST.UDATE
		FROM   SLE_POS_FNCT_SET 	MST
		
		INNER  JOIN SCC_COMMON_CODE TT ON TT.GROUP_CODE = 'SLE_0022' AND TT.CODE = MST.FNCT_CLASS
		LEFT OUTER  JOIN  SCC_COMMON_CODE SS ON SS.GROUP_CODE = TT.SET1 AND SS.CODE = MST.FNCT_CD
		INNER  JOIN SLE_OUTLET_MST  SHOP   ON SHOP.OUTLET_CD = MST.OUTLET_CD  -- 업장 코드
		INNER  JOIN (
                        SELECT OUTLET_CD, POS_NUM, POS_NUM_NM
                        FROM (
                            SELECT OUTLET_CD, '00' AS POS_NUM , 
                                  (SELECT CODE_NAME FROM SCC_COMMON_CODE  WHERE GROUP_CODE = 'SLE_0012' AND CODE = '00') AS POS_NUM_NM 
                            FROM SLE_OUTLET_MST
                            UNION ALL
                            SELECT OUTLET_CD, POS_NUM, POS_NUM_NM
                            FROM ( SELECT OUTLET_CD, POS_NUM, POS_NUM AS POS_NUM_NM
                                    FROM  SLE_POS_SET WHERE USE_YN = 'Y'
                                    GROUP BY  OUTLET_CD, POS_NUM ORDER BY OUTLET_CD, POS_NUM
                             )
                        ) DUAL 
        			) DUAL    ON DUAL.OUTLET_CD = MST.OUTLET_CD AND DUAL.POS_NUM = MST.POS_NUM 
		
		WHERE   1=1

		
		<#if outletCd?has_content>  AND    MST.OUTLET_CD  = DECODE(:outletCd,'00',MST.OUTLET_CD,:outletCd)	  </#if> 
		<#if posNum?has_content> 	AND    MST.POS_NUM    = DECODE(:posNum,'00',MST.POS_NUM,:posNum)	      </#if> 
		<#if fnctClass?has_content> AND    MST.FNCT_CLASS = :fnctClass	  </#if>
		<#if fnctCd?has_content> 	AND    MST.FNCT_CD    = :fnctCd	      </#if>
		<#if useYn?has_content>     AND   MST.USE_YN  	  = DECODE(:useYn, '1', 'Y', MST.USE_YN)  </#if> 
	 	
	 	ORDER BY  MST.OUTLET_CD,   MST.POS_NUM,    MST.FNCT_CLASS,  MST.FNCT_CD
	 	  
	]]>
	</statement>
	
 
	
		
	<!--  DATA를 저장한다. -->
	<statement name="insertData" type="insert">
	/*+ com.hwfs.rc.sle.dao.posfnctSetDAO.insertData */
		<![CDATA[
	 	INSERT INTO SLE_POS_FNCT_SET
			(
					 BC_CD,
					 OUTLET_CD,
					 POS_NUM,
					 FNCT_CLASS,
					 FNCT_CD,
					 FNCT_EXPL,
					 SET1,
					 SET2,
					 SET3,
					 SET4,
					 SET5,
					 SET6,
					 SET7,
					 SET8,
					 SET9,
					 SET10,
					 USE_YN,
					 CUSER,
					 CDATE,
					 UUSER,
					 UDATE
			) VALUES (
					 :bcCd,
					 :outletCd,
					 :posNum,
					 :fnctClass,
					 :fnctCd,
					<#if fnctExpl?exists> :fnctExpl, <#else> null, </#if>
					<#if set1?exists> :set1, <#else> null, </#if>
					<#if set2?exists> :set2, <#else> null, </#if>
					<#if set3?exists> :set3, <#else> null, </#if>
					<#if set4?exists> :set4, <#else> null, </#if>
					<#if set5?exists> :set5, <#else> null, </#if>
					<#if set6?exists> :set6, <#else> null, </#if>
					<#if set7?exists> :set7, <#else> null, </#if>
					<#if set8?exists> :set8, <#else> null, </#if>
					<#if set9?exists> :set9, <#else> null, </#if>
					<#if set10?exists> :set10, <#else> null, </#if>
					<#if useYn?exists> DECODE(:useYn, '1', 'Y', 'N'), <#else> null, </#if>
					 :loginSabun,
					 SYSDATE,
					 :loginSabun,
					 SYSDATE
			)



		]]>
	</statement>
	
	<!--  DATA를 수정한다. -->
	<statement name="updateData" type="update">
	/*+ com.hwfs.rc.sle.dao.posfnctSetDAO.updateData */
		<![CDATA[
		UPDATE SLE_POS_FNCT_SET SET
			<#if fnctExpl?exists> FNCT_EXPL = :fnctExpl, </#if>
			<#if set1?exists>  SET1 = :set1, </#if>
			<#if set2?exists>  SET2 = :set2, </#if>
			<#if set3?exists>  SET3 = :set3, </#if>
			<#if set4?exists>  SET4 = :set4, </#if>
			<#if set5?exists>  SET5 = :set5, </#if>
			<#if set6?exists>  SET6 = :set6, </#if>
			<#if set7?exists>  SET7 = :set7, </#if>
			<#if set8?exists>  SET8 = :set8, </#if>
			<#if set9?exists>  SET9 = :set9, </#if>
			<#if set10?exists> SET10 = :set10, </#if>
			<#if useYn?exists> USE_YN = DECODE(:useYn, '1', 'Y', 'N'), </#if>
			       UUSER = :loginSabun,
			       UDATE = SYSDATE
		WHERE  BC_CD      = :bcCd
		AND    OUTLET_CD  = :outletCd
		AND    POS_NUM    = :posNum
		AND    FNCT_CLASS = :fnctClass
		AND    FNCT_CD    = :fnctCd
					 

		]]>
	</statement>
	
	
	 
</hqml>	