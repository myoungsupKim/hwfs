<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="rc.bms.eventEndMgmtDAO">
	<desc>종료보고서</desc>
	
		
	<!-- DATA를 조회한다. -->
	<statement name="selectList" type="select">
		<![CDATA[
		  SELECT 
				RESERV_NUM,
		        KIND_CD,
		        OUTLET_CD,
		        OUTLET_NM,
		        ACCEPT_DATE,
		        RESERV_STATUS,
		        RESERV_STATUS_NM,
		        RESERV_CD,
		        RESERV_NM,
		        RSVN_NM,
		        STR_DATE,
		        END_DATE,
		        	TO_CHAR(TO_DATE(STR_DATE,'YYYY-MM-DD'),'YYYY-MM-DD') || '~' || 
		       		TO_CHAR(TO_DATE(END_DATE,'YYYY-MM-DD'),'YYYY-MM-DD') AS RESERV_DATE,
		        TIME_CD,
		        STR_TIME,
		        END_TIME,
		        BEGIN_DATE,
		        PSN,
		        AM_CD,
		        PRCG_NM,
		        CUST_CD,
		        PRCG_DEPT,
		        JOB_POSITION,
		        CUST_CLASS,
		       
		        --핸드폰번호 - 넣기
		        CASE  LENGTH(LTRIM(RTRIM(HAND_PHONE))) 
		        WHEN  9 THEN SUBSTR(HAND_PHONE,1,2) || '-' || SUBSTR(HAND_PHONE,3,3) || '-' || SUBSTR(HAND_PHONE,6,4)
		        WHEN 10 THEN SUBSTR(HAND_PHONE,1,2) || '-' || SUBSTR(HAND_PHONE,3,4) || '-' || SUBSTR(HAND_PHONE,7,4)
		        WHEN 11 THEN SUBSTR(HAND_PHONE,1,3) || '-' || SUBSTR(HAND_PHONE,4,4) || '-' || SUBSTR(HAND_PHONE,8,4)
		        ELSE '' END    AS HAND_PHONE,  
										 
		        SCC_TELNO_SPLIT_FUN(HAND_PHONE,1)     AS HAND_PHONE1,
		        SCC_TELNO_SPLIT_FUN(HAND_PHONE,2)     AS HAND_PHONE2,
		        SCC_TELNO_SPLIT_FUN(HAND_PHONE,3)     AS HAND_PHONE3,
							
		        --전화번호 - 넣기		   
		        CASE  LENGTH(LTRIM(RTRIM(TEL_NUM))) 
		        WHEN  9 THEN SUBSTR(TEL_NUM,1,2) || '-' || SUBSTR(TEL_NUM,3,3) || '-' || SUBSTR(TEL_NUM,6,4)
		        WHEN 10 THEN SUBSTR(TEL_NUM,1,2) || '-' || SUBSTR(TEL_NUM,3,4) || '-' || SUBSTR(TEL_NUM,7,4)
		        WHEN 11 THEN SUBSTR(TEL_NUM,1,3) || '-' || SUBSTR(TEL_NUM,4,4) || '-' || SUBSTR(TEL_NUM,8,4)
		        ELSE '' END    AS TEL_NUM,  
										 
		        SCC_TELNO_SPLIT_FUN(TEL_NUM,1)     AS TEL_NUM1,
		        SCC_TELNO_SPLIT_FUN(TEL_NUM,2)     AS TEL_NUM2,
		        SCC_TELNO_SPLIT_FUN(TEL_NUM,3)     AS TEL_NUM3,
							
		        --전화번호 - 넣기		   
		        CASE  LENGTH(LTRIM(RTRIM(FAX_NUM))) 
		        WHEN  9 THEN SUBSTR(FAX_NUM,1,2) || '-' || SUBSTR(FAX_NUM,3,3) || '-' || SUBSTR(FAX_NUM,6,4)
		        WHEN 10 THEN SUBSTR(FAX_NUM,1,2) || '-' || SUBSTR(FAX_NUM,3,4) || '-' || SUBSTR(FAX_NUM,7,4)
		        WHEN 11 THEN SUBSTR(FAX_NUM,1,3) || '-' || SUBSTR(FAX_NUM,4,4) || '-' || SUBSTR(FAX_NUM,8,4)
		        ELSE '' END    AS FAX_NUM,  
										 
		        SCC_TELNO_SPLIT_FUN(FAX_NUM,1)     AS FAX_NUM1,
		        SCC_TELNO_SPLIT_FUN(FAX_NUM,2)     AS FAX_NUM2,
		        SCC_TELNO_SPLIT_FUN(FAX_NUM,3)     AS FAX_NUM3,
		        
		        EMAIL_ADDR,
		        EMAIL_YN,
		        SMS_YN,
		        DM_YN,
		        DID_YN,
		        VIP_YN,
		        
		        ADDR_KEY,
		        ADDR_INFO,
		        
		        REMARK_FACT,
		        REMARK_FNB,
		        REMARK_ROOM,
		        REMARK_ETC,
		        REMARK_OUTSIDE,
		       
		        PRVS_RESERV_STATUS,
		        OUTLET_PATRON_TYPE,
		        OUTLET_CONFIRM_TIME,
		        OUTLET_CONFIRMOR,
		        SET_QTY,
		        FISCAL_CUST,
		        CANCEL_DATE,
		        CANCEL_REASON,
		        DID1,
		        DID2,
		        DID3,
		        MAX_PSN,
		        PATRON_NUM,
		        USE_YN,
		        CDATE,
		        CUSER,
		        UDATE,
		        UUSER,
		        CUST_NM,
		        SAP_CUST_CD,
		        RESERV_CD_NM,	 --행사상태명
		        KIND_CD_NM,		 --행사종류명
		        AM_NM,           --담당자명 
		        PRCG_DEPT_NM,	 --부서명
		        JOB_POSITION_NM, --직위명
		        CUST_CLASS_NM,	 -- 고객구분
		        PAY_AMT
		        
		        
		FROM ( SELECT  MAST.RESERV_NUM,
				       MAST.KIND_CD,
				       MAST.OUTLET_CD,
				       
				       MAST.ACCEPT_DATE,
				       MAST.RESERV_STATUS,
				       MAST.RESERV_CD,
				       MAST.RESERV_NM,
				       SCC_CRYPTO.MASKAUTH_FUN(MAST.RSVN_NM,12,:loginPersMask,:maskAuth) AS RSVN_NM,
				       MAST.STR_DATE,
				       MAST.END_DATE,
				       MAST.TIME_CD,
				       MAST.STR_TIME,
				       MAST.END_TIME,
				       MAST.BEGIN_DATE,
				       MAST.PSN,
				       MAST.AM_CD,
				       MAST.PRCG_NM,
				       MAST.CUST_CD,
				       MAST.PRCG_DEPT,
				       MAST.JOB_POSITION,
				       MAST.CUST_CLASS,
				       
				       SCC_CRYPTO.MASKAUTH_FUN(MAST.TEL_NUM,9,:loginPersMask,:maskAuth)    AS TEL_NUM,
				       SCC_CRYPTO.MASKAUTH_FUN(MAST.HAND_PHONE,8,:loginPersMask,:maskAuth) AS HAND_PHONE,
				       SCC_CRYPTO.MASKAUTH_FUN(MAST.FAX_NUM,8,:loginPersMask,:maskAuth)    AS FAX_NUM,
				       SCC_CRYPTO.MASKAUTH_FUN(MAST.EMAIL_ADDR,7,:loginPersMask,:maskAuth) AS EMAIL_ADDR,
				       
				       DECODE(MAST.EMAIL_YN, 'Y', 1, 0) AS EMAIL_YN,
				       DECODE(MAST.SMS_YN, 'Y', 1, 0) AS SMS_YN,
				       DECODE(MAST.DM_YN, 'Y', 1, 0) AS DM_YN,
				       DECODE(MAST.DID_YN, 'Y', 1, 0) AS DID_YN,
				       DECODE(MAST.VIP_YN, 'Y', 1, 0) AS VIP_YN,
				       
				       MAST.ADDR_KEY,
				       SCC_ADDR_FUN(MAST.ADDR_KEY, :loginPersMask, :maskAuth) AS ADDR_INFO,
				       
				       MAST.REMARK_FACT,
				       MAST.REMARK_FNB,
				       MAST.REMARK_ROOM,
				       MAST.REMARK_ETC,
				       MAST.REMARK_OUTSIDE,
				       
				       MAST.PRVS_RESERV_STATUS,
				       MAST.OUTLET_PATRON_TYPE,
				       MAST.OUTLET_CONFIRM_TIME,
				       MAST.OUTLET_CONFIRMOR,
				       MAST.SET_QTY,
				       MAST.FISCAL_CUST,
				       MAST.CANCEL_DATE,
				       MAST.CANCEL_REASON,
				       MAST.DID1,
				       MAST.DID2,
				       MAST.DID3,
				       MAST.MAX_PSN,
				       MAST.PATRON_NUM,
				       DECODE(MAST.USE_YN, 'Y', 1, 0) AS USE_YN,
				       MAST.CDATE,
				       MAST.CUSER,
				       MAST.UDATE,
				       MAST.UUSER
				      
				      ,(SELECT A.CUSTNM      FROM ST_CUST A WHERE A.CUSTGUBUN IN ('002', '003') AND A.CUSTCD = MAST.CUST_CD) AS CUST_NM		--SAP고객명
					  ,(SELECT A.SAP_CUST_CD FROM ST_CUST A WHERE A.CUSTGUBUN IN ('002', '003') AND A.CUSTCD = MAST.CUST_CD) AS SAP_CUST_CD --SAP코드
					  
				      ,OUTLET.OUTLET_NM AS OUTLET_NM        --영업장명 
				      ,SANG.CODE_NAME AS RESERV_STATUS_NM	--행사상태
				      ,CODE.CODE_NAME AS RESERV_CD_NM	    --행사형태명
				      ,KIND.CODE_NAME AS KIND_CD_NM		    --행사종류명
				      ,SCC_CRYPTO.MASKAUTH_FUN(SMGR.AM_NM,12,:loginPersMask,:maskAuth) AS AM_NM           --담당자명 
				      ,DEPT.CODE_NAME AS PRCG_DEPT_NM	    --부서명
				      ,DJOB.CODE_NAME AS JOB_POSITION_NM    --직위명
				      ,CLAS.CODE_NAME AS CUST_CLASS_NM	    --고객구분
				      
				      --,(SELECT SUM(PAY_AMT) AS AMT FROM  BMS_PAY_MST  PAY WHERE SALS_CLASS = '1' AND PAY.RECEIPT_NUM = MAST.RESERV_NUM) AS PAY_AMT --행사금액
				      ,(SELECT SUM(MENU.TOT_AMT) FROM   BMS_RESERV_MENU MENU  WHERE  MENU.RESERV_NUM = MAST.RESERV_NUM AND MENU.USE_YN = 'Y') AS PAY_AMT --행사금액
				       
				FROM   BMS_RESERV_MST MAST
					 INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
			                       FROM   SLE_OUTLET_MST MST
			                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
			                                     <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
			                                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
			          			 ) OUTLET ON OUTLET.OUTLET_CD =  MAST.OUTLET_CD 
				     INNER JOIN BMS_AM_MST      SMGR ON SMGR.AM_CD = MAST.AM_CD
				     INNER JOIN SCC_COMMON_CODE CODE ON CODE.GROUP_CODE = 'BMS_0005' AND CODE.CODE = MAST.RESERV_CD	    --행사형태
				     INNER JOIN SCC_COMMON_CODE SANG ON SANG.GROUP_CODE = 'BMS_0001' AND SANG.CODE = MAST.RESERV_STATUS	--예약상태
				     INNER JOIN SCC_COMMON_CODE KIND ON KIND.GROUP_CODE = 'BMS_0002' AND KIND.CODE = MAST.KIND_CD       --예약종류
				LEFT OUTER JOIN SCC_COMMON_CODE DEPT ON DEPT.GROUP_CODE = 'BMS_0009' AND DEPT.CODE = MAST.PRCG_DEPT		--부서
				LEFT OUTER JOIN SCC_COMMON_CODE DJOB ON DJOB.GROUP_CODE = 'BMS_0010' AND DJOB.CODE = MAST.JOB_POSITION	--직위
				LEFT OUTER JOIN SCC_COMMON_CODE CLAS ON CLAS.GROUP_CODE = 'BMS_0006' AND CLAS.CODE = MAST.CUST_CLASS	--거래처
				
				WHERE MAST.USE_YN = 'Y'
				<#if reservDtFr?has_content >   
						AND (   ( MAST.STR_DATE BETWEEN :reservDtFr   AND :reservDtTo    OR  MAST.END_DATE BETWEEN :reservDtFr   AND :reservDtTo )
					         OR ( :reservDtFr   BETWEEN MAST.STR_DATE AND MAST.END_DATE  OR :reservDtTo    BETWEEN MAST.STR_DATE AND MAST.END_DATE ))
					              
				</#if>
				
				<#if amCd?has_content >         AND MAST.AM_CD      = :amCd      </#if>
				<#if kindCd?has_content >       AND MAST.KIND_CD    = :kindCd    </#if>
				<#if outletCd?has_content >     AND MAST.OUTLET_CD  = :outletCd  </#if>
				 
				<#if reservNm?has_content >     AND (MAST.RESERV_NM LIKE '%' || :reservNm || '%' OR MAST.RSVN_NM LIKE '%' || :reservNm || '%')  </#if>
				<#if reservStatus?has_content > AND :reservStatus   LIKE '%' || MAST.RESERV_STATUS || '%' </#if>
	 
	
		) DUAL 
		ORDER BY RESERV_NUM DESC
 		
 		

		]]>
	</statement>
	
	<!-- DATA를 조회한다. -->
	<statement name="selectListMst" type="select">
		<![CDATA[
		  SELECT 
				RESERV_NUM,
		        KIND_CD,
		        OUTLET_CD,
		        OUTLET_NM,
		        ACCEPT_DATE,
		        RESERV_STATUS,
		        RESERV_STATUS_NM,
		        RESERV_CD,
		        RESERV_NM,
		        RSVN_NM,
		        STR_DATE,
		        END_DATE,
		        	TO_CHAR(TO_DATE(STR_DATE,'YYYY-MM-DD'),'YYYY-MM-DD') || '~' || 
		       		TO_CHAR(TO_DATE(END_DATE,'YYYY-MM-DD'),'YYYY-MM-DD') AS RESERV_DATE,
		        TIME_CD,
		        STR_TIME,
		        END_TIME,
		        BEGIN_DATE,
		        PSN,
		        AM_CD,
		        PRCG_NM,
		        CUST_CD,
		        PRCG_DEPT,
		        JOB_POSITION,
		        CUST_CLASS,
		       
		        --핸드폰번호 - 넣기
		        CASE  LENGTH(LTRIM(RTRIM(HAND_PHONE))) 
		        WHEN  9 THEN SUBSTR(HAND_PHONE,1,2) || '-' || SUBSTR(HAND_PHONE,3,3) || '-' || SUBSTR(HAND_PHONE,6,4)
		        WHEN 10 THEN SUBSTR(HAND_PHONE,1,2) || '-' || SUBSTR(HAND_PHONE,3,4) || '-' || SUBSTR(HAND_PHONE,7,4)
		        WHEN 11 THEN SUBSTR(HAND_PHONE,1,3) || '-' || SUBSTR(HAND_PHONE,4,4) || '-' || SUBSTR(HAND_PHONE,8,4)
		        ELSE '' END    AS HAND_PHONE,  
										 
		        SCC_TELNO_SPLIT_FUN(HAND_PHONE,1)     AS HAND_PHONE1,
		        SCC_TELNO_SPLIT_FUN(HAND_PHONE,2)     AS HAND_PHONE2,
		        SCC_TELNO_SPLIT_FUN(HAND_PHONE,3)     AS HAND_PHONE3,
							
		        --전화번호 - 넣기		   
		        CASE  LENGTH(LTRIM(RTRIM(TEL_NUM))) 
		        WHEN  9 THEN SUBSTR(TEL_NUM,1,2) || '-' || SUBSTR(TEL_NUM,3,3) || '-' || SUBSTR(TEL_NUM,6,4)
		        WHEN 10 THEN SUBSTR(TEL_NUM,1,2) || '-' || SUBSTR(TEL_NUM,3,4) || '-' || SUBSTR(TEL_NUM,7,4)
		        WHEN 11 THEN SUBSTR(TEL_NUM,1,3) || '-' || SUBSTR(TEL_NUM,4,4) || '-' || SUBSTR(TEL_NUM,8,4)
		        ELSE '' END    AS TEL_NUM,  
										 
		        SCC_TELNO_SPLIT_FUN(TEL_NUM,1)     AS TEL_NUM1,
		        SCC_TELNO_SPLIT_FUN(TEL_NUM,2)     AS TEL_NUM2,
		        SCC_TELNO_SPLIT_FUN(TEL_NUM,3)     AS TEL_NUM3,
							
		        --전화번호 - 넣기		   
		        CASE  LENGTH(LTRIM(RTRIM(FAX_NUM))) 
		        WHEN  9 THEN SUBSTR(FAX_NUM,1,2) || '-' || SUBSTR(FAX_NUM,3,3) || '-' || SUBSTR(FAX_NUM,6,4)
		        WHEN 10 THEN SUBSTR(FAX_NUM,1,2) || '-' || SUBSTR(FAX_NUM,3,4) || '-' || SUBSTR(FAX_NUM,7,4)
		        WHEN 11 THEN SUBSTR(FAX_NUM,1,3) || '-' || SUBSTR(FAX_NUM,4,4) || '-' || SUBSTR(FAX_NUM,8,4)
		        ELSE '' END    AS FAX_NUM,  
										 
		        SCC_TELNO_SPLIT_FUN(FAX_NUM,1)     AS FAX_NUM1,
		        SCC_TELNO_SPLIT_FUN(FAX_NUM,2)     AS FAX_NUM2,
		        SCC_TELNO_SPLIT_FUN(FAX_NUM,3)     AS FAX_NUM3,
		        
		        EMAIL_ADDR,
		        EMAIL_YN,
		        SMS_YN,
		        DM_YN,
		        DID_YN,
		        VIP_YN,
		        
		        ADDR_KEY,
		        ADDR_INFO,
		        
		        REMARK_FACT,
		        REMARK_FNB,
		        REMARK_ROOM,
		        REMARK_ETC,
		        REMARK_OUTSIDE,
		       
		        PRVS_RESERV_STATUS,
		        OUTLET_PATRON_TYPE,
		        OUTLET_CONFIRM_TIME,
		        OUTLET_CONFIRMOR,
		        SET_QTY,
		        FISCAL_CUST,
		        CANCEL_DATE,
		        CANCEL_REASON,
		        DID1,
		        DID2,
		        DID3,
		        MAX_PSN,
		        PATRON_NUM,
		        USE_YN,
		        CDATE,
		        CUSER,
		        UDATE,
		        UUSER,
		        CUST_NM,
		        SAP_CUST_CD,
		        RESERV_CD_NM,	 --행사상태명
		        KIND_CD_NM,		 --행사종류명
		        AM_NM,           --담당자명 
		        PRCG_DEPT_NM,	 --부서명
		        JOB_POSITION_NM, --직위명
		        CUST_CLASS_NM,	 -- 고객구분
		        END_CONTENTS,
		        PAY_AMT
		        
		FROM ( SELECT  MAST.RESERV_NUM,
				       MAST.KIND_CD,
				       MAST.OUTLET_CD,
				       MAST.ACCEPT_DATE,
				       MAST.RESERV_STATUS,
				       MAST.RESERV_CD,
				       MAST.RESERV_NM,
				       SCC_CRYPTO.MASKAUTH_FUN(MAST.RSVN_NM,12,:loginPersMask,:maskAuth) AS RSVN_NM,
				       MAST.STR_DATE,
				       MAST.END_DATE,
				       MAST.TIME_CD,
				       MAST.STR_TIME,
				       MAST.END_TIME,
				       MAST.BEGIN_DATE,
				       MAST.PSN,
				       MAST.AM_CD,
				       MAST.PRCG_NM,
				       MAST.CUST_CD,
				       MAST.PRCG_DEPT,
				       MAST.JOB_POSITION,
				       MAST.CUST_CLASS,
				       
				       SCC_CRYPTO.MASKAUTH_FUN(MAST.TEL_NUM,9,:loginPersMask,:maskAuth)    AS TEL_NUM,
				       SCC_CRYPTO.MASKAUTH_FUN(MAST.HAND_PHONE,8,:loginPersMask,:maskAuth) AS HAND_PHONE,
				       SCC_CRYPTO.MASKAUTH_FUN(MAST.FAX_NUM,8,:loginPersMask,:maskAuth)    AS FAX_NUM,
				       SCC_CRYPTO.MASKAUTH_FUN(MAST.EMAIL_ADDR,7,:loginPersMask,:maskAuth) AS EMAIL_ADDR,
				       
				       DECODE(MAST.EMAIL_YN, 'Y', 1, 0) AS EMAIL_YN,
				       DECODE(MAST.SMS_YN, 'Y', 1, 0) AS SMS_YN,
				       DECODE(MAST.DM_YN, 'Y', 1, 0) AS DM_YN,
				       DECODE(MAST.DID_YN, 'Y', 1, 0) AS DID_YN,
				       DECODE(MAST.VIP_YN, 'Y', 1, 0) AS VIP_YN,
				       
				       MAST.ADDR_KEY,
				       SCC_ADDR_FUN(MAST.ADDR_KEY, :loginPersMask, :maskAuth) AS ADDR_INFO,
				       
				       MAST.REMARK_FACT,
				       MAST.REMARK_FNB,
				       MAST.REMARK_ROOM,
				       MAST.REMARK_ETC,
				       MAST.REMARK_OUTSIDE,
				       
				       MAST.PRVS_RESERV_STATUS,
				       MAST.OUTLET_PATRON_TYPE,
				       MAST.OUTLET_CONFIRM_TIME,
				       MAST.OUTLET_CONFIRMOR,
				       MAST.SET_QTY,
				       MAST.FISCAL_CUST,
				       MAST.CANCEL_DATE,
				       MAST.CANCEL_REASON,
				       MAST.DID1,
				       MAST.DID2,
				       MAST.DID3,
				       MAST.MAX_PSN,
				       MAST.PATRON_NUM,
				       DECODE(MAST.USE_YN, 'Y', 1, 0) AS USE_YN,
				       MAST.CDATE,
				       MAST.CUSER,
				       MAST.UDATE,
				       MAST.UUSER
				      
				      ,(SELECT A.CUSTNM      FROM ST_CUST A WHERE A.CUSTGUBUN IN ('002', '003') AND A.CUSTCD = MAST.CUST_CD) AS CUST_NM		--SAP고객명
					  ,(SELECT A.SAP_CUST_CD FROM ST_CUST A WHERE A.CUSTGUBUN IN ('002', '003') AND A.CUSTCD = MAST.CUST_CD) AS SAP_CUST_CD --SAP코드
					  
				      ,OUTLET.OUTLET_NM AS OUTLET_NM        --영업장명 
				      ,SANG.CODE_NAME AS RESERV_STATUS_NM	--행사상태
				      ,CODE.CODE_NAME AS RESERV_CD_NM	    --행사형태명
				      ,KIND.CODE_NAME AS KIND_CD_NM		    --행사종류명
				      ,SCC_CRYPTO.MASKAUTH_FUN(SMGR.AM_NM,12,:loginPersMask,:maskAuth) AS AM_NM           --담당자명 
				      ,DEPT.CODE_NAME AS PRCG_DEPT_NM	    --부서명
				      ,DJOB.CODE_NAME AS JOB_POSITION_NM    --직위명
				      ,CLAS.CODE_NAME AS CUST_CLASS_NM	    --고객구분
				      
				      --,(SELECT SUM(PAY_AMT) AS AMT FROM  BMS_PAY_MST  PAY WHERE SALS_CLASS = '1' AND PAY.RECEIPT_NUM = MAST.RESERV_NUM) AS PAY_AMT --행사금액
				      ,(SELECT SUM(MENU.TOT_AMT) FROM   BMS_RESERV_MENU MENU  WHERE  MENU.RESERV_NUM = MAST.RESERV_NUM AND MENU.USE_YN = 'Y') AS PAY_AMT --행사금액
				      
				      ,WEED.END_CONTENTS
				      
				       
				FROM   BMS_RESERV_MST MAST
					 INNER JOIN BMS_FUNCTION WEED ON WEED.RESERV_NUM  = MAST.RESERV_NUM
					 INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
			                       FROM   SLE_OUTLET_MST MST
			                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
			                                     <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
			                                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
			          			 ) OUTLET ON OUTLET.OUTLET_CD =  MAST.OUTLET_CD 
				     INNER JOIN BMS_AM_MST      SMGR ON SMGR.AM_CD = MAST.AM_CD
				     INNER JOIN SCC_COMMON_CODE CODE ON CODE.GROUP_CODE = 'BMS_0005' AND CODE.CODE = MAST.RESERV_CD	    --행사형태
				     INNER JOIN SCC_COMMON_CODE SANG ON SANG.GROUP_CODE = 'BMS_0001' AND SANG.CODE = MAST.RESERV_STATUS	--예약상태
				     INNER JOIN SCC_COMMON_CODE KIND ON KIND.GROUP_CODE = 'BMS_0002' AND KIND.CODE = MAST.KIND_CD       --예약종류
				LEFT OUTER JOIN SCC_COMMON_CODE DEPT ON DEPT.GROUP_CODE = 'BMS_0009' AND DEPT.CODE = MAST.PRCG_DEPT		--부서
				LEFT OUTER JOIN SCC_COMMON_CODE DJOB ON DJOB.GROUP_CODE = 'BMS_0010' AND DJOB.CODE = MAST.JOB_POSITION	--직위
				LEFT OUTER JOIN SCC_COMMON_CODE CLAS ON CLAS.GROUP_CODE = 'BMS_0006' AND CLAS.CODE = MAST.CUST_CLASS	--거래처
				
				WHERE MAST.USE_YN = 'Y'
				<#if reservDtFr?has_content >   
						AND (   ( MAST.STR_DATE BETWEEN :reservDtFr   AND :reservDtTo    OR  MAST.END_DATE BETWEEN :reservDtFr   AND :reservDtTo )
					         OR ( :reservDtFr   BETWEEN MAST.STR_DATE AND MAST.END_DATE  OR :reservDtTo    BETWEEN MAST.STR_DATE AND MAST.END_DATE ))
					              
				</#if>
				
				<#if amCd?has_content >         AND MAST.AM_CD      = :amCd      </#if>
				<#if kindCd?has_content >       AND MAST.KIND_CD    = :kindCd    </#if>
				<#if outletCd?has_content >     AND MAST.OUTLET_CD  = :outletCd  </#if>
				<#if reservNum?has_content >    AND MAST.RESERV_NUM = :reservNum </#if>
				<#if reservNm?has_content >     AND (MAST.RESERV_NM LIKE '%' || :reservNm || '%' OR MAST.RSVN_NM LIKE '%' || :reservNm || '%')  </#if>
				<#if reservStatus?has_content > AND :reservStatus   LIKE '%' || MAST.RESERV_STATUS || '%' </#if>
		
		) DUAL 
 		

		]]>
	</statement>
	
	<!-- 행사완료내역조회 -->
	<statement name="selectListEndEvent" type="select">
		<![CDATA[
			
			SELECT CASE SEQ WHEN 'R' THEN '1'
					        WHEN 'O' THEN '2'
			                WHEN 'F' THEN '3'
			                WHEN 'B' THEN '4' END LIST_NO
				  , SEQ, MAX(EVENT_NM) AS EVENT_NM,SUM(TOT_AMT) AS TOT_AMT, SUM(POS_AMT) AS POS_AMT, SUM(POS_AMT) -SUM(TOT_AMT) AS SUB_AMT
			
			FROM (
			        SELECT 'R' AS SEQ , '객실금액' AS EVENT_NM, SUM(AMT) AS TOT_AMT, 0 AS POS_AMT  
			        FROM BMS_RESERV_SOHO 
			        WHERE RESERV_NUM = :reservNum
			
			        UNION ALL
			        SELECT 'O' AS SEQ , DECODE(MAX(KIND.ATTR02),NULL,'기타금액',MAX(KIND.ATTR02)) AS EVENT_NM, SUM(TOT_AMT) AS TOT_AMT, 0 AS POS_AMT 
			        FROM  BMS_RESERV_MENU  MENU
			        INNER JOIN SCC_COMMON_CODE KIND ON KIND.GROUP_CODE = 'SLE_0001' AND ATTR01 = 'O'
			        INNER JOIN SLE_OUTLET_MST MAST ON MAST.OUTLET_CD = MENU.OUTLET_CD AND MAST.OUTLET_TYPE = KIND.CODE
			        WHERE RESERV_NUM = :reservNum 
			
			        UNION ALL
			        SELECT 'F' AS SEQ , DECODE(MAX(KIND.ATTR02),NULL,'식음금액',MAX(KIND.ATTR02)) AS EVENT_NM, SUM(TOT_AMT) AS TOT_AMT, 0 AS POS_AMT 
			        FROM  BMS_RESERV_MENU  MENU
			        INNER JOIN SCC_COMMON_CODE KIND ON KIND.GROUP_CODE = 'SLE_0001' AND ATTR01 = 'F'
			        INNER JOIN SLE_OUTLET_MST MAST ON MAST.OUTLET_CD = MENU.OUTLET_CD AND MAST.OUTLET_TYPE = KIND.CODE
			        WHERE RESERV_NUM = :reservNum 
			         
			
			        UNION ALL
			        SELECT 'B' AS SEQ ,DECODE(MAX(KIND.ATTR02),NULL,'연회금액',MAX(KIND.ATTR02)) AS EVENT_NM, SUM(TOT_AMT) AS TOT_AMT, 0 AS POS_AMT 
			        FROM  BMS_RESERV_MENU  MENU
			        INNER JOIN SCC_COMMON_CODE KIND ON KIND.GROUP_CODE = 'SLE_0001' AND ATTR01 = 'B'
			        INNER JOIN SLE_OUTLET_MST MAST ON MAST.OUTLET_CD = MENU.OUTLET_CD AND MAST.OUTLET_TYPE = KIND.CODE
			        WHERE RESERV_NUM = :reservNum 
			
			        UNION ALL
			        SELECT    ATTR01  AS SEQ ,MAX(ATTR02) AS EVENT_NM, 0 AS  TOT_AMT,  SUM(TOT_AMT) AS TOT_AMT 
			        FROM SLE_SALS_INFO A 
			        	INNER JOIN SLE_SALS_GOODS  B    ON  B.OUTLET_CD      = A.OUTLET_CD 
			                                            AND B.SALES_DATE     = A.SALES_DATE
			                                            AND B.RECEIPT_NUM    = A.RECEIPT_NUM
			        	INNER JOIN SCC_COMMON_CODE KIND ON  KIND.GROUP_CODE  = 'SLE_0001'  
			        	INNER JOIN SLE_OUTLET_MST  MAST ON  MAST.OUTLET_CD   = A.OUTLET_CD 
			        								    AND MAST.OUTLET_TYPE = KIND.CODE
			        WHERE RESERV_NUM = :reservNum
			        GROUP BY ATTR01 
			) DUAL
			GROUP BY  SEQ 
			ORDER BY LIST_NO
						
		]]>
	</statement>
	
	<!-- 행사완료내역저장 -->
	<statement name="updateDataMst" type="update">
		<![CDATA[
			 
			
			UPDATE BMS_FUNCTION SET
				<#if endContents?exists> END_CONTENTS = :endContents, </#if>
				<#if useYn?exists> USE_YN = DECODE(:useYn, '1', 'Y', 'N'), </#if>
			       UDATE = SYSDATE,
			       UUSER = :loginSabun
			WHERE RESERV_NUM = :reservNum
			
		]]>
	</statement>
	
	<statement name="updateDataResStatus" type="update">
		<![CDATA[
			UPDATE BMS_RESERV_MST SET
				   RESERV_STATUS ='3',
			       UDATE = SYSDATE,
			       UUSER = :loginSabun
			WHERE RESERV_NUM = :reservNum
			
			 
		]]>
	</statement>
	
</hqml>	