<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="fm.fmf.dayCloseMngtDAO">
	<desc>일마감관리 HQML Query</desc>

	<!-- 일마감관리 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.fm.fmf.dao.DayCloseMngtDAO.selectList */
		<![CDATA[
			SELECT
				0 CHK1,    
				0 CHK2,    
    		    X.SALE_DATE,
				X.UPJANG2,
				X.UPJANG_NM2,
				X.UPJANG,
				X.UPJANG_NM,
				X.SUBINV_CODE,
				X.SUBINV_NAME,
				X.RECEIPT_NUM,
				X.MODIFY_SALS_YN,
				X.NET_AMT,
				X.VAT_AMT,
				X.SAL_AMT,
				X.TRANS_YN,
				NVL(S.CLOSE_YN, 'N') AS CLOSE_YN,
				(SELECT NM_KOR FROM HR_PERSONAL H WHERE H.SABUN = X.CREATE_BY) AS INPUT_USER,
			    TO_CHAR(X.CREATE_DATE,'YYYY-MM-DD HH24:MI') INPUT_DATE		
			FROM 
			(
				/* 정상분 */
				SELECT 
    		   		SALE_DATE,
		       		UPJANG2,
		       		(SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = A.UPJANG2) AS UPJANG_NM2,
		       		UPJANG,
		       		(SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = A.UPJANG) AS UPJANG_NM,
		       		SUBINV_CODE,
		       		(SELECT SUBINV_NAME FROM HLDC_PO_SUBINVENTORY C WHERE C.SUBINV_CODE = A.SUBINV_CODE) AS SUBINV_NAME,
    		   		MAX(RECEIPT_NUM) AS RECEIPT_NUM,
    		   		'N' AS MODIFY_SALS_YN, 
               		SUM(NET_AMT) NET_AMT,
		       		SUM(VAT_AMT) VAT_AMT,
		       		SUM(SAL_AMT) SAL_AMT,
		       		MAX(NVL(TRANS_YN, 'N')) AS TRANS_YN,
		       		MAX(CREATE_BY) AS CREATE_BY,
		       		MAX(CREATE_DATE) AS CREATE_DATE
				FROM   FMS_SALES A
				WHERE  SALE_DATE BETWEEN :schSaleDate AND :schSaleDateTo
				<#if schUpjang?has_content>
					<#if schChk?has_content>
						AND    (UPJANG = :schUpjang OR UPJANG2 = :schUpjang) 
					<#else>
						AND    (UPJANG = :schUpjang)
					</#if>
				</#if>
				AND    SYS_CLASS = '13'
				AND    MODIFY_SALS_YN = 'N'
				GROUP BY SALE_DATE, UPJANG2, UPJANG, SUBINV_CODE
				
				UNION ALL
				/* 조정분 */				
				SELECT 
    		   		SALE_DATE,
		       		UPJANG2,
		       		(SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = A.UPJANG2) AS UPJANG_NM2,
		       		UPJANG,
		       		(SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = A.UPJANG) AS UPJANG_NM,
		       		SUBINV_CODE,
		       		(SELECT SUBINV_NAME FROM HLDC_PO_SUBINVENTORY C WHERE C.SUBINV_CODE = A.SUBINV_CODE) AS SUBINV_NAME,
    		   		RECEIPT_NUM,
    		   		'Y' AS MODIFY_SALS_YN, 
               		SUM(NET_AMT) NET_AMT,
		       		SUM(VAT_AMT) VAT_AMT,
		       		SUM(SAL_AMT) SAL_AMT,
		       		MAX(NVL(TRANS_YN, 'N')) AS TRANS_YN,
		       		MAX(CREATE_BY) AS CREATE_BY,
		       		MAX(CREATE_DATE) AS CREATE_DATE
				FROM   FMS_SALES A
				WHERE  SALE_DATE BETWEEN :schSaleDate AND :schSaleDateTo
				<#if schUpjang?has_content>
					<#if schChk?has_content>
						AND    (UPJANG = :schUpjang OR UPJANG2 = :schUpjang) 
					<#else>
						AND    (UPJANG = :schUpjang)
					</#if>
				</#if>
				AND    SYS_CLASS = '13'
				AND    MODIFY_SALS_YN = 'Y'
				GROUP BY SALE_DATE, UPJANG2, UPJANG, SUBINV_CODE, RECEIPT_NUM
			) X LEFT JOIN (
								SELECT RECEIPT_NUM, NVL(MAX(DDDD_CLOSE_YN), 'N') AS CLOSE_YN
								FROM SLA_IF_UPJANG_SALS_DETAIL
								WHERE SYS_CLASS = '13'
								AND    OCCUR_DATE BETWEEN :schSaleDate AND :schSaleDateTo
								GROUP BY RECEIPT_NUM
								) S ON X.RECEIPT_NUM = S.RECEIPT_NUM
			ORDER BY   X.SALE_DATE,	X.UPJANG2, X.UPJANG, X.RECEIPT_NUM		
		]]>
	</statement>


	<!-- 일마감관리 목록을 조회한다. -->
	<statement name="selectList_old" type="select">
		/*+ com.hwfs.fm.fmf.dao.DayCloseMngtDAO.selectList_old */
		<![CDATA[
			SELECT 
				0 CHK,    
    		   SALE_DATE,
		       UPJANG,
		       (SELECT UPJANGNM_DISP FROM FMS_UPJANG WHERE UPJANG = A.UPJANG AND USE_YN =  'Y') AS UPJANG_NM,
		       SUBINV_CODE,
		       (SELECT SUBINV_NAME FROM HLDC_PO_SUBINVENTORY C WHERE C.SUBINV_CODE = A.SUBINV_CODE) AS SUBINV_NAME,
               SUM(NET_AMT) NET_AMT,
		       SUM(VAT_AMT) VAT_AMT,
		       SUM(SAL_AMT) SAL_AMT,
		       DECODE(MAX(MODIFY_SALS_YN), 'Y', 1, 0) AS MODIFY_SALS_YN,
		       DECODE(MAX(CLOSING_YN), 'Y', 1, 0) AS CLOSING_YN,
		       DECODE(MAX(TRANS_YN), 'Y', 1, 0) AS TRANS_YN
               --UPJANG2,
		       --SALE_TYPE,
		       --VAT_CLASS,
		       --SYS_CLASS,
		       --RECEIPT_NUM,
		       --MU_CD,
		       --CC_CD,
		       --PAY_CD,
		       --RECD_STATUS,
		       --WITHDRAW_SCHD_DATE,
		       --SALE_GUBUN,
		FROM   FMS_SALES A
		WHERE  SALE_DATE = :schSaleDate
		<#if upjang?has_content>AND    UPJANG = :upjang</#if>
		AND    SYS_CLASS = '13'
		GROUP BY SALE_DATE,UPJANG,SUBINV_CODE,SYS_CLASS
		]]>
	</statement>



	<!-- 일마감관리 목록을 조회한다. :정상분 -->
	<statement name="selectSubList" type="select"><![CDATA[
		SELECT TRANS_ID  
		     ,TRANS_DATE  --매출일자
		     ,SOURCE_TYPE 
		     ,TRANS_TYPE
		     ,TRANS_QTY--판매수량
		     ,SOURCE_ID
		     ,TRANS_MU_CD
		     ,TRANS_DEPT_ID
		     ,TRANS_UPJANG--업장
		     ,(SELECT UPJANGNM_DISP FROM FMS_UPJANG WHERE UPJANG = A.TRANS_UPJANG and USE_YN =  'Y') AS UPJANG_NM
		     ,SUBINV_CODE--창고
		     ,(SELECT SUBINV_NAME FROM HLDC_PO_SUBINVENTORY C WHERE C.SUBINV_CODE = A.SUBINV_CODE) AS SUBINV_NAME
		     ,A.ACCTCD
		     ,A.ITEM_CODE--자재코드
		     ,A.ITEM_NAME--자재명
		     ,A.ITEM_SIZE--규격
		     ,A.TAX_CODE--과세구분
		     ,TRANS_UOM--단위
		     ,SALE_PRICE --판매단가
		     --,ROUND(SALE_AMOUNT) AS SALE_AMOUNT--판매금액
			, DECODE(SUBSTR(A.TRANS_TYPE,1,1),'I',1,-1) * ROUND(A.SALE_PRICE * A.TRANS_QTY) AS SALE_AMOUNT 
			, DECODE(SUBSTR(A.TRANS_TYPE,1,1),'I',1,-1) * ROUND(DECODE(A.TAX_CODE,'100',0.1,0) * ROUND(A.SALE_PRICE * A.TRANS_QTY)) AS SALE_VAT 
		    -- ,DECODE(A.TAX_CODE, '100', ROUND(SALE_VAT), 0) AS SALE_VAT--부가세 
		  FROM HLDC_PO_TRANSACTION_SALE A
		       ,HLDC_PO_ITEM_MST B
		  WHERE A.ITEM_CODE = B.ITEM_CODE(+) 
		  AND  A.MG_DATE =  :schSaleDate
		  <#if subUpjang?has_content>AND TRANS_UPJANG = :subUpjang</#if>
		  --AND  SUBINV_CODE LIKE 'S%'
		  <#if subinvCode?has_content>AND  SUBINV_CODE = :subinvCode</#if>
		  --AND  A.TAX_CODE = DECODE(:subVatClass,'1','100','2','210') 
		  AND ( TRANS_TYPE IN '_002' OR TRANS_TYPE = 'I001' )
		  UNION ALL
		  SELECT TRANS_ID  
		     ,TRANS_DATE  --매출일자
		     ,SOURCE_TYPE 
		     ,TRANS_TYPE
		     ,TRANS_QTY--판매수량
		     ,SOURCE_ID
		     ,TRANS_MU_CD
		     ,TRANS_DEPT_ID
		     ,TRANS_UPJANG--업장
		     ,(SELECT UPJANGNM_DISP FROM FMS_UPJANG WHERE UPJANG = A.TRANS_UPJANG and USE_YN =  'Y') AS UPJANG_NM
		     ,SUBINV_CODE--창고
		     ,(SELECT SUBINV_NAME FROM HLDC_PO_SUBINVENTORY C WHERE C.SUBINV_CODE = A.SUBINV_CODE) AS SUBINV_NAME
		     ,A.ACCTCD
		     ,A.ITEM_CODE--자재코드
		     ,A.ITEM_NAME--자재명
		     ,A.ITEM_SIZE--규격
		     ,A.TAX_CODE--과세구분
		     ,TRANS_UOM--단위
		     ,CASE WHEN A.PO_TYPE IN ('71', '72') THEN 0
                   ELSE SALE_PRICE END AS SALE_PRICE --판매단가
		     --,ROUND(SALE_AMOUNT) AS SALE_AMOUNT--판매금액
             ,CASE WHEN A.PO_TYPE IN ('71', '72') THEN 0
                   ELSE DECODE(SUBSTR(A.TRANS_TYPE,1,1),'I',1,-1) * ROUND(A.SALE_PRICE * A.TRANS_QTY) END AS SALE_AMOUNT
			 ,CASE WHEN A.PO_TYPE IN ('71', '72') THEN 0
                   ELSE DECODE(SUBSTR(A.TRANS_TYPE,1,1),'I',1,-1) * ROUND(DECODE(A.TAX_CODE,'100',0.1,0) * ROUND(A.SALE_PRICE * A.TRANS_QTY)) END AS SALE_VAT 
		    -- ,DECODE(A.TAX_CODE, '100', ROUND(SALE_VAT), 0) AS SALE_VAT--부가세 
		  FROM HLDC_PO_TRANSACTION_SALE_RTN A
		       ,HLDC_PO_ITEM_MST B
		  WHERE A.ITEM_CODE = B.ITEM_CODE(+) 
		  AND  A.MG_DATE =  :schSaleDate
		  <#if subUpjang?has_content>AND TRANS_UPJANG = :subUpjang</#if>
		  --AND  SUBINV_CODE LIKE 'S%'
		  <#if subinvCode?has_content>AND  SUBINV_CODE = :subinvCode</#if>
		  --AND  A.TAX_CODE = DECODE(:subVatClass,'1','100','2','210') 
		  AND ( TRANS_TYPE IN '_002' OR TRANS_TYPE = 'I001' )
<#if newGubun=="Y">
		UNION ALL
		SELECT TRANS_ID  
		     ,TRANS_DATE  --매출일자
		     ,SOURCE_TYPE 
		     ,TRANS_TYPE
		     ,TRANS_QTY--판매수량
		     ,SOURCE_ID
		     ,TRANS_MU_CD
		     ,TRANS_DEPT_ID
		     ,TRANS_UPJANG--업장
		     ,(SELECT UPJANGNM_DISP FROM FMS_UPJANG WHERE UPJANG = A.TRANS_UPJANG and USE_YN =  'Y') AS UPJANG_NM
		     ,SUBINV_CODE--창고
		     ,(SELECT SUBINV_NAME FROM HLDC_PO_SUBINVENTORY C WHERE C.SUBINV_CODE = A.SUBINV_CODE) AS SUBINV_NAME
		     ,A.ACCTCD
		     ,A.ITEM_CODE--자재코드
		     ,A.ITEM_NAME--자재명
		     ,A.ITEM_SIZE--규격
		     ,A.TAX_CODE--과세구분
		     ,TRANS_UOM--단위
		     ,SALE_PRICE --판매단가
		     --,ROUND(SALE_AMOUNT) AS SALE_AMOUNT--판매금액
			, DECODE(SUBSTR(A.TRANS_TYPE,1,1),'I',1,-1) * ROUND(A.SALE_PRICE * A.TRANS_QTY) AS SALE_AMOUNT 
			, DECODE(SUBSTR(A.TRANS_TYPE,1,1),'I',1,-1) * ROUND(DECODE(A.TAX_CODE,'100',0.1,0) * ROUND(A.SALE_PRICE * A.TRANS_QTY)) AS SALE_VAT 
		    -- ,DECODE(A.TAX_CODE, '100', ROUND(SALE_VAT), 0) AS SALE_VAT--부가세 
		  FROM HLDC_PO_TRANSACTION_SALE_HNR A
		       ,HLDC_PO_ITEM_MST B
		  WHERE A.ITEM_CODE = B.ITEM_CODE(+) 
		  AND  A.MG_DATE =  :schSaleDate
		  <#if subUpjang?has_content>AND TRANS_UPJANG = :subUpjang</#if>
		  --AND  SUBINV_CODE LIKE 'S%'
		  <#if subinvCode?has_content>AND  SUBINV_CODE LIKE (SELECT :subinvCode FROM DUAL)</#if>
		  --AND  A.TAX_CODE = DECODE(:subVatClass,'1','100','2','210') 
		  AND ( TRANS_TYPE IN '_002' OR TRANS_TYPE = 'I001' )		
</#if>]]></statement>


	<!-- 일마감관리 목록을 조회한다. : 조정분 -->
	<statement name="selectSubList2" type="select">
		/*+ com.hwfs.fm.fmf.dao.DayCloseMngtDAO.selectSubList2 */
		<![CDATA[
		SELECT TRANS_ID  
		     ,TRANS_DATE  --매출일자
		     ,SOURCE_TYPE 
		     ,TRANS_TYPE
		     ,TRANS_QTY--판매수량
		     ,SOURCE_ID
		     ,TRANS_MU_CD
		     ,TRANS_DEPT_ID
		     ,TRANS_UPJANG--업장
		     ,(SELECT UPJANGNM_DISP FROM FMS_UPJANG WHERE UPJANG = A.TRANS_UPJANG and USE_YN =  'Y') AS UPJANG_NM
		     ,SUBINV_CODE--창고
		     ,(SELECT SUBINV_NAME FROM HLDC_PO_SUBINVENTORY C WHERE C.SUBINV_CODE = A.SUBINV_CODE) AS SUBINV_NAME
		     ,A.ACCTCD
		     ,'' AS ITEM_CODE--자재코드
		     ,A.ITEM_NAME--자재명
		     ,A.ITEM_SIZE--규격
		     ,A.TAX_CODE--과세구분
		     ,TRANS_UOM--단위
		     ,SALE_PRICE --판매단가
		     ,SALE_AMOUNT--판매금액
		     ,SALE_VAT--부가세 
		  FROM FMS_TRANSACTION A
		  WHERE A.RECEIPT_NUM = :receiptNum
		  AND A.TRANS_TYPE = 'I001'
		]]>
	</statement>


	<!-- 일마감관리 목록을 조회한다. : 조정분 -->
	<statement name="upjangList" type="select">
		/*+ com.hwfs.fm.fmf.dao.DayCloseMngtDAO.upjangList */
		<![CDATA[
		SELECT UPJANG2 UPJANG FROM  FMS_SALES
		WHERE SALE_DATE = :schSaleDate
		<#if schUpjang?has_content>AND UPJANG = :schUpjang</#if>
		AND   SYS_CLASS = '13'
		GROUP BY UPJANG2
		]]>
	</statement>

	<!-- 일마감관리 선택된 FMS_SALES 데이터를 삭제한다 -->
	<statement name="fmssalesDelete" type="delete">
		/*+ com.hwfs.fm.fmf.dao.DayCloseMngtDAO.fmssalesDelete */
		<![CDATA[
		DELETE  FMS_SALES
		WHERE SALE_DATE = :saleDate
		AND UPJANG = :upjang
		AND SYS_CLASS = '13'
		]]>
	</statement>

	<!-- 마감 건수 조회 -->
	<statement name="fmsClosingCnt" type="select">
		/*+ com.hwfs.fm.fmf.dao.DayCloseMngtDAO.fmsClosingCnt */
		<![CDATA[
			SELECT COUNT(*) 
		 	 FROM FMS_SALES 
		 	WHERE SYS_CLASS = '13'
		 	  AND TRANS_YN = 'Y'
		      AND SALE_DATE = :schSaleDate 
		      AND UPJANG LIKE :schUpjang || '%' 
       	]]>
	</statement>

	<!-- 일마감관리 해당 사업장에 마감데이터 확인. -->
	<statement name="fmsCnt" type="delete">
		/*+ com.hwfs.fm.fmf.dao.DayCloseMngtDAO.fmsCnt */
		<![CDATA[
			SELECT COUNT( * ) 
		 	 FROM FMS_SALES 
		 	WHERE SYS_CLASS = '13' 
		       /* 조정분 : Y */ 
		       AND SALE_DATE = :schSaleDate 
		       AND UPJANG LIKE :schUpjang || '%' 
       	]]>
	</statement>


	<!-- 전일자 마감데이터 확인 : 전일자 수불자료 확인 -->
	<statement name="fmsDayTrCnt" type="delete">
		/*+ com.hwfs.fm.fmf.dao.DayCloseMngtDAO.fmsDayTrCnt */
		<![CDATA[
			SELECT COUNT(*) 
		 	 FROM FMS_TRANSACTION_V V 
             WHERE V.SUBINV_CODE LIKE 'S1%'
             AND   V.MG_DATE = TO_CHAR(TO_DATE(:schSaleDate,'YYYYMMDD')-1,'YYYYMMDD')
             AND   V.TRANS_UPJANG = :schUpjang
             AND   ROWNUM <= 1
       	]]>
	</statement>

	<!-- 일마감관리 해당 사업장에 전일자 마감데이터 확인. -->
	<statement name="fmsDayCnt" type="delete">
		/*+ com.hwfs.fm.fmf.dao.DayCloseMngtDAO.fmsDayCnt */
		<![CDATA[
			SELECT COUNT(*) 
		 	 FROM FMS_SALES 
		 	WHERE SYS_CLASS = '13' 
		       /* 조정분 : Y */ 
		       AND SALE_DATE = TO_CHAR(TO_DATE(:schSaleDate ,'YYYYMMDD')-1,'YYYYMMDD')
		       AND UPJANG LIKE :schUpjang || '%' 
       	]]>
	</statement>

	<!-- 식재 전체 일마감 권한 조회, 20170323 요청자:이혜은 -->
	<statement name="selectAllClose"><![CDATA[
	        SELECT  COUNT(1) CODE
              FROM SCC_COMMON_CODE
             WHERE GROUP_CODE = '식재일마감권한'
               AND USE_YN = 'Y'
               AND CODE_NAME = :sabun
             ]]>

	</statement>

	<!-- 일미마감관리 목록을 조회한다. -->
	<statement name="selectCheckCloseDayInfo" type="select">
		/*+ com.hwfs.fm.fmf.dao.DayCloseMngtDAO.selectCheckCloseDayInfo
		*/
		<![CDATA[
			SELECT LISTAGG(DATE_INFO, ',') WITHIN GROUP(ORDER BY DATE_INFO)  AS DATE_INFO FROM (
			    SELECT DATE_INFO
			      FROM (
			        SELECT TO_CHAR(TO_DATE (:reqFrom, 'YYYYMMDD') + LEVEL - 1, 'YYYYMMDD') AS DATE_INFO FROM DUAL
			              CONNECT BY (TO_DATE (:reqFrom, 'YYYYMMDD') + LEVEL - 1) <= TO_DATE (:reqTo, 'YYYYMMDD'))
			)
		]]>
	</statement>

	<!-- 일미마감관리 목록을 조회한다. -->
	<statement name="selectCheckClose" type="select">
		/*+ com.hwfs.fm.fmf.dao.DayCloseMngtDAO.selectCheckClose */
		<![CDATA[
			SELECT *
					FROM (
					      SELECT A.MG_DATE AS MG_DATE,  /* 수불일자*/
					             A.TRANS_UPJANG  AS TRANS_UPJANG, /* 업장코드 */
					             C.UPJANGNM_DISP  AS UPJANGNM, /* 업장명 */
					             CS_SABUN,  /* CS사번 */
					             (SELECT NM_KOR FROM HR_PERSONAL WHERE SABUN =  CS_SABUN) AS CS_NAME,  /* CS명 */
					             MAIN_UPJANG,  /* 본사코드 */
					             (SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = MAIN_UPJANG) AS MAIN_UPJANGNM,  /* 본사명 */
					             A.MAGAM_YN AS MAGAM_YN,  /* 마감여부 : NULL(매출없음), 마감(마감완료), 마감취소(마감했다가 취소), 미마감(매출있고, 마감한 적 없음) */
					             NULL AS CHK_YN,
					             NULL AS CHK_DATE 
					      FROM (
					          SELECT MG_DATE, 
					                 TRANS_UPJANG,
					                 MAX(NVL(MAGAM_YN,'매출없음')) MAGAM_YN
					          FROM (          
					                  SELECT 
					                         DT.MG_DATE AS MG_DATE,  /* 수불일자*/
					                         TO_NUMBER(SL.SHOP_CD) AS TRANS_UPJANG,    /* 업장코드 */
					                         SL.CUST_WH_CD AS SUBINV_CODE,   /* 창고코드*/
					                         '미마감' AS MAGAM_YN /*마감여부*/
					                    FROM EPROCUSR.ESIMGHD HD,                                                /* 수불헤더*/
					                         EPROCUSR.ESIMGDT DT,                                               /* 수불상세 */
					                         EPROCUSR.ESISALP SL,      /* 판매단가 */
					                         FMS_UPJANG A                                               
					                   WHERE HD.SYS_ID = '100'
					                     AND HD.COMP_CD = 'HFC'
					                     AND HD.BU_CD = '2000'
					                     AND HD.SYS_ID = DT.SYS_ID
					                     AND HD.COMP_CD = DT.COMP_CD
					                     AND HD.WH_CD = DT.WH_CD
					                     AND HD.ITEM_CD = DT.ITEM_CD
					                     AND SL.SHOP_CD = A.UPJANG
					                     <#if upjangCd?has_content>
					                     AND SL.SHOP_CD LIKE :upjangCd || '%'  /* 조건 : 업장 */
					                     </#if>
					                     <#if mainUpjangCd?has_content>
					                     AND A.MAIN_UPJANG = :mainUpjangCd  /* 조건:메인업장 */
					                     </#if>
					                     AND DT.MG_DATE BETWEEN :reqFrom AND :reqTo   /* 조건 : 수불일자 */
					                     AND SL.CUST_WH_CD  LIKE 'S1%'
					                     AND DT.MOVEMENT_TYP NOT IN ('561','562','998','999','901','902','801','802','111','112','211','212')   /* 기초 , 기말 재고,배송입출고, 직송 가상입출고  제외 */
					                     AND DT.SYS_ID = SL.SYS_ID
					                     AND DT.COMP_CD = SL.COMP_CD
					                     AND DT.MG_NO = SL.MG_NO
					                     AND DT.STS <> 'D'
					                     AND NOT EXISTS (SELECT 1 FROM FMS_SALES V WHERE  SALE_DATE BETWEEN  :reqFrom AND :reqTo  AND DT.MG_DATE = V.SALE_DATE  AND SL.SHOP_CD = V.UPJANG AND SL.CUST_WH_CD = V.SUBINV_CODE )
					                   UNION ALL
					                   --마감집계내역
					                   
					                   SELECT SALE_DATE AS MG_DATE ,
					                          UPJANG AS TRANS_UPJANG,
					                          SUBINV_CODE,
					                        DECODE(TRANS_YN, NULL, '미마감', 'Y', '마감', 'N' , '마감취소') AS MAGAM_YN
					                   FROM FMS_SALES
					                   WHERE SALE_DATE BETWEEN :reqFrom AND :reqTo   /* 조건 : 수불일자 */
					                   <#if upjangCd?has_content>
					                    AND UPJANG = :upjangCd    /* 조건 : 업장 */
					                   </#if>
					                  UNION ALL 
					                  --매출보정내역
					                  SELECT TRANS_DATE AS MG_DATE
					                        ,TRANS_UPJANG 
					                        ,SUBINV_CODE
					                        ,'미마감'  AS MAGAM_YN
					                    FROM FMS_TRANSACTION 
					                   WHERE TRANS_DATE BETWEEN :reqFrom AND :reqTo   /* 조건 : 수불일자 */
					                   <#if upjangCd?has_content>
					                     AND TRANS_UPJANG = :upjangCd   /* 조건 : 업장 */
					                   </#if>
					                     AND TRANS_TYPE = 'I001'
					                     AND TRANS_YN = 'N'
					              )
					              GROUP BY TRANS_UPJANG, MG_DATE
					            ) A,
					            (    
					             SELECT P_DATE                                                                                                                                                                                            
					               FROM (                                                                                                                                                                                                              
					                     SELECT TO_CHAR(TO_DATE(:reqFrom, 'YYYYMMDD')+LEVEL-1,'YYYYMMDD') P_DATE 
					                       FROM DUAL                                                                                                                                                                                    
					                      WHERE 1=1                                                                                                                                                                           
					                     CONNECT BY LEVEL-1 <= 365*10                                                                                                                              
					                     )                                                                                                                                                                                                     
					              WHERE P_DATE BETWEEN :reqFrom AND :reqTo    /* 조건 : 수불일자 */
					            ) B,
					            FMS_UPJANG C
					      WHERE A.MG_DATE = B.P_DATE
					        AND A.TRANS_UPJANG = C.UPJANG
					        <#if csSabun?has_content>
					        AND CS_SABUN = :csSabun   /* 조건 : CS 사번*/
					        </#if>
					        <#if mainUpjangCd?has_content>
					        AND MAIN_UPJANG = :mainUpjangCd  /* 조건 : 메인업장 */
					        </#if>
					)

			PIVOT ( MAX(MAGAM_YN) FOR MG_DATE IN (${pivotInfo}) )
			 
		]]>
	</statement>
	<statement name="selectTemp">
		<![CDATA[
	SELECT UPJANG_CD,
	   	  YYMM,
	      OCCUR_CLASS,
	      BUY_CONFIRM_AMT,
	      CLASS_CD,
	      OCCUR_TABLE,
	      KEY_NM,
	      KEY_VALUE01,
	      OCCUR_PRG_ID,
	      OCCUR_PRG_NM,
	      CUSER
	 FROM CREDITAMT_SUM_TEMP
	]]>
	</statement>

	<!-- 하위업장일괄마감 체크 여부에 따라 업장목록 조회 -->
	<statement name="selectUpjangList" type="select"><![CDATA[  <#if schMainUpjang?has_content>
			<#if closingAll == '1'> 
              SELECT  DISTINCT B.UPJANG AS UPJANG, /*업장코드*/
                      DECODE(HEAD_CREDIT_YN, 'Y', MAIN_UPJANG, UPJANG) AS UPJANG2      
				FROM SO_PR A,
				     FMS_UPJANG B
				WHERE A.RC_UPJANG = B.UPJANG
				AND B.MAIN_UPJANG =  :schMainUpjang 
				AND NEED_DATE  BETWEEN TO_CHAR(TO_DATE( :schSaleDate   ,'YYYYMMDD')-120,'YYYYMMDD') AND TO_CHAR(TO_DATE(  :schSaleDate  ,'YYYYMMDD')+31,'YYYYMMDD')
			UNION ALL
			SELECT  DISTINCT  B.UPJANG  AS UPJANG, /*업장코드*/
			        DECODE(HEAD_CREDIT_YN, 'Y', MAIN_UPJANG, UPJANG) AS UPJANG2 
			FROM   FMS_TRANSACTION A,
			       FMS_UPJANGV B
			WHERE A.TRANS_UPJANG = B.UPJANG
			AND B.MAIN_UPJANG =  :schMainUpjang 
			AND A.TRANS_DATE = :schSaleDate 
			<#else>          
			SELECT UPJANG, 
			       DECODE(HEAD_CREDIT_YN, 'Y', MAIN_UPJANG, UPJANG) AS UPJANG2 
			  FROM FMS_UPJANG A 
			 WHERE UPJANG = :schMainUpjang 
			</#if>
		<#else> 
              SELECT  DISTINCT B.UPJANG AS UPJANG, /*업장코드*/
                      DECODE(HEAD_CREDIT_YN, 'Y', MAIN_UPJANG, UPJANG) AS UPJANG2      
				FROM SO_PR A,
				     FMS_UPJANG B
				WHERE A.RC_UPJANG = B.UPJANG
				AND NEED_DATE  BETWEEN TO_CHAR(TO_DATE( :schSaleDate   ,'YYYYMMDD')-120,'YYYYMMDD') AND TO_CHAR(TO_DATE(  :schSaleDate  ,'YYYYMMDD')+31,'YYYYMMDD')
			UNION ALL
			SELECT  DISTINCT B.UPJANG  AS UPJANG, /*업장코드*/
			        DECODE(HEAD_CREDIT_YN, 'Y', MAIN_UPJANG, UPJANG) AS UPJANG2 
			FROM   FMS_TRANSACTION A,
			       FMS_UPJANGV B  
			WHERE A.TRANS_UPJANG = B.UPJANG
			AND A.TRANS_DATE = :schSaleDate 

		</#if>  
       	 ]]></statement>

	<!-- 일마감관리 선택된 FMS_SALES 데이터를 삭제전 duplication check 한다 -->
	<statement name="fmssalesDupCheck" type="select">
		/*+ com.hwfs.fm.fmf.dao.DayCloseMngtDAO.fmssalesDupCheck */
		<![CDATA[
			SELECT DECODE(COUNT(1), 0, 'TRUE', 'FALSE') AS CHK FROM SLA_IF_UPJANG_SALS_DETAIL
				WHERE UPJANG_CD = :upjang2
			 	AND OCCUR_DATE = :saleDate
		    	AND RECEIPT_NUM = :upjang || '-' || :subinvCode || '-' || :saleDate
				AND SYS_CLASS = '13'
				AND RECD_STATUS = 'L'
		]]>
	</statement>

</hqml>
