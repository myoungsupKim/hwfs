<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="fm.fms.smsSendMgmtDAO">
	<desc>SMS발송관리 HQML Query</desc>
	<statement name="selectList" type="select"><![CDATA[
	/*+ com.hwfs.fm.fms.smsSendMgmtDAO.selectList */
	SELECT *
	  FROM (SELECT '0' AS CHK
	             , UJ.MAIN_UPJANG
	             , NVL((SELECT UPJANGNM_DISP FROM FMS_UPJANG WHERE UPJANG = UJ.MAIN_UPJANG), UJ.UPJANGNM) AS MAIN_UPJANG_NM
	             , UJ.UPJANG
	             , UJ.UPJANGNM AS UPJANG_NM
	             , UJ.CUST_TYPE
	             , UJ.USE_YN
	             , UJ.CUSTCD
	             , HST.CUSTNM
	             , CASE WHEN UJ.MAIN_UPJANG=UJ.UPJANG THEN '본사'
	               ELSE '사업장' END AS UPJANG_TYPE
	             , DECODE(HR1.SABUN, NULL, '', HR1.NM_KOR || '(' || HR1.SABUN || ')') AS CS_SABUN_NM
	             , UJ.PART_SALES_TEL_NO
	             , DECODE(HR2.SABUN, NULL, '', HR2.NM_KOR || '(' || HR2.SABUN || ')') AS PART_SALES_SABUN_NM
	             , SCC_CRYPTO.DEC_FUN(UJ.CS_TEL_NO_ENC) AS CS_TEL_NO
	             , UJC.PART_NAME
	             , SCC_CRYPTO.DEC_FUN(UJC.CUST_HP_NO_ENC) AS CUST_HP_NO
	             , ROWNUM
	          FROM FMS_UPJANG_V UJ
	             , HLDC_ST_UPJANG HUJ
	             , HLDC_ST_CUST HST
	             , SCC_CC CC
	             , FMS_UPJANG_CUST UJC
	             , HLDC_HR_PERSONAL HR1
	             , HLDC_HR_PERSONAL HR2
	         WHERE 1=1
	           AND UJ.BO_CC_CD = CC.CC_CD
	           AND UJ.CS_SABUN = HR1.SABUN(+)
	           AND UJ.PART_SALES_SABUN = HR2.SABUN(+)
	           AND UJ.UPJANG = HUJ.UPJANG
	           AND HUJ.CUSTCD = HST.CUSTCD
	           AND UJ.UPJANG = UJC.UPJANG
	           AND HUJ.UPJANG = UJC.UPJANG
	           <#if mainYn == "Y">
					AND 	UJC.MAIN_YN = 'Y'
	    	   <#elseif mainYn == "N">
	    			AND 	UJC.MAIN_YN <> 'Y'
	    	   <#else>
	    	   </#if>
	           AND UJ.USE_YN = 'Y'
	           <#if loginSabunYn == '1'>
	           AND (UJ.CS_SABUN = :sabun OR UJ.PART_SALES_SABUN = :sabun)
	           </#if>
	       )
	 WHERE 1=1
	<#if mainUpjangNm?has_content>
	AND (MAIN_UPJANG_NM LIKE '%' || :mainUpjangNm || '%' )
	</#if>
	<#if upjangNm?has_content>
	AND (UPJANG_NM LIKE '%' || :upjangNm || '%' )
	</#if>
	<#if custType?has_content>
	AND CUST_TYPE = :custType
	</#if>
	<#if empNm?has_content>
	AND (CUSTNM || ' ' || PART_SALES_SABUN_NM LIKE '%' || :empNm || '%'
	OR CS_SABUN_NM LIKE '%' || :empNm || '%')
	</#if>
	<#if centerCode?has_content>
	AND UPJANG IN (SELECT UPJANG FROM VO_CENTER_UPJANG WHERE CENTER_CODE = :centerCode)
	</#if>
	ORDER BY UPJANG
]]></statement>
	<statement name="selectCustList" type="select"><![CDATA[SELECT 
	   (CASE WHEN A.MAIN_YN = 'Y' THEN
	   		<#if chk?has_content>
	   			'1'
	   		<#else>
	   			'0'
	   		</#if>
       ELSE
	  	'0'
       END) AS CHK,
	   A.UPJANG,
	   B.UPJANGNM,
       A.UPJANG_NO,
       A.GUBUN,
       SCC_CRYPTO.MASKAUTH_FUN (A.PART_NAME,12,'YYYYNNYYYYYNNNN', '0')      AS PART_NAME,
       SCC_CRYPTO.MASKAUTH_FUN (A.CUST_TEL_NO_ENC,9,'YYYYNNYYYYYNNNN', '0') AS CUST_TEL_NO,
       SCC_CRYPTO.MASKAUTH_FUN (A.CUST_HP_NO_ENC,9,'YYYYNNYYYYYNNNN', '0')  AS CUST_HP_NO,
       SCC_CRYPTO.MASKAUTH_FUN (A.CUST_FAX_NO_ENC,9,'YYYYNNYYYYYNNNN', '0') AS CUST_FAX_NO,
       SCC_CRYPTO.MASKAUTH_FUN (A.CUST_EMAIL_ENC,7, 'YYYYNNYYYYYNNNN', '0') AS CUST_EMAIL,
       A.DEPT_ID,
       A.CONT_SALES_SABUN,
       A.PART_SALES_SABUN,
       --A.PART_SALES_TEL_NO,
       SC_CRYPTO_FUN('DEC', A.PART_SALES_TEL_NO_ENC) AS PART_SALES_TEL_NO,
       A.CS_SABUN,
       --A.CS_TEL_NO,
       SC_CRYPTO_FUN('DEC', A.CS_TEL_NO_ENC) AS CS_TEL_NO,
       A.CUST_TEL_NO_ENC,
       A.CUST_HP_NO_ENC,
       A.PART_SALES_TEL_NO_ENC,
       A.CS_TEL_NO_ENC,
       A.CUSER,
       A.CDATE,
       A.UUSER,
       A.UDATE,
       (SELECT V.CC_NM
       FROM    HLDC_SC_DEPT_V V
       WHERE   A.DEPT_ID = V.DEPT_ID
       )
       AS DEPT_ID_NM,
       (SELECT S.NM_KOR
       FROM    HLDC_HR_PERSONAL S
       WHERE   A.CONT_SALES_SABUN = S.SABUN
       )
       AS CONT_SALES_SABUN_NM,
       (SELECT S.NM_KOR
       FROM    HLDC_HR_PERSONAL S
       WHERE   A.PART_SALES_SABUN = S.SABUN
       )
       AS PART_SALES_SABUN_NM,
       (SELECT S.NM_KOR
       FROM    HLDC_HR_PERSONAL S
       WHERE   A.CS_SABUN = S.SABUN
       )
       AS CS_SABUN_NM,
       A.MAIN_YN,
       '0001' AS GROUP_CD -- SMS발송관리화면
FROM   FMS_UPJANG_CUST A, ST_UPJANG B
WHERE  1=1
AND	   A.UPJANG = B.UPJANG
AND    A.GUBUN  = 1
<#if ujUpjang?has_content>
AND	   A.UPJANG = :ujUpjang
</#if> ]]></statement>
	<statement name="selectSmsLogList" type="select"><![CDATA[
	SELECT 
	      A.UPJANG_CD, 
	      B.UPJANGNM,
	      SC_CRYPTO_FUN('DEC', SEND_HP_NO_ENC) AS SEND_HP_NO,
	      SC_CRYPTO_FUN('DEC', CALLBACK_HP_NO_ENC) AS CALLBACK_NO,
	      A.SEND_USER_ID,
	      C.NM_KOR,
	      A.SEND_DATE,
	      A.CONTENTS,
	      A.REV_USER_NM,
	      A.ATTR01
	      FROM SCC_SMS_LOG A, ST_UPJANG B, SCC_USERINFO C
	      WHERE 1=1
	      AND A.UPJANG_CD = B.UPJANG
	      AND A.SEND_USER_ID = C.SABUN
	      AND A.SEND_USER_ID = :trSendUser
      <#if logUpjang?has_content>
      	AND B.UPJANG IN ( SELECT UPJANG FROM ST_UPJANG WHERE UPJANGNM LIKE '%' || :logUpjang || '%' )
      </#if>
      
      <#if logFrDate?has_content>
      	AND SEND_DATE BETWEEN TO_DATE(:logFrDate||'0000', 'YYYYMMDD HH24MI') AND TO_DATE(:logToDate||'2359', 'YYYYMMDD HH24MI')
	  </#if>
	  
	  <#if logTelNum?has_content>
	  	AND SC_CRYPTO_FUN('DEC', A.SEND_HP_NO_ENC) LIKE '%' || :logTelNum || '%'
	  </#if>
	  ORDER BY A.SEND_DATE DESC
	  ]]></statement>
	<statement name="insertSmsLog" type="insert"><![CDATA[INSERT INTO SCC_SMS_LOG (
		SEQ
		,CALLBACK_HP_NO_ENC
		,CONTENTS
		,SEND_DATE
		,SEND_HP_NO_ENC
		,SEND_USER_ID
		,UPJANG_CD
		,REV_USER_NM
		,ATTR01
)
VALUES
(
		SCC_SMS_LOG_S.NEXTVAL
		,SCC_CRYPTO.ENC_FUN(:trCallback)
		,:trMsg
		,:trSendDate
		,SCC_CRYPTO.ENC_FUN(:custHpNo)
		,:trSendUser
		,:upjang
		,:partName
		,:trType
)
		]]></statement>
		
		<!-- statement name="selectLmsMgmtList" type="select">
		<![CDATA[
			/*+ com.hwfs.fm.fms.smsSendMgmtDAO.selectLmsMgmtList */
			SELECT 
				'0' AS CHK
				, A.REQ_SEQ
				, A.REQ_DATE
				, A.REQ_TIME
				, (SELECT X.NM_KOR FROM SCC_USERINFO X WHERE X.SABUN = A.SABUN) AS NM_KOR
				, A.SABUN
				, D.TM_NM
				, REPLACE(SC_CRYPTO_FUN('DEC', A.HP_NO_ENC), '-', '') AS HP_NO
				, REPLACE(SC_CRYPTO_FUN('DEC', A.CALLBACK_ENC), '-', '') AS CALLBACK_NO
				, A.MSG_CONTENTS
				, A.REQ_STATUS
				, SCC_GET_LMS_STATUS(A.REQ_DATE, A.REQ_TIME, 'ETC1', A.REQ_SEQ) AS STATUS
				, CASE WHEN A.REQ_DATE || A.REQ_TIME >= TO_CHAR(SYSDATE, 'YYYYMMDDHH24MI') THEN 'Y'
					ELSE 'N' END AS EDIT_YN
			FROM FSA_WORK_SMS A
				, SCC_USERINFO B
				, HLDC_ST_UPJANG C
				, HLDC_SC_DEPT_V D
			WHERE A.REQ_DATE = :schReqDt
			AND A.SABUN = B.SABUN
			AND B.UPJANG = C.UPJANG
			AND C.DEPT_ID = D.DEPT_ID
			AND D.BU_CD = '2000'
			<#if schReqTm?has_content>
			AND A.REQ_TIME = :schReqTm
			</#if>
			<#if schMuCd?has_content>
			AND D.MU_CD = :schMuCd
			</#if>
			<#if schTmCd?has_content>
			AND D.TM_CD = :schTmCd
			</#if>
			<#if schUpjang?has_content>
			AND A.UPJANG = :schUpjang
			</#if>
			<#if schUserTxt?has_content>
				<#if schUserGnb == "name">
				AND A.KOR_NM LIKE '%' || :schUserTxt || '%'
				<#elseif schUserGnb == "sabun">
				AND A.SABUN = :schUserTxt
				</#if>
			</#if>
	  ]]></statement>
	  
	  <statement name="insertLmsMgmt" type="insert">
	  <![CDATA[
			INSERT INTO FSA_WORK_SMS (
					REQ_SEQ
					, REQ_DATE
					, REQ_TIME
					, SABUN
					, HP_NO_ENC
					, CALLBACK_ENC
					, MSG_CONTENTS
					, REQ_STATUS
					, CDATE
					, CUSER
					, UDATE
					, UUSER
			) VALUES (
				FSA_WORK_SMS_S.NEXTVAL
				, :reqDate
				, :reqTime
				, :sabun
				, SCC_CRYPTO.ENC_FUN(:hpNo)
				, SCC_CRYPTO.ENC_FUN(:callbackNo)
				, :msgContents
				, :reqStatus
				, SYSDATE
				, :schLoginSabun
				, SYSDATE
				, :schLoginSabun
			)
		]]>
		</statement>
		
		<statement name="updateLmsMgmt" type="update">
		<![CDATA[
			UPDATE FSA_WORK_SMS
				SET HP_NO_ENC = SCC_CRYPTO.ENC_FUN(:hpNo)
					, CALLBACK_ENC = SCC_CRYPTO.ENC_FUN(:callbackNo)
					, MSG_CONTENTS = :msgContents
					, UDATE = SYSDATE
					, UUSER = :schLoginSabun
				WHERE REQ_SEQ = :reqSeq
		]]>
		</statement>
		
		<statement name="deleteLmsMgmt" type="delete">
		<![CDATA[
			DELETE FROM FSA_WORK_SMS
				WHERE REQ_SEQ = :reqSeq
		]]>
		</statement>
		
		<statement name="deleteLmsMgmtOneDay" type="delete">
		<![CDATA[
			DELETE FROM FSA_WORK_SMS
				WHERE REQ_DATE = :schReqDt
				AND 1=1
		]]>
		</statement  -->
</hqml>
