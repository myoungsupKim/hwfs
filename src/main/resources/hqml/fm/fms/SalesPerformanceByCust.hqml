<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="fm.fms.salesPerformanceByCustDAO">
	<desc>거래처별 매출실적조회 HQML Query</desc>
	
	<!--거래처별월매출을 조회한다. -->
	<statement name="selectPeriod" type="select">
		<![CDATA[
			/*+ com.hwfs.fm.fms.dao.SalesPerformanceByCustDAO.selectPeriod */
			SELECT LISTAGG(TO_CHAR(MONTH , 'YYYYMM'), ', ') WITHIN GROUP ( ORDER BY MONTH DESC ) AS P_DATE
					FROM (SELECT ADD_MONTHS(DAY1, (LEVEL -1))  AS MONTH 
					        FROM (SELECT TO_DATE(:schTransDtFr, 'YYYYMM') DAY1 
					                    ,TO_DATE(:schTransDtTo, 'YYYYMM') DAY2 
					                FROM DUAL) 
					      CONNECT BY LEVEL <=  ABS(MONTHS_BETWEEN(DAY1, DAY2 )) + 1)
		]]>
	</statement>
	
	<!-- 매출집계정보 조회 -->
	<statement name="selectMaxDt" type="select">
		<![CDATA[
		/*+ com.hwfs.fm.fms.dao.SalesPerformanceByCustDAO.selectMaxDt */
		SELECT MAX(A.TRANS_DATE) AS LST_DT 
				FROM FMS_BUY_SALE_SUM A 
	    ]]>
	</statement>
	
	<!-- 업장 목록을 조회한다. -->
	<statement name="selectList" type="select">
		
		<![CDATA[
		/*+ com.hwfs.fm.fms.dao.SalesPerformanceByCustDAO.selectList */
		SELECT X.MAIN_UPJANG
			   , (SELECT UPJANGNM_DISP FROM FMS_UPJANG WHERE UPJANG = X.MAIN_UPJANG AND ROWNUM = 1) AS MAIN_UPJANG_NM
			   , X.UPJANG
			   , Y.UPJANGNM_DISP AS UPJANG_NM
			   , X.TRANS_DATE
			   , Y.PART_SALES_SABUN
			   , (SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = Y.PART_SALES_SABUN) AS SALES_NM
			   , (SELECT F.TM_CD FROM ST_UPJANG E, HLDC_SC_DEPT_V F WHERE E.CC_CD = F.CC_CD AND E.UPJANG = TO_NUMBER(X.UPJANG) ) AS TM_CD
			   , (SELECT F.TM_NM FROM ST_UPJANG E, HLDC_SC_DEPT_V F WHERE E.CC_CD = F.CC_CD AND E.UPJANG = TO_NUMBER(X.UPJANG) ) AS TM_NM
			   , X.PRE_SALE_AMOUNT
			   , X.PRE_UNIT_AMOUNT
			   , CASE WHEN X.PRE_SALE_AMOUNT = 0 THEN 0
			     ELSE ROUND((X.PRE_UNIT_AMOUNT/X.PRE_SALE_AMOUNT) * 100, 2)
			     END AS RATIO 
			    FROM (
			<#if schCurDt?has_content>
			SELECT
					TO_CHAR(T.MAIN_UPJANG) AS MAIN_UPJANG
				  , T.UPJANG
				  <#if schViewType = 'M'>
				  	, SUBSTR(TRANS_DATE,1,6) AS TRANS_DATE
				  <#else>
					, TRANS_DATE
				  </#if>
				  , SUM(DECODE(SUBSTR(TRANS_TYPE,1,1),'I',1,-1) * ROUND(SALE_PRICE * TRANS_QTY)) AS PRE_SALE_AMOUNT 
				  , SUM(DECODE(SUBSTR(TRANS_TYPE,1,1),'I',1,-1) * ROUND(SALE_PRICE * TRANS_QTY)) - SUM(ROUND(TRANS_MAMOUNT * DECODE(SUBSTR(TRANS_TYPE,1,1), 'I', 1, -1))) AS PRE_UNIT_AMOUNT
					FROM ( 
							SELECT /*+ PUSH_PRED(A) */
									(SELECT MAIN_UPJANG FROM FMS_UPJANG WHERE UPJANG = A.TRANS_UPJANG AND ROWNUM = 1 ) AS MAIN_UPJANG	
								  , A.TRANS_UPJANG AS UPJANG
								  , A.TRANS_DATE
								  , A.TRANS_TYPE
								  , A.TRANS_QTY
								  <#if schPriceGnb = '2'>
								  , NVL(A.UNIT_PRICE, 0) AS TRANS_MPRICE
						  		  , NVL(A.UNIT_AMOUNT, 0) AS TRANS_MAMOUNT
								  <#else>
								  , NVL(A.TRANS_MPRICE, 0) AS TRANS_MPRICE
								  , NVL(A.TRANS_MAMOUNT, 0) AS TRANS_MAMOUNT
								  </#if>
								  , NVL(A.SALE_PRICE, 0) AS SALE_PRICE
								  , NVL(A.SALE_AMOUNT,0) AS SALE_AMOUNT
								  , A.TAX_CODE
						  		FROM FMS_TRANSACTION_V A, FMS_UPJANG B, HLDC_SC_DEPT_V C
								WHERE SUBSTR(A.SUBINV_CODE, 1, 2) = 'S1'
								AND (A.TRANS_TYPE IN '_002' OR A.TRANS_TYPE = 'I001' )
								AND A.TRANS_DATE2 BETWEEN :schCurDtS AND :schTransDtTo
								AND A.TRANS_UPJANG = TO_CHAR(B.UPJANG)
								AND B.DEPT_ID = C.CC_CD
								<#if schMainUpjangCd?has_content>
								AND B.MAIN_UPJANG = TO_NUMBER(:schMainUpjangCd)
								</#if>
								<#if schUpjangCd?has_content>
								AND A.TRANS_UPJANG = :schUpjangCd
								</#if>
								<#if schPartSalesSabun?has_content>
								AND B.PART_SALES_SABUN = :schPartSalesSabun
								</#if>
								<#if schTmCd?has_content>
								AND C.TM_CD = :schTmCd
								</#if>
								<#if schCenterCd != "*">
								AND A.CENTER_CODE = :schCenterCd
								</#if>
					) T  GROUP BY T.MAIN_UPJANG, T.UPJANG
					<#if schViewType = 'M'>
					, SUBSTR(T.TRANS_DATE, 1, 6)
					<#else>
					, T.TRANS_DATE
					</#if>
					
				
			UNION ALL
			</#if>
		
			SELECT A.MAIN_UPJANG
					, A.UPJANG
					<#if schViewType = 'M'>
					, SUBSTR(A.TRANS_DATE, 1, 6) AS TRANS_DATE
					<#else>
					, A.TRANS_DATE
					</#if>
					
					<#if schPriceGnb = '2'>
					, SUM(A.SALE_TOT) AS PRE_SALE_AMOUNT
					, SUM(A.SALE_TOT) - SUM(A.UNIT_SUM) AS PRE_UNIT_AMOUNT
					<#else>
					, SUM(A.SALE_TOT) AS PRE_SALE_AMOUNT
					, SUM(A.SALE_TOT) - SUM(A.TRANS_SUM) AS PRE_UNIT_AMOUNT
					</#if>
					
					FROM FMS_BUY_SALE_SUM A, FMS_UPJANG B, HLDC_SC_DEPT_V C
					WHERE A.TRANS_DATE BETWEEN :schTransDtFr AND :schCurDtE
					AND A.UPJANG = TO_CHAR(B.UPJANG)
					AND A.DEPT_ID = C.CC_CD
					AND B.DEPT_ID = C.DEPT_ID
					<#if schMainUpjangCd?has_content>
						AND A.MAIN_UPJANG = :schMainUpjangCd
					</#if>
					<#if schUpjangCd?has_content>
						AND A.UPJANG = :schUpjangCd
					</#if>
					<#if schPartSalesSabun?has_content>
						AND B.PART_SALES_SABUN = :schPartSalesSabun
					</#if>
					<#if schTmCd?has_content>
						AND C.TM_CD = :schTmCd
					</#if>
					<#if schCenterCd != "*">
						AND A.CENTER_CODE = :schCenterCd
					</#if>
					GROUP BY A.MAIN_UPJANG, A.UPJANG
					<#if schViewType = 'M'>
					, SUBSTR(A.TRANS_DATE, 1, 6)
					<#else>
					, A.TRANS_DATE
					</#if>
		) X, FMS_UPJANG Y
		WHERE X.UPJANG = TO_CHAR(Y.UPJANG)
		<#if schUpjangCd?has_content>
		AND Y.UPJANG = TO_CHAR(:schUpjangCd)
		</#if>
		ORDER BY TM_CD, Y.PART_SALES_SABUN, TRANS_DATE, X.MAIN_UPJANG, X.UPJANG
		]]>
	</statement>
</hqml>

