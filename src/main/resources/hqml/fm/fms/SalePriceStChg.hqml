<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="fm.fms.salePriceStChgDAO">
	<desc>판매단가 강제변경 HQML Query</desc>

	<!-- 판매단가 강제변경 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.fm.fms.dao.SalePriceStChgDAO.selectList */
		<![CDATA[
		SELECT 
				X.*
			  , (CASE WHEN X.TRANS_CNT > 0 THEN 'Y' ELSE 'N' END) AS TRANS_YN 			
	FROM (
		SELECT
	  		  A.RC_UPJANG AS UPJANG
			, Z.UPJANGNM AS UPJANG_NM
			, A.SUBINV_CODE
			, DECODE(S.USE_YN,'N','폐장') || A.SUBINV_CODE || ' ' || S.SUBINV_NAME AS SUBINV_NAME
			, TO_CHAR(TO_DATE(A.NEED_DATE,'YYYYMMDD'),'YYYY-MM-DD') AS NEED_DATE
			, A.ITEM_CODE
			, A.ITEM_NAME
			, A.ITEM_SIZE
			, A.PO_UOM AS ITEM_UNIT
			, A.SALE_PRICE
        	, PO_GETFMSALEPRICE_FUN(A.NEED_DATE,A.RC_UPJANG,A.ITEM_CODE,A.CENTER_CODE) AS SALE_PRICE2
        	, A.SO_STATUS AS LINE_STATUS
			, NVL(C.CODE_NAME,'') AS LINE_STATUS_NM		 
			, M.MAIN_UPJANG 
			, :schDate1 AS NEED_DATE1
			, :schDate1 AS NEED_DATE2
            , (SELECT COUNT(*) FROM FMS_SALES WHERE UPJANG = A.RC_UPJANG AND SALE_DATE = A.NEED_DATE AND SUBINV_CODE = A.SUBINV_CODE AND TRANS_YN = 'Y') AS  TRANS_CNT
		FROM   SO_PR A INNER JOIN ST_UPJANG Z ON A.RC_UPJANG = Z.UPJANG
                  				INNER JOIN VO_SUBINVENTORY S ON (1=1)
																			<#if schSubinvCode?has_content>
																			  AND S.SUBINV_CODE = :schSubinvCode		/* 조건 : 창고코드 */
																			</#if>
																			  AND A.SUBINV_CODE = S.SUBINV_CODE
                  				INNER JOIN FMS_UPJANG M ON (1=1)
																	<#if schMainUpjang?has_content>
																	 AND	M.MAIN_UPJANG = :schMainUpjang				/* 조건 : 본사 */
																	 </#if>
																	<#if schUpjang?has_content>
																	 AND	M.UPJANG = :schUpjang								/* 조건 : 업장 */
																	 </#if>
																	 AND  A.RC_UPJANG = M.UPJANG 
							  INNER JOIN SCC_COMMON_CODE C ON C.GROUP_CODE = 'FM0037'				/* 공통 : 구매라인상태 */
							    												  AND A.SO_STATUS = C.CODE
		WHERE  A.NEED_DATE BETWEEN :schDate1 AND :schDate2			/* 조건 : 기간(from, to) */
		<#if schSubinvCode?has_content>
		AND     A.SUBINV_CODE = :schSubinvCode
		<#else>
		AND  SUBSTR(A.SUBINV_CODE, 1, 2) = 'S1'
		</#if>
			) X
		ORDER BY 1, 2, 3, 4
		]]>
	</statement>

	<!-- 판매단가 강제변경(을)를 등록한다. -->
	<statement name="insert" type="insert"><![CDATA[
	
	INSERT INTO SAL_PRICE_TEMP (PR_NUM,PR_ID,ORI_SALE_PRICE,CHG_SALE_PRICE,PLANNING_PRICE,STRATEGY_PRICE,OP_PRICE,SUBSIDY_PRICE,PO_NO,PO_LNO,REMARK,PR_QTY,PO_QTY,RC_UPJANG, TAX_CODE)
	SELECT A.PR_NUM, A.PR_ID, A.SALE_PRICE AS ORI_SALE_PRICE
     , NVL(C.SALE_PRICE, 0) AS CHG_SALE_PRICE /*변경 판가*/
     , NVL(C.PLANNING_PRICE, 0) AS PLANNING_PRICE		/* 식재_기획단가 */
     , NVL(C.STRATEGY_PRICE, 0) AS STRATEGY_PRICE		/* 식재_전략단가 */
     , NVL(FMU_OP_PRICE_FUN(A.RC_UPJANG, A.ITEM_CODE, NVL(C.SALE_PRICE, 0), A.NEED_DATE),0) AS OP_PRICE  /* 운영단가 */
     , (CASE WHEN NVL((CASE WHEN A.TAX_CODE = '100' THEN FMS_ITEM_SALE_RATE_FUN(A.RC_UPJANG, A.SUBINV_CODE, '003', A.ITEM_CODE, A.NEED_DATE, 'SALE_RATE') 
							   ELSE FMS_ITEM_SALE_RATE_FUN(A.RC_UPJANG, A.SUBINV_CODE, '003', A.ITEM_CODE, A.NEED_DATE, 'NOSALE_RATE')
					   		   END), 0) = 0 THEN 0
				     ELSE 10 * CEIL(NVL(C.SALE_PRICE, 0) / (1 - (NVL((CASE WHEN A.TAX_CODE = '100' THEN FMS_ITEM_SALE_RATE_FUN(A.RC_UPJANG, A.SUBINV_CODE, '003', A.ITEM_CODE, A.NEED_DATE, 'SALE_RATE') 
                                                                           ELSE FMS_ITEM_SALE_RATE_FUN(A.RC_UPJANG, A.SUBINV_CODE, '003', A.ITEM_CODE, A.NEED_DATE, 'NOSALE_RATE')
                                                                           END), 0) / 100)) / 10)
				     END) AS SUBSIDY_PRICE	            /* 식재_장려단가*/
     , 'XXXXXXXXXXXXX' AS PO_NO
     , 'XXXX' AS PO_LNO
     , SUBSTR(A.REMARK, 1, 150) ||'기존매가 ' || TO_CHAR(A.SALE_PRICE) || ' 변경매가 '||  TO_CHAR(C.SALE_PRICE) || '>>>' || TO_CHAR(SYSDATE,'YYYYMMDD') || ' 매가 강제조정 ' || '가-전산팀' AS REMARK
     , PR_QTY
     , PO_QTY
     , A.RC_UPJANG
     , A.TAX_CODE
    FROM SO_PR A
        INNER JOIN ST_UPJANG B
        ON A.RC_UPJANG = B.UPJANG
        INNER JOIN PO_CONTRACT_FSALE C
        ON C.CENTER_CODE = A.CENTER_CODE
        AND C.UPJANG = B.AP_UNITPRICE_UPJANG
        AND C.ITEM_CODE = A.ITEM_CODE
        AND C.CONTRACT_START = FMS_GET_CONTRACT_START_FUN(A.CENTER_CODE, A.RC_UPJANG, 	A.ITEM_CODE, A.NEED_DATE)
        AND C.USE_YN          = 'Y'
         AND C.CONTRACT_PRICE > 0
         AND  C.SALE_PRICE     > 0
         AND  C.USE_YN         = 'Y' 
    WHERE A.NEED_DATE BETWEEN :schDate1 AND :schDate2
    AND     SUBSTR(A.SUBINV_CODE, 1, 2) = 'S1'
    AND A.SALE_PRICE <> C.SALE_PRICE
    AND  A.RC_UPJANG IN (SELECT Z.UPJANG 
                                 FROM FMS_UPJANG Z 
                                 WHERE (1=1)
								<#if schMainUpjang?has_content>
				    			   AND Z.MAIN_UPJANG = :schMainUpjang		/* 조건 : 본사 */
				 				</#if>
								<#if schUpjang?has_content>
				    				AND Z.UPJANG = :schUpjang						/* 조건 : 업장 */
				 				</#if>
                                
                                )
    AND    NOT EXISTS (SELECT 1
                             FROM FMS_SALES B
                             WHERE B.SALE_DATE = A.NEED_DATE
                             AND    B.UPJANG = A.RC_UPJANG
                             AND    B.SUBINV_CODE = A.SUBINV_CODE 
                             AND    B.TRANS_YN = 'Y' 
                            )
        ]]></statement>

	<!-- 판매단가 강제변경(을)를 수정한다. -->
	<!-- SO_PR = SALE_PRICE, REMARK -->
	<statement name="update_old" type="update">
		/*+ com.hwfs.fm.fms.dao.SalePriceStChgDAO.update_old */
		<![CDATA[
		UPDATE SO_PR A
		SET  A.SALE_PRICE = NVL(PO_GETFMSALEPRICE_FUN(A.NEED_DATE, A.RC_UPJANG, A.ITEM_CODE, A.CENTER_CODE), A.SALE_PRICE)
    		 , A.REMARK = SUBSTR(A.REMARK, 1, 200) || TO_CHAR(A.SALE_PRICE) || '>>>' || TO_CHAR(SYSDATE,'YYYYMMDD') || ' 매가 강제조정 ' || '가-전산팀'
 		WHERE A.NEED_DATE BETWEEN :schDate1 AND :schDate2
		<#if schSubinvCode?has_content>
		 AND     A.SUBINV_CODE = :schSubinvCode
		<#else>
		 AND  SUBSTR(A.SUBINV_CODE, 1, 2) = 'S1'
		</#if>
		 AND  A.RC_UPJANG IN (SELECT Z.UPJANG 
				    					  FROM FMS_UPJANG Z 
				    					  WHERE (1=1)
										<#if schMainUpjang?has_content>
				    					 AND Z.MAIN_UPJANG = :schMainUpjang		/* 조건 : 본사 */
				 						</#if>
										<#if schUpjang?has_content>
				    					 AND Z.UPJANG = :schUpjang						/* 조건 : 업장 */
				 						</#if>
				    					)
   		AND  A.SALE_PRICE <> NVL(PO_GETFMSALEPRICE_FUN(A.NEED_DATE, A.RC_UPJANG, A.ITEM_CODE, A.CENTER_CODE), A.SALE_PRICE)
		]]>
	</statement>

	<!-- 판매단가 강제변경(을)를 수정한다. -->
	<!-- SO_PR = SALE_PRICE, PLANNING_PRICE,  STRATEGY_PRICE,  SUBSIDY_PRICE, OP_PRICEREMARK -->
	<statement name="update" type="update"><![CDATA[UPDATE SO_PR P
   SET (P.SALE_PRICE,  P.PLANNING_PRICE,  P.STRATEGY_PRICE,  P.SUBSIDY_PRICE, P.OP_PRICE, P.REMARK) 
        = (SELECT X.CHG_SALE_PRICE, X.PLANNING_PRICE, X.STRATEGY_PRICE, X.SUBSIDY_PRICE, X.OP_PRICE, X.REMARK
             FROM SAL_PRICE_TEMP X
            WHERE X.PR_NUM = P.PR_NUM
              AND X.PR_ID = P.PR_ID
              AND X.PO_NO <> 'XXXXXXXXXXXXX' --혹시몰라서....
         )
 WHERE 1=1
   AND (PR_NUM , PR_ID) IN (
    SELECT PR_NUM, PR_ID
             FROM SAL_PRICE_TEMP X
            WHERE X.PO_NO <> 'XXXXXXXXXXXXX' --혹시몰라서....
   )
   ]]></statement>

	<!-- 판매단가 강제변경(을)를 수정한다. -->
	<!-- PO_PO = SALE_PRICE, REMARK -->
	<statement name="update1_old" type="update">
		/*+ com.hwfs.fm.fms.dao.SalePriceStChgDAO.update1_old */
		<![CDATA[
		UPDATE PO_PO A
		SET  A.SALE_PRICE = NVL(PO_GETFMSALEPRICE_FUN(A.NEED_DATE, A.RC_UPJANG, A.ITEM_CODE, A.CENTER_CODE), A.SALE_PRICE)
    		 , A.REMARK = SUBSTR(A.REMARK, 1, 200) || TO_CHAR(A.SALE_PRICE) || '>>>' || TO_CHAR(SYSDATE,'YYYYMMDD') || ' 매가 강제조정 ' || '가-전산팀'
		WHERE A.NEED_DATE BETWEEN :schDate1 AND :schDate2
		<#if schSubinvCode?has_content>
		 AND     A.SUBINV_CODE = :schSubinvCode
		<#else>
		 AND     SUBSTR(A.SUBINV_CODE, 1, 2) = 'S1'
		</#if>
		 AND  A.RC_UPJANG IN (SELECT Z.UPJANG 
				    					  FROM FMS_UPJANG Z 
				    					  WHERE (1=1)
										<#if schMainUpjang?has_content>
				    					  AND Z.MAIN_UPJANG = :schMainUpjang		/* 조건 : 본사 */
				 						</#if>
										<#if schUpjang?has_content>
				    					  AND Z.UPJANG = :schUpjang						/* 조건 : 업장 */
				 						</#if>
				    					)
		 AND A.SALE_PRICE <> NVL(PO_GETFMSALEPRICE_FUN(A.NEED_DATE, A.RC_UPJANG, A.ITEM_CODE, A.CENTER_CODE), A.SALE_PRICE)
		]]>
	</statement>



	<!-- 판매단가 강제변경(을)를 수정한다. (구) PO_PO -->
	<!-- EPROCUSR.ESPPODTSAL = SAL_PRICE, SAL_EVNT_PRICE, SAL_STRA_PRICE, SAL_ENCO_PRICE, SAL_OPER_PRICE -->
	<statement name="update1" type="update"><![CDATA[UPDATE EPROCUSR.ESPPODTSAL P
  SET (P.SAL_PRICE, P.SAL_EVNT_PRICE, P.SAL_STRA_PRICE, P.SAL_ENCO_PRICE, P.SAL_OPER_PRICE) 
          = (SELECT X.CHG_SALE_PRICE, X.PLANNING_PRICE, X.STRATEGY_PRICE, X.SUBSIDY_PRICE, X.OP_PRICE
                     FROM SAL_PRICE_TEMP X
                    WHERE X.PO_NO = P.PO_NO
                      AND X.PO_LNO = P.PO_LNO
                      AND X.PO_NO <> 'XXXXXXXXXXXXX' --혹시몰라서....
                 )
 WHERE 1=1
   AND P.SYS_ID = '100'
   AND P.COMP_CD = 'HFC'
   AND EXISTS (
                SELECT 1 FROM SAL_PRICE_TEMP Z WHERE Z.PO_NO = P.PO_NO AND Z.PO_LNO = P.PO_LNO AND Z.PO_NO <> 'XXXXXXXXXXXXX' --혹시몰라서....
   )
   ]]></statement>


	<!-- 판매단가 강제변경(을)를 수정한다. -->
	<!-- HLDC_PO_TRANSACTION_SALE = SALE_PRICE, REMARK -->
	<statement name="update2_old" type="update">
		/*+ com.hwfs.fm.fms.dao.SalePriceStChgDAO.update2_old */
		<![CDATA[
		UPDATE HLDC_PO_TRANSACTION_SALE A
		SET  A.SALE_PRICE = NVL(PO_GETFMSALEPRICE_FUN(A.TRANS_DATE, A.TRANS_UPJANG, A.ITEM_CODE, A.CENTER_CODE), A.SALE_PRICE)
    		 , A.SYS_REMARK = SUBSTR(A.SYS_REMARK, 1, 200) || TO_CHAR(A.SALE_PRICE) || '>>>' || TO_CHAR(SYSDATE,'YYYYMMDD') || ' 매가 강제조정 ' || '가-전산팀'
		WHERE A.TRANS_DATE BETWEEN :schDate1 AND :schDate2
		AND   (A.TRANS_TYPE = 'I001' OR (A.TRANS_TYPE LIKE '_002' AND A.SOURCE_TYPE = 'PO'))
		<#if schSubinvCode?has_content>
		AND    A.SUBINV_CODE = :schSubinvCode
		<#else>
		AND     SUBSTR(A.SUBINV_CODE, 1, 2) = 'S1'
		</#if>
		 AND   A.TRANS_UPJANG IN (SELECT Z.UPJANG 
				    							FROM FMS_UPJANG Z 
				    							WHERE (1=1)
												<#if schMainUpjang?has_content>
				    							AND Z.MAIN_UPJANG = :schMainUpjang		/* 조건 : 본사 */
				 								</#if>
												<#if schUpjang?has_content>
				    							AND Z.UPJANG = :schUpjang						/* 조건 : 업장 */
				 								</#if>
				    							)
 		AND A.SGANO = -1
 		AND A.SALE_PRICE <> NVL(PO_GETFMSALEPRICE_FUN(A.TRANS_DATE, A.TRANS_UPJANG, A.ITEM_CODE, A.CENTER_CODE), A.SALE_PRICE)
		]]>
	</statement>


	<!-- 판매단가 강제변경(을)를 수정한다. 구) PO_TRANSACTION-->
	<!-- HLDC_PO_TRANSACTION_SALE = SAL_PRICE, SAL_PRICE_AMT, SAL_EVNT_PRICE, SAL_STRA_PRICE, SAL_ENCO_PRICE, SAL_OPER_PRICE -->
	<statement name="update2" type="update"><![CDATA[UPDATE EPROCUSR.ESISALP P
  SET (P.SAL_PRICE, P.SAL_PRICE_AMT, P.SAL_EVNT_PRICE, P.SAL_STRA_PRICE, P.SAL_ENCO_PRICE, P.SAL_OPER_PRICE)
       = (SELECT B.CHG_SALE_PRICE
                , DECODE(MOD(A.MOVEMENT_TYP, 2), 1, DECODE(A.GR_QTY,NULL,A.GI_PURC_QTY,A.GR_PURC_QTY), DECODE(A.GR_QTY,NULL,A.GI_PURC_QTY,A.GR_PURC_QTY) * -1 ) * B.CHG_SALE_PRICE
                , B.PLANNING_PRICE, B.STRATEGY_PRICE, B.SUBSIDY_PRICE, B.OP_PRICE
                    FROM EPROCUSR.ESIMGDT A
                    INNER JOIN SAL_PRICE_TEMP B
                    ON A.PO_NO = B.PO_NO
                    AND A.PO_LNO = B.PO_LNO
                   WHERE A.SYS_ID = '100'
                     AND A.COMP_CD = 'HFC'
                     AND A.MG_NO = P.MG_NO
                 ) 
 WHERE P.SYS_ID = '100'
   AND P.COMP_CD = 'HFC'
   AND P.MG_NO IN (
        SELECT MG_NO
          FROM EPROCUSR.ESIMGDT A
         WHERE A.SYS_ID = '100'
           AND A.COMP_CD = 'HFC'
           AND EXISTS (
                        SELECT 1 FROM SAL_PRICE_TEMP Z WHERE Z.PO_NO = A.PO_NO AND Z.PO_LNO = A.PO_LNO AND Z.PO_NO <> 'XXXXXXXXXXXXX' --혹시몰라서....
           )
   )
   ]]></statement>



	<!-- 판매단가 강제변경(을)를 수정한다. : 사용 X -->
	<!-- HLDC_PO_TRANSACTION_SALE = SALE_AMOUNT -->
	<statement name="update3" type="update">
		/*+ com.hwfs.fm.fms.dao.SalePriceStChgDAO.update3 */
		<![CDATA[
		UPDATE HLDC_PO_TRANSACTION_SALE A
		SET A.SALE_AMOUNT = ROUND(A.SALE_PRICE * A.TRANS_QTY)
		WHERE A.TRANS_DATE BETWEEN :schDate1 AND :schDate2
		AND (A.TRANS_TYPE = 'I001' OR (A.TRANS_TYPE LIKE '_002' AND A.SOURCE_TYPE = 'PO'))
		<#if schSubinvCode?has_content>
		AND    A.SUBINV_CODE = :schSubinvCode
		<#else>
		AND     SUBSTR(A.SUBINV_CODE, 1, 2) = 'S1'
		</#if>
		AND   A.TRANS_UPJANG IN (SELECT Z.UPJANG 
				    							FROM FMS_UPJANG Z 
				    							WHERE (1=1)
												<#if schMainUpjang?has_content>
				    							AND Z.MAIN_UPJANG = :schMainUpjang		/* 조건 : 본사 */
				 								</#if>
												<#if schUpjang?has_content>
				    							AND Z.UPJANG = :schUpjang						/* 조건 : 업장 */
				 								</#if>
				    							)
		]]>
	</statement>


	<!-- 판매단가 강제변경(을)를 삭제한다. -->
	<statement name="delete" type="delete"><![CDATA[
		DELETE 
		FROM   SAL_PRICE_TEMP  ]]></statement>

	<statement name="updateTemp"><![CDATA[UPDATE SAL_PRICE_TEMP A
   SET (A.PO_NO, A.PO_LNO) = (SELECT X.PO_NO, X.PO_LNO
                              FROM EPROCUSR.ESPPODT X
                             WHERE X.SYS_ID = '100'
                               AND X.COMP_CD = 'HFC'
                               AND X.LEGCY_REQ_NO = A.PR_NUM
                               AND X.LEGCY_REQ_LNO = A.PR_ID
                               )
 WHERE A.PO_NO = 'XXXXXXXXXXXXX' --혹시몰라서....
 ]]></statement>
	<statement name="update_old2"><![CDATA[
			/* SO_PR UPDATE 문 시작 */
			UPDATE SO_PR P
			SET (P.SALE_PRICE,  P.PLANNING_PRICE,  P.STRATEGY_PRICE,  P.SUBSIDY_PRICE, P.OP_PRICE, P.REMARK) = 
			(SELECT
			  	  U.SALE_PRICE
				, U.PLANNING_PRICE
				, U.STRATEGY_PRICE
				, U.SUBSIDY_PRICE
				, U.OP_PRICE
				, SUBSTR(U.REMARK, 1, 200) || TO_CHAR(U.SALE_PRICE) || '>>>' || TO_CHAR(SYSDATE,'YYYYMMDD') || ' 매가 강제조정 ' || '가-전산팀'
			FROM 
			(
				SELECT
				    M.PR_ID																/* 주문신청_PR_ID */
			      , M.PR_NUM								        					/* 주문신청_PR_NUM */
			      , 	M.UPJANG															/* 주문신청_업장 */
			      , 	M.STD_UPJANG													/* 주문신청_단가계약업장 */
			      , M.CENTER_CODE													/* 주문신청_센터코드 */
			      , M.SUBINV_CODE													/* 주문신청_창고코드 */
			      , M.CUSTCD															/* 주문신청_거래처코드 */
			      , M.ITEM_CODE														/* 주문신청_자재코드 */
			      , M.NEED_DATE														/* 주문신청_입고일자 */
			      , M.TAX_CODE														/* 주문신청_과세코드 */
			      , M.ORI_SALE_PRICE												/* 주문신청_판매단가 */
			      , M.REMARK															/* 주문신청_비고 */
			      , NVL(F.SALE_PRICE, 0) AS SALE_PRICE						/* 식재_판매단가 */
			      , NVL(F.STRATEGY_PRICE, 0) AS STRATEGY_PRICE		/* 식재_전략단가 */
			      , NVL(F.PLANNING_PRICE, 0) AS PLANNING_PRICE		/* 식재_기획단가 */
--			      , NVL(F.OP_PRICE, 0) AS OP_PRICE							/* 식재_운영단가 */
		          , NVL(FMU_OP_PRICE_FUN(M.UPJANG, M.ITEM_CODE, NVL(F.SALE_PRICE, 0), M.NEED_DATE),0) AS OP_PRICE  /* 운영단가 */
			      , (CASE WHEN NVL(M.SUBSIDY_RATE, 0) = 0 THEN 0
				     ELSE 10 * CEIL(NVL(F.SALE_PRICE, 0) / (1 - (NVL(M.SUBSIDY_RATE, 0) / 100)) / 10)
				     END) AS SUBSIDY_PRICE										/* 식재_장려단가  */
				FROM 
						(
						SELECT
					  		  S.PR_ID
							, S.PR_NUM
							, S.UPJANG
							, S.STD_UPJANG
							, S.CENTER_CODE
							, S.SUBINV_CODE
							, S.CUSTCD
							, S.ITEM_CODE
							, S.NEED_DATE
							, S.TAX_CODE
							, S.ORI_SALE_PRICE
							, S.REMARK
							, FMS_GET_CONTRACT_START_FUN(S.CENTER_CODE, S.STD_UPJANG, 	S.ITEM_CODE, S.NEED_DATE) AS CONTRACT_START		/* 계약시작일자(PO_CONTRACT_FSALE) */
							, (CASE WHEN S.TAX_CODE = '100' THEN FMS_ITEM_SALE_RATE_FUN(S.UPJANG, S.SUBINV_CODE, '003', S.ITEM_CODE, S.NEED_DATE, 'SALE_RATE') 
							   ELSE FMS_ITEM_SALE_RATE_FUN(S.UPJANG, S.SUBINV_CODE, '003', S.ITEM_CODE, S.NEED_DATE, 'NOSALE_RATE')
					   		   END) AS SUBSIDY_RATE
						FROM 
								(
									SELECT 
						  			 	  A.PR_ID
										, A.PR_NUM
										, A.RC_UPJANG AS UPJANG
										, (SELECT AP_UNITPRICE_UPJANG FROM ST_UPJANG WHERE UPJANG = A.RC_UPJANG) AS STD_UPJANG
										, A.CENTER_CODE
										, A.SUBINV_CODE
										, A.CUSTCD
										, A.ITEM_CODE
										, A.NEED_DATE
										, A.TAX_CODE
										, A.SALE_PRICE AS ORI_SALE_PRICE
										, A.REMARK					/* 비고부분에 추가하기 위한 용도 */
									FROM SO_PR A
									WHERE A.NEED_DATE BETWEEN :schDate1 AND :schDate2
									<#if schSubinvCode?has_content>
		 							AND     A.SUBINV_CODE = :schSubinvCode
									<#else>
		   							AND     SUBSTR(A.SUBINV_CODE, 1, 2) = 'S1'
									</#if>
			 						AND  A.RC_UPJANG IN (SELECT Z.UPJANG 
				    					  					 		 FROM FMS_UPJANG Z 
				    					  					 		 WHERE (1=1)
																	<#if schMainUpjang?has_content>
				    					 					 		 AND Z.MAIN_UPJANG = :schMainUpjang		/* 조건 : 본사 */
				 													</#if>
																	<#if schUpjang?has_content>
				    					 					 		 AND Z.UPJANG = :schUpjang						/* 조건 : 업장 */
				 													</#if>
				    												)
									/*  판매단가와 현)판매단가가 다를 경우 */
									AND    A.SALE_PRICE <> NVL(PO_GETFMSALEPRICE_FUN(A.NEED_DATE, A.RC_UPJANG, A.ITEM_CODE, A.CENTER_CODE), A.SALE_PRICE)	
									/*  식재일마감 생성건 제외 */
									AND    NOT EXISTS (SELECT 1
																FROM FMS_SALES B
																WHERE B.SALE_DATE = A.NEED_DATE
																AND    B.UPJANG = A.RC_UPJANG
																AND    B.SUBINV_CODE = A.SUBINV_CODE
																AND    B.TRANS_YN = 'Y' 
																)
								) S 
						) M INNER JOIN PO_CONTRACT_FSALE F ON F.CONTRACT_PRICE > 0
										      								  AND F.SALE_PRICE > 0
										      								  AND M.CENTER_CODE = F.CENTER_CODE
										      								  AND M.STD_UPJANG  = F.UPJANG
										      								  --AND M.CUSTCD      = F.CUSTCD		
										      								  AND M.ITEM_CODE  = F.ITEM_CODE
										      								  AND M.CONTRACT_START = F.CONTRACT_START
			) U
			WHERE U.PR_ID = P.PR_ID)
			WHERE EXISTS (
									SELECT
												1	
									FROM 
											(
												SELECT
													  M.PR_ID											/* 주문신청_PR_ID */
						      						, M.PR_NUM								        /* 주문신청_PR_NUM */
						      						, M.UPJANG										/* 주문신청_업장 */
						      						, M.STD_UPJANG									/* 주문신청_단가업장 */
						      						, M.CENTER_CODE								/* 주문신청_센터코드 */
						      						, M.SUBINV_CODE								/* 주문신청_창고코드 */
						      						, M.CUSTCD										/* 주문신청_거래처코드 */
						      						, M.ITEM_CODE									/* 주문신청_자재코드 */
						      						, M.NEED_DATE									/* 주문신청_입고일자 */
						      						, M.TAX_CODE										/* 주문신청_과세코드 */
						      						, M.ORI_SALE_PRICE								/* 주문신청_판매단가 */
						      						, NVL(F.SALE_PRICE, 0) AS SALE_PRICE	/* 식재_판매단가 */
												FROM 
														(
															SELECT
								  									  S.PR_ID
																	, S.PR_NUM
																	, S.UPJANG
																	, S.STD_UPJANG
																	, S.CENTER_CODE
																	, S.SUBINV_CODE
																	, S.CUSTCD
																	, S.ITEM_CODE
																	, S.NEED_DATE
																	, S.TAX_CODE
																	, S.ORI_SALE_PRICE
																	, FMS_GET_CONTRACT_START_FUN(S.CENTER_CODE, S.STD_UPJANG, 	S.ITEM_CODE, S.NEED_DATE) AS CONTRACT_START		/* 계약시작일자(PO_CONTRACT_FSALE) */
															FROM 
																	(
																		SELECT 
									  										  A.PR_ID
																			, A.PR_NUM
																			, A.RC_UPJANG AS UPJANG
																			, (SELECT AP_UNITPRICE_UPJANG FROM ST_UPJANG WHERE UPJANG = A.RC_UPJANG) AS STD_UPJANG
																			, A.CENTER_CODE
																			, A.SUBINV_CODE
																			, A.CUSTCD
																			, A.ITEM_CODE
																			, A.NEED_DATE
																			, A.TAX_CODE
																			, A.SALE_PRICE AS ORI_SALE_PRICE
																		FROM SO_PR A
																		WHERE A.NEED_DATE BETWEEN :schDate1 AND :schDate2
																		<#if schSubinvCode?has_content>
		 																AND     A.SUBINV_CODE = :schSubinvCode
																		<#else>
																		AND     SUBSTR(A.SUBINV_CODE, 1, 2) = 'S1'
																		</#if>
			 															AND  A.RC_UPJANG IN (SELECT Z.UPJANG 
				    					  					 		 									 FROM FMS_UPJANG Z 
				    					  					 		 									 WHERE (1=1)
																										<#if schMainUpjang?has_content>
				    					 					 		 									 AND Z.MAIN_UPJANG = :schMainUpjang		/* 조건 : 본사 */
				 																						</#if>
																										<#if schUpjang?has_content>
				    					 					 		 									AND Z.UPJANG = :schUpjang							/* 조건 : 업장 */
				 																						</#if>
				    																					)
																		/*  판매단가와 현)판매단가가 다를 경우 */
																		AND    A.SALE_PRICE <> NVL(PO_GETFMSALEPRICE_FUN(A.NEED_DATE, A.RC_UPJANG, A.ITEM_CODE, A.CENTER_CODE), A.SALE_PRICE)	
																		/*  식재일마감 생성건 제외 */
																		AND    NOT EXISTS (SELECT 1
																									 FROM FMS_SALES B
																									 WHERE B.SALE_DATE = A.NEED_DATE
																									 AND    B.UPJANG = A.RC_UPJANG
																									 AND    B.SUBINV_CODE = A.SUBINV_CODE 
																									 AND    B.TRANS_YN = 'Y' 
																									)
																		) S 
													) M INNER JOIN PO_CONTRACT_FSALE F ON F.CONTRACT_PRICE > 0
													      												  AND F.SALE_PRICE > 0
													      												  AND M.CENTER_CODE = F.CENTER_CODE
													      												  AND M.STD_UPJANG  = F.UPJANG
													      												  --AND M.CUSTCD      = F.CUSTCD
													      												  AND M.ITEM_CODE  = F.ITEM_CODE
													      												  AND M.CONTRACT_START = F.CONTRACT_START
										) U1
										WHERE P.PR_ID = U1.PR_ID
								)    /*  END EXISTS */
		]]></statement>
	<statement name="update1_old2"><![CDATA[
			UPDATE EPROCUSR.ESPPODTSAL P
			SET (P.SAL_PRICE, P.SAL_EVNT_PRICE, P.SAL_STRA_PRICE, P.SAL_ENCO_PRICE, P.SAL_OPER_PRICE) = 
			(SELECT
				  U.SALE_PRICE
				, U.PLANNING_PRICE
				, U.STRATEGY_PRICE
				, U.SUBSIDY_PRICE
				, U.OP_PRICE
			FROM 
			(
				SELECT
					  M.UPJANG															/* 업장 */
					, M.STD_UPJANG														/* 구매_단가업장 */
					, M.PO_NO																/* 구매_발주번호 */
					, M.PO_LNO															/* 구매_발주항번 */
					, M.CENTER_CODE													/* 구매_센터코드 */
					, M.TRANS_DATE														/* 구매_수불일자 */
					, M.ITEM_CODE														/* 구매_자재코드 */
					, M.CUSTCD															/* 구매_거래처코드 */
					, M.CONTRACT_START												/* 식재_단가개시일 */ 
					, M.ORI_SALE_PRICE													/* 구매_판매단가 */
					, NVL(F.SALE_PRICE, 0) AS SALE_PRICE						/* 식재_판매단가 */
					, NVL(F.STRATEGY_PRICE, 0) AS STRATEGY_PRICE			/* 식재_전략단가 */
					, NVL(F.PLANNING_PRICE, 0) AS PLANNING_PRICE		/* 식재_기획단가 */
					--, NVL(F.OP_PRICE, 0) AS OP_PRICE								/* 식재_운영단가 */
		          	, NVL(FMU_OP_PRICE_FUN(M.UPJANG, M.ITEM_CODE, NVL(F.SALE_PRICE, 0), M.TRANS_DATE),0) AS OP_PRICE  /* 운영단가 */
					, (CASE WHEN NVL(M.SUBSIDY_RATE, 0) = 0 THEN 0
					   ELSE 10 * CEIL(NVL(F.SALE_PRICE, 0) / (1 - (NVL(M.SUBSIDY_RATE, 0) / 100)) / 10)
					    END) AS SUBSIDY_PRICE										/* 식재_장려단가  */
				FROM 
						(
							SELECT
						  		  S.UPJANG
						  		, S.STD_UPJANG  
								, S.PO_NO
								, S.PO_LNO
								, S.CENTER_CODE
								, S.TRANS_DATE
								, S.SUBINV_CODE
								, S.CUSTCD
								, S.ITEM_CODE
								, S.TAX_CODE
								, S.ORI_SALE_PRICE
								, FMS_GET_CONTRACT_START_FUN(S.CENTER_CODE, S.STD_UPJANG, 	S.ITEM_CODE, S.TRANS_DATE) AS CONTRACT_START		/* 계약시작일자(PO_CONTRACT_FSALE) */
								, (CASE WHEN S.TAX_CODE = '100' THEN FMS_ITEM_SALE_RATE_FUN(S.UPJANG, S.SUBINV_CODE, '003', S.ITEM_CODE, S.TRANS_DATE, 'SALE_RATE') 
							       ELSE FMS_ITEM_SALE_RATE_FUN(S.UPJANG, S.SUBINV_CODE, '003', S.ITEM_CODE, S.TRANS_DATE, 'NOSALE_RATE')
						           END) AS SUBSIDY_RATE
							FROM
									(
										/* HLDC_PO_PO 에서 필요한 정보를 GET */
										SELECT   
							  				  A.RC_UPJANG AS UPJANG
											, (SELECT AP_UNITPRICE_UPJANG FROM ST_UPJANG WHERE UPJANG = A.RC_UPJANG) AS STD_UPJANG
											, A.PO_NO
											, A.PO_LNO
											, A.CENTER_CODE
											, A.NEED_DATE AS TRANS_DATE
											, A.SUBINV_CODE
											, A.CUSTCD
											, A.ITEM_CODE
											, A.TAX_CODE
											, A.SALE_PRICE AS ORI_SALE_PRICE
										FROM HLDC_PO_PO A 
										WHERE A.NEED_DATE BETWEEN :schDate1 AND :schDate2
										<#if schSubinvCode?has_content>
										AND    A.SUBINV_CODE = :schSubinvCode
										<#else>
										AND     SUBSTR(A.SUBINV_CODE, 1, 2) = 'S1'
										</#if>
		 								AND   A.RC_UPJANG IN (SELECT Z.UPJANG 
				    														    FROM FMS_UPJANG Z 
				    															WHERE (1=1)
																				<#if schMainUpjang?has_content>
				    															AND Z.MAIN_UPJANG = :schMainUpjang		/* 조건 : 본사 */
				 																</#if>
																				<#if schUpjang?has_content>
				    															AND Z.UPJANG = :schUpjang						/* 조건 : 업장 */
				 																</#if>
				    															)
										/* 판매단가와 현)판매단가가 다를 경우 */
										AND    A.SALE_PRICE <> NVL(PO_GETFMSALEPRICE_FUN(A.NEED_DATE, A.RC_UPJANG, A.ITEM_CODE, A.CENTER_CODE), A.SALE_PRICE)	
										/*  식재일마감 생성건 제외 */
										AND    NOT EXISTS (SELECT 1
																	FROM FMS_SALES B
																	WHERE B.SALE_DATE = A.NEED_DATE
																	AND    B.UPJANG = A.RC_UPJANG
																	AND    B.SUBINV_CODE = A.SUBINV_CODE 
																	AND    B.TRANS_YN = 'Y' 
																)
									) S 
						  ) M INNER JOIN PO_CONTRACT_FSALE F ON F.CONTRACT_PRICE > 0
										      									AND F.SALE_PRICE > 0
										      									AND M.CENTER_CODE = F.CENTER_CODE
										      									AND M.STD_UPJANG  = F.UPJANG
										      									--AND M.CUSTCD      = F.CUSTCD
										      									AND M.ITEM_CODE  = F.ITEM_CODE
										      									AND M.CONTRACT_START = F.CONTRACT_START
				) U
				WHERE U.PO_NO = P.PO_NO
				AND    U.PO_LNO = P.PO_LNO)
				WHERE EXISTS (
										SELECT
											1	
										FROM 
												(
													SELECT
									  						  M.UPJANG
								  							, M.STD_UPJANG 
															, M.PO_NO
															, M.PO_LNO
															, M.CENTER_CODE
															, M.TRANS_DATE
															, M.ITEM_CODE
															, M.CUSTCD
															, M.CONTRACT_START
															, M.ORI_SALE_PRICE		/* 원 수불기준 판매단가 */
															, F.SALE_PRICE
													FROM 
															(
																SELECT
										  							  S.UPJANG
										  							, S.STD_UPJANG 
																	, S.PO_NO
																	, S.PO_LNO
																	, S.CENTER_CODE
																	, S.TRANS_DATE
																	, S.SUBINV_CODE
																	, S.CUSTCD
																	, S.ITEM_CODE
																	, S.TAX_CODE
																	, S.ORI_SALE_PRICE
																	, FMS_GET_CONTRACT_START_FUN(S.CENTER_CODE, S.STD_UPJANG, 	S.ITEM_CODE, S.TRANS_DATE) AS CONTRACT_START		/* 계약시작일자(PO_CONTRACT_FSALE) */
																FROM
																		(
																			/* HLDC_PO_PO 에서 필요한 정보를 GET */
																		SELECT   
							  				  									  A.RC_UPJANG AS UPJANG
																				, (SELECT AP_UNITPRICE_UPJANG FROM ST_UPJANG WHERE UPJANG = A.RC_UPJANG) AS STD_UPJANG
																				, A.PO_NO
																				, A.PO_LNO
																				, A.CENTER_CODE
																				, A.NEED_DATE AS TRANS_DATE
																				, A.SUBINV_CODE
																				, A.CUSTCD
																				, A.ITEM_CODE
																				, A.TAX_CODE
																				, A.SALE_PRICE AS ORI_SALE_PRICE
																		FROM HLDC_PO_PO A 
																		WHERE A.NEED_DATE BETWEEN :schDate1 AND :schDate2
																		<#if schSubinvCode?has_content>
																		AND    A.SUBINV_CODE = :schSubinvCode
																		<#else>
																		AND     SUBSTR(A.SUBINV_CODE, 1, 2) = 'S1'
																		</#if>
		 																AND   A.RC_UPJANG IN (SELECT Z.UPJANG 
				    														    								FROM FMS_UPJANG Z 
				    																							WHERE (1=1)
																												<#if schMainUpjang?has_content>
				    																							AND Z.MAIN_UPJANG = :schMainUpjang		/* 조건 : 본사 */
				 																								</#if>
																												<#if schUpjang?has_content>
				    																							AND Z.UPJANG = :schUpjang						/* 조건 : 업장 */
				 																								</#if>
				    																							)
																		/* 판매단가와 현)판매단가가 다를 경우 */
																		AND    A.SALE_PRICE <> NVL(PO_GETFMSALEPRICE_FUN(A.NEED_DATE, A.RC_UPJANG, A.ITEM_CODE, A.CENTER_CODE), A.SALE_PRICE)
																		/*  식재일마감 생성건 제외 */
																		AND    NOT EXISTS (SELECT 1
																									 FROM FMS_SALES B
																									 WHERE B.SALE_DATE = A.NEED_DATE
																									 AND    B.UPJANG = A.RC_UPJANG
																									 AND    B.SUBINV_CODE = A.SUBINV_CODE 
																									 AND    B.TRANS_YN = 'Y' 
																									)
														 	) S 
												) M INNER JOIN PO_CONTRACT_FSALE F ON F.CONTRACT_PRICE > 0
														     										  AND F.SALE_PRICE > 0
														     										  AND M.CENTER_CODE = F.CENTER_CODE
														     										  AND M.STD_UPJANG  = F.UPJANG
														     										  --AND M.CUSTCD  = F.CUSTCD
														     										  AND M.ITEM_CODE  = F.ITEM_CODE
														     										  AND M.CONTRACT_START = F.CONTRACT_START
								) U1
								WHERE P.PO_NO = U1.PO_NO
								AND    P.PO_LNO = U1.PO_LNO            
							)   /*  END EXISTS */
		]]></statement>
	<statement name="update2_old2"><![CDATA[
			UPDATE EPROCUSR.ESISALP P
			SET (P.SAL_PRICE, P.SAL_PRICE_AMT, P.SAL_EVNT_PRICE, P.SAL_STRA_PRICE, P.SAL_ENCO_PRICE, P.SAL_OPER_PRICE) = 
			(SELECT
				  U.SALE_PRICE
				, ROUND(U.TRANS_QTY * U.SALE_PRICE) AS SALE_AMOUNT
				, U.PLANNING_PRICE
				, U.STRATEGY_PRICE
				, U.SUBSIDY_PRICE
				, U.OP_PRICE
			FROM 
			(
				SELECT
					  M.UPJANG															/* 업장 */
					, M.STD_UPJANG														/* 식재_단가업장 */
					, M.PO_NO																/* 구매_발주번호 */
					, M.PO_LNO															/* 구매_발주항번 */
					, M.TRANS_ID															/* 구매_수불번호 */
					, M.CENTER_CODE													/* 구매_센터코드 */	
					, M.TRANS_DATE														/* 구매_수불일자 */
					, M.ITEM_CODE														/* 구매_자재코드 */
					, M.CUSTCD															/* 구매_거래처코드 */
					, M.CONTRACT_START												/* 식재_단가시작일 */
					, NVL(M.TRANS_QTY, 0) AS TRANS_QTY						/* 구매_수량 */
					, M.ORI_SALE_PRICE													/* 구매_수불기준 판매단가 */
					, M.ORI_SALE_AMOUNT											/* 구매_수불기준 판매금액 */
					, NVL(F.SALE_PRICE, 0) AS SALE_PRICE						/* 식재_판매단가 */
					, NVL(F.STRATEGY_PRICE, 0) AS STRATEGY_PRICE			/* 식재_전략단가 */	
					, NVL(F.PLANNING_PRICE, 0) AS PLANNING_PRICE		/* 식재_기획단가 */
					--, NVL(F.OP_PRICE, 0) AS OP_PRICE								/* 식재_운영단가 */
		          	, NVL(FMU_OP_PRICE_FUN(M.UPJANG, M.ITEM_CODE, NVL(F.SALE_PRICE, 0), M.TRANS_DATE),0) AS OP_PRICE  /* 운영단가 */
					, (CASE WHEN NVL(M.SUBSIDY_RATE, 0) = 0 THEN 0
					  ELSE 10 * CEIL(NVL(F.SALE_PRICE, 0) / (1 - (NVL(M.SUBSIDY_RATE, 0) / 100)) / 10)
					  END) AS SUBSIDY_PRICE	 										/* 식재_장려단가 */
				FROM 
					(
						SELECT
						  		  S.UPJANG
								, S.STD_UPJANG
								, S.PO_NO
								, S.PO_LNO
								, S.TRANS_ID		/* 수불번호 */
								, S.CENTER_CODE
								, S.TRANS_DATE
								, S.SUBINV_CODE
								, S.CUSTCD
								, S.ITEM_CODE
								, S.TAX_CODE
								, S.TRANS_QTY
								, S.ORI_SALE_PRICE
								, S.ORI_SALE_AMOUNT
								, FMS_GET_CONTRACT_START_FUN(S.CENTER_CODE, S.STD_UPJANG, 	S.ITEM_CODE, S.TRANS_DATE) AS CONTRACT_START		-- 계약시작일자(PO_CONTRACT_FSALE)
								, (CASE WHEN S.TAX_CODE = '100' THEN FMS_ITEM_SALE_RATE_FUN(S.UPJANG, S.SUBINV_CODE, '003', S.ITEM_CODE, S.TRANS_DATE, 'SALE_RATE') 
							       ELSE FMS_ITEM_SALE_RATE_FUN(S.UPJANG, S.SUBINV_CODE, '003', S.ITEM_CODE, S.TRANS_DATE, 'NOSALE_RATE')
						   		   END) AS SUBSIDY_RATE
						FROM
						 		(
										/* 수불정보에서 필요한 정보를 GET */
										SELECT   
							  	  	  		  A.TRANS_UPJANG AS UPJANG
											, (SELECT AP_UNITPRICE_UPJANG FROM ST_UPJANG WHERE UPJANG = A.TRANS_UPJANG) AS STD_UPJANG
											, A.PO_NO
											, A.PO_LNO
											, A.TRANS_ID		/* 수불번호 */
											, A.CENTER_CODE
											, A.TRANS_DATE
											, A.SUBINV_CODE
											, A.CUSTCD
											, A.ITEM_CODE
											, A.TAX_CODE
											, A.TRANS_QTY 
											, A.SALE_PRICE AS ORI_SALE_PRICE
											, A.SALE_AMOUNT AS ORI_SALE_AMOUNT
										FROM HLDC_PO_TRANSACTION_SALE A 
										WHERE A.TRANS_DATE BETWEEN :schDate1 AND :schDate2
										<#if schSubinvCode?has_content>
										AND    A.SUBINV_CODE = :schSubinvCode
										<#else>
										AND     SUBSTR(A.SUBINV_CODE, 1, 2) = 'S1'
										</#if>
		 								AND   A.TRANS_UPJANG IN (SELECT Z.UPJANG 
				    														    FROM FMS_UPJANG Z 
				    															WHERE (1=1)
																				<#if schMainUpjang?has_content>
				    															AND Z.MAIN_UPJANG = :schMainUpjang		/* 조건 : 본사 */
				 																</#if>
																				<#if schUpjang?has_content>
				    															AND Z.UPJANG = :schUpjang						/* 조건 : 업장 */
				 																</#if>
				    															)
									    --AND    A.GANO = TO_CHAR(-1)			/* 전표 미처리 대상 */				    															
   									    --AND    A.GANO = 'N'			/* 전표 미처리 대상 */				    															
										/* 판매단가와 현)판매단가가 다를 경우 */
										AND    A.SALE_PRICE <> NVL(PO_GETFMSALEPRICE_FUN(A.TRANS_DATE, A.TRANS_UPJANG, A.ITEM_CODE, A.CENTER_CODE), A.SALE_PRICE)	
										/*  식재일마감 생성건 제외 */
										AND    NOT EXISTS (SELECT 1
																	FROM FMS_SALES B
																	WHERE B.SALE_DATE = A.TRANS_DATE
																	AND    B.UPJANG = A.TRANS_UPJANG
																	AND    B.SUBINV_CODE = A.SUBINV_CODE 
																	AND    B.TRANS_YN = 'Y' 
																	)
									) S 
							) M INNER JOIN PO_CONTRACT_FSALE F ON F.CONTRACT_PRICE > 0
											      								  AND F.SALE_PRICE > 0
											      								  AND M.CENTER_CODE = F.CENTER_CODE
											      								  AND M.STD_UPJANG  = F.UPJANG
											      								  --AND M.CUSTCD      = F.CUSTCD
											      								  AND M.ITEM_CODE  = F.ITEM_CODE
											      								  AND M.CONTRACT_START = F.CONTRACT_START
				) U
				WHERE U.TRANS_ID = P.MG_NO)
				WHERE EXISTS (
										SELECT
												1	
										FROM 
												(
													SELECT
									  					  M.UPJANG
														, M.STD_UPJANG
														, M.PO_NO
														, M.PO_LNO
														, M.TRANS_ID
														, M.TRANS_DATE
														, M.CENTER_CODE
														, M.ITEM_CODE
														, M.CUSTCD
														, M.CONTRACT_START
														, M.TRANS_QTY
														, M.ORI_SALE_PRICE				/* 원 수불기준 판매단가 */
														, M.ORI_SALE_AMOUNT		/* 원 수불기준 판매금액 */
														, F.SALE_PRICE
														, F.STRATEGY_PRICE
														, F.PLANNING_PRICE
														, F.OP_PRICE
														, (CASE WHEN NVL(M.SUBSIDY_RATE, 0) = 0 THEN 0
									   					   ELSE 10 * CEIL(NVL(F.SALE_PRICE, 0) / (1 - (NVL(M.SUBSIDY_RATE, 0) / 100)) / 10)
									    				  END) AS SUBSIDY_PRICE			        /* 장려단가 : 신규로 생성 */
													FROM 
														(
															SELECT
										  							  S.UPJANG
																	, S.STD_UPJANG
																	, S.PO_NO
																	, S.PO_LNO
																	, S.TRANS_ID		/* 수불번호 */
																	, S.TRANS_DATE
																	, S.CENTER_CODE
																	, S.SUBINV_CODE
																	, S.CUSTCD
																	, S.ITEM_CODE
																	, S.TAX_CODE
																	, S.TRANS_QTY
																	, S.ORI_SALE_PRICE
																	, S.ORI_SALE_AMOUNT
																	, FMS_GET_CONTRACT_START_FUN(S.CENTER_CODE, S.STD_UPJANG, 	S.ITEM_CODE, S.TRANS_DATE) AS CONTRACT_START		-- 계약시작일자(PO_CONTRACT_FSALE)
																	, (CASE WHEN S.TAX_CODE = '100' THEN FMS_ITEM_SALE_RATE_FUN(S.UPJANG, S.SUBINV_CODE, '003', S.ITEM_CODE, S.TRANS_DATE, 'SALE_RATE') 
											  							ELSE FMS_ITEM_SALE_RATE_FUN(S.UPJANG, S.SUBINV_CODE, '003', S.ITEM_CODE, S.TRANS_DATE, 'NOSALE_RATE')
																		END) AS SUBSIDY_RATE
															FROM
																	(
																		/* 수불정보에서 필요한 정보를 GET */
																		SELECT   
											  								  A.TRANS_UPJANG AS UPJANG
																			, (SELECT AP_UNITPRICE_UPJANG FROM ST_UPJANG WHERE UPJANG = A.TRANS_UPJANG) AS STD_UPJANG
																			, A.PO_NO
																			, A.PO_LNO
																			, A.TRANS_ID		/* 수불번호 */
																			, A.TRANS_DATE
																			, A.CENTER_CODE
																			, A.SUBINV_CODE
																			, A.CUSTCD
																			, A.ITEM_CODE
																			, A.TAX_CODE
																			, A.TRANS_QTY 
																			, A.SALE_PRICE AS ORI_SALE_PRICE
																			, A.SALE_AMOUNT AS ORI_SALE_AMOUNT
																		FROM HLDC_PO_TRANSACTION_SALE A 
																		WHERE A.TRANS_DATE BETWEEN :schDate1 AND :schDate2
																		<#if schSubinvCode?has_content>
																		AND    A.SUBINV_CODE = :schSubinvCode
																		<#else>
																		AND     SUBSTR(A.SUBINV_CODE, 1, 2) = 'S1'
																		</#if>
		 																AND   A.TRANS_UPJANG IN (SELECT Z.UPJANG 
				    														    								FROM FMS_UPJANG Z 
				    																							WHERE (1=1)
																												<#if schMainUpjang?has_content>
				    																							AND Z.MAIN_UPJANG = :schMainUpjang		/* 조건 : 본사 */
				 																								</#if>
																												<#if schUpjang?has_content>
				    																							AND Z.UPJANG = :schUpjang						/* 조건 : 업장 */
				 																								</#if>
				    																							)
									    								--AND    A.GANO = TO_CHAR(-1)			/* 전표 미처리 대상 */				    															
									   									--AND    A.GANO = 'N'			/* 전표 미처리 대상 */				    															
																		/* 판매단가와 현)판매단가가 다를 경우 */
																		AND    A.SALE_PRICE <> NVL(PO_GETFMSALEPRICE_FUN(A.TRANS_DATE, A.TRANS_UPJANG, A.ITEM_CODE, A.CENTER_CODE), A.SALE_PRICE)	
																		/*  식재일마감 생성건 제외 */
																		AND    NOT EXISTS (SELECT 1
																									FROM FMS_SALES B
																									WHERE B.SALE_DATE = A.TRANS_DATE
																									AND    B.UPJANG = A.TRANS_UPJANG
																									AND    B.SUBINV_CODE = A.SUBINV_CODE 
																									AND    B.TRANS_YN = 'Y' 
																									)
																	) S 
													) M INNER JOIN PO_CONTRACT_FSALE F ON F.CONTRACT_PRICE > 0
														      											  AND F.SALE_PRICE > 0
														      											  AND M.CENTER_CODE = F.CENTER_CODE
														      											  AND M.STD_UPJANG  = F.UPJANG
														      											  --AND M.CUSTCD      = F.CUSTCD
														      											  AND M.ITEM_CODE  = F.ITEM_CODE
														      											  AND M.CONTRACT_START = F.CONTRACT_START
										) U1
										WHERE P.MG_NO = U1.TRANS_ID
									)	/* END EXISTS */
		]]></statement>
	<statement name="selectTemp">
	<![CDATA[
	SELECT 
	  --PR_NUM이 B로 시작하는 경우 20190125 김호석
	  CASE WHEN SUBSTR(PR_NUM,1,1) = 'B' THEN SUBSTR(PR_NUM,2,8) 
	  ELSE
		SUBSTR(PR_NUM,1,8) 
	  END SALE_DATE
      ,RC_UPJANG UPJANG
      ,ROUND(CASE WHEN TAX_CODE = '100' THEN (PO_QTY * ORI_SALE_PRICE) * 1.1 ELSE (PO_QTY * ORI_SALE_PRICE) END) ORI_AMT
      ,ROUND(CASE WHEN TAX_CODE = '100' THEN (PO_QTY * CHG_SALE_PRICE) * 1.1 ELSE (PO_QTY * CHG_SALE_PRICE) END) CHG_AMT
      ,:loginSabun SABUN
      ,PR_NUM 
      , (SELECT LINE_STATUS FROM SO_PR sp WHERE sp.PR_NUM = V.PR_NUM AND SP.PR_ID = V.PR_ID) LINE_STATUS
      , FMS_PO_LINESTATUS_FUN(V.PR_ID, V.PR_NUM, '') AS PO_LINE_STATUS
	FROM SAL_PRICE_TEMP V
	]]>
	
	</statement>
</hqml>
