<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="fm.fmo.MoadamSysInterfaceSqlDAO">
	<desc>고객시스템 Interface HQML Query</desc>

	<!-- 모아담 I/F 업장리스트 조회 -->
	<statement name="selectUpjangList"><![CDATA[
	SELECT CODE, CODE_NAME AS key_code
	  FROM SCC_COMMON_CODE
	 WHERE GROUP_CODE = 'moadam_if_upjang'
	   AND USE_YN = 'Y'			       
	]]></statement>


	<!-- 모아담 주문정보조회 -->
	<statement name="updateOrderList"><![CDATA[
		MERGE INTO FMO_SO_PR_MOADAM_TEMP  A
			USING (SELECT TO_NUMBER(:idx) AS IDX 
		  				, :orderCode AS ORDER_CODE
						, :orderDate AS ORDER_DATE
						, TO_NUMBER(:orderCount) AS ORDER_COUNT
						, TO_DATE(:regDate, 'YYYY-MM-DD HH24:MI:SS')  AS REG_DATE
						, :productCode AS PRODUCT_CODE
						, :productName AS PRODUCT_NAME
						, :productSize AS PRODUCT_SIZE
						, :productUnit AS PRODUCT_UNIT
						, :itemCode AS ITEM_CODE
						, :branchCode AS BRANCH_CODE
						, :dDay AS D_DAYS
						, :endStatus AS END_STATUS
						, :memo AS REMARK
						, 'SYSTEM_IF' AS CUSER
		                , SYSDATE AS CDATE
		                , 'SYSTEM_IF' AS UUSER
		                , SYSDATE AS UDATE
		                , :interfaceCode AS CODE
			      FROM   DUAL B
		      	) B
		   ON (A.IDX=B.IDX) 
		  WHEN MATCHED THEN 
		        
		      UPDATE 
		      SET ORDER_DATE   = B.ORDER_DATE
		        , ORDER_COUNT  = B.ORDER_COUNT
		        , REG_DATE     = B.REG_DATE
		        , PRODUCT_CODE = B.PRODUCT_CODE
		        , PRODUCT_NAME = B.PRODUCT_NAME
		        , PRODUCT_SIZE = B.PRODUCT_SIZE
		        , PRODUCT_UNIT = B.PRODUCT_UNIT
		        , ITEM_CODE    = B.ITEM_CODE
		        , BRANCH_CODE  = B.BRANCH_CODE
		        , D_DAYS       = B.D_DAYS
		        , END_STATUS   = B.END_STATUS
		        , REMARK 	   = B.REMARK 
		        , UUSER        = B.UUSER
		        , UDATE        = SYSDATE    
		        
		  WHEN NOT MATCHED THEN 
		      INSERT
		               (
		                  IDX
						, ORDER_CODE
						, ORDER_DATE
						, ORDER_COUNT
						, REG_DATE
						, PRODUCT_CODE
						, PRODUCT_NAME
						, PRODUCT_SIZE
						, PRODUCT_UNIT
						, ITEM_CODE
						, BRANCH_CODE
						, D_DAYS
						, END_STATUS
						, REMARK
						, CUSER
						, CDATE
						, UUSER
						, UDATE
						, CODE
		               )
		      VALUES 
				       (  B.IDX
						, B.ORDER_CODE
						, B.ORDER_DATE
						, B.ORDER_COUNT
						, B.REG_DATE
						, B.PRODUCT_CODE
						, B.PRODUCT_NAME
						, B.PRODUCT_SIZE
						, B.PRODUCT_UNIT
						, B.ITEM_CODE
						, B.BRANCH_CODE
						, B.D_DAYS
						, B.END_STATUS
						, B.REMARK
						, B.CUSER
						, B.CDATE
						, B.UUSER
						, B.UDATE 
						, B.CODE
						       )		               

				       
					]]></statement>
					
	<statement name="updateOrderList2"><![CDATA[
		MERGE INTO FMO_SO_PR_MOADAM_TEMP  A
			USING (SELECT TO_NUMBER(:idx) AS IDX 
		  				, :orderCode AS ORDER_CODE
						, :orderDate AS ORDER_DATE
						, TO_NUMBER(:orderCount) AS ORDER_COUNT
						, TO_DATE(:regDate, 'YYYY-MM-DD HH24:MI:SS')  AS REG_DATE
						, :productCode AS PRODUCT_CODE
						, :productName AS PRODUCT_NAME
						, :productSize AS PRODUCT_SIZE
						, :productUnit AS PRODUCT_UNIT
						, :itemCode AS ITEM_CODE
						, :branchCode AS BRANCH_CODE
						, :dDay AS D_DAYS
						, :endStatus AS END_STATUS
						, :memo AS REMARK
						, 'SYSTEM_IF' AS CUSER
		                , SYSDATE AS CDATE
		                , 'SYSTEM_IF' AS UUSER
		                , SYSDATE AS UDATE
		                , :interfaceCode AS CODE
			      FROM   DUAL B
		      	) B
		   ON (A.IDX=B.IDX) 
		  WHEN MATCHED THEN 
		        
		      UPDATE 
		      SET ORDER_DATE   = B.ORDER_DATE
		        , ORDER_COUNT  = B.ORDER_COUNT
		        , REG_DATE     = B.REG_DATE
		        , PRODUCT_CODE = B.PRODUCT_CODE
		        , PRODUCT_NAME = B.PRODUCT_NAME
		        , PRODUCT_SIZE = B.PRODUCT_SIZE
		        , PRODUCT_UNIT = B.PRODUCT_UNIT
		        , ITEM_CODE    = B.ITEM_CODE
		        , BRANCH_CODE  = B.BRANCH_CODE
		        , D_DAYS       = B.D_DAYS
		        , END_STATUS   = B.END_STATUS
		        , REMARK 	   = B.REMARK 
		        , UUSER        = B.UUSER
		        , UDATE        = SYSDATE    
		        
		  WHEN NOT MATCHED THEN 
		      INSERT
		               (
		                  IDX
						, ORDER_CODE
						, ORDER_DATE
						, ORDER_COUNT
						, REG_DATE
						, PRODUCT_CODE
						, PRODUCT_NAME
						, PRODUCT_SIZE
						, PRODUCT_UNIT
						, ITEM_CODE
						, BRANCH_CODE
						, D_DAYS
						, END_STATUS
						, REMARK
						, CUSER
						, CDATE
						, UUSER
						, UDATE
						, CODE
		               )
		      VALUES 
				       (  B.IDX
						, B.ORDER_CODE
						, B.ORDER_DATE
						, B.ORDER_COUNT
						, B.REG_DATE
						, B.PRODUCT_CODE
						, B.PRODUCT_NAME
						, B.PRODUCT_SIZE
						, B.PRODUCT_UNIT
						, B.ITEM_CODE
						, B.BRANCH_CODE
						, B.D_DAYS
						, B.END_STATUS
						, B.REMARK
						, B.CUSER
						, B.CDATE
						, B.UUSER
						, B.UDATE 
						, B.CODE
						       )		               

				       
					]]></statement>
									
	<statement name="selectTargetList"><![CDATA[
	/*오늘 인터페이스받은 주문목록 조회*/
	SELECT IDX
		, ORDER_CODE
		, PRODUCT_CODE
		, ITEM_CODE
		, ORDER_COUNT			
	FROM FMO_SO_PR_MOADAM_TEMP
	WHERE 1=1
  	AND (TO_CHAR(CDATE,'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD') OR TO_CHAR(UDATE,'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD')) 
  	AND PR_ID IS NULL
  	AND CODE = :interfaceCode
  ]]></statement>
  
  
  <!-- 모아담 사업장 디데이 계산-->
  <statement name="selectDdayList"><![CDATA[
  SELECT TO_CHAR(TO_DATE(MIN(EXC_DATE)),'YYYY-MM-DD') AS SDAY, TO_CHAR(TO_DATE(MAX(EXC_DATE)),'YYYY-MM-DD') AS EDAY
	FROM(SELECT UPJANG_CD, EXC_DATE , RNUM
	 	   FROM(
		 		SELECT A.UPJANG_CD, B.EXC_DATE , ROW_NUMBER() OVER(PARTITION BY UPJANG_CD ORDER BY EXC_DATE)AS RNUM
		   		  FROM(SELECT TO_NUMBER(CODE) AS UPJANG_CD
				  		 FROM SCC_COMMON_CODE A
				 		WHERE GROUP_CODE = 'moadam_if_dday' 
				   		  AND USE_YN = 'Y'
				
			   			UNION 
			   
			   		   SELECT -1 AS UPJANG_CD
				 		 FROM DUAL) A, FMS_EXC_DAYS B 
						WHERE A.UPJANG_CD = B.UPJANG (+)
		  				  AND EXC_DATE >= TO_CHAR(TO_DATE(SYSDATE+1),'YYYYMMDD')
		  				  AND B.USE_YN = 'N'
				) Z
			WHERE RNUM <= 5
		)
]]></statement>
</hqml>

