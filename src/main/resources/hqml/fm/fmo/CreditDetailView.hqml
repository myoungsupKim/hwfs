<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="fm.fmo.creditDetailViewDAO">
	<desc>여신 상세정보를 조회 HQML Query</desc>

	<!-- 업장별 여신 기본정보를 조회한다. -->
	<statement name="selectUpjang" type="select">
		/*+ com.hwfs.fm.fmo.dao.CreditDetailViewDAO.selectUpjang */
		<![CDATA[
		SELECT  '1' AS GUBUN
				  , '단일사업장기준' AS GUBUN_NM
		       	  , A.UPJANG
		FROM   FMS_UPJANG A
		WHERE  A.UPJANG = :schUpjang
		UNION ALL
		SELECT  '2' AS GUBUN
				  , '본사통합기준' AS GUBUN_NM
		       	  , A.MAIN_UPJANG AS UPJANG
		FROM   FMS_UPJANG A
		WHERE  A.UPJANG = :schUpjang
		AND     A.HEAD_CREDIT_YN = 'Y'				
		ORDER BY 1 ASC
		]]>
	</statement>


	<!-- 여신 상세정보를 조회 목록을 조회한다. (매입예정액)-->
	<statement name="selectList0" type="select">
		/*+ com.hwfs.fm.fmo.dao.CreditDetailViewDAO.selectList0 */
		<![CDATA[
		SELECT 
				  A.RC_UPJANG
      			, (SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = A.RC_UPJANG) AS RC_UPJANG_NM
      			, TO_CHAR(TO_DATE(A.NEED_DATE), 'YYYY-MM-DD') AS NEED_DATE
      			, A.ITEM_CODE
      			, A.ITEM_NAME
     			, A.ITEM_SIZE
      			, A.PO_UOM
      			, A.TAX_CODE
      			, (A.CENTER_DELI_QTY + A.DIRECT_DELI_QTY - A.DELIVERED_QTY - A.UNDELIVERED_QTY) AS PO_QTY
      			, A.SALE_PRICE
      			, ROUND(DECODE(A.TAX_CODE,'100',1.1,1) * ROUND((A.CENTER_DELI_QTY + A.DIRECT_DELI_QTY - A.DELIVERED_QTY - A.UNDELIVERED_QTY) * A.SALE_PRICE)) AS SALE_AMT
      			, D.CODE_NAME AS LINE_STATUS
      			, A.SUBINV_CODE
      			, (SELECT SUBINV_NAME FROM HLDC_PO_SUBINVENTORY WHERE SUBINV_CODE = A.SUBINV_CODE) AS SUBINV_NAME
      			, A.PO_NUM
      			, A.PO_ID
		FROM   HLDC_PO_PO A   INNER JOIN FMS_UPJANG B ON 1 = 1
																				<#if schGubun == '2'>
		   																		AND B.UPJANG IN ${sUpjangList}			/* 본사업장 기준 */
		   																		AND B.HEAD_CREDIT_YN = 'Y'
																				<#else> 
																				AND B.UPJANG = :schUpjang	 				/* 조건 : 업장 */
																				</#if> 
																				 AND A.RC_UPJANG = B.UPJANG		
											LEFT JOIN SCC_COMMON_CODE D ON D.GROUP_CODE = 'FM0037'		/* 공통 : 구매라인상태 */
																						  AND A.LINE_STATUS = D.CODE  	
		WHERE  A.NEED_DATE <= :schNeedDate
		AND     A.LINE_STATUS IN ('PW', 'PC', 'DL') 
		--AND     A.PO_TYPE IN ('07', '29')
		]]>
	</statement>


	<!-- 여신 상세정보를 조회 목록을 조회한다. (매입확정액)-->
	<statement name="selectList1" type="select">
		/*+ com.hwfs.fm.fmo.dao.CreditDetailViewDAO.selectList1 */
		<![CDATA[
--		SELECT
--			  	'1' AS GUBUN	/* 일마감 */
--				, TO_CHAR(A.UPJANG) AS TRANS_UPJANG
--     			, (SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = A.UPJANG) AS TR_UPJANG_NM
--      		, TO_CHAR(TO_DATE(A.SALE_DATE), 'YYYY-MM-DD') AS TRANS_DATE
--      		, '' AS ITEM_CODE
--      		, CASE WHEN A.SALE_TYPE = '1301' THEN '상품매출' ELSE '소모품' END AS ITEM_NAME
--     			, '' AS ITEM_SIZE
--      		, '' AS PO_UOM
--      		, DECODE(A.VAT_CLASS, '10', '100', '13', '210', '200')  AS TAX_CODE
--      		, NULL AS TRANS_QTY
--      		, NULL AS SALE_PRICE
--				, A.SAL_AMT AS SALE_AMT
--      		, A.SUBINV_CODE
--      		, (SELECT SUBINV_NAME FROM HLDC_PO_SUBINVENTORY WHERE SUBINV_CODE = A.SUBINV_CODE) AS SUBINV_NAME
--      		, A.RECEIPT_NUM AS TRANS_ID
--		FROM FMS_SALES A
--		WHERE A.SALE_DATE <= :schNeedDate	/* 조건 : 기준일자 */
--		AND    A.TRANS_YN = 'N'		/* 영업회계 미전송건 */
--		<#if schGubun == '2'>
--		   			AND A.UPJANG IN ${sUpjangList}				/* 본사업장 기준 */
--		   			AND EXISTS (SELECT 1							/* 본사통합여신 기준 */
--		   						      FROM FMS_UPJANG
--		   						      WHERE UPJANG = A.UPJANG
--		   						      AND   HEAD_CREDIT_YN = 'Y'
--		   						      )
--		<#else> 
--					AND A.UPJANG = :schUpjang	 			/* 조건 : 업장 */
--		</#if> 

--		UNION ALL

		SELECT 
		 		/*+ PUSH_PRED(A) */
			 	 '2' AS GUBUN	/* 수불 */
				, A.TRANS_UPJANG AS TRANS_UPJANG
      			, (SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = A.TRANS_UPJANG) AS TR_UPJANG_NM
      			, TO_CHAR(TO_DATE(A.MG_DATE), 'YYYY-MM-DD') AS TRANS_DATE
      			, A.ITEM_CODE
      			, A.ITEM_NAME
     			, A.ITEM_SIZE
      			, A.TRANS_UOM AS PO_UOM
      			, A.TAX_CODE
      			, A.TRANS_QTY
      			, A.SALE_PRICE
				--, ROUND(DECODE(SUBSTR(A.TRANS_TYPE,1,1),'I',1,-1) * DECODE(A.TAX_CODE,'100',1.1,1) * A.SALE_AMOUNT) AS SALE_AMT
				--, DECODE(SUBSTR(A.TRANS_TYPE,1,1),'I',1,-1) * ROUND(DECODE(A.TAX_CODE,'100',1.1,1) * ROUND(A.SALE_PRICE * A.TRANS_QTY)) AS SALE_AMT
				, CASE WHEN A.PO_TYPE IN ('71', '72') THEN 0
				       ELSE DECODE(SUBSTR(A.TRANS_TYPE,1,1),'I',1,-1) * ROUND(DECODE(A.TAX_CODE,'100',1.1,1) * ROUND(A.SALE_PRICE * A.TRANS_QTY)) END AS SALE_AMT 
      			, A.SUBINV_CODE
      			, (SELECT SUBINV_NAME FROM HLDC_PO_SUBINVENTORY WHERE SUBINV_CODE = A.SUBINV_CODE) AS SUBINV_NAME
      			, A.TRANS_ID
		FROM   FMS_TRANSACTION_RTN_V A  LEFT JOIN  (
																		SELECT 
											  									  A.UPJANG
																				, MAX(A.SALE_DATE) AS SALE_DATE
																		FROM FMS_SALES A
																		WHERE A.SALE_DATE <= :schNeedDate	/* 조건 : 기준일자 */
																		<#if schGubun == '2'>
																			AND A.UPJANG IN ${sUpjangList}				/* 본사업장 기준 */
																			AND EXISTS (SELECT 1							/* 본사통합여신 기준 */
														   									  FROM FMS_UPJANG
														   									  WHERE UPJANG = A.UPJANG
														   									   AND   HEAD_CREDIT_YN = 'Y'
														      								)
																		<#else> 
																			AND A.UPJANG = :schUpjang	 			/* 조건 : 업장 */
																		</#if> 
																		AND A.TRANS_YN = 'Y'
																		GROUP BY A.UPJANG
																		) C ON A.TRANS_UPJANG = C.UPJANG
		WHERE   A.MG_DATE <= :schNeedDate	/* 조건 : 기준일자 */
		--AND      A.TRANS_DATE >= GREATEST(TO_CHAR(ADD_MONTHS(TO_DATE(:schNeedDate, 'YYYYMMDD'), -1), 'YYYYMMDD'), NVL(TO_CHAR(TO_DATE(C.SALE_DATE, 'YYYYMMDD')+1, 'YYYYMMDD'),' ')) 
		AND      A.MG_DATE >= DECODE(C.SALE_DATE, NULL, GREATEST(TO_CHAR(ADD_MONTHS(TO_DATE(:schNeedDate, 'YYYYMMDD'), -1), 'YYYYMM') || '01', NVL(TO_CHAR(TO_DATE(C.SALE_DATE, 'YYYYMMDD')+1, 'YYYYMMDD'),' ')),  TO_CHAR(TO_DATE(C.SALE_DATE, 'YYYYMMDD')+1, 'YYYYMMDD')) 		
		AND      (A.TRANS_TYPE = 'I001' OR (A.TRANS_TYPE LIKE '_002' AND A.SOURCE_TYPE = 'PO')) 
		<#if schGubun == '2'>
		   			--AND A.TRANS_UPJANG IN ${sUpjangList}				/* 본사업장 기준 */
		   			--AND EXISTS (SELECT 1							/* 본사통합여신 기준 */
		   			--			      FROM FMS_UPJANG
		   			--			      WHERE UPJANG = A.TRANS_UPJANG
		   			--			      AND   HEAD_CREDIT_YN = 'Y'
		   			--			      )
		   			AND A.TRANS_UPJANG IN (SELECT UPJANG
		   												 FROM FMS_UPJANG 
		   												 WHERE UPJANG = A.TRANS_UPJANG
		   												 AND    MAIN_UPJANG = :schMainUpjang
		   												 AND    HEAD_CREDIT_YN = 'Y'
		   												 )
		<#else> 
					AND A.TRANS_UPJANG = :schUpjang	 			/* 조건 : 업장 */
		</#if> 

		ORDER BY 1
		]]>
	</statement>


	<!-- 채권잔액현황 목록을 조회한다. -->
	<statement name="selectList2" type="select">
		/*+ com.hwfs.fm.fmo.dao.CreditDetailViewDAO.selectList2 */
		<![CDATA[
			SELECT 
				'(' || TO_CHAR(A.UPJANG_CD )|| ')' || (SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = A.UPJANG_CD) UPJANG
		     	, TO_CHAR(TO_DATE(A.OCCUR_DATE,'YYYYMMDD'),'YYYY-MM-DD') OCCUR_DATE
		     	, A.AR_NUM
		     	, A.AR_AMT
		     	, NVL((SELECT SUM(RECEIVE_AMT) 
		     		 	FROM SLA_AR_RECEIVE_DETAIL RD 
		     		 	WHERE RD.AR_NUM = A.AR_NUM 
		     		    AND RD.RECEIVE_DATE <=  :schDate 
		     		    AND RD.RECD_STATUS='L'),0) AS RECEIVE_AMT
             	, (NVL(A.AR_AMT,0) - NVL((SELECT SUM(RECEIVE_AMT) 
             									      FROM SLA_AR_RECEIVE_DETAIL RD 
             									      WHERE RD.AR_NUM = A.AR_NUM 
		     		    							  AND RD.RECEIVE_DATE <=  :schDate 
             									      AND RD.RECD_STATUS='L'),0)) AS AR_BAL_AMT
		     	, A.REMARK
		  FROM SLA_AR_MST A
		 WHERE 1=1
		   AND A.RECD_STATUS = 'L'
		   AND A.SYS_CLASS IN ('13', '14')
           AND A.OCCUR_DATE <= :schDate
		<#if schGubun == '2'>
		   			AND A.UPJANG_CD IN ${sUpjangList}				/* 본사업장 기준 */
		   			AND EXISTS (SELECT 1							/* 본사통합여신 기준 */
		   						      FROM FMS_UPJANG
		   						      WHERE UPJANG = A.UPJANG_CD
		   						      AND   HEAD_CREDIT_YN = 'Y'
		   						      )
		<#else> 
					AND A.UPJANG_CD = :schUpjang	 			/* 조건 : 업장 */
		</#if> 
		 ORDER BY A.OCCUR_DATE, A.AR_AMT
		]]>
	</statement>


	<!-- 선수금잔액현황 목록을 조회한다. -->
	<statement name="selectList3" type="select">
		/*+ com.hwfs.fm.fmo.dao.CreditDetailViewDAO.selectList3 */
		<![CDATA[
			SELECT 
				'(' || TO_CHAR(A.UPJANG_CD )|| ')' || (SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = A.UPJANG_CD) UPJANG
		     	, TO_CHAR(TO_DATE(A.OCCUR_DATE,'YYYYMMDD'),'YYYY-MM-DD') OCCUR_DATE
		     	, A.ADVANCE_NUM AS AR_NUM
		     	, A.OCCUR_AMT AS AR_AMT
		     	, NVL((SELECT SUM(APPLY_AMT) 
		     		 	FROM SLA_ADVANCE_ALT_DETAIL RD 
		     		 	WHERE RD.ADVANCE_NUM = A.ADVANCE_NUM 
		     		    AND RD.ALT_DATE <=  :schDate 
		     		    AND RD.RECD_STATUS='L'),0) AS RECEIVE_AMT
             	, (NVL(A.OCCUR_AMT,0) - NVL((SELECT SUM(APPLY_AMT) 
             									      FROM SLA_ADVANCE_ALT_DETAIL RD 
             									      WHERE RD.ADVANCE_NUM = A.ADVANCE_NUM 
		     		    							  AND RD.ALT_DATE <=  :schDate 
             									      AND RD.RECD_STATUS='L'),0)) AS AR_BAL_AMT
		     	, A.REMARK
		  FROM SLA_ADVANCE_MST A
		 WHERE 1=1
		   AND A.RECD_STATUS = 'L'
		   AND A.SYS_CLASS IN ('13', '14')
           AND A.OCCUR_DATE <= :schDate
		<#if schGubun == '2'>
		   			AND A.UPJANG_CD IN ${sUpjangList}				/* 본사업장 기준 */
		   			AND EXISTS (SELECT 1							/* 본사통합여신 기준 */
		   						      FROM FMS_UPJANG
		   						      WHERE UPJANG = A.UPJANG_CD
		   						      AND   HEAD_CREDIT_YN = 'Y'
		   						      )
		<#else> 
					AND A.UPJANG_CD = :schUpjang	 			/* 조건 : 업장 */
		</#if> 
		 ORDER BY A.OCCUR_DATE, A.OCCUR_AMT
		]]>
	</statement>



	<!-- 여신 상세정보를 조회(을)를 등록한다. -->
	<statement name="insert" type="insert">
		/*+ com.hwfs.fm.fmo.dao.CreditDetailViewDAO.insert */
		<![CDATA[
		INSERT INTO TABLE_NAME 
		(
		       COLUMN_NAME1,
			   COLUMN_NAME2,
		       CUSER,
		       CDATE
		)
		VALUES
		(
		       :columnName1,
			   <#if columnName2?has_content> :columnName2, <#else> null, </#if>
		       :loginSabun,
		       SYSDATE
		)
		]]>
	</statement>
	
	<!-- 여신 상세정보를 조회(을)를 수정한다. -->
	<statement name="update" type="update">
		/*+ com.hwfs.fm.fmo.dao.CreditDetailViewDAO.update */
		<![CDATA[
		UPDATE TABLE_NAME 
		SET    COLUMN_NAME1 = :columnName1,
		       COLUMN_NAME2 = :columnName2,
		       UUSER = :loginSabun,
		       UDATE = SYSDATE
		WHERE  COLUMN_NAME = :columnName
		]]>
	</statement>

	<!-- 여신 상세정보를 조회(을)를 삭제한다. -->
	<statement name="delete" type="delete">
		/*+ com.hwfs.fm.fmo.dao.CreditDetailViewDAO.delete */
		<![CDATA[
		DELETE 
		FROM   TABLE_NAME 
		WHERE  COLUMN_NAME = :columnName
		]]>
	</statement>

</hqml>
