<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="ls.ltm.testResultSpecmArticleRegDAO">
    <desc>시험결과등록-검체항목별</desc>

    <!-- 검체목록 DATA를 조회한다. -->
    <statement name="selectList" type="select">
        /*+ com.hwfs.ls.ltm.dao.TestResultSpecmArticleReg.selectList */
        <![CDATA[
/* 검체목록 조회 */
SELECT DISTINCT A.SPECM_CD
     , A.SPECM_NM
  FROM LRM_SPECM_INFO A
     , LRM_TEST_INFO B
     , (
        SELECT PD.REQ_NUM
             , PD.PROC_USER
             , PD.PROCDD
             , PD.PROC_REASON
             , PD.PROC_CLASS
             , PD.SEQ
          FROM (
                SELECT Y.REQ_NUM
                     , Y.PROC_USER
                     , Y.PROCDD
                     , Y.PROC_REASON
                     , Y.PROC_CLASS
                     , Y.SEQ
                     , ROW_NUMBER() OVER (PARTITION BY Y.REQ_NUM ORDER BY Y.REQ_NUM, Y.SEQ DESC) AS RN
                  FROM LRM_PROC_DESC Y
               ) PD
         WHERE RN = 1
       ) U
 WHERE 1 = 1
   AND A.REQ_NUM = U.REQ_NUM(+)
   AND U.PROC_CLASS BETWEEN '150' AND '200'	/* 진행상황이 접수승인완료부터 */
   AND A.REQ_NUM = B.REQ_NUM
   AND A.ACCEPT_NUM = B.ACCEPT_NUM
<#if toDay?has_content>   AND A.ACCEPTDD BETWEEN :fromDay AND :toDay </#if>
<#if testUser?has_content>
   AND B.SABUN = :testUser
</#if>
<#if decisionStatus?has_content>
    <#if decisionStatus == "101">
   AND EXISTS (SELECT 1
                 FROM LTM_TEST_DIARY
                WHERE A.REQ_NUM = REQ_NUM
                  AND A.ACCEPT_NUM = ACCEPT_NUM
                  AND B.ARTICLE_CD = ARTICLE_CD
                  AND (DECISION IS NOT NULL OR LAST_DECISION IS NOT NULL))
    <#else>
   AND (NOT EXISTS (SELECT 1
                      FROM LTM_TEST_DIARY
                     WHERE A.REQ_NUM = REQ_NUM
                       AND A.ACCEPT_NUM = ACCEPT_NUM
                       AND B.ARTICLE_CD = ARTICLE_CD) OR
        EXISTS (SELECT 1
                  FROM LTM_TEST_DIARY
                 WHERE A.REQ_NUM = REQ_NUM
                   AND A.ACCEPT_NUM = ACCEPT_NUM
                   AND B.ARTICLE_CD = ARTICLE_CD
                   AND LAST_DECISION IS NULL)
       )
    </#if>
</#if>
 ORDER BY A.SPECM_NM
        ]]>
    </statement>

    <!-- 시험항목목록 DATA를 조회한다. -->
    <statement name="selectDetailList" type="select">
        /*+ com.hwfs.ls.ltm.dao.TestResultSpecmArticleReg.selectDetailList */
        <![CDATA[
/* 시험항목 조회 */
SELECT A.REQ_NUM
     , A.REQ_DATE
     , A.ACCEPTNM
     , A.UPJANG_NM
     , A.ORG_NM
     , (SELECT X.NM_KOR
          FROM SCC_USERINFO X
         WHERE X.SABUN = A.CUSER) AS USER_NM    /* 접수자 */
     , B.ACCEPT_NUM
     , B.ACCEPTDD
     , B.SPECM_CD
     , B.SPECM_NM
     , C.ARTICLE_CD	/* 시험항목 */
     , (SELECT ARTICLE_NM FROM LCM_TEST_ARTICLE WHERE C.ARTICLE_CD = ARTICLE_CD) AS ARTICLE_NM	/* 시험항목명 */
     , D.TESTDD	/* 시험일자 */
     , C.SABUN	/* 담당자사번 */
     , (SELECT X.NM_KOR
          FROM SCC_USERINFO X
         WHERE X.SABUN = C.SABUN) AS PROC_USER_NM		/* 시험담당자 */
     , D.TECHRESP_USER	/* 기술책임자 */
     , (SELECT X.NM_KOR
          FROM SCC_USERINFO X
         WHERE X.SABUN = D.TECHRESP_USER) AS TECHRESP_USER_NM		/* 기술책임자명 */
     , D.RESULT	/* 결과 */
     , D.DECISION	/* 판정 */
     , D.LAST_DECISION	/* 최종 판정 */
     , CASE WHEN D.LAST_DECISION IS NOT NULL THEN	/* 최종판정내역이 있으면 업데이트날짜가 완료일 */
         TO_CHAR(D.UDATE, 'YYYYMMDD')
       ELSE
         ''
       END AS COMPLETE_DD	/* 시험완료일자 */
     , (CASE WHEN EXISTS (SELECT 1
                            FROM LTM_TEST_DIARY
                           WHERE REQ_NUM = C.REQ_NUM
                             AND ACCEPT_NUM = C.ACCEPT_NUM
                             AND ARTICLE_CD = D.ARTICLE_CD
                             AND SABUN = C.SABUN) THEN
           'Y'
       ELSE
           'N'
       END) AS DIARY_WRITE_YN	/* 시험일지 작성 여부 */
     , CASE WHEN U.PROC_CLASS >= '200' THEN	/* 시험완료 승인 */
          'Y'
       ELSE
          'N'
       END AS COMPLETE_YN	/* 시험완료승인 */
     , C.BASIS_STAND	/* 기준규격 */
     , SCC_CODE_NM('PROGRESS_STATUS', U.PROC_CLASS) AS PROGRESS_STATUS	/* 진행상태 */
     , SCC_CODE_NM('URGENT_YN', B.MFG_VENDOR) AS URGENT_YN  /* 긴급여부 */
  FROM LRM_TEST_REQ_ACCEPT A
     , LRM_SPECM_INFO B
     , LRM_TEST_INFO C
     , LTM_TEST_DIARY D
     , (
        SELECT PD.REQ_NUM
             , PD.PROC_USER
             , PD.PROCDD
             , PD.PROC_REASON
             , PD.PROC_CLASS
             , PD.SEQ
          FROM (
                SELECT Y.REQ_NUM
                     , Y.PROC_USER
                     , Y.PROCDD
                     , Y.PROC_REASON
                     , Y.PROC_CLASS
                     , Y.SEQ
                     , ROW_NUMBER() OVER (PARTITION BY Y.REQ_NUM ORDER BY Y.REQ_NUM, Y.SEQ DESC) AS RN
                  FROM LRM_PROC_DESC Y
               ) PD
         WHERE RN = 1
       ) U
 WHERE 1 = 1
   AND A.REQ_NUM = B.REQ_NUM
   AND A.REQ_NUM = U.REQ_NUM(+)
   AND B.SPECM_CD = :specmCd
   AND U.PROC_CLASS BETWEEN '150' AND '200'	/* 진행상황이 접수승인완료부터 */
   AND B.REQ_NUM = C.REQ_NUM
   AND B.ACCEPT_NUM = C.ACCEPT_NUM
   AND C.REQ_NUM = D.REQ_NUM(+)
   AND C.ACCEPT_NUM = D.ACCEPT_NUM(+)
   AND C.ARTICLE_CD = D.ARTICLE_CD(+)
   AND C.SABUN = D.SABUN(+)
<#if toDay?has_content> AND B.ACCEPTDD BETWEEN :fromDay AND :toDay </#if>
<#if toDayTest?has_content>
   AND EXISTS (SELECT 1
                 FROM LTM_TEST_DIARY
                WHERE A.REQ_NUM = REQ_NUM
                  AND B.ACCEPT_NUM = ACCEPT_NUM
                  AND D.ARTICLE_CD = ARTICLE_CD
                  AND TESTDD BETWEEN :fromDayTest AND :toDayTest)
</#if>
<#if decisionStatus?has_content>
    <#if decisionStatus == "101">
   AND EXISTS (SELECT 1
                 FROM LTM_TEST_DIARY
                WHERE D.REQ_NUM = REQ_NUM
                  AND D.ACCEPT_NUM = ACCEPT_NUM
                  AND D.ARTICLE_CD = ARTICLE_CD
                  AND (DECISION IS NOT NULL OR LAST_DECISION IS NOT NULL))
    <#else>
   AND (NOT EXISTS (SELECT 1
                      FROM LTM_TEST_DIARY
                     WHERE D.REQ_NUM = REQ_NUM
                       AND D.ACCEPT_NUM = ACCEPT_NUM
                       AND D.ARTICLE_CD = ARTICLE_CD) OR
        EXISTS (SELECT 1
                  FROM LTM_TEST_DIARY
                 WHERE D.REQ_NUM = REQ_NUM
                   AND D.ACCEPT_NUM = ACCEPT_NUM
                   AND D.ARTICLE_CD = ARTICLE_CD
                   AND LAST_DECISION IS NULL)
       )
    </#if>
</#if>
<#if testUser?has_content> AND C.SABUN = :testUser</#if>
 ORDER BY A.REQ_NUM DESC, B.ACCEPT_NUM, C.ARTICLE_CD
        ]]>
    </statement>

    <!-- 시험일지 Master를 수정한다. -->
    <statement name="updateTestArticleList" type="update">
        /*+ com.hwfs.ls.ltm.dao.TestResultSpecmArticleReg.updateTestArticleList */
        <![CDATA[
UPDATE LTM_TEST_DIARY A SET
    <#if result?exists> A.RESULT = :result, </#if>
    <#if decision?exists> A.DECISION = :decision, </#if>
    <#if lastDecision?exists> A.LAST_DECISION = :lastDecision, </#if>
    A.UUSER = :loginSabun,
    A.UDATE = SYSDATE
 WHERE A.REQ_NUM = :reqNum
   AND A.ACCEPT_NUM = :acceptNum
   AND A.ARTICLE_CD = :articleCd
   AND A.DIARY_NUM = '1'
   AND A.SABUN = :sabun
        ]]>
    </statement>

</hqml>
