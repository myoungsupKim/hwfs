<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="ms.msm.profitAndLossReportDAO">
	<desc>손익현황 조회 HQML Query</desc>

	<!-- 손익현황 조회 목록을 조회한다. -->
	<statement name="selectList" type="select">
	/*+ com.hwfs.ms.msm.profitAndLossReportDAO.selectList */
	<![CDATA[
	SELECT UPJANG
	     , UPJANGNM
	     , SS_AMT
	     , MS_AMT
	     , TRIM(NVL(TO_CHAR(ROUND(SS_AMT/:unit), '999,999,999,999,999'),0) 
	     || '(' 
	     || DECODE(SIGN(NVL(ROUND(DECODE(SP_AMT, 0, 0, SS_AMT / SP_AMT * 100)),0)), -1, '', 1, '') 
	     || NVL(ROUND(DECODE(SP_AMT, 0, 0, SS_AMT / SP_AMT * 100)),0)
	     || '%)') AS SS_AMT_FORMAT
	     /*
	     , TRIM( NVL(TO_CHAR(ROUND(MS_AMT/:unit), '999,999,999,999,999'),0) 
	     || '(' 
	     || DECODE(SIGN(NVL(ROUND(DECODE(MP_AMT, 0, 0, MS_AMT / MP_AMT * 100)),0)), -1, '', 1, '')
	     || NVL(ROUND(DECODE(MP_AMT, 0, 0, MS_AMT / MP_AMT * 100)),0)
	     || '%)') AS MS_AMT_FORMAT  
		 */
		 , TRIM( NVL(TO_CHAR(S_RATE,'FM999,990.0'),0)
	     || '(' 
	     || DECODE(SIGN(S_RATE - P_RATE), -1, '△', 1, '+') || NVL(TO_CHAR(ABS(S_RATE - P_RATE),'FM999,990.0'),0)
	     || '%)') AS MS_AMT_FORMAT  
		FROM (      
		    SELECT A.MU_CD
	             , A.MU_NAME
	             , A.TM_CD
	             , A.TM_NAME
	             , A.UPJANG
	             , A.UPJANGNM
	             , SUM(B.SP_AMT) AS SP_AMT     /* 매출액 - 식음료매출 계획 */
	             , SUM(C.SS_AMT) AS SS_AMT     /* 매출액 - 식음료매출 실적 */
	             , SUM(NVL(E.MS_AMT1, 0)) - SUM(NVL(G.MS_AMT3, 0)) AS MS_AMT     /* 재료비 - 식음료매출 실적 */
	             , SUM(E.MS_AMT1) AS MS_AMT1   /* 식음료매출 실적 - 전산구매 */
	             , SUM(G.MS_AMT3) AS MS_AMT3   /* 식음료매출 실적 - 복리후생식대비 */
	             , ROUND(DECODE(SUM(B.SP_AMT), 0, 0, SUM(D.MP_AMT) / SUM(B.SP_AMT) * 100), 2) AS P_RATE   /* 식재료율 - 계획 */
	             , ROUND(DECODE(SUM(B.SR_AMT), 0, 0, SUM(D.MR_AMT) / SUM(B.SR_AMT) * 100), 2) AS R_RATE   /* 식재료율 - 추정 */
	             , ROUND(DECODE(SUM(NVL(C.SS_AMT, 0)), 0, 0, (SUM(NVL(E.MS_AMT1, 0)) - SUM(NVL(G.MS_AMT3, 0))) / SUM(C.SS_AMT) * 100), 2) AS S_RATE   /* 식재료율 - 실적 */
	          FROM MAC_UPJANG_V A
	             , (
			        /* 매출 - 식음료매출 계획(P), 추정(R) */
			        SELECT UPJANG
			             , NVL(SUM(PAMT), 0) AS SP_AMT
			             , NVL(SUM(RAMT), 0) AS SR_AMT
			          FROM (
			                SELECT A.UPJANG
			                     , DECODE(B.DAY_CLASS, 'P', SUM(B.DD_AMT), 0) AS PAMT
			                     , DECODE(B.DAY_CLASS, 'R', SUM(B.DD_AMT), 0) AS RAMT
			                  FROM MAP_DAY_LOG_MGMT A
			                     , MAP_DAY_PLAN_CAPTURE B
			                 WHERE A.UPJANG = B.UPJANG
	    	                 <#if upjang?has_content>
	                           AND B.UPJANG = :upjang
	                         </#if>
	   		                   AND A.YY = B.YY
			                   AND A.MM = B.MM
			                   AND A.DAY_CLASS = B.DAY_CLASS
			                   AND A.CONFIRM_YN = 'Y'
			                   AND B.YMD BETWEEN :startDate AND :endDate
			                   /* 41203010:[매출액]식음료매출_식료, 41203020:[매출액]식음료매출_음료, 41203030:[매출액]식음료매출(FS) */                   
			                   AND B.ACCT_CD IN ('41203010', '41203020', '41203030','41209040')
			                 GROUP BY A.UPJANG, B.DAY_CLASS
	                )
	         		GROUP BY UPJANG    
	               ) B
	             , (
			        /* 매출 - 식음료매출 실적 (내부이용포함) SYSDATE기준으로 당일까지는 실적, 그 이후는 일추정에서 금액을 가져옴 20151230 맹수영*/
	SELECT UPJANG,
	       SUM(SS_AMT) SS_AMT
	FROM (
	      SELECT  UPJANG
	             ,CASE WHEN TO_CHAR(SYSDATE,'YYYYMMDD') > OCCUR_DATE
	                   THEN SS_AMT
	                   ELSE SR_AMT END SS_AMT
	      FROM        
	      (
	                  SELECT YMD OCCUR_DATE, 
	                         UPJANG
	                       , NVL(RAMT, 0) AS SR_AMT
	                       , 0 SS_AMT
	                    FROM (
	                          SELECT B.YMD, A.UPJANG
	                               , DECODE(B.DAY_CLASS, 'R', B.DD_AMT, 0) AS RAMT
	                            FROM MAP_DAY_LOG_MGMT A
	                               , MAP_DAY_PLAN B
	                           WHERE A.UPJANG = B.UPJANG
							   <#if upjang?has_content>
					             AND B.UPJANG = :upjang
					           </#if>
	                             AND A.YY = B.YY
	                             AND A.MM = B.MM
	                             AND A.DAY_CLASS = B.DAY_CLASS
	                             AND A.CONFIRM_YN = 'Y'
	                             AND B.YMD  BETWEEN :startDate AND :endDate
			                   /* 41203010:[매출액]식음료매출_식료, 41203020:[매출액]식음료매출_음료, 41203030:[매출액]식음료매출(FS), 41209040:[매출액]기타매출-기타 */                   
			                   AND B.ACCT_CD IN ('41203010', '41203020', '41203030','41209040')
			
	                      )  
	                   UNION ALL
	                  SELECT  B.OCCUR_DATE 
	                        , A.UPJANG_CD AS UPJANG
	                        , 0 SR_AMT
	                        , B.NET_AMT AS SS_AMT
	                    FROM SLA_IF_UPJANG_SALS_MST A
	                       , SLA_IF_UPJANG_SALS_DETAIL B
	                   WHERE A.OCCUR_DATE = B.OCCUR_DATE
	                     AND A.SYS_CLASS = B.SYS_CLASS
	                     AND A.UPJANG_CD = B.UPJANG_CD
						<#if upjang?has_content>
			            AND A.UPJANG_CD = :upjang
			            </#if>
	                      AND A.OCCUR_DATE  BETWEEN :startDate AND :endDate
	                     AND A.RECEIPT_NUM = B.RECEIPT_NUM
	                       /* 1103:[FS사업]식음료매출(FS), 1106:[FS사업]기타매출_기타, 1204:[외식사업]식음료매출_식료, 1205:[외식사업]식음료매출_음료, 2001:[매점POS]식음료매출(FS), 2101:[외식POS]식음료매출_식료, 2102:[외식POS]식음료매출_음료 */
			           /* 1103:[FS사업]식음료매출(FS), 1106:[FS사업]기타매출_기타, 1204:[외식사업]식음료매출_식료, 1205:[외식사업]식음료매출_음료, 2001:[매점POS]식음료매출(FS), 2101:[외식POS]식음료매출_식료, 2102:[외식POS]식음료매출_음료 */
			           AND B.SALS_CLASS IN ('1103', '2001', '2002', '1106', '1204', '1205', '2101', '2102','1901') 
			              )
	    )
	GROUP BY UPJANG
	               ) C
	  /* 매출 - 식음료매출 실적 (내부이용포함) SYSDATE기준으로 당일까지는 실적, 그 이후는 일추정에서 금액을 가져옴 20151230 맹수영*/
	             , (
			        /* 재료비 - 식음료원가 계획, 추정 */
			        SELECT UPJANG
			             , NVL(SUM(PAMT), 0) AS MP_AMT
			             , NVL(SUM(RAMT), 0) AS MR_AMT
			          FROM (
			                SELECT A.UPJANG
			                     , DECODE(B.DAY_CLASS, 'P', SUM(B.DD_AMT), 0) AS PAMT
			                     , DECODE(B.DAY_CLASS, 'R', SUM(B.DD_AMT), 0) AS RAMT
			                  FROM MAP_DAY_LOG_MGMT A
			                     , MAP_DAY_PLAN_CAPTURE B
			                 WHERE A.UPJANG = B.UPJANG
				             <#if upjang?has_content>
	                           AND B.UPJANG = :upjang
	                         </#if>
	                      	   AND A.YY = B.YY
			                   AND A.MM = B.MM
			                   AND A.DAY_CLASS = B.DAY_CLASS
			                   AND A.CONFIRM_YN = 'Y'
			                   AND B.YMD BETWEEN :startDate AND :endDate
			                   /* 42203010:[재료비]식음료원가_식료, 42203020:[재료비]식음료원가_음료, 42203030:[재료비]식음료원가(FS) */                   
			                   AND B.ACCT_CD IN ('42203010', '42203020', '42203030')
			                 GROUP BY A.UPJANG, B.DAY_CLASS
			                )
			         GROUP BY UPJANG  
	               ) D
	             , (
			        /* 재료비 - 실적 - 전산구매 */
	
	SELECT UPJANG,
	       SUM(MS_AMT1) MS_AMT1
	FROM (		        
	      SELECT  UPJANG
	             ,CASE WHEN TO_CHAR(SYSDATE,'YYYYMMDD') > TRANS_DATE
	                   THEN MS_AMT1
	                   ELSE RAMT END MS_AMT1
			          FROM (
			                SELECT YMD TRANS_DATE
	                         , TO_CHAR(A.UPJANG) UPJANG
			                     , DECODE(B.DAY_CLASS, 'R', B.DD_AMT, 0) AS RAMT
			                     , 0 MS_AMT1
			                  FROM MAP_DAY_LOG_MGMT A
			                     , MAP_DAY_PLAN B
			                 WHERE A.UPJANG = B.UPJANG
				             <#if upjang?has_content>
	                           AND B.UPJANG = :upjang
	                         </#if>
	    	                   AND A.YY = B.YY
			                   AND A.MM = B.MM
			                   AND A.DAY_CLASS = B.DAY_CLASS
			                   AND A.CONFIRM_YN = 'Y'
			                   AND B.YMD  BETWEEN :startDate AND :endDate
			                   /* 41203010:[매출액]식음료매출_식료, 41203020:[매출액]식음료매출_음료, 41203030:[매출액]식음료매출(FS), 41209040:[매출액]기타매출-기타 */                   
			                   AND B.ACCT_CD IN ('41203010', '41203020', '41203030','41209040')
			        UNION ALL
			        /* 재료비 - 실적 - 전산구매 */
			        SELECT /*+ USE_NL(A.HD A.DT) */A.TRANS_DATE TRANS_DATE
	                 , A.TRANS_UPJANG AS UPJANG		
	                 , 0 RAMT        
			             , ROUND(NVL( DECODE(B.OUTVAT_FLAG, 'Y',MARGIN_AMOUNT * DECODE( TAX_CODE, '100', DECODE( MATERIAL_ACCTCD, '11402000', 1.1, 1) ) ,  MARGIN_AMOUNT  ), 0)) AS MS_AMT1
			 	          FROM HLDC_PO_TRANSACTION_NHASH A
			             , HLDC_PO_SUBINVENTORY B
			         WHERE A.SUBINV_CODE = B.SUBINV_CODE
			           AND A.TRANS_DATE  BETWEEN :startDate AND :endDate
				       <#if upjang?has_content>
	                   AND A.TRANS_UPJANG = :upjang
	                   </#if>
	    	           AND A.TRANS_TYPE LIKE 'O%'        -- 출고
			           AND A.TRANS_TYPE <> 'O002'  -- 이동출고 제외
			           /* 42203010:[재료비]식음료원가_식료, 42203020:[재료비]식음료원가_음료, 42203030:[재료비]식음료원가(FS) */
			           AND A.ACCTCD IN ('42203010', '42203020', '42203030')
	               ) 
	    )
	GROUP BY UPJANG
	               ) E	             
	             , (
	                /* 복리후생 식대비 - 일수로 Split */
	                SELECT UPJANG
	                     , ROUND(NVL(SUM(AMT), 0) / TO_NUMBER(TO_CHAR(LAST_DAY(SYSDATE), 'DD')), 0) * (TO_DATE(:endDate) - TO_DATE(:startDate) + 1) AS MS_AMT3
	                  FROM MAS_WELFARE
	                 WHERE APPLY_MM = TO_CHAR(TO_DATE(:startDate, 'YYYYMMDD'), 'YYYYMM')
	                 GROUP BY UPJANG
	               ) G          
	         WHERE A.UPJANG = B.UPJANG(+)
	           AND A.UPJANG = C.UPJANG(+)
	           AND A.UPJANG = D.UPJANG(+)
	           AND A.UPJANG = E.UPJANG(+)   
	           AND A.UPJANG = G.UPJANG(+)
               <#if muCd?has_content>
	           AND A.MU_CD = :muCd
	           </#if>
	           <#if tmCd?has_content>
               AND (A.TM_CD = :tmCd OR A.PT_CD = :tmCd)
               </#if>
               <#if upjang?has_content>
               AND A.UPJANG = :upjang
	           </#if>
               AND A.CLOSE_DATE IS NULL
             GROUP BY A.MU_CD, A.MU_NAME, A.TM_CD, A.TM_NAME, A.UPJANG, A.UPJANGNM, A.JOB_NAME, A.SUB_JOB_NAME, A.LOC_NAME
             )     
	]]></statement>
</hqml>
