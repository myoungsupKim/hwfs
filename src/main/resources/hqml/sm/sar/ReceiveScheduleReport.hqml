<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="sm.sar.receiveScheduleReportDAO">
	<desc>입금예정 보고서 HQML Query</desc>

	<!-- 입금예정 보고서 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.sm.sar.dao.ReceiveScheduleReportDAO.selectList */
		<![CDATA[
			SELECT 
				<#if occurDate?has_content>:occurDate AS OCCUR_DATE ,</#if>
				CARD_COM_CD,
			    (SELECT CARD_COM_NM FROM SLA_CARD_COM_MGMT WHERE CARD_COM_CD = Y.CARD_COM_CD) AS CARD_CON_NM,
                CARD_CLASS,
                GFN_SCC_CODENAME_FUN('CARD_CLASS2', DECODE(CARD_CLASS,'1','N','2','Y',CARD_CLASS)) AS CARD_CLASS_NM,
			    APPRV_DATE,
			    USE_AMT,
			    RECEIVE_AMT,
			    CARDCOMM_AMT,
			    REAL_RECEIVE_AMT,
			    REAL_COMM_AMT,
				RECEIVE_AMT - REAL_RECEIVE_AMT AS CHA_RECEIVE_AMT,
			    CARDCOMM_AMT - REAL_COMM_AMT AS CHA_COMM_AMT
			FROM (
			       SELECT A.CARD_COM_CD
                         , A.CARD_CLASS
			             , A.APPRV_DATE
			             , SUM(A.USE_AMT) AS USE_AMT
			             , (SUM(A.USE_AMT-A.CARDCOMM_AMT)) AS RECEIVE_AMT
			             , SUM(A.CARDCOMM_AMT) AS CARDCOMM_AMT 
			             , SUM(NVL(T.REAL_RECEIVE_AMT,0)) AS REAL_RECEIVE_AMT
			             , SUM(NVL(T.REAL_COMM_AMT,0)) AS REAL_COMM_AMT
			        FROM SLA_CARD_APPRV_INFO A, SLA_AR_MST B, 
			            (SELECT 
			                E.AR_NUM
			                , SUM(NVL(E.RECEIVE_AMT, 0)) AS REAL_RECEIVE_AMT
			                , SUM(NVL(C.DEDUC_AMT,0)) AS REAL_COMM_AMT
			            FROM SLA_AR_RECEIVE_MST C, SLA_RECEIVE_DEDUC_ARTICLE D, SLA_AR_RECEIVE_DETAIL E
			            WHERE
			                C.RECEIVE_NUM = D.RECEIVE_NUM(+)
                            AND C.RECEIVE_NUM = D.RECEIVE_NUM
                            AND C.RECD_STATUS = 'L'
                            AND D.RECD_STATUS = 'L'
                            AND E.RECD_STATUS = 'L'
			            GROUP BY E.AR_NUM) T
			        WHERE A.AR_NUM = B.AR_NUM
			        AND   B.AR_NUM=T.AR_NUM(+)
			        AND   A.RECD_STATUS = 'L'
			        AND   B.RECD_STATUS = 'L'
						<#if occurDate?has_content>AND    A.OCCUR_DATE = :occurDate</#if>
						<#if cardComCd?has_content>AND    A.CARD_COM_CD = :cardComCd</#if>			
						<#if fiscalDate?has_content>AND    FISCAL_DATE = :fiscalDate</#if>					                
			        GROUP BY CARD_COM_CD, APPRV_DATE, A.CARD_CLASS
			        ORDER BY CARD_COM_CD, APPRV_DATE 
			)  Y    
		]]>
	</statement>

	<!-- 입금예정 보고서(을)를 등록한다. -->
	<statement name="insert" type="insert">
		/*+ com.hwfs.sm.sar.dao.ReceiveScheduleReportDAO.insert */
		<![CDATA[
		INSERT INTO TABLE_NAME 
		(
		       COLUMN_NAME1,
			   COLUMN_NAME2,
		       CUSER,
		       CDATE
		)
		VALUES
		(
		       :columnName1,
			   <#if columnName2?has_content> :columnName2, <#else> null, </#if>
		       :loginSabun,
		       SYSDATE
		)
		]]>
	</statement>
	
	<!-- 입금예정 보고서(을)를 수정한다. -->
	<statement name="update" type="update">
		/*+ com.hwfs.sm.sar.dao.ReceiveScheduleReportDAO.update */
		<![CDATA[
		UPDATE TABLE_NAME 
		SET    COLUMN_NAME1 = :columnName1,
		       COLUMN_NAME2 = :columnName2,
		       UUSER = :loginSabun,
		       UDATE = SYSDATE
		WHERE  COLUMN_NAME = :columnName
		]]>
	</statement>

	<!-- 입금예정 보고서(을)를 삭제한다. -->
	<statement name="delete" type="delete">
		/*+ com.hwfs.sm.sar.dao.ReceiveScheduleReportDAO.delete */
		<![CDATA[
		DELETE 
		FROM   TABLE_NAME 
		WHERE  COLUMN_NAME = :columnName
		]]>
	</statement>

</hqml>
