<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="sm.sar.saleCashByValidDateDAO">
	<desc>영업현금 내역 HQML Query</desc>

	<!-- 영업현금 내역 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.sm.sar.dao.SaleCashByValidDateDAO.selectList */
		<![CDATA[
		SELECT A.SALES_CASH_NUM,
		       A.UPJANG_CD,
		       A.SYS_CLASS,
		       A.OCCUR_DATE,
		       A.MU_CD,
		       C.MU_NM,
		       C.TM_CD,
		       C.TM_NM,
		       A.CC_CD,
		       (SELECT  CC_NM FROM SCC_CC WHERE CC_CD = A.CC_CD) AS CC_NM,
		       A.ACCT_CD,
		       (SELECT DISTINCT ACCT.ACCTNM FROM HLDC_ST_ACCOUNT_V ACCT WHERE A.ACCT_CD = ACCT.ACCTCD) ACCT_NM,
		       A.CUST_CD,
		       D.CUSTNM AS CUST_NM,
		       NVL(A.OCCUR_AMT, 0) OCCUR_AMT,
		       NVL((SELECT SUM(RECEIVE_AMT) FROM SLA_SALES_CASH_ALT_DETAIL WHERE SALES_CASH_NUM = A.SALES_CASH_NUM AND ALT_DATE <= :occurDate AND RECD_STATUS = 'L'), 0) ALT_AMT,
		       (NVL(A.OCCUR_AMT,0) - NVL((SELECT SUM(RECEIVE_AMT) FROM SLA_SALES_CASH_ALT_DETAIL WHERE SALES_CASH_NUM = A.SALES_CASH_NUM AND ALT_DATE <= :occurDate AND RECD_STATUS = 'L'), 0)) AS BAL_AMT,
		       A.COUPON_PROC_NUM,
		       A.WITHDRAW_AMT,
		       DECODE(A.JOURNALZ_YN, 'Y', 1, 0) AS JOURNALZ_YN,
		       A.JOURNALZ_NUM,
		       A.PROC_USER,
		       A.MODIFY_SALS_YN,
		       A.DEAL_TYPE,
		       A.DATA_CLASS,
		       A.RECEIVE_NUM,
		       A.RECD_STATUS,
			  '1' AS PL_UP_CD,
			  '0' AS BL_SHOW,
			  3  AS LEVEL_NO,
			  '+' AS  BL_PLUS		       
		FROM   SLA_SALES_CASH_OCCUR_INFO A,
			   HLDC_SC_DEPT_V C,
			   ST_CUST D
		WHERE  A.CC_CD = C.CC_CD(+)
		AND	   A.CUST_CD = D.CUSTCD(+)
		AND    A.RECD_STATUS = 'L'
		<#if muCd?has_content>
		AND    C.MU_CD = :muCd
		</#if>
		<#if tmCd?has_content>
		 AND     A.CC_CD IN (
							         SELECT  A.CC_CD
							         FROM    SCC_CC A
							                 ,HLDC_SC_DEPT_V B
							         WHERE   B.CC_CD = A.CC_CD
							         AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
							         AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
							         AND    ( B.TM_CD = :tmCd OR B.PT_CD = :tmCd)
        							 )
		</#if>
		<#if upjangCd?has_content>
		AND A.CC_CD = (
								SELECT CC_CD FROM SCO_UPJANG_MST_V
                 			    WHERE UPJANG = :upjangCd
                 			  )
		</#if>
		<#if ccCd?has_content>
		AND    A.CC_CD = :ccCd
		</#if>
		<#if occurDate?has_content>
		AND    A.OCCUR_DATE <= :occurDate
		</#if>
		<#if custCd?has_content>
		AND    A.CUST_CD = :custCd
		</#if>
		<#if zeroIncludeYn?has_content && zeroIncludeYn == 'N'>
		AND NVL(A.OCCUR_AMT,0) - NVL((SELECT SUM(RECEIVE_AMT) FROM SLA_SALES_CASH_ALT_DETAIL WHERE SALES_CASH_NUM = A.SALES_CASH_NUM AND ALT_DATE <= :occurDate AND RECD_STATUS = 'L'), 0) <> 0
		</#if>
		ORDER BY A.SALES_CASH_NUM DESC
		]]>
	</statement>
	
	<!-- 영업현금 내역 목록을 조회한다. (영업잔액조회 -From~To)-->
	<statement name="selectList2" type="select">
		/*+ com.hwfs.sm.sar.dao.SaleCashByValidDateDAO.selectList2 */
		<![CDATA[
		SELECT A.SALES_CASH_NUM,
		       A.UPJANG_CD,
		       A.SYS_CLASS,
		       A.OCCUR_DATE,
		       A.MU_CD,
		       C.MU_NM,
		       C.TM_CD,
		       C.TM_NM,
		       A.CC_CD,
		       (SELECT  CC_NM FROM SCC_CC WHERE CC_CD = A.CC_CD) AS CC_NM,
		       A.ACCT_CD,
		       (SELECT DISTINCT ACCT.ACCTNM FROM HLDC_ST_ACCOUNT_V ACCT WHERE A.ACCT_CD = ACCT.ACCTCD) ACCT_NM,
		       A.CUST_CD,
		       D.CUSTNM AS CUST_NM,
		       NVL(A.OCCUR_AMT, 0) OCCUR_AMT,
		       NVL((SELECT SUM(RECEIVE_AMT) FROM SLA_SALES_CASH_ALT_DETAIL WHERE SALES_CASH_NUM = A.SALES_CASH_NUM AND ALT_DATE < :occurDate AND RECD_STATUS = 'L'), 0) OLD_ALT_AMT,
		       NVL((SELECT SUM(RECEIVE_AMT) FROM SLA_SALES_CASH_ALT_DETAIL WHERE SALES_CASH_NUM = A.SALES_CASH_NUM AND ALT_DATE BETWEEN :occurDate AND :occurDateTo AND RECD_STATUS = 'L'), 0) ALT_AMT,
		       (NVL(A.OCCUR_AMT,0) - NVL((SELECT SUM(RECEIVE_AMT) FROM SLA_SALES_CASH_ALT_DETAIL WHERE SALES_CASH_NUM = A.SALES_CASH_NUM AND ALT_DATE <= :occurDateTo AND RECD_STATUS = 'L'), 0)) AS BAL_AMT,
		       A.COUPON_PROC_NUM,
		       A.WITHDRAW_AMT,
		       DECODE(A.JOURNALZ_YN, 'Y', 1, 0) AS JOURNALZ_YN,
		       A.JOURNALZ_NUM,
		       A.PROC_USER,
		       A.MODIFY_SALS_YN,
		       A.DEAL_TYPE,
		       A.DATA_CLASS,
		       A.RECEIVE_NUM,
		       A.RECD_STATUS,
			  '1' AS PL_UP_CD,
			  '0' AS BL_SHOW,
			  3  AS LEVEL_NO,
			  '+' AS  BL_PLUS		       
		FROM   SLA_SALES_CASH_OCCUR_INFO A,
			   HLDC_SC_DEPT_V C,
			   ST_CUST D
		WHERE  A.CC_CD = C.CC_CD(+)
		AND	   A.CUST_CD = D.CUSTCD(+)
		AND    A.RECD_STATUS = 'L'
		<#if muCd?has_content>
		AND    C.MU_CD = :muCd
		</#if>
		<#if tmCd?has_content>
		 AND     A.CC_CD IN (
							         SELECT  A.CC_CD
							         FROM    SCC_CC A
							                 ,HLDC_SC_DEPT_V B
							         WHERE   B.CC_CD = A.CC_CD
							         AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
							         AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
							         AND    ( B.TM_CD = :tmCd OR B.PT_CD = :tmCd)
        							 )
		</#if>
		<#if upjangCd?has_content>
		AND A.CC_CD = (
								SELECT CC_CD FROM SCO_UPJANG_MST_V
                 			    WHERE UPJANG = :upjangCd
                 			  )
		</#if>
		<#if ccCd?has_content>
		AND    A.CC_CD = :ccCd
		</#if>
		--AND    A.OCCUR_DATE BETWEEN :occurDateFrom AND :occurDateTo
		<#if custCd?has_content>
		AND    A.CUST_CD = :custCd
		</#if>
		<#if zeroIncludeYn?has_content && zeroIncludeYn == 'N'>
		AND NVL(A.OCCUR_AMT,0) - NVL((SELECT SUM(RECEIVE_AMT) FROM SLA_SALES_CASH_ALT_DETAIL WHERE SALES_CASH_NUM = A.SALES_CASH_NUM AND ALT_DATE <= :occurDateTo AND RECD_STATUS = 'L'), 0) <> 0
		</#if>
		ORDER BY A.SALES_CASH_NUM DESC
		]]>
	</statement>

</hqml>
