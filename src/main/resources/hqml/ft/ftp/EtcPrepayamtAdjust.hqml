<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="ft.ftp.etcPrepayamtAdjustDAO">
    <desc>기타 선급금 정산 관리 HQML Query</desc>

    <!-- 기타 선급금 정산 관리 목록을 조회한다. -->
    <statement name="selectList" type="select">
        /*+ com.hwfs.ft.ftp.dao.EtcPrepayamtAdjustDAO.selectList */
        <![CDATA[
        SELECT PO_ORDER_NUM,
               OTHER_AMT_SEQ,
               ADJUST_SEQ,
               MGMT_NUM,
               ADJUST_AMT,
               JOURNALZ_ACCT,
               FISCAL_SLIP_NUM,
               FISCAL_SLIP_CREATION_DATE,
               TAX_SHET_NUM,
               ACCUM_ALT_AMT,
               CUSER,
               CDATE,
               UUSER,
               UDATE
        FROM   ETC_PREPAYAMT_ADJUST
        WHERE  PO_ORDER_NUM = :poOrderNum
        AND    OTHER_AMT_SEQ = :otherAmtSeq
        ]]>
    </statement>

    <!-- 기타 선급금 정산 관리(을)를 등록한다. -->
    <statement name="insert" type="insert">
        /*+ com.hwfs.ft.ftp.dao.EtcPrepayamtAdjustDAO.insert */
        <![CDATA[
INSERT INTO ETC_PREPAYAMT_ADJUST
(
 PO_ORDER_NUM,
 ADJUST_SEQ,
 MGMT_NUM,
 PREPAYAMT_AMT,
 JOURNALZ_ACCT,
 TAX_SHET_NUM,
 CUSER,
 CDATE,
 UUSER,
 UDATE,
 REAL_PAYMENT_PLCE,
 SLIP_NUM,
 PREPAYAMT_CLASS,
 PAY_SCHD_DATE,
 SLIP_PUBLISH_DATE,
 ACCUM_ALT_AMT,
 REMARKS,
 SNGLFOOTLST_NM_YN,
 BANK_ACCT_NO,
 BANK_ACCT_OWNR,
 BANK_CD,
 BANK_TYPE
) VALUES (
 :poOrderNum,
 (SELECT NVL(MAX(ADJUST_SEQ),0) +1 FROM ETC_PREPAYAMT_ADJUST WHERE PO_ORDER_NUM=:poOrderNum),
<#if mgmtNum?exists> :mgmtNum, <#else> null, </#if>
<#if prepayamtAmt?exists> :prepayamtAmt, <#else> null, </#if>
<#if journalzAcct?exists> :journalzAcct, <#else> null, </#if>
<#if taxShetNum?exists> :taxShetNum, <#else> null, </#if>
 :loginSabun,
 SYSDATE,
 :loginSabun,
 SYSDATE,
<#if realPaymentPlce?exists> :realPaymentPlce, <#else> null, </#if>
<#if slipNum?exists> :slipNum, <#else> null, </#if>
<#if prepayamtClass?exists> :prepayamtClass, <#else> null, </#if>
<#if paySchdDate?exists> :paySchdDate, <#else> null, </#if>
<#if slipPublishDate?exists> :slipPublishDate, <#else> null, </#if>
<#if accumAltAmt?exists> :accumAltAmt, <#else> null, </#if>
<#if remarks?exists> :remarks, <#else> null, </#if>
<#if snglfootlstNmYn?exists> DECODE(:snglfootlstNmYn, '1', 'Y', 'N'), <#else> null, </#if>
<#if bankAcctNo?exists> SCC_CRYPTO.ENC_FUN(:bankAcctNo), <#else> null, </#if>
<#if bankAcctOwnr?exists> :bankAcctOwnr, <#else> null, </#if>
<#if bankCd?exists> :bankCd, <#else> null, </#if>
<#if bankType?exists> :bankType <#else> null </#if>

)

        ]]>
    </statement>

    <!-- 기타 선급금 정산 관리(을)를 수정한다. -->
    <statement name="update" type="update">
        /*+ com.hwfs.ft.ftp.dao.EtcPrepayamtAdjustDAO.update */
        <![CDATA[
UPDATE ETC_PREPAYAMT_ADJUST SET
<#if mgmtNum?exists> MGMT_NUM = :mgmtNum, </#if>
<#if prepayamtAmt?exists> PREPAYAMT_AMT = :prepayamtAmt, </#if>
<#if journalzAcct?exists> JOURNALZ_ACCT = :journalzAcct, </#if>
<#if taxShetNum?exists> TAX_SHET_NUM = :taxShetNum, </#if>
<#if realPaymentPlce?exists> REAL_PAYMENT_PLCE = :realPaymentPlce, </#if>
<#if slipNum?exists> SLIP_NUM = :slipNum, </#if>
<#if prepayamtClass?exists> PREPAYAMT_CLASS = :prepayamtClass, </#if>
<#if paySchdDate?exists> PAY_SCHD_DATE = :paySchdDate, </#if>
<#if slipPublishDate?exists> SLIP_PUBLISH_DATE = :slipPublishDate, </#if>
<#if accumAltAmt?exists> ACCUM_ALT_AMT = :accumAltAmt, </#if>
<#if remarks?exists> REMARKS = :remarks, </#if>
<#if snglfootlstNmYn?exists> SNGLFOOTLST_NM_YN = DECODE(:snglfootlstNmYn, '1', 'Y', 'N'), </#if>
<#if bankAcctNo?exists> BANK_ACCT_NO = SCC_CRYPTO.ENC_FUN(:bankAcctNo), </#if>
<#if bankAcctOwnr?exists> BANK_ACCT_OWNR = :bankAcctOwnr, </#if>
<#if bankCd?exists> BANK_CD = :bankCd, </#if>
<#if bankType?exists> BANK_TYPE = :bankType, </#if>
       UUSER = :loginSabun,
       UDATE = SYSDATE
WHERE  PO_ORDER_NUM = :poOrderNum
AND    ADJUST_SEQ = :adjustSeq

        ]]>
    </statement>

    <!-- 기타 선급금 정산 관리(을)를 삭제한다. -->
    <statement name="delete" type="delete">
        /*+ com.hwfs.ft.ftp.dao.EtcPrepayamtAdjustDAO.delete */
        <![CDATA[
DELETE
FROM   ETC_PREPAYAMT_ADJUST
WHERE  PO_ORDER_NUM = :poOrderNum
AND    ADJUST_SEQ = :adjustSeq

        ]]>
    </statement>

    <!-- 기타 선급금 정산 관리(을)를 삭제한다. -->
    <statement name="deleteEtcPrepay" type="delete">
        /*+ com.hwfs.ft.ftp.dao.EtcPrepayamtAdjustDAO.deleteEtcPrepay */
        <![CDATA[
        DELETE
        FROM   ETC_PREPAYAMT_ADJUST
        WHERE  PO_ORDER_NUM = :poOrderNum
        ]]>
    </statement>

    <!-- 기타 선급금 정산 관리 전표관리 생성 상태로 수정. -->
    <statement name="createEtcFiscalSlipIf" type="update">
        /*+ com.hwfs.ft.ftp.dao.PoOrderOtherAmtDAO.updateSlipStatus */
        <![CDATA[
        UPDATE ETC_PREPAYAMT_ADJUST SET
            SLIP_NUM = :slipNum,
            UUSER = :loginSabun,
            UDATE = SYSDATE
        WHERE  PO_ORDER_NUM = :poOrderNum
        AND    ADJUST_SEQ = :adjustSeq
        ]]>
    </statement>

    <!-- 기타 선급금 정산 관리 전표관리 취소 상태로 수정. -->
    <statement name="cancelEtcFiscalSlipIf" type="update">
        /*+ com.hwfs.ft.ftp.dao.PoOrderOtherAmtDAO.updateSlipStatus */
        <![CDATA[
        UPDATE ETC_PREPAYAMT_ADJUST SET
            <#if slipNum?exists> SLIP_NUM = :slipNum, </#if>
            <#if paySchdDate?exists> PAY_SCHD_DATE = :paySchdDate, </#if>
            UUSER = :loginSabun,
            UDATE = SYSDATE
        WHERE  PO_ORDER_NUM = :poOrderNum
        AND    ADJUST_SEQ = :adjustSeq
        ]]>
    </statement>

    <!-- 기타 선급금 정산 관리 누적 대체 금액(수수료 체크 누적금액) 수정한다.. -->
    <statement name="updateAccumAltAmt" type="update">
        /*+ com.hwfs.ft.ftp.dao.EtcPrepayamtAdjust.updateAccumAltAmt */
        <![CDATA[
        UPDATE ETC_PREPAYAMT_ADJUST SET
            <#if accumAltAmt?exists> ACCUM_ALT_AMT = NVL(ACCUM_ALT_AMT,0) +:accumAltAmt, </#if>
            <#if tempAccumAltAmt?exists> TEMP_ACCUM_ALT_AMT = NVL(TEMP_ACCUM_ALT_AMT,0) +:tempAccumAltAmt, </#if>
            UUSER = :loginSabun,
            UDATE = SYSDATE
        WHERE  PO_ORDER_NUM = :poOrderNum
        AND    ADJUST_SEQ = :adjustSeq
        ]]>
    </statement>

    <!-- 가수금 정산 관리 누적 대체 금액(수수료 체크 누적금액) 수정한다.. -->
    <statement name="updateAccumAltAmt2" type="update">
        /*+ com.hwfs.ft.ftp.dao.EtcPrepayamtAdjust.updateAccumAltAmt2 */
        <![CDATA[
        UPDATE SLA_SAP_SUSPENSE_ALT_DETAIL SET
            <#if accumAltAmt?exists> FT_ACCUM_AMT = NVL(FT_ACCUM_AMT,0) +:accumAltAmt, </#if>
            UUSER = :loginSabun,
            UDATE = SYSDATE
        WHERE  SAP_SUSPENSE_NUM = :sapSuspenseNum
        AND    ALT_NUM = :altNum
        AND    ALT_SEQ = :altSeq
        ]]>
    </statement>


    <!-- 품의상태를 수정한다. -->
    <statement name="updateEtcAmtDraft" type="update">
        /*+ com.hwfs.ft.ftp.dao.EtcPrepayamtAdjust.updateEtcAmtDraft */
        <![CDATA[
            UPDATE ETC_PREPAYAMT_ADJUST SET
                 SIGN_INSTANCE_ID         	 = :signInstanceId
                ,UUSER                       = :uuser
                ,UDATE                       = SYSDATE
            WHERE  PO_ORDER_NUM = :poOrderNum
            AND    ADJUST_SEQ = :adjustSeq
        ]]>
    </statement>

    <!-- 선급금 누적금액 가져오기. -->
    <statement name="selectAccumAltAmt" type="select">
         /*+ com.hwfs.ft.ftp.dao.EtcPrepayamtAdjust.selectAccumAltAmt */
        <![CDATA[
        SELECT
               PREPAYAMT_AMT,
               ACCUM_ALT_AMT
        FROM   ETC_PREPAYAMT_ADJUST
        WHERE  PO_ORDER_NUM = :poOrderNum
        AND    ADJUST_SEQ = :adjustSeq
        ]]>
    </statement>

    <!-- 가수금 누적금액 가져오기. -->
    <statement name="selectAccumAltAmt2" type="select">
         /*+ com.hwfs.ft.ftp.dao.EtcPrepayamtAdjust.selectAccumAltAmt2 */
        <![CDATA[
        SELECT
               NVL(APPLY_AMT,0) APPLY_AMT,
               NVL(FT_ACCUM_AMT,0) FT_ACCUM_AMT
        FROM   SLA_ACCT_SUSPENSE_SEARCH_V
        WHERE  SAP_SUSPENSE_NUM = :sapSuspenseNum
        AND    ALT_NUM = :altNum
        AND    ALT_SEQ = :altSeq
        ]]>
    </statement>

</hqml>
