<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="ft.fts.releaseMgmtDAO">
	<desc>판매 주문내역에 대하여 출고를 관리 HQML Query</desc>

	<!-- 판매 주문내역에 대하여 출고를 관리 목록을 조회한다. -->
	<statement name="selectList" type="select">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.selectList */
        SELECT RELEASE_NUM,
               SHIPMENT_TYPE,
               SALE_AGED,
               ATTACH_DEPT,
               RELEASE_STATUS_CD,
               SALE_PRCG_ID,
               CUST_CD,
               APPRV_REQ_DATE,
               APPRV_DATE,
               APPROV_USER_ID,
               RELEASE_CONFIRM_DATE,
               CONFIRMOR_ID,
               TOT_QUANTITY,
               TOT_WGT,
               TOT_AMT_USD,
               TOT_AMT_KRW,
               DECODE(TAX_SHET_CREATION_YN, 'Y', 1, 0) AS TAX_SHET_CREATION_YN,
               DECODE(SALS_ACT_SEND_YN, 'Y', 1, 0) AS SALS_ACT_SEND_YN,
               CUSER,
               CDATE,
               UUSER,
               UDATE
        FROM   RELEASE_MGMT
        WHERE  RELEASE_NUM = :releaseNum

        ]]>
	</statement>

	<!-- 판매 주문내역에 대하여 출고를 관리 목록을 조회한다. -->
	<statement name="releaseRegList" type="select"><![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.releaseRegList */
        SELECT
        *
        FROM
        (
            SELECT
                 0 CHK
                ,D.RELEASE_STATUS_CD
                ,NVL(SCC_CODE_NM('RELEASE_STATUS_CD', D.RELEASE_STATUS_CD), '미출고') AS RELEASE_STATUS_NM
                ,A.ORDER_DATE
                ,A.RELEASEPLCE_CD
                ,A.RELEASEPLCE_NM
                ,A.SALE_PRCG_ID
                ,(SELECT T.NM_KOR FROM   HR_PERSONAL T, SCC_CC T2 WHERE  T2.CC_CD = T.CC_CD AND A.SALE_PRCG_ID =T.SABUN ) SALE_PRCG_NM
                ,B.PO_ORDER_NUM
                ,B.ITEM_CD
                ,F.ITEM_NAME||' '||F.ITEM_SIZE AS ITEM_NM
                ,B.UNIT

                ,A.RELEASE_DATE RELEASE_REQ_DATE
                ,A.RELEASE_DATE AS RELEASE_DATE
                ,B.BLCK_MARK
                ,B.SALE_CST
                ,C.LAST_SALE_EDATE

                ,NVL(B.ORDER_QUANTITY,0) -NVL(B.CANCEL_QUANTITY,0)  AS ORDER_QUANTITY
                ,NVL(B.ORDER_WGT,0) -NVL(B.CANCEL_WGT,0)  AS ORDER_WGT

                ,NVL(C.DELIVER_QUANTITY, 0)
                - NVL(C.ORDER_REMAIN_QUANTITY, 0)
                - NVL(C.RELEASE_WAIT_QUANTITY, 0)
                - NVL(C.RELEASE_END_WGT, 0)
                  ORDER_REMAIN_QUANTITY      /*잔여수량*/

                ,NVL(C.DELIVER_WGT, 0)
                - NVL(C.ORDER_REMAIN_WGT, 0)
                - NVL(C.RELEASE_WAIT_WGT, 0)
                - NVL(C.RELEASE_END_WGT, 0) ORDER_REMAIN_WGT

                ,NVL(C.DELIVER_QUANTITY,0)  -
                 (NVL(C.RELEASE_WAIT_QUANTITY,0)
                + NVL(C.RELEASE_END_QUANTITY,0)
                + NVL(C.RMA_QUANTITY,0)
                + NVL(C.WH_MOVE_QUANTITY,0)) RELEASE_POSS_QUANTITY

                ,NVL(C.DELIVER_WGT,0)  -
                 (NVL(C.RELEASE_WAIT_WGT,0)
                + NVL(C.RELEASE_END_WGT,0)
                + NVL(C.RMA_WGT,0)
                + NVL(C.WH_MOVE_WGT,0)) RELEASE_POSS_WGT

                ,F.KG_CONVERT_RATE
                ,NVL(B.ORDER_QUANTITY,0) - ( NVL(B.RELEASE_APPRV_REQ_QUANTITY,0) + NVL(B.RELEASE_QUANTITY,0) + NVL(B.CANCEL_QUANTITY,0) ) RELEASE_EXPECT_QUANTITY  /*출고예정수량*/
                ,NVL(B.ORDER_WGT,0) - ( NVL(B.RELEASE_APPRV_REQ_WGT,0) + NVL(B.RELEASE_WGT,0) + NVL(B.CANCEL_WGT,0) ) RELEASE_EXPECT_WGT
                /*
                ,CASE WHEN B.UNIT <> 'KG' THEN
                     (NVL(B.ORDER_WGT,0) - ( NVL(B.RELEASE_APPRV_REQ_WGT,0) + NVL(B.RELEASE_WGT,0) + NVL(B.CANCEL_WGT,0) )) * KG_CONVERT_RATE
                 ELSE
                     NVL(B.ORDER_WGT,0) - ( NVL(B.RELEASE_APPRV_REQ_WGT,0) + NVL(B.RELEASE_WGT,0) + NVL(B.CANCEL_WGT,0) )
                 END AS  RELEASE_EXPECT_WGT
                */
                ,NVL(B.ORDER_QUANTITY,0) - ( NVL(B.RELEASE_APPRV_REQ_WGT,0) + NVL(B.RELEASE_WGT,0) + NVL(B.CANCEL_WGT,0) ) ORG_RELEASE_EXPECT_WGT

                ,B.SALE_ORDER_NUM
                ,B.SALE_ORDER_NUM_SEQ
                ,C.DELIVER_NUM

                ,NVL(C.DELIVER_QUANTITY,0)  DELIVER_QUANTITY
                ,NVL(C.RELEASE_WAIT_QUANTITY,0)  RELEASE_WAIT_QUANTITY
                ,NVL(C.RELEASE_WAIT_WGT,0)  RELEASE_WAIT_WGT
                ,NVL(C.RELEASE_END_QUANTITY,0)  RELEASE_END_QUANTITY
                ,NVL(C.RELEASE_END_WGT,0)  RELEASE_END_WGT

                ,C.RMA_QUANTITY
                ,C.WH_MOVE_QUANTITY
                ,B.BEFORE_INVENTORY
                ,C.ENTRY_NUM
                ,C.ENTRY_ITEM_SEQ
                ,B.ITEM_SEQ
                ,A.SALE_ORDER_TYPE
                ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'SALE_TYPE' AND CODE =A.SALE_ORDER_TYPE  ) AS SALE_ORDER_TYPE_NM
                ,NVL(D.SALE_AGED,  A.SALE_AGED) AS SALE_AGED
                ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'SALE_AGED' AND CODE = NVL(D.SALE_AGED,  A.SALE_AGED)  ) AS SALE_AGED_NM

                ,A.ATTACH_DEPT
                ,C.DELIVER_UPRICE_FOREIGN_CURRENC
                ,C.DELIVER_UPRICE_KRW
                ,B.RELEASE_QUANTITY
                ,B.RELEASE_WGT
                ,B.HS_CD
                ,C.WH_CD
                ,C.WH_NM
                ,B.SALE_UPRICE

                ,CASE WHEN C.PO_TYPE= '10' THEN    --수입(KRW)
                     G.BL_NUM
                 ELSE
                    (
                      SELECT T.ITEM_BL_NUM FROM PO_ORDER_ITEM_DETAIL T
                      WHERE B.PO_ORDER_NUM = T.PO_ORDER_NUM
                      AND B.ITEM_CD = T.ITEM_CD
                      AND B.ITEM_SEQ = T.ITEM_SEQ
                    )
                 END AS BL_NUM
                ,NVL(D.CUST_CD,RELEASEPLCE_CD) AS CUST_CD
                ,(SELECT T.CUSTNM FROM ST_CUST T WHERE T.CUSTCD = NVL(D.CUST_CD,RELEASEPLCE_CD)  AND T.USE_YN='Y' ) AS CUST_NM
                ,D.REAL_WGT
                ,ROUND((C.DELIVER_AMT+NVL(E.DIV_AMT,0)) * DECODE(C.UNIT, 'KG', B.ORDER_WGT, B.ORDER_QUANTITY) /  DECODE(C.UNIT, 'KG', C.DELIVER_WGT, C.DELIVER_QUANTITY))  AS BUY_CST
                --,B.BUY_CST
                ,D.SALE_AMT                  /*판매금액*/
                ,C.CURRENT_WH_DELIVER_DATE    /* 입고일자 */
                ,NVL((SELECT T.PROPOSAL_SEQ FROM PO_PROPOSAL_ITEM_DTL T WHERE T.PO_PROPOSAL_NUM=C.PO_PROPOSAL_NUM AND T.ITEM_CD = B.ITEM_CD AND T.PROPOSAL_SEQ = B.ITEM_SEQ),0) PROPOSAL_SEQ
                ,(SELECT T.NM_KOR FROM SCC_USERINFO T WHERE T.SABUN = NVL(D.CUSER,B.CUSER)) AS CUSER
                ,NVL(D.CDATE,B.CDATE) AS CDATE
                ,(SELECT T.NM_KOR FROM SCC_USERINFO T WHERE T.SABUN = NVL(D.UUSER,B.UUSER)) AS UUSER
                ,NVL(D.UDATE,B.UDATE) AS UDATE
            FROM SALE_ORDER A
                ,SALE_ORDER_ITEM_MGMT B
                ,INVENTORY_MGMT_DELIVER C
                ,(SELECT
                         T.SALE_ORDER_NUM
                       , T.SALE_ORDER_NUM_SEQ
                       , MAX(T.RELEASE_STATUS_CD) AS RELEASE_STATUS_CD
                       , MAX(T.SALE_AGED) AS SALE_AGED
                       , MAX(T.CUST_CD) AS CUST_CD

                       , NVL(SUM(T.REAL_WGT),0) AS REAL_WGT
                       , NVL(SUM(T.SALE_AMT),0) AS SALE_AMT


                       , MAX(T.CUSER) AS CUSER
                       , MAX(T.CDATE) AS CDATE
                       , MAX(T.UUSER) AS UUSER
                       , MAX(T.UDATE) AS UDATE
                  FROM RELEASE_ITEM_MGMT T
                  GROUP BY T.SALE_ORDER_NUM, T.SALE_ORDER_NUM_SEQ
                 ) D
                ,HLDC_PO_ITEM_MST F
                ,PO_ORDER_MST G
                ,(SELECT T.DELIVER_NUM, SUM(T.DIV_AMT) AS DIV_AMT, NVL(MAX(T.NONARRIV_ALT_YN),'N') AS NONARRIV_ALT_YN FROM DELIVERITEM_OTHER_AMT_DIV T
                   GROUP BY T.DELIVER_NUM
                 ) E
            WHERE A.SALE_ORDER_NUM = B.SALE_ORDER_NUM
            AND B.PO_ORDER_NUM = G.PO_ORDER_NUM
            AND B.DELIVER_NUM = C.DELIVER_NUM
            AND B.SALE_ORDER_NUM = D.SALE_ORDER_NUM(+)
            AND B.SALE_ORDER_NUM_SEQ = D.SALE_ORDER_NUM_SEQ(+)
            AND B.ITEM_CD = F.ITEM_CODE(+)
            AND C.DELIVER_NUM = E.DELIVER_NUM(+)
            --AND F.USE_YN='Y'
            <#if saleOrderType?has_content>
                AND A.SALE_ORDER_TYPE = :saleOrderType
            </#if>
            <#if releaseplceCd?has_content>
                AND A.RELEASEPLCE_CD = :releaseplceCd
            </#if>
            <#if saleAged?has_content>
                AND A.SALE_AGED = :saleAged
            </#if>
            <#if term?has_content>
                <#if term == "A">	/* 주문일자*/
                    AND A.ORDER_DATE  BETWEEN :startTerm AND :endTerm
                 <#elseif term == "B">	/* 최초창고일자  */
                    AND C.FIRST_DELIVER_DATE BETWEEN :startTerm AND :endTerm
                 </#if>
            </#if>
            <#if search?has_content>
                <#if searchContents?has_content>
                    <#if search == "A">	/* po no */
                        AND B.PO_ORDER_NUM LIKE '%'||:searchContents||'%'
                    <#elseif search == "B">	/* 품목 */
                        AND B.ITEM_NM LIKE '%'||:searchContents||'%'
                    <#elseif search == "C">	/* SO No */
                        AND A.SALE_ORDER_NUM LIKE '%'||:searchContents||'%'
                    <#elseif search == "D">	/* B/L NO */
                        --AND G.BL_NUM LIKE '%'||:searchContents||'%'

                        AND EXISTS (
                           SELECT T.ITEM_BL_NUM FROM PO_ORDER_ITEM_DETAIL T
                           WHERE C.PO_ORDER_NUM = T.PO_ORDER_NUM
                           AND C.ITEM_CD = T.ITEM_CD
                           AND C.ITEM_SEQ = T.ITEM_SEQ
                           AND ( UPPER(T.ITEM_BL_NUM) LIKE '%'||UPPER(:searchContents)||'%' OR  UPPER(G.BL_NUM) LIKE '%'||UPPER(:searchContents)||'%' )
                        )
                    </#if>
                </#if>
            </#if>
            <#if attachDept?has_content>
                AND A.ATTACH_DEPT = :attachDept
            </#if>
            ORDER BY B.SALE_ORDER_NUM DESC,  B.SALE_ORDER_NUM_SEQ DESC, B.PO_ORDER_NUM
        ) A
        WHERE 1=1
          --AND A.RELEASE_EXPECT_QUANTITY >0
          AND DECODE(A.UNIT, 'KG', A.RELEASE_EXPECT_WGT, A.RELEASE_EXPECT_QUANTITY)  > 0
        ]]></statement>

	<!-- 판매 주문내역에 대하여 출고를 관리 목록을 조회한다. -->
	<statement name="releaseRegList_back" type="select">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.releaseRegList */
        SELECT
             DECODE(E.RELEASE_NUM, '',0, 1) CHK
            ,E.RELEASE_STATUS_CD
            ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'RELEASE_STATUS_CD' AND CODE = E.RELEASE_STATUS_CD ) AS RELEASE_STATUS_NM
            ,A.ORDER_DATE
            ,A.RELEASEPLCE_CD
            ,A.RELEASEPLCE_NM
            ,A.SALE_PRCG_ID
            ,(SELECT T.NM_KOR FROM   HR_PERSONAL T, SCC_CC T2 WHERE  T2.CC_CD = T.CC_CD AND A.SALE_PRCG_ID =T.SABUN ) SALE_PRCG_NM
            ,B.PO_ORDER_NUM
            ,B.ITEM_CD
            ,B.ITEM_NM
            ,B.UNIT
            ,B.ORDER_QUANTITY
            ,B.ORDER_WGT
            --,NVL(C.DELIVER_QUANTITY, 0) - NVL(C.ORDER_REMAIN_QUANTITY, 0) ORDER_REMAIN_QUANTITY
            --,NVL(C.DELIVER_WGT, 0) - NVL(C.ORDER_REMAIN_WGT, 0) ORDER_REMAIN_WGT

            ,NVL(C.DELIVER_QUANTITY, 0)
            - NVL(C.ORDER_REMAIN_QUANTITY, 0)
            - NVL(C.RELEASE_WAIT_QUANTITY, 0)
            - NVL(C.RELEASE_END_WGT, 0)
              ORDER_REMAIN_QUANTITY      /*잔여수량*/

            ,NVL(C.DELIVER_WGT, 0)
            - NVL(C.ORDER_REMAIN_WGT, 0)
            - NVL(C.RELEASE_WAIT_WGT, 0)
            - NVL(C.RELEASE_END_WGT, 0) ORDER_REMAIN_WGT

            ,NVL(C.DELIVER_QUANTITY,0)  -
             (NVL(C.RELEASE_WAIT_QUANTITY,0)
            + NVL(C.RELEASE_END_QUANTITY,0)
            + NVL(C.RMA_QUANTITY,0)
            + NVL(C.WH_MOVE_QUANTITY,0)) RELEASE_POSS_QUANTITY

            ,NVL(C.DELIVER_WGT,0)  -
             (NVL(C.RELEASE_WAIT_WGT,0)
            + NVL(C.RELEASE_END_WGT,0)
            + NVL(C.RMA_WGT,0)
            + NVL(C.WH_MOVE_WGT,0)) RELEASE_POSS_WGT
            ,NVL(E.RELEASE_QUANTITY,0)  ORG_RELEASE_EXPECT_QUANTITY



            --,NVL(B.ORDER_QUANTITY,0) - E.RELEASE_QUANTITY RELEASE_POSS_QUANTITY /*출고가능수량*/
            --,NVL(B.ORDER_WGT,0) - E.RELEASE_WGT RELEASE_POSS_WGT /*출고가능수량*/


            ,NVL(B.ORDER_QUANTITY,0)  RELEASE_EXPECT_QUANTITY
            ,NVL(B.ORDER_WGT,0) ORG_RELEASE_EXPECT_WGT
            ,NVL(B.ORDER_WGT,0) RELEASE_EXPECT_WGT

            ,E.RELEASE_NUM
            ,B.SALE_ORDER_NUM
            ,B.SALE_ORDER_NUM_SEQ
            ,C.DELIVER_NUM

            ,C.DELIVER_QUANTITY
            ,C.RELEASE_WAIT_QUANTITY
            ,C.RELEASE_END_QUANTITY
            ,C.RMA_QUANTITY
            ,C.WH_MOVE_QUANTITY
            ,B.BEFORE_INVENTORY
            ,C.ENTRY_NUM
            ,C.ENTRY_ITEM_SEQ
            ,B.ITEM_SEQ
            ,A.SALE_ORDER_TYPE
            ,A.SALE_AGED
            ,A.ATTACH_DEPT
            ,C.DELIVER_UPRICE_FOREIGN_CURRENC
            ,C.DELIVER_UPRICE_KRW
            ,B.RELEASE_QUANTITY
            ,B.RELEASE_WGT
            ,B.HS_CD
            ,C.WH_CD
            ,D.TOT_QUANTITY
            ,D.TOT_WGT
        FROM SALE_ORDER A
            ,SALE_ORDER_ITEM_MGMT B
            ,INVENTORY_MGMT_DELIVER C
            ,RELEASE_MGMT D
            ,RELEASE_ITEM_MGMT E
        WHERE A.SALE_ORDER_NUM = B.SALE_ORDER_NUM
        AND B.DELIVER_NUM = C.DELIVER_NUM
        AND B.SALE_ORDER_NUM = E.SALE_ORDER_NUM(+)
        AND B.SALE_ORDER_NUM_SEQ = E.SALE_ORDER_NUM_SEQ(+)
        AND D.RELEASE_NUM(+)= E.RELEASE_NUM
        AND NVL(E.RELEASE_STATUS_CD,'A') IN ('A', '10')	--출고등록 내역만
        <#if saleOrderType?has_content>
            AND A.SALE_ORDER_TYPE = :saleOrderType
        </#if>
        <#if releaseplceCd?has_content>
            AND A.RELEASEPLCE_CD = :releaseplceCd
        </#if>
        <#if saleAged?has_content>
            AND A.SALE_AGED = :saleAged
        </#if>
        <#if term?has_content>
            <#if term == "A">	/* 주문일자*/
                AND A.ORDER_DATE  BETWEEN :startTerm AND :endTerm
             <#elseif term == "B">	/* 최초창고일자  */
                AND C.FIRST_DELIVER_DATE BETWEEN :startTerm AND :endTerm
             </#if>
        </#if>
        <#if search?has_content>
            <#if searchContents?has_content>
                <#if search == "A">	/* po no */
                    AND B.PO_ORDER_NUM LIKE '%'||:searchContents||'%'
                <#elseif search == "B">	/* 품목 */
                    AND B.ITEM_NM LIKE '%'||:searchContents||'%'
                <#elseif search == "C">	/* SO No */
                    AND A.SALE_ORDER_NUM LIKE '%'||:searchContents||'%'
                </#if>
            </#if>
        </#if>
        <#if attachDept?has_content>
            AND A.ATTACH_DEPT = :attachDept
        </#if>
        ORDER BY B.PO_ORDER_NUM, E.RELEASE_NUM, B.SALE_ORDER_NUM, B.SALE_ORDER_NUM_SEQ
        ]]>
	</statement>

	<!-- 판매 주문내역에 대하여 출고를 관리(을)를 등록한다. -->
	<statement name="insert" type="insert">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.insert */
        INSERT INTO RELEASE_MGMT
        (
         RELEASE_NUM,
         SHIPMENT_TYPE,
         SALE_AGED,
         ATTACH_DEPT,
         SALE_PRCG_ID,
         CUST_CD,
         TOT_QUANTITY,
         TOT_WGT,
         TOT_AMT_USD,
         TOT_AMT_KRW,
         TAX_SHET_CREATION_YN,
         SALS_ACT_SEND_YN,
         CUSER,
         CDATE,
         UUSER,
         UDATE
        ) VALUES (
         :releaseNum,
        <#if shipmentType?exists> :shipmentType, <#else> null, </#if>
        <#if saleAged?exists> :saleAged, <#else> null, </#if>
        <#if attachDept?exists> :attachDept, <#else> null, </#if>
        <#if salePrcgId?exists> :salePrcgId, <#else> null, </#if>
        <#if custCd?exists> :custCd, <#else> null, </#if>
        <#if totQuantity?exists> :totQuantity, <#else> null, </#if>
        <#if totWgt?exists> :totWgt, <#else> null, </#if>
        <#if totAmtUsd?exists> :totAmtUsd, <#else> null, </#if>
        <#if totAmtKrw?exists> :totAmtKrw, <#else> null, </#if>
        <#if taxShetCreationYn?exists> DECODE(:taxShetCreationYn, '1', 'Y', 'N'), <#else> null, </#if>
        <#if salsActSendYn?exists> DECODE(:salsActSendYn, '1', 'Y', 'N'), <#else> null, </#if>
         :loginSabun,
         SYSDATE,
         :loginSabun,
         SYSDATE
        )

        ]]>
	</statement>

	<!-- 판매 주문내역에 대하여 출고를 관리(을)를 수정한다. -->
	<statement name="update" type="update">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.update */
        UPDATE RELEASE_MGMT SET
        <#if shipmentType?exists> SHIPMENT_TYPE = :shipmentType, </#if>
        <#if saleAged?exists> SALE_AGED = :saleAged, </#if>
        <#if attachDept?exists> ATTACH_DEPT = :attachDept, </#if>
        <#if releaseStatusCd?exists> RELEASE_STATUS_CD = :releaseStatusCd, </#if>
        <#if salePrcgId?exists> SALE_PRCG_ID = :salePrcgId, </#if>
        <#if custCd?exists> CUST_CD = :custCd, </#if>
        <#if apprvReqDate?exists> APPRV_REQ_DATE = :apprvReqDate, </#if>
        <#if apprvDate?exists> APPRV_DATE = :apprvDate, </#if>
        <#if approvUserId?exists> APPROV_USER_ID = :approvUserId, </#if>
        <#if releaseConfirmDate?exists> RELEASE_CONFIRM_DATE = :releaseConfirmDate, </#if>
        <#if confirmorId?exists> CONFIRMOR_ID = :confirmorId, </#if>
        <#if totQuantity?exists> TOT_QUANTITY = :totQuantity, </#if>
        <#if totWgt?exists> TOT_WGT = :totWgt, </#if>
        <#if totAmtUsd?exists> TOT_AMT_USD = :totAmtUsd, </#if>
        <#if totAmtKrw?exists> TOT_AMT_KRW = :totAmtKrw, </#if>
        <#if taxShetCreationYn?exists> TAX_SHET_CREATION_YN = DECODE(:taxShetCreationYn, '1', 'Y', 'N'), </#if>
        <#if salsActSendYn?exists> SALS_ACT_SEND_YN = DECODE(:salsActSendYn, '1', 'Y', 'N'), </#if>
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  RELEASE_NUM = :releaseNum

        ]]>
	</statement>

	<!-- 판매 주문내역에 대하여 출고를 관리(을)를 삭제한다. -->
	<statement name="delete" type="delete">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.delete */
        DELETE
        FROM   RELEASE_MGMT
        WHERE  RELEASE_NUM = :releaseNum

        ]]>
	</statement>

	<!-- 판매 주문내역 시퀀스 조회 한다. -->
	<statement name="getReleaseMgmtS" type="select">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.getReleaseMgmtS */
            select LPAD(RELEASE_MGMT_S.NEXTVAL,6,'000000') AS RELEASE_NUM FROM DUAL
        ]]>
	</statement>

	<!--  판매 주문내역에 대하여 출고승인요청 건수 조회. -->
	<statement name="getSaleApprvCnt" type="select">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.getSaleApprvCnt */
        SELECT
            COUNT(A.RELEASE_NUM) CNT
        FROM RELEASE_ITEM_MGMT A
        WHERE A.SALE_ORDER_NUM =:saleOrderNum
        AND A.RELEASE_STATUS_CD <> '10'
        ]]>
	</statement>

	<!--  승인요청일을 조회. -->
	<statement name="getApprvReqDate" type="select">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.getApprvReqDate */
        SELECT
              A.APPRV_REQ_DATE
        FROM RELEASE_MGMT A
            ,RELEASE_ITEM_MGMT B
        WHERE A.RELEASE_NUM = B.RELEASE_NUM
        AND B.SALE_ORDER_NUM =:saleOrderNum
        AND B.SALE_ORDER_NUM_SEQ =:saleOrderNumSeq
        ]]>
	</statement>

	<!-- 판매 주문내역에 대하여 출고(품목)를 관리(을)를 수정한다. -->
	<statement name="printReleaseRegChk" type="update">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.printReleaseReg */
        UPDATE RELEASE_ITEM_MGMT SET
               <#if releaseStatusCd?exists> RELEASE_STATUS_CD = :releaseStatusCd, </#if>
               DEAL_SHEET_PUBLISH_YN = 'Y',
               DEAL_SHEET_PUBLISH_DTM = SYSDATE,
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  RELEASE_NUM  = :releaseNum

        ]]>
	</statement>

	<!-- 판매 주문내역에 대하여 출고(품목)를 관리(을)를 수정한다. -->
	<statement name="printReleaseReg" type="update">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.printReleaseReg */
        UPDATE RELEASE_ITEM_MGMT SET
               DEAL_SHEET_PUBLISH_YN = 'Y',
               DEAL_SHEET_PUBLISH_DTM = SYSDATE
        WHERE  RELEASE_NUM  IN (
        SELECT A.RELEASE_NUM FROM RELEASE_ITEM_MGMT A, SALE_ORDER B
        WHERE 1=1
        AND B.SALE_ORDER_NUM = A.SALE_ORDER_NUM
            <#if term?has_content>
                <#if term == "A">	/* 주문일자 */
                    AND B.ORDER_DATE BETWEEN :startTerm AND :endTerm
                <#elseif term == "B">	/* 승인요청일자 */
                    AND A.APPRV_REQ_DATE BETWEEN :startTerm AND :endTerm
                <#elseif term == "C">	/* 승인일자 */
                    AND A.APPRV_DATE BETWEEN :startTerm AND :endTerm
                <#elseif term == "D">	 /* 출고확정일자 */
                    AND A.RELEASE_CONFIRM_DATE BETWEEN :startTerm AND :endTerm
                <#elseif term == "E">    /* 출고일자 */
                    AND A.RELEASE_DATE BETWEEN :startTerm AND :endTerm
                </#if>
            </#if>

            AND EXISTS
                 (
                  SELECT
                         C.UPJANGNM AS CUSTNM
                  FROM   ST_CUST A,
                         ST_UPJANG B,
                         FMS_UPJANG_V C
                  WHERE  B.CUSTCD = A.CUSTCD
                  AND    C.UPJANG = B.UPJANG
                  AND    NVL(B.ATTR01, 'Y') <> 'N'
                  AND B.CC_CD IN (
                    SELECT A.SET1
                    FROM   SCC_COMMON_CODE A
                    WHERE  A.GROUP_CODE = 'ATTACH_DEPT'
                    AND    A.USE_YN = 'Y'
                  )
                  AND    A.CUSTCD = A.CUST_CD
                  AND    CUSTNM LIKE '%'||:searchContents||'%'
                 )
        )

        ]]>
	</statement>


	<!-- 판매 주문내역에 대하여 출고(품목)를 관리(을)를 수정한다. -->
	<statement name="releaseApprovReq" type="update">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.releaseApprovReq */
        UPDATE RELEASE_ITEM_MGMT SET
               APPRV_REQ_DATE = :apprvReqDate,
               RELEASE_STATUS_CD = :releaseStatusCd,
               <#if realSaleAmt?exists> REAL_SALE_AMT = :realSaleAmt, </#if>
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  RELEASE_NUM = :releaseNum
        ]]>
	</statement>

	<!-- 판매 주문내역에 대하여 출고요청취소 처리한다. -->
	<statement name="releaseApprovReqCancel" type="update">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.releaseApprovReq */
        UPDATE RELEASE_ITEM_MGMT SET
               RELEASE_STATUS_CD = :releaseStatusCd,
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  RELEASE_NUM = :releaseNum
        ]]>
	</statement>

	<!-- 판매 주문내역에 대하여 환입 처리한다. -->
	<statement name="releasePurchaseReturn" type="update">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.releasePurchaseReturn */
        UPDATE RELEASE_ITEM_MGMT SET
               PURCHASE_RETURN_QUANTITY = NVL(PURCHASE_RETURN_QUANTITY,0) + :purchaseReturnQuantity,
               PURCHASE_RETURN_WGT = NVL(PURCHASE_RETURN_WGT,0) +:purchaseReturnWgt,
               PURCHASE_RETURN_DATE = :purchaseReturnDate,
               PURCHASE_RETURN_DELIVER_NUM = NVL(PURCHASE_RETURN_DELIVER_NUM,0) + :purchaseReturnDeliverNum,
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  RELEASE_NUM = :releaseNum
        ]]>
	</statement>


	<!-- 출고 주문내역에 대하여 출고를 관리 목록을 조회한다. -->
	<statement name="selectReleaseMgmtList" type="select">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.selectReleaseMgmtList */
        SELECT
               0 CHK
              ,A.RELEASE_NUM
              ,A.SHIPMENT_TYPE
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'SHIPMENT_TYPE_CD' AND CODE = A.SHIPMENT_TYPE ) AS SHIPMENT_TYPE_NM
              ,A.SALE_AGED
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'SALE_AGED' AND CODE = A.SALE_AGED ) AS SALE_AGED_NM
              ,A.ATTACH_DEPT
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'ATTACH_DEPT' AND CODE = A.ATTACH_DEPT ) AS ATTACH_DEPT_NM
              --,A.RELEASE_STATUS_CD
              --,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'RELEASE_STATUS_CD' AND CODE = A.RELEASE_STATUS_CD ) AS RELEASE_STATUS_NM
              ,A.SALE_PRCG_ID
              ,(SELECT T.NM_KOR FROM   HR_PERSONAL T, SCC_CC T2
                WHERE  T2.CC_CD = T.CC_CD AND SALE_PRCG_ID =T.SABUN ) SALE_PRCG_NM
              ,A.CUST_CD
              ,(SELECT T.CUSTNM FROM ST_CUST T WHERE T.CUSTCD =A.CUST_CD AND T.USE_YN='Y' ) AS CUST_NM
              /*
              ,(
                SELECT
                       C.UPJANGNM AS CUSTNM
                FROM   ST_CUST A,
                       ST_UPJANG B,
                       FMS_UPJANG_V C
                WHERE  B.CUSTCD = A.CUSTCD
                AND    C.UPJANG = B.UPJANG
                AND    NVL(B.ATTR01, 'Y') <> 'N'
                AND B.CC_CD IN (
                  SELECT A.SET1
                  FROM   SCC_COMMON_CODE A
                  WHERE  A.GROUP_CODE = 'ATTACH_DEPT'
                  AND    A.USE_YN = 'Y'
                )
                AND    A.CUSTCD = A.CUST_CD
               ) CUST_NM
               */
              --,A.APPRV_REQ_DATE
              --,A.APPRV_DATE
              --,A.RELEASE_CONFIRM_DATE
              ,A.TOT_QUANTITY
              ,A.TOT_WGT
              ,A.TOT_AMT_USD
              ,A.TOT_AMT_KRW
              ,A.TAX_SHET_CREATION_YN /*세금계산서 생성 여부*/
              ,(SELECT CASE WHEN COUNT(RELEASE_NUM) >0 THEN 'Y' ELSE 'N' END  FROM RELEASE_PUBLISH_LOG WHERE RELEASE_NUM = A.RELEASE_NUM ) RELEASE_CERTIFICATE_PUBLISH_YN /*출고증발행여부*/
              ,NVL(A.SALS_ACT_SEND_YN,'N') SALS_ACT_SEND_YN
        FROM RELEASE_MGMT A
        WHERE EXISTS
             (SELECT 1 FROM RELEASE_ITEM_MGMT
              WHERE RELEASE_NUM = A.RELEASE_NUM
              AND RELEASE_STATUS_CD <> '10'   --출고승인요청 아닌거
             )
        <#if term?has_content>
            <#if term == "A">	/* 주문일자 */
                AND EXISTS        --주문일자
                    (SELECT 1
                     FROM RELEASE_ITEM_MGMT T, SALE_ORDER T2, SALE_ORDER_ITEM_MGMT T3
                     WHERE T.SALE_ORDER_NUM = T3.SALE_ORDER_NUM
                     AND T.SALE_ORDER_NUM_SEQ = T3.SALE_ORDER_NUM_SEQ
                     AND T2.SALE_ORDER_NUM = T3.SALE_ORDER_NUM
                     AND T.RELEASE_NUM = A.RELEASE_NUM
                     AND T2.ORDER_DATE BETWEEN :startTerm AND :endTerm
                     )
            <#elseif term == "B">	/* 승인요청일자 */
                AND EXISTS (
                    SELECT 1 FROM RELEASE_ITEM_MGMT WHERE RELEASE_NUM = A.RELEASE_NUM
                    AND APPRV_REQ_DATE BETWEEN :startTerm AND :endTerm
                )
            <#elseif term == "C">	/* 승인일자 */
                AND EXISTS (
                    SELECT 1 FROM RELEASE_ITEM_MGMT WHERE RELEASE_NUM = A.RELEASE_NUM
                    AND APPRV_DATE BETWEEN :startTerm AND :endTerm
                )
            <#elseif term == "D">	 /* 출고확정일자 */
                AND EXISTS (
                    SELECT 1 FROM RELEASE_ITEM_MGMT WHERE RELEASE_NUM = A.RELEASE_NUM
                    AND RELEASE_CONFIRM_DATE BETWEEN :startTerm AND :endTerm
                )
            <#elseif term == "E">    /* 출고일자 */
                AND EXISTS (
                    SELECT 1 FROM RELEASE_ITEM_MGMT WHERE RELEASE_NUM = A.RELEASE_NUM
                    AND RELEASE_DATE BETWEEN :startTerm AND :endTerm
                )
            </#if>
        </#if>

        <#if search?has_content && searchContents?has_content>
            <#if search == "A">	/* PO No */
            AND EXISTS
                (SELECT 1
                 FROM RELEASE_ITEM_MGMT T, SALE_ORDER T2, SALE_ORDER_ITEM_MGMT T3
                 WHERE T.SALE_ORDER_NUM = T3.SALE_ORDER_NUM
                 AND T.SALE_ORDER_NUM_SEQ = T3.SALE_ORDER_NUM_SEQ
                 AND T2.SALE_ORDER_NUM = T3.SALE_ORDER_NUM
                 AND T.RELEASE_NUM = A.RELEASE_NUM
                 AND T3.PO_ORDER_NUM LIKE '%'||:searchContents||'%'
                 )
            <#elseif search == "B">	/* 출고번호 */
                AND A.RELEASE_NUM LIKE '%'||:searchContents||'%'
            <#elseif search == "C">	/* 출고처 */
            AND EXISTS
                 (
                  SELECT
                         C.UPJANGNM AS CUSTNM
                  FROM   ST_CUST A,
                         ST_UPJANG B,
                         FMS_UPJANG_V C
                  WHERE  B.CUSTCD = A.CUSTCD
                  AND    C.UPJANG = B.UPJANG
                  AND    NVL(B.ATTR01, 'Y') <> 'N'
                  AND B.CC_CD IN (
                      SELECT A.SET1
                      FROM   SCC_COMMON_CODE A
                      WHERE  A.GROUP_CODE = 'ATTACH_DEPT'
                      AND    A.USE_YN = 'Y'
                  )
                  AND    A.CUSTCD = A.CUST_CD
                  AND    CUSTNM LIKE '%'||:searchContents||'%'
                 )
            </#if>
        </#if>
        
        <#if search2?has_content && searchContents2?has_content>
            <#if search2 == "A">	/* PO No */
            AND EXISTS
                (SELECT 1
                 FROM RELEASE_ITEM_MGMT T, SALE_ORDER T2, SALE_ORDER_ITEM_MGMT T3
                 WHERE T.SALE_ORDER_NUM = T3.SALE_ORDER_NUM
                 AND T.SALE_ORDER_NUM_SEQ = T3.SALE_ORDER_NUM_SEQ
                 AND T2.SALE_ORDER_NUM = T3.SALE_ORDER_NUM
                 AND T.RELEASE_NUM = A.RELEASE_NUM
                 AND T3.PO_ORDER_NUM LIKE '%'||:searchContents2||'%'
                 )
            <#elseif search2 == "B">	/* 출고번호 */
                AND A.RELEASE_NUM LIKE '%'||:searchContents2||'%'
            <#elseif search2 == "C">	/* 출고처 */
            AND EXISTS
                 (
                  SELECT
                         C.UPJANGNM AS CUSTNM
                  FROM   ST_CUST A,
                         ST_UPJANG B,
                         FMS_UPJANG_V C
                  WHERE  B.CUSTCD = A.CUSTCD
                  AND    C.UPJANG = B.UPJANG
                  AND    NVL(B.ATTR01, 'Y') <> 'N'
                  AND B.CC_CD IN (
                      SELECT A.SET1
                      FROM   SCC_COMMON_CODE A
                      WHERE  A.GROUP_CODE = 'ATTACH_DEPT'
                      AND    A.USE_YN = 'Y'
                  )
                  AND    A.CUSTCD = A.CUST_CD
                  AND    CUSTNM LIKE '%'||:searchContents2||'%'
                 )
            </#if>
        </#if>        

        <#if shipmentTypeCd?has_content>
            AND A.SHIPMENT_TYPE = :shipmentTypeCd
        </#if>

        <#if releaseStatusCd?has_content>
            AND EXISTS (
                SELECT 1 FROM RELEASE_ITEM_MGMT WHERE RELEASE_NUM = A.RELEASE_NUM
                AND RELEASE_STATUS_CD = :releaseStatusCd
            )
        </#if>

        <#if attachDept?has_content>
            AND A.ATTACH_DEPT = :attachDept
        </#if>

        ORDER BY A.RELEASE_NUM DESC
        ]]>
	</statement>

	<!-- 출고 품목 주문내역에 대하여 출고를 관리 목록을 조회한다. -->
	<statement name="selectReleaseItemMgmtList" type="select"><![CDATA[
    /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.selectReleaseItemMgmtList */
        SELECT
               A.RELEASE_NUM
              ,A.SHIPMENT_TYPE
              ,A.RECEIPT_NUM2  AS RECEIPT_NUM
              ,(
                  SELECT MAX(T2.DDDD_CLOSE_YN)
                    FROM ST_UPJANG T
                         ,SLA_IF_UPJANG_SALS_MST T2
                   WHERE 1=1
                     AND T.UPJANG= T2.UPJANG_CD
                     AND NVL(T.ATTR01, 'Y') <> 'N'
                     AND T.CUSTCD = A.CUST_CD
                     AND T2.RECEIPT_NUM = A.RECEIPT_NUM2
                     AND T2.OCCUR_DATE = A.RELEASE_DATE
               ) AS DDDD_CLOSE_YN	--일마감여부
              --,A.CST_EXCEPT_YN
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'SHIPMENT_TYPE_CD' AND CODE = A.SHIPMENT_TYPE ) AS SHIPMENT_TYPE_NM
              ,A.SALE_AGED
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'SALE_AGED' AND CODE = A.SALE_AGED ) AS SALE_AGED_NM
              ,A.ATTACH_DEPT
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'ATTACH_DEPT' AND CODE = A.ATTACH_DEPT ) AS ATTACH_DEPT_NM
              --,A.RELEASE_STATUS_CD
              --,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'RELEASE_STATUS_CD' AND CODE = A.RELEASE_STATUS_CD ) AS RELEASE_STATUS_NM
              ,DECODE(NVL(A.CONFIRM_YN,''),'Y','매출확정','C','매출확정취소','') CONFIRM_YN_NM
              ,CASE WHEN NVL(A.SEQ,0) = 0 THEN   --정상 출고건
                    A.RELEASE_STATUS_CD
               ELSE --환입건
                    CASE WHEN NVL(A.CONFIRM_YN2,'N') = 'Y' THEN   --매출확정 Y
                        '50'
                    WHEN NVL(A.CONFIRM_YN2,'N') = 'C' THEN   --매출취소 C
                        '60'
                    ELSE   --매출확정N:출고확정
                        '40'
                    END
               END RELEASE_STATUS_CD
              ,CASE WHEN NVL(A.SEQ,0) = 0 THEN   --정상 출고건
                    (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'RELEASE_STATUS_CD' AND CODE = A.RELEASE_STATUS_CD )
               ELSE --환입건
                    CASE WHEN NVL(A.CONFIRM_YN2,'N') = 'Y' THEN   --매출확정 Y
                        '매출마감(환입)'
                    WHEN NVL(A.CONFIRM_YN2,'N') = 'C' THEN   --매출취소 C
                        '매출마감취소(환입)'
                    ELSE   --매출확정N:출고확정
                        '환입확정'
                    END
               END RELEASE_STATUS_NM
              ,A.SALE_PRCG_ID
              ,(SELECT T.NM_KOR FROM   HR_PERSONAL T, SCC_CC T2
                WHERE  T2.CC_CD = T.CC_CD AND A.SALE_PRCG_ID =T.SABUN ) SALE_PRCG_NM
              ,A.CUST_CD    /* 거래처 */
              ,(SELECT T.CUSTNM FROM ST_CUST T WHERE T.CUSTCD =A.CUST_CD AND T.USE_YN='Y') AS CUST_NM
              /*
              ,(
                SELECT
                       C.UPJANGNM
                FROM   ST_CUST A,
                       ST_UPJANG B,
                       FMS_UPJANG_V C
                WHERE  B.CUSTCD = A.CUSTCD
                AND    C.UPJANG = B.UPJANG
                AND    NVL(B.ATTR01, 'Y') <> 'N'
                AND B.CC_CD IN (
                  SELECT A.SET1
                  FROM   SCC_COMMON_CODE A
                  WHERE  A.GROUP_CODE = 'ATTACH_DEPT'
                  AND    A.USE_YN = 'Y'
                )
                AND    A.CUSTCD = A.CUST_CD
               ) CUST_NM
               */
              ,A.ITEM_CD
              ,K.ITEM_NAME||' '||K.ITEM_SIZE AS ITEM_NM
              ,B.PO_ORDER_NUM
              ,B.SALE_ORDER_NUM
              ,B.SALE_ORDER_NUM_SEQ
              ,CASE WHEN D.PO_TYPE= '10' THEN    --수입(KRW)
                   C.BL_NUM
               ELSE
                  (
                    SELECT T.ITEM_BL_NUM FROM PO_ORDER_ITEM_DETAIL T
                    WHERE B.PO_ORDER_NUM = T.PO_ORDER_NUM
                    AND B.ITEM_CD = T.ITEM_CD
                    AND B.ITEM_SEQ = T.ITEM_SEQ
                  )
               END AS BL_NUM
              ,D.EST_NO
              ,E.ORIGIN
              ,D.WH_CD
              ,D.WH_NM
              ,F.ORDER_DATE
              ,A.UNIT
              ,(SELECT SET1 FROM   SCC_COMMON_CODE T WHERE  T.GROUP_CODE = 'ITEM_UNIT' AND    T.USE_YN = 'Y' AND T.CODE = A.UNIT ) SET1
              ,A.RELEASE_QUANTITY
              ,A.RELEASE_WGT
              ,A.REAL_WGT
              ,A.REAL_WGT ORG_REAL_WGT
              ,A.SALE_UPRICE               /*판매단가*/
              ,0 SALE_TRANSPORT_AMT        /*판매운송비*/
  --            ,A.BUY_UPRICE * DECODE(A.UNIT,'KG',A.REAL_WGT,A.RELEASE_QUANTITY) BUY_CST                   /*매입원가*/
--              ,ROUND((D.DELIVER_AMT+NVL(X.DIV_AMT,0)) * DECODE(D.UNIT, 'KG', A.REAL_WGT, A.RELEASE_QUANTITY ) /  DECODE(D.UNIT, 'KG', D.DELIVER_WGT, D.DELIVER_QUANTITY))  AS BUY_CST
              ,A.BUY_CST
              ,A.BUY_UPRICE
              ,A.SALE_AMT                  /*판매금액*/
              ,ROUND(A.REAL_SALE_AMT) AS REAL_SALE_AMT        /*실판매금액*/
              --,NVL(DECODE(A.SEQ,NULL, (A.RELEASE_QUANTITY - A.PURCHASE_RETURN_QUANTITY), A.PURCHASE_RETURN_QUANTITY2),0) PURCHASE_RETURN_QUANTITY  /*환입수량*/
              --,NVL(DECODE(A.SEQ,NULL, (A.REAL_WGT - A.PURCHASE_RETURN_WGT), A.PURCHASE_RETURN_WGT2),0) PURCHASE_RETURN_WGT  /*환입중량*/
              --,DECODE(A.SEQ,NULL, A.PURCHASE_RETURN_DATE, A.PURCHASE_RETURN_DATE2) PURCHASE_RETURN_DATE  /*환입일자*/
              --,NVL(DECODE(A.SEQ,NULL, (A.REAL_SALE_AMT - A.PURCHASE_RETURN_DELIVER_NUM), A.PURCHASE_RETURN_AMT2),0) PURCHASE_RETURN_DELIVER_NUM  /*환입금액*/
              --,NVL(DECODE(A.SEQ,NULL, (A.BUY_CST - A.PURCHASE_RETURN_CST), A.PURCHASE_RETURN_CST2),0) PURCHASE_RETURN_CST  /*환입원가*/
              ,NVL(DECODE(A.SEQ,NULL, 0, A.PURCHASE_RETURN_QUANTITY2),0) PURCHASE_RETURN_QUANTITY  /*환입수량*/
              ,NVL(DECODE(A.SEQ,NULL, 0, A.PURCHASE_RETURN_WGT2),0) PURCHASE_RETURN_WGT  /*환입중량*/
              ,DECODE(A.SEQ,NULL, NULL, A.PURCHASE_RETURN_DATE2) PURCHASE_RETURN_DATE  /*환입일자*/
              ,NVL(DECODE(A.SEQ,NULL, 0, A.PURCHASE_RETURN_AMT2),0) PURCHASE_RETURN_DELIVER_NUM  /*환입금액*/
              ,NVL(DECODE(A.SEQ,NULL, 0, A.PURCHASE_RETURN_CST2),0) PURCHASE_RETURN_CST  /*환입원가*/              
               /*
              ,CASE
                   WHEN D.ORDER_REMAIN_QUANTITY = NULL OR D.ORDER_REMAIN_QUANTITY = 0 THEN
                    D.DELIVER_QUANTITY
                   ELSE
                    NVL(D.DELIVER_QUANTITY, 0) -
                    NVL(D.ORDER_REMAIN_QUANTITY, 0) -
                    NVL(D.RELEASE_WAIT_QUANTITY, 0) -
                    NVL(D.RELEASE_END_QUANTITY, 0) - NVL(D.RMA_QUANTITY, 0) -
                    NVL(D.WH_MOVE_QUANTITY, 0) -
                    NVL(D.INVENTORY_CONTROL_QUANTITY, 0)
               END ORDER_REMAIN_QUANTITY

              ,CASE
                   WHEN D.ORDER_REMAIN_WGT = NULL OR D.ORDER_REMAIN_WGT = 0 THEN
                    D.DELIVER_WGT
                   ELSE
                    NVL(D.DELIVER_WGT, 0) - NVL(D.ORDER_REMAIN_WGT, 0) -
                    NVL(D.RELEASE_WAIT_WGT, 0) - NVL(D.RELEASE_END_WGT, 0) -
                    NVL(D.RMA_WGT, 0) - NVL(D.WH_MOVE_WGT, 0) -
                    NVL(D.INVENTORY_CONTROL_WGT, 0)
               END ORDER_REMAIN_WGT
               */
              ,
               NVL(D.DELIVER_QUANTITY, 0) -
               NVL(D.ORDER_REMAIN_QUANTITY, 0) -
               NVL(D.RELEASE_WAIT_QUANTITY, 0) -
               NVL(D.RELEASE_END_QUANTITY, 0) - NVL(D.RMA_QUANTITY, 0) -
               NVL(D.WH_MOVE_QUANTITY, 0) -
               NVL(D.INVENTORY_CONTROL_QUANTITY, 0) AS ORDER_REMAIN_QUANTITY

              ,
               NVL(D.DELIVER_WGT, 0) - NVL(D.ORDER_REMAIN_WGT, 0) -
               NVL(D.RELEASE_WAIT_WGT, 0) - NVL(D.RELEASE_END_WGT, 0) -
               NVL(D.RMA_WGT, 0) - NVL(D.WH_MOVE_WGT, 0) -
               NVL(D.INVENTORY_CONTROL_WGT, 0) AS ORDER_REMAIN_WGT
              ,A.APPRV_REQ_DATE
              ,A.APPRV_DATE
              ,A.APPROV_USER_ID
              ,A.RELEASE_CONFIRM_DATE
              ,A.CONFIRMOR_ID
              ,D.DELIVER_NUM
              ,F.RELEASE_DATE RELEASE_REQ_DATE
              ,A.RELEASE_DATE
              ,D.DELIVER_WGT
              ,C.SALSPLCE_CD
              ,D.CURRENT_WH_DELIVER_DATE        /* 입고일자 */
              ,A.RELEASE_PUBLISH_YN             /* 출고증발행여부 */
              ,(SELECT PUBLISH_TIMES FROM RELEASE_ITEM_MGMT_PUB_HIST WHERE RELEASE_NUM = A.RELEASE_NUM AND SEQ = 1) AS FIRST_PUB_DT
              ,A.RELEASE_PUBLISH_NUM_OF_TIMES   /* 출고증발행횟수 */
              ,A.CST_SLIP_FISCAL_NUM
              ,A.CST_SLIP_CDATE
              ,(SELECT SET1 FROM SCC_COMMON_CODE
                WHERE  GROUP_CODE = 'ATTACH_DEPT'
                AND CODE = A.ATTACH_DEPT ) AS ATTACH_DEPT_SAP   /*SAP귀속부서*/
                /*
              ,(SELECT MAX(T2.CC_CD) FROM ST_CUST T, ST_UPJANG T2
                WHERE  T.CUSTCD = T2.CUSTCD
                AND T.CUSTCD=A.CUST_CD
                AND NVL(T2.ATTR01, 'Y') <> 'N'
                AND    T.USE_YN = 'Y'
                AND T2.CC_CD IN (
                  SELECT SET1 FROM SCC_COMMON_CODE
                  WHERE  GROUP_CODE = 'ATTACH_DEPT'
                )
               ) AS CHG_ATTACH_DEPT_SAP
               */
              ,(SELECT MGMT_DEPT FROM SAP_IF.SAP_IFC_SLIP_DTL WHERE SLIP_NUM = I.SLIP_NUM AND rownum = 1) AS CHG_ATTACH_DEPT_SAP
              ,C.LC_NUM
              ,H.SLIP_NUM
              ,CASE WHEN H.SLIP_STATUS IN ('V','P') THEN
                    'Y'
               ELSE
                    'N'
               END CST_EXCEPT_YN              	--매입원가차감여부
              ,H.SLIP_STATUS
              ,H.FISCAL_SLIP_NUM
              ,H.FISCAL_YEAR
              ,H.PROC_DATE FISCAL_SLIPC_DATE
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE
                WHERE  GROUP_CODE = 'SLIP_STATUS' AND CODE = H.SLIP_STATUS ) AS SLIP_STATUS_NM





               ,CASE WHEN H.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                   NULL
               ELSE
                   A.SIGN_INSTANCE_ID3
               END AS SIGN_INSTANCE_ID

               ,CASE WHEN H.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                   NULL
               ELSE
                   NVL(SCC_SIGN_STATUS_FUN(SIGN_INSTANCE_ID3),'')
               END AS SIGN_PROGRESS_STATUS

               ,CASE WHEN H.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                   NULL
               ELSE
                   CASE SCC_SIGN_STATUS_FUN(SIGN_INSTANCE_ID3)
                   WHEN 'COMPLETE' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='30' )
                   WHEN 'REJECT' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='40' )
                   WHEN 'CANCEL' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='50' )
                   WHEN 'DRAFT' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='20' )
                   ELSE
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND CODE = H.SLIP_STATUS )
                   END
               END AS SIGN_PROGRESS_STATUS_NM




              ,I.SLIP_NUM SLIP_NUM2
              ,I.SLIP_STATUS SLIP_STATUS2
              ,I.PROC_DATE FISCAL_SLIPC_DATE2
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE
                WHERE  GROUP_CODE = 'SLIP_STATUS' AND CODE = I.SLIP_STATUS ) AS SLIP_STATUS_NM2

               ,CASE WHEN I.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                   NULL
               ELSE
                   A.SIGN_INSTANCE_ID2
               END AS SIGN_INSTANCE_ID2

               ,CASE WHEN I.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                   NULL
               ELSE
                   NVL(SCC_SIGN_STATUS_FUN(SIGN_INSTANCE_ID2),'')
               END AS SIGN_PROGRESS_STATUS2

               ,CASE WHEN I.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                   NULL
               ELSE
                   CASE SCC_SIGN_STATUS_FUN(SIGN_INSTANCE_ID2)
                   WHEN 'COMPLETE' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='30' )
                   WHEN 'REJECT' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='40' )
                   WHEN 'CANCEL' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='50' )
                   WHEN 'DRAFT' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='20' )
                   ELSE
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND CODE = I.SLIP_STATUS )
                   END
               END AS SIGN_PROGRESS_STATUS_NM2

               --매입원가 증가
              ,CASE WHEN J.SLIP_STATUS IN ('V','P') THEN
                    'Y'
               ELSE
                    'N'
               END CST_INC_YN                --매입원가증가여부
              ,J.SLIP_NUM SLIP_NUM4
              ,J.SLIP_STATUS SLIP_STATUS4
              ,J.PROC_DATE FISCAL_SLIPC_DATE4
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE
                WHERE  GROUP_CODE = 'SLIP_STATUS' AND CODE = J.SLIP_STATUS ) AS SLIP_STATUS_NM4
               ,CASE WHEN J.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                   NULL
               ELSE
                   A.SIGN_INSTANCE_ID4
               END AS SIGN_INSTANCE_ID4

               ,CASE WHEN J.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                   NULL
               ELSE
                   NVL(SCC_SIGN_STATUS_FUN(SIGN_INSTANCE_ID4),'')
               END AS SIGN_PROGRESS_STATUS4

               ,CASE WHEN J.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                   NULL
               ELSE
                   CASE SCC_SIGN_STATUS_FUN(SIGN_INSTANCE_ID4)
                   WHEN 'COMPLETE' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='30' )
                   WHEN 'REJECT' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='40' )
                   WHEN 'CANCEL' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='50' )
                   WHEN 'DRAFT' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='20' )
                   ELSE
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND CODE = J.SLIP_STATUS )
                   END
               END AS SIGN_PROGRESS_STATUS_NM4

              ,A.REMARK
              ,A.SEQ
              ,F.SALE_ORDER_TYPE
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'SALE_TYPE' AND CODE =F.SALE_ORDER_TYPE  ) AS SALE_ORDER_TYPE_NM
              ,D.SIGN_EXCHANGE_RATE
              ,D.INCOME_DTR_DSCT_NUM
              ,(
                SELECT SCC_TELNO_SAUPNO_EXPR('TELNO', SCC_CRYPTO.DEC_FUN(T.FAX_NO)) AS FAX_NO_ENC
                FROM EPROCUSR.ESMVDFW T
                WHERE 1 = 1
                  --AND T.CUS_VD_CLS IN ('10', '50')
                  AND T.VD_CD = D.WH_CD
                AND T.VD_CD IS NOT NULL
                 AND T.VD_STS = 'C'
                 AND EXISTS (SELECT 1 FROM EPROCUSR.ESMVDOG A
                        WHERE A.SYS_ID = T.SYS_ID
                          AND A.VD_SN = T.VD_SN
                          AND A.OPER_ORG_SN = '414' --FC부문 협력업체만
               		)
               ) AS WH_FAX_NO

               ,(SELECT SCC_TELNO_SAUPNO_EXPR('TELNO', SCC_CRYPTO.DEC_FUN(T.FAX_NO_ENC)) FROM ST_CUST T WHERE T.CUSTCD =A.CUST_CD  AND T.USE_YN='Y' ) AS SALE_FAX_NO     --매출처 FAX NO
               ,NVL(COUNT(A.RECEIPT_NUM2) OVER(PARTITION BY A.ATTACH_DEPT, A.CUST_CD  ),0) RECEIPT_NUM_CNT
               ,(SELECT T.NM_KOR FROM SCC_USERINFO T WHERE T.SABUN = A.CUSER) AS CUSER
               ,A.CDATE
               ,(SELECT T.NM_KOR FROM SCC_USERINFO T WHERE T.SABUN = A.UUSER) AS UUSER
               ,A.UDATE
               ,C.SALE_TYPE
               /* 입고현황 */
               ,D.DELIVER_QUANTITY AS INVENTORY_QUANTITY
               ,D.DELIVER_WGT AS INVENTORY_WGT
               ,CASE WHEN D.PO_TYPE= '10' THEN    --수입(KRW)
                     ROUND((D.DELIVER_AMT+ NVL(X.DIV_AMT,0)))
                ELSE
                     D.DELIVER_AMT
                END AS INVENTORY_AMT
              /* 입고현황 */
       FROM (SELECT
                A.RELEASE_NUM 
                ,A.SALE_ORDER_NUM
                ,A.SALE_ORDER_NUM_SEQ
                ,A.RELEASE_STATUS_CD 
                ,A.APPRV_REQ_DATE  
                ,A.APPRV_DATE     
                ,A.APPROV_USER_ID 
                ,A.RELEASE_CONFIRM_DATE
                ,A.CONFIRMOR_ID        
                ,A.ITEM_CD             
                ,A.ITEM_NM             
                ,A.HS_CD               
                ,A.WH_CD               
                ,A.UNIT                
                ,A.RELEASE_QUANTITY    
                ,A.RELEASE_WGT         
                ,A.REAL_WGT            
                ,A.SALE_UPRICE         
                ,A.BUY_UPRICE          
                ,A.SALE_TRANSPORT_AMT  
                ,A.SALE_AMT            
                ,A.REAL_SALE_AMT       
                ,A.PURCHASE_RETURN_QUANTITY 
                ,A.PURCHASE_RETURN_WGT      
                ,A.PURCHASE_RETURN_DATE     
                ,A.PURCHASE_RETURN_DELIVER_NUM  
                ,A.BEFORE_INVENTORY             
                ,A.CST_EXCEPT_YN                
                ,A.SALS_SEND_YN                 
                ,A.CST_SLIP_FISCAL_NUM          
                ,A.CST_SLIP_CDATE               
                ,A.SALS_CONFIRM_DATE            
                ,A.CONFIRM_YN                   
                ,A.RECEIVE_REQ_SEQ              
                ,A.RELEASE_PUBLISH_YN           
                ,A.RELEASE_PUBLISH_NUM_OF_TIMES 
                ,A.SHIPMENT_TYPE                
                ,A.SALE_AGED                    
                ,A.ATTACH_DEPT                  
                ,A.SALE_PRCG_ID                 
                ,A.CUST_CD                      
                ,A.TAX_SHET_CREATION_YN         
                ,A.SALS_ACT_SEND_YN             
                ,A.INPUT_SALE_AMT         
                ,A.DEAL_SHEET_PUBLISH_YN  
                ,A.DEAL_SHEET_PUBLISH_DTM 
                ,A.RELEASE_DATE           
                ,A.BLCK_MARK              
                ,A.RECEIPT_NUM            
                ,A.SIGN_INSTANCE_ID       
                ,A.REMARK                 
                ,A.SIGN_INSTANCE_ID2      
                ,A.DEPT_MNGMV_SLIP_FISCAL_NUM   
                ,A.DEPT_MNGMV_SLIP_CDATE        
                ,A.DEPT_MNGMV_DELIVER_NUM       
                ,A.CST_INC_SLIP_FISCAL_NUM      
                ,A.CST_INC_SLIP_CDATE           
                ,A.CST_INC_YN                   
                ,A.INC_SIGN_INSTANCE_ID         
                ,A.BUY_CST                      
                ,A.PURCHASE_RETURN_CST     
                ,A.CUSER
                ,A.CDATE
                ,A.UDATE
                ,A.UUSER
                ,NULL SEQ
                ,NULL AS PURCHASE_RETURN_QUANTITY2
                ,NULL AS PURCHASE_RETURN_WGT2
                ,NULL AS PURCHASE_RETURN_DATE2
                ,NULL AS PURCHASE_RETURN_AMT2
                ,NULL AS PURCHASE_RETURN_CST2
                ,NULL AS SALS_CONFIRM_DATE2
                ,NULL AS CONFIRM_YN2
                ,A.CST_SLIP_FISCAL_NUM AS CST_SLIP_FISCAL_NUM2
                ,A.RECEIPT_NUM AS RECEIPT_NUM2
                ,A.SIGN_INSTANCE_ID SIGN_INSTANCE_ID3
                ,NULL SIGN_INSTANCE_ID4
                ,NULL CST_INC_SLIP_FISCAL_NUM4 --원가증감 회계전표번호
                ,NULL CST_INC_SLIP_CDATE4 --원가증감 회계전표생성일
             FROM RELEASE_ITEM_MGMT A
            UNION ALL
             SELECT
                 A.RELEASE_NUM 
                ,A.SALE_ORDER_NUM
                ,A.SALE_ORDER_NUM_SEQ
                ,A.RELEASE_STATUS_CD 
                ,'' AS APPRV_REQ_DATE  
                ,'' AS APPRV_DATE     
                ,'' AS APPROV_USER_ID 
                ,'' AS RELEASE_CONFIRM_DATE
                ,'' AS CONFIRMOR_ID        
                ,A.ITEM_CD             
                ,A.ITEM_NM             
                ,A.HS_CD               
                ,A.WH_CD               
                ,A.UNIT                
                ,-1 * B.PURCHASE_RETURN_QUANTITY AS RELEASE_QUANTITY    
                ,-1 * B.PURCHASE_RETURN_WGT AS RELEASE_WGT         
                ,-1 * B.PURCHASE_RETURN_WGT AS REAL_WGT            
                ,A.SALE_UPRICE         
                ,A.BUY_UPRICE          
                ,0 AS SALE_TRANSPORT_AMT  
                ,-1 * B.PURCHASE_RETURN_AMT AS SALE_AMT            
                ,-1 * B.PURCHASE_RETURN_AMT AS REAL_SALE_AMT       
                ,A.PURCHASE_RETURN_QUANTITY 
                ,A.PURCHASE_RETURN_WGT      
                ,A.PURCHASE_RETURN_DATE     
                ,A.PURCHASE_RETURN_DELIVER_NUM  
                ,A.BEFORE_INVENTORY             
                ,A.CST_EXCEPT_YN                
                ,A.SALS_SEND_YN                 
                ,A.CST_SLIP_FISCAL_NUM          
                ,A.CST_SLIP_CDATE               
                ,A.SALS_CONFIRM_DATE            
                ,A.CONFIRM_YN                   
                ,A.RECEIVE_REQ_SEQ              
                ,A.RELEASE_PUBLISH_YN           
                ,A.RELEASE_PUBLISH_NUM_OF_TIMES 
                ,A.SHIPMENT_TYPE                
                ,A.SALE_AGED                    
                ,A.ATTACH_DEPT                  
                ,A.SALE_PRCG_ID                 
                ,A.CUST_CD                      
                ,A.TAX_SHET_CREATION_YN         
                ,A.SALS_ACT_SEND_YN             
                ,A.INPUT_SALE_AMT         
                ,A.DEAL_SHEET_PUBLISH_YN  
                ,A.DEAL_SHEET_PUBLISH_DTM 
                ,TO_CHAR(B.PURCHASE_RETURN_DATE) AS RELEASE_DATE           
                ,A.BLCK_MARK              
                ,A.RECEIPT_NUM            
                ,A.SIGN_INSTANCE_ID       
                ,A.REMARK                 
                ,A.SIGN_INSTANCE_ID2      
                ,A.DEPT_MNGMV_SLIP_FISCAL_NUM   
                ,A.DEPT_MNGMV_SLIP_CDATE        
                ,A.DEPT_MNGMV_DELIVER_NUM       
                ,A.CST_INC_SLIP_FISCAL_NUM      
                ,A.CST_INC_SLIP_CDATE           
                ,A.CST_INC_YN                   
                ,A.INC_SIGN_INSTANCE_ID         
                ,-1 * B.PURCHASE_RETURN_CST AS BUY_CST                      
                ,A.PURCHASE_RETURN_CST         
                ,B.CUSER
                ,B.CDATE
                ,B.UDATE
                ,B.UUSER
                ,B.SEQ
                ,B.PURCHASE_RETURN_QUANTITY AS PURCHASE_RETURN_QUANTITY2
                ,B.PURCHASE_RETURN_WGT AS PURCHASE_RETURN_WGT2
                ,B.PURCHASE_RETURN_DATE AS PURCHASE_RETURN_DATE2
                ,B.PURCHASE_RETURN_AMT AS PURCHASE_RETURN_AMT2
                ,B.PURCHASE_RETURN_CST AS PURCHASE_RETURN_CST2
                ,B.SALS_CONFIRM_DATE
                ,B.CONFIRM_YN
                ,NULL CST_SLIP_FISCAL_NUM
                ,B.RECEIPT_NUM AS RECEIPT_NUM2
                ,NULL SIGN_INSTANCE_ID3
                ,B.SIGN_INSTANCE_ID SIGN_INSTANCE_ID4
                ,B.CST_INC_SLIP_FISCAL_NUM CST_INC_SLIP_FISCAL_NUM4 --원가증감 회계전표번호
                ,B.CST_INC_SLIP_CDATE CST_INC_SLIP_CDATE4 --원가증감 회계전표생성일
             FROM RELEASE_ITEM_MGMT A, PURCHASE_RETURN_MGMT B
             WHERE A.RELEASE_NUM = B.RELEASE_NUM
             ) A,

             SALE_ORDER_ITEM_MGMT B,
             PO_ORDER_MST C,
             INVENTORY_MGMT_DELIVER D,
             ENTRY_ITEM_DETAIL E,
             SALE_ORDER F,
             SAP_IF.SAP_IFC_SLIP_STATUS G,
             FT_SAP_INTERFACE H,
             FT_SAP_INTERFACE I,
             FT_SAP_INTERFACE J,
             HLDC_PO_ITEM_MST K,
             (SELECT T.DELIVER_NUM, SUM(T.DIV_AMT) AS DIV_AMT, NVL(MAX(T.NONARRIV_ALT_YN),'N') AS NONARRIV_ALT_YN FROM DELIVERITEM_OTHER_AMT_DIV T
              WHERE NVL(T.DIV_AMT,0)>0
                 GROUP BY T.DELIVER_NUM
               ) X
        WHERE A.SALE_ORDER_NUM=B.SALE_ORDER_NUM
        AND   B.PO_ORDER_NUM = C.PO_ORDER_NUM
        AND   A.SALE_ORDER_NUM_SEQ = B.SALE_ORDER_NUM_SEQ
        AND   B.DELIVER_NUM = D.DELIVER_NUM
        AND   D.ENTRY_NUM = E.ENTRY_NUM(+)
        AND   D.ENTRY_ITEM_SEQ = E.ENTRY_ITEM_SEQ(+)
        AND   F.SALE_ORDER_NUM = B.SALE_ORDER_NUM
        AND   DECODE(A.SEQ,NULL,A.CST_SLIP_FISCAL_NUM,A.CST_SLIP_FISCAL_NUM2) =G.SLIP_NUM(+)
        AND   A.CST_SLIP_FISCAL_NUM2 = H.SLIP_NUM(+)     --매입원가 차감
        AND   A.CST_INC_SLIP_FISCAL_NUM4= J.SLIP_NUM(+)  --매입원가 증가

        AND   A.DEPT_MNGMV_SLIP_FISCAL_NUM = I.SLIP_NUM(+)
        AND   A.ITEM_CD = K.ITEM_CODE(+)
        AND   D.DELIVER_NUM = X.DELIVER_NUM(+)
        <#if term?has_content>
            <#if term == "A">	/* 주문일자 */
                AND F.ORDER_DATE BETWEEN :startTerm AND :endTerm
            <#elseif term == "B">	/* 승인요청일자 */
                AND A.APPRV_REQ_DATE BETWEEN :startTerm AND :endTerm
            <#elseif term == "C">	/* 승인일자 */
                AND A.APPRV_DATE BETWEEN :startTerm AND :endTerm
            <#elseif term == "D">	 /* 출고확정일자 */
                AND A.RELEASE_CONFIRM_DATE BETWEEN :startTerm AND :endTerm
            <#elseif term == "E">    /* 출고일자 */
                AND A.RELEASE_DATE BETWEEN :startTerm AND :endTerm
            </#if>
        </#if>

        <#if search?has_content && searchContents?has_content>
            <#if search == "A">	/* PO No */
                 AND B.PO_ORDER_NUM LIKE '%'||:searchContents||'%'
            <#elseif search == "B">	/* 출고번호 */
                AND A.RELEASE_NUM LIKE '%'||:searchContents||'%'
            <#elseif search == "C">	/* 출고처 */
            AND EXISTS
                 (
                  SELECT
                         C.UPJANGNM AS CUSTNM
                  FROM   ST_CUST A,
                         ST_UPJANG B,
                         FMS_UPJANG_V C
                  WHERE  B.CUSTCD = A.CUSTCD
                  AND    C.UPJANG = B.UPJANG
                  AND    NVL(B.ATTR01, 'Y') <> 'N'
                  AND B.CC_CD IN (
                    SELECT A.SET1
                    FROM   SCC_COMMON_CODE A
                    WHERE  A.GROUP_CODE = 'ATTACH_DEPT'
                    AND    A.USE_YN = 'Y'
                  )
                  AND    A.CUSTCD = A.CUST_CD
                  AND    CUSTNM LIKE '%'||:searchContents||'%'
                 )
            <#elseif search == "D"> /* 창고명 */
            AND    D.WH_NM LIKE '%'||:searchContents||'%'
            <#elseif search == "E"> /* B/L NO */
               AND EXISTS (
                  SELECT T.ITEM_BL_NUM FROM PO_ORDER_ITEM_DETAIL T
                  WHERE D.PO_ORDER_NUM = T.PO_ORDER_NUM
                  AND D.ITEM_CD = T.ITEM_CD
                  AND D.ITEM_SEQ = T.ITEM_SEQ
                  AND ( UPPER(T.ITEM_BL_NUM) LIKE '%'||UPPER(:searchContents)||'%' OR  UPPER(C.BL_NUM) LIKE '%'||UPPER(:searchContents)||'%' )
               )
            </#if>
        </#if>
        <#if search2?has_content && searchContents2?has_content>
            <#if search2 == "A">	/* PO No */
                 AND B.PO_ORDER_NUM LIKE '%'||:searchContents2||'%'
            <#elseif search2 == "B">	/* 출고번호 */
                AND A.RELEASE_NUM LIKE '%'||:searchContents2||'%'
            <#elseif search2 == "C">	/* 출고처 */
            AND EXISTS
                 (
                  SELECT
                         C.UPJANGNM AS CUSTNM
                  FROM   ST_CUST A,
                         ST_UPJANG B,
                         FMS_UPJANG_V C
                  WHERE  B.CUSTCD = A.CUSTCD
                  AND    C.UPJANG = B.UPJANG
                  AND    NVL(B.ATTR01, 'Y') <> 'N'
                  AND B.CC_CD IN (
                    SELECT A.SET1
                    FROM   SCC_COMMON_CODE A
                    WHERE  A.GROUP_CODE = 'ATTACH_DEPT'
                    AND    A.USE_YN = 'Y'
                  )
                  AND    A.CUSTCD = A.CUST_CD
                  AND    CUSTNM LIKE '%'||:searchContents2||'%'
                 )
            <#elseif search == "D"> /* 창고명 */
            AND    D.WH_NM LIKE '%'||:searchContents2||'%'
            <#elseif search2 == "E"> /* B/L NO */
               AND EXISTS (
                  SELECT T.ITEM_BL_NUM FROM PO_ORDER_ITEM_DETAIL T
                  WHERE D.PO_ORDER_NUM = T.PO_ORDER_NUM
                  AND D.ITEM_CD = T.ITEM_CD
                  AND D.ITEM_SEQ = T.ITEM_SEQ
                  AND ( UPPER(T.ITEM_BL_NUM) LIKE '%'||UPPER(:searchContents2)||'%' OR  UPPER(C.BL_NUM) LIKE '%'||UPPER(:searchContents2)||'%' )
               )
            </#if>
        </#if>

        <#if shipmentTypeCd?has_content>
            AND A.SHIPMENT_TYPE = :shipmentTypeCd
        </#if>

        <#if releaseStatusCd?has_content>
            AND A.RELEASE_STATUS_CD = :releaseStatusCd
        </#if>

        <#if attachDept?has_content>
            AND A.ATTACH_DEPT = :attachDept
        </#if>

        <#if saleAged?has_content>
            AND F.SALE_AGED = :saleAged
        </#if>
        
        ORDER BY A.RELEASE_NUM DESC, NVL(A.SEQ,0) ASC, A.SALE_ORDER_NUM, A.SALE_ORDER_NUM_SEQ DESC
        ]]></statement>

	<statement name="selectReleaseItemMgmtList_bak_20160128"
		type="select"><![CDATA[    
        SELECT
               A.RELEASE_NUM
              ,A.SHIPMENT_TYPE
              ,A.RECEIPT_NUM2  AS RECEIPT_NUM
              ,(
                  SELECT MAX(T2.DDDD_CLOSE_YN)
                    FROM ST_UPJANG T
                         ,SLA_IF_UPJANG_SALS_MST T2
                   WHERE 1=1
                     AND T.UPJANG= T2.UPJANG_CD
                     AND NVL(T.ATTR01, 'Y') <> 'N'
                     AND T.CUSTCD = A.CUST_CD
                     AND T2.RECEIPT_NUM = A.RECEIPT_NUM2
                     AND T2.OCCUR_DATE = A.RELEASE_DATE
               ) AS DDDD_CLOSE_YN	--일마감여부
              --,A.CST_EXCEPT_YN
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'SHIPMENT_TYPE_CD' AND CODE = A.SHIPMENT_TYPE ) AS SHIPMENT_TYPE_NM
              ,A.SALE_AGED
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'SALE_AGED' AND CODE = A.SALE_AGED ) AS SALE_AGED_NM
              ,A.ATTACH_DEPT
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'ATTACH_DEPT' AND CODE = A.ATTACH_DEPT ) AS ATTACH_DEPT_NM
              --,A.RELEASE_STATUS_CD
              --,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'RELEASE_STATUS_CD' AND CODE = A.RELEASE_STATUS_CD ) AS RELEASE_STATUS_NM
              ,DECODE(NVL(A.CONFIRM_YN,''),'Y','매출확정','C','매출확정취소','') CONFIRM_YN_NM
              ,CASE WHEN NVL(A.SEQ,0) = 0 THEN   --정상 출고건
                    A.RELEASE_STATUS_CD
               ELSE --환입건
                    CASE WHEN NVL(A.CONFIRM_YN2,'N') = 'Y' THEN   --매출확정 Y
                        '50'
                    WHEN NVL(A.CONFIRM_YN2,'N') = 'C' THEN   --매출취소 C
                        '60'
                    ELSE   --매출확정N:출고확정
                        '40'
                    END
               END RELEASE_STATUS_CD
              ,CASE WHEN NVL(A.SEQ,0) = 0 THEN   --정상 출고건
                    (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'RELEASE_STATUS_CD' AND CODE = A.RELEASE_STATUS_CD )
               ELSE --환입건
                    CASE WHEN NVL(A.CONFIRM_YN2,'N') = 'Y' THEN   --매출확정 Y
                        '매출마감'
                    WHEN NVL(A.CONFIRM_YN2,'N') = 'C' THEN   --매출취소 C
                        '매출마감취소'
                    ELSE   --매출확정N:출고확정
                        '환입확정'
                    END
               END RELEASE_STATUS_NM
              ,A.SALE_PRCG_ID
              ,(SELECT T.NM_KOR FROM   HR_PERSONAL T, SCC_CC T2
                WHERE  T2.CC_CD = T.CC_CD AND A.SALE_PRCG_ID =T.SABUN ) SALE_PRCG_NM
              ,A.CUST_CD    /* 거래처 */
              ,(SELECT T.CUSTNM FROM ST_CUST T WHERE T.CUSTCD =A.CUST_CD AND T.USE_YN='Y') AS CUST_NM
              /*
              ,(
                SELECT
                       C.UPJANGNM
                FROM   ST_CUST A,
                       ST_UPJANG B,
                       FMS_UPJANG_V C
                WHERE  B.CUSTCD = A.CUSTCD
                AND    C.UPJANG = B.UPJANG
                AND    NVL(B.ATTR01, 'Y') <> 'N'
                AND B.CC_CD IN (
                  SELECT A.SET1
                  FROM   SCC_COMMON_CODE A
                  WHERE  A.GROUP_CODE = 'ATTACH_DEPT'
                  AND    A.USE_YN = 'Y'
                )
                AND    A.CUSTCD = A.CUST_CD
               ) CUST_NM
               */
              ,A.ITEM_CD
              ,K.ITEM_NAME||' '||K.ITEM_SIZE AS ITEM_NM
              ,B.PO_ORDER_NUM
              ,B.SALE_ORDER_NUM
              ,B.SALE_ORDER_NUM_SEQ
              ,CASE WHEN D.PO_TYPE= '10' THEN    --수입(KRW)
                   C.BL_NUM
               ELSE
                  (
                    SELECT T.ITEM_BL_NUM FROM PO_ORDER_ITEM_DETAIL T
                    WHERE B.PO_ORDER_NUM = T.PO_ORDER_NUM
                    AND B.ITEM_CD = T.ITEM_CD
                    AND B.ITEM_SEQ = T.ITEM_SEQ
                  )
               END AS BL_NUM
              ,D.EST_NO
              ,E.ORIGIN
              ,D.WH_CD
              ,D.WH_NM
              ,F.ORDER_DATE
              ,A.UNIT
              ,(SELECT SET1 FROM   SCC_COMMON_CODE T WHERE  T.GROUP_CODE = 'ITEM_UNIT' AND    T.USE_YN = 'Y' AND T.CODE = A.UNIT ) SET1
              ,A.RELEASE_QUANTITY
              ,A.RELEASE_WGT
              ,A.REAL_WGT
              ,A.REAL_WGT ORG_REAL_WGT
              ,A.SALE_UPRICE               /*판매단가*/
              ,0 SALE_TRANSPORT_AMT        /*판매운송비*/
  --            ,A.BUY_UPRICE * DECODE(A.UNIT,'KG',A.REAL_WGT,A.RELEASE_QUANTITY) BUY_CST                   /*매입원가*/
--              ,ROUND((D.DELIVER_AMT+NVL(X.DIV_AMT,0)) * DECODE(D.UNIT, 'KG', A.REAL_WGT, A.RELEASE_QUANTITY ) /  DECODE(D.UNIT, 'KG', D.DELIVER_WGT, D.DELIVER_QUANTITY))  AS BUY_CST
              ,A.BUY_CST
              ,A.BUY_UPRICE
              ,A.SALE_AMT                  /*판매금액*/
              ,ROUND(A.REAL_SALE_AMT) AS REAL_SALE_AMT        /*실판매금액*/
              --,NVL(DECODE(A.SEQ,NULL, (A.RELEASE_QUANTITY - A.PURCHASE_RETURN_QUANTITY), A.PURCHASE_RETURN_QUANTITY2),0) PURCHASE_RETURN_QUANTITY  /*환입수량*/
              --,NVL(DECODE(A.SEQ,NULL, (A.REAL_WGT - A.PURCHASE_RETURN_WGT), A.PURCHASE_RETURN_WGT2),0) PURCHASE_RETURN_WGT  /*환입중량*/
              --,DECODE(A.SEQ,NULL, A.PURCHASE_RETURN_DATE, A.PURCHASE_RETURN_DATE2) PURCHASE_RETURN_DATE  /*환입일자*/
              --,NVL(DECODE(A.SEQ,NULL, (A.REAL_SALE_AMT - A.PURCHASE_RETURN_DELIVER_NUM), A.PURCHASE_RETURN_AMT2),0) PURCHASE_RETURN_DELIVER_NUM  /*환입금액*/
              --,NVL(DECODE(A.SEQ,NULL, (A.BUY_CST - A.PURCHASE_RETURN_CST), A.PURCHASE_RETURN_CST2),0) PURCHASE_RETURN_CST  /*환입원가*/
              ,NVL(DECODE(A.SEQ,NULL, 0, A.PURCHASE_RETURN_QUANTITY2),0) PURCHASE_RETURN_QUANTITY  /*환입수량*/
              ,NVL(DECODE(A.SEQ,NULL, 0, A.PURCHASE_RETURN_WGT2),0) PURCHASE_RETURN_WGT  /*환입중량*/
              ,DECODE(A.SEQ,NULL, NULL, A.PURCHASE_RETURN_DATE2) PURCHASE_RETURN_DATE  /*환입일자*/
              ,NVL(DECODE(A.SEQ,NULL, 0, A.PURCHASE_RETURN_AMT2),0) PURCHASE_RETURN_DELIVER_NUM  /*환입금액*/
              ,NVL(DECODE(A.SEQ,NULL, 0, A.PURCHASE_RETURN_CST2),0) PURCHASE_RETURN_CST  /*환입원가*/              
               /*
              ,CASE
                   WHEN D.ORDER_REMAIN_QUANTITY = NULL OR D.ORDER_REMAIN_QUANTITY = 0 THEN
                    D.DELIVER_QUANTITY
                   ELSE
                    NVL(D.DELIVER_QUANTITY, 0) -
                    NVL(D.ORDER_REMAIN_QUANTITY, 0) -
                    NVL(D.RELEASE_WAIT_QUANTITY, 0) -
                    NVL(D.RELEASE_END_QUANTITY, 0) - NVL(D.RMA_QUANTITY, 0) -
                    NVL(D.WH_MOVE_QUANTITY, 0) -
                    NVL(D.INVENTORY_CONTROL_QUANTITY, 0)
               END ORDER_REMAIN_QUANTITY

              ,CASE
                   WHEN D.ORDER_REMAIN_WGT = NULL OR D.ORDER_REMAIN_WGT = 0 THEN
                    D.DELIVER_WGT
                   ELSE
                    NVL(D.DELIVER_WGT, 0) - NVL(D.ORDER_REMAIN_WGT, 0) -
                    NVL(D.RELEASE_WAIT_WGT, 0) - NVL(D.RELEASE_END_WGT, 0) -
                    NVL(D.RMA_WGT, 0) - NVL(D.WH_MOVE_WGT, 0) -
                    NVL(D.INVENTORY_CONTROL_WGT, 0)
               END ORDER_REMAIN_WGT
               */
              ,
               NVL(D.DELIVER_QUANTITY, 0) -
               NVL(D.ORDER_REMAIN_QUANTITY, 0) -
               NVL(D.RELEASE_WAIT_QUANTITY, 0) -
               NVL(D.RELEASE_END_QUANTITY, 0) - NVL(D.RMA_QUANTITY, 0) -
               NVL(D.WH_MOVE_QUANTITY, 0) -
               NVL(D.INVENTORY_CONTROL_QUANTITY, 0) AS ORDER_REMAIN_QUANTITY

              ,
               NVL(D.DELIVER_WGT, 0) - NVL(D.ORDER_REMAIN_WGT, 0) -
               NVL(D.RELEASE_WAIT_WGT, 0) - NVL(D.RELEASE_END_WGT, 0) -
               NVL(D.RMA_WGT, 0) - NVL(D.WH_MOVE_WGT, 0) -
               NVL(D.INVENTORY_CONTROL_WGT, 0) AS ORDER_REMAIN_WGT
              ,A.APPRV_REQ_DATE
              ,A.APPRV_DATE
              ,A.APPROV_USER_ID
              ,A.RELEASE_CONFIRM_DATE
              ,A.CONFIRMOR_ID
              ,D.DELIVER_NUM
              ,F.RELEASE_DATE RELEASE_REQ_DATE
              ,A.RELEASE_DATE
              ,D.DELIVER_WGT
              ,C.SALSPLCE_CD
              ,D.CURRENT_WH_DELIVER_DATE        /* 입고일자 */
              ,A.RELEASE_PUBLISH_YN             /* 출고증발행여부 */
              ,A.RELEASE_PUBLISH_NUM_OF_TIMES   /* 출고증발행횟수 */
              ,A.CST_SLIP_FISCAL_NUM
              ,A.CST_SLIP_CDATE
              ,(SELECT SET1 FROM SCC_COMMON_CODE
                WHERE  GROUP_CODE = 'ATTACH_DEPT'
                AND CODE = A.ATTACH_DEPT ) AS ATTACH_DEPT_SAP   /*SAP귀속부서*/
              ,(SELECT MAX(T2.CC_CD) FROM ST_CUST T, ST_UPJANG T2
                WHERE  T.CUSTCD = T2.CUSTCD
                AND    NVL(T2.ATTR01, 'Y') <> 'N'
                AND T.CUSTCD=A.CUST_CD
                AND    T.USE_YN = 'Y'
                AND T2.CC_CD IN (
                  SELECT SET1 FROM SCC_COMMON_CODE
                  WHERE  GROUP_CODE = 'ATTACH_DEPT'
                )
               ) AS CHG_ATTACH_DEPT_SAP
              ,C.LC_NUM
              ,H.SLIP_NUM
              ,CASE WHEN H.SLIP_STATUS IN ('V','P') THEN
                    'Y'
               ELSE
                    'N'
               END CST_EXCEPT_YN              	--매입원가차감여부
              ,H.SLIP_STATUS
              ,H.FISCAL_SLIP_NUM
              ,H.FISCAL_YEAR
              ,H.PROC_DATE FISCAL_SLIPC_DATE
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE
                WHERE  GROUP_CODE = 'SLIP_STATUS' AND CODE = H.SLIP_STATUS ) AS SLIP_STATUS_NM





               ,CASE WHEN H.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                   NULL
               ELSE
                   A.SIGN_INSTANCE_ID3
               END AS SIGN_INSTANCE_ID

               ,CASE WHEN H.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                   NULL
               ELSE
                   NVL(SCC_SIGN_STATUS_FUN(SIGN_INSTANCE_ID3),'')
               END AS SIGN_PROGRESS_STATUS

               ,CASE WHEN H.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                   NULL
               ELSE
                   CASE SCC_SIGN_STATUS_FUN(SIGN_INSTANCE_ID3)
                   WHEN 'COMPLETE' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='30' )
                   WHEN 'REJECT' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='40' )
                   WHEN 'CANCEL' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='50' )
                   WHEN 'DRAFT' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='20' )
                   ELSE
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND CODE = H.SLIP_STATUS )
                   END
               END AS SIGN_PROGRESS_STATUS_NM




              ,I.SLIP_NUM SLIP_NUM2
              ,I.SLIP_STATUS SLIP_STATUS2
              ,I.PROC_DATE FISCAL_SLIPC_DATE2
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE
                WHERE  GROUP_CODE = 'SLIP_STATUS' AND CODE = I.SLIP_STATUS ) AS SLIP_STATUS_NM2

               ,CASE WHEN I.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                   NULL
               ELSE
                   A.SIGN_INSTANCE_ID2
               END AS SIGN_INSTANCE_ID2

               ,CASE WHEN I.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                   NULL
               ELSE
                   NVL(SCC_SIGN_STATUS_FUN(SIGN_INSTANCE_ID2),'')
               END AS SIGN_PROGRESS_STATUS2

               ,CASE WHEN I.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                   NULL
               ELSE
                   CASE SCC_SIGN_STATUS_FUN(SIGN_INSTANCE_ID2)
                   WHEN 'COMPLETE' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='30' )
                   WHEN 'REJECT' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='40' )
                   WHEN 'CANCEL' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='50' )
                   WHEN 'DRAFT' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='20' )
                   ELSE
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND CODE = I.SLIP_STATUS )
                   END
               END AS SIGN_PROGRESS_STATUS_NM2

               --매입원가 증가
              ,CASE WHEN J.SLIP_STATUS IN ('V','P') THEN
                    'Y'
               ELSE
                    'N'
               END CST_INC_YN                --매입원가증가여부
              ,J.SLIP_NUM SLIP_NUM4
              ,J.SLIP_STATUS SLIP_STATUS4
              ,J.PROC_DATE FISCAL_SLIPC_DATE4
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE
                WHERE  GROUP_CODE = 'SLIP_STATUS' AND CODE = J.SLIP_STATUS ) AS SLIP_STATUS_NM4
               ,CASE WHEN J.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                   NULL
               ELSE
                   A.SIGN_INSTANCE_ID4
               END AS SIGN_INSTANCE_ID4

               ,CASE WHEN J.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                   NULL
               ELSE
                   NVL(SCC_SIGN_STATUS_FUN(SIGN_INSTANCE_ID4),'')
               END AS SIGN_PROGRESS_STATUS4

               ,CASE WHEN J.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                   NULL
               ELSE
                   CASE SCC_SIGN_STATUS_FUN(SIGN_INSTANCE_ID4)
                   WHEN 'COMPLETE' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='30' )
                   WHEN 'REJECT' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='40' )
                   WHEN 'CANCEL' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='50' )
                   WHEN 'DRAFT' THEN
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='20' )
                   ELSE
                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND CODE = J.SLIP_STATUS )
                   END
               END AS SIGN_PROGRESS_STATUS_NM4

              ,A.REMARK
              ,A.SEQ
              ,F.SALE_ORDER_TYPE
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'SALE_TYPE' AND CODE =F.SALE_ORDER_TYPE  ) AS SALE_ORDER_TYPE_NM
              ,D.SIGN_EXCHANGE_RATE
              ,D.INCOME_DTR_DSCT_NUM
              ,(
                SELECT SCC_TELNO_SAUPNO_EXPR('TELNO', SCC_CRYPTO.DEC_FUN(T.FAX_NO)) AS FAX_NO_ENC
                FROM EPROCUSR.ESMVDFW T
                WHERE 1 = 1
                  --AND T.CUS_VD_CLS IN ('10', '50')
                  AND T.VD_CD = D.WH_CD
                AND T.VD_CD IS NOT NULL
                 AND T.VD_STS = 'C'
                 AND EXISTS (SELECT 1 FROM EPROCUSR.ESMVDOG A
                        WHERE A.SYS_ID = T.SYS_ID
                          AND A.VD_SN = T.VD_SN
                          AND A.OPER_ORG_SN = '414' --FC부문 협력업체만
               			)
               ) AS WH_FAX_NO

               ,(SELECT SCC_TELNO_SAUPNO_EXPR('TELNO', SCC_CRYPTO.DEC_FUN(T.FAX_NO_ENC)) FROM ST_CUST T WHERE T.CUSTCD =A.CUST_CD  AND T.USE_YN='Y' ) AS SALE_FAX_NO     --매출처 FAX NO
               ,NVL(COUNT(A.RECEIPT_NUM2) OVER(PARTITION BY A.ATTACH_DEPT, A.CUST_CD  ),0) RECEIPT_NUM_CNT
               ,(SELECT T.NM_KOR FROM SCC_USERINFO T WHERE T.SABUN = A.CUSER) AS CUSER
               ,A.CDATE
               ,(SELECT T.NM_KOR FROM SCC_USERINFO T WHERE T.SABUN = A.UUSER) AS UUSER
               ,A.UDATE
       FROM (SELECT
                 A.*
                ,NULL SEQ
                ,NULL AS PURCHASE_RETURN_QUANTITY2
                ,NULL AS PURCHASE_RETURN_WGT2
                ,NULL AS PURCHASE_RETURN_DATE2
                ,NULL AS PURCHASE_RETURN_AMT2
                ,NULL AS PURCHASE_RETURN_CST2
                ,NULL AS SALS_CONFIRM_DATE2
                ,NULL AS CONFIRM_YN2
                ,A.CST_SLIP_FISCAL_NUM AS CST_SLIP_FISCAL_NUM2
                ,A.RECEIPT_NUM AS RECEIPT_NUM2
                ,A.SIGN_INSTANCE_ID SIGN_INSTANCE_ID3

                ,NULL SIGN_INSTANCE_ID4
                ,NULL CST_INC_SLIP_FISCAL_NUM4 --원가증감 회계전표번호
                ,NULL CST_INC_SLIP_CDATE4 --원가증감 회계전표생성일
             FROM RELEASE_ITEM_MGMT A
            UNION ALL
             SELECT
                 A.*
                ,B.SEQ
                ,B.PURCHASE_RETURN_QUANTITY AS PURCHASE_RETURN_QUANTITY2
                ,B.PURCHASE_RETURN_WGT AS PURCHASE_RETURN_WGT2
                ,B.PURCHASE_RETURN_DATE AS PURCHASE_RETURN_DATE2
                ,B.PURCHASE_RETURN_AMT AS PURCHASE_RETURN_AMT2
                ,B.PURCHASE_RETURN_CST AS PURCHASE_RETURN_CST2
                ,B.SALS_CONFIRM_DATE
                ,B.CONFIRM_YN
                ,NULL CST_SLIP_FISCAL_NUM
                ,B.RECEIPT_NUM AS RECEIPT_NUM2
                ,NULL SIGN_INSTANCE_ID3

                ,B.SIGN_INSTANCE_ID SIGN_INSTANCE_ID4
                ,B.CST_INC_SLIP_FISCAL_NUM CST_INC_SLIP_FISCAL_NUM4 --원가증감 회계전표번호
                ,B.CST_INC_SLIP_CDATE CST_INC_SLIP_CDATE4 --원가증감 회계전표생성일
             FROM RELEASE_ITEM_MGMT A, PURCHASE_RETURN_MGMT B
             WHERE A.RELEASE_NUM = B.RELEASE_NUM
             ) A,

             SALE_ORDER_ITEM_MGMT B,
             PO_ORDER_MST C,
             INVENTORY_MGMT_DELIVER D,
             ENTRY_ITEM_DETAIL E,
             SALE_ORDER F,
             SAP_IF.SAP_IFC_SLIP_STATUS G,
             FT_SAP_INTERFACE H,
             FT_SAP_INTERFACE I,
             FT_SAP_INTERFACE J,
             HLDC_PO_ITEM_MST K,
             (SELECT T.DELIVER_NUM, SUM(T.DIV_AMT) AS DIV_AMT, NVL(MAX(T.NONARRIV_ALT_YN),'N') AS NONARRIV_ALT_YN FROM DELIVERITEM_OTHER_AMT_DIV T
              WHERE NVL(T.DIV_AMT,0)>0
                 GROUP BY T.DELIVER_NUM
               ) X
        WHERE A.SALE_ORDER_NUM=B.SALE_ORDER_NUM
        AND   B.PO_ORDER_NUM = C.PO_ORDER_NUM
        AND   A.SALE_ORDER_NUM_SEQ = B.SALE_ORDER_NUM_SEQ
        AND   B.DELIVER_NUM = D.DELIVER_NUM
        AND   D.ENTRY_NUM = E.ENTRY_NUM(+)
        AND   D.ENTRY_ITEM_SEQ = E.ENTRY_ITEM_SEQ(+)
        AND   F.SALE_ORDER_NUM = B.SALE_ORDER_NUM
        AND   DECODE(A.SEQ,NULL,A.CST_SLIP_FISCAL_NUM,A.CST_SLIP_FISCAL_NUM2) =G.SLIP_NUM(+)
        AND   A.CST_SLIP_FISCAL_NUM2 = H.SLIP_NUM(+)     --매입원가 차감
        AND   A.CST_INC_SLIP_FISCAL_NUM4= J.SLIP_NUM(+)  --매입원가 증가

        AND   A.DEPT_MNGMV_SLIP_FISCAL_NUM = I.SLIP_NUM(+)
        AND   A.ITEM_CD = K.ITEM_CODE(+)
        AND   D.DELIVER_NUM = X.DELIVER_NUM(+)
        <#if term?has_content>
            <#if term == "A">	/* 주문일자 */
                AND F.ORDER_DATE BETWEEN :startTerm AND :endTerm
            <#elseif term == "B">	/* 승인요청일자 */
                AND A.APPRV_REQ_DATE BETWEEN :startTerm AND :endTerm
            <#elseif term == "C">	/* 승인일자 */
                AND A.APPRV_DATE BETWEEN :startTerm AND :endTerm
            <#elseif term == "D">	 /* 출고확정일자 */
                AND A.RELEASE_CONFIRM_DATE BETWEEN :startTerm AND :endTerm
            <#elseif term == "E">    /* 출고일자 */
                AND A.RELEASE_DATE BETWEEN :startTerm AND :endTerm
            </#if>
        </#if>

        <#if search?has_content && searchContents?has_content>
            <#if search == "A">	/* PO No */
                 AND B.PO_ORDER_NUM LIKE '%'||:searchContents||'%'
            <#elseif search == "B">	/* 출고번호 */
                AND A.RELEASE_NUM LIKE '%'||:searchContents||'%'
            <#elseif search == "C">	/* 출고처 */
            AND EXISTS
                 (
                  SELECT
                         C.UPJANGNM AS CUSTNM
                  FROM   ST_CUST A,
                         ST_UPJANG B,
                         FMS_UPJANG_V C
                  WHERE  B.CUSTCD = A.CUSTCD
                  AND    C.UPJANG = B.UPJANG
                  AND    NVL(B.ATTR01, 'Y') <> 'N'
                  AND B.CC_CD IN (
                    SELECT A.SET1
                    FROM   SCC_COMMON_CODE A
                    WHERE  A.GROUP_CODE = 'ATTACH_DEPT'
                    AND    A.USE_YN = 'Y'
                  )
                  AND    A.CUSTCD = A.CUST_CD
                  AND    CUSTNM LIKE '%'||:searchContents||'%'
                 )
            <#elseif search == "D"> /* 창고명 */
            AND    D.WH_NM LIKE '%'||:searchContents||'%'
            <#elseif search == "E"> /* B/L NO */
               AND EXISTS (
                  SELECT T.ITEM_BL_NUM FROM PO_ORDER_ITEM_DETAIL T
                  WHERE D.PO_ORDER_NUM = T.PO_ORDER_NUM
                  AND D.ITEM_CD = T.ITEM_CD
                  AND D.ITEM_SEQ = T.ITEM_SEQ
                  AND ( UPPER(T.ITEM_BL_NUM) LIKE '%'||UPPER(:searchContents)||'%' OR  UPPER(C.BL_NUM) LIKE '%'||UPPER(:searchContents)||'%' )
               )
            </#if>
        </#if>

        <#if shipmentTypeCd?has_content>
            AND A.SHIPMENT_TYPE = :shipmentTypeCd
        </#if>

        <#if releaseStatusCd?has_content>
            AND A.RELEASE_STATUS_CD = :releaseStatusCd
        </#if>

        <#if attachDept?has_content>
            AND A.ATTACH_DEPT = :attachDept
        </#if>

        <#if saleAged?has_content>
            AND F.SALE_AGED = :saleAged
        </#if>
        ORDER BY A.RELEASE_NUM DESC, NVL(A.SEQ,0) ASC, A.SALE_ORDER_NUM, A.SALE_ORDER_NUM_SEQ DESC
        ]]></statement>

	<!-- 출고 주문내역에 대하여 출고증을 조회한다. -->
	<statement name="selectReleaseReqCertificatePrintPop"
		type="select">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.selectReleaseReqCertificatePrintPop  */
        SELECT
               A.RELEASE_NUM
              ,A.SHIPMENT_TYPE
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'SHIPMENT_TYPE_CD' AND CODE = A.SHIPMENT_TYPE ) AS SHIPMENT_TYPE_NM
              ,A.SALE_AGED
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'SALE_AGED' AND CODE = A.SALE_AGED ) AS SALE_AGED_NM
              ,A.ATTACH_DEPT
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'ATTACH_DEPT' AND CODE = A.ATTACH_DEPT ) AS ATTACH_DEPT_NM
              ,A.RELEASE_STATUS_CD
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'RELEASE_STATUS_CD' AND CODE = A.RELEASE_STATUS_CD ) AS RELEASE_STATUS_NM
              ,A.SALE_PRCG_ID
              ,(SELECT T.NM_KOR FROM   HR_PERSONAL T, SCC_CC T2
                WHERE  T2.CC_CD = T.CC_CD AND A.SALE_PRCG_ID =T.SABUN ) SALE_PRCG_NM
              ,A.CUST_CD
              ,(SELECT T.CUSTNM FROM ST_CUST T WHERE T.CUSTCD =A.CUST_CD AND T.USE_YN='Y') AS CUST_NM
              ,A.ITEM_CD
              ,A.ITEM_NM
              ,B.PO_ORDER_NUM
              ,B.SALE_ORDER_NUM
              ,B.SALE_ORDER_NUM_SEQ
              ,C.BL_NUM
              ,D.EST_NO
              ,E.ORIGIN
              ,D.WH_CD
              ,D.WH_NM
              ,F.ORDER_DATE
              ,A.UNIT
              ,A.RELEASE_QUANTITY
              ,A.RELEASE_WGT
              ,A.REAL_WGT
              ,A.REAL_WGT ORG_REAL_WGT
              ,A.SALE_UPRICE               /*판매단가*/
              ,0 SALE_TRANSPORT_AMT        /*판매운송비*/
              ,B.BUY_CST                   /*매입원가*/
              ,A.SALE_AMT                  /*판매금액*/
              ,A.REAL_SALE_AMT			   /*실판매금액*/
              ,A.PURCHASE_RETURN_QUANTITY  /*환입수량*/
              ,A.PURCHASE_RETURN_WGT       /*환입중량*/
              ,A.PURCHASE_RETURN_DATE      /*환입일자*/
              ,A.PURCHASE_RETURN_DELIVER_NUM        /*환입금액*/

              ,A.APPRV_REQ_DATE
              ,A.APPRV_DATE
              ,A.APPROV_USER_ID
              ,A.RELEASE_CONFIRM_DATE
              ,A.CONFIRMOR_ID
              ,D.DELIVER_NUM
              ,F.RELEASE_DATE RELEASE_REQ_DATE
              ,A.RELEASE_DATE
              ,D.DELIVER_WGT
              ,C.SALSPLCE_CD
        FROM RELEASE_ITEM_MGMT A,
             SALE_ORDER_ITEM_MGMT B,
             PO_ORDER_MST C,
             INVENTORY_MGMT_DELIVER D,
             ENTRY_ITEM_DETAIL E,
             SALE_ORDER F
        WHERE A.SALE_ORDER_NUM=B.SALE_ORDER_NUM
        AND   B.PO_ORDER_NUM = C.PO_ORDER_NUM
        AND   A.SALE_ORDER_NUM_SEQ = B.SALE_ORDER_NUM_SEQ
        AND   B.DELIVER_NUM = D.DELIVER_NUM
        AND   D.ENTRY_NUM = E.ENTRY_NUM
        AND   D.ENTRY_ITEM_SEQ = E.ENTRY_ITEM_SEQ
        AND F.SALE_ORDER_NUM = B.SALE_ORDER_NUM
        AND A.RELEASE_STATUS_CD >= 30
        AND A.RELEASE_DATE =:releaseDate
        <#if salsplceCd?has_content>
            AND A.CUST_CD =:salsplceCd
        </#if>
        <#if deliverWhCd?has_content>
            AND A.WH_CD = :deliverWhCd
        </#if>

        <#if releaseStatusCd?has_content>
            AND A.RELEASE_STATUS_CD = :releaseStatusCd
        </#if>

        <#if attachDept?has_content>
            AND A.ATTACH_DEPT = :attachDept
        </#if>
        ORDER BY A.RELEASE_NUM, A.SALE_ORDER_NUM, A.SALE_ORDER_NUM_SEQ DESC
        ]]>
	</statement>

	<!-- 출고 주문내역에 대하여 출고증을 조회한다. -->
	<statement name="selectReleaseReqCertificatePrintPop2"
		type="select">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.selectReleaseReqCertificatePrintPop2  */
        SELECT
             A.CUST_CD
        FROM RELEASE_ITEM_MGMT A,
             SALE_ORDER_ITEM_MGMT B,
             PO_ORDER_MST C,
             INVENTORY_MGMT_DELIVER D,
             ENTRY_ITEM_DETAIL E,
             SALE_ORDER F
        WHERE A.SALE_ORDER_NUM=B.SALE_ORDER_NUM
        AND   B.PO_ORDER_NUM = C.PO_ORDER_NUM
        AND   A.SALE_ORDER_NUM_SEQ = B.SALE_ORDER_NUM_SEQ
        AND   B.DELIVER_NUM = D.DELIVER_NUM
        AND   D.ENTRY_NUM = E.ENTRY_NUM
        AND   D.ENTRY_ITEM_SEQ = E.ENTRY_ITEM_SEQ
        AND F.SALE_ORDER_NUM = B.SALE_ORDER_NUM
        AND A.RELEASE_STATUS_CD >= 30
        AND A.RELEASE_DATE =:releaseDate
        <#if salsplceCd?has_content>
            AND A.CUST_CD =:salsplceCd
        </#if>
        <#if deliverWhCd?has_content>
            AND A.WH_CD = :deliverWhCd
        </#if>

        <#if releaseStatusCd?has_content>
            AND A.RELEASE_STATUS_CD = :releaseStatusCd
        </#if>

        <#if attachDept?has_content>
            AND A.ATTACH_DEPT = :attachDept
        </#if>
        GROUP BY A.CUST_CD
        ]]>
	</statement>


	<!-- 판매 주문내역에 대하여 출고증 발행한다. -->
	<statement name="printReleaseReqCertificate" type="update">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.printReleaseReqCertificate */
        UPDATE RELEASE_ITEM_MGMT SET
               RELEASE_PUBLISH_YN = 'Y',
               RELEASE_PUBLISH_NUM_OF_TIMES = NVL(RELEASE_PUBLISH_NUM_OF_TIMES,0)+1,
               REMARK  =:remark,
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  RELEASE_NUM  = :releaseNum

        ]]>
	</statement>

	<!-- 출고 주문내역에 대하여 출고확정 조회한다. -->
	<statement name="selectSalsConfirmList" type="select">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.selectSalsConfirmList */
        SELECT
               A.RELEASE_NUM
              ,A.SHIPMENT_TYPE
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'SHIPMENT_TYPE_CD' AND CODE = A.SHIPMENT_TYPE ) AS SHIPMENT_TYPE_NM
              ,A.SALE_AGED
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'SALE_AGED' AND CODE = A.SALE_AGED ) AS SALE_AGED_NM
              ,A.ATTACH_DEPT
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'ATTACH_DEPT' AND CODE = A.ATTACH_DEPT ) AS ATTACH_DEPT_NM
              ,A.RELEASE_STATUS_CD
              ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'RELEASE_STATUS_CD' AND CODE = A.RELEASE_STATUS_CD ) AS RELEASE_STATUS_NM
              ,A.SALE_PRCG_ID
              ,(SELECT T.NM_KOR FROM   HR_PERSONAL T, SCC_CC T2
                WHERE  T2.CC_CD = T.CC_CD AND A.SALE_PRCG_ID =T.SABUN ) SALE_PRCG_NM
              ,A.CUST_CD
              ,(SELECT T.CUSTNM FROM ST_CUST T WHERE T.CUSTCD =A.CUST_CD AND T.USE_YN='Y') AS CUST_NM
              ,A.ITEM_CD
              ,A.ITEM_NM
              ,B.PO_ORDER_NUM
              ,B.SALE_ORDER_NUM
              ,B.SALE_ORDER_NUM_SEQ
              ,C.BL_NUM
              ,D.EST_NO
              ,E.ORIGIN
              ,D.WH_CD
              ,D.WH_NM
              ,F.ORDER_DATE
              ,A.UNIT
              ,A.RELEASE_QUANTITY
              ,A.RELEASE_WGT
              ,A.REAL_WGT
              ,A.REAL_WGT ORG_REAL_WGT
              ,A.SALE_UPRICE               /*판매단가*/
              ,0 SALE_TRANSPORT_AMT        /*판매운송비*/
              ,B.BUY_CST                   /*매입원가*/
              ,A.SALE_AMT                  /*판매금액*/
              ,A.REAL_SALE_AMT			   /*실판매금액*/
              ,A.PURCHASE_RETURN_QUANTITY  /*환입수량*/
              ,A.PURCHASE_RETURN_WGT       /*환입중량*/
              ,A.PURCHASE_RETURN_DATE      /*환입일자*/
              ,A.PURCHASE_RETURN_DELIVER_NUM        /*환입금액*/

              ,A.APPRV_REQ_DATE
              ,A.APPRV_DATE
              ,A.APPROV_USER_ID
              ,A.RELEASE_CONFIRM_DATE
              ,A.CONFIRMOR_ID
              ,D.DELIVER_NUM
              ,F.RELEASE_DATE RELEASE_REQ_DATE
              ,A.RELEASE_DATE
              ,D.DELIVER_WGT
              ,C.SALSPLCE_CD
        FROM RELEASE_ITEM_MGMT A,
             SALE_ORDER_ITEM_MGMT B,
             PO_ORDER_MST C,
             INVENTORY_MGMT_DELIVER D,
             ENTRY_ITEM_DETAIL E,
             SALE_ORDER F
        WHERE A.SALE_ORDER_NUM=B.SALE_ORDER_NUM
        AND   B.PO_ORDER_NUM = C.PO_ORDER_NUM
        AND   A.SALE_ORDER_NUM_SEQ = B.SALE_ORDER_NUM_SEQ
        AND   B.DELIVER_NUM = D.DELIVER_NUM
        AND   D.ENTRY_NUM = E.ENTRY_NUM
        AND   D.ENTRY_ITEM_SEQ = E.ENTRY_ITEM_SEQ
        AND F.SALE_ORDER_NUM = B.SALE_ORDER_NUM
        AND A.RELEASE_DATE =:releaseDate
        <#if salsplceCd?has_content>
            AND A.CUST_CD =:salsplceCd
        </#if>
        <#if deliverWhCd?has_content>
            AND A.WH_CD = :deliverWhCd
        </#if>

        <#if releaseStatusCd?has_content>
            AND A.RELEASE_STATUS_CD = :releaseStatusCd
        </#if>

        <#if attachDept?has_content>
            AND A.ATTACH_DEPT = :attachDept
        </#if>
        ORDER BY A.RELEASE_NUM, A.SALE_ORDER_NUM, A.SALE_ORDER_NUM_SEQ DESC
        ]]>
	</statement>


	<!-- 출고 주문내역에 대하여 출고확정 조회한다. -->
	<statement name="selectSalsConfirmSumList_BACK" type="select">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.selectSalsConfirmSumList */
     SELECT
            A.RELEASE_DATE
           ,A.CUST_CD
           ,A.SET1 CC_CD
           ,DECODE(A.TAX_CODE, 100, 1, 2) TAX_CODE   --1:과세
           ,A.SALE_UPRICE
           ,A.SALE_AMT
           ,A.RELEASE_QUANTITY
           ,B.MU_CD
           ,B.UPJANG
           ,A.RECEIPT_NUM2  AS RECEIPT_NUM
        FROM
        (
           SELECT
                          A.RELEASE_DATE
                         ,A.CUST_CD
                         ,B.SET1
                         ,C.TAX_CODE
                         ,MAX(A.SALE_UPRICE)  SALE_UPRICE
                         ,SUM(( CASE WHEN FLAG='1' THEN A.REAL_SALE_AMT ELSE A.PURCHASE_RETURN_AMT2 END )) SALE_AMT
                         ,SUM(( CASE WHEN FLAG='1' THEN A.RELEASE_QUANTITY ELSE A.PURCHASE_RETURN_QUANTITY2 END )) RELEASE_QUANTITY
                         ,MAX(( CASE WHEN FLAG='1' THEN A.RECEIPT_NUM ELSE A.RECEIPT_NUM2 END )) RECEIPT_NUM
             FROM (SELECT
                       '1' FLAG
                      ,A.*
                      ,NULL SEQ
                      ,NULL AS PURCHASE_RETURN_QUANTITY2
                      ,NULL AS PURCHASE_RETURN_WGT2
                      ,NULL AS PURCHASE_RETURN_DATE2
                      ,NULL AS PURCHASE_RETURN_AMT2
                      ,NULL AS SALS_CONFIRM_DATE2
                      ,NULL AS CONFIRM_YN2
                      ,NULL AS RECEIPT_NUM2
                   FROM RELEASE_ITEM_MGMT A
                   WHERE A.RELEASE_NUM IN (:releaseNums)
                  UNION ALL
                   SELECT
                       '2' FLAG
                      ,A.*
                      ,B.SEQ
                      ,-B.PURCHASE_RETURN_QUANTITY AS PURCHASE_RETURN_QUANTITY2
                      ,-B.PURCHASE_RETURN_WGT AS PURCHASE_RETURN_WGT2
                      ,B.PURCHASE_RETURN_DATE AS PURCHASE_RETURN_DATE2
                      ,-B.PURCHASE_RETURN_AMT AS PURCHASE_RETURN_AMT2
                      ,B.SALS_CONFIRM_DATE
                      ,B.CONFIRM_YN
                      ,B.RECEIPT_NUM
                   FROM RELEASE_ITEM_MGMT A, PURCHASE_RETURN_MGMT B
                   WHERE A.RELEASE_NUM = B.RELEASE_NUM
                   AND A.RELEASE_NUM IN (:releaseNums)
                   AND B.SEQ IN (:seqs)
                   ) A,
                  ( SELECT *
                    FROM   SCC_COMMON_CODE A
                    WHERE  A.GROUP_CODE = 'ATTACH_DEPT'
                    AND    A.USE_YN = 'Y'
                  ) B,
                  HLDC_PO_ITEM_MST C
                  WHERE 1=1
                  AND A.ATTACH_DEPT = B.CODE
                  AND A.ITEM_CD = C.ITEM_CODE(+)
                  GROUP BY A.RELEASE_DATE, A.CUST_CD, B.SET1, C.TAX_CODE
        ) A,
        (
        SELECT Y.MU_CD,
               Y.CC_CD,
               X.UPJANG,
               X.UPJANGNM,
               X.CUSTCD
          FROM ST_UPJANG X,
               (SELECT A.MU_CD,
                       A.CC_CD
                  FROM SCC_CC A
                     , HLDC_SC_DEPT_V B
                 WHERE B.CC_CD = A.CC_CD
                   AND A.START_DATE <= TO_CHAR(SYSDATE, 'YYYYMMDD')
                   AND A.END_DATE > TO_CHAR(SYSDATE, 'YYYYMMDD')) Y
         WHERE X.CC_CD = Y.CC_CD
         AND   NVL(X.ATTR01, 'Y') <> 'N'
        ) B
        WHERE A.CUST_CD = B.CUSTCD

        ]]>
	</statement>

	<!-- 출고 주문내역에 대하여 출고확정 조회한다. -->
	<statement name="selectSalsConfirmSumList" type="select"><![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.selectSalsConfirmSumList */
    SELECT
        A.RELEASE_DATE
       ,A.RELEASE_NUM
       ,A.CUST_CD
       ,A.SET1 CC_CD
       ,DECODE(A.TAX_CODE, 100, 1, 2) TAX_CODE   --1:과세
       ,A.SALE_UPRICE
       ,A.SALE_AMT AS SALE_AMT	  --마이너스 매출
       ,A.RELEASE_QUANTITY
       ,B.MU_CD
       ,B.UPJANG
       ,A.RECEIPT_NUM
    FROM
    (
        SELECT
                    DECODE(A.SEQ,NULL,A.RELEASE_DATE,A.PURCHASE_RETURN_DATE) AS RELEASE_DATE
                   ,LISTAGG(RELEASE_NUM, '-') WITHIN GROUP (ORDER BY RELEASE_NUM) RELEASE_NUM
                   ,A.CUST_CD
                   ,B.SET1
                   , C.TAX_CODE
                   ,SUM(A.SALE_UPRICE ) SALE_UPRICE
                   ,SUM(DECODE(A.SEQ,NULL,A.REAL_SALE_AMT,-A.PURCHASE_RETURN_AMT2) ) SALE_AMT
                   ,SUM(A.RELEASE_QUANTITY) RELEASE_QUANTITY
                   ,MAX(DECODE(A.SEQ,NULL,A.RECEIPT_NUM,A.RECEIPT_NUM2)   ) AS RECEIPT_NUM
       FROM (
                   ${query}
             ) A,
            ( SELECT *
              FROM   SCC_COMMON_CODE A
              WHERE  A.GROUP_CODE = 'ATTACH_DEPT'
              AND    A.USE_YN = 'Y'
            ) B,
            HLDC_PO_ITEM_MST C
            WHERE 1=1
            AND A.ATTACH_DEPT = B.CODE
            AND A.ITEM_CD = C.ITEM_CODE(+)
            GROUP BY DECODE(A.SEQ,NULL,A.RELEASE_DATE,A.PURCHASE_RETURN_DATE), A.CUST_CD, B.SET1, C.TAX_CODE
        ) A,
        (
        SELECT Y.MU_CD,
               Y.CC_CD,
               X.UPJANG,
               X.UPJANGNM,
               X.CUSTCD
          FROM ST_UPJANG X,
               (SELECT A.MU_CD,
                       A.CC_CD
                  FROM SCC_CC A
                     , HLDC_SC_DEPT_V B
                 WHERE B.CC_CD = A.CC_CD
                   AND A.START_DATE <= TO_CHAR(SYSDATE, 'YYYYMMDD')
                   AND A.END_DATE > TO_CHAR(SYSDATE, 'YYYYMMDD')) Y
         WHERE X.CC_CD = Y.CC_CD
         AND   NVL(X.ATTR01, 'Y') <> 'N'
         AND   X.CC_CD IN (
                  SELECT A.SET1
                  FROM   SCC_COMMON_CODE A
                  WHERE  A.GROUP_CODE = 'ATTACH_DEPT'
                  AND    A.USE_YN = 'Y'
                )
        ) B
        WHERE A.CUST_CD = B.CUSTCD
          
        ]]></statement>

	<!-- 출고 주문내역에 대하여 출고확정 조회한다. -->
	<statement name="selectSalsConfirmSumList_orgBack" type="select">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.selectSalsConfirmSumList */
        SELECT
            A.RELEASE_DATE
           ,A.CUST_CD
           ,A.SET1 CC_CD
           ,DECODE(A.TAX_CODE, 100, 1, 2) TAX_CODE   --1:과세
           ,A.SALE_UPRICE
           ,A.SALE_AMT
           ,A.RELEASE_QUANTITY
           ,B.MU_CD
           ,B.UPJANG
           ,A.RECEIPT_NUM
        FROM
        (
            SELECT
                    A.RELEASE_DATE
                   ,A.CUST_CD
                   ,B.SET1
                   , C.TAX_CODE
                   ,MAX(A.SALE_UPRICE ) SALE_UPRICE
                   ,SUM(NVL(A.REAL_SALE_AMT,0)) AS SALE_AMT
                   ,SUM(A.RELEASE_QUANTITY) RELEASE_QUANTITY
                   ,MAX(RECEIPT_NUM) AS RECEIPT_NUM
            FROM RELEASE_ITEM_MGMT A,
                ( SELECT *
                  FROM   SCC_COMMON_CODE A
                  WHERE  A.GROUP_CODE = 'ATTACH_DEPT'
                  AND    A.USE_YN = 'Y'
                ) B,
                HLDC_PO_ITEM_MST C
            WHERE 1=1
            AND A.ATTACH_DEPT = B.CODE
            AND A.ITEM_CD = C.ITEM_CODE(+)
            AND A.RELEASE_NUM IN (:releaseNums)
            GROUP BY A.RELEASE_DATE, A.CUST_CD, B.SET1, C.TAX_CODE
        ) A,
        (
        SELECT Y.MU_CD,
               Y.CC_CD,
               X.UPJANG,
               X.UPJANGNM,
               X.CUSTCD
          FROM ST_UPJANG X,
               (SELECT A.MU_CD,
                       A.CC_CD
                  FROM SCC_CC A
                     , HLDC_SC_DEPT_V B
                 WHERE B.CC_CD = A.CC_CD
                   AND A.START_DATE <= TO_CHAR(SYSDATE, 'YYYYMMDD')
                   AND A.END_DATE > TO_CHAR(SYSDATE, 'YYYYMMDD')) Y
         WHERE X.CC_CD = Y.CC_CD
         AND   NVL(X.ATTR01, 'Y') <> 'N'
        ) B
        WHERE A.CUST_CD = B.CUSTCD
        ]]>
	</statement>

	<!-- 출고 주문내역에 대하여 출고확정 조회한다. -->
	<statement name="selectSalsConfirmSumList2" type="select">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.selectSalsConfirmSumList2 */
    SELECT
        A.RELEASE_DATE
       ,A.CUST_CD
       ,A.SET1 CC_CD
       ,DECODE(A.TAX_CODE, 100, 1, 2) TAX_CODE   --1:과세
       ,A.SALE_UPRICE
       ,A.SALE_AMT AS SALE_AMT	  --마이너스 매출
       ,A.RELEASE_QUANTITY
       ,B.MU_CD
       ,B.UPJANG
       ,A.RECEIPT_NUM
    FROM
    (
        SELECT
                    A.RELEASE_DATE
                   ,A.CUST_CD
                   ,B.SET1
                   , C.TAX_CODE
                   ,SUM(A.SALE_UPRICE ) SALE_UPRICE
                   ,SUM(A.PURCHASE_RETURN_AMT2 ) SALE_AMT
                   ,SUM(A.RELEASE_QUANTITY) RELEASE_QUANTITY
                   ,MAX(RECEIPT_NUM2) AS RECEIPT_NUM
       FROM (SELECT
                 A.*
                ,NULL SEQ
                ,NULL AS PURCHASE_RETURN_QUANTITY2
                ,NULL AS PURCHASE_RETURN_WGT2
                ,NULL AS PURCHASE_RETURN_DATE2
                ,NULL AS PURCHASE_RETURN_AMT2
                ,NULL AS SALS_CONFIRM_DATE2
                ,NULL AS CONFIRM_YN2
                ,NULL AS RECEIPT_NUM2
             FROM RELEASE_ITEM_MGMT A
            UNION ALL
             SELECT
                 A.*
                ,B.SEQ
                ,B.PURCHASE_RETURN_QUANTITY AS PURCHASE_RETURN_QUANTITY2
                ,B.PURCHASE_RETURN_WGT AS PURCHASE_RETURN_WGT2
                ,B.PURCHASE_RETURN_DATE AS PURCHASE_RETURN_DATE2
                ,B.PURCHASE_RETURN_AMT AS PURCHASE_RETURN_AMT2
                ,B.SALS_CONFIRM_DATE
                ,B.CONFIRM_YN
                ,B.RECEIPT_NUM
             FROM RELEASE_ITEM_MGMT A, PURCHASE_RETURN_MGMT B
             WHERE A.RELEASE_NUM = B.RELEASE_NUM
             AND B.SEQ IN (:seq)
             ) A,
            ( SELECT *
              FROM   SCC_COMMON_CODE A
              WHERE  A.GROUP_CODE = 'ATTACH_DEPT'
              AND    A.USE_YN = 'Y'
            ) B,
            HLDC_PO_ITEM_MST C
            WHERE 1=1
            AND A.ATTACH_DEPT = B.CODE
            AND A.ITEM_CD = C.ITEM_CODE(+)
            AND A.RELEASE_NUM IN (:releaseNums)
            GROUP BY A.PURCHASE_RETURN_DATE, A.CUST_CD, B.SET1, C.TAX_CODE
        ) A,
        (
        SELECT Y.MU_CD,
               Y.CC_CD,
               X.UPJANG,
               X.UPJANGNM
          FROM ST_UPJANG X,
               (SELECT A.MU_CD,
                       A.CC_CD
                  FROM SCC_CC A
                     , HLDC_SC_DEPT_V B
                 WHERE B.CC_CD = A.CC_CD
                   AND A.CC_CD IN(
                    SELECT A.SET1
                    FROM   SCC_COMMON_CODE A
                    WHERE  A.GROUP_CODE = 'ATTACH_DEPT'
                    AND    A.USE_YN = 'Y'
                  )
                   AND A.START_DATE <= TO_CHAR(SYSDATE, 'YYYYMMDD')
                   AND A.END_DATE > TO_CHAR(SYSDATE, 'YYYYMMDD')) Y
         WHERE X.CC_CD = Y.CC_CD
         AND   NVL(X.ATTR01, 'Y') <> 'N'
         AND   X.SHOP_TYP_CD = '01'
        ) B
        WHERE A.SET1 = B.CC_CD
        ]]>
	</statement>

	<!-- 출고등록전 다시한번 출고가능 수량을 체크한다. -->
	<statement name="getSaleQuantityCheck" type="select">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.getSaleQuantityCheck */
SELECT NVL(B.ORDER_QUANTITY, 0)
       -
       (NVL(B.RELEASE_APPRV_REQ_QUANTITY, 0)
       + NVL(B.RELEASE_QUANTITY, 0)
       + NVL(B.CANCEL_QUANTITY, 0)) RELEASE_EXPECT_QUANTITY /*출고예정수량*/,

       NVL(B.ORDER_WGT, 0)
       -
       (NVL(B.RELEASE_APPRV_REQ_WGT, 0)
       + NVL(B.RELEASE_WGT, 0)
       + NVL(B.CANCEL_WGT, 0)) RELEASE_EXPECT_WGT
  FROM SALE_ORDER_ITEM_MGMT   B
 WHERE B.SALE_ORDER_NUM = :saleOrderNum
   AND B.SALE_ORDER_NUM_SEQ = :saleOrderNumSeq
        ]]>
	</statement>

	<!-- 원가대체 회계번호 수정 처리한다. -->
	<statement name="updateCstSlipFiscalNum" type="update">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.updateCstSlipFiscalNum */
        UPDATE RELEASE_ITEM_MGMT SET
               CST_SLIP_FISCAL_NUM = :cstSlipFiscalNum,
               CST_SLIP_CDATE = TO_CHAR(SYSDATE, 'YYYYMMDD'),
               <#if cstExceptYn?exists> CST_EXCEPT_YN = :cstExceptYn, </#if>
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  RELEASE_NUM  = :releaseNum

        ]]>
	</statement>

	<!-- 원가대체(중가) 회계번호 수정 처리한다. -->
	<statement name="updateIncCstSlipFiscalNum" type="update">

		<![CDATA[
        /*+com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.updateCstSlipFiscalNum */
        UPDATE RELEASE_ITEM_MGMT SET
               CST_INC_SLIP_FISCAL_NUM = :cstIncSlipFiscalNum,
               CST_INC_SLIP_CDATE = TO_CHAR(SYSDATE, 'YYYYMMDD'),
               <#if cstIncYn?exists> CST_INC_YN = :cstIncYn, </#if>
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  RELEASE_NUM  = :releaseNum

        ]]>
	</statement>

	<!-- 부서이관 회계번호 수정 처리한다. -->
	<statement name="updateDeptMngmvSlipFiscalNum" type="update">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.updateDeptMngmvSlipFiscalNum */
        UPDATE RELEASE_ITEM_MGMT SET
               DEPT_MNGMV_SLIP_FISCAL_NUM = :deptMngmvSlipNum,
               DEPT_MNGMV_SLIP_CDATE = TO_CHAR(SYSDATE, 'YYYYMMDD'),
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  RELEASE_NUM  = :releaseNum

        ]]>
	</statement>

	<!-- 원가대체 회계번호 수정 처리한다. -->
	<statement name="saveBuyCostExceptDraft" type="update">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.saveBuyCostExceptDraft */
        UPDATE RELEASE_ITEM_MGMT SET
               <#if signInstanceId?exists> SIGN_INSTANCE_ID = :signInstanceId, </#if>
               <#if signInstanceId4?exists> INC_SIGN_INSTANCE_ID = :signInstanceId4, </#if>		--매입원가증가 결재아이디
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  RELEASE_NUM  = :releaseNum

        ]]>
	</statement>

	<!-- 부서이관 회계번호 수정 처리한다. -->
	<statement name="saveBuyCostExceptDraft2" type="update">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.saveBuyCostExceptDraft */
        UPDATE RELEASE_ITEM_MGMT SET
               <#if signInstanceId2?exists> SIGN_INSTANCE_ID2 = :signInstanceId2, </#if>
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  RELEASE_NUM  = :releaseNum

        ]]>
	</statement>

	<!-- 여신체크. -->
	<statement name="getLendingChk2" type="select"><![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.getLendingChk2 */
SELECT
     NVL(SUM(CASE WHEN A.RELEASE_STATUS_CD = '10' THEN CASE WHEN B.TAX_CODE = '100' THEN REAL_SALE_AMT+ (ROUND(REAL_SALE_AMT*0.1)) ELSE REAL_SALE_AMT END END ),0) AS RELEASE_AMT    --출고요청금액
    ,NVL(SUM(CASE WHEN A.RELEASE_STATUS_CD = '20' THEN CASE WHEN B.TAX_CODE = '100' THEN REAL_SALE_AMT+ (ROUND(REAL_SALE_AMT*0.1)) ELSE REAL_SALE_AMT END END ),0) AS REQ_AMT    --승인요청금액
    ,NVL(SUM(CASE WHEN A.RELEASE_STATUS_CD = '30' THEN CASE WHEN B.TAX_CODE = '100' THEN REAL_SALE_AMT+ (ROUND(REAL_SALE_AMT*0.1)) ELSE REAL_SALE_AMT END END ),0) AS APPROV_AMT   --팀장승인금액
    ,NVL(SUM(CASE WHEN A.RELEASE_STATUS_CD = '40' THEN CASE WHEN B.TAX_CODE = '100' THEN REAL_SALE_AMT+ (ROUND(REAL_SALE_AMT*0.1)) ELSE REAL_SALE_AMT END END ),0) AS CONFIRM_AMT   --확정금액
FROM RELEASE_ITEM_MGMT A
    ,HLDC_PO_ITEM_MST B
WHERE 1=1
AND A.ITEM_CD = B.ITEM_CODE
--2020.05.06 김명섭 조회조건변경: 컴플라이언스팀 이성희과장 요청 
AND A.CUST_CD =:custCd
--AND A.RELEASE_NUM IN (:releaseNums)
        ]]></statement>

	<statement name="releaseFaxTransfer" type="select"><![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.releaseFaxTransfer */
WITH T1 AS
(
     SELECT A.WH_CD
           ,A.VD_NM_LOC AS VD_NM_LOC_NM
           --,A.VD_NM_LOC||'( FAX : '||DECODE(A.FAX_NO,'--','',A.FAX_NO)||' )' VD_NM_LOC
           ,A.VD_NM_LOC
           ,A.RELEASE_NUM AS RELEASE_NUM
           ,A.FAX_NO
           ,A.SALE_PRCG_ID
           ,CMN_COMPANY_INFO_FUN('B','')||'('||A.NM_KOR||A.OTHER_NAME||'/'||DECODE(OFFICE_TEL_NUM,'--','',OFFICE_TEL_NUM)||')' SEND_INFO
           ,RELEASE_DATE
           ,CUST_CD
           ,CUST_NM
           ,COM_LOGO
       FROM (
             SELECT A.WH_CD
                   ,SCC_TELNO_SAUPNO_EXPR('TELNO', SCC_CRYPTO.DEC_FUN(B.FAX_NO)) AS FAX_NO
                   ,(SELECT WH_NM FROM INVENTORY_MGMT_DELIVER WHERE WH_CD = A.WH_CD AND ROWNUM = 1) AS VD_NM_LOC --B.VD_NM_LOC
                   ,A.RELEASE_NUM
                   ,A.SALE_PRCG_ID
                   ,C.OTHER_NAME
                   ,CMN_COMPANY_INFO_FUN('B','')||'('||C.NM_KOR||C.OTHER_NAME||'/'||scc_crypto.DEC_FUN(C.OFFICE_TEL_NUM)||')' SEND_INFO
                   ,C.NM_KOR
                   ,SCC_TELNO_SAUPNO_EXPR('TELNO', SCC_CRYPTO.DEC_FUN(C.OFFICE_TEL_NUM)) AS OFFICE_TEL_NUM
                   ,TO_CHAR(TO_DATE(A.RELEASE_DATE), 'YYYY-MM-YY') RELEASE_DATE
                   ,A.CUST_CD
                   ,(SELECT T.CUSTNM FROM ST_CUST T WHERE T.CUSTCD =A.CUST_CD AND T.USE_YN='Y') AS CUST_NM
                   ,'' AS COM_LOGO
                   ,ROW_NUMBER() OVER (PARTITION BY A.WH_CD ORDER BY A.WH_CD, A.RELEASE_NUM) AS RN
               FROM RELEASE_ITEM_MGMT A
                   ,EPROCUSR.ESMVDFW B
                   ,(SELECT T.* FROM   HR_PERSONAL T, SCC_CC T2 WHERE  T2.CC_CD = T.CC_CD ) C
              WHERE A.WH_CD = B.VD_CD(+)
                AND A.SALE_PRCG_ID =C.SABUN(+)
                --AND B.CUS_VD_CLS(+)  IN ('10', '50')
                 AND B.VD_STS = 'C'

                AND A.WH_CD = :whCds
            ) A
      WHERE 1 = 1
        AND A.RN = 1
        AND A.WH_CD IN ( :whCds )
)
SELECT ROWNUM AS RN
      ,T.WH_CD
      ,T.VD_NM_LOC_NM
      ,T.VD_NM_LOC
      ,T.RELEASE_NUM
      ,T.FAX_NO
      ,T.SALE_PRCG_ID
      ,T.SEND_INFO
      ,T.RELEASE_DATE
      ,T.CUST_CD
      ,NVL(T.CUST_NM,' ') AS CUST_NM
      ,CMN_COMPANY_INFO_FUN('G','') AS COM_LOGO
      ,ROW_NUMBER() OVER (PARTITION BY T.WH_CD ORDER BY T.WH_CD, T.RELEASE_NUM) AS NUM
      ,A.ITEM_CD
      ,A.ITEM_NM
      ,A.REAL_WGT
      ,A.UNIT
       --입고-((주문+출고대기+출고완료)+(반품+창고이동))
      ,NVL(E.DELIVER_QUANTITY,0)
       -NVL(E.ORDER_REMAIN_QUANTITY,0)
       -NVL(E.RELEASE_WAIT_QUANTITY,0)
       +NVL(A.RELEASE_QUANTITY,0)   --지금 출고대상은 제외
       -NVL(E.RELEASE_END_QUANTITY,0)
       -NVL(E.RMA_QUANTITY,0)
       -NVL(E.WH_MOVE_QUANTITY,0) AS BEFORE_INVENTORY
      --전재고 - 출고(주문) = 현재고
      ,NVL(E.DELIVER_QUANTITY,0)
       -NVL(E.ORDER_REMAIN_QUANTITY,0)
       -NVL(E.RELEASE_WAIT_QUANTITY,0)
       +NVL(A.RELEASE_QUANTITY,0)   --지금 출고대상은 제외
       -NVL(E.RELEASE_END_QUANTITY,0)
       -NVL(E.RMA_QUANTITY,0)
       -NVL(E.WH_MOVE_QUANTITY,0)
       -NVL(A.RELEASE_QUANTITY,0) AS CURR_INVENTORY
      ,A.RELEASE_QUANTITY
      ,TO_CHAR(TO_DATE(E.FIRST_DELIVER_DATE), 'YYYY-MM-DD') FIRST_DELIVER_DATE
      ,TO_CHAR(TO_DATE(E.CURRENT_WH_DELIVER_DATE), 'YYYY-MM-DD') CURRENT_WH_DELIVER_DATE
      ,NVL(E.EST_NO,' ') AS EST_NO
      ,CASE WHEN E.PO_TYPE= '10' THEN    --수입(KRW)
            F.BL_NUM
         ELSE
           (
            SELECT T.ITEM_BL_NUM FROM PO_ORDER_ITEM_DETAIL T
            WHERE C.PO_ORDER_NUM = T.PO_ORDER_NUM
            AND C.ITEM_CD = T.ITEM_CD
            AND C.ITEM_SEQ = T.ITEM_SEQ
          )
       END AS BL_NUM
      ,NVL(A.REMARK,' ') AS REMARK
  FROM RELEASE_ITEM_MGMT A,
         SALE_ORDER B,
       SALE_ORDER_ITEM_MGMT C,
       PO_ORDER_MST D,
       INVENTORY_MGMT_DELIVER E,
       PO_ORDER_MST F,
       T1 T
 WHERE 1 = 1
   AND A.SALE_ORDER_NUM  = B.SALE_ORDER_NUM
   AND B.SALE_ORDER_NUM = C.SALE_ORDER_NUM
   AND A.SALE_ORDER_NUM = C.SALE_ORDER_NUM
   AND A.SALE_ORDER_NUM_SEQ = C.SALE_ORDER_NUM_SEQ
   AND C.PO_ORDER_NUM =D.PO_ORDER_NUM
   AND C.DELIVER_NUM = E.DELIVER_NUM
   AND E.PO_ORDER_NUM = F.PO_ORDER_NUM
   AND A.WH_CD = T.WH_CD

   <#if srcPrintChk == "1">		/* 조회출력 */
       <#if term?has_content>
           <#if term == "A">	/* 주문일자 */
               AND B.ORDER_DATE BETWEEN :startTerm AND :endTerm
           <#elseif term == "B">	/* 승인요청일자 */
               AND A.APPRV_REQ_DATE BETWEEN :startTerm AND :endTerm
           <#elseif term == "C">	/* 승인일자 */
               AND A.APPRV_DATE BETWEEN :startTerm AND :endTerm
           <#elseif term == "D">	 /* 출고확정일자 */
               AND A.RELEASE_CONFIRM_DATE BETWEEN :startTerm AND :endTerm
           <#elseif term == "E">    /* 출고일자 */
               AND A.RELEASE_DATE BETWEEN :startTerm AND :endTerm
           </#if>
       </#if>
       <#if whNm?has_content>
           AND    E.WH_NM LIKE  '%'||:whNm||'%'
       </#if>
       <#if shipmentTypeCd?has_content>
           AND A.SHIPMENT_TYPE = :shipmentTypeCd
       </#if>

       <#if releaseStatusCd?has_content>
           AND A.RELEASE_STATUS_CD = :releaseStatusCd
       </#if>

       <#if attachDept?has_content>
           AND A.ATTACH_DEPT = :attachDept
       </#if>

       <#if saleAged?has_content>
           AND B.SALE_AGED = :saleAged
       </#if>
    <#else>
        AND A.RELEASE_NUM IN ( :releaseNums )
    </#if>



 ORDER BY A.WH_CD
        ]]></statement>

	<!-- 여신 목록을 조회한다. -->
	<statement name="selectLendList" type="select">

		<![CDATA[
            /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.selectLendList */
            SELECT A.CUSTCD SALSPLCE_CD,
                   C.UPJANGNM AS  SALSPLCE_NM,
                   SCC_TELNO_SAUPNO_EXPR('SAUPNO', A.SAUPNO) AS SAUPNO,
                   A.ADDR,
                   SCC_TELNO_SAUPNO_EXPR('TELNO', SCC_CRYPTO.DEC_FUN(A.TEL_NO_ENC)) AS TEL_NO_ENC,
                   B.CC_CD,
                   C.UPJANG,
                   C.MAIN_UPJANG,
                   C.HEAD_CREDIT_YN,
                   NVL(D.RELEASE_AMT,0) AS RELEASE_AMT,
                   NVL(D.REQ_AMT,0) AS REQ_AMT,
                   NVL(D.APPROV_AMT,0) AS APPROV_AMT,
                   NVL(D.CONFIRM_AMT,0) AS CONFIRM_AMT,
                   NVL(D.RELEASE_AMT,0) + NVL(D.REQ_AMT,0) + NVL(D.APPROV_AMT,0) + NVL(D.CONFIRM_AMT,0) TOT_RELEASE_AMT,
                   0 AS CREDIT_AMOUNT,	--여신금액
                   0 AS RMN_AMT,			--외상매출잔액
                   0 AS PRE_AMT,			--선수잔액
                   0 AS TOT_CREDIT_AMOUNT,
                   TO_CHAR(SYSDATE, 'YYYYMMDD') AS RELEASE_DATE,
                   0 AS PRE_AMT1,
                   0 AS PRE_AMT2,
                   0 AS CREDIT_OVER_AMOUNT
            FROM   ST_CUST A,
                   ST_UPJANG B,
                   FMS_UPJANG_V C,
                   (
                      SELECT
                           A.CUST_CD
                          ,NVL(SUM(CASE WHEN A.RELEASE_STATUS_CD = '10' THEN CASE WHEN X.TAX_CODE = '100' THEN REAL_SALE_AMT+ (ROUND(REAL_SALE_AMT*0.1)) ELSE REAL_SALE_AMT END END ),0) AS RELEASE_AMT    --출고요청금액
                          ,NVL(SUM(CASE WHEN A.RELEASE_STATUS_CD = '20' THEN CASE WHEN X.TAX_CODE = '100' THEN REAL_SALE_AMT+ (ROUND(REAL_SALE_AMT*0.1)) ELSE REAL_SALE_AMT END END ),0) AS REQ_AMT    --승인요청금액
                          ,NVL(SUM(CASE WHEN A.RELEASE_STATUS_CD = '30' THEN CASE WHEN X.TAX_CODE = '100' THEN REAL_SALE_AMT+ (ROUND(REAL_SALE_AMT*0.1)) ELSE REAL_SALE_AMT END END ),0) AS APPROV_AMT   --팀장승인금액
                          ,NVL(SUM(CASE WHEN A.RELEASE_STATUS_CD = '40' THEN CASE WHEN X.TAX_CODE = '100' THEN REAL_SALE_AMT+ (ROUND(REAL_SALE_AMT*0.1)) ELSE REAL_SALE_AMT END END ),0) AS CONFIRM_AMT   --확정금액
                      FROM RELEASE_ITEM_MGMT A
                          ,HLDC_PO_ITEM_MST X
                      WHERE A.ITEM_CD = X.ITEM_CODE
                      AND A.RELEASE_DATE <= :focDate
                      GROUP BY A.CUST_CD
                   ) D
            WHERE  B.CUSTCD = A.CUSTCD
            AND    C.UPJANG = B.UPJANG
            AND    NVL(B.ATTR01, 'Y') <> 'N'
            AND B.CC_CD IN (
              SELECT A.SET1
              FROM   SCC_COMMON_CODE A
              WHERE  A.GROUP_CODE = 'ATTACH_DEPT'
              AND    A.USE_YN = 'Y'
            )
            <#if searchContents?has_content>
                AND REPLACE(A.CUSTNM,' ','') LIKE '%'||REPLACE(:searchContents,' ','')||'%'
            </#if>
            AND A.CUSTCD = D.CUST_CD(+)

            AND    B.SHOP_TYP_CD ='02'
            ORDER BY A.CUSTCD ASC
        ]]>
	</statement>

	<statement name="dealReqDocPublishCustFaxTransfer" type="select"><![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.dealReqDocPublishCustFaxTransfer */
SELECT CMN_COMPANY_INFO_FUN('A','') AS COMINFO_A,
       CMN_COMPANY_INFO_FUN('B','') AS COMINFO_B,
       CMN_COMPANY_INFO_FUN('C','') AS COMINFO_C,
       CMN_COMPANY_INFO_FUN('D','') AS COMINFO_D,
       CMN_COMPANY_INFO_FUN('F','') AS COM_LOGO,
       A.CUSTCD SALSPLCE_CD,
       A.CUSTNM SALSPLCE_NM,
       SCC_TELNO_SAUPNO_EXPR('SAUPNO', A.SAUPNO) AS SAUPNO,
       A.DRNAME1 AS C_PER_NAME,
       SCC_GET_ADDR_FUN('BASE'  , A.ADDR_KEY, '', '') AS ADDR,
       SCC_CRYPTO.DEC_FUN(A.FAX_NO_ENC) AS FAX_NO,
            ' 입금계좌 : ' ||
                      CASE WHEN X.BANK_ACCT_NO IS NULL THEN '' ELSE '우리은행' END
                        ||' ' ||
                      CASE WHEN X.BANK_ACCT_NO IS NOT NULL THEN SUBSTR(X.BANK_ACCT_NO, 1 , 3) || '-' ||
                          SUBSTR(X.BANK_ACCT_NO, 4 , 6) || '-' ||
                          SUBSTR(X.BANK_ACCT_NO, 10, 2) || '-' ||
                          SUBSTR(X.BANK_ACCT_NO, 12)
                       ELSE NULL
                      END
                        ||' ' ||
                      CASE WHEN X.BANK_ACCT_NO IS NULL THEN '' ELSE CMN_COMPANY_INFO_FUN('E','') END AS BANK_ACCT_NO
  FROM ST_CUST A, ST_UPJANG B, FMS_UPJANG C,
  (
   SELECT
         UPJANG_CD, MAX(SCC_CRYPTO.DEC_FUN(A.BANK_ACCT_NO)) AS BANK_ACCT_NO
   FROM SLA_SAP_BANK_ACCT_NO A
   WHERE A.BANK_ACCT_TYPE ='V'
   GROUP BY UPJANG_CD
     ) X
 WHERE B.CUSTCD = A.CUSTCD
   AND C.UPJANG = B.UPJANG
   AND    NVL(B.ATTR01, 'Y') <> 'N'
   AND    B.UPJANG = X.UPJANG_CD(+)
   AND B.CC_CD IN (SELECT A.SET1
                     FROM SCC_COMMON_CODE A
                    WHERE A.GROUP_CODE = 'ATTACH_DEPT'
                      AND A.USE_YN = 'Y')
   AND B.SHOP_TYP_CD = '02'
   AND A.CUSTCD = :salsplceCd

        ]]></statement>

	<statement name="dealReqDocPublishListFaxTransferChk"
		type="select">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.dealReqDocPublishListFaxTransfer */
        SELECT
              TO_CHAR(TO_DATE(A.RELEASE_DATE),'YYYY-MM-DD') RELEASE_DATE
             ,A.RELEASE_NUM
             ,0 AS SEQ
             ,F.ITEM_NAME || F.ITEM_SIZE AS ITEM_NM
             ,F.ORIGIN_NAT
             ,F.ITEM_SIZE
             ,A.UNIT
             ,A.RELEASE_QUANTITY
             ,TO_CHAR(ROUND(A.REAL_WGT, 2), 'FM9999990.00') AS REAL_WGT
             ,A.SALE_UPRICE
             ,CASE WHEN F.TAX_CODE = '100' THEN REAL_SALE_AMT ELSE REAL_SALE_AMT END AS SALE_AMT
             ,CASE WHEN F.TAX_CODE = '100' THEN (ROUND(REAL_SALE_AMT*0.1)) ELSE 0 END AS SE_AMT
             ,CASE WHEN F.TAX_CODE = '100' THEN REAL_SALE_AMT+ (ROUND(REAL_SALE_AMT*0.1)) ELSE REAL_SALE_AMT END AS TOT
             ,CASE WHEN D.PO_TYPE = '10' THEN
                 C.BL_NUM
              ELSE
                 (SELECT T.ITEM_BL_NUM FROM PO_ORDER_ITEM_DETAIL T
                 WHERE B.PO_ORDER_NUM = T.PO_ORDER_NUM
                 AND B.ITEM_CD = T.ITEM_CD
                 AND B.ITEM_SEQ = T.ITEM_SEQ
                 )
             END AS BL_NUM
            ,D.INCOME_DTR_DSCT_NUM
       FROM (SELECT
                 A.*
                ,NULL SEQ
                ,NULL AS PURCHASE_RETURN_QUANTITY2
                ,NULL AS PURCHASE_RETURN_WGT2
                ,NULL AS PURCHASE_RETURN_DATE2
                ,NULL AS PURCHASE_RETURN_AMT2
                ,NULL AS SALS_CONFIRM_DATE2
                ,NULL AS CONFIRM_YN2
                ,NULL AS CST_SLIP_FISCAL_NUM2
                ,A.RECEIPT_NUM AS RECEIPT_NUM2
                ,A.SIGN_INSTANCE_ID SIGN_INSTANCE_ID3
             FROM RELEASE_ITEM_MGMT A
            UNION ALL
             SELECT
                 A.*
                ,B.SEQ
                ,B.PURCHASE_RETURN_QUANTITY AS PURCHASE_RETURN_QUANTITY2
                ,B.PURCHASE_RETURN_WGT AS PURCHASE_RETURN_WGT2
                ,B.PURCHASE_RETURN_DATE AS PURCHASE_RETURN_DATE2
                ,B.PURCHASE_RETURN_AMT AS PURCHASE_RETURN_AMT2
                ,B.SALS_CONFIRM_DATE
                ,B.CONFIRM_YN
                ,B.CST_SLIP_FISCAL_NUM
                ,B.RECEIPT_NUM AS RECEIPT_NUM2
                ,B.SIGN_INSTANCE_ID SIGN_INSTANCE_ID3
             FROM RELEASE_ITEM_MGMT A, PURCHASE_RETURN_MGMT B
             WHERE A.RELEASE_NUM = B.RELEASE_NUM
             ) A,

             SALE_ORDER_ITEM_MGMT B,
             PO_ORDER_MST C,
             INVENTORY_MGMT_DELIVER D,
             ENTRY_ITEM_DETAIL E,
             SALE_ORDER F,
             SAP_IF.SAP_IFC_SLIP_STATUS G,
             FT_SAP_INTERFACE H,
             FT_SAP_INTERFACE I,
             HLDC_PO_ITEM_MST F,
             (SELECT T.DELIVER_NUM, SUM(T.DIV_AMT) AS DIV_AMT, NVL(MAX(T.NONARRIV_ALT_YN),'N') AS NONARRIV_ALT_YN FROM DELIVERITEM_OTHER_AMT_DIV T
                 GROUP BY T.DELIVER_NUM
               ) X
        WHERE A.SALE_ORDER_NUM=B.SALE_ORDER_NUM
        AND   B.PO_ORDER_NUM = C.PO_ORDER_NUM
        AND   A.SALE_ORDER_NUM_SEQ = B.SALE_ORDER_NUM_SEQ
        AND   B.DELIVER_NUM = D.DELIVER_NUM
        AND   D.ENTRY_NUM = E.ENTRY_NUM(+)
        AND   D.ENTRY_ITEM_SEQ = E.ENTRY_ITEM_SEQ(+)
        AND   F.SALE_ORDER_NUM = B.SALE_ORDER_NUM
        AND   DECODE(A.SEQ,NULL,A.CST_SLIP_FISCAL_NUM,A.CST_SLIP_FISCAL_NUM2) =G.SLIP_NUM(+)
        AND   DECODE(A.SEQ,NULL,A.CST_SLIP_FISCAL_NUM,A.CST_SLIP_FISCAL_NUM2) = H.SLIP_NUM(+)

        AND   A.DEPT_MNGMV_SLIP_FISCAL_NUM = I.SLIP_NUM(+)
        AND   A.ITEM_CD = F.ITEM_CODE
        AND   D.DELIVER_NUM = X.DELIVER_NUM(+)
        <#if term?has_content>
            <#if term == "A">	/* 주문일자 */
                AND F.ORDER_DATE BETWEEN :startTerm AND :endTerm
            <#elseif term == "B">	/* 승인요청일자 */
                AND A.APPRV_REQ_DATE BETWEEN :startTerm AND :endTerm
            <#elseif term == "C">	/* 승인일자 */
                AND A.APPRV_DATE BETWEEN :startTerm AND :endTerm
            <#elseif term == "D">	 /* 출고확정일자 */
                AND A.RELEASE_CONFIRM_DATE BETWEEN :startTerm AND :endTerm
            <#elseif term == "E">    /* 출고일자 */
                AND A.RELEASE_DATE BETWEEN :startTerm AND :endTerm
            </#if>
        </#if>

        <#if search?has_content && searchContents?has_content>
            <#if search == "A">	/* PO No */
                 AND B.PO_ORDER_NUM LIKE '%'||:searchContents||'%'
            <#elseif search == "B">	/* 출고번호 */
                AND A.RELEASE_NUM LIKE '%'||:searchContents||'%'
            <#elseif search == "C">	/* 출고처 */
            AND EXISTS
                 (
                  SELECT
                         C.UPJANGNM AS CUSTNM
                  FROM   ST_CUST A,
                         ST_UPJANG B,
                         FMS_UPJANG_V C
                  WHERE  B.CUSTCD = A.CUSTCD
                  AND    C.UPJANG = B.UPJANG
                  AND    NVL(B.ATTR01, 'Y') <> 'N'
                  AND B.CC_CD IN (
                    SELECT A.SET1
                    FROM   SCC_COMMON_CODE A
                    WHERE  A.GROUP_CODE = 'ATTACH_DEPT'
                    AND    A.USE_YN = 'Y'
                  )
                  AND    A.CUSTCD = A.CUST_CD
                  AND    CUSTNM LIKE '%'||:searchContents||'%'
                 )
            <#elseif search == "D"> /* 창고명 */
            AND    D.WH_NM LIKE '%'||:searchContents||'%'
            <#elseif search == "E"> /* B/L NO */
               AND EXISTS (
                  SELECT T.ITEM_BL_NUM FROM PO_ORDER_ITEM_DETAIL T
                  WHERE D.PO_ORDER_NUM = T.PO_ORDER_NUM
                  AND D.ITEM_CD = T.ITEM_CD
                  AND D.ITEM_SEQ = T.ITEM_SEQ
                  AND ( UPPER(T.ITEM_BL_NUM) LIKE '%'||UPPER(:searchContents)||'%' OR  UPPER(C.BL_NUM) LIKE '%'||UPPER(:searchContents)||'%' )
               )
            </#if>
        </#if>

        <#if shipmentTypeCd?has_content>
            AND A.SHIPMENT_TYPE = :shipmentTypeCd
        </#if>

        <#if releaseStatusCd?has_content>
            AND A.RELEASE_STATUS_CD = :releaseStatusCd
        </#if>

        <#if attachDept?has_content>
            AND A.ATTACH_DEPT = :attachDept
        </#if>

        <#if saleAged?has_content>
            AND F.SALE_AGED = :saleAged
        </#if>
        ORDER BY A.RELEASE_NUM DESC, NVL(A.SEQ,0) ASC, A.SALE_ORDER_NUM, A.SALE_ORDER_NUM_SEQ DESC
        ]]>
	</statement>


	<statement name="dealReqDocPublishListFaxTransfer" type="select">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.dealReqDocPublishListFaxTransferChk */
    SELECT
    *
    FROM
    (
    <#if releaseNums?has_content>
        SELECT TO_CHAR(TO_DATE(A.RELEASE_DATE), 'YYYY-MM-DD') RELEASE_DATE,
           A.RELEASE_NUM,
           0 AS SEQ,
           A.ITEM_NM,
           B.ORIGIN_NAT,
           B.ITEM_SIZE,
           A.UNIT,
           A.RELEASE_QUANTITY,
           TO_CHAR(ROUND(A.REAL_WGT, 2), 'FM9999990.00') AS REAL_WGT,
           A.SALE_UPRICE,
           CASE WHEN B.TAX_CODE = '100' THEN REAL_SALE_AMT ELSE REAL_SALE_AMT END AS SALE_AMT,
           CASE WHEN B.TAX_CODE = '100' THEN (ROUND(REAL_SALE_AMT*0.1)) ELSE 0 END AS SE_AMT,
           CASE WHEN B.TAX_CODE = '100' THEN REAL_SALE_AMT+ (ROUND(REAL_SALE_AMT*0.1)) ELSE REAL_SALE_AMT END AS TOT,

           CASE WHEN E.PO_TYPE = '10' THEN
               D.BL_NUM
           ELSE
               (SELECT T.ITEM_BL_NUM FROM PO_ORDER_ITEM_DETAIL T
               WHERE C.PO_ORDER_NUM = T.PO_ORDER_NUM
               AND C.ITEM_CD = T.ITEM_CD
               AND C.ITEM_SEQ = T.ITEM_SEQ
               )
           END AS BL_NUM,
           E.INCOME_DTR_DSCT_NUM
      FROM RELEASE_ITEM_MGMT      A,
           HLDC_PO_ITEM_MST       B,
           SALE_ORDER_ITEM_MGMT   C,
           PO_ORDER_MST           D,
           INVENTORY_MGMT_DELIVER E
     WHERE A.ITEM_CD = B.ITEM_CODE(+)
       AND A.SALE_ORDER_NUM = C.SALE_ORDER_NUM
       AND A.SALE_ORDER_NUM_SEQ = C.SALE_ORDER_NUM_SEQ
       AND C.PO_ORDER_NUM = D.PO_ORDER_NUM
       AND C.DELIVER_NUM = E.DELIVER_NUM
       AND A.RELEASE_NUM IN ( :releaseNums )
   </#if>
   <#if releaseNums?has_content && returnStr?has_content>
       UNION ALL
   </#if>
   <#if returnStr?has_content>
   SELECT
        TO_CHAR(TO_DATE(A.RELEASE_DATE),'YYYY-MM-DD') RELEASE_DATE
          ,A.RELEASE_NUM
          ,F.SEQ
          ,B.ITEM_NAME || B.ITEM_SIZE AS ITEM_NM
          ,B.ORIGIN_NAT
          ,B.ITEM_SIZE
          ,A.UNIT
          ,F.PURCHASE_RETURN_QUANTITY AS RELEASE_QUANTITY
          ,TO_CHAR(ROUND(F.PURCHASE_RETURN_WGT, 2), 'FM9999990.00') AS REAL_WGT
          ,A.SALE_UPRICE
          ,CASE WHEN B.TAX_CODE = '100' THEN PURCHASE_RETURN_AMT ELSE PURCHASE_RETURN_AMT END AS SALE_AMT
          ,CASE WHEN B.TAX_CODE = '100' THEN (ROUND(PURCHASE_RETURN_AMT*0.1)) ELSE 0 END AS SE_AMT
          ,CASE WHEN B.TAX_CODE = '100' THEN PURCHASE_RETURN_AMT+ (ROUND(PURCHASE_RETURN_AMT*0.1)) ELSE PURCHASE_RETURN_AMT END AS TOT

          ,CASE WHEN E.PO_TYPE = '10' THEN
               D.BL_NUM
           ELSE
               (SELECT T.ITEM_BL_NUM FROM PO_ORDER_ITEM_DETAIL T
               WHERE C.PO_ORDER_NUM = T.PO_ORDER_NUM
               AND C.ITEM_CD = T.ITEM_CD
               AND C.ITEM_SEQ = T.ITEM_SEQ
               )
           END AS BL_NUM
          ,E.INCOME_DTR_DSCT_NUM
     FROM RELEASE_ITEM_MGMT A,
          HLDC_PO_ITEM_MST B,
          SALE_ORDER_ITEM_MGMT C,
          PO_ORDER_MST D,
          INVENTORY_MGMT_DELIVER E,
          PURCHASE_RETURN_MGMT F
     WHERE A.ITEM_CD = B.ITEM_CODE(+)
     AND A.SALE_ORDER_NUM = C.SALE_ORDER_NUM
     AND A.SALE_ORDER_NUM_SEQ = C.SALE_ORDER_NUM_SEQ
     AND C.PO_ORDER_NUM =D.PO_ORDER_NUM
     AND C.DELIVER_NUM = E.DELIVER_NUM

     AND A.RELEASE_NUM = F.RELEASE_NUM(+)
     AND (
           F.SEQ IS NOT NULL
               ${returnStr}
          )
    </#if>
    ) A
    ORDER BY A.RELEASE_NUM, A.SEQ


        ]]>
	</statement>

	<!-- 판매 주문내역에 대하여 출고를 관리 목록을 조회한다. -->
	<statement name="getLastdayOfMonth" type="select">

		<![CDATA[
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.getLastdayOfMonth */
        SELECT TO_CHAR(LAST_DAY(TO_DATE(:releaseDate,'YYYYMMDD')),'YYYYMMDD') AS SLIP_DATE FROM DUAL
        ]]>
	</statement>
	<statement name="printReleaseReqPubhist"><![CDATA[
/*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.printReleaseReqPubhist */
INSERT INTO RELEASE_ITEM_MGMT_PUB_HIST
(RELEASE_NUM,
 SEQ,
 PUBLISH_TIMES,
 CUSER,
 CDATE
) VALUES (
 :releaseNum,
 (SELECT NVL(MAX(SEQ),0) + 1 FROM RELEASE_ITEM_MGMT_PUB_HIST WHERE RELEASE_NUM = :releaseNum),
 TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS'),
 :loginSabun,
 SYSDATE
)
        ]]></statement>
</hqml>
