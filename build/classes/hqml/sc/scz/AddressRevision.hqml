<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="sc.scz.addressRevisionDAO">
	<desc>주소 보정 HQML Query</desc>

	<!-- 주소 보정 목록을 조회한다. -->
	<statement name="selectStUpjang" type="select">
		/*+ com.hwfs.sc.scz.dao.AddressRevisionDAO.selectStUpjang */
		<![CDATA[
SELECT A.UPJANG
     , A.UPJANGNM
     , B.ADDR_CLASS
     , B.CONFIRM_YN
     , B.ZIP_CODE1
     , B.BASE_ADDR1
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC1) AS DETAIL_ADDR_ENC1
     , B.ZIP_CODE2
     , B.BASE_ADDR2
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC2) AS DETAIL_ADDR_ENC2
     , B.LON1
     , B.LAT1
     , B.LON2
     , B.LAT2
     , B.BUILDING_MGMT_NUM
     , C.CC_NM
     , B.ADDR_KEY
  FROM ST_UPJANG A
     , SCC_ADDR_INFO B
     , HLDC_SC_DEPT_V C
     , SCC_CC D
 WHERE B.ADDR_KEY = A.ADDR_KEY
   AND C.CC_CD = A.CC_CD
   AND D.CC_CD = A.CC_CD
<#if muCd?has_content>
   AND C.MU_CD = :muCd
</#if>
<#if tmCd?has_content>
   AND C.TM_CD = :tmCd
</#if>
<#if upjangnm?has_content>
   AND A.UPJANGNM LIKE '%' || :upjangnm || '%'
</#if>
<#if confirmYn?has_content>
  AND  B.CONFIRM_YN = :confirmYn
</#if>
<#if closeYn?has_content>
	<#if closeYn == "Y">
  AND  D.ORG_LEVEL_CD10 NOT LIKE '%Z'
	</#if>
</#if>
ORDER BY A.UPJANG
		]]>
	</statement>

	<statement name="selectFmsUpjang1" type="select">
		/*+ com.hwfs.sc.scz.dao.AddressRevisionDAO.selectFmsUpjang1 */
		<![CDATA[
SELECT A.UPJANG
     , A.UPJANGNM
     , B.ADDR_CLASS
     , B.CONFIRM_YN
     , B.ZIP_CODE1
     , B.BASE_ADDR1
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC1) AS DETAIL_ADDR_ENC1
     , B.ZIP_CODE2
     , B.BASE_ADDR2
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC2) AS DETAIL_ADDR_ENC2
     , B.LON1
     , B.LAT1
     , B.LON2
     , B.LAT2
     , B.BUILDING_MGMT_NUM
     , C.CC_NM
     , B.ADDR_KEY
  FROM ST_UPJANG A
     , SCC_ADDR_INFO B
     , HLDC_SC_DEPT_V C
     , SCC_CC D
     , FMS_UPJANG E
 WHERE E.UPJANG = A.UPJANG
   AND B.ADDR_KEY = E.ADDR_KEY
   AND C.CC_CD = A.CC_CD
   AND D.CC_CD = A.CC_CD
<#if muCd?has_content>
   AND C.MU_CD = :muCd
</#if>
<#if tmCd?has_content>
   AND C.TM_CD = :tmCd
</#if>
<#if upjangnm?has_content>
   AND A.UPJANGNM LIKE '%' || :upjangnm || '%'
</#if>
<#if confirmYn?has_content>
  AND  B.CONFIRM_YN = :confirmYn
</#if>
<#if closeYn?has_content>
	<#if closeYn == "Y">
  AND  D.ORG_LEVEL_CD10 NOT LIKE '%Z'
	</#if>
</#if>
ORDER BY A.UPJANG
		]]>
	</statement>

	<statement name="selectFmsUpjang2" type="select">
		/*+ com.hwfs.sc.scz.dao.AddressRevisionDAO.selectFmsUpjang2 */
		<![CDATA[
SELECT A.UPJANG
     , A.UPJANGNM
     , B.ADDR_CLASS
     , B.CONFIRM_YN
     , B.ZIP_CODE1
     , B.BASE_ADDR1
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC1) AS DETAIL_ADDR_ENC1
     , B.ZIP_CODE2
     , B.BASE_ADDR2
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC2) AS DETAIL_ADDR_ENC2
     , B.LON1
     , B.LAT1
     , B.LON2
     , B.LAT2
     , B.BUILDING_MGMT_NUM
     , C.CC_NM
     , B.ADDR_KEY
  FROM ST_UPJANG A
     , SCC_ADDR_INFO B
     , HLDC_SC_DEPT_V C
     , SCC_CC D
     , FMS_UPJANG E
 WHERE E.UPJANG = A.UPJANG
   AND B.ADDR_KEY = E.ADDR2_KEY
   AND C.CC_CD = A.CC_CD
   AND D.CC_CD = A.CC_CD
<#if muCd?has_content>
   AND C.MU_CD = :muCd
</#if>
<#if tmCd?has_content>
   AND C.TM_CD = :tmCd
</#if>
<#if upjangnm?has_content>
   AND A.UPJANGNM LIKE '%' || :upjangnm || '%'
</#if>
<#if confirmYn?has_content>
  AND  B.CONFIRM_YN = :confirmYn
</#if>
<#if closeYn?has_content>
	<#if closeYn == "Y">
  AND  D.ORG_LEVEL_CD10 NOT LIKE '%Z'
	</#if>
</#if>
ORDER BY A.UPJANG
		]]>
	</statement>

	<statement name="selectStCust" type="select">
		/*+ com.hwfs.sc.scz.dao.AddressRevisionDAO.selectStCust */
		<![CDATA[
SELECT DISTINCT E.CUSTCD AS UPJANG
     , E.CUSTNM AS UPJANGNM
     , B.ADDR_CLASS
     , B.CONFIRM_YN
     , B.ZIP_CODE1
     , B.BASE_ADDR1
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC1) AS DETAIL_ADDR_ENC1
     , B.ZIP_CODE2
     , B.BASE_ADDR2
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC2) AS DETAIL_ADDR_ENC2
     , B.LON1
     , B.LAT1
     , B.LON2
     , B.LAT2
     , B.BUILDING_MGMT_NUM
     , A.CC_NM
     , B.ADDR_KEY
  FROM (SELECT AA.*
             , CC.MU_CD
             , CC.TM_CD
             , CC.CC_CD
             , CC.CC_NM
             , DD.ORG_LEVEL_CD10
          FROM ST_UPJANG AA,
               HLDC_SC_DEPT_V CC,
               SCC_CC DD
         WHERE CC.CC_CD = AA.CC_CD
           AND DD.CC_CD = AA.CC_CD
<#if muCd?has_content>
   AND CC.MU_CD = :muCd
</#if>
<#if tmCd?has_content>
   AND CC.TM_CD = :tmCd
</#if>
<#if closeYn?has_content>
	<#if closeYn == "Y">
  AND  DD.ORG_LEVEL_CD10 NOT LIKE '%Z'
	</#if>
</#if>
           ) A
     , SCC_ADDR_INFO B
     , ST_CUST E
 WHERE E.CUSTCD = A.CUSTCD(+)
   AND B.ADDR_KEY = E.ADDR_KEY
<#if upjangnm?has_content>
   AND E.CUSTNM LIKE '%' || :upjangnm || '%'
</#if>
<#if confirmYn?has_content>
  AND  B.CONFIRM_YN = :confirmYn
</#if>
ORDER BY E.CUSTCD
		]]>
	</statement>

	<statement name="selectFmsSecureLand" type="select">
		/*+ com.hwfs.sc.scz.dao.AddressRevisionDAO.selectFmsSecureLand */
		<![CDATA[
SELECT A.UPJANG
     , A.UPJANGNM
     , B.ADDR_CLASS
     , B.CONFIRM_YN
     , B.ZIP_CODE1
     , B.BASE_ADDR1
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC1) AS DETAIL_ADDR_ENC1
     , B.ZIP_CODE2
     , B.BASE_ADDR2
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC2) AS DETAIL_ADDR_ENC2
     , B.LON1
     , B.LAT1
     , B.LON2
     , B.LAT2
     , B.BUILDING_MGMT_NUM
     , C.CC_NM
     , B.ADDR_KEY
  FROM ST_UPJANG A
     , SCC_ADDR_INFO B
     , HLDC_SC_DEPT_V C
     , SCC_CC D
     , FMS_SECURE_LAND E
 WHERE E.UPJANG = A.UPJANG
   AND B.ADDR_KEY = E.ADDR_KEY
   AND C.CC_CD = A.CC_CD
   AND D.CC_CD = A.CC_CD
<#if muCd?has_content>
   AND C.MU_CD = :muCd
</#if>
<#if tmCd?has_content>
   AND C.TM_CD = :tmCd
</#if>
<#if upjangnm?has_content>
   AND A.UPJANGNM LIKE '%' || :upjangnm || '%'
</#if>
<#if confirmYn?has_content>
  AND  B.CONFIRM_YN = :confirmYn
</#if>
<#if closeYn?has_content>
	<#if closeYn == "Y">
  AND  D.ORG_LEVEL_CD10 NOT LIKE '%Z'
	</#if>
</#if>
ORDER BY A.UPJANG
		]]>
	</statement>

	<statement name="selectFmsSecurePerson" type="select">
		/*+ com.hwfs.sc.scz.dao.AddressRevisionDAO.selectFmsSecurePerson */
		<![CDATA[
SELECT A.UPJANG
     , A.UPJANGNM
     , B.ADDR_CLASS
     , B.CONFIRM_YN
     , B.ZIP_CODE1
     , B.BASE_ADDR1
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC1) AS DETAIL_ADDR_ENC1
     , B.ZIP_CODE2
     , B.BASE_ADDR2
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC2) AS DETAIL_ADDR_ENC2
     , B.LON1
     , B.LAT1
     , B.LON2
     , B.LAT2
     , B.BUILDING_MGMT_NUM
     , C.CC_NM
     , B.ADDR_KEY
  FROM ST_UPJANG A
     , SCC_ADDR_INFO B
     , HLDC_SC_DEPT_V C
     , SCC_CC D
     , FMS_SECURE_PERSON E
 WHERE E.UPJANG = A.UPJANG
   AND B.ADDR_KEY = E.ADDR_KEY
   AND C.CC_CD = A.CC_CD
   AND D.CC_CD = A.CC_CD
<#if muCd?has_content>
   AND C.MU_CD = :muCd
</#if>
<#if tmCd?has_content>
   AND C.TM_CD = :tmCd
</#if>
<#if upjangnm?has_content>
   AND A.UPJANGNM LIKE '%' || :upjangnm || '%'
</#if>
<#if confirmYn?has_content>
  AND  B.CONFIRM_YN = :confirmYn
</#if>
<#if closeYn?has_content>
	<#if closeYn == "Y">
  AND  D.ORG_LEVEL_CD10 NOT LIKE '%Z'
	</#if>
</#if>
ORDER BY A.UPJANG
		]]>
	</statement>


	<statement name="selectScoUpjangMst" type="select">
		/*+ com.hwfs.sc.scz.dao.AddressRevisionDAO.selectScoUpjangMst */
		<![CDATA[
SELECT A.UPJANG
     , A.UPJANGNM
     , B.ADDR_CLASS
     , B.CONFIRM_YN
     , B.ZIP_CODE1
     , B.BASE_ADDR1
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC1) AS DETAIL_ADDR_ENC1
     , B.ZIP_CODE2
     , B.BASE_ADDR2
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC2) AS DETAIL_ADDR_ENC2
     , B.LON1
     , B.LAT1
     , B.LON2
     , B.LAT2
     , B.BUILDING_MGMT_NUM
     , C.CC_NM
     , B.ADDR_KEY
  FROM ST_UPJANG A
     , SCC_ADDR_INFO B
     , HLDC_SC_DEPT_V C
     , SCC_CC D
     , SCO_UPJANG_MST E
 WHERE E.UPJANG = A.UPJANG
   AND B.ADDR_KEY = E.ADDR_KEY
   AND C.CC_CD = A.CC_CD
   AND D.CC_CD = A.CC_CD
<#if muCd?has_content>
   AND C.MU_CD = :muCd
</#if>
<#if tmCd?has_content>
   AND C.TM_CD = :tmCd
</#if>
<#if upjangnm?has_content>
   AND A.UPJANGNM LIKE '%' || :upjangnm || '%'
</#if>
<#if confirmYn?has_content>
  AND  B.CONFIRM_YN = :confirmYn
</#if>
<#if closeYn?has_content>
	<#if closeYn == "Y">
  AND  D.ORG_LEVEL_CD10 NOT LIKE '%Z'
	</#if>
</#if>
ORDER BY A.UPJANG
		]]>
	</statement>

	<statement name="selectScoUpjangCustHis" type="select">
		/*+ com.hwfs.sc.scz.dao.AddressRevisionDAO.selectScoUpjangCustHis */
		<![CDATA[
SELECT A.UPJANG
     , A.UPJANGNM
     , B.ADDR_CLASS
     , B.CONFIRM_YN
     , B.ZIP_CODE1
     , B.BASE_ADDR1
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC1) AS DETAIL_ADDR_ENC1
     , B.ZIP_CODE2
     , B.BASE_ADDR2
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC2) AS DETAIL_ADDR_ENC2
     , B.LON1
     , B.LAT1
     , B.LON2
     , B.LAT2
     , B.BUILDING_MGMT_NUM
     , C.CC_NM
     , B.ADDR_KEY
  FROM ST_UPJANG A
     , SCC_ADDR_INFO B
     , HLDC_SC_DEPT_V C
     , SCC_CC D
     , SCO_UPJANG_CUSTCHG_HIS E
 WHERE E.UPJANG = A.UPJANG
   AND B.ADDR_KEY = E.ADDR_KEY
   AND C.CC_CD = A.CC_CD
   AND D.CC_CD = A.CC_CD
<#if muCd?has_content>
   AND C.MU_CD = :muCd
</#if>
<#if tmCd?has_content>
   AND C.TM_CD = :tmCd
</#if>
<#if upjangnm?has_content>
   AND A.UPJANGNM LIKE '%' || :upjangnm || '%'
</#if>
<#if confirmYn?has_content>
  AND  B.CONFIRM_YN = :confirmYn
</#if>
<#if closeYn?has_content>
	<#if closeYn == "Y">
  AND  D.ORG_LEVEL_CD10 NOT LIKE '%Z'
	</#if>
</#if>
ORDER BY A.UPJANG
		]]>
	</statement>

	<statement name="selectScoUpjangCust" type="select">
		/*+ com.hwfs.sc.scz.dao.AddressRevisionDAO.selectScoUpjangCust */
		<![CDATA[
SELECT A.UPJANG
     , A.UPJANGNM
     , B.ADDR_CLASS
     , B.CONFIRM_YN
     , B.ZIP_CODE1
     , B.BASE_ADDR1
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC1) AS DETAIL_ADDR_ENC1
     , B.ZIP_CODE2
     , B.BASE_ADDR2
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC2) AS DETAIL_ADDR_ENC2
     , B.LON1
     , B.LAT1
     , B.LON2
     , B.LAT2
     , B.BUILDING_MGMT_NUM
     , C.CC_NM
     , B.ADDR_KEY
  FROM ST_UPJANG A
     , SCC_ADDR_INFO B
     , HLDC_SC_DEPT_V C
     , SCC_CC D
     , SCO_UPJANG_CUSTCHG E
 WHERE E.UPJANG = A.UPJANG
   AND B.ADDR_KEY = E.ADDR_KEY
   AND C.CC_CD = A.CC_CD
   AND D.CC_CD = A.CC_CD
<#if muCd?has_content>
   AND C.MU_CD = :muCd
</#if>
<#if tmCd?has_content>
   AND C.TM_CD = :tmCd
</#if>
<#if upjangnm?has_content>
   AND A.UPJANGNM LIKE '%' || :upjangnm || '%'
</#if>
<#if confirmYn?has_content>
  AND  B.CONFIRM_YN = :confirmYn
</#if>
<#if closeYn?has_content>
	<#if closeYn == "Y">
  AND  D.ORG_LEVEL_CD10 NOT LIKE '%Z'
	</#if>
</#if>
ORDER BY A.UPJANG
		]]>
	</statement>


	<statement name="selectMakCustMstA" type="select">
		/*+ com.hwfs.sc.scz.dao.AddressRevisionDAO.selectMakCustMstA */
		<![CDATA[
SELECT A.CUST_ID AS UPJANG
     , A.CUSTNM AS UPJANGNM
     , B.ADDR_CLASS
     , B.CONFIRM_YN
     , B.ZIP_CODE1
     , B.BASE_ADDR1
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC1) AS DETAIL_ADDR_ENC1
     , B.ZIP_CODE2
     , B.BASE_ADDR2
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC2) AS DETAIL_ADDR_ENC2
     , B.LON1
     , B.LAT1
     , B.LON2
     , B.LAT2
     , B.BUILDING_MGMT_NUM
     , C.CC_NM
     , B.ADDR_KEY
  FROM MAK_CUST_MST_A A
     , SCC_ADDR_INFO B
     , HLDC_SC_DEPT_V C
     , SCC_CC D
 WHERE B.ADDR_KEY = A.ADDR_KEY
   AND C.CC_CD = A.MGMT_DEPT_ID
   AND D.CC_CD = A.MGMT_DEPT_ID
<#if muCd?has_content>
   AND C.MU_CD = :muCd
</#if>
<#if tmCd?has_content>
   AND C.TM_CD = :tmCd
</#if>
<#if upjangnm?has_content>
   AND A.CUSTNM LIKE '%' || :upjangnm || '%'
</#if>
<#if confirmYn?has_content>
  AND  B.CONFIRM_YN = :confirmYn
</#if>
<#if closeYn?has_content>
	<#if closeYn == "Y">
  AND  D.ORG_LEVEL_CD10 NOT LIKE '%Z'
	</#if>
</#if>
ORDER BY A.CUST_ID
		]]>
	</statement>


	<statement name="selectMakCustMstB" type="select">
		/*+ com.hwfs.sc.scz.dao.AddressRevisionDAO.selectMakCustMstB */
		<![CDATA[
SELECT A.CUST_ID AS UPJANG
     , A.CUSTNM AS UPJANGNM
     , B.ADDR_CLASS
     , B.CONFIRM_YN
     , B.ZIP_CODE1
     , B.BASE_ADDR1
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC1) AS DETAIL_ADDR_ENC1
     , B.ZIP_CODE2
     , B.BASE_ADDR2
     , SCC_CRYPTO.DEC_FUN(B.DETAIL_ADDR_ENC2) AS DETAIL_ADDR_ENC2
     , B.LON1
     , B.LAT1
     , B.LON2
     , B.LAT2
     , B.BUILDING_MGMT_NUM
     , C.CC_NM
     , B.ADDR_KEY
  FROM MAK_CUST_MST_B A
     , SCC_ADDR_INFO B
     , HLDC_SC_DEPT_V C
     , SCC_CC D
 WHERE B.ADDR_KEY = A.ADDR_KEY
   AND C.CC_CD = A.MGMT_DEPT_ID
   AND D.CC_CD = A.MGMT_DEPT_ID
<#if muCd?has_content>
   AND C.MU_CD = :muCd
</#if>
<#if tmCd?has_content>
   AND C.TM_CD = :tmCd
</#if>
<#if upjangnm?has_content>
   AND A.CUSTNM LIKE '%' || :upjangnm || '%'
</#if>
<#if confirmYn?has_content>
  AND  B.CONFIRM_YN = :confirmYn
</#if>
<#if closeYn?has_content>
	<#if closeYn == "Y">
  AND  D.ORG_LEVEL_CD10 NOT LIKE '%Z'
	</#if>
</#if>
ORDER BY A.CUST_ID
		]]>
	</statement>




	<!-- 주소 보정(을)를 수정한다. -->
	<statement name="update" type="update">
		/*+ com.hwfs.sc.scz.dao.AddressRevisionDAO.update */
		<![CDATA[
UPDATE SCC_ADDR_INFO
   SET ADDR_CLASS = <#if addrClass?has_content>:addrClass<#else>NULL</#if>
     , CONFIRM_YN = <#if confirmYn?has_content>:confirmYn<#else>NULL</#if>
     , ZIP_CODE1 = <#if zipCode1?has_content>:zipCode1<#else>NULL</#if>
     , BASE_ADDR1 = <#if baseAddr1?has_content>:baseAddr1<#else>NULL</#if>
     , DETAIL_ADDR_ENC1 = <#if detailAddrEnc1?has_content>SCC_CRYPTO.ENC_FUN(:detailAddrEnc1)<#else>NULL</#if>
     , ZIP_CODE2 = <#if zipCode2?has_content>:zipCode2<#else>NULL</#if>
     , BASE_ADDR2 = <#if baseAddr2?has_content>:baseAddr2<#else>NULL</#if>
     , DETAIL_ADDR_ENC2 = <#if detailAddrEnc2?has_content>SCC_CRYPTO.ENC_FUN(:detailAddrEnc2)<#else>NULL</#if>
     , LON1 = <#if lon1?has_content>:lon1<#else>NULL</#if>
     , LAT1 = <#if lat1?has_content>:lat1<#else>NULL</#if>
     , LON2 = <#if lon2?has_content>:lon2<#else>NULL</#if>
     , LAT2 = <#if lat2?has_content>:lat2<#else>NULL</#if>
     , BUILDING_MGMT_NUM = <#if buildingMgmtNum?has_content>:buildingMgmtNum<#else>NULL</#if>
     , UUSER = :loginSabun
     , UDATE = SYSDATE
 WHERE ADDR_KEY = :addrKey
		]]>
	</statement>

	<!-- 주소 보정(을)를 삭제한다. -->
	<statement name="delete" type="delete">
		/*+ com.hwfs.sc.scz.dao.AddressRevisionDAO.delete */
		<![CDATA[
		DELETE 
		FROM   TABLE_NAME 
		WHERE  COLUMN_NAME = :columnName
		]]>
	</statement>

</hqml>
