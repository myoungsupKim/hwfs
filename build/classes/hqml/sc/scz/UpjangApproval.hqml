<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="sc.scz.upjangApprovalDAO">
	<desc>업장승인 HQML Query</desc>

	<!-- 업장승인 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.sc.scz.dao.UpjangApprovalDAO.selectList */
		<![CDATA[
SELECT TO_CHAR(A.UPJANG) AS UPJANG,
       A.CUSTCD,
       A.CUST_CUSTNM,
       A.CUST_CUST_TYPE,
       A.CUST_CUST_GUBUN,
       A.CUST_SAUPNO,
       A.UPJANGNM,
       A.SAUPNO,
       SUBSTR(A.SAUPNO, 1, 10) AS BSN_NO,
       SUBSTR(A.SAUPNO, 11) AS SUB_BSN_NO,
       A.VAT_GUBUN,
       A.VAT_UPJANG,
       A.VAT_UPJANGNM,
       A.CORP_REG_NUM,
       A.UP_JONG,
       A.UP_TAE,
       A.DRNAME,
       A.SHOP_TYP_CD,
       A.SHOP_TYP_NM,
       A.ADDR_KEY,
       A.ADDR,
       A.TEL_NO,
       SCC_TELNO_SPLIT_FUN(A.TEL_NO, 1) AS TEL_NO1,
       SCC_TELNO_SPLIT_FUN(A.TEL_NO, 2) AS TEL_NO2,
       SCC_TELNO_SPLIT_FUN(A.TEL_NO, 3) AS TEL_NO3,
       A.FAX_NO,
       SCC_TELNO_SPLIT_FUN(A.FAX_NO, 1) AS FAX_NO1,
       SCC_TELNO_SPLIT_FUN(A.FAX_NO, 2) AS FAX_NO2,
       SCC_TELNO_SPLIT_FUN(A.FAX_NO, 3) AS FAX_NO3,
       A.TM_NM,
       A.CC_CD,
       A.CC_NM,
       A.ACC_OPENDATE,
       A.ACC_CLOSEDATE,
       A.SCHOOL_YN,
       A.SCHOOL_YN_CUSTCD,
       A.SCHOOL_CUSTNM,
       A.UUSER,
       A.UDATE,
       A.AP_UNITPRICE_UPJANG,
       A.AP_UNITPRICE_UPJANG_NM,
       A.BANK_ACCT_NO_REQUEST_YN,
       NVL(A.BANK_ACCT_NO_REQUEST_YN, 'N') AS OLD_BANK_ACCT_NO_REQUEST_YN,
       A.SAP_CUST_CD,
       A.APPROVAL_STATUS_CD,
       TO_CHAR(TO_DATE(A.APPROVAL_REQ_DATE, 'YYYYMMDD'), 'YYYY-MM-DD') AS APPROVAL_REQ_DATE,
       A.APPROVAL_REQ_NM,
       (SELECT COUNT(*) FROM SCO_UPJANG_MST WHERE UPJANG = A.UPJANG) AS SCO_CNT,
       (SELECT COUNT(*) FROM FMS_UPJANG WHERE UPJANG = A.UPJANG) AS FMS_CNT
FROM   (SELECT A.UPJANG,
               NVL(A.CUSTCD, 0) AS CUSTCD,
               B.CUSTNM AS CUST_CUSTNM,
               (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'Z01' AND CODE = B.CUSTTYPE) AS CUST_CUST_TYPE,
               (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'Z02' AND CODE = B.CUSTGUBUN) AS CUST_CUST_GUBUN,
               B.SAUPNO AS CUST_SAUPNO,
               A.UPJANGNM,
               CASE WHEN A.SAUPNO IS NULL THEN NULL ELSE CASE WHEN LENGTH(TRIM(A.SAUPNO)) > 10 THEN A.SAUPNO WHEN LENGTH(TRIM(A.SAUPNO)) <= 10 THEN A.SAUPNO ELSE TRIM(A.SAUPNO) || '0000' END END AS SAUPNO,
               A.CORP_REG_NUM,
               A.UP_JONG,
               A.UP_TAE,
               A.DRNAME,
               A.SHOP_TYP_CD,
               (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'SHOP_TYP_CD' AND CODE = A.SHOP_TYP_CD) AS SHOP_TYP_NM,
               A.VAT_GUBUN,
               (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'VAT_GUBUN' AND CODE = A.VAT_GUBUN) AS VAT_GUBUN_NM,
               A.VAT_UPJANG,
               (SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = A.VAT_UPJANG) AS VAT_UPJANGNM,
               A.ADDR_KEY,
               SCC_ADDR_FUN(A.ADDR_KEY, :loginPersMask, :maskAuth) AS ADDR,
               SCC_CRYPTO.DEC_FUN(A.TEL_NO_ENC) AS TEL_NO,
               SCC_CRYPTO.DEC_FUN(A.FAX_NO_ENC) AS FAX_NO,
               D.TM_NM,
               A.CC_CD,
               CASE WHEN A.CC_CD = 'NO-MAT' THEN '조직 확인필요' ELSE D.CC_NM END AS CC_NM,
               A.ACC_OPENDATE,
               A.ACC_CLOSEDATE,
               A.SCHOOL_YN,
               A.SCHOOL_YN_CUSTCD,
               C.CUSTNM AS SCHOOL_CUSTNM,
               (SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = A.UPDATE_BY) AS UUSER,
               TO_CHAR(A.UPDATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS UDATE,
               A.AP_UNITPRICE_UPJANG,
               (SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = A.AP_UNITPRICE_UPJANG) AS AP_UNITPRICE_UPJANG_NM,
               A.BANK_ACCT_NO_REQUEST_YN,
               B.SAP_CUST_CD,
               A.APPROVAL_STATUS_CD,
               A.APPROVAL_REQ_DATE,
               (SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = A.APPROVAL_REQ_SABUN) AS APPROVAL_REQ_NM
        FROM   ST_UPJANG A,
               ST_CUST B,
               ST_CUST C,
               HLDC_SC_DEPT_V D
        WHERE  B.CUSTCD(+) = A.CUSTCD
        AND    C.CUSTCD(+) = A.SCHOOL_YN_CUSTCD
        AND    D.CC_CD(+) = A.CC_CD
<#if upjangnm?has_content>
        AND    A.UPJANGNM LIKE '%' || :upjangnm || '%'
</#if>
<#if approvalReqDateFrom?has_content>
        AND    A.APPROVAL_REQ_DATE >= :approvalReqDateFrom
</#if>
<#if approvalReqDateTo?has_content>
	    AND    A.APPROVAL_REQ_DATE <= :approvalReqDateTo
</#if>
        AND    A.APPROVAL_STATUS_CD = 'REQ'
<#if cuser?has_content>
		--AND    A.CREATE_BY = :cuser
		AND  A.APPROVAL_REQ_SABUN = :cuser
</#if>        
        ) A
ORDER BY A.UPJANG
		]]>
	</statement>

	<!-- 업장승인(을)를 수정한다. -->
	<statement name="update" type="update">
		/*+ com.hwfs.sc.scz.dao.UpjangApprovalDAO.update */
		<![CDATA[
UPDATE ST_UPJANG 
SET    APPROVAL_DATE = TO_CHAR(SYSDATE, 'YYYYMMDD'),
       APPROVAL_STATUS_CD = :approvalStatusCd,
       APPROVAL_SABUN = :loginSabun,
<#if approvalRemark?has_content>
       APPROVAL_REMARK = :approvalRemark,
<#else>
       APPROVAL_REMARK = null,
</#if>

       UPDATE_BY = :loginSabun,
       UPDATE_DATE = SYSDATE
WHERE  UPJANG = :upjang
		]]>
	</statement>

	<!-- 변경이력. -->
	<statement name="selectLog" type="select">
		/*+ com.hwfs.sc.scz.dao.UpjangApprovalDAO.selectLog */
		<![CDATA[
SELECT B.SABUN
     , B.NM_KOR
     , TO_CHAR(A.LOG_DDTT, 'YYYY-MM-DD HH24:MI:SS') AS LOG_DDTT
     , A.COL_NM
     , A.BEFORE_VALUE
     , A.AFTER_VALUE
  FROM SCC_UPJANG_CHNG_LOG A
     , SCC_USERINFO B
 WHERE B.SABUN = A.ACT_SABUN
   AND TO_CHAR(A.LOG_DDTT, 'YYYYMMDD') = :logDdtt
   AND A.UPJANG = :upjang
 ORDER BY A.LOG_DDTT DESC
		]]>
	</statement>


</hqml>
