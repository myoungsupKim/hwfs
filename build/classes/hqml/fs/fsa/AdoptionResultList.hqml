<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="fs.fsa.adoptionResultListDAO">
	<desc>현장인력 채용지원 실적 HQML Query</desc>

	<!-- 현장인력 채용지원 실적 목록을 조회한다. -->
	<statement name="selectResultList" type="select">
		/*+ com.hwfs.fs.fsa.dao.AdoptionResultListDAO.selectResultList */
		<![CDATA[
		SELECT
		         NUM
		        ,REQUEST_UPJANG_CD
		        ,REQUEST_UPJANG_NM
		        ,SIDO
		        ,NVL(REQUEST_COOK,0) AS REQUEST_COOK
		        ,NVL(REQUEST_COOK_SUB,0) AS REQUEST_COOK_SUB
		        ,ASSIGN_COOK
		        ,ASSIGN_COOK_SUB
		        ,ADOPTION_COOK
		        ,ADOPTION_COOK_SUB
		        ,REQUEST_DATE
		        ,LAST_CLOSE_DATE
		        ,REQUEST_PERIOD
		        ,PROGRESS_STATUS
		FROM 
		(
			SELECT 	 '당월' AS NUM
		            ,T1.REQUEST_UPJANG_CD
		            ,(SELECT DISTINCT UPJANGNM FROM ST_UPJANG WHERE UPJANG = T1.REQUEST_UPJANG_CD) AS REQUEST_UPJANG_NM
		          --  ,(SELECT SIDO FROM SCC_ZIP WHERE ZIP = T1.ZIP_CODE GROUP BY SIDO) AS SIDO
			         ,(
	                   SELECT SCC_CODE_NM('MA0040',A.LOC_CD)
	                     FROM SCO_UPJANG_MST  A
	                    WHERE A.UPJANG = T1.REQUEST_UPJANG_CD     
	              	 ) SIDO
		            ,(SELECT NEED_NO_MAN FROM FSA_POOL_REQ WHERE REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND REQUEST_NUM=T1.REQUEST_NUM 
		            AND NEED_DUTY1='001' AND SUBSTR(T1.REQUEST_DATE,0,6) = :resultMonth) AS REQUEST_COOK  
		            ,(SELECT NEED_NO_MAN FROM FSA_POOL_REQ WHERE REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND REQUEST_NUM=T1.REQUEST_NUM 
		            AND NEED_DUTY1='002' AND SUBSTR(T1.REQUEST_DATE,0,6) = :resultMonth) AS REQUEST_COOK_SUB  
		            ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		            WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		            AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM
		            AND SUBSTR(TO_CHAR(A.CDATE,'YYYYMMDD'),0,6) = :resultMonth AND  B.SUP_DUTY IN ('001','002')) AS ASSIGN_COOK 
		             ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		            WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		            AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM
		            AND SUBSTR(TO_CHAR(A.CDATE,'YYYYMMDD'),0,6) = :resultMonth AND  B.SUP_DUTY NOT IN ('001','002')) AS ASSIGN_COOK_SUB
		            ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		            WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		            AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM
		            AND SUBSTR(TO_CHAR(A.UDATE,'YYYYMMDD'),0,6) = :resultMonth AND  B.SUP_DUTY IN ('001','002') AND A.GOOD_YN='G') AS ADOPTION_COOK
		            ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		            WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		            AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM
		            AND SUBSTR(TO_CHAR(A.UDATE,'YYYYMMDD'),0,6) = :resultMonth AND  B.SUP_DUTY NOT IN ('001','002') AND A.GOOD_YN='G') AS ADOPTION_COOK_SUB
		            ,T1.REQUEST_DATE
		            ,T1.LAST_CLOSE_DATE
		            ,DECODE(NVL(TO_DATE(T1.LAST_CLOSE_DATE,'YYYYMMDD') - TO_DATE(T1.REQUEST_DATE,'YYYYMMDD')+1,0) ||'일','0일','',NVL(TO_DATE(T1.LAST_CLOSE_DATE,'YYYYMMDD') - TO_DATE(T1.REQUEST_DATE,'YYYYMMDD')+1,0) ||'일')  AS REQUEST_PERIOD
		            ,DECODE(T1.PROGRESS_STATUS,'E','자체마감','F','마감','') AS PROGRESS_STATUS
			FROM FSA_POOL_REQ T1
			WHERE 1=1
			<#if resultMonth?has_content>
			AND SUBSTR(T1.REQUEST_DATE,0,6) = :resultMonth
			</#if>
			<#if requestUpjangCd?has_content>
			AND T1.REQUEST_UPJANG_CD = :requestUpjangCd
			</#if>
			UNION ALL
			SELECT   '이월' AS NUM
		            ,T1.REQUEST_UPJANG_CD
		            ,(SELECT DISTINCT UPJANGNM FROM ST_UPJANG WHERE UPJANG = T1.REQUEST_UPJANG_CD) AS REQUEST_UPJANG_NM
		           -- ,(SELECT SIDO FROM SCC_ZIP WHERE ZIP = T1.ZIP_CODE GROUP BY SIDO) AS SIDO
		           ,(
                    SELECT SCC_CODE_NM('MA0040',A.LOC_CD)
                      FROM SCO_UPJANG_MST  A
                     WHERE A.UPJANG = T1.REQUEST_UPJANG_CD     
               		 ) SIDO
		            ,(SELECT NEED_NO_MAN FROM FSA_POOL_REQ WHERE REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND REQUEST_NUM=T1.REQUEST_NUM 
		            AND NEED_DUTY1='001' AND SUBSTR(T1.REQUEST_DATE,0,6) < :resultMonth) AS REQUEST_COOK  
		            ,(SELECT NEED_NO_MAN FROM FSA_POOL_REQ WHERE REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND REQUEST_NUM=T1.REQUEST_NUM 
		            AND NEED_DUTY1='002' AND SUBSTR(T1.REQUEST_DATE,0,6) < :resultMonth) AS REQUEST_COOK_SUB  
		            ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		            WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		            AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM
		            AND SUBSTR(TO_CHAR(A.CDATE,'YYYYMMDD'),0,6) = :resultMonth AND  B.SUP_DUTY IN ('001','002') ) AS ASSIGN_COOK 
		             ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		            WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		            AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM
		            AND SUBSTR(TO_CHAR(A.CDATE,'YYYYMMDD'),0,6) = :resultMonth AND  B.SUP_DUTY NOT IN ('001','002')) AS ASSIGN_COOK_SUB
		            ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		            WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		            AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM
		            AND SUBSTR(TO_CHAR(A.UDATE,'YYYYMMDD'),0,6) = :resultMonth AND  B.SUP_DUTY IN ('001','002') AND A.GOOD_YN='G') AS ADOPTION_COOK
		            ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		            WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		            AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM
		            AND SUBSTR(TO_CHAR(A.UDATE,'YYYYMMDD'),0,6) = :resultMonth AND  B.SUP_DUTY NOT IN ('001','002') AND A.GOOD_YN='G') AS ADOPTION_COOK_SUB
		            ,T1.REQUEST_DATE
		            ,T1.LAST_CLOSE_DATE
		            ,DECODE(NVL(TO_DATE(T1.LAST_CLOSE_DATE,'YYYYMMDD') - TO_DATE(T1.REQUEST_DATE,'YYYYMMDD')+1,0) ||'일','0일','',NVL(TO_DATE(T1.LAST_CLOSE_DATE,'YYYYMMDD') - TO_DATE(T1.REQUEST_DATE,'YYYYMMDD')+1,0) ||'일')  AS REQUEST_PERIOD
		            ,DECODE(T1.PROGRESS_STATUS,'E','자체마감','F','마감','') AS PROGRESS_STATUS
			FROM FSA_POOL_REQ T1
			WHERE 1=1
			<#if resultMonth?has_content>
			AND SUBSTR(T1.REQUEST_DATE,0,6) < :resultMonth
			AND SUBSTR(T1.LAST_CLOSE_DATE,0,6) >= :resultMonth
			</#if>
			<#if requestUpjangCd?has_content>
			AND T1.REQUEST_UPJANG_CD = :requestUpjangCd
			</#if>
		)
		WHERE (NVL(REQUEST_COOK,0)+NVL(REQUEST_COOK_SUB,0)+ASSIGN_COOK+ASSIGN_COOK_SUB+ADOPTION_COOK+ADOPTION_COOK_SUB)  > 0    
		ORDER BY NUM, REQUEST_UPJANG_CD
		]]>
	</statement>

	<!-- 현장인력 채용지원 실적 목록을 조회한다. -->
	<statement name="selectResult" type="select">
		/*+ com.hwfs.fs.fsa.dao.AdoptionResultListDAO.selectResult */
		<![CDATA[
		SELECT
			 '당월실적' AS TITLE
			,SUM(REQUEST) AS REQUEST
			,SUM(ASSIGN) AS ASSIGN
			,SUM(ADOPTION) AS ADOPTION
		FROM
		(
			SELECT
		            (SELECT NEED_NO_MAN FROM FSA_POOL_REQ WHERE REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND REQUEST_NUM=T1.REQUEST_NUM AND SUBSTR(T1.REQUEST_DATE,0,6) = :resultMonth) AS REQUEST
		            ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		            WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		            AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM AND SUBSTR(TO_CHAR(A.CDATE,'YYYYMMDD'),0,6) = :resultMonth) AS ASSIGN
		            ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		            WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		            AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM AND A.GOOD_YN='G' AND SUBSTR(TO_CHAR(A.UDATE,'YYYYMMDD'),0,6) = :resultMonth) AS ADOPTION
			FROM FSA_POOL_REQ T1
			WHERE 1=1
			AND SUBSTR(T1.REQUEST_DATE,0,6) <= :resultMonth
			AND SUBSTR(T1.LAST_CLOSE_DATE,0,6) >= :resultMonth
			<#if requestUpjangCd?has_content>
			AND T1.REQUEST_UPJANG_CD = :requestUpjangCd
			</#if>
		)
		UNION ALL
		SELECT
			 '누계실적' AS TITLE
			,SUM(REQUEST) AS REQUEST
			,SUM(ASSIGN) AS ASSIGN
			,SUM(ADOPTION) AS ADOPTION
		FROM
		(
		SELECT
	            (SELECT NEED_NO_MAN FROM FSA_POOL_REQ WHERE REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND REQUEST_NUM=T1.REQUEST_NUM ) AS REQUEST
	            ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
	            WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
	            AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM 
	            AND SUBSTR(T1.REQUEST_DATE,0,4) = :thisYear AND SUBSTR(TO_CHAR(A.CDATE,'YYYYMMDD'),0,6) <= :resultMonth) AS ASSIGN
	            ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
	            WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
	            AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM AND A.GOOD_YN='G'
	            AND SUBSTR(T1.REQUEST_DATE,0,4) = :thisYear AND SUBSTR(TO_CHAR(A.UDATE,'YYYYMMDD'),0,6) <= :resultMonth) AS ADOPTION
		FROM FSA_POOL_REQ T1
		WHERE 1=1
		AND SUBSTR(T1.REQUEST_DATE,0,4) = :thisYear
		AND SUBSTR(T1.REQUEST_DATE,0,6) <= :resultMonth
		<#if requestUpjangCd?has_content>
		AND T1.REQUEST_UPJANG_CD = :requestUpjangCd
		</#if>
		)
		]]>
	</statement>

	<!-- 현장인력 채용지원 실적 목록을 조회한다. -->
	<statement name="selectUpjangResult" type="select">
		/*+ com.hwfs.fs.fsa.dao.AdoptionResultListDAO.selectUpjangResult */
		<![CDATA[
		SELECT
		         MAX(XX.TITLE) TITLE
		        ,SUM(XX.REQUEST_COOK)||' ( '||SUM(XX.REQUEST_COOK_SUB)||' )' AS REQUEST
		        ,SUM(XX.ASSIGN_COOK)||' ( '||SUM(XX.ASSIGN_COOK_SUB)||' )'  AS ASSIGN
		        ,SUM(XX.ADOPTION_COOK)||' ( '||SUM(XX.ADOPTION_COOK_SUB)||' )'  AS ADOPTION
		        ,MAX(XX.REMARK) AS REMARK
		FROM (
		            SELECT  
		                       '당월요청실적(업장)' AS TITLE  
		                      ,SUM(NVL(REQUEST_COOK,0)) AS REQUEST_COOK
		                      ,SUM(NVL(REQUEST_COOK_SUB,0)) AS REQUEST_COOK_SUB
		                      ,SUM(ASSIGN_COOK) AS ASSIGN_COOK
		                      ,SUM(ASSIGN_COOK_SUB) AS ASSIGN_COOK_SUB
		                      ,SUM(ADOPTION_COOK) AS ADOPTION_COOK
		                      ,SUM(ADOPTION_COOK_SUB) AS ADOPTION_COOK_SUB
		                      ,'' AS REMARK
		            FROM            
		                       ( SELECT      
		                                 (SELECT NEED_NO_MAN FROM FSA_POOL_REQ WHERE REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND REQUEST_NUM=T1.REQUEST_NUM 
		                                AND NEED_DUTY1='001' AND SUBSTR(T1.REQUEST_DATE,0,6) = :resultMonth) AS REQUEST_COOK  
		                                ,(SELECT NEED_NO_MAN FROM FSA_POOL_REQ WHERE REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND REQUEST_NUM=T1.REQUEST_NUM 
		                                AND NEED_DUTY1='002' AND SUBSTR(T1.REQUEST_DATE,0,6) = :resultMonth) AS REQUEST_COOK_SUB  
		                                ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		                                WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		                                AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM
		                                AND SUBSTR(TO_CHAR(A.CDATE,'YYYYMMDD'),0,6) = :resultMonth AND  B.SUP_DUTY IN ('001','002')) AS ASSIGN_COOK 
		                                 ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		                                WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		                                AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM
		                                AND SUBSTR(TO_CHAR(A.CDATE,'YYYYMMDD'),0,6) = :resultMonth AND  B.SUP_DUTY NOT IN ('001','002')) AS ASSIGN_COOK_SUB
		                                ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		                                WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		                                AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM
		                                AND SUBSTR(TO_CHAR(A.UDATE,'YYYYMMDD'),0,6) = :resultMonth AND  B.SUP_DUTY IN ('001','002') AND A.GOOD_YN='G') AS ADOPTION_COOK
		                                ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		                                WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		                                AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM
		                                AND SUBSTR(TO_CHAR(A.UDATE,'YYYYMMDD'),0,6) = :resultMonth AND  B.SUP_DUTY NOT IN ('001','002') AND A.GOOD_YN='G') AS ADOPTION_COOK_SUB
		                        FROM FSA_POOL_REQ T1
		                        WHERE 1=1
		                        AND SUBSTR(T1.REQUEST_DATE,0,6) = :resultMonth
		                        <#if requestUpjangCd?has_content>
								AND T1.REQUEST_UPJANG_CD = :requestUpjangCd
								</#if>
		                      )  
		            UNION ALL
		            SELECT  '당월요청실적(업장)' AS TITLE
		                        ,0 AS REQUEST_COOK,  0 AS REQUEST_COOK_SUB 
		                        ,0 AS ASSIGN_COOK,  0 AS ASSIGN_COOK_SUB 
		                        ,0 AS ADOPTION_COOK,  0 AS ADOPTION_COOK_SUB
		                        ,LISTAGG(CC.UPJANGNM, ',    ') WITHIN GROUP (ORDER BY CC.UPJANGNM) AS REMARK
		            FROM (
		                     SELECT C.UPJANGNM, COUNT(*)
		                       FROM FSA_POOL_ASSIGN   A, 
		                            FSA_POOL_MASTER   B,
		                            SCO_UPJANG_MST_V  C,
		                            FSA_POOL_REQ      T1
		                      WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		                        AND A.GOOD_YN='G'
		                        AND A.REQUEST_UPJANG_CD = C.UPJANG
		                        AND SUBSTR(TO_CHAR(A.UDATE,'YYYYMMDD'),0,6) = :resultMonth
		                        AND SUBSTR(T1.REQUEST_DATE,0,6) <= :resultMonth
		                        AND SUBSTR(T1.LAST_CLOSE_DATE,0,6) >= :resultMonth     
		                        AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD 
		                        AND A.REQUEST_NUM=T1.REQUEST_NUM     
		                        <#if requestUpjangCd?has_content>
								AND T1.REQUEST_UPJANG_CD = :requestUpjangCd
								</#if>                      
		                      GROUP BY C.UPJANGNM
		                 ) CC         
		             )    XX
		UNION ALL          
		SELECT
		         MAX(XX.TITLE) TITLE
		        ,SUM(XX.REQUEST_COOK)||' ( '||SUM(XX.REQUEST_COOK_SUB)||' )' AS REQUEST
		        ,SUM(XX.ASSIGN_COOK)||' ( '||SUM(XX.ASSIGN_COOK_SUB)||' )'  AS ASSIGN
		        ,SUM(XX.ADOPTION_COOK)||' ( '||SUM(XX.ADOPTION_COOK_SUB)||' )'  AS ADOPTION
		        ,MAX(XX.REMARK) AS REMARK
		FROM (
		            SELECT  
		                       '이월업장실적' AS TITLE  
		                      ,SUM(NVL(REQUEST_COOK,0)) AS REQUEST_COOK
		                      ,SUM(NVL(REQUEST_COOK_SUB,0)) AS REQUEST_COOK_SUB
		                      ,SUM(ASSIGN_COOK) AS ASSIGN_COOK
		                      ,SUM(ASSIGN_COOK_SUB) AS ASSIGN_COOK_SUB
		                      ,SUM(ADOPTION_COOK) AS ADOPTION_COOK
		                      ,SUM(ADOPTION_COOK_SUB) AS ADOPTION_COOK_SUB
		                      ,'' AS REMARK
		            FROM            
		                       ( SELECT      
		                                 (SELECT NEED_NO_MAN FROM FSA_POOL_REQ WHERE REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND REQUEST_NUM=T1.REQUEST_NUM 
		                                AND NEED_DUTY1='001' AND SUBSTR(T1.REQUEST_DATE,0,6) = :resultMonth) AS REQUEST_COOK  
		                                ,(SELECT NEED_NO_MAN FROM FSA_POOL_REQ WHERE REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND REQUEST_NUM=T1.REQUEST_NUM 
		                                AND NEED_DUTY1='002' AND SUBSTR(T1.REQUEST_DATE,0,6) = :resultMonth) AS REQUEST_COOK_SUB  
		                                ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		                                WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		                                AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM
		                                AND SUBSTR(TO_CHAR(A.CDATE,'YYYYMMDD'),0,6) = :resultMonth AND  B.SUP_DUTY IN ('001','002')) AS ASSIGN_COOK 
		                                 ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		                                WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		                                AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM
		                                AND SUBSTR(TO_CHAR(A.CDATE,'YYYYMMDD'),0,6) = :resultMonth AND  B.SUP_DUTY NOT IN ('001','002')) AS ASSIGN_COOK_SUB
		                                ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		                                WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		                                AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM
		                                AND SUBSTR(TO_CHAR(A.UDATE,'YYYYMMDD'),0,6) = :resultMonth AND  B.SUP_DUTY IN ('001','002') AND A.GOOD_YN='G') AS ADOPTION_COOK
		                                ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		                                WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		                                AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM
		                                AND SUBSTR(TO_CHAR(A.UDATE,'YYYYMMDD'),0,6) = :resultMonth AND  B.SUP_DUTY NOT IN ('001','002') AND A.GOOD_YN='G') AS ADOPTION_COOK_SUB
		                        FROM FSA_POOL_REQ T1
		                        WHERE 1=1
		                        AND SUBSTR(T1.REQUEST_DATE,0,6) < :resultMonth
		                        AND SUBSTR(T1.LAST_CLOSE_DATE,0,6) >= :resultMonth
		                        <#if requestUpjangCd?has_content>
								AND T1.REQUEST_UPJANG_CD = :requestUpjangCd
								</#if>
		                      )  
		            UNION ALL
		            SELECT  '이월업장실적' AS TITLE
		                        ,0 AS REQUEST_COOK,  0 AS REQUEST_COOK_SUB 
		                        ,0 AS ASSIGN_COOK,  0 AS ASSIGN_COOK_SUB 
		                        ,0 AS ADOPTION_COOK,  0 AS ADOPTION_COOK_SUB
		                        ,LISTAGG(CC.UPJANGNM, ', ') WITHIN GROUP (ORDER BY CC.UPJANGNM) AS REMARK
		            FROM (
		                     SELECT C.UPJANGNM, COUNT(*)
		                       FROM FSA_POOL_ASSIGN   A, 
		                            FSA_POOL_MASTER   B,
		                            SCO_UPJANG_MST_V  C,
		                            FSA_POOL_REQ      T1
		                      WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		                      AND A.GOOD_YN='G'
		                      AND A.REQUEST_UPJANG_CD = C.UPJANG
		                      AND SUBSTR(TO_CHAR(A.UDATE,'YYYYMMDD'),0,6) = :resultMonth
		                      AND SUBSTR(T1.REQUEST_DATE,0,6) < :resultMonth
		                      AND SUBSTR(T1.LAST_CLOSE_DATE,0,6) >= :resultMonth  
		                      AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD 
		                      AND A.REQUEST_NUM=T1.REQUEST_NUM    
	                          <#if requestUpjangCd?has_content>
							  AND T1.REQUEST_UPJANG_CD = :requestUpjangCd
							  </#if>                       
		                      GROUP BY C.UPJANGNM
		                 ) CC         
		             )    XX
		UNION ALL
		SELECT  
		           '당월실적' AS TITLE  
		          ,SUM(NVL(REQUEST_COOK,0))||' ( '||SUM(NVL(REQUEST_COOK_SUB,0))||' )' AS REQUEST
		          ,SUM(ASSIGN_COOK)||' ( '||SUM(ASSIGN_COOK_SUB)||' )'  AS ASSIGN
		          ,SUM(ADOPTION_COOK)||' ( '||SUM(ADOPTION_COOK_SUB)||' )'  AS ADOPTION
		          ,'' AS REMARK
		FROM            
		           ( SELECT      
		                     (SELECT NEED_NO_MAN FROM FSA_POOL_REQ WHERE REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND REQUEST_NUM=T1.REQUEST_NUM 
		                    AND NEED_DUTY1='001' AND SUBSTR(T1.REQUEST_DATE,0,6) = :resultMonth) AS REQUEST_COOK  
		                    ,(SELECT NEED_NO_MAN FROM FSA_POOL_REQ WHERE REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND REQUEST_NUM=T1.REQUEST_NUM 
		                    AND NEED_DUTY1='002' AND SUBSTR(T1.REQUEST_DATE,0,6) = :resultMonth) AS REQUEST_COOK_SUB  
		                    ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		                    WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		                    AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM
		                    AND SUBSTR(TO_CHAR(A.CDATE,'YYYYMMDD'),0,6) = :resultMonth AND  B.SUP_DUTY IN ('001','002')) AS ASSIGN_COOK 
		                     ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		                    WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		                    AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM
		                    AND SUBSTR(TO_CHAR(A.CDATE,'YYYYMMDD'),0,6) = :resultMonth AND  B.SUP_DUTY NOT IN ('001','002')) AS ASSIGN_COOK_SUB
		                    ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		                    WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		                    AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM
		                    AND SUBSTR(TO_CHAR(A.UDATE,'YYYYMMDD'),0,6) = :resultMonth AND  B.SUP_DUTY IN ('001','002') AND A.GOOD_YN='G') AS ADOPTION_COOK
		                    ,(SELECT COUNT(*) FROM FSA_POOL_ASSIGN A, FSA_POOL_MASTER B 
		                    WHERE A.ADOPTION_NUM=B.ADOPTION_NUM
		                    AND A.REQUEST_UPJANG_CD=T1.REQUEST_UPJANG_CD AND A.REQUEST_NUM=T1.REQUEST_NUM
		                    AND SUBSTR(TO_CHAR(A.UDATE,'YYYYMMDD'),0,6) = :resultMonth AND  B.SUP_DUTY NOT IN ('001','002') AND A.GOOD_YN='G') AS ADOPTION_COOK_SUB
		            FROM FSA_POOL_REQ T1
		            WHERE 1=1
		            AND SUBSTR(T1.REQUEST_DATE,0,6) <= :resultMonth
		            AND SUBSTR(T1.LAST_CLOSE_DATE,0,6) >= :resultMonth
		            <#if requestUpjangCd?has_content>
					AND T1.REQUEST_UPJANG_CD = :requestUpjangCd
					</#if>
		            )
		]]>
	</statement>
	

</hqml>
