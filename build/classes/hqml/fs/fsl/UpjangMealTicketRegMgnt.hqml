<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="fs.fsl.upjangMealTicketRegMgntDAO">
	<desc>선수금관리 HQML Query</desc>

	<!-- 선수금관리 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.selectList */
		<![CDATA[
		SELECT * FROM ( 
			(SELECT M.ADVANCE_CLASS 
			        ,M.OCCUR_ADVANCE_NUM
                 , (SELECT CODE_NAME
                      FROM   SCC_COMMON_CODE 
                      WHERE  GROUP_CODE = 'ADVANCE_CLASS'
                      AND    USE_YN = 'Y'
                      AND    CODE = M.ADVANCE_CLASS) ADVANCE_CLASS_NM
			     , M.SYS_CLASS
			     , M.SALE_DATE OCCUR_DATE
			     , M.UPJANG_CD
			     , M.RECEIPT_NUM
			     , M.WH_NUM AS POS_GUESTINFO
	             , M.WH_NM AS POS_GUESTINFO_NM
	             , (SELECT OUTVAT_FLAG FROM HLDC_PO_SUBINVENTORY WHERE UPJANG= M.UPJANG_CD AND SUBINV_CODE = M.WH_NUM) POS_OUTVAT_FLAG 
			     , M.WH_CD
			     , M.ITEM_CD
			     , (SELECT A.ITEM_NAME|| '; '  ||A.ITEM_SIZE || '; ' || A.PO_UOM AS ITEM_NAME 
			     	FROM MAS_TICKET_STD V
			     	, HLDC_PO_ITEM_MST A 
			     	WHERE V.ITEM_CODE = A.ITEM_CODE 
			     	AND V.ITEM_CODE = M.ITEM_CD 
			     	AND V.UPJANG = :upjangCd) ITEM_NM 
			     , M.MEAL_TICKET_PCNT QTY
			     , M.MEAL_TICKET_UPRICE UPRICE
			     , M.MEAL_TICKET_AMT AMT
			     , M.VAT_CD 
			     , M.SUPPLY_AMT
			     , M.VAT_AMT
			     , M.MU_CD
			     , M.DDDD_CLOSE_YN
			     , M.DDDD_CLOSE_DATE
			     , M.CC_CD
			     , W.REMARK
			     , W.SETTLE_CLASS
			     , W.SETTLE_REF_INFO  
			     , W.SETTLE_AMT
			     , W.CUST_CD
			     , W.CUST_NM
			     , W.ENC_SETTLEINFO
			     , W.SEQ
			     , C.CARD_COM_CD
	             , C.ENC_CARD_NUM
	             , (SELECT  A.BUYCPNY_NM  -- 매입사명
	                        FROM SLA_BUY_CPNY_MGMT A
	                        ,SLA_FRNC_STOR_MGMT B
	                      WHERE A.RECD_STATUS = 'L'
	                        AND B.RECD_STATUS = 'L'
	                        AND A.BUYCPNY_CD = B.BUYCPNY_CD 
	                        AND A.BUYCPNY_CD = C.BUYCPNY_CD  
	                        AND B.CARD_CLASS = 'N'/*신용카드*/
	                        AND B.UPJANG_CD = :upjangCd    ) BUYCPNY_NM
	             , (SELECT MIN(TICKET_STARTNUM) FROM MAS_TICKET_MST WHERE RECEIPT_NUM = M.RECEIPT_NUM AND UPJANG = :upjangCd) TICKET_STARTNUM
	             , (SELECT MAX(TICKET_ENDNUM) FROM MAS_TICKET_MST WHERE RECEIPT_NUM =  M.RECEIPT_NUM AND UPJANG = :upjangCd) TICKET_ENDNUM 
	             , (SELECT D.TAX_SHET_PUBLISH_YN FROM MAS_TICKET_STD D WHERE D.ITEM_CODE = M.ITEM_CD AND D.USE_YN = 'Y' AND D.UPJANG = :upjangCd) TAX_SHET_PUBLISH_YN
	             , DECODE((SELECT  COUNT(X.ADVANCE_NUM)                   -- 선수금 번호
	                        FROM    SLA_ADVANCE_MST X
	                        WHERE   X.RECD_STATUS = 'L'
	                        AND     X.CUST_CD = W.CUST_CD
	                        AND     X.MU_CD = :muCd
	                        AND     X.CC_CD IN (
	                                        SELECT  A.CC_CD
	                                        FROM    SCC_CC A
	                                                ,HLDC_SC_DEPT_V B
	                                        WHERE   B.CC_CD = A.CC_CD
	                                        AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
	                                        AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
	                                        AND     B.TM_CD = :schTm
	                                        )
	                        <#if ccCd?has_content>AND     X.CC_CD = :ccCd </#if>
	                        AND     X.OCCUR_AMT > 0
	                        AND     X.RECEIPT_NUM = M.RECEIPT_NUM),0,'N','Y') AS SALE_OCCUR_YN  --매출발생여부   
	              ,C.FRNC_STOR_NUM 
	              ,C.BUYCPNY_CD
	              ,C.DEAL_TYPE
	              ,DECODE(W.SETTLE_CLASS,'3',M.MEAL_TICKET_AMT,0) VAR_SUS_AMT
	              ,NULL TMP_SEQ
	              ,M.UDATE
	              ,M.MODIFY_SALS_YN
	              ,(SELECT  DECODE(COUNT(*),0,'N','Y')
                      FROM  SLA_ADVANCE_MST X,
                            SLA_IF_UPJANG_PAYMENT  Z
                     WHERE M.SALE_DATE = X.OCCUR_DATE
                       AND M.UPJANG_CD  = X.UPJANG_CD
                       AND X.UPJANG_CD  = Z.UPJANG_CD
                       AND Z.EVIDENCE_1 IN (M.OCCUR_ADVANCE_NUM, X.ADVANCE_NUM) 
                       AND X.RECD_STATUS = 'L'
                       AND Z.RECD_STATUS = 'L'
                       AND M.OCCUR_ADVANCE_NUM = X.OCCUR_ADVANCE_NUM(+) 
                      ) AS SALE_RCVY
				  ,(SELECT DECODE(COUNT(*),0,'N','Y') FROM (
					SELECT M.ADVANCE_NUM, M.OCCUR_ADVANCE_NUM, '입금관리', RECEIVE_NUM, (M.OCCUR_SUPPLY_AMT+M.OCCUR_VAT_AMT) AS OCCUR_AMT, AD.RECEIVE_AMT, AD.RECEIVE_DATE
					FROM SLA_ADVANCE_MST M, SLA_ADVANCE_RECEIVE_WAY W, SLA_AR_RECEIVE_DETAIL AD
					WHERE M.ADVANCE_NUM = W.ADVANCE_NUM
						AND W.AR_NUM = AD.AR_NUM
					    AND M.RECD_STATUS ='L'
					    AND W.RECD_STATUS ='L'
					    AND AD.RECD_STATUS = 'L'
					UNION ALL     
					SELECT M.ADVANCE_NUM, M.OCCUR_ADVANCE_NUM, '영업수입현금', SALES_CASH_RECEIVE_NUM, (M.OCCUR_SUPPLY_AMT+M.OCCUR_VAT_AMT) AS OCCUR_AMT, C.RECEIVE_AMT, C.ALT_DATE
					FROM SLA_ADVANCE_MST M, SLA_ADVANCE_RECEIVE_WAY W, SLA_SALES_CASH_ALT_DETAIL C
					WHERE M.ADVANCE_NUM = W.ADVANCE_NUM
						AND W.SALES_CASH_NUM = C.SALES_CASH_NUM
					    AND M.RECD_STATUS ='L'
					    AND W.RECD_STATUS ='L'
					    AND C.RECD_STATUS = 'L'
					) A
					WHERE A.OCCUR_ADVANCE_NUM = M.OCCUR_ADVANCE_NUM) AS RECV_DLNG
					, (SELECT MAX(ADVANCE_NUM) FROM SLA_ADVANCE_MST X WHERE X.RECD_STATUS = 'L' AND X.OCCUR_ADVANCE_NUM = M.OCCUR_ADVANCE_NUM) AS ADVANCE_NUM
					, (SELECT  DECODE(COUNT(TAX.ADVANCE_NUM),0,'N','Y') FROM SLA_TAX_SHET_OCCUR_OBJ TAX, SLA_ADVANCE_MST XM  WHERE TAX.ADVANCE_NUM = XM.ADVANCE_NUM AND TAX.RECD_STATUS = 'L' AND XM.RECD_STATUS = 'L' AND XM.OCCUR_ADVANCE_NUM = M.OCCUR_ADVANCE_NUM) TAX_YN            -- 세금계산서발행여부
					, W.ALT_SEQ
			  FROM SLA_IF_MEAL_TICKET_SAL_MST M
			     ,SLA_IF_MEAL_TICKET_SETTLE_WAY W
	             ,SLA_IF_CARD_APPRV_INFO C
			 WHERE M.SYS_CLASS=W.SYS_CLASS
			       AND M.SALE_DATE=W.SALE_DATE
			       AND M.UPJANG_CD=W.UPJANG_CD
			       AND M.RECEIPT_NUM=W.RECEIPT_NUM
	               AND W.MU_CD = C.MU_CD(+)
	               AND W.RECEIPT_NUM = C.RECEIPT_NUM(+)
	               AND W.SEQ = C.SEQ(+)
	               AND W.UPJANG_CD = C.UPJANG_CD(+)
	               AND W.SYS_CLASS = C.SYS_CLASS(+)
			       AND M.SYS_CLASS = :sysClass
			       AND M.MU_CD = :muCd
			       AND M.SALE_DATE = :occurDate
			       AND M.UPJANG_CD = :upjangCd)
			       
			UNION ALL
			
			(SELECT M.ADVANCE_CLASS
			       ,M.OCCUR_ADVANCE_NUM 
                 , (SELECT CODE_NAME
                      FROM   SCC_COMMON_CODE 
                      WHERE  GROUP_CODE = 'ADVANCE_CLASS'
                      AND    USE_YN = 'Y'
                      AND    CODE = M.ADVANCE_CLASS) ADVANCE_CLASS_NM
			     , M.SYS_CLASS
			     , M.OCCUR_DATE
			     , M.UPJANG_CD
			     , M.RECEIPT_NUM
			     , M.POS_GUESTINFO
	             ,(SELECT SUBINV_NAME FROM HLDC_PO_SUBINVENTORY WHERE  UPJANG= M.UPJANG_CD AND SUBINV_CODE = M.POS_GUESTINFO ) POS_GUESTINFO_NM 
	             ,(SELECT OUTVAT_FLAG FROM HLDC_PO_SUBINVENTORY WHERE UPJANG= M.UPJANG_CD AND SUBINV_CODE = M.POS_GUESTINFO) POS_OUTVAT_FLAG 
			     , null WH_CD
			     , null ITEM_CD
			     , null ITEM_NM
			     , M.SAL_QUANTITY QTY
			     , M.UPRICE UPRICE
			     , M.AMT AMT
			     , NULL VAT_CD
			     , M.SUPPLY_AMT
			     , M.VAT_AMT
			     , M.MU_CD
			     , M.DDDD_CLOSE_YN
			     , M.DDDD_CLOSE_DATE
			     , M.CC_CD
			     , W.REMARK
			     , W.SETTLE_CLASS
			     , W.SETTLE_REF_INFO  
			     , W.SETTLE_AMT
			     , W.CUST_CD
			     , W.CUST_NM
			     , W.ENC_SETTLE_INFO
			     , W.SEQ
			     , C.CARD_COM_CD
	             , C.ENC_CARD_NUM
	             , (SELECT  A.BUYCPNY_NM  -- 매입사명
	                        FROM SLA_BUY_CPNY_MGMT A
	                        ,SLA_FRNC_STOR_MGMT B
	                      WHERE A.RECD_STATUS = 'L'
	                        AND B.RECD_STATUS = 'L'
	                        AND A.BUYCPNY_CD = B.BUYCPNY_CD 
	                        AND A.BUYCPNY_CD = C.BUYCPNY_CD  
	                        AND B.CARD_CLASS = 'N'/*신용카드*/
	                        AND B.UPJANG_CD = :upjangCd    ) BUYCPNY_NM
	             , NULL TICKET_STARTNUM
	             , NULL TICKET_ENDNUM
	             , NULL TAX_SHET_PUBLISH_YN
	             , DECODE((SELECT  COUNT(X.ADVANCE_NUM)                   -- 선수금 번호
	                        FROM    SLA_ADVANCE_MST X
	                        WHERE   X.RECD_STATUS = 'L'
	                        AND     X.CUST_CD = W.CUST_CD
	                        AND     X.MU_CD = :muCd
	                        AND     X.CC_CD IN (
	                                        SELECT  A.CC_CD
	                                        FROM    SCC_CC A
	                                                ,HLDC_SC_DEPT_V B
	                                        WHERE   B.CC_CD = A.CC_CD
	                                        AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
	                                        AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
	                                        AND     B.TM_CD = :schTm
	                                        )
	                        <#if ccCd?has_content> AND     X.CC_CD = :ccCd </#if>
	                        AND     X.OCCUR_AMT > 0
	                        AND     X.RECEIPT_NUM = M.RECEIPT_NUM),0,'N','Y') AS SALE_OCCUR_YN  --매출발생여부
	              ,C.FRNC_STOR_NUM 
	              ,C.BUYCPNY_CD
	              ,C.DEAL_TYPE
	              ,DECODE(W.SETTLE_CLASS,'3',M.AMT,0) VAR_SUS_AMT
	              ,NULL TMP_SEQ
	              ,M.UDATE
	              ,M.MODIFY_SALS_YN
	              ,(SELECT  DECODE(COUNT(*),0,'N','Y')
                      FROM  SLA_ADVANCE_MST X,
                            SLA_IF_UPJANG_PAYMENT  Z
                     WHERE M.OCCUR_DATE = X.OCCUR_DATE
                       AND M.UPJANG_CD  = X.UPJANG_CD
                       AND X.UPJANG_CD  = Z.UPJANG_CD
                       AND Z.EVIDENCE_1 IN (M.OCCUR_ADVANCE_NUM, X.ADVANCE_NUM) 
                       AND X.RECD_STATUS = 'L'
                       AND Z.RECD_STATUS = 'L'
                       AND M.OCCUR_ADVANCE_NUM = X.OCCUR_ADVANCE_NUM 
                      ) AS SALE_RCVY
				  ,(SELECT DECODE(COUNT(*),0,'N','Y') FROM (
					SELECT M.ADVANCE_NUM, M.OCCUR_ADVANCE_NUM, '입금관리', RECEIVE_NUM, (M.OCCUR_SUPPLY_AMT+M.OCCUR_VAT_AMT) AS OCCUR_AMT, AD.RECEIVE_AMT, AD.RECEIVE_DATE
					FROM SLA_ADVANCE_MST M, SLA_ADVANCE_RECEIVE_WAY W, SLA_AR_RECEIVE_DETAIL AD
					WHERE M.ADVANCE_NUM = W.ADVANCE_NUM
						AND W.AR_NUM = AD.AR_NUM
					    AND M.RECD_STATUS ='L'
					    AND W.RECD_STATUS ='L'
					    AND AD.RECD_STATUS = 'L'
					UNION ALL     
					SELECT M.ADVANCE_NUM, M.OCCUR_ADVANCE_NUM, '영업수입현금', SALES_CASH_RECEIVE_NUM, (M.OCCUR_SUPPLY_AMT+M.OCCUR_VAT_AMT) AS OCCUR_AMT, C.RECEIVE_AMT, C.ALT_DATE
					FROM SLA_ADVANCE_MST M, SLA_ADVANCE_RECEIVE_WAY W, SLA_SALES_CASH_ALT_DETAIL C
					WHERE M.ADVANCE_NUM = W.ADVANCE_NUM
						AND W.SALES_CASH_NUM = C.SALES_CASH_NUM
					    AND M.RECD_STATUS ='L'
					    AND W.RECD_STATUS ='L'
					    AND C.RECD_STATUS = 'L'
					) A
					WHERE A.OCCUR_ADVANCE_NUM = M.OCCUR_ADVANCE_NUM) AS RECV_DLNG                      
					, (SELECT MAX(ADVANCE_NUM) FROM SLA_ADVANCE_MST X WHERE X.RECD_STATUS = 'L' AND X.OCCUR_ADVANCE_NUM = M.OCCUR_ADVANCE_NUM) AS ADVANCE_NUM
					, 'N' AS TAX_YN
					, W.ALT_SEQ
			  FROM SLA_IF_ADVANCE_OCCUR M
			     ,SLA_IF_ADVANCE_SETTLE_WAY W
	             ,SLA_IF_CARD_APPRV_INFO C
			 WHERE M.SYS_CLASS=W.SYS_CLASS
			       AND M.OCCUR_DATE=W.OCCUR_DATE
			       AND M.UPJANG_CD=W.UPJANG_CD
			       AND M.RECEIPT_NUM=W.RECEIPT_NUM
	               AND W.OCCUR_DATE = C.OCCUR_DATE(+)
	               AND W.MU_CD = C.MU_CD(+)
	               AND W.RECEIPT_NUM = C.RECEIPT_NUM(+)
	               AND W.SEQ = C.SEQ(+)
	               AND W.UPJANG_CD = C.UPJANG_CD(+)
	               AND W.SYS_CLASS = C.SYS_CLASS(+)
			 	   AND M.SYS_CLASS = :sysClass
			 	   AND M.MU_CD = :muCd
			       AND M.OCCUR_DATE = :occurDate
			       AND M.UPJANG_CD = :upjangCd) 
		 )
		 ORDER BY UDATE DESC
		]]>
	</statement>



	<!-- 선수금 결제 수단에 SEQ번호를 생성 한다. -->
	<statement name="advanceSeq" type="select">
		/*+ com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.advanceSeq */
		<![CDATA[
			SELECT TO_CHAR(NVL(MAX(seq),0)+1) FROM SLA_IF_ADVANCE_SETTLE_WAY
			WHERE SYS_CLASS = :sysClass
			AND OCCUR_DATE = :occurDate
			AND UPJANG_CD = :upjangCd
			AND RECEIPT_NUM = :receiptNum
		]]>
	</statement>

	<!-- 식권 결재 수단에 SEQ를 생성한다. -->
	<statement name="ticketSeq" type="select">
		/*+ com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.ticketSeq */
		<![CDATA[
			SELECT TO_CHAR(NVL(MAX(seq),0)+1) FROM SLA_IF_MEAL_TICKET_SETTLE_WAY
			WHERE SYS_CLASS = :sysClass
			AND SALE_DATE = :occurDate
			AND UPJANG_CD = :upjangCd
			AND RECEIPT_NUM = :receiptNum
		]]>
	</statement>

	<!-- IF 식권판매 마스터(을)를 등록한다. -->
	<statement name="ticketSalMst_insert" type="insert">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.ticketSalMst_insert
		*/
		<![CDATA[
		INSERT INTO SLA_IF_MEAL_TICKET_SAL_MST
		(
		 OCCUR_ADVANCE_NUM,
		 SYS_CLASS,
		 ADVANCE_CLASS,
		 SALE_DATE,
		 UPJANG_CD,
		 RECEIPT_NUM,
		 WH_CD,
		 ITEM_CD,
		 MEAL_TICKET_PCNT,
		 MEAL_TICKET_UPRICE,
		 MEAL_TICKET_AMT,
		 CUST_CD,
		 VAT_CD,
		 SUPPLY_AMT,
		 VAT_AMT,
		 TAX_SHET_PUBLISH_YN,
		 MU_CD,
		 WH_NUM,
         WH_NM,
		 DDDD_CLOSE_YN,
		 DDDD_CLOSE_DATE,
		 MODIFY_SALS_YN,
		 CC_CD,
		 CUSER,
		 CDATE,
		 UUSER,
		 UDATE
		) VALUES (
		 --(SELECT 'T' || :occurDate || SUBSTR('0000' || (NVL(MAX(TO_NUMBER(SUBSTR(OCCUR_ADVANCE_NUM,10,4))),0)+1), -4) FROM SLA_IF_MEAL_TICKET_SAL_MST WHERE SUBSTR(OCCUR_ADVANCE_NUM,2,8) = :occurDate),
		 'T' || :occurDate || SLA_IF_OCCUR_ADVANCE_NUM_S.NEXTVAL,
		 :sysClass,
		 <#if advanceClass?has_content> :advanceClass, <#else> null, </#if>
		 :occurDate,
		 :upjangCd,
		 :receiptNum,
		<#if whCd?has_content> :whCd, <#else> null, </#if>
		<#if itemCd?has_content> :itemCd, <#else> null, </#if>
		<#if qty?has_content> :qty, <#else> null, </#if>
		<#if uprice?has_content> :uprice, <#else> null, </#if>
		<#if amt?has_content> :amt, <#else> null, </#if>
		<#if custCd?has_content> :custCd, <#else> null, </#if>
		<#if vatCd?has_content> :vatCd, <#else> null, </#if>
		<#if supplyAmt?has_content> :supplyAmt, <#else> null, </#if>
		<#if vatAmt?has_content> :vatAmt, <#else> null, </#if>
		<#if taxShetPublishYn?has_content> :taxShetPublishYn, <#else> null, </#if>
		<#if muCd?has_content> :muCd, <#else> null, </#if>
		<#if posGuestinfo?has_content> :posGuestinfo, <#else> null, </#if>
		<#if posGuestinfoNm?has_content> :posGuestinfoNm, <#else> null, </#if>
		'N',
		null,
		<#if modifySalsYn?has_content> :modifySalsYn, <#else> 'N', </#if>
		<#if ccCd?has_content> :ccCd, <#else> null, </#if>
		 :loginSabun,
		 SYSDATE,
		 :loginSabun,
		 SYSDATE
		)
		]]>
	</statement>


	<!-- IF 식권 결제 수단(을)를 등록한다. -->
	<statement name="ticketSettleWay_insert" type="insert">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.ticketSettleWay_insert
		*/
		<![CDATA[
		INSERT INTO SLA_IF_MEAL_TICKET_SETTLE_WAY
		(
		 SALE_DATE,
		 UPJANG_CD,
		 RECEIPT_NUM,
		 SEQ,
		 SYS_CLASS,
		 SETTLE_CLASS,
		 SETTLE_REF_INFO,
		 SETTLE_AMT,
		 CUST_CD,
		 CUST_NM,
		 ENC_SETTLEINFO,
		 MU_CD,
		 CC_CD,
		 DDDD_CLOSE_YN,
		 DDDD_CLOSE_DATE,
		 REMARK,
		 ALT_SEQ, 
		 CUSER,
		 CDATE,
		 UUSER,
		 UDATE
		) VALUES (
		 :occurDate,
		 :upjangCd,
		 :receiptNum,
		 (SELECT NVL(MAX(SEQ),0)+1 FROM SLA_IF_MEAL_TICKET_SETTLE_WAY WHERE RECEIPT_NUM =  :receiptNum AND UPJANG_CD = :upjangCd AND SALE_DATE = :occurDate AND SYS_CLASS = :sysClass),
		 :sysClass,
		<#if settleClass?has_content> :settleClass, <#else> null, </#if>
		<#if settleRefInfo?has_content> :settleRefInfo, <#else> null, </#if>
		<#if amt?has_content> :amt, <#else> null, </#if>
		<#if custCd?has_content> :custCd, <#else> null, </#if>
		<#if custNm?has_content> :custNm, <#else> null, </#if>
		<#if encSettleinfo?has_content> :encSettleinfo, <#else> null, </#if>
		<#if muCd?has_content> :muCd, <#else> null, </#if>
		<#if ccCd?has_content> :ccCd, <#else> null, </#if>
		'N',
		null,
		<#if remark?has_content> :remark, <#else> null, </#if>
		<#if altSeq?has_content> :altSeq, <#else> null, </#if>
		 :loginSabun,
		 SYSDATE,
		 :loginSabun,
		 SYSDATE
		)
		]]>
	</statement>

	<!-- IF 선수금 발생(을)를 등록한다. -->
	<statement name="advanceOccur_insert" type="insert">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.advanceOccur_insert
		*/
		<![CDATA[
		INSERT INTO SLA_IF_ADVANCE_OCCUR
		(
		 OCCUR_ADVANCE_NUM,
		 SYS_CLASS,
		 OCCUR_DATE,
		 UPJANG_CD,
		 RECEIPT_NUM,
		 POS_GUESTINFO,
		 CUST_NM,
		 TEL_NUM,
		 ADDR,
		 AMT,
		 SUPPLY_AMT,
		 VAT_AMT,
		 SETTLE_CLASS,
		 ADVANCE_CLASS,
		 MU_CD,
		 CC_CD,
		 DDDD_CLOSE_YN,
		 DDDD_CLOSE_DATE,
		 MODIFY_SALS_YN,
		 CUSER,
		 CDATE,
		 UUSER,
		 UDATE,
		 REMARK,
		 CUST_CD,
		 SAL_QUANTITY,
		 UPRICE
		) VALUES (
		 --(SELECT 'A' || :occurDate || SUBSTR('0000' || (NVL(MAX(TO_NUMBER(SUBSTR(OCCUR_ADVANCE_NUM,10,4))),0)+1), -4) FROM SLA_IF_ADVANCE_OCCUR WHERE SUBSTR(OCCUR_ADVANCE_NUM,2,8) = :occurDate),
		 'A' || :occurDate || SLA_IF_OCCUR_ADVANCE_NUM_S.NEXTVAL,
		 :sysClass,
		 :occurDate,
		 :upjangCd,
		 :receiptNum,
		<#if posGuestinfo?has_content> :posGuestinfo, <#else> null, </#if>
		<#if custNm?has_content> :custNm, <#else> null, </#if>
		<#if telNum?has_content> :telNum, <#else> null, </#if>
		<#if addr?has_content> :addr, <#else> null, </#if>
		<#if amt?has_content> :amt, <#else> null, </#if>
		<#if supplyAmt?has_content> :supplyAmt, <#else> null, </#if>
		<#if vatAmt?has_content> :vatAmt, <#else> null, </#if>
		<#if settleClass?has_content> :settleClass, <#else> null, </#if>
		<#if advanceClass?has_content> :advanceClass, <#else> null, </#if>
		<#if muCd?has_content> :muCd, <#else> null, </#if>
		<#if ccCd?has_content> :ccCd, <#else> null, </#if>
		'N',
		null,
		 <#if modifySalsYn?has_content> :modifySalsYn, <#else> 'N', </#if>
		 :loginSabun,
		 SYSDATE,
		 :loginSabun,
		 SYSDATE,
		 <#if remark?has_content> :remark, <#else> null, </#if>
		 <#if custCd?has_content> :custCd, <#else> null, </#if>
		 <#if qty?has_content> :qty, <#else> null, </#if>
		 <#if uprice?has_content> :uprice <#else> null </#if>
		)
		]]>
	</statement>

	<!-- IF 선수금 결제 수단(을)를 등록한다. -->
	<statement name="advanceSettleWay_insert" type="insert">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.advanceSettleWay_insert
		*/
		<![CDATA[
		INSERT INTO SLA_IF_ADVANCE_SETTLE_WAY
		(
		 SYS_CLASS,
		 OCCUR_DATE,
		 UPJANG_CD,
		 RECEIPT_NUM,
		 SEQ,
		 SETTLE_CLASS,
		 SETTLE_REF_INFO,
		 CUST_CD,
		 CUST_NM,
		 SETTLE_AMT,
		 ENC_SETTLE_INFO,
		 APPRV_NUM,
		 MU_CD,
		 CC_CD,
		 DDDD_CLOSE_YN,
		 DDDD_CLOSE_DATE,
		 REMARK,
		 ALT_SEQ,
		 CUSER,
		 CDATE,
		 UUSER,
		 UDATE
		) VALUES (
		 :sysClass,
		 :occurDate,
		 :upjangCd,
		 :receiptNum,
		 :seq,
		<#if settleClass?has_content> :settleClass, <#else> null, </#if>
		<#if settleRefInfo?has_content> :settleRefInfo, <#else> null, </#if>
		<#if custCd?has_content> :custCd, <#else> null, </#if>
		<#if custNm?has_content> :custNm, <#else> null, </#if>
		<#if amt?has_content> :amt, <#else> null, </#if>
		<#if encSettleInfo?has_content> :encSettleInfo, <#else> null, </#if>
		<#if apprvNum?has_content> :apprvNum, <#else> null, </#if>
		<#if muCd?has_content> :muCd, <#else> null, </#if>
		<#if ccCd?has_content> :ccCd, <#else> null, </#if>
		'N',
		null,
		<#if remark?has_content> :remark, <#else> null, </#if>
		<#if altSeq?has_content> :altSeq, <#else> null, </#if>
		 :loginSabun,
		 SYSDATE,
		 :loginSabun,
		 SYSDATE
		)
		]]>
	</statement>

	<!--IF 카드승인 정보(을)를 등록한다. -->
	<statement name="cardApprvInfo_insert" type="insert">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.cardApprvInfo_insert
		*/
		<![CDATA[
			INSERT 
			  INTO SLA_IF_CARD_APPRV_INFO 
			       ( 
			           OCCUR_DATE
			         , SYS_CLASS
			         , SEQ
			         , POS_NUM
			         , RECEIPT_NUM
			         , CARD_CLASS
			         , CARD_NUM_VIEW
			         , ENC_CARD_NUM
			         , BUYCPNY_CD
			         , CARD_COM_CD
			         , APPRV_NUM
			         , APPRV_DATE
			         , APPRV_TIME
			         , USE_AMT
			         , ALLT_TERM
			         , VALID_YYMM
			         , MU_CD
			         , CC_CD
			         , UPJANG_CD
			         , FRNC_STOR_NUM
			         , VOID_YN
			         , RESERV_NUM
			         , REMARK
			         , DEAL_TYPE
			         , SALS_UUSER
			         , DDDD_CLOSE_YN
			         , DDDD_CLOSE_DATE
			         , MODIFY_SALS_YN
			         , DATA_CLASS
			         , RECD_STATUS
			         , CUSER
			         , CDATE
			         , UUSER
			         , UDATE 
			       ) VALUES (
			         :occurDate,
			         :sysClass,
			         :seq,
			        <#if posGuestinfo?has_content> :posGuestinfo, <#else> null, </#if>
			        :receiptNum,
			        'N',
			        <#if cardNumView?has_content> :cardNumView, <#else> null, </#if>
			        '',
			        <#if buycpnyCd?has_content> :buycpnyCd, <#else> null, </#if>
			        <#if cardComCd?has_content> :cardComCd, <#else> null, </#if>
			        <#if apprvNum?has_content> :apprvNum, <#else> null, </#if>
			        <#if apprvDate?has_content> :apprvDate, <#else> null, </#if>
			        <#if apprvTime?has_content> :apprvTime, <#else> null, </#if>
			        <#if amt?has_content> :amt, <#else> null, </#if>
			        <#if alltTerm?has_content> :alltTerm, <#else> null, </#if>
			        <#if validYymm?has_content> :validYymm, <#else> null, </#if>
			        :muCd,
			        (SELECT CC_CD FROM ST_UPJANG WHERE UPJANG = :upjangCd AND ROWNUM = 1),
			        :upjangCd,
			        <#if buycpnyCd?has_content>(SELECT B.FRNC_STOR_NUM
										        FROM SLA_BUY_CPNY_MGMT A
										             ,SLA_FRNC_STOR_MGMT B
										        WHERE A.RECD_STATUS = 'L'
										          AND B.RECD_STATUS = 'L'
										          AND A.BUYCPNY_CD = B.BUYCPNY_CD 
										          AND A.BUYCPNY_CD = :buycpnyCd  
										          AND B.CARD_CLASS = 'N'/*신용카드*/
										          AND B.UPJANG_CD =  :upjangCd), <#else> null, </#if>
			        <#if voidYn?has_content> DECODE(:voidYn, '1', 'Y', 'N'), <#else> null, </#if>
			        <#if reservNum?has_content> :reservNum, <#else> null, </#if>
			        <#if remark?has_content> :remark, <#else> null, </#if>
			        <#if dealType?has_content> :dealType, <#else> null, </#if>
			        <#if salsUuser?has_content> :salsUuser, <#else> null, </#if>
			        'N',
			        <#if ddddCloseDate?has_content> :ddddCloseDate, <#else> null, </#if>
			        'N',
			        '1',
			        'L',
			         :loginSabun,
			         SYSDATE,
			         :loginSabun,
			         SYSDATE
					)
		]]>
	</statement>

	<!-- IF 식권판매 마스터(을)를 수정한다. -->
	<statement name="ticketSalMst_update" type="update">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.ticketSalMst_update
		*/
		<![CDATA[
		UPDATE SLA_IF_MEAL_TICKET_SAL_MST SET
		<#if whCd?has_content> WH_CD = :whCd, </#if>
		<#if itemCd?has_content> ITEM_CD = :itemCd, </#if>
		<#if qty?has_content> MEAL_TICKET_PCNT = :qty, </#if>
		<#if uprice?has_content> MEAL_TICKET_UPRICE = :uprice, </#if>
		<#if amt?has_content> MEAL_TICKET_AMT = :amt, </#if>
		<#if custCd?has_content> CUST_CD = :custCd, </#if>
		<#if vatCd?has_content> VAT_CD = :vatCd, </#if>
		<#if supplyAmt?has_content> SUPPLY_AMT = :supplyAmt, </#if>
		<#if vatAmt?has_content> VAT_AMT = :vatAmt, </#if>
		<#if taxShetPublishYn?has_content> TAX_SHET_PUBLISH_YN = :taxShetPublishYn, </#if>
		<#if posGuestinfo?has_content> WH_NUM = :posGuestinfo,</#if>
		<#if advanceClass?has_content> ADVANCE_CLASS = :advanceClass, </#if>
		<#if posGuestinfoNm?has_content> WH_NM = :posGuestinfoNm,</#if>
		       UUSER = :loginSabun,
		       UDATE = SYSDATE
		WHERE  SYS_CLASS = :sysClass
		AND    SALE_DATE = :occurDate
		AND    UPJANG_CD = :upjangCd
		AND    RECEIPT_NUM = :receiptNum
		]]>
	</statement>

	<!-- IF 식권 결제 수단(을)를 수정한다. -->
	<statement name="ticketSettleWay_update" type="update">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.ticketSettleWay_update
		*/
		<![CDATA[
		UPDATE SLA_IF_MEAL_TICKET_SETTLE_WAY SET
		<#if settleClass?has_content> SETTLE_CLASS = :settleClass, </#if>
		<#if settleRefInfo?has_content> SETTLE_REF_INFO = :settleRefInfo, </#if>
		<#if amt?has_content> SETTLE_AMT = :amt, </#if>
		<#if custCd?has_content> CUST_CD = :custCd, </#if>
		<#if custNm?has_content> CUST_NM = :custNm, </#if>
		<#if encSettleinfo?has_content> ENC_SETTLEINFO = :encSettleinfo, </#if>
		<#if remark?has_content> REMARK = :remark, </#if>
		       UUSER = :loginSabun,
		       UDATE = SYSDATE
		WHERE  SALE_DATE = :occurDate
		AND    UPJANG_CD = :upjangCd
		AND    RECEIPT_NUM = :receiptNum
		AND    SEQ = :seq
		AND    SYS_CLASS = :sysClass
		]]>
	</statement>

	<!-- IF 선수금 발생(을)를 수정한다. -->
	<statement name="advanceOccur_update" type="update">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.advanceOccur_update
		*/
		<![CDATA[
		UPDATE SLA_IF_ADVANCE_OCCUR SET
		<#if posGuestinfo?has_content> POS_GUESTINFO = :posGuestinfo, </#if>
		<#if custNm?has_content> CUST_NM = :custNm, </#if>
		<#if telNum?has_content> TEL_NUM = :telNum, </#if>
		<#if addr?has_content> ADDR = :addr, </#if>
		<#if amt?has_content> AMT = :amt, </#if>
		<#if supplyAmt?has_content> SUPPLY_AMT = :supplyAmt, </#if>
		<#if vatAmt?has_content> VAT_AMT = :vatAmt, </#if>
		<#if settleClass?has_content> SETTLE_CLASS = :settleClass, </#if>
		<#if advanceClass?has_content> ADVANCE_CLASS = :advanceClass, </#if>
		<#if remark?has_content> REMARK = :remark, </#if>
		<#if custCd?has_content> CUST_CD = :custCd, </#if>
		       UUSER = :loginSabun,
		       UDATE = SYSDATE
		WHERE  SYS_CLASS = :sysClass
		AND    OCCUR_DATE = :occurDate
		AND    UPJANG_CD = :upjangCd
		AND    RECEIPT_NUM = :receiptNum
		]]>
	</statement>

	<!-- IF 선수금 결제 수단(을)를 수정한다. -->
	<statement name="advanceSettleWay_update" type="update">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.advanceSettleWay_update
		*/
		<![CDATA[
		UPDATE SLA_IF_ADVANCE_SETTLE_WAY SET
		<#if settleClass?has_content> SETTLE_CLASS = :settleClass, </#if>
		<#if settleRefInfo?has_content> SETTLE_REF_INFO = :settleRefInfo, </#if>
		<#if custCd?has_content> CUST_CD = :custCd, </#if>
		<#if custNm?has_content> CUST_NM = :custNm, </#if>
		<#if amt?has_content> SETTLE_AMT = :amt, </#if>
		<#if encSettleInfo?has_content> ENC_SETTLE_INFO = :encSettleInfo, </#if>
		<#if apprvNum?has_content> APPRV_NUM = :apprvNum, </#if>
		<#if muCd?has_content> MU_CD = :muCd, </#if>
		<#if ccCd?has_content> CC_CD = :ccCd, </#if>
		<#if remark?has_content> REMARK = :remark, </#if>
		       UUSER = :loginSabun,
		       UDATE = SYSDATE
		WHERE  SYS_CLASS = :sysClass
		AND    OCCUR_DATE = :occurDate
		AND    UPJANG_CD = :upjangCd
		AND    RECEIPT_NUM = :receiptNum
		AND    SEQ = :seq
		]]>
	</statement>


	<!--IF 카드 정보(을)를 수정한다. -->
	<statement name="cardApprvInfo_update" type="update">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.cardApprvInfo_update
		*/
		<![CDATA[
		UPDATE SLA_IF_CARD_APPRV_INFO SET
			<#if posGuestinfo?has_content> POS_NUM = :posGuestinfo, </#if>
			<#if cardClass?has_content> CARD_CLASS = :cardClass, </#if>
			<#if cardNumView?has_content> CARD_NUM_VIEW = :cardNumView, </#if>
			<#if buycpnyCd?has_content> BUYCPNY_CD = :buycpnyCd, </#if>
			<#if cardComCd?has_content> CARD_COM_CD = :cardComCd, </#if>
			<#if apprvNum?has_content> APPRV_NUM = :apprvNum, </#if>
			<#if apprvDate?has_content> APPRV_DATE = :apprvDate, </#if>
			<#if apprvTime?has_content> APPRV_TIME = :apprvTime, </#if>
			<#if amt?has_content> USE_AMT = :amt, </#if>
			<#if alltTerm?has_content> ALLT_TERM = :alltTerm, </#if>
			<#if validYymm?has_content> VALID_YYMM = :validYymm, </#if>
			<#if frncStorNum?has_content> FRNC_STOR_NUM = :frncStorNum, </#if>
			<#if voidYn?has_content> VOID_YN = DECODE(:voidYn, '1', 'Y', 'N'), </#if>
			<#if reservNum?has_content> RESERV_NUM = :reservNum, </#if>
			<#if remark?has_content> REMARK = :remark, </#if>
			<#if dealType?has_content> DEAL_TYPE = :dealType, </#if>
			<#if salsUuser?has_content> SALS_UUSER = :salsUuser, </#if>
			       UUSER = :loginSabun,
			       UDATE = SYSDATE
			WHERE  OCCUR_DATE = :occurDate
			AND    SYS_CLASS = :sysClass
			AND    SEQ = :seq
			AND    RECEIPT_NUM = :receiptNum
			AND    MU_CD = :muCd
			AND    UPJANG_CD = :upjangCd
		]]>
	</statement>

	<!-- IF 식권판매 마스터(을)를 삭제한다. -->
	<statement name="ticketSalMst_delete" type="delete">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.ticketSalMst_delete
		*/
		<![CDATA[
		DELETE
		FROM   SLA_IF_MEAL_TICKET_SAL_MST
		WHERE  SYS_CLASS = :sysClass
		AND    SALE_DATE = :occurDate
		AND    UPJANG_CD = :upjangCd
		AND    RECEIPT_NUM = :receiptNum
		]]>
	</statement>

	<!-- IF 식권 결제 수단(을)를 삭제한다. -->
	<statement name="ticketSettleWay_delete" type="delete">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.ticketSettleWay_delete
		*/
		<![CDATA[
		DELETE
		FROM   SLA_IF_MEAL_TICKET_SETTLE_WAY
		WHERE  SALE_DATE = :occurDate
		AND    UPJANG_CD = :upjangCd
		AND    RECEIPT_NUM = :receiptNum
		AND    SEQ = :seq
		AND    SYS_CLASS = :sysClass
		]]>
	</statement>

	<!-- IF 선수금 발생(을)를 삭제한다. -->
	<statement name="advanceOccur_delete" type="delete">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.advanceOccur_delete
		*/
		<![CDATA[
		DELETE
		FROM   SLA_IF_ADVANCE_OCCUR
		WHERE  SYS_CLASS = :sysClass
		AND    OCCUR_DATE = :occurDate
		AND    UPJANG_CD = :upjangCd
		AND    RECEIPT_NUM = :receiptNum
		]]>
	</statement>

	<!-- IF 선수금 결제 수단(을)를 삭제한다. -->
	<statement name="advanceSettleWay_delete" type="delete">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.advanceSettleWay_delete
		*/
		<![CDATA[
		DELETE
		FROM   SLA_IF_ADVANCE_SETTLE_WAY
		WHERE  SYS_CLASS = :sysClass
		AND    OCCUR_DATE = :occurDate
		AND    UPJANG_CD = :upjangCd
		AND    RECEIPT_NUM = :receiptNum
		]]>
	</statement>

	<!-- IF 카드 정보(을)를 삭제한다. -->
	<statement name="cardApprvInfo_delete" type="delete">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.cardApprvInfo_delete
		*/
		<![CDATA[
		DELETE
		FROM   SLA_IF_CARD_APPRV_INFO
		WHERE  OCCUR_DATE = :occurDate
		AND    SYS_CLASS = :sysClass
		AND    SEQ = :seq
		AND    RECEIPT_NUM = :receiptNum
		AND    MU_CD = :muCd
		AND    UPJANG_CD = :upjangCd
		]]>
	</statement>

	<!-- IF 카드 정보등록 여부(을)를 확인한다. -->
	<statement name="cardApprvInfo_cnt" type="select">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.cardApprvInfo_cnt
		*/
		<![CDATA[
		SELECT TO_CHAR(COUNT(*)) 
		FROM   SLA_IF_CARD_APPRV_INFO
		WHERE  OCCUR_DATE = :occurDate
		AND    SYS_CLASS = :sysClass
		AND    SEQ = :seq
		AND    RECEIPT_NUM = :receiptNum
		AND    MU_CD = :muCd
		AND    UPJANG_CD = :upjangCd
		]]>
	</statement>


	<!-- 선수금관리 목록을 조회한다. -->
	<statement name="ticketHistory" type="select">
		/*+ com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.ticketHistory
		*/
		<![CDATA[
			SELECT A.TRANS_DD
			     , (SELECT CODE_NAME 
			        FROM SCC_COMMON_CODE Z 
			        WHERE Z.GROUP_CODE = 'MA0121' 
			        AND Z.CODE = A.TRANS_TYPE) AS TRANS_TYPE_NM
			     , A.ITEM_TYPE
			     , (SELECT CODE_NAME 
			        FROM SCC_COMMON_CODE Z 
			        WHERE Z.GROUP_CODE = 'MA0122' 
			        AND Z.CODE = A.ITEM_TYPE) AS ITEM_TYPE_NM
			     , A.ITEM_CODE
			     , D.ITEM_NAME ||' '|| D.ITEM_SIZE ||' '              AS ITEM_CODENM
			     , A.UPRICE
			     , A.TICKET_STARTNUM
			     , A.TICKET_ENDNUM 
			     , DECODE(A.TRANS_TYPE, 'I', A.QTY, 0) AS IN_QTY
   			     , DECODE(A.TRANS_TYPE, 'I', 0, 'X',0 , A.QTY) AS OUT_QTY
                 , DECODE(A.TRANS_TYPE, 'X', A.QTY, 0) AS XC_QTY
			     , B.MAX_NUM
			     , B.JAN_QTY
			     , A.RECEIPT_NUM
			     , C.SETTLE_CLASS
			     , C.CUST_NM
			     , C.BUYCPNY_NM 
			  FROM MAS_TICKET_MST A
			     , (SELECT MAX(DECODE(Z.TRANS_TYPE, 'I', 0, Z.TICKET_ENDNUM))          AS MAX_NUM  
			             , SUM(DECODE(Z.TRANS_TYPE, 'I', Z.QTY, 'W', 0, (-1 * Z.QTY))) AS JAN_QTY
			          FROM MAS_TICKET_MST Z 
			         WHERE Z.UPJANG     = :upjangCd                -- 해당업장
			           AND Z.ITEM_CODE  = :itemCd             -- 해당식권자재코드
			           AND Z.TRANS_TYPE IN ('I','O','X')
			           AND Z.TRANS_GUBUN NOT IN ('XW')
			       ) B 
			     , (SELECT DISTINCT M.SALE_DATE
			             , M.UPJANG_CD
			             , M.RECEIPT_NUM
			             , (SELECT CODE_NAME 
			                FROM SCC_COMMON_CODE Z 
			                WHERE Z.GROUP_CODE = 'ADVANCE_SIGN_CLASS' 
			                AND Z.SET1 = W.SETTLE_CLASS) AS SETTLE_CLASS
			             , W.CUST_CD
			             , W.CUST_NM
			             , D.BUYCPNY_NM
			         FROM SLA_IF_MEAL_TICKET_SAL_MST M
			            , SLA_IF_MEAL_TICKET_SETTLE_WAY W
			            , SLA_IF_CARD_APPRV_INFO C
			            , SLA_BUY_CPNY_MGMT D
			        WHERE M.SYS_CLASS   = W.SYS_CLASS
			          AND M.SALE_DATE   = W.SALE_DATE
			          AND M.UPJANG_CD   = W.UPJANG_CD
			          AND M.RECEIPT_NUM = W.RECEIPT_NUM
			          AND W.SYS_CLASS   = C.SYS_CLASS(+)
			          AND W.SALE_DATE   = C.OCCUR_DATE(+)
			          AND W.UPJANG_CD   = C.UPJANG_CD(+)
			          AND W.RECEIPT_NUM = C.RECEIPT_NUM(+)
			          AND W.SEQ         = C.SEQ(+)
			          AND C.BUYCPNY_CD  = D.BUYCPNY_CD(+)
			          AND M.UPJANG_CD   = :upjangCd
			          AND M.SYS_CLASS   = :sysClass
			       ) C
			       , HLDC_PO_ITEM_MST D
			 WHERE A.UPJANG     = :upjangCd                 -- 해당업장
			   AND A.ITEM_CODE  = :itemCd                   -- 해당식권자재코드
			   AND A.TRANS_TYPE <> 'W'
			   AND A.TRANS_DD   = C.SALE_DATE(+)
			   AND A.UPJANG     = C.UPJANG_CD(+)
			   AND A.RECEIPT_NUM     = C.RECEIPT_NUM(+)
			   AND A.ITEM_CODE  = D.ITEM_CODE
			 ORDER BY A.TRANS_DD DESC, TRANS_TYPE_NM DESC, A.TICKET_STARTNUM DESC
		]]>
	</statement>

	<!-- 카드목록을 조회 한다. -->
	<statement name="cardList" type="select">
		/*+ com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.cardList */
		<![CDATA[
		SELECT  A.BUYCPNY_CD  -- 매입사코드
               ,A.BUYCPNY_NM  -- 매입사명
               ,A.CUST_CD  AS CARD_CUST_CD  -- 거래처코드
               ,A.BANK_CD     -- 은행코드
               ,B.FRNC_STOR_NUM
        FROM SLA_BUY_CPNY_MGMT A
             ,SLA_FRNC_STOR_MGMT B
        WHERE A.RECD_STATUS = 'L'
          AND B.RECD_STATUS = 'L'
          AND A.BUYCPNY_CD = B.BUYCPNY_CD  
          AND B.CARD_CLASS = 'N'/*신용카드*/
          AND B.UPJANG_CD = <#if upjangCd?has_content> :upjangCd<#else> null </#if>   
        ORDER BY BUYCPNY_CD ASC
		]]>
	</statement>

	<!-- 가맹점 번호를 조회 한다. -->
	<statement name="frncStorNum" type="select">
		/*+ com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.frncStorNum
		*/
		<![CDATA[
			SELECT B.FRNC_STOR_NUM
       FROM SLA_BUY_CPNY_MGMT A
             ,SLA_FRNC_STOR_MGMT B
        WHERE A.RECD_STATUS = 'L'
          AND B.RECD_STATUS = 'L'
          AND A.BUYCPNY_CD = B.BUYCPNY_CD  
          AND B.UPJANG_CD = :upjangCd 
          AND B.CARD_CLASS = 'N'/*신용카드*/
          <#if buycpnyCd?has_content> AND A.BUYCPNY_CD = :buycpnyCd </#if>  
		]]>
	</statement>

	<!-- 삭제전 매출등록 여부 확인. -->
	<statement name="selectSaleRegMgnt" type="select">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.selectSaleRegMgnt
		*/
		<![CDATA[
			SELECT

			  (SELECT EVIDENCE_1  
			      FROM SLA_IF_UPJANG_PAYMENT
			      WHERE UPJANG_CD = :upjangCd 
			      AND EVIDENCE_1 = :occurAdvanceNum
			      AND ROWNUM = 1) AS OCCUR_ADVANCE_NUM
			  ,(SELECT MAX(TICKET_ENDNUM) 
				FROM MAS_TICKET_MST
				WHERE UPJANG = :upjangCd
				AND TRANS_TYPE IN ('O','X')
				<#if itemCd?has_content>AND ITEM_CODE = :itemCd</#if>
				<#if ticketEndnum?has_content>AND TICKET_ENDNUM > TO_NUMBER(:ticketEndnum)</#if>) AS MAX_TICKET_ENDNUM
			
			FROM DUAL
		]]>
	</statement>

	<!-- 식권 판매 관리(을)를 삭제한다. -->
	<statement name="ticket_delete" type="delete">
		/*+ com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.ticket_delete
		*/
		<![CDATA[
		DELETE 
		FROM   MAS_TICKET_MST 
		WHERE  RECEIPT_NUM = :receiptNum
		AND   UPJANG =  :upjangCd   
		AND    TRANS_TYPE = 'O'
		]]>
	</statement>

	<!-- 식권 판매 관리(을)를 등록한다. -->
	<statement name="ticket_insert" type="insert">
		/*+ com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.ticket_insert
		*/
		<![CDATA[
		INSERT INTO MAS_TICKET_MST(
		                    TICKET_SEQ, 
		                    TICKET_GROUP_SEQ, 
		                    UPJANG, 
		                    ITEM_TYPE, 
		                    ITEM_CODE, 
		                    TRANS_DD, 
		                    TRANS_TYPE, 
		                    TRANS_GUBUN, 
		                    UPRICE, 
		                    QTY, 
		                    TICKET_STARTNUM, 
		                    TICKET_ENDNUM, 
		                    REMARK_DESC, 
		                    AUTO_GUBUN, 
		                    AUTO_KIND, 
		                    SOURCE_ID, 
		                    RECEIPT_NUM,
		                    CUSER,
		                    CDATE                                 
		                  ) 
		SELECT MAS_TICKET_MST_S.NEXTVAL,
		       :ticketGroupSeq,
		       V.UPJANG,
		       V.ITEM_TYPE,
		       V.ITEM_CODE,
		       :occurDate,
		       'O',
		       'OO',
		       NVL(:uprice, 0),
		       NVL(:sQty, 0),
		       (NVL((SELECT MAX(A.TICKET_ENDNUM)
		                    FROM MAS_TICKET_MST A,
		                         MAS_TICKET_CODE B
		                WHERE A.TRANS_TYPE  = B.TRANS_TYPE
		                AND   A.TRANS_GUBUN = B.TRANS_GUBUN
		                AND   A.SOURCE_ID   = 	TO_CHAR(V.TICKET_SEQ)
		                AND   B.SET1        = 'O'
		                AND   A.SUBUL_YN    = 'Y'
		            ), V.TICKET_STARTNUM - 1) + 1) TICKET_STARTNUM, 
		       (NVL((SELECT MAX(A.TICKET_ENDNUM)
		                    FROM MAS_TICKET_MST A,
		                         MAS_TICKET_CODE B
		                WHERE A.TRANS_TYPE  = B.TRANS_TYPE
		                AND   A.TRANS_GUBUN = B.TRANS_GUBUN
		                AND   A.SOURCE_ID   = TO_CHAR(V.TICKET_SEQ)
		                AND   B.SET1        = 'O'
		                AND   A.SUBUL_YN    = 'Y'
		            ), V.TICKET_STARTNUM - 1) + NVL(:sQty, 0)) TICKET_ENDNUM,   
		       <#if remarkDesc?has_content> :remarkDesc <#else> NULL </#if>,
		       'N',
		       NULL,
		       :ticketSeq,
		       :receiptNum,
		       :loginSabun,
			    SYSDATE                                   
		FROM MAS_TICKET_MST V
		WHERE (TICKET_SEQ = :ticketSeq)
		]]>
	</statement>

	<!-- 식권 판매 관리(을)를 수정한다. -->
	<statement name="ticket_update" type="update">
		/*+ com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.ticket_update
		*/
		<![CDATA[
			UPDATE MAS_TICKET_MST
			SET QTY = :sQty
			,REMARK_DESC = <#if remarkDesc?has_content> :remarkDesc <#else> NULL </#if>
			,TRANS_DD = :transDd
			WHERE TRANS_TYPE = 'O'
			AND TRANS_GUBUN = 'OO'
			AND RECEIPT_NUM = :receiptNum
			AND TICKET_SEQ = :ticketSeq
			AND   UPJANG =  :upjang 
			]]>
	</statement>

	<!-- 식권 판매 관리 그룹키(을)를 생성한다. -->
	<statement name="ticketMstGroupSeq" type="select">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.ticketMstGroupSeq
		*/
		<![CDATA[
		SELECT TO_CHAR(MAS_TICKET_MST_GROUP_S.NEXTVAL) MAS_TICKET_MST_GROUP_S FROM DUAL
		]]>
	</statement>

	<!-- 영수증 번호을 생성한다(일반). -->
	<statement name="receiptNumAdvance" type="select">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.receiptNumAdvance
		*/
		<![CDATA[
   			SELECT 'R' || '-' || :sysClass || '-' || :occurDate || '-' || :upjangCd || '-' || 
			       LPAD(NVL(TO_NUMBER(MAX(SUBSTR(A.RECEIPT_NUM, INSTR(A.RECEIPT_NUM,'-',1,4)+1,4))), 0)+1, '4', 0)
			  FROM SLA_IF_ADVANCE_OCCUR A
			 WHERE 1=1
			   AND A.OCCUR_DATE = :occurDate
			   AND A.SYS_CLASS = :sysClass
			   AND A.UPJANG_CD = :upjangCd
		]]>
	</statement>

	<!-- 영수증 번호을 생성한다.(식권) -->
	<statement name="receiptNumTicKet" type="select">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.receiptNumTicKet
		*/
		<![CDATA[
   			SELECT 'T' || '-' || :sysClass || '-' || :occurDate || '-' || :upjangCd || '-' || 
			       LPAD(NVL(TO_NUMBER(MAX(SUBSTR(A.RECEIPT_NUM, INSTR(A.RECEIPT_NUM,'-',1,4)+1,4))), 0)+1, '4', 0)
			  FROM SLA_IF_MEAL_TICKET_SAL_MST A
			 WHERE 1=1
			   AND A.SALE_DATE = :occurDate
			   AND A.SYS_CLASS = :sysClass
			   AND A.UPJANG_CD = :upjangCd
		]]>
	</statement>

	<!-- 마감여부를 조회한다.. -->
	<statement name="dtCnt" type="select"><![CDATA[
		SELECT DDDD_CLOSE_YN DT_CNT 
			FROM SLA_IF_UPJANG_SALS_DETAIL
			WHERE UPJANG_CD = :upjangCd
			--AND DDDD_CLOSE_YN = 'N'
			AND SYS_CLASS = :sysClass
			AND OCCUR_DATE = TO_CHAR(TO_DATE(:occurDate,'YYYYMMDD'),'YYYYMMDD')
		UNION ALL
		SELECT DDDD_CLOSE_YN DT_CNT 
				FROM SLA_IF_ADVANCE_OCCUR
				WHERE UPJANG_CD = :upjangCd
				--AND DDDD_CLOSE_YN = 'N'
				AND SYS_CLASS = :sysClass
				AND OCCUR_DATE = TO_CHAR(TO_DATE(:occurDate,'YYYYMMDD'),'YYYYMMDD')
		UNION ALL
		SELECT DDDD_CLOSE_YN DT_CNT 
				FROM SLA_IF_MEAL_TICKET_SAL_MST
				WHERE UPJANG_CD = :upjangCd
				--AND DDDD_CLOSE_YN = 'N'
				AND SYS_CLASS = :sysClass
				AND SALE_DATE = TO_CHAR(TO_DATE(:occurDate,'YYYYMMDD'),'YYYYMMDD')
		UNION ALL
		SELECT DECODE(COUNT(1), 0, 'N', 'Y') DT_CNT 
				FROM MAS_CLOSE_MGMT
				WHERE UPJANG = :upjangCd
				--AND DDDD_CLOSE_YN = 'N'
				AND CLOSE_DATE = TO_CHAR(TO_DATE(:occurDate,'YYYYMMDD'),'YYYYMMDD')
	            AND CLOSE_GUBUN = '001'
		]]></statement>


	<!-- 입금여부를 조회한다.. -->
	<statement name="rvCnt" type="select">
		<![CDATA[
		/*+ com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.rvCnt */
		
		SELECT DECODE(COUNT(*),0,'N','Y') as RV_CNT FROM (
			SELECT M.ADVANCE_NUM, M.OCCUR_ADVANCE_NUM, '입금관리', RECEIVE_NUM, (M.OCCUR_SUPPLY_AMT+M.OCCUR_VAT_AMT) AS OCCUR_AMT, AD.RECEIVE_AMT, AD.RECEIVE_DATE
			FROM SLA_ADVANCE_MST M, SLA_ADVANCE_RECEIVE_WAY W, SLA_AR_RECEIVE_DETAIL AD
			WHERE M.ADVANCE_NUM = W.ADVANCE_NUM
				AND W.AR_NUM = AD.AR_NUM
			    AND M.RECD_STATUS ='L'
			    AND W.RECD_STATUS ='L'
			    AND AD.RECD_STATUS = 'L'
			UNION ALL     
			SELECT M.ADVANCE_NUM, M.OCCUR_ADVANCE_NUM, '영업수입현금', SALES_CASH_RECEIVE_NUM, (M.OCCUR_SUPPLY_AMT+M.OCCUR_VAT_AMT) AS OCCUR_AMT, C.RECEIVE_AMT, C.ALT_DATE
			FROM SLA_ADVANCE_MST M, SLA_ADVANCE_RECEIVE_WAY W, SLA_SALES_CASH_ALT_DETAIL C
			WHERE M.ADVANCE_NUM = W.ADVANCE_NUM
				AND W.SALES_CASH_NUM = C.SALES_CASH_NUM
			    AND M.RECD_STATUS ='L'
			    AND W.RECD_STATUS ='L'
			    AND C.RECD_STATUS = 'L'
			) A
		WHERE A.ADVANCE_NUM = :advanceNum

		]]>
	</statement>

	<!-- 사업장일마감 기획승인여부를 조회한다.. -->
	<statement name="selectApprv" type="select">
		/*+ com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.selectApprv
		*/
		<![CDATA[
		SELECT DECODE(NVL(COUNT( 1 ), 0), 0, 'N', 'Y') APPRV_YN
				 , TO_CHAR(APPRV_DATE, 'YYYYMMDD') APPRV_DATE
		  FROM MAS_CLOSE_MODIFYREQ 
		 WHERE UPJANG = :upjangCd 
		       AND CLOSE_GUBUN = '011' 
		       AND APPRV_GUBUN = 'Y' 
		       AND CLOSE_DATEFR <= :occurDate 
		       AND CLOSE_DATETO >= :occurDate
		       GROUP BY TO_CHAR(APPRV_DATE, 'YYYYMMDD')
		       ORDER BY APPRV_DATE DESC
		]]>
	</statement>

	<!-- 식권 판매 여부를 확인한다. -->
	<statement name="selectTicketMst" type="select">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO."selectTicketMst"
		*/
		<![CDATA[
		  SELECT COUNT(*)
          FROM   MAS_TICKET_MST 
          WHERE UPJANG = :upjangCd 
             AND TRANS_DD > :occurDate  
             AND ITEM_CODE = :itemCd
             AND TRANS_GUBUN = 'OO' 
		]]>
	</statement>

	<!-- 영업회계 선수금 존재 여부 확인. -->
	<statement name="advance" type="select">
		/*+ com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.advance */
		<![CDATA[
		  SELECT NVL2(ADVANCE_NUM,'Y','N') FROM SLA_ADVANCE_MST
			WHERE UPJANG_CD = :upjangCd
			AND OCCUR_ADVANCE_NUM = :occurAdvanceNum
			AND RECD_STATUS = 'L'
		]]>
	</statement>

	<!-- 교환식권 선수금 등록 여부 확인. -->
	<statement name="selectTicketChgReceiptNum" type="select">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.selectTicketChgReceiptNum
		*/
		<![CDATA[
		  SELECT RECEIPT_NUM FROM MAS_TICKET_CHG
			WHERE UPJANG = :upjangCd
			AND CHG_DD = :chgDd
			AND SEQ = :chgSeq
			AND STATUS = 'L'
		]]>
	</statement>

	<!-- 교환식권 선수금 등록 영수증번호 업데이트. -->
	<statement name="chgReceiptNum_Update" type="update">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.chgReceiptNum_Update
		*/
		<![CDATA[
		UPDATE MAS_TICKET_CHG
			SET RECEIPT_NUM = :receiptNum 
			,UUSER = :loginSabun
			,UDATE = SYSDATE
			WHERE UPJANG = :upjangCd
			AND CHG_DD = :chgDd
			AND SEQ = :chgSeq
			AND STATUS = 'L'
		]]>
	</statement>

	<!-- 교환식권 선수금 삭제 영수증번호 제거 업데이트. -->
	<statement name="chgReceiptNum_Dupdate" type="update">
		/*+
		com.hwfs.fs.fsl.dao.UpjangMealTicketRegMgntDAO.chgReceiptNum_Dupdate
		*/
		<![CDATA[
		UPDATE MAS_TICKET_CHG
			SET RECEIPT_NUM = null 
			,UUSER = :loginSabun
			,UDATE = SYSDATE
			WHERE RECEIPT_NUM = :receiptNum
			AND STATUS = 'L'
		]]>
	</statement>


</hqml>
