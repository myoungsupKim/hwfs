<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="fs.fsf.funeralDeadRegDAO">
	<desc>장례식장 관리 HQML Query</desc>

	<!-- 장례식장 관리 목록을 조회한다. -->
	<statement name="selectFuneralDeadRegInfo">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadRegDAO.selectFuneralDeadRegInfo */
		<![CDATA[
		  SELECT MAX(DECODE(FUNERAL_PARLOR, '001', '001')) AS FUNERAL_PARLOR13
		        ,MAX(DECODE(FUNERAL_PARLOR, '002', '002')) AS FUNERAL_PARLOR14
		        ,MAX(DECODE(FUNERAL_PARLOR, '003', '003')) AS FUNERAL_PARLOR15
		        ,MAX(DECODE(FUNERAL_PARLOR, '004', '004')) AS FUNERAL_PARLOR01
		        ,MAX(DECODE(FUNERAL_PARLOR, '005', '005')) AS FUNERAL_PARLOR02
		        ,MAX(DECODE(FUNERAL_PARLOR, '006', '006')) AS FUNERAL_PARLOR03
		        ,MAX(DECODE(FUNERAL_PARLOR, '007', '007')) AS FUNERAL_PARLOR05
		        ,MAX(DECODE(FUNERAL_PARLOR, '008', '008')) AS FUNERAL_PARLOR06
		        ,MAX(DECODE(FUNERAL_PARLOR, '009', '009')) AS FUNERAL_PARLOR07
		        ,MAX(DECODE(FUNERAL_PARLOR, '010', '010')) AS FUNERAL_PARLOR08
		        ,MAX(DECODE(FUNERAL_PARLOR, '011', '011')) AS FUNERAL_PARLOR09
		        ,MAX(DECODE(FUNERAL_PARLOR, '012', '012')) AS FUNERAL_PARLOR10
		        ,MAX(DECODE(FUNERAL_PARLOR, '013', '013')) AS FUNERAL_PARLOR11
		        ,MAX(DECODE(FUNERAL_PARLOR, '014', '014')) AS FUNERAL_PARLOR12
		        ,MAX(DECODE(FUNERAL_PARLOR, '001', GUEST_NUM)) AS GUEST_NUM13
                ,MAX(DECODE(FUNERAL_PARLOR, '002', GUEST_NUM)) AS GUEST_NUM14
                ,MAX(DECODE(FUNERAL_PARLOR, '003', GUEST_NUM)) AS GUEST_NUM15
                ,MAX(DECODE(FUNERAL_PARLOR, '004', GUEST_NUM)) AS GUEST_NUM01
                ,MAX(DECODE(FUNERAL_PARLOR, '005', GUEST_NUM)) AS GUEST_NUM02
                ,MAX(DECODE(FUNERAL_PARLOR, '006', GUEST_NUM)) AS GUEST_NUM03
                ,MAX(DECODE(FUNERAL_PARLOR, '007', GUEST_NUM)) AS GUEST_NUM05
                ,MAX(DECODE(FUNERAL_PARLOR, '008', GUEST_NUM)) AS GUEST_NUM06
                ,MAX(DECODE(FUNERAL_PARLOR, '009', GUEST_NUM)) AS GUEST_NUM07
                ,MAX(DECODE(FUNERAL_PARLOR, '010', GUEST_NUM)) AS GUEST_NUM08
                ,MAX(DECODE(FUNERAL_PARLOR, '011', GUEST_NUM)) AS GUEST_NUM09
                ,MAX(DECODE(FUNERAL_PARLOR, '012', GUEST_NUM)) AS GUEST_NUM10
                ,MAX(DECODE(FUNERAL_PARLOR, '013', GUEST_NUM)) AS GUEST_NUM11
                ,MAX(DECODE(FUNERAL_PARLOR, '014', GUEST_NUM)) AS GUEST_NUM12
		        ,MAX(DECODE(FUNERAL_PARLOR, '001', THE_DEAD_NM)) AS THE_DEAD_NM13
				,MAX(DECODE(FUNERAL_PARLOR, '002', THE_DEAD_NM)) AS THE_DEAD_NM14
				,MAX(DECODE(FUNERAL_PARLOR, '003', THE_DEAD_NM)) AS THE_DEAD_NM15
				,MAX(DECODE(FUNERAL_PARLOR, '004', THE_DEAD_NM)) AS THE_DEAD_NM01
				,MAX(DECODE(FUNERAL_PARLOR, '005', THE_DEAD_NM)) AS THE_DEAD_NM02
				,MAX(DECODE(FUNERAL_PARLOR, '006', THE_DEAD_NM)) AS THE_DEAD_NM03
				,MAX(DECODE(FUNERAL_PARLOR, '007', THE_DEAD_NM)) AS THE_DEAD_NM05
				,MAX(DECODE(FUNERAL_PARLOR, '008', THE_DEAD_NM)) AS THE_DEAD_NM06
				,MAX(DECODE(FUNERAL_PARLOR, '009', THE_DEAD_NM)) AS THE_DEAD_NM07
				,MAX(DECODE(FUNERAL_PARLOR, '010', THE_DEAD_NM)) AS THE_DEAD_NM08
				,MAX(DECODE(FUNERAL_PARLOR, '011', THE_DEAD_NM)) AS THE_DEAD_NM09
				,MAX(DECODE(FUNERAL_PARLOR, '012', THE_DEAD_NM)) AS THE_DEAD_NM10
				,MAX(DECODE(FUNERAL_PARLOR, '013', THE_DEAD_NM)) AS THE_DEAD_NM11
				,MAX(DECODE(FUNERAL_PARLOR, '014', THE_DEAD_NM)) AS THE_DEAD_NM12
				,MAX(DECODE(FUNERAL_PARLOR, '001', TO_CHAR(CASKET_DATE,'YYYY-MM-DD'))) AS CASKET_DATE13
				,MAX(DECODE(FUNERAL_PARLOR, '002', TO_CHAR(CASKET_DATE,'YYYY-MM-DD'))) AS CASKET_DATE14
				,MAX(DECODE(FUNERAL_PARLOR, '003', TO_CHAR(CASKET_DATE,'YYYY-MM-DD'))) AS CASKET_DATE15
				,MAX(DECODE(FUNERAL_PARLOR, '004', TO_CHAR(CASKET_DATE,'YYYY-MM-DD'))) AS CASKET_DATE01
				,MAX(DECODE(FUNERAL_PARLOR, '005', TO_CHAR(CASKET_DATE,'YYYY-MM-DD'))) AS CASKET_DATE02
				,MAX(DECODE(FUNERAL_PARLOR, '006', TO_CHAR(CASKET_DATE,'YYYY-MM-DD'))) AS CASKET_DATE03
				,MAX(DECODE(FUNERAL_PARLOR, '007', TO_CHAR(CASKET_DATE,'YYYY-MM-DD'))) AS CASKET_DATE05
				,MAX(DECODE(FUNERAL_PARLOR, '008', TO_CHAR(CASKET_DATE,'YYYY-MM-DD'))) AS CASKET_DATE06
				,MAX(DECODE(FUNERAL_PARLOR, '009', TO_CHAR(CASKET_DATE,'YYYY-MM-DD'))) AS CASKET_DATE07
				,MAX(DECODE(FUNERAL_PARLOR, '010', TO_CHAR(CASKET_DATE,'YYYY-MM-DD'))) AS CASKET_DATE08
				,MAX(DECODE(FUNERAL_PARLOR, '011', TO_CHAR(CASKET_DATE,'YYYY-MM-DD'))) AS CASKET_DATE09
				,MAX(DECODE(FUNERAL_PARLOR, '012', TO_CHAR(CASKET_DATE,'YYYY-MM-DD'))) AS CASKET_DATE10
				,MAX(DECODE(FUNERAL_PARLOR, '013', TO_CHAR(CASKET_DATE,'YYYY-MM-DD'))) AS CASKET_DATE11
				,MAX(DECODE(FUNERAL_PARLOR, '014', TO_CHAR(CASKET_DATE,'YYYY-MM-DD'))) AS CASKET_DATE12				                        
				,MAX(DECODE(FUNERAL_PARLOR, '001', TO_CHAR(BORNE_OUT_DATE,'YYYY-MM-DD'))) AS BORNE_OUT_DATE13
				,MAX(DECODE(FUNERAL_PARLOR, '002', TO_CHAR(BORNE_OUT_DATE,'YYYY-MM-DD'))) AS BORNE_OUT_DATE14
				,MAX(DECODE(FUNERAL_PARLOR, '003', TO_CHAR(BORNE_OUT_DATE,'YYYY-MM-DD'))) AS BORNE_OUT_DATE15
				,MAX(DECODE(FUNERAL_PARLOR, '004', TO_CHAR(BORNE_OUT_DATE,'YYYY-MM-DD'))) AS BORNE_OUT_DATE01
				,MAX(DECODE(FUNERAL_PARLOR, '005', TO_CHAR(BORNE_OUT_DATE,'YYYY-MM-DD'))) AS BORNE_OUT_DATE02
				,MAX(DECODE(FUNERAL_PARLOR, '006', TO_CHAR(BORNE_OUT_DATE,'YYYY-MM-DD'))) AS BORNE_OUT_DATE03
				,MAX(DECODE(FUNERAL_PARLOR, '007', TO_CHAR(BORNE_OUT_DATE,'YYYY-MM-DD'))) AS BORNE_OUT_DATE05
				,MAX(DECODE(FUNERAL_PARLOR, '008', TO_CHAR(BORNE_OUT_DATE,'YYYY-MM-DD'))) AS BORNE_OUT_DATE06
				,MAX(DECODE(FUNERAL_PARLOR, '009', TO_CHAR(BORNE_OUT_DATE,'YYYY-MM-DD'))) AS BORNE_OUT_DATE07
				,MAX(DECODE(FUNERAL_PARLOR, '010', TO_CHAR(BORNE_OUT_DATE,'YYYY-MM-DD'))) AS BORNE_OUT_DATE08
				,MAX(DECODE(FUNERAL_PARLOR, '011', TO_CHAR(BORNE_OUT_DATE,'YYYY-MM-DD'))) AS BORNE_OUT_DATE09
				,MAX(DECODE(FUNERAL_PARLOR, '012', TO_CHAR(BORNE_OUT_DATE,'YYYY-MM-DD'))) AS BORNE_OUT_DATE10
				,MAX(DECODE(FUNERAL_PARLOR, '013', TO_CHAR(BORNE_OUT_DATE,'YYYY-MM-DD'))) AS BORNE_OUT_DATE11
				,MAX(DECODE(FUNERAL_PARLOR, '014', TO_CHAR(BORNE_OUT_DATE,'YYYY-MM-DD'))) AS BORNE_OUT_DATE12           
				,MAX(DECODE(FUNERAL_PARLOR, '001', AMT)) AS AMT13
				,MAX(DECODE(FUNERAL_PARLOR, '002', AMT)) AS AMT14
				,MAX(DECODE(FUNERAL_PARLOR, '003', AMT)) AS AMT15
				,MAX(DECODE(FUNERAL_PARLOR, '004', AMT)) AS AMT01
				,MAX(DECODE(FUNERAL_PARLOR, '005', AMT)) AS AMT02
				,MAX(DECODE(FUNERAL_PARLOR, '006', AMT)) AS AMT03
				,MAX(DECODE(FUNERAL_PARLOR, '007', AMT)) AS AMT05
				,MAX(DECODE(FUNERAL_PARLOR, '008', AMT)) AS AMT06
				,MAX(DECODE(FUNERAL_PARLOR, '009', AMT)) AS AMT07
				,MAX(DECODE(FUNERAL_PARLOR, '010', AMT)) AS AMT08
				,MAX(DECODE(FUNERAL_PARLOR, '011', AMT)) AS AMT09
				,MAX(DECODE(FUNERAL_PARLOR, '012', AMT)) AS AMT10
				,MAX(DECODE(FUNERAL_PARLOR, '013', AMT)) AS AMT11
				,MAX(DECODE(FUNERAL_PARLOR, '014', AMT)) AS AMT12
				,'0' chng13
				,'0' chng14
				,'0' chng15
				,'0' chng01
				,'0' chng02
				,'0' chng03
				,'0' chng05
				,'0' chng06
				,'0' chng07
				,'0' chng08
				,'0' chng09
				,'0' chng10
				,'0' chng11
				,'0' chng12
		    FROM (  
		            SELECT FUNERAL_HALL_CD /*** 장례식장코드 */
		                  ,GUEST_NUM       /*** 고객번호 */
		                  ,FUNERAL_PARLOR  /* 빈소 */                 
		                  ,THE_DEAD_NM     /* 고인명 */
		                  ,BORNE_OUT_DATE  /* 발인일 */
		                  ,ENSHRINE_DATE   /* 안치일 */
		                  ,CASKET_DATE     /* 입관일 */     
		                  ,(SUM(PLUS_AMT) - SUM(MINUS_AMT)) AMT  /* 금액 */
		              FROM (   
		                        SELECT A.FUNERAL_HALL_CD    /*** 장례식장코드 */
		                              ,A.GUEST_NUM          /*** 고객번호 */
		                              ,A.FUNERAL_PARLOR     /* 빈소 */                        
		                              ,A.THE_DEAD_NM      	/* 고인명 */
		                              ,A.BORNE_OUT_DATE 	/* 발인일 */
		                              ,A.ENSHRINE_DATE   	/* 안치일 */
		                              ,A.CASKET_DATE       	/* 입관일 */
		                              ,B.SALE_CLASS     	/* 001 - 판매 002 - 반품 *판매구분 */                        
		                              ,CASE B.SALE_CLASS WHEN '001' THEN 
                                                                            CASE B.ORDER_STATUS WHEN '002' THEN SUM(B.AMT)
                                                                                                ELSE 0
                                                                            END
                                                         ELSE 0 
                                       END PLUS_AMT
                                      ,CASE B.SALE_CLASS WHEN '002' THEN 
                                                                            CASE B.ORDER_STATUS WHEN '002' THEN SUM(B.AMT)
                                                                                                ELSE 0
                                                                            END
                                                         ELSE 0 
                                       END MINUS_AMT
		                          FROM FSF_FUNERAL_MASTER A     /* 고인을 관리하는 테이블 */
		                              ,FSF_SALE_ORDER B         /* 장례식장별 고인별 판매 및 반품 관리 상세 */
		                         WHERE A.FUNERAL_HALL_CD = B.FUNERAL_HALL_CD(+)
		                           AND A.GUEST_NUM       = B.GUEST_NUM(+)
		                         <#if funeralHallCd?has_content>
		                           AND A.FUNERAL_HALL_CD = :funeralHallCd
		                         </#if>
		                           AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN TO_CHAR(A.ENSHRINE_DATE,'YYYYMMDD') AND TO_CHAR(A.BORNE_OUT_DATE,'YYYYMMDD')
		                           
		                      GROUP BY A.FUNERAL_HALL_CD, A.GUEST_NUM, A.FUNERAL_PARLOR, A.THE_DEAD_NM
		                             , A.BORNE_OUT_DATE, A.ENSHRINE_DATE, A.CASKET_DATE, B.SALE_CLASS, B.ORDER_STATUS
		                   )
		             WHERE 1=1
                  GROUP BY FUNERAL_HALL_CD /*** 장례식장코드 */
	                      ,GUEST_NUM       /*** 고객번호 */
	                      ,FUNERAL_PARLOR  /* 빈소 */                 
	                      ,THE_DEAD_NM     /* 고인명 */
	                      ,BORNE_OUT_DATE  /* 발인일 */
	                      ,ENSHRINE_DATE   /* 안치일 */
	                      ,CASKET_DATE     /* 입관일 */
		          )
		]]>
	</statement>
	
	<!-- 장례식장 대기자 목록을 조회한다. -->
	<statement name="selectReservMaster">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadRegDAO.selectReservMaster */
		<![CDATA[
		  SELECT FUNERAL_HALL_CD /* 장례식장코드 */
				,RESERV_DATE	/* 예약일자 */
				,SEQ		/* 순번 */
				,RESERV_NM	/* 예약자명 */
				,SCC_CRYPTO.MASKAUTH_FUN(TELNO_ENC,9,:loginPersMask, :maskAuth) AS TELNO_ENC	/* 연락처1 */
				,SCC_CRYPTO.MASKAUTH_FUN(HP_ENC,8,:loginPersMask, :maskAuth) AS HP_ENC	/* 연락처2 */
				,REMARK		/* 비고 */
			FROM FSF_RESERV_MASTER	/* 장례식장 대기자관리 테이블이다. */
		<#if funeralHallCd?has_content>
		   WHERE FUNERAL_HALL_CD = :funeralHallCd
		</#if>
		ORDER BY FUNERAL_HALL_CD /* 장례식장코드 */
				,RESERV_DATE	/* 예약일자 */
				,SEQ		/* 순번 */
		]]>
	</statement>
	
	<!-- 호실변경 이력을 조회한다. -->
	<statement name="selectFuneralParlorHistory">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadRegDAO.selectFuneralParlorHistory */
		<![CDATA[
		    SELECT A.FUNERAL_HALL_CD   /*** 장례식장코드 */
		          ,A.GUEST_NUM          /*** 고객번호 */
		          ,A.FUNERAL_PARLOR  /* 빈소 */
		          ,A.THE_DEAD_NM      /* 고인명 */
		          ,B.FUNERAL_PARLOR_CHG_DATE        /* 빈소 변경일자 */
		          ,B.SEQ
		          ,B.CHG_BEFORE_FUNERAL_PARLOR    /* 변경전 빈소 */
		          ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FUNERAL_PARLOR_TYPE' AND CODE = B.CHG_BEFORE_FUNERAL_PARLOR) CHG_BEFORE_FUNERAL_PARLOR_NM
		          ,B.CHG_BEFORE_SALE_AMT            /* 변경전 판매금액 */
		          ,B.CHG_AFTER_FUNERAL_PARLOR    /* 변경 후 빈소 */
		          ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FUNERAL_PARLOR_TYPE' AND CODE = B.CHG_AFTER_FUNERAL_PARLOR) CHG_AFTER_FUNERAL_PARLOR_NM 
			  FROM FSF_FUNERAL_MASTER A   		/* 고인을 관리하는 테이블 */
				  ,FSF_FUNERAL_PARLOR_HISTORY B /* 고인의 빈소 변경이력관리 하는 테이블 */
			 WHERE A.FUNERAL_HALL_CD = B.FUNERAL_HALL_CD
			   AND A.GUEST_NUM       = B.GUEST_NUM
			   <#if funeralHallCd?has_content>
			   AND A.FUNERAL_HALL_CD = :funeralHallCd /* 장례식장코드 */
			   </#if>
	      ORDER BY A.FUNERAL_HALL_CD, A.GUEST_NUM, B.FUNERAL_PARLOR_CHG_DATE, B.SEQ DESC
		]]>
	</statement>
	
	<!-- 호실변경 POPUP 리스트를 조회한다. -->
	<statement name="selectFuneralRoomNumberChg">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadRegDAO.selectFuneralRoomNumberChg */
		<![CDATA[
		    SELECT FUNERAL_HALL_CD   /*** 장례식장코드 */
		          ,GUEST_NUM         /*** 고객번호 */
		          ,FUNERAL_PARLOR    /* 빈소 */
		          ,THE_DEAD_NM       /* 고인명 */
		          ,BORNE_OUT_DATE /* 발인일 */
		          ,ENSHRINE_DATE   /* 안치일 */
		          ,CASKET_DATE       /* 입관일 */
		          ,SUM(PLUS_AMT) PLUS_AMT
		          ,SUM(MINUS_AMT) MINUS_AMT
		      FROM (
					    SELECT A.FUNERAL_HALL_CD   /*** 장례식장코드 */
					          ,A.GUEST_NUM         /*** 고객번호 */
					          ,A.FUNERAL_PARLOR    /* 빈소 */
					          ,A.THE_DEAD_NM       /* 고인명 */
					          ,SUBSTR(TO_CHAR(A.BORNE_OUT_DATE,'YYYYMMDDHH24MISS'), 0, 14) BORNE_OUT_DATE /* 발인일 */
					          ,SUBSTR(TO_CHAR(A.ENSHRINE_DATE,'YYYYMMDDHH24MISS'), 0, 14) ENSHRINE_DATE   /* 안치일 */
					          ,SUBSTR(TO_CHAR(A.CASKET_DATE,'YYYYMMDDHH24MISS'), 0, 14) CASKET_DATE       /* 입관일 */
					   --       ,B.FUNERAL_PARLOR_CHG_DATE      /* 빈소 변경일자 */
					   --       ,B.SEQ
					   --       ,B.CHG_BEFORE_FUNERAL_PARLOR    /* 변경전 빈소 */
					   --       ,B.CHG_BEFORE_SALE_AMT          /* 변경전 판매금액 */
					   --       ,B.CHG_AFTER_FUNERAL_PARLOR     /* 변경 후 빈소 */
					          ,C.SALE_CLASS                   /* 001 - 판매 002 - 반품 *판매구분 */
					          ,CASE C.SALE_CLASS WHEN '001' THEN SUM(C.AMT) ELSE 0 END PLUS_AMT
					          ,CASE C.SALE_CLASS WHEN '002' THEN SUM(C.AMT) ELSE  0 END MINUS_AMT
					      FROM FSF_FUNERAL_MASTER A             /* 고인을 관리하는 테이블 */
					   --       ,FSF_FUNERAL_PARLOR_HISTORY B     /* 고인의 빈소 변경이력관리 하는 테이블 */
					          ,FSF_SALE_ORDER C                 /* 장례식장별 고인별 판매 및 반품 관리 상세 */
					     WHERE 1=1
					   --        A.FUNERAL_HALL_CD = B.FUNERAL_HALL_CD
					   --    AND A.GUEST_NUM       = B.GUEST_NUM
					       AND A.FUNERAL_HALL_CD = C.FUNERAL_HALL_CD(+)
					       AND A.GUEST_NUM       = C.GUEST_NUM(+)		 
					   --    AND B.SEQ = (
					   --                   SELECT MAX(SEQ)
					   --                     FROM FSF_FUNERAL_PARLOR_HISTORY
					   --                    WHERE FUNERAL_HALL_CD = B.FUNERAL_HALL_CD
					   --                      AND GUEST_NUM = B.GUEST_NUM
					   --                      AND FUNERAL_PARLOR_CHG_DATE = B.FUNERAL_PARLOR_CHG_DATE
					   --                )		 
					       <#if funeralHallCd?has_content>
						   AND A.FUNERAL_HALL_CD = :funeralHallCd /* 장례식장코드 */
						   </#if>
					       <#if funeralParlor?has_content>
					       AND A.FUNERAL_PARLOR            = :funeralParlor  /* 현재빈소 */
					       </#if>
					       <#if chgAfterFuneralParlor?has_content>
					   --    AND B.CHG_AFTER_FUNERAL_PARLOR  = :funeralParlor  /* 변경 후 빈소 */
					       </#if>
					       <#if guestNum?has_content>
						   	AND A.GUEST_NUM = :guestNum /* 고인명 */
						   </#if>
					  GROUP BY A.FUNERAL_HALL_CD, A.GUEST_NUM, A.FUNERAL_PARLOR, A.THE_DEAD_NM, A.BORNE_OUT_DATE, A.ENSHRINE_DATE, A.CASKET_DATE
					  --       ,B.FUNERAL_PARLOR_CHG_DATE, B.SEQ ,B.CHG_BEFORE_FUNERAL_PARLOR ,B.CHG_BEFORE_SALE_AMT ,B.CHG_AFTER_FUNERAL_PARLOR
					         ,C.SALE_CLASS
					)
				WHERE 1=1
  			 GROUP BY FUNERAL_HALL_CD, GUEST_NUM, FUNERAL_PARLOR, THE_DEAD_NM, BORNE_OUT_DATE, ENSHRINE_DATE, CASKET_DATE
		]]>
	</statement>
	
	<!-- 호실변경 POPUP 순번 max+1 조회한다. -->
	<statement name="selectMaxSeq">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadRegDAO.selectMaxNum */
		<![CDATA[
		    SELECT NVL(MAX(SEQ),0)+1 MAX_NUM
			  FROM FSF_FUNERAL_PARLOR_HISTORY
			 WHERE 1=1
			   <#if funeralHallCd?has_content>
			   	AND FUNERAL_HALL_CD = :funeralHallCd /* 장례식장코드 */
			   </#if>
			   <#if guestNum?has_content>
			    AND GUEST_NUM = :guestNum
			   </#if>
			   <#if funeralParlorChgDate?has_content>
			    AND FUNERAL_PARLOR_CHG_DATE = :funeralParlorChgDate
			   </#if>
		]]>
	</statement>
	
	<!-- 호실변경 POPUP(을)를 등록한다. -->
	<statement name="insertFuneralRoomNumberChg" type="insert">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadRegDAO.insertFuneralRoomNumberChg */
		<![CDATA[
			INSERT INTO FSF_FUNERAL_PARLOR_HISTORY
			(
				 FUNERAL_HALL_CD		  /*** 장례식장코드 */
				,GUEST_NUM				  /*** 고객번호 */
				,FUNERAL_PARLOR_CHG_DATE  /*** 빈소 변경일자 */
				,SEQ
				,CHG_BEFORE_FUNERAL_PARLOR /* 변경전 빈소 */
				,CHG_BEFORE_SALE_AMT	  /* 변경전 판매금액 */
				,CHG_AFTER_FUNERAL_PARLOR /* 변경 후 빈소 */
				,CUSER					  /* 생성자 사번 */
				,CDATE					  /* 생성일시 */
			)
			VALUES
			(
				 :funeralHallCd		  	  /*** 장례식장코드 */
				,:guestNum				  /*** 고객번호 */
				,:funeralParlorChgDate    /*** 빈소 변경일자 */
				,:seq
				,:chgBeforeFuneralParlor  /* 변경전 빈소 */
				,:chgBeforeSaleAmt	  	  /* 변경전 판매금액 */
				,:chgAfterFuneralParlor   /* 변경 후 빈소 */
				,:loginSabun 			  /* 생성자 사번 */
				,SYSDATE 				  /* 생성일시 */
			)
		]]>
	</statement>
	
	<!-- 호실변경 POPUP(을)를 수정한다. -->
	<statement name="updateFuneralRoomNumberChg" type="update">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadRegDAO.updateFuneralRoomNumberChg */
		<![CDATA[
		UPDATE FSF_FUNERAL_PARLOR_HISTORY
		   SET CHG_BEFORE_FUNERAL_PARLOR= :chgBeforeFuneralParlor	/* 변경전 빈소 */
			  ,CHG_BEFORE_SALE_AMT		= :chgBeforeSaleAmt			/* 변경전 판매금액 */
			  ,CHG_AFTER_FUNERAL_PARLOR	= :chgAfterFuneralParlor	/* 변경 후 빈소 */
			  ,UUSER		 =	:loginSabun		/* 수정자 사번 */
			  ,UDATE		 =	SYSDATE			/* 수정일시 */
		 WHERE FUNERAL_HALL_CD			= :funeralHallCd		/*** 장례식장코드 */
		   AND GUEST_NUM				= :guestNum				/*** 고객번호 */
		   AND FUNERAL_PARLOR_CHG_DATE	= :funeralParlorChgDate	/*** 빈소 변경일자 */
		   AND SEQ						= :seq
		]]>
	</statement>

	<!-- 호실변경 POPUP(을)를 삭제한다. -->
	<statement name="deleteFuneralRoomNumberChg" type="delete">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadRegDAO.deleteFuneralRoomNumberChg */
		<![CDATA[
		DELETE 
		  FROM FSF_FUNERAL_PARLOR_HISTORY
		 WHERE FUNERAL_HALL_CD			= :funeralHallCd		/*** 장례식장코드 */
		   AND GUEST_NUM				= :guestNum				/*** 고객번호 */
		   AND FUNERAL_PARLOR_CHG_DATE	= :funeralParlorChgDate	/*** 빈소 변경일자 */
		   AND SEQ						= :seq
		]]>
	</statement>
	
	<!-- 고인 Master 호실을 수정한다. -->
	<statement name="updateFuneralMaster" type="update">
	<![CDATA[
		UPDATE FSF_FUNERAL_MASTER
		   SET FUNERAL_PARLOR  =  :chgAfterFuneralParlor  /* 변경후 빈소 */
		 WHERE FUNERAL_HALL_CD =  :funeralHallCd /* 장례식장코드 */
		   AND GUEST_NUM	   =  :guestNum       /* 고객번호 */		  
   ]]>
   </statement>
	
	<!-- 대기자 리스트 순번 max+1 조회한다. -->
	<statement name="selectMaxNum">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadRegDAO.selectMaxNum */
		<![CDATA[
		    SELECT NVL(MAX(SEQ),0)+1 MAX_NUM
			  FROM FSF_RESERV_MASTER
			 WHERE 1=1
			   <#if funeralHallCd?has_content>
			   	AND FUNERAL_HALL_CD = :funeralHallCd /* 장례식장코드 */
			   </#if>
			   <#if reservDate?has_content>
			    AND RESERV_DATE = :reservDate
			   </#if>
		]]>
	</statement>
	
	<!-- 대기자 리스트(을)를 등록한다. -->
	<statement name="insertReservMaster">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadRegDAO.insertReservMaster */
		<![CDATA[
		INSERT INTO FSF_RESERV_MASTER	/* 장례식장 대기자관리 */
		(
		     FUNERAL_HALL_CD /* 장례식장코드 */
		    ,RESERV_DATE	/* 예약일자 */
			,SEQ		/* 순번 */
			,RESERV_NM	/* 예약자명 */
			,TELNO_ENC	/* 연락처1 */
			,HP_ENC		/* 연락처2 */
			,REMARK		/* 비고 */
			,CUSER 		/* 생성자 사번 */
			,CDATE 		/* 생성일시 */
		)
		VALUES
		(
			 :funeralHallCd /* 장례식장코드 */
			,TO_DATE(SUBSTR(:reservDate, 0,8),'YYYYMMDD')	/* 예약일자 */
			,:seq		/* 순번 */
			,<#if reservNm?has_content> :reservNm <#else> null </#if>
			,<#if telnoEnc?has_content> SCC_CRYPTO.ENC_FUN(:telnoEnc) <#else> null </#if>
			,<#if hpEnc?has_content> SCC_CRYPTO.ENC_FUN(:hpEnc) <#else> null </#if>
			,<#if remark?has_content> :remark <#else> null </#if>
			,:loginSabun /* 생성자 사번 */
			,SYSDATE /* 생성일시 */
		)
		]]>
	</statement>
	
	<!-- 대기자 리스트(을)를 수정한다. -->
	<statement name="updateReservMaster">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadRegDAO.updateReservMaster */
		<![CDATA[
		UPDATE FSF_RESERV_MASTER
		   SET  RESERV_NM	=  :reservNm	/* 예약자명 */
		    <#if telnoEnc?has_content>
			   ,TELNO_ENC	=  SCC_CRYPTO.ENC_FUN(:telnoEnc)	/* 연락처1 */
			</#if>
			<#if hpEnc?has_content>
			   ,HP_ENC		=  SCC_CRYPTO.ENC_FUN(:hpEnc)		/* 연락처2 */
			</#if>   
			   ,REMARK		=  :remark		/* 비고 */
			   ,UUSER		 =	:loginSabun		/* 수정자 사번 */
			   ,UDATE		 =	SYSDATE			/* 수정일시 */
		 WHERE  FUNERAL_HALL_CD =  :funeralHallCd /* 장례식장코드 */
		   AND  RESERV_DATE		=  TO_DATE(SUBSTR(:reservDate, 0,8),'YYYYMMDD') /* 예약일자 */
		   AND  SEQ				=  :seq		/* 순번 */
		]]>
	</statement>

	<!-- 대기자 리스트(을)를 삭제한다. -->
	<statement name="deleteReservMaster">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadRegDAO.deleteReservMaster */
		<![CDATA[
		DELETE 
		FROM   FSF_RESERV_MASTER 
		WHERE  FUNERAL_HALL_CD =  :funeralHallCd /* 장례식장코드 */
		   AND  RESERV_DATE		=  TO_DATE(SUBSTR(:reservDate, 0,8),'YYYYMMDD') /* 예약일자 */
		   AND  SEQ				=  :seq		/* 순번 */
		]]>
	</statement>	
</hqml>
