<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="fs.fsf.funeralDeadDeadSheetDAO">
	<desc>거래명세서 관리 HQML Query</desc>
	
	<!-- 업장 CC코드를 조회한다. -->
	<statement name="selectCcCd" type="select">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.selectCcCd */
		<![CDATA[
			SELECT  UPJANG  
	               ,CC_CD  
	        FROM SCO_UPJANG_MST_V
	        WHERE UPJANG = :upjangCd
		]]>
	</statement>
	
	<!-- 마감 조회한다. -->
	<statement name="selectClose" type="select">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.selectClose */
		<![CDATA[
		  SELECT MAX(DAY_CLOSE_YN) DAY_CLOSE_YN
		    FROM (
		            SELECT CASE WHEN COUNT(DDDD_CLOSE_YN)>0 THEN 'Y'
		                        WHEN COUNT(DDDD_CLOSE_YN)=0 THEN 'N'
		                   END DAY_CLOSE_YN
		              FROM SLA_IF_UPJANG_SALS_MST   /* 업장 발생 매출 마스터 */
		             WHERE SYS_CLASS  = '16'        /* 장례식장 */
		               AND UPJANG_CD  = :upjangCd   
		               AND OCCUR_DATE = :occurDate
		               AND DDDD_CLOSE_YN = 'Y'
		         UNION ALL
		            SELECT CASE WHEN COUNT(UPJANG)>0 THEN 'Y'
		                        WHEN COUNT(UPJANG)=0 THEN 'N'
		                   END DAY_CLOSE_YN
		              FROM MAS_CLOSE_MGMT       /* MAS_업장마감관리 */
		             WHERE UPJANG      = :upjangCd 
		               AND CLOSE_DATE  = :occurDate
		               AND CLOSE_GUBUN = '006'   /* 장례식장 */
		         )
		]]>
	</statement>
	
	<statement name="selectClose2" type="select">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.selectClose2 */
		<![CDATA[
		  SELECT SUM(DAY_CLOSE_CNT) CNT
		    FROM (
		            SELECT CASE WHEN COUNT(DDDD_CLOSE_YN)>0 THEN 1
		                        WHEN COUNT(DDDD_CLOSE_YN)=0 THEN 0
		                   END DAY_CLOSE_CNT
		              FROM SLA_IF_UPJANG_SALS_MST   /* 업장 발생 매출 마스터 */
		             WHERE SYS_CLASS  = '16'        /* 장례식장 */
		               AND UPJANG_CD  = :upjangCd   
		               AND OCCUR_DATE = :occurDate
		               AND DDDD_CLOSE_YN = 'Y'
		         UNION ALL
		            SELECT CASE WHEN COUNT(UPJANG)>0 THEN 1
		                        WHEN COUNT(UPJANG)=0 THEN 0
		                   END
		              FROM MAS_CLOSE_MGMT       /* MAS_업장마감관리 */
		             WHERE UPJANG      = :upjangCd 
		               AND CLOSE_DATE  = :occurDate
		               AND CLOSE_GUBUN = '006'   /* 장례식장 */
		         )
		]]>
	</statement>
	
	<!-- 고인 목록을 조회한다. -->
	<statement name="selectDeadGuestList" type="select">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadSaleGoodsOutReturnDAO.selectDeadGuestList */
		<![CDATA[
		     SELECT FUNERAL_HALL_CD /* 장례식장코드 */
			       ,GUEST_NUM       /* 고객번호 */
			       ,FUNERAL_PARLOR  /* 빈소 */
			       ,THE_DEAD_NM     /* 고인명 */
			       ,BORNE_OUT_DATE  /* 발인일자 */
			       ,ENSHRINE_DATE   /* 안치일자 */
			       ,CASKET_DATE     /* 입관일자 */
			   FROM FSF_FUNERAL_MASTER  /* 고인을 관리하는 테이블이다 */
			  WHERE FUNERAL_HALL_CD   = :funeralHallCd
			<#if guestNum?has_content>    
			    AND GUEST_NUM       = :guestNum
			</#if>    
			<#if theDeadNm?has_content>    
			    AND THE_DEAD_NM     = :theDeadNm
			</#if>    
			<#if casketFrom?has_content>   
			    <#if casketTo?has_content>
			    	AND TO_CHAR(CASKET_DATE,'YYYYMMDD') BETWEEN :casketFrom AND :casketTo
			    </#if>
		    </#if>    
		    <#if borneOutFrom?has_content>
		    	<#if borneOutTo?has_content>
			    	AND TO_CHAR(BORNE_OUT_DATE,'YYYYMMDD') BETWEEN :borneOutFrom AND :borneOutTo
			    </#if>
		    </#if>
			ORDER BY GUEST_NUM
		]]>
	</statement>
	
	<!-- 거래명세서 관리 목록을 조회한다. -->
	<statement name="selectFuneralDeadDeadSheetList" type="select">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.selectFuneralDeadDeadSheetList */
		<![CDATA[
			SELECT *
			  FROM (	
						SELECT FUNERAL_HALL_CD   /*** 장례식장코드 */
						       ,UPJANGNM
					           ,SAUPNO
					           ,NM_KOR
					       	   ,UP_TAE
					       	   ,BASE_ADDR||' '||DETAIL_ADDR AS ADDR   
					           ,UPJANG_TEL
					           ,UPJANG_TEL_ENC
					           ,GUEST_NUM         /*** 고객번호 */
					           ,FUNERAL_PARLOR    /* 빈소 */
					           ,FUNERAL_PARLOR_NM
					           ,THE_DEAD_NM       /* 고인명 */
					           ,ENSHRINE_DATE		/* 안치일자 */
					           ,BORNE_OUT_DATE     /* 발인일자 */
					           ,CHIEF_MOURNER      /* 상주 */
					           ,CHIEF_MOURNER_TELNO_ENC
					           ,MAX(SALE_DATE) SALE_DATE
					           ,GOODS_CLASS_CD
					           ,GOODS_CLASS_NM
					      	<#if searchType=="2">    
						       ,DETAIL_GOODS_CD
					           ,DETAIL_GOODS_NM
					           ,SUM(EA) EA      /* 개수 */
                               ,UNIT            /* 단위 */
                               ,LAST_UPRICE     /* 최종단가 */
                               ,GOODS_TYPE      /* 과면세 구분 */
					           ,REMARK
							<#else>
					           ,MAX(DETAIL_GOODS_CD) DETAIL_GOODS_CD
					           ,MAX(DETAIL_GOODS_NM) DETAIL_GOODS_NM
					           ,SUM(EA) EA             		/* 개수 */
                               ,MAX(UNIT) UNIT           	/* 단위 */
                               ,MAX(LAST_UPRICE) LAST_UPRICE    /* 최종단가 */
                               ,MAX(GOODS_TYPE) GOODS_TYPE        /* 과면세 구분 */
					           ,MAX(REMARK) REMARK
					        </#if>   
					           ,NVL(SUM(SALEOUT_AMT), 0) SALEOUT_AMT
					           ,NVL(SUM(RETURN_AMT), 0) RETURN_AMT
					           ,NVL((SUM(SALEOUT_AMT) - SUM(RETURN_AMT)), 0) ADJUST_AMT
					           ,NVL(SUM(SALEOUT_EA), 0) SALEOUT_EA
					           ,NVL(SUM(RETURN_EA), 0) RETURN_EA
					           ,NVL((SUM(SALEOUT_EA)-SUM(RETURN_EA)), 0) ADJUST_EA
					           ,SALS_INCLUDE_YN
					           ,SUM(SALS_INCLUDE_N_AMT) SALS_INCLUDE_N_AMT
					      FROM (
					            SELECT A.FUNERAL_HALL_CD   /*** 장례식장코드 */
					                  ,F.UPJANGNM
					                  ,F.SAUPNO
					                  ,(
					                        SELECT NM_KOR
					                          FROM SCC_USERINFO
					                         WHERE UPJANG = A.FUNERAL_HALL_CD
					                           AND SABUN  = F.LEADER_SABUN
					                   ) NM_KOR
					                  ,F.LEADER_SABUN   /* 리더사번 */
					                  ,F.CHARGE_SABUN   /* 점장사번 */
					                  ,F.UP_TAE
					                  ,F.UPJANG_TEL
					                  , SCC_GET_ADDR_FUN('ZIP'   , F.ADDR_KEY, :loginPersMask, :maskAuth) AS ZIP_CODE
                                      , SCC_GET_ADDR_FUN('BASE'  , F.ADDR_KEY, :loginPersMask, :maskAuth) AS BASE_ADDR
                                      , SCC_GET_ADDR_FUN('DETAIL', F.ADDR_KEY, :loginPersMask, :maskAuth) AS DETAIL_ADDR
                                      , SCC_GET_ADDR_FUN('ETC'   , F.ADDR_KEY, :loginPersMask, :maskAuth) AS ETC_ADDR
					                  ,SC_CRYPTO_FUN('DEC', F.UPJANG_TEL_ENC,4) UPJANG_TEL_ENC
					                  ,A.GUEST_NUM         /*** 고객번호 */
					                  ,A.FUNERAL_PARLOR    /* 빈소 */
					                  ,(
					                      SELECT CODE_NAME
					                        FROM SCC_COMMON_CODE
					                       WHERE CODE = A.FUNERAL_PARLOR
					                         AND GROUP_CODE = 'FUNERAL_PARLOR_TYPE'
					                   ) FUNERAL_PARLOR_NM
					                  ,A.THE_DEAD_NM       /* 고인명 */
					                  ,TO_CHAR(A.ENSHRINE_DATE,'YYYY/MM/DD') ENSHRINE_DATE     /* 안치일자 */
			                          ,TO_CHAR(A.BORNE_OUT_DATE,'YYYY/MM/DD') BORNE_OUT_DATE     /* 발인일자 */
					                  ,(
					                       SELECT MAX(CHIEF_MOURNER)
					                         FROM FSF_FAMILY_MASTER
					                        WHERE FUNERAL_HALL_CD = A.FUNERAL_HALL_CD /* 장례식장코드 */
					                          AND GUEST_NUM       = A.GUEST_NUM       /* 고객번호 */
					                   ) CHIEF_MOURNER      /* 상주 */
					                  ,(
					                       SELECT MAX(SCC_CRYPTO.DEC_FUN(CHIEF_MOURNER_TELNO_ENC))
					                         FROM FSF_FAMILY_MASTER
					                        WHERE FUNERAL_HALL_CD = A.FUNERAL_HALL_CD /* 장례식장코드 */
					                          AND GUEST_NUM       = A.GUEST_NUM       /* 고객번호 */
					                   ) CHIEF_MOURNER_TELNO_ENC
					                  ,(TO_CHAR(B.SALE_DATE, 'YYYY')||'년 '||TO_CHAR(B.SALE_DATE, 'MM')||'월 '||TO_CHAR(B.SALE_DATE, 'DD')||'일') SALE_DATE
					                  ,B.SALE_CLASS     /* 001 - 판매 002 - 반품 *판매구분 */
					                  ,B.GOODS_CLASS_CD
					                  ,C.GOODS_CLASS_NM
					                  ,B.DETAIL_GOODS_CD
					                  ,C.DETAIL_GOODS_NM
					                  ,CASE B.SALE_CLASS WHEN '001' THEN 
                                                                            CASE B.ORDER_STATUS WHEN '002' THEN (B.AMT)
                                                                                                ELSE 0
                                                                            END
                                                         ELSE 0 
                                       END SALEOUT_AMT
                                      ,CASE B.SALE_CLASS WHEN '002' THEN 
                                                                            CASE B.ORDER_STATUS WHEN '002' THEN (B.AMT)
                                                                                                ELSE 0
                                                                            END
                                                         ELSE 0 
                                       END RETURN_AMT
                                      ,CASE B.SALE_CLASS WHEN '001' THEN 
                                                                            CASE B.ORDER_STATUS WHEN '002' THEN (B.EA)
                                                                                                ELSE 0
                                                                            END
                                                         ELSE 0 
                                       END SALEOUT_EA
                                      ,CASE B.SALE_CLASS WHEN '002' THEN 
                                                                            CASE B.ORDER_STATUS WHEN '002' THEN (B.EA)
                                                                                                ELSE 0
                                                                            END
                                                         ELSE 0 
                                       END RETURN_EA 
                                      ,CASE C.SALS_INCLUDE_YN WHEN 'N' THEN (B.AMT) ELSE 0 END  SALS_INCLUDE_N_AMT
                                      ,B.EA              /* 개수 */
								      ,B.UNIT            /* 단위 */
								      ,B.LAST_UPRICE     /* 최종단가 */
								      ,GOODS_TYPE		 /* 과면세 구분 */
					                  ,C.REMARK
					                  ,C.SALS_INCLUDE_YN                                       
					              FROM FSF_FUNERAL_MASTER A           /* 고인을 관리하는 테이블 */
					                  ,FSF_SALE_ORDER B               /* 장례식장별 고인별 판매 및 반품 관리 상세 */
					                  ,(SELECT * FROM 
                                                      (
                                                          SELECT 
                                                                      A.FUNERAL_HALL_CD
                                                                     ,A.SET_CD 
                                                                     ,B.SET_NM
                                                                     ,C.GOODS_CLASS_CD
                                                                     ,C.GOODS_CLASS_NM
                                                                     ,A.DETAIL_GOODS_CD
                                                                     ,A.DETAIL_GOODS_NM
                                                                     ,A.UNIT
                                                                     ,A.EA 
                                                                     ,A.LAST_UPRICE 
                                                                     ,A.REMARK
                                                                     ,C.GOODS_TYPE
                                                                     ,'' AS SALS_INCLUDE_YN
                                                          FROM FSF_SCLASS_GOODS_MASTER A
                                                              ,FSF_MCLASS_GOODS_MASTER B
                                                              ,FSF_FUNERAL_GOODS C
                                                          WHERE A.FUNERAL_HALL_CD = B.FUNERAL_HALL_CD
                                                          AND A.FUNERAL_HALL_CD = C.FUNERAL_HALL_CD
                                                          AND A.DETAIL_GOODS_CD = C.DETAIL_GOODS_CD
                                                          AND A.DETAIL_GOODS_NM = C.DETAIL_GOODS_NM
                                                          AND A.SET_CD = B.SET_CD        
                                                          AND A.USE_YN = 'Y'
                                                          AND C.USE_YN = 'Y'
                                                   --       AND (C.SALS_INCLUDE_YN <> 'N' OR C.SALS_INCLUDE_YN IS NULL)	/* 매출포함여부 */
                                                          AND A.FUNERAL_HALL_CD = :funeralHallCd
                                                          UNION ALL
                                                          SELECT 
                                                                      FUNERAL_HALL_CD
                                                                     ,'A' AS SET_CD
                                                                     ,'개별상품' AS SET_NM 
                                                                     ,GOODS_CLASS_CD
                                                                     ,GOODS_CLASS_NM
                                                                     ,DETAIL_GOODS_CD
                                                                     ,DETAIL_GOODS_NM
                                                                     ,UNIT
                                                                     ,EA 
                                                                     ,LAST_UPRICE
                                                                     ,REMARK
                                                                     ,GOODS_TYPE
                                                                     ,SALS_INCLUDE_YN
                                                          FROM FSF_FUNERAL_GOODS 
                                                          WHERE USE_YN = 'Y'
                                                      --    AND (SALS_INCLUDE_YN <> 'N' OR SALS_INCLUDE_YN IS NULL)
                                                          AND FUNERAL_HALL_CD = :funeralHallCd
                                                      )   ) C            /* 장례식장별 물품  */
					                  ,SCO_UPJANG_MST_V F          
					             WHERE A.FUNERAL_HALL_CD = B.FUNERAL_HALL_CD
					               AND A.GUEST_NUM       = B.GUEST_NUM
					               AND B.FUNERAL_HALL_CD = C.FUNERAL_HALL_CD
					               AND B.CLASS_TYPE = C.SET_CD
					               AND B.GOODS_CLASS_CD  = C.GOODS_CLASS_CD
					               AND B.DETAIL_GOODS_CD = C.DETAIL_GOODS_CD
					               AND B.FUNERAL_HALL_CD = F.UPJANG
					           --    AND (B.KIND_TYPE IS NULL OR B.KIND_TYPE <> 'S')
					               AND A.FUNERAL_HALL_CD = :funeralHallCd
					            <#if guestNum?has_content>    
								    AND A.GUEST_NUM 		 = :guestNum
								</#if>    
								<#if theDeadNm?has_content>    
								    AND A.THE_DEAD_NM  LIKE '%'||:theDeadNm||'%'
								</#if>    
								<#if casketFrom?has_content>   
								    <#if casketTo?has_content>
								    	AND TO_CHAR(A.CASKET_DATE,'YYYYMMDD') BETWEEN :casketFrom AND :casketTo
								    </#if>
							    </#if>    
							    <#if borneOutFrom?has_content>   
								    <#if borneOutTo?has_content>
								    	AND TO_CHAR(A.BORNE_OUT_DATE,'YYYYMMDD') BETWEEN :borneOutFrom AND :borneOutTo
								    </#if>
							    </#if>
					        )        
					    WHERE 1=1
					 GROUP BY FUNERAL_HALL_CD,UPJANGNM,SAUPNO, NM_KOR,LEADER_SABUN,CHARGE_SABUN,UP_TAE,UPJANG_TEL,UPJANG_TEL_ENC       
					         ,GUEST_NUM,FUNERAL_PARLOR,FUNERAL_PARLOR_NM,THE_DEAD_NM,ENSHRINE_DATE,BORNE_OUT_DATE,CHIEF_MOURNER,CHIEF_MOURNER_TELNO_ENC
					         ,GOODS_CLASS_CD,GOODS_CLASS_NM,BASE_ADDR,DETAIL_ADDR,SALS_INCLUDE_YN
					        <#if searchType=="2">    
						      ,UNIT, LAST_UPRICE, GOODS_TYPE, DETAIL_GOODS_CD,DETAIL_GOODS_NM, REMARK
							</#if>
					 ORDER BY GOODS_CLASS_CD 		
		          )
		    WHERE SALEOUT_AMT > 0
		   --   AND ADJUST_AMT > 0
		]]>
	</statement>
	
	<!-- 과세유형 combo 를 조회한다. -->
	<statement name="selectVatClass" type="select">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.selectVatClass */
		<![CDATA[
		  SELECT VAT_CD  CODE
		        ,VAT_NM  CODE_NAME
		  FROM SLA_VAT_CD_MST
		  WHERE VAT_CD IN ('20','21','43')
		  ORDER BY VAT_CD
		]]>
	</statement>
	
	<!-- 가맹점번호 combo 를 조회한다. -->
<!-- 	<statement name="selectFrncStorNum" type="select">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.selectFrncStorNum */
		<![CDATA[
		  SELECT  A.BUYCPNY_CD		/* 매입사 코드 */
				 ,A.BUYCPNY_NM		/* 매입사 명 */
				 ,B.FRNC_STOR_NUM	/* 가맹점 번호 */
		    FROM  SLA_BUY_CPNY_MGMT	 A	/* 카드 매입사 코드 정보를 관리한다. */
				 ,SLA_FRNC_STOR_MGMT B	/* 가맹점관리 */
		   WHERE  A.BUYCPNY_CD = B.BUYCPNY_CD
		     AND  B.UPJANG_CD = :upjangCd
		ORDER BY  A.BUYCPNY_CD, B.FRNC_STOR_NUM
		]]>
	</statement> -->

	<!-- 가맹점번호 combo 를 조회한다. -->
	<statement name="selectFrncStorNum" type="select">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.selectFrncStorNum */
		<![CDATA[
			SELECT  BUYCPNY_CD  -- 매입사코드
	               ,BUYCPNY_NM  -- 매입사명
	        FROM SLA_BUY_CPNY_MGMT
	        WHERE RECD_STATUS = 'L'
	        ORDER BY BUYCPNY_CD ASC
		]]>
	</statement>
	
	<!-- 창고 목록을 조회한다. -->
	<statement name="selectPosClass" type="select">
		/*+ com.hwfs.fs.fsl.dao.MealTicketPopupDAO.selectPosClass */
	   SELECT SUBINV_CODE CODE
    		 ,SUBINV_NAME CODE_NAME
		 FROM HLDC_PO_SUBINVENTORY 
		WHERE USE_YN='Y' 
	      AND UPJANG= :upjangCd
	 ORDER BY SUBINV_CODE
	</statement>
	
	<!-- 결재수단을 조회한다. -->
	<statement name="selectPayWayList" type="select">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.selectPayWayList */
		<![CDATA[
		  SELECT A.OCCUR_DATE       /* 발생일자 */
		        ,A.SYS_CLASS        /* 시스템 구분 16:장례식장 */
		        ,A.UPJANG_CD        /* 업장코드 */
		        ,A.RECEIPT_NUM      /* 영수증 번호 */
		        ,C.SEQ              /* 순번 */
		        ,C.MU_CD            /* MU 코드 */
		        ,C.CC_CD            /* CC 코드 */
		        ,C.PAY_CD           /* 지불 코드 */
		        ,C.PAY_CD_NM        /* 지불 코드 명 - 지불코드별로 아래와 같이 처리 */
		        ,CASE C.PAY_CD WHEN '2' THEN ( SELECT BUYCPNY_CD
		                                         FROM SLA_BUY_CPNY_MGMT
		                                        WHERE CUST_CD = C.EVIDENCE_5)
		                       ELSE C.EVIDENCE_1
		         END CARD_PAY_CD
		        ,CASE C.PAY_CD WHEN '2' THEN ( SELECT BUYCPNY_NM
		                                         FROM SLA_BUY_CPNY_MGMT
		                                        WHERE CUST_CD = C.EVIDENCE_5)
		                       ELSE ''
		         END CARD_PAY_CD_NM
		        ,C.EVIDENCE_1        /* 증빙 1 - 지불코드별로 아래와 같이 처리 */
		        ,C.EVIDENCE_2        /* 증빙 2 - 지불코드별로 아래와 같이 처리 */
		        ,C.EVIDENCE_3        /* 증빙 3 - 지불코드별로 아래와 같이 처리 */
		        ,C.EVIDENCE_4        /* 증빙 4 - 지불코드별로 아래와 같이 처리 1현금: 현금영수증번호(장례식장) / 2카드 : 카드사명  /**** 급식만 사용****/
		        ,C.EVIDENCE_5        /* 증빙 5 -  */
		        ,E.CARD_CLASS
		        ,E.BUYCPNY_CD	AS CARD_CUST_CD
		        ,E.CARD_COM_CD	AS BANK_CD
		        ,E.FRNC_STOR_NUM
		        ,C.ENC_EVIDENCE_NUM /* 암호화 증빙 번호 - 지불코드별로 아래와 같이 처리 */
		        ,C.AMT            	/* 금액 */
		        ,C.EXCH_AMT         /* 거스름돈 */
		        ,C.NET_AMT        	/* 공급가액 */
		        ,C.VAT_AMT        	/* 부가세 금액 */
		        ,C.DENOM_AMT        /* 액면금액 */
		        ,C.SALS_UUSER       /* 매출 수정자 */
		        ,C.REMARK           /* 비고(적요) - 조정분 적요 */
		        ,C.DDDD_CLOSE_YN    /* 일일 마감 여부 */
		        ,C.DDDD_CLOSE_DATE  /* 일일 마감 일자 */
		        ,C.MODIFY_SALS_YN   /* 데이터 구분 */
		        ,C.RECD_STATUS      /* 레코드 상태(L: Live, D: Delete) */
		        ,A.POS_NUM
		        ,(SELECT SUBINV_NAME FROM HLDC_PO_SUBINVENTORY WHERE USE_YN='Y' AND UPJANG= A.UPJANG_CD AND SUBINV_CODE = A.POS_NUM) POS_NM
		        ,A.CUST_CD
		        ,(SELECT CUSTNM FROM ST_CUST WHERE CUSTCD = A.CUST_CD AND USE_YN = 'Y') CUST_NM
		        ,B.SALS_CLASS         	  /* 매출유형 */
		        ,B.SAL_AMT                /* 금액 */
		        ,B.VAT_CLASS                /* 1: 과세 2: 면세 3: 영세 */
		        ,'Y' REG_YN     	/* 수정가능 구분자 */
		        ,C.EVIDENCE_7      AS GUEST_SAL_AMT 		/* 고객결제 금액	*/
		   <#if searchPayType?has_content>
		        ,'' GUEST_NUM
		        ,'' THE_DEAD_NM	   
		   <#else> 
		        ,D.GUEST_NUM
		        ,D.THE_DEAD_NM
		   </#if>
		   FROM  SLA_IF_UPJANG_SALS_MST A
		        ,SLA_IF_UPJANG_SALS_DETAIL B
		        ,SLA_IF_UPJANG_PAYMENT C
		   <#if searchPayType?has_content>		   
		   <#else>
		        ,FSF_FUNERAL_MASTER D           /* 고인을 관리하는 테이블 */
		   </#if>
		        ,SLA_IF_CARD_APPRV_INFO E
		   WHERE A.MU_CD=B.MU_CD 
		     AND A.UPJANG_CD = B.UPJANG_CD
		     AND A.UPJANG_CD = E.UPJANG_CD(+)
		     AND A.SYS_CLASS = B.SYS_CLASS
		     AND A.SYS_CLASS = E.SYS_CLASS(+)
		     AND A.OCCUR_DATE = B.OCCUR_DATE
		     AND A.OCCUR_DATE = C.OCCUR_DATE
		     AND A.OCCUR_DATE = E.OCCUR_DATE(+)
		     AND A.RECEIPT_NUM = B.RECEIPT_NUM
		     AND A.RECEIPT_NUM = E.RECEIPT_NUM(+)
		     AND B.MU_CD = C.MU_CD
		     AND B.UPJANG_CD   = C.UPJANG_CD
		     AND B.SYS_CLASS   = C.SYS_CLASS
		     AND B.RECEIPT_NUM = C.RECEIPT_NUM
		     AND B.SEQ = C.SEQ
		 <#if searchPayType?has_content>		   
		 <#else>    
		     AND C.UPJANG_CD  = D.FUNERAL_HALL_CD
		     AND C.EVIDENCE_4 = TO_CHAR(D.GUEST_NUM)
		 </#if>
		     AND C.UPJANG_CD  = :funeralHallCd
		     AND C.EVIDENCE_4 = TO_CHAR(:guestNum)
		     AND C.RECD_STATUS <> 'D'
		     AND C.SYS_CLASS = '16'		/* 장례식장 */
		 <#if saleOutReturnFrom?has_content>
		 	<#if saleOutReturnTo?has_content>
		     AND A.OCCUR_DATE BETWEEN :saleOutReturnFrom AND :saleOutReturnTo
		    </#if> 
		 </#if>
	<#if searchPayType?has_content>		   
		ORDER BY A.CUST_CD, C.RECEIPT_NUM, C.SEQ
	<#else>	     		     
		ORDER BY D.FUNERAL_HALL_CD, D.GUEST_NUM, A.CUST_CD, C.RECEIPT_NUM, C.SEQ
	</#if>
		]]>
	</statement>
	
	<!-- 영수증 번호 채번을 조회한다. -->
	<statement name="selectReceiptNum" type="select">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.selectReceiptNum */
		<![CDATA[
			SELECT TRIM(TO_CHAR(FSL_SLA_IF_UPJANG_S.NEXTVAL,'0000000')) RECEIPT_NUM FROM DUAL
		]]>
	</statement>
	
	<!-- 업장 발생 매출 마스터 정보(을)를 등록한다. -->
	<statement name="insertSlaIfUpjangSalsMst" type="insert">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.insertSlaIfUpjangSalsMst */
		<![CDATA[
			INSERT INTO SLA_IF_UPJANG_SALS_MST
			(
				 OCCUR_DATE		/* 업장 매출 마스터 */
				,SYS_CLASS		/* 시스템 구분 */
				,UPJANG_CD		/* 업장 코드 */
				,RECEIPT_NUM	/* 영수증 번호 */
				,MU_CD			/* MU 코드 */
				,CC_CD			/* CC 코드 */
				,POS_NUM		/* POS 번호 or 창고번호 */
				,CUST_CD
				,DDDD_CLOSE_YN		/* 일일 마감 여부 */
				,MODIFY_SALS_YN		/* 데이터 구분 */
				,RECD_STATUS		/* 레코드 상태(L:Live, D:Delete) */
				,CUSER			/* 생성자 사번 */
				,CDATE			/* 생성일시 */
				,UUSER
				,UDATE
			)
			VALUES
			(
				 <#if occurDate?has_content> :occurDate <#else> null </#if>
				,'16'
				,<#if upjangCd?has_content> :upjangCd <#else> null </#if>
				,<#if receiptNum?has_content> :receiptNum <#else> null </#if>
				,<#if muCd?has_content> :muCd <#else> null </#if>
				,<#if ccCd?has_content> :ccCd <#else> null </#if>
				,<#if posNum?has_content> :posNum <#else> null </#if>
				,<#if custCd?has_content> :custCd <#else> null </#if>
				,'N'
				,'N'
				,'L'
				,:loginSabun
				,SYSDATE
				,:loginSabun
				,SYSDATE
			)
		]]>
	</statement>
	
	<!-- 업장 발생 매출 마스터 정보 (을)를 수정한다. -->
	<statement name="updateSlaIfUpjangSalsMst" type="update">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.updateSlaIfUpjangSalsMst */
		<![CDATA[
			UPDATE  SLA_IF_UPJANG_SALS_MST
			   SET  MU_CD			= :muCd			/* MU 코드 */
				   ,CC_CD			= :ccCd			/* CC 코드 */
				   ,POS_NUM			= :posNum			/* POS 번호 or 창고번호 */
				   ,CUST_CD			= :custCd
				   ,UUSER		= :loginSabun
				   ,UDATE		= SYSDATE
			 WHERE OCCUR_DATE	= :occurDate	/* 업장 매출 마스터 */
			   AND SYS_CLASS	= :sysClass		/* 시스템 구분 */
			   AND UPJANG_CD	= :upjangCd		/* 업장 코드 */
			   AND RECEIPT_NUM	= :receiptNum	/* 영수증 번호 */
		]]>
	</statement>

	<!-- 업장 발생 매출 마스터 정보 (을)를 삭제한다. -->
	<statement name="deleteSlaIfUpjangSalsMst" type="update">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.deleteSlaIfUpjangSalsMst */
		<![CDATA[
			DELETE FROM SLA_IF_UPJANG_SALS_MST
			 WHERE OCCUR_DATE	= :occurDate	/* 업장 매출 마스터 */
			   AND SYS_CLASS	= :sysClass		/* 시스템 구분 */
			   AND UPJANG_CD	= :upjangCd		/* 업장 코드 */
			   AND RECEIPT_NUM	= :receiptNum	/* 영수증 번호 */
		]]>
	</statement>

	<!-- 업장 발생 매출 마스터 정보 (을)를 삭제한다.
	<statement name="deleteSlaIfUpjangSalsMst" type="update">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.deleteSlaIfUpjangSalsMst */
		<![CDATA[
			UPDATE SLA_IF_UPJANG_SALS_MST
			   SET RECD_STATUS  = 'D'
			      ,UUSER			= :loginSabun
				  ,UDATE			= SYSDATE
			 WHERE OCCUR_DATE	= :occurDate	/* 업장 매출 마스터 */
			   AND SYS_CLASS	= :sysClass		/* 시스템 구분 */
			   AND UPJANG_CD	= :upjangCd		/* 업장 코드 */
			   AND RECEIPT_NUM	= :receiptNum	/* 영수증 번호 */
		]]>
	</statement> -->
	
	<!-- 업장 발생 매출 상세 정보(을)를 등록한다. -->
	<statement name="insertSlaIfUpjangSalsDetail" type="insert">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.insertSlaIfUpjangSalsDetail */
		<![CDATA[
			INSERT INTO SLA_IF_UPJANG_SALS_DETAIL
			(
				 OCCUR_DATE			/* 발생일자 */
				,SYS_CLASS			/* 시스템 구분 */
				,UPJANG_CD			/* 업장 코드 */
				,RECEIPT_NUM		/* 영수증 번호 */
				,SEQ				/* 순번 */
				,MU_CD				/* MU 코드 */
				,CC_CD				/* CC 코드 */
				,SALS_CLASS			/* 매출 구분 */
				,NET_AMT			/* 공급가액 */
				,VAT_AMT			/* 부가세 금액 */
				,SAL_AMT			/* 금액 */
				,VAT_CLASS			/* 1: 과세 2: 면세 3: 영세 */
				,DDDD_CLOSE_YN		/* 일일 마감 여부 */
				,MODIFY_SALS_YN		/* 데이터 구분 */
				,RECD_STATUS		/* 레코드 상태(L:Live, D:Delete) */
				,CUSER				/* 생성자 사번 */
				,CDATE				/* 생성일시 */
				,UUSER
				,UDATE
			)
			VALUES
			(
				 <#if occurDate?has_content> :occurDate <#else> null </#if>
				,'16'
				,<#if upjangCd?has_content> :upjangCd <#else> null </#if>
				,<#if receiptNum?has_content> :receiptNum <#else> null </#if>
				,1
				,<#if muCd?has_content> :muCd <#else> null </#if>
				,<#if ccCd?has_content> :ccCd <#else> null </#if>
				,<#if salsClass?has_content> :salsClass <#else> null </#if>
				,<#if salAmt?has_content> DECODE(:vatClass, '20',ROUND(TO_NUMBER(:salAmt)/1.1),ROUND(TO_NUMBER(:salAmt))) <#else> NULL </#if>	
				,<#if salAmt?has_content> DECODE(:vatClass, '20',TO_NUMBER(:salAmt)-ROUND(TO_NUMBER(:salAmt)/1.1),0) <#else> NULL </#if>
				,<#if salAmt?has_content> :salAmt <#else> null </#if>
				,<#if vatClass?has_content> :vatClass <#else> null </#if>
				,'N'
				,'N'
				,'L'
				,:loginSabun
				,SYSDATE
				,:loginSabun
				,SYSDATE
			)
		]]>
	</statement>
	
	<!-- 업장 발생 매출 상세 정보 (을)를 수정한다. -->
	<statement name="updateSlaIfUpjangSalsDetail" type="update">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.updateSlaIfUpjangSalsDetail */
		<![CDATA[
		 UPDATE  SLA_IF_UPJANG_SALS_DETAIL
		    SET  MU_CD			=	:muCd		/* MU 코드 */
				,CC_CD			=	:ccCd		/* CC 코드 */
				,SALS_CLASS		=	:salsClass	/* 매출 구분 */
				,NET_AMT		= 	<#if salAmt?has_content> DECODE(:vatClass, '20',ROUND(TO_NUMBER(:salAmt)/1.1),ROUND(TO_NUMBER(:salAmt))) <#else> NULL </#if>	  		/* 공급가액 */
				,VAT_AMT		= 	<#if salAmt?has_content> DECODE(:vatClass, '20',TO_NUMBER(:salAmt)-ROUND(TO_NUMBER(:salAmt)/1.1),0) <#else> NULL </#if>		/* 부가세 금액 */
				,SAL_AMT		=	:salAmt		/* 금액 */
				,VAT_CLASS		=	:vatClass	
				,UUSER			= :loginSabun
				,UDATE			= SYSDATE
		  WHERE  OCCUR_DATE	 =	:occurDate	/* 발생일자 */
			AND  SYS_CLASS	 =	:sysClass	/* 시스템 구분 */
			AND  UPJANG_CD	 =	:upjangCd	/* 업장 코드 */
			AND  RECEIPT_NUM =	:receiptNum /* 영수증 번호 */
			AND  SEQ		 =	 1			/* 순번 */
		]]>
	</statement>

	<!-- 업장 발생 매출 상세 정보 (을)를 삭제한다. -->
	<statement name="deleteSlaIfUpjangSalsDetail" type="delete">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.deleteSlaIfUpjangSalsDetail */
		<![CDATA[
			DELETE FROM  SLA_IF_UPJANG_SALS_DETAIL
			 WHERE  OCCUR_DATE	 =	:occurDate	/* 발생일자 */
			   AND  SYS_CLASS	 =	:sysClass	/* 시스템 구분 */
			   AND  UPJANG_CD	 =	:upjangCd	/* 업장 코드 */
			   AND  RECEIPT_NUM  =	:receiptNum /* 영수증 번호 */
			   AND  SEQ		     =	 1			/* 순번 */
		]]>
	</statement>

	<!-- 업장 발생 매출 상세 정보 (을)를 삭제한다. 
	<statement name="deleteSlaIfUpjangSalsDetail" type="delete">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.deleteSlaIfUpjangSalsDetail */
		<![CDATA[
			UPDATE  SLA_IF_UPJANG_SALS_DETAIL
			   SET  RECD_STATUS  =  'D'
			       ,UUSER			= :loginSabun
				   ,UDATE			= SYSDATE
			 WHERE  OCCUR_DATE	 =	:occurDate	/* 발생일자 */
			   AND  SYS_CLASS	 =	:sysClass	/* 시스템 구분 */
			   AND  UPJANG_CD	 =	:upjangCd	/* 업장 코드 */
			   AND  RECEIPT_NUM  =	:receiptNum /* 영수증 번호 */
			   AND  SEQ		     =	 1			/* 순번 */
		]]>
	</statement>-->
	
	<!-- 업장 발생 Payment 정보(을)를 등록한다. -->
	<statement name="insertSlaIfUpjangPayment" type="insert">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.insertSlaIfUpjangPayment */
		<![CDATA[
			INSERT INTO SLA_IF_UPJANG_PAYMENT
			(
				 OCCUR_DATE		/* 발생일자 */
				,SYS_CLASS		/* 시스템 구분 16:장례식장 */
				,UPJANG_CD		/* 업장코드 */
				,RECEIPT_NUM	/* 영수증 번호 */
				,SEQ			/* 순번 */
				,MU_CD			/* MU 코드 */
				,CC_CD			/* CC 코드 */
				,PAY_CD			/* 지불 코드 */
				,PAY_CD_NM		/* 지불 코드 명 - 지불코드별로 아래와 같이 처리 */
				,EVIDENCE_4		/* 증빙 4 - 지불코드별로 아래와 같이 처리 1현금: 현금영수증번호(장례식장) / 2카드 : 카드사명  /**** 급식만 사용****/
				<#if payCd=='1'>
				,EVIDENCE_1		/* 증빙 1 - 지불코드별로 아래와 같이 처리 */
				<#else>
				,EVIDENCE_5		/* 증빙 5 -  */
				</#if>
				,EVIDENCE_6		/* 증빙 6 -  */
				,EVIDENCE_7		/* 증빙 7 - 고객결제 금액  */
				,ENC_EVIDENCE_NUM /* 암호화 증빙 번호 - 지불코드별로 아래와 같이 처리 */
				,AMT			/* 금액 */
				,NET_AMT		/* 공급가액 */
				,VAT_AMT		/* 부가세 금액 */
				,DENOM_AMT		/* 액면금액 */
				,DDDD_CLOSE_YN		/* 일일 마감 여부 */
				,MODIFY_SALS_YN		/* 데이터 구분 */
				,RECD_STATUS		/* 레코드 상태(L: Live, D: Delete) */
				,CUSER				/* 생성자 사번 */
				,CDATE				/* 생성일시 */
				,UUSER
				,UDATE
			)
			VALUES
			(
				 <#if occurDate?has_content> :occurDate <#else> null </#if>
				,'16'
				,<#if upjangCd?has_content> :upjangCd <#else> null </#if>
				,<#if receiptNum?has_content> :receiptNum <#else> null </#if>
				,'1'
				,<#if muCd?has_content> :muCd <#else> null </#if>
				,<#if ccCd?has_content> :ccCd <#else> null </#if>
				,<#if payCd?has_content> :payCd <#else> null </#if>
				,<#if payCd?has_content> DECODE(:payCd, '1', '현금', '2', '카드') <#else> null </#if>
				,<#if guestNum?has_content> :guestNum <#else> null </#if>
				<#if payCd=='1'>
					,<#if cardPayCd?has_content> :cardPayCd <#else> null </#if>	 /* 증빙 1 - 지불코드별로 아래와 같이 처리 */
				<#else>
					,<#if cardCustCd?has_content> :cardCustCd <#else> null </#if>	 /* 증빙 5 -  */
				</#if>
				,<#if cardPayCdNm?has_content> :cardPayCdNm <#else> null </#if>
				,<#if guestSalAmt?has_content> :guestSalAmt <#else> null </#if>
				,<#if encEvidenceNum?has_content> :encEvidenceNum <#else> null </#if>
				,<#if salAmt?has_content> :salAmt <#else> null </#if>
				,<#if salAmt?has_content> DECODE(:vatClass, '20',ROUND(TO_NUMBER(:salAmt)/1.1),ROUND(TO_NUMBER(:salAmt))) <#else> NULL </#if>	
				,<#if salAmt?has_content> DECODE(:vatClass, '20',TO_NUMBER(:salAmt)-ROUND(TO_NUMBER(:salAmt)/1.1),0) <#else> NULL </#if>
				,<#if denomAmt?has_content> :salAmt <#else> null </#if>
				,'N'
				,'N'
				,'L'
				,:loginSabun
				,SYSDATE
				,:loginSabun
				,SYSDATE
			)
		]]>
	</statement>
	
	<!-- 업장 발생 Payment 정보 (을)를 수정한다. -->
	<statement name="updateSlaIfUpjangPayment" type="update">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.updateSlaIfUpjangPayment */
		<![CDATA[
			UPDATE  SLA_IF_UPJANG_PAYMENT
			   SET   MU_CD			= 	:muCd		/* MU 코드 */
					,CC_CD			= 	:ccCd		/* CC 코드 */
					,PAY_CD			= 	:payCd		/* 지불 코드 */
					,PAY_CD_NM		= 	<#if payCd?has_content> DECODE(:payCd, '1', '현금', '2', '카드') <#else> null </#if>	/* 지불 코드 명 - 지불코드별로 아래와 같이 처리 */
					,EVIDENCE_4		= 	:guestNum	 /* 증빙 4 - 지불코드별로 아래와 같이 처리 1현금: 고객번호(장례식장) / 2카드 :고객번호  /**** 급식만 사용****/
					<#if payCd=='1'>
					,EVIDENCE_1		= 	<#if cardPayCd?has_content> :cardPayCd <#else> null </#if>	 /* 증빙 1 - 지불코드별로 아래와 같이 처리 */
					<#else>
					,EVIDENCE_5		= 	<#if cardCustCd?has_content> :cardCustCd <#else> null </#if>	 /* 증빙 5 -  */
					</#if>
					,EVIDENCE_6		= 	<#if cardPayCdNm?has_content> :cardPayCdNm <#else> null </#if>	 /* 증빙 6 -  */
					,EVIDENCE_7		= 	<#if guestSalAmt?has_content> :guestSalAmt <#else> null </#if>	 /* 증빙 6 -  */
					,ENC_EVIDENCE_NUM =	<#if encEvidenceNum?has_content> :encEvidenceNum <#else> null </#if>		/* 암호화 증빙 번호 - 지불코드별로 아래와 같이 처리 */
					,AMT			= 	<#if salAmt?has_content> :salAmt <#else> null </#if>		/* 금액 */
					,NET_AMT		= 	<#if salAmt?has_content> DECODE(:vatClass, '20',ROUND(TO_NUMBER(:salAmt)/1.1),ROUND(TO_NUMBER(:salAmt))) <#else> NULL </#if>	  		/* 공급가액 */
					,VAT_AMT		= 	<#if salAmt?has_content> DECODE(:vatClass, '20',TO_NUMBER(:salAmt)-ROUND(TO_NUMBER(:salAmt)/1.1),0) <#else> NULL </#if> 	/* 부가세 금액 */
					,DENOM_AMT		= 	<#if salAmt?has_content> :salAmt <#else> null </#if>	/* 액면금액 */
					,UUSER			= :loginSabun
					,UDATE			= SYSDATE
			 WHERE  OCCUR_DATE	 =	:occurDate	/* 발생일자 */
			   AND  SYS_CLASS	 =	:sysClass	/* 시스템 구분 */
			   AND  UPJANG_CD	 =	:upjangCd	/* 업장 코드 */
			   AND  RECEIPT_NUM =	:receiptNum /* 영수증 번호 */
			   AND  SEQ		    =	 1			/* 순번 */
		]]>
	</statement>

	<!-- 업장 발생 Payment 정보 (을)를 삭제한다. -->
	<statement name="deleteSlaIfUpjangPayment" type="update">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.deleteSlaIfUpjangPayment */
		<![CDATA[
			DELETE FROM  SLA_IF_UPJANG_PAYMENT
			 WHERE  OCCUR_DATE	=	:occurDate	/* 발생일자 */
			   AND  SYS_CLASS	=	:sysClass	/* 시스템 구분 */
			   AND  UPJANG_CD	=	:upjangCd	/* 업장 코드 */
			   AND  RECEIPT_NUM =	:receiptNum /* 영수증 번호 */
			   AND  SEQ		    =	 1			/* 순번 */
		]]>
	</statement>
	
	<!-- 업장 발생 Payment 정보 (을)를 삭제한다. 
	<statement name="deleteSlaIfUpjangPayment" type="update">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.deleteSlaIfUpjangPayment */
		<![CDATA[
			UPDATE  SLA_IF_UPJANG_PAYMENT
			   SET  RECD_STATUS =   'D'
				   ,UUSER		=   :loginSabun
				   ,UDATE		=   SYSDATE
			 WHERE  OCCUR_DATE	=	:occurDate	/* 발생일자 */
			   AND  SYS_CLASS	=	:sysClass	/* 시스템 구분 */
			   AND  UPJANG_CD	=	:upjangCd	/* 업장 코드 */
			   AND  RECEIPT_NUM =	:receiptNum /* 영수증 번호 */
			   AND  SEQ		    =	 1			/* 순번 */
		]]>
	</statement>-->
	
	<!-- 카드 승인 정보(을)를 등록한다. -->
	<statement name="insertSlaIfCardApprvInfo" type="insert">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.insertSlaIfCardApprvInfo */
		<![CDATA[
			INSERT INTO SLA_IF_CARD_APPRV_INFO
			(
				 OCCUR_DATE		/* 발생일자 */
				,SYS_CLASS		/* 시스템 구분(16_장례식장) */
				,UPJANG_CD		/* 업장코드 */
				,RECEIPT_NUM	/* 영수증 번호 */
				,SEQ			/* 순번 */
				,POS_NUM		/* POS 번호 or 창고코드 */
				,CARD_CLASS		/* 1.신용카드 */
				,BUYCPNY_CD		/* 매입사 코드 */
				,CARD_COM_CD	/* 은행코드 */
				,USE_AMT		/* 사용 금액 */
				,MU_CD			/* MU 코드 */
				,CC_CD			/* CC 코드 */
				,FRNC_STOR_NUM	/* 가맹점 코드 */
				,DEAL_TYPE			/* 거래 유형(1_정상매출분, 2_선수금입금, 3_후불입금, 4_쿠폰판매분, 5_MEMBER가입, 6_식권 판매) */
				,DDDD_CLOSE_YN		/* 일일 마감 여부 */
				,MODIFY_SALS_YN		/* 데이터 구분(N_정상분, Y_조정분) */
				,DATA_CLASS			/* 데이터 구분(1_정상분, 2_조정분) */
				,RECD_STATUS		/* 레코드 상태 */
				,CUSER				/* 생성자 사번 */
				,CDATE				/* 생성일시 */
				,UUSER
				,UDATE
			)
			VALUES
			(
				 :occurDate
				,'16'		/* 시스템 구분(16_장례식장) */
				,:upjangCd		/* 업장코드 */
				,:receiptNum	/* 영수증 번호 */
				,1				/* 순번 */
				,:posNum		/* pos 번호 or 창고코드 */
				,'1'			/* 1.신용카드 */
				,<#if cardPayCd?has_content> DECODE(:payCd,'2', :cardPayCd, NULL) <#else> null </#if>		/* 매입사 코드 */
				,<#if bankCd?has_content> :bankCd <#else> null </#if>		/* 은행 코드 */
				,<#if salAmt?has_content> :salAmt <#else> null </#if>		/* 사용 금액 */
				,:muCd			/* mu 코드 */
				,:ccCd			/* cc 코드 */
				,<#if frncStorNum?has_content> :frncStorNum <#else> null </#if>	/* 가맹점 코드 */
				,'1'			/* 거래 유형(1_정상매출분, 2_선수금입금, 3_후불입금, 4_쿠폰판매분, 5_MEMBER가입, 6_식권 판매) */
				,'N'		/* 일일 마감 여부 */
				,'N'		/* 데이터 구분(N_정상분, Y_조정분) */
				,'1'			/* 데이터 구분(1_정상분, 2_조정분) */
				,'L'		/* 레코드 상태 */
				,:loginSabun
				,SYSDATE
				,:loginSabun
				,SYSDATE
			)
		]]>
	</statement>
	
	<!-- 카드 승인 정보(을)를 수정한다. -->
	<statement name="updateSlaIfCardApprvInfo" type="update">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.updateSlaIfCardApprvInfo */
		<![CDATA[
			UPDATE  SLA_IF_CARD_APPRV_INFO
			   SET  POS_NUM			= :posNum		/* POS 번호 or 창고코드 */
				   ,BUYCPNY_CD		= <#if cardPayCd?has_content> DECODE(:payCd,'2', :cardPayCd, NULL) <#else> null </#if>	/* 매입사 코드 */
				   ,CARD_COM_CD		= <#if bankCd?has_content> :bankCd <#else> null </#if>	/* 은행 코드 */
				   ,USE_AMT			= <#if salAmt?has_content> :salAmt <#else> null </#if>		/* 사용 금액 */
				   ,MU_CD			= :muCd			/* MU 코드 */
				   ,CC_CD			= :ccCd			/* CC 코드 */
				   ,FRNC_STOR_NUM	= <#if frncStorNum?has_content> :frncStorNum <#else> null </#if>  /* 가맹점 코드 */
				   ,UUSER			= :loginSabun
				   ,UDATE			= SYSDATE
			 WHERE  OCCUR_DATE	=	:occurDate	/* 발생일자 */
			   AND  SYS_CLASS	=	:sysClass	/* 시스템 구분 */
			   AND  UPJANG_CD	=	:upjangCd	/* 업장 코드 */
			   AND  RECEIPT_NUM =	:receiptNum /* 영수증 번호 */
			   AND  SEQ		    =	 1			/* 순번 */
		]]>
	</statement>
	
	<!-- 카드 승인 정보 (을)를 삭제한다. -->
	<statement name="deleteSlaIfCardApprvInfo" type="update">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.deleteSlaIfCardApprvInfo */
		<![CDATA[
			DELETE	FROM  SLA_IF_CARD_APPRV_INFO
			 WHERE  OCCUR_DATE	=	:occurDate	/* 발생일자 */
			   AND  SYS_CLASS	=	:sysClass	/* 시스템 구분 */
			   AND  UPJANG_CD	=	:upjangCd	/* 업장 코드 */
			   AND  RECEIPT_NUM =	:receiptNum /* 영수증 번호 */
			   AND  SEQ		    =	 1			/* 순번 */
		]]>
	</statement>
	
	
	
	<!-- 카드 승인 정보 (을)를 삭제한다. 
	<statement name="deleteSlaIfCardApprvInfo" type="update">
		/*+ com.hwfs.fs.fsf.dao.FuneralDeadDeadSheetDAO.deleteSlaIfCardApprvInfo */
		<![CDATA[
			UPDATE  SLA_IF_CARD_APPRV_INFO
			   SET  RECD_STATUS =   'D'	/* 레코드상태_삭제(D) */
			       ,UUSER		=   :loginSabun
	   			   ,UDATE		=   SYSDATE
			 WHERE  OCCUR_DATE	=	:occurDate	/* 발생일자 */
			   AND  SYS_CLASS	=	:sysClass	/* 시스템 구분 */
			   AND  UPJANG_CD	=	:upjangCd	/* 업장 코드 */
			   AND  RECEIPT_NUM =	:receiptNum /* 영수증 번호 */
			   AND  SEQ		    =	 1			/* 순번 */
		]]>
	</statement>-->
</hqml>
