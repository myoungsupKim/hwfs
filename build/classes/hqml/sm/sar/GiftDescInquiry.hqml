<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="sm.sar.giftDescInquiryDAO">
	<desc>상품권내역조회 HQML Query</desc>

	<!-- 상품권내역조회 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.sm.sar.dao.GiftDescInquiryDAO.selectList */
		<![CDATA[
		<#if searchType == "01">
			SELECT 
			    MU_CD
			    , (SELECT DISTINCT MU.MU_NM FROM HLDC_SC_DEPT_V MU WHERE MU.MU_CD = X.MU_CD)  AS MU_NM
			    , CC_CD
			    , (SELECT  CC_NM FROM SCC_CC WHERE CC_CD = X.CC_CD) AS CC_NM
			    , GIFT_KIND_CD
			    , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'GIFT_TYPE' AND CODE = X.GIFT_KIND_CD)  AS GIFT_KIND_NM
			    , OCCUR_DATE
			    , SUM(GIFT_AMT) AS GIFT_AMT
			    , SUM(USE_AMT) AS USE_AMT
			    , SUM(COMM_AMT) AS COMM_AMT
			    , SUM(ASK_AMT) AS ASK_AMT
			    , SUM(N_ASK_AMT) AS N_ASK_AMT
			FROM 
				(    
						SELECT A.MU_CD,
						       A.CC_CD,
						       A.GIFT_KIND_CD,
						       A.OCCUR_DATE,
			                   'Y' AS GIFT_BILLING_YN,
						       SUM(A.GIFT_AMT)  AS GIFT_AMT,
						       SUM(A.USE_AMT)   AS USE_AMT,
						       NVL(SUM(A.COMM_AMT),0) + NVL(SUM(A.COMM_VAT_AMT),0)  AS COMM_AMT,
						       NVL(SUM(A.GIFT_AMT),0) - (NVL(SUM(A.COMM_AMT),0) + NVL(SUM(A.COMM_VAT_AMT),0)) AS ASK_AMT,
						       0 AS N_ASK_AMT
						FROM  SLA_GIFT_WITHDRAW_INFO A
						WHERE 1=1 
						AND   A.RECD_STATUS = 'L'
			            <#if occurDateFr?has_content>AND    A.OCCUR_DATE >= :occurDateFr</#if>
			            <#if occurDateTo?has_content>AND    A.OCCUR_DATE <= :occurDateTo</#if>
			            <#if muCd?has_content>AND    A.MU_CD = :muCd</#if>
			            <#if ccCd?has_content>AND    A.CC_CD = :ccCd</#if>
			            <#if tmCd?has_content>
			                AND     A.CC_CD IN (
			                                SELECT  A.CC_CD
			                                FROM    SCC_CC A
			                                        ,HLDC_SC_DEPT_V B
			                                WHERE   B.CC_CD = A.CC_CD
			                                AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
			                                AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
			                                AND     B.TM_CD = :tmCd
			                                )
			            </#if>
			            <#if giftKindCd?has_content>AND    A.GIFT_KIND_CD = :giftKindCd</#if>
			            AND A.GIFT_BILLING_YN = 'Y'
						GROUP BY A.MU_CD, A.CC_CD, A.GIFT_KIND_CD, A.OCCUR_DATE
			            
			            UNION ALL
			            
						SELECT A.MU_CD,
						       A.CC_CD,
						       A.GIFT_KIND_CD,
						       A.OCCUR_DATE,
			                   'N' AS GIFT_BILLING_YN,
						       SUM(A.GIFT_AMT)  AS GIFT_AMT,
						       SUM(A.USE_AMT)   AS USE_AMT,
						       NVL(SUM(A.COMM_AMT),0) + NVL(SUM(A.COMM_VAT_AMT),0)  AS COMM_AMT,
						      0 AS ASK_AMT,
						      NVL(SUM(A.GIFT_AMT),0) - (NVL(SUM(A.COMM_AMT),0) + NVL(SUM(A.COMM_VAT_AMT),0)) AS N_ASK_AMT
						FROM  SLA_GIFT_WITHDRAW_INFO A
						WHERE 1=1 
						AND   A.RECD_STATUS = 'L'
			            <#if occurDateFr?has_content>AND    A.OCCUR_DATE >= :occurDateFr</#if>
			            <#if occurDateTo?has_content>AND    A.OCCUR_DATE <= :occurDateTo</#if>
			            <#if muCd?has_content>AND    A.MU_CD = :muCd</#if>
			            <#if ccCd?has_content>AND    A.CC_CD = :ccCd</#if>
			            <#if tmCd?has_content>
			                AND     A.CC_CD IN (
			                                SELECT  A.CC_CD
			                                FROM    SCC_CC A
			                                        ,HLDC_SC_DEPT_V B
			                                WHERE   B.CC_CD = A.CC_CD
			                                AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
			                                AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
			                                AND     B.TM_CD = :tmCd
			                                )
			            </#if>
			            <#if giftKindCd?has_content>AND    A.GIFT_KIND_CD = :giftKindCd</#if>
			            AND NVL(A.GIFT_BILLING_YN, 'N') = 'N'
						GROUP BY A.MU_CD, A.CC_CD, A.GIFT_KIND_CD, A.OCCUR_DATE            
			) X   
			WHERE 1=1         
			<#if giftBillingYn?has_content>AND    NVL(X.GIFT_BILLING_YN,'N') = :giftBillingYn</#if>
			GROUP BY MU_CD,CC_CD,GIFT_KIND_CD,OCCUR_DATE
		<#else>
			SELECT 
			    MU_CD
			    , (SELECT DISTINCT MU.MU_NM FROM HLDC_SC_DEPT_V MU WHERE MU.MU_CD = X.MU_CD)  AS MU_NM
			    , CC_CD
			    , (SELECT  CC_NM FROM SCC_CC WHERE CC_CD = X.CC_CD) AS CC_NM
			    , GIFT_KIND_CD
			    , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'GIFT_TYPE' AND CODE = X.GIFT_KIND_CD)  AS GIFT_KIND_NM
			    , OCCUR_DATE
			    , GIFT_NUM
			    , SUM(GIFT_AMT) AS GIFT_AMT
			    , SUM(USE_AMT) AS USE_AMT
			    , SUM(COMM_AMT) AS COMM_AMT
			    , SUM(ASK_AMT) AS ASK_AMT
			    , SUM(N_ASK_AMT) AS N_ASK_AMT
			FROM 
				(    
						SELECT A.MU_CD,
						       A.CC_CD,
						       A.GIFT_KIND_CD,
						       A.OCCUR_DATE,
						       A.GIFT_NUM,
			                   'Y' AS GIFT_BILLING_YN,
						       SUM(A.GIFT_AMT)  AS GIFT_AMT,
						       SUM(A.USE_AMT)   AS USE_AMT,
						       NVL(SUM(A.COMM_AMT),0) + NVL(SUM(A.COMM_VAT_AMT),0)  AS COMM_AMT,
						       NVL(SUM(A.GIFT_AMT),0) - (NVL(SUM(A.COMM_AMT),0) + NVL(SUM(A.COMM_VAT_AMT),0)) AS ASK_AMT,
						       0 AS N_ASK_AMT
						FROM  SLA_GIFT_WITHDRAW_INFO A
						WHERE 1=1 
						AND   A.RECD_STATUS = 'L'
			            <#if occurDateFr?has_content>AND    A.OCCUR_DATE >= :occurDateFr</#if>
			            <#if occurDateTo?has_content>AND    A.OCCUR_DATE <= :occurDateTo</#if>
			            <#if muCd?has_content>AND    A.MU_CD = :muCd</#if>
			            <#if ccCd?has_content>AND    A.CC_CD = :ccCd</#if>
			            <#if tmCd?has_content>
			                AND     A.CC_CD IN (
			                                SELECT  A.CC_CD
			                                FROM    SCC_CC A
			                                        ,HLDC_SC_DEPT_V B
			                                WHERE   B.CC_CD = A.CC_CD
			                                AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
			                                AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
			                                AND     B.TM_CD = :tmCd
			                                )
			            </#if>
			            <#if giftKindCd?has_content>AND    A.GIFT_KIND_CD = :giftKindCd</#if>
			            AND A.GIFT_BILLING_YN = 'Y'
						GROUP BY A.MU_CD, A.CC_CD, A.GIFT_KIND_CD, A.OCCUR_DATE, A.GIFT_NUM
			            
			            UNION ALL
			            
						SELECT A.MU_CD,
						       A.CC_CD,
						       A.GIFT_KIND_CD,
						       A.OCCUR_DATE,
						       A.GIFT_NUM, 
			                   'N' AS GIFT_BILLING_YN,
						       SUM(A.GIFT_AMT)  AS GIFT_AMT,
						       SUM(A.USE_AMT)   AS USE_AMT,
						       NVL(SUM(A.COMM_AMT),0) + NVL(SUM(A.COMM_VAT_AMT),0)  AS COMM_AMT,
						      0 AS ASK_AMT,
						      NVL(SUM(A.GIFT_AMT),0) - (NVL(SUM(A.COMM_AMT),0) + NVL(SUM(A.COMM_VAT_AMT),0)) AS N_ASK_AMT
						FROM  SLA_GIFT_WITHDRAW_INFO A
						WHERE 1=1 
						AND   A.RECD_STATUS = 'L'
			            <#if occurDateFr?has_content>AND    A.OCCUR_DATE >= :occurDateFr</#if>
			            <#if occurDateTo?has_content>AND    A.OCCUR_DATE <= :occurDateTo</#if>
			            <#if muCd?has_content>AND    A.MU_CD = :muCd</#if>
			            <#if ccCd?has_content>AND    A.CC_CD = :ccCd</#if>
			            <#if tmCd?has_content>
			                AND     A.CC_CD IN (
			                                SELECT  A.CC_CD
			                                FROM    SCC_CC A
			                                        ,HLDC_SC_DEPT_V B
			                                WHERE   B.CC_CD = A.CC_CD
			                                AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
			                                AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
			                                AND     B.TM_CD = :tmCd
			                                )
			            </#if>
			            <#if giftKindCd?has_content>AND    A.GIFT_KIND_CD = :giftKindCd</#if>
			            AND NVL(A.GIFT_BILLING_YN, 'N') = 'N'
						GROUP BY A.MU_CD, A.CC_CD, A.GIFT_KIND_CD, A.OCCUR_DATE, A.GIFT_NUM           
			) X       
			WHERE 1=1     
			<#if giftBillingYn?has_content>AND    NVL(X.GIFT_BILLING_YN,'N') = :giftBillingYn</#if>
			GROUP BY MU_CD,CC_CD,GIFT_KIND_CD,OCCUR_DATE, GIFT_NUM
		</#if>

		]]>
	</statement>

	<!-- 상품권내역조회(을)를 등록한다. -->
	<statement name="insert" type="insert">
		/*+ com.hwfs.sm.sar.dao.GiftDescInquiryDAO.insert */
		<![CDATA[
		INSERT INTO TABLE_NAME 
		(
		       COLUMN_NAME1,
			   COLUMN_NAME2,
		       CUSER,
		       CDATE
		)
		VALUES
		(
		       :columnName1,
			   <#if columnName2?has_content> :columnName2, <#else> null, </#if>
		       :loginSabun,
		       SYSDATE
		)
		]]>
	</statement>
	
	<!-- 상품권내역조회(을)를 수정한다. -->
	<statement name="update" type="update">
		/*+ com.hwfs.sm.sar.dao.GiftDescInquiryDAO.update */
		<![CDATA[
		UPDATE TABLE_NAME 
		SET    COLUMN_NAME1 = :columnName1,
		       COLUMN_NAME2 = :columnName2,
		       UUSER = :loginSabun,
		       UDATE = SYSDATE
		WHERE  COLUMN_NAME = :columnName
		]]>
	</statement>

	<!-- 상품권내역조회(을)를 삭제한다. -->
	<statement name="delete" type="delete">
		/*+ com.hwfs.sm.sar.dao.GiftDescInquiryDAO.delete */
		<![CDATA[
		DELETE 
		FROM   TABLE_NAME 
		WHERE  COLUMN_NAME = :columnName
		]]>
	</statement>

</hqml>
