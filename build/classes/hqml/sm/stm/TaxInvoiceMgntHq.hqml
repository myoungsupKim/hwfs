<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="sm.stm.taxInvoiceMgntHqDAO">
	<desc>세금계산서 발행(본사용) HQML Query</desc>

	<!-- 세금계산서 발행(본사용) 목록을 조회한다. -->
	<statement name="selectList" type="select"><![CDATA[
		SELECT 0 AS CHK, 
			   A.TAX_SHET_NUM,
		       A.WRITE_CLASS,
		       A.PUBLISH_DATE,
		       A.FISCAL_DATE,
		       A.MU_CD,
			   B.MU_NM,
		       A.CC_CD,
			   B.CC_NM,
		       A.NEWHGHT_UPJANG,
			   C.CC_NM AS NEWHGHT_UPJANG_NM,
			   A.VAT_CD,
		       A.REG_EMP_NUM,
		       A.CUST_CD,
			   D.CUSTNM AS CUST_NM,
		       A.ORGNL_TAX_SHET_NUM,
		       A.ORGNL_TAX_SHET_APPRV_NUM,
		       A.DOC_CD,
		       A.TAX_SHET_WRITE_DATE,
		       A.TAX_SHET_KIND,
		       A.TAX_SHET_CLSFI,
		       A.TAX_SHET_TYPE,
		       A.MODIFY_CD,
		       A.TAX_SHET_CLASS,
		       A.PUBLISH_CLASS,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'PUBLISH_CLASS' AND CODE = A.PUBLISH_CLASS) PUBLISH_CLASS_NM,
		       A.RCPT_BILLING_CLASS,
		       A.SENDCPNY_CD,
		       A.SENDCPNY_BIZ_CD,
		       A.CREATION_MNBD_CD,
		       A.APPRV_PROC_CLASS,
		       A.SEND_MTOD,
		       A.SEND_REQ_DATE,
		       A.INCOME_NEWHGHT_NUM,
		       A.INCOME_PACKISSUE_SDATE,
		       A.INCOME_PACKISSUE_EDATE,
		       A.INCOME_TOT_QUANTITY,
		       A.SUPPLIER_SUB_UPJANG_NUM,
		       A.RCVR_SUB_UPJANG_NUM,
		       A.TRUST_SUB_UPJANG_NUM,
		       A.CLOSE_SDATE,
		       A.CLOSE_EDATE,
		       A.SUPPLIER_BIZ_NO,
		       A.SUPPLIER_BIZ_NM,
		       A.SUPPLIER_CEONM,
		       A.SUPPLIER_ADDR,
		       A.SUPPLIER_BIZ_TYPE,
		       A.SUPPLIER_BIZ_CAT,
		       A.RCVR_BIZ_NO_CLASS,
		       A.RCVR_BIZ_NO,
		       A.RCVR_BIZ_NM,
		       A.RCVR_CEONM,
		       A.RCVR_ADDR,
		       A.RCVR_BIZ_TYPE,
		       A.RCVR_BIZ_CAT,
		       A.TRUST_BIZ_NO,
		       A.TRUST_BIZ_NM,
		       A.TRUST_CEONM,
		       A.TRUST_ADDR,
		       A.TRUST_BIZ_TYPE,
		       A.TRUST_BIZ_CAT,
		       A.SUPPLIER_INCHARGE_YN,
		       A.SUPPLIER_INCHARGE_ID,
		       A.SUPPLIER_INCHARGE_NM,
		       A.SUPPLIER_INCHARGE_TEL,
		       A.SUPPLIER_INCHARGE_HP,
		       A.SUPPLIER_INCHARGE_EMAIL,
		       A.SUPPLIER_INCHARGE_DEPT,
		       A.SUPPLIER_INCHARGE_ID2,
		       A.SUPPLIER_INCHARGE_NM2,
		       A.SUPPLIER_INCHARGE_TEL2,
		       A.SUPPLIER_INCHARGE_HP2,
		       A.SUPPLIER_INCHARGE_EMAIL2,
		       A.SUPPLIER_INCHARGE_DEPT2,
		       A.RCVR_INCHARGE_YN,
		       A.RCVR_INCHARGE_ID,
		       A.RCVR_INCHARGE_NM,
		       A.RCVR_INCHARGE_TEL,
		       A.RCVR_INCHARGE_HP,
		       A.RCVR_INCHARGE_EMAIL,
		       A.RCVR_INCHARGE_DEPT,
		       A.TRUST_INCHARGE_YN,
		       A.TRUST_INCHARGE_ID,
		       A.TRUST_INCHARGE_NM,
		       A.TRUST_INCHARGE_TEL,
		       A.TRUST_INCHARGE_HP,
		       A.TRUST_INCHARGE_EMAIL,
		       A.TRUST_INCHARGE_DEPT,
		       A.SUPPLY_AMT,
		       A.VAT_AMT,
		       TO_NUMBER(A.TOT_AMT) AS TOT_AMT,
		       A.TAX_SHET_REMARK,
		       A.SIGN_MTODCD_CASH,
		       A.SIGN_MTODCD_MONEY_CHECK,
		       A.SIGN_MTODCD_NOTES,
		       A.SIGN_MTODCD_CRDT,
		       A.SIGN_MTODAMT_CASH,
		       A.SIGN_MTODAMT_MONEY_CHECK,
		       A.SIGN_MTODAMT_NOTES,
		       A.SIGN_MTODAMT_CRDT,
		       A.EMAIL_DISPATCH_YN,
		       A.SMS_DISPATCH_YN,
		       A.TAX_SHET_XML_DATA,
		       A.XML_NUM_FILENM,
		       A.VIRTUAL_BANK_ACCT_NO1,
		       A.VIRTUAL_BANK_ACCT_NO2,
		       A.VIRTUAL_BANK_ACCT_NO3,
		       A.VIRTUAL_BANK_ACCT_NO4,
		       A.VIRTUAL_BANK_ACCT_NO5,
		       A.RESERV_COLUMN1,
		       A.RESERV_COLUMN2,
		       A.RESERV_COLUMN3,
		       A.APPEND_DOC_YN,
		       A.APPEND_DOC_CNT,
		       A.CURRENT_DDTT,
		       A.BU_CD,
		       A.SYS_CD,
		       A.MODIFY_TAX_SHET_NUM,
		       A.REVRS_PUBLISH_TAX_SHET_NUM,
		       A.NTS_APPRV_NUM,
		       A.ELCTN_TAX_SHET_YN,
		       A.PUBLISH_REASON,
		       A.CHECK_FLAG,
               A.PROGRESS_STATUS,
               GFN_SCC_CODENAME_FUN('TAX_PROGRESS_STATUS', A.PROGRESS_STATUS) AS PROGRESS_STATUS_NM,
			   A.RESULT_MSG AS ASP_REMARK,
			   A.TAX_SHET_APPRV_NUM,
		       A.JOURNALZ_YN,
		       --A.JOURNALZ_NUM,
		       (SELECT SLIP_NUM FROM SLA_SAP_SLIP_MST S WHERE ELCTNTAX_BILL_APPRVNUM = A.TAX_SHET_APPRV_NUM AND SLIP_STATUS NOT IN ('R','C','Z')) AS JOURNALZ_NUM,
		       A.RECD_STATUS,
		       A.CUSER,
		       A.CDATE,
		       (SELECT NM_KOR FROM HR_PERSONAL WHERE SABUN = A.CUSER AND ROWNUM = 1) AS UUSER_NM,
		       A.CUSER UUSER,
		       A.UDATE,
		       A.UPJANG_CD,
		       (SELECT UPJANGNM_DISP FROM FMS_UPJANG WHERE UPJANG = A.UPJANG_CD) AS UPJANG_NM,
		       A.SUB_UPJANG_CD,
		       (SELECT UPJANGNM_DISP FROM FMS_UPJANG WHERE UPJANG = A.SUB_UPJANG_CD) AS SUB_UPJANG_NM,
		       (SELECT COUNT(*) FROM SLA_TAX_SHET_PUBLISH_MST OD WHERE OD.ORGNL_TAX_SHET_NUM = A.TAX_SHET_APPRV_NUM AND OD.RECD_STATUS='L') AS MOD_TAX_CNT,
		       (SELECT COUNT(*) FROM SLA_TAX_SHET_OCCUR_OBJ O WHERE O.TAX_SHET_NUM = (SELECT TAX_SHET_NUM FROM  SLA_TAX_SHET_PUBLISH_MST WHERE TAX_SHET_APPRV_NUM = A.ORGNL_TAX_SHET_NUM) AND O.RECD_STATUS='L') AS ORGNL_OBJ_CNT,
		       (SELECT RESULT_MSG FROM SAP_IF.SAP_IFC_ELCTN_TAX_SHET_PUBLISH EAI WHERE EAI.TAX_SHET_NUM = A.TAX_SHET_NUM AND EAI.CHG_REQUEST_CD = A.REQ_STATUS_CHANGE AND ROWNUM=1) AS CHG_STATUS_RESULT,
		       A.REQ_STATUS_CHANGE,
               DECODE(E.ASP_STATUS_CD, NULL, 'Y', 'N') AS DEL_YN ,
               '' AS SYS_CLASS
		FROM   SLA_TAX_SHET_PUBLISH_MST A,
			   HLDC_SC_DEPT_V B,
			   HLDC_SC_DEPT_V C,
			   ST_CUST D,
--      (  /* FULL TABLE SCAN 발생 */
--      SELECT  X.* 
--      FROM   SLA_TAX_SHET_STATUS X
--      WHERE  1 = 1
--      AND X.PREISSUE_GB || X.LOG_SEQ = 
--      (SELECT MAX(PREISSUE_GB || LOG_SEQ) FROM   SLA_TAX_SHET_STATUS Y WHERE  Y.TAX_SHET_NUM = X.TAX_SHET_NUM) 
--      ) E
       ( 
       SELECT X.*
       FROM (
       SELECT X.TAX_SHET_NUM,X.ASP_STATUS_CD,
       ROW_NUMBER() OVER(PARTITION BY TAX_SHET_NUM ORDER BY  PREISSUE_GB DESC,LOG_SEQ  DESC) AS RN
       FROM SLA_TAX_SHET_STATUS X
       ) X
       WHERE RN = 1
       ) E
        --       ,(
        --       SELECT N.*, 'OK' ASP_STATUS_CD, '국세청 승인이 완료 되었습니다.' AS ASP_REMARK FROM SLA_TAX_SHET_NTS_STATUS N
		--	   WHERE  1 = 1
        --       ) N
		WHERE  A.CC_CD = B.CC_CD(+)
		AND	   A.NEWHGHT_UPJANG = C.CC_CD(+)
		AND	   A.CUST_CD = D.CUSTCD
		AND	   A.TAX_SHET_NUM = E.TAX_SHET_NUM(+)
		--AND	   A.TAX_SHET_NUM = N.TAX_SHET_NUM(+)
		<#if recdStatus?has_content>
		AND	   A.RECD_STATUS = :recdStatus
		</#if>
		<#if taxShetNum?has_content>
		AND	   A.TAX_SHET_NUM = :taxShetNum
		</#if>
		<#if muCd?has_content>
		AND	   A.MU_CD = :muCd
		</#if>
		<#if ccCd?has_content>
		AND	   A.CC_CD = :ccCd
		</#if>
		<#if tmCd?has_content>
        AND    A.CC_CD IN (
                        SELECT  A.CC_CD
                        FROM    SCC_CC A
                                ,HLDC_SC_DEPT_V B
                        WHERE   B.CC_CD = A.CC_CD
                        AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                        AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
                        AND     B.TM_CD = :tmCd
                        )
		</#if>
		<#if fiscalDateFr?has_content>
		AND	   A.FISCAL_DATE >= :fiscalDateFr
		</#if>
		<#if fiscalDateTo?has_content>
		AND	   A.FISCAL_DATE <= :fiscalDateTo
		</#if>
		<#if progressStatus?has_content>
		AND	   A.PROGRESS_STATUS = :progressStatus			--DECODE(E.ASP_STATUS_CD, NULL, A.PROGRESS_STATUS, E.ASP_STATUS_CD) = :progressStatus
		</#if>
		<#if custCd?has_content>
		AND	   A.CUST_CD = :custCd
		</#if>
		<#if supplierInchargeId?has_content>
		AND	   A.SUPPLIER_INCHARGE_ID = :supplierInchargeId
		</#if>
		<#if journalzYn?has_content>
		AND	   NVL2((SELECT SLIP_NUM FROM SLA_SAP_SLIP_MST S WHERE ELCTNTAX_BILL_APPRVNUM = A.TAX_SHET_APPRV_NUM AND  SLIP_STATUS NOT IN ('R','C','Z')), 'Y', 'N') = :journalzYn
		</#if>
		<#if newhghtUpjang?has_content>
		AND	   A.NEWHGHT_UPJANG = :newhghtUpjang
		</#if>
		ORDER BY A.CDATE DESC
		]]></statement>

	<!-- 세금계산서 발행(본사용) 세금계산서 번호를 생성한다. -->
	<statement name="selectTaxShetNum" type="select">
		/*+ com.hwfs.sm.stm.dao.TaxInvoiceMgntHqDAO.selectTaxShetNum */
		<![CDATA[
		 SELECT :publishDate || '-' || :sysClass || '-' || SLA_TAX_SHET_NUM_SEQ.NEXTVAL AS  TAX_SHET_NUM FROM DUAL
		 
		--SELECT :publishDate || '-' || :sysClass || '-' || LPAD(TO_NUMBER(NVL(SUBSTR(MAX(TAX_SHET_NUM), 15, 25), 0))+1, 10, 0) TAX_SHET_NUM	
		--회계일자_구분번호_일련번호(10자리)
		--FROM   SLA_TAX_SHET_PUBLISH_MST
		--WHERE  PUBLISH_DATE = :publishDate
		--AND	   SUBSTR(TAX_SHET_NUM, 0, 1) != 'T'
		--AND	   SUBSTR(TAX_SHET_NUM, 10, 4) = :sysClass
		]]>
	</statement>

	<!-- 세금계산서 발행(본사용) 마스터를 등록한다. -->
	<statement name="insertTaxShetMst" type="insert">
		/*+ com.hwfs.sm.stm.dao.TaxInvoiceMgntHqDAO.insertTaxShetMst */
		<![CDATA[
		INSERT INTO SLA_TAX_SHET_PUBLISH_MST 
		(
		       TAX_SHET_NUM,
		       WRITE_CLASS,
		       PUBLISH_DATE,
			   FISCAL_DATE,
			   MU_CD,
			   CC_CD,
			   NEWHGHT_UPJANG,
			   VAT_CD,
			   REG_EMP_NUM,
			   CUST_CD,
			   ORGNL_TAX_SHET_NUM,
			   TAX_SHET_APPRV_NUM,
			   DOC_CD,
			   TAX_SHET_WRITE_DATE,
			   TAX_SHET_KIND,
			   TAX_SHET_CLSFI,
			   TAX_SHET_TYPE,
			   MODIFY_CD,
			   TAX_SHET_CLASS,
			   PUBLISH_CLASS,
			   RCPT_BILLING_CLASS,
			   SUPPLIER_SUB_UPJANG_NUM,
			   RCVR_SUB_UPJANG_NUM,
			   SUPPLIER_BIZ_NO,
			   SUPPLIER_BIZ_NM,
			   SUPPLIER_CEONM,
			   SUPPLIER_ADDR,
			   SUPPLIER_BIZ_TYPE,
			   SUPPLIER_BIZ_CAT,
			   RCVR_BIZ_NO_CLASS,
			   RCVR_BIZ_NO,
			   RCVR_BIZ_NM,
			   RCVR_CEONM,
			   RCVR_ADDR,
			   RCVR_BIZ_TYPE,
			   RCVR_BIZ_CAT,
			   SUPPLIER_INCHARGE_YN,
			   SUPPLIER_INCHARGE_ID,
			   SUPPLIER_INCHARGE_NM,
			   SUPPLIER_INCHARGE_TEL,
			   SUPPLIER_INCHARGE_HP,
			   SUPPLIER_INCHARGE_EMAIL,
			   SUPPLIER_INCHARGE_DEPT,
			   SUPPLIER_INCHARGE_ID2,
			   SUPPLIER_INCHARGE_NM2,
			   SUPPLIER_INCHARGE_TEL2,
			   SUPPLIER_INCHARGE_HP2,
			   SUPPLIER_INCHARGE_EMAIL2,
			   SUPPLIER_INCHARGE_DEPT2,
			   RCVR_INCHARGE_YN,
			   RCVR_INCHARGE_ID,
			   RCVR_INCHARGE_NM,
			   RCVR_INCHARGE_TEL,
			   RCVR_INCHARGE_HP,
			   RCVR_INCHARGE_EMAIL,
			   RCVR_INCHARGE_DEPT,
			   SUPPLY_AMT,
			   VAT_AMT,
			   TOT_AMT,
			   TAX_SHET_REMARK,
			   SIGN_MTODCD_CASH,
			   SIGN_MTODCD_MONEY_CHECK,
			   SIGN_MTODCD_NOTES,
			   SIGN_MTODCD_CRDT,
			   SIGN_MTODAMT_CASH,
			   SIGN_MTODAMT_MONEY_CHECK,
			   SIGN_MTODAMT_NOTES,
			   SIGN_MTODAMT_CRDT,
			   EMAIL_DISPATCH_YN,
			   SMS_DISPATCH_YN,
			   TAX_SHET_XML_DATA,
			   MODIFY_TAX_SHET_NUM,
			   REVRS_PUBLISH_TAX_SHET_NUM,
			   ELCTN_TAX_SHET_YN,
			   PUBLISH_REASON,
			   PROGRESS_STATUS,
			   JOURNALZ_YN,
			   RECD_STATUS,
		       CUSER,
		       CDATE,
		       UUSER,
		       UDATE,
		       UPJANG_CD,
		       SUB_UPJANG_CD
		)
		VALUES
		(
		       :taxShetNum,
		       '1',
		       <#if publishDate?has_content> :publishDate, <#else> null, </#if>
			   <#if fiscalDate?has_content> :fiscalDate, <#else> null, </#if>
			   <#if muCd?has_content> :muCd, <#else> null, </#if>
			   <#if ccCd?has_content> :ccCd, <#else> null, </#if>
			   <#if newhghtUpjang?has_content> :newhghtUpjang, <#else> null, </#if>
			   <#if vatCd?has_content> :vatCd, <#else> null, </#if>
			   :loginSabun,
			   <#if custCd?has_content> :custCd, <#else> null, </#if>
			   <#if orgnlTaxShetNum?has_content> :orgnlTaxShetNum, <#else> null, </#if>
			   <#if taxShetApprvNum?has_content> :taxShetApprvNum, <#else> null, </#if>
			   <#if docCd?has_content> :docCd, <#else> '02', </#if>
			   <#if publishDate?has_content> :publishDate, <#else> null, </#if>
			   <#if taxShetKind?has_content> :taxShetKind, <#else> null, </#if>
			   <#if taxShetClsfi?has_content> :taxShetClsfi, <#else> null, </#if>
			   <#if taxShetType?has_content> :taxShetType, <#else> null, </#if>
			   <#if modifyCd?has_content> :modifyCd, <#else> null, </#if>
			   <#if taxShetClass?has_content> :taxShetClass, <#else> '1', </#if>
			   <#if publishClass?has_content> :publishClass, <#else> '1', </#if>
			   <#if rcptBillingClass?has_content> :rcptBillingClass, <#else> null, </#if>
			   <#if supplierSubUpjangNum?has_content> :supplierSubUpjangNum, <#else> null, </#if>
			   <#if rcvrSubUpjangNum?has_content> :rcvrSubUpjangNum, <#else> null, </#if>
			   <#if supplierBizNo?has_content> :supplierBizNo, <#else> null, </#if>
			   <#if supplierBizNm?has_content> :supplierBizNm, <#else> null, </#if>
			   <#if supplierCeonm?has_content> :supplierCeonm, <#else> null, </#if>
			   <#if supplierAddr?has_content> :supplierAddr, <#else> null, </#if>
			   <#if supplierBizType?has_content> :supplierBizType, <#else> null, </#if>
			   <#if supplierBizCat?has_content> :supplierBizCat, <#else> null, </#if>
			   <#if rcvrBizNoClass?has_content> :rcvrBizNoClass, <#else> '01', </#if>
			   <#if rcvrBizNo?has_content> :rcvrBizNo, <#else> null, </#if>
			   <#if rcvrBizNm?has_content> :rcvrBizNm, <#else> null, </#if>
			   <#if rcvrCeonm?has_content> :rcvrCeonm, <#else> null, </#if>
			   <#if rcvrAddr?has_content> :rcvrAddr, <#else> null, </#if>
			   <#if rcvrBizType?has_content> :rcvrBizType, <#else> null, </#if>
			   <#if rcvrBizCat?has_content> :rcvrBizCat, <#else> null, </#if>
			   <#if supplierInchargeYn?has_content> :supplierInchargeYn, <#else> 'N', </#if>
			   <#if supplierInchargeId?has_content> :supplierInchargeId, <#else> null, </#if>
			   <#if supplierInchargeNm?has_content> :supplierInchargeNm, <#else> null, </#if>
			   <#if supplierInchargeTel?has_content> :supplierInchargeTel, <#else> null, </#if>
			   <#if supplierInchargeHp?has_content> :supplierInchargeHp, <#else> null, </#if>
			   <#if supplierInchargeEmail?has_content> :supplierInchargeEmail, <#else> null, </#if>
			   <#if supplierInchargeDept?has_content> :supplierInchargeDept, <#else> null, </#if>
			   <#if supplierInchargeId2?has_content> :supplierInchargeId2, <#else> null, </#if>
			   <#if supplierInchargeNm2?has_content> :supplierInchargeNm2, <#else> null, </#if>
			   <#if supplierInchargeTel2?has_content> :supplierInchargeTel2, <#else> null, </#if>
			   <#if supplierInchargeHp2?has_content> :supplierInchargeHp2, <#else> null, </#if>
			   <#if supplierInchargeEmail2?has_content> :supplierInchargeEmail2, <#else> null, </#if>
			   <#if supplierInchargeDept2?has_content> :supplierInchargeDept2, <#else> null, </#if>
			   <#if rcvrInchargeYn?has_content> :rcvrInchargeYn, <#else> 'N', </#if>
			   <#if rcvrInchargeId?has_content> :rcvrInchargeId, <#else> (SELECT :custCd || LPAD(NVL(SUBSTR(MAX(RCVR_INCHARGE_ID), LENGTH(MAX(RCVR_INCHARGE_ID))-2,  LENGTH(MAX(RCVR_INCHARGE_ID))), 0)+1, 3, 0) 
			   																FROM SLA_TAX_SHET_PUBLISH_MST 
			   															   WHERE CUST_CD = :custCd), </#if>
			   <#if rcvrInchargeNm?has_content> :rcvrInchargeNm, <#else> null, </#if>
			   <#if rcvrInchargeTel?has_content> :rcvrInchargeTel, <#else> null, </#if>
			   <#if rcvrInchargeHp?has_content> :rcvrInchargeHp, <#else> null, </#if>
			   <#if rcvrInchargeEmail?has_content> :rcvrInchargeEmail, <#else> null, </#if>
			   <#if rcvrInchargeDept?has_content> :rcvrInchargeDept, <#else> null, </#if>
			   <#if supplyAmt?has_content> :supplyAmt, <#else> null, </#if>
			   <#if vatAmt?has_content> :vatAmt, <#else> null, </#if>
			   <#if totAmt?has_content> :totAmt, <#else> null, </#if>
			   <#if taxShetRemark?has_content> :taxShetRemark, <#else> null, </#if>
			   <#if signMtodcdCash?has_content> :signMtodcdCash, <#else> null, </#if>
			   <#if signMtodcdMoneyCheck?has_content> :signMtodcdMoneyCheck, <#else> null, </#if>
			   <#if signMtodcdNotes?has_content> :signMtodcdNotes, <#else> null, </#if>
			   <#if signMtodcdCrdt?has_content> :signMtodcdCrdt, <#else> null, </#if>
			   <#if signMtodamtCash?has_content> :signMtodamtCash, <#else> null, </#if>
			   <#if signMtodamtMoneyCheck?has_content> :signMtodamtMoneyCheck, <#else> null, </#if>
			   <#if signMtodamtNotes?has_content> :signMtodamtNotes, <#else> null, </#if>
			   <#if signMtodamtCrdt?has_content> :signMtodamtCrdt, <#else> null, </#if>
			   <#if emailDispatchYn?has_content> :emailDispatchYn, <#else> 'Y', </#if>
			   <#if smsDispatchYn?has_content> :smsDispatchYn, <#else> 'N', </#if>
			   <#if taxShetXmlData?has_content> :taxShetXmlData, <#else> null, </#if>
			   <#if modifyTaxShetNum?has_content> :modifyTaxShetNum, <#else> null, </#if>
			   <#if revrsPublishTaxShetNum?has_content> :revrsPublishTaxShetNum, <#else> null, </#if>
			   <#if elctnTaxShetYn?has_content> :elctnTaxShetYn, <#else> null, </#if>
			   <#if publishReason?has_content> :publishReason, <#else> null, </#if>
			   <#if progressStatus?has_content> :progressStatus, <#else> '010', </#if>
			   <#if journalzYn?has_content> :journalzYn, <#else> 'N', </#if>
			   <#if recdStatus?has_content> :recdStatus, <#else> 'L', </#if>
		       :loginSabun,
		       SYSDATE,
		       :loginSabun,
		       SYSDATE,
		       :upjangCd,
		       <#if subUpjang?has_content> :subUpjang <#else> null</#if>
		)
		]]>
	</statement>

	<!-- 세금계산서 발행(본사용) 상세를 등록한다. -->
	<statement name="insertTaxShetDetail" type="insert">
		/*+ com.hwfs.sm.stm.dao.TaxInvoiceMgntHqDAO.insertTaxShetDetail
		*/
		<![CDATA[
		INSERT INTO SLA_TAX_SHET_PUBLISH_DETAIL
		(
			TAX_SHET_NUM,
			ITEM_SEQ,
			ITEM_SUPPLY_DATE,
			ITEM_NM,
			ITEM_STAND,
			ITEM_QUANTITY,
			ITEM_UPRICE,
			ITEM_SUPPLY_AMT,
			ITEM_VAT_AMT,
			ITEM_REMARK,
			RECD_STATUS,
			CUSER,
			CDATE,
			UUSER,
			UDATE
		)
		VALUES
		(
			:taxShetNum,
			:itemSeq,
			<#if itemSupplyDate?has_content> :itemSupplyDate, <#else> null, </#if>
			--SAP전송 시 에러 방지 <> -> ()로 강제변경
			<#if itemNm?has_content> REPLACE(REPLACE(:itemNm,'<','('),'>',')'), <#else> null, </#if>
			<#if itemStand?has_content> :itemStand, <#else> null, </#if>
			<#if itemQuantity?has_content> :itemQuantity, <#else> null, </#if>
			<#if itemUprice?has_content> :itemUprice, <#else> null, </#if>
			<#if itemSupplyAmt?has_content> :itemSupplyAmt, <#else> null, </#if>
			<#if itemVatAmt?has_content> :itemVatAmt, <#else> null, </#if>
			<#if itemRemark?has_content> :itemRemark, <#else> null, </#if>
			<#if recdstatus?has_content> :recdstatus, <#else> 'L', </#if>
			:loginSabun,
	      	SYSDATE,
	      	:loginSabun,
	      	SYSDATE
		)
		]]>
	</statement>

	<!-- 세금계산서 발행(본사용) 대상을 등록한다. -->
	<statement name="insertTaxShetOccurObj" type="insert">
		/*+
		com.hwfs.sm.stm.dao.TaxInvoiceMgntHqDAO.insertTaxShetOccurObj */
		<![CDATA[
		INSERT INTO SLA_TAX_SHET_OCCUR_OBJ
		(
			TAX_SHET_NUM,
			TAX_BILL_SEQ,
			VAT_CD,
			OCCUR_CLASS,
			OCCUR_DATE,
			MU_CD,
			CC_CD,
			UPJANG_CD,
			RECEIPT_NUM,
			CUST_CD,
			SUPPLY_AMT,
			VAT_AMT,
			AMT,
			AR_NUM,
			ADVANCE_NUM,
			UPJANG_SALS_NUM,
			ALT_NUM,
			RECD_STATUS,
			CUSER,
			CDATE,
			UUSER,
			UDATE
		)
		VALUES
		(
			:taxShetNum,
			:taxBillSeq,
			<#if vatCd?has_content> :vatCd, <#else> null, </#if>
			<#if occurClass?has_content> :occurClass, <#else> null, </#if>
			:occurDate,
			<#if muCd?has_content> :muCd, <#else> null, </#if>
			<#if ccCd?has_content> :ccCd, <#else> null, </#if>
			<#if upjangCd?has_content> :upjangCd, <#else> null, </#if>
			<#if receiptNum?has_content> :receiptNum, <#else> null, </#if>
			<#if custCd?has_content> :custCd, <#else> null, </#if>
			<#if supplyAmt?has_content> :supplyAmt, <#else> null, </#if>
			<#if vatAmt?has_content> :vatAmt, <#else> null, </#if>
			<#if amt?has_content> :amt, <#else> null, </#if>
			<#if arNum?has_content> :arNum, <#else> null, </#if>
			<#if advanceNum?has_content> :advanceNum, <#else> null, </#if>
			<#if upjangSalsNum?has_content> :upjangSalsNum, <#else> null, </#if>
			<#if altNum?has_content> :altNum, <#else> null, </#if>
			<#if recdStatus?has_content> :recdStatus, <#else> 'L', </#if>
			:loginSabun,
	      	SYSDATE,
	      	:loginSabun,
	      	SYSDATE
		)
		]]>
	</statement>

	<!-- 세금계산서 발행(본사용) 매출 상세를 등록한다. -->
	<statement name="insertSalsDetail" type="insert">
		/*+ com.hwfs.sm.stm.dao.TaxInvoiceMgntHqDAO.insertSalsDetail */
		<![CDATA[
		INSERT INTO SLA_TAX_SHET_SALS_DETAIL
		(
			TAX_SHET_NUM
			TAX_BILL_SEQ,
			ITEM_SEQ,
			CUST_CD,
			SUPPLY_AMT,
			VAT_AMT,
			AR_NUM,
			ADVANCE_NUM,
			UPJANG_SALS_NUM,
			CUSER,
			CDATE,
			UUSER,
			UDATE
		)
		VALUES
		(
			:taxShetNum,
			:taxBillSeq,
			:itemSeq,
			<#if custCd?has_content> :custCd, <#else> null, </#if>
			<#if supplyAmt?has_content> :supplyAmt, <#else> null, </#if>
			<#if vatAmt?has_content> :vatAmt, <#else> null, </#if>
			<#if arNum?has_content> :arNum, <#else> null, </#if>
			<#if advanceNum?has_content> :advanceNum, <#else> null, </#if>
			<#if upjangSalsNum?has_content> :upjangSalsNum, <#else> null, </#if>
			:loginSabun,
	      	SYSDATE,
	      	:loginSabun,
	      	SYSDATE
		)
		]]>
	</statement>

	<!-- 신고사업장 정보를 조회한다. -->
	<statement name="selectNewhghtUpjangInfo" type="select">
		/*+
		com.hwfs.sm.stm.dao.TaxInvoiceMgntHqDAO.selectNewhghtUpjangInfo
		*/
		<![CDATA[
		SELECT DISTINCT
		       A.CC_CD AS UPJANG_CODE,
		       A.CC_NM AS UPJANG_NAME,
		       A.CC_CD,
		       A.CC_NM,
		       A.MU_CD,
		       A.MU_NM,
		       A.TM_CD,
		       A.TM_NM,
		       A.SUB_UPJANG_NUM
		FROM   HLDC_SC_DEPT_V A
		WHERE  1 = 1
		<#if fullSaupno?has_content>
		AND	   SUB_UPJANG_NUM = :subUpjangNum
		</#if>
		<#if upjangCd?has_content>
		AND	   CC_CD = :upjangCd
		</#if>
		]]>
	</statement>

	<!-- 고객 정보를 조회한다. -->
	<statement name="selectCustInfo" type="select">
		/*+ com.hwfs.sm.stm.dao.TaxInvoiceMgntHqDAO.selectCustInfo */
		<![CDATA[
		SELECT CUSTCD AS CUST_CD,
			   CUSTNM AS CUST_NM,
			   SAUPNO,
			   UP_JONG,
			   UP_TAE,
			   DRNAME1 AS DRNAME,
			   ADDR
		FROM   ST_CUST
		WHERE  SAUPNO = :saupno
		]]>
	</statement>

	<!-- 세금계산서 발행 상세 목록을 검색한다. -->
	<statement name="selectTaxShetDetailList" type="select">
		/*+
		com.hwfs.sm.stm.dao.TaxInvoiceMgntHqDAO.selectTaxShetDetailList
		*/
		<![CDATA[
		SELECT TAX_SHET_NUM,
			   ITEM_SEQ,
			   ITEM_SUPPLY_DATE,
			   TO_CHAR(TO_DATE(ITEM_SUPPLY_DATE, 'YYYYMMDD'), 'MM') ITEM_SUPPLY_DATE_MM,
			   TO_CHAR(TO_DATE(ITEM_SUPPLY_DATE, 'YYYYMMDD'), 'DD') ITEM_SUPPLY_DATE_DD,
			   ITEM_NM,
			   ITEM_STAND,
			   ITEM_QUANTITY,
			   ITEM_UPRICE,
			   ITEM_SUPPLY_AMT,
			   ITEM_VAT_AMT,
			   ITEM_REMARK,
			   RECD_STATUS,
			   CUSER,
			   CDATE,
			   UUSER,
			   UDATE
		FROM   SLA_TAX_SHET_PUBLISH_DETAIL
		WHERE  TAX_SHET_NUM = :taxShetNum
		AND	   RECD_STATUS = 'L'
		ORDER BY ITEM_SEQ ASC
		]]>
	</statement>

	<!-- 최근 신고사업장 담당자 정보 또는 최근 고객 담당자 정보를 검색한다. -->
	<statement name="selectInchargeInfo" type="select">
		/*+ com.hwfs.sm.stm.dao.TaxInvoiceMgntHqDAO.selectInchargeInfo
		*/
		<![CDATA[
		SELECT A.SUPPLIER_INCHARGE_YN,
		       A.SUPPLIER_INCHARGE_ID,
		       A.SUPPLIER_INCHARGE_NM,
		       A.SUPPLIER_INCHARGE_TEL,
		       A.SUPPLIER_INCHARGE_HP,
		       A.SUPPLIER_INCHARGE_EMAIL,
		       A.SUPPLIER_INCHARGE_DEPT,
		       A.SUPPLIER_INCHARGE_ID2,
		       A.SUPPLIER_INCHARGE_NM2,
		       A.SUPPLIER_INCHARGE_TEL2,
		       A.SUPPLIER_INCHARGE_HP2,
		       A.SUPPLIER_INCHARGE_EMAIL2,
		       A.SUPPLIER_INCHARGE_DEPT2,
		       A.RCVR_INCHARGE_YN,
		       A.RCVR_INCHARGE_ID,
		       A.RCVR_INCHARGE_NM,
		       A.RCVR_INCHARGE_TEL,
		       A.RCVR_INCHARGE_HP,
		       A.RCVR_INCHARGE_EMAIL,
		       A.RCVR_INCHARGE_DEPT
		FROM (    
				SELECT A.SUPPLIER_INCHARGE_YN,
				       A.SUPPLIER_INCHARGE_ID,
				       A.SUPPLIER_INCHARGE_NM,
				       A.SUPPLIER_INCHARGE_TEL,
				       A.SUPPLIER_INCHARGE_HP,
				       A.SUPPLIER_INCHARGE_EMAIL,
				       A.SUPPLIER_INCHARGE_DEPT,
				       A.SUPPLIER_INCHARGE_ID2,
				       A.SUPPLIER_INCHARGE_NM2,
				       A.SUPPLIER_INCHARGE_TEL2,
				       A.SUPPLIER_INCHARGE_HP2,
				       A.SUPPLIER_INCHARGE_EMAIL2,
				       A.SUPPLIER_INCHARGE_DEPT2,
				       A.RCVR_INCHARGE_YN,
				       A.RCVR_INCHARGE_ID,
				       A.RCVR_INCHARGE_NM,
				       A.RCVR_INCHARGE_TEL,
				       A.RCVR_INCHARGE_HP,
				       A.RCVR_INCHARGE_EMAIL,
				       A.RCVR_INCHARGE_DEPT
				FROM   SLA_TAX_SHET_PUBLISH_MST A
				WHERE  1 = 1
				<#if newhghtUpjang?has_content>
				AND	   (UPJANG_CD = :newhghtUpjang OR NEWHGHT_UPJANG = :newhghtUpjang)
				</#if>
				<#if subUpjang?has_content>
				AND	   SUB_UPJANG_CD = :subUpjang
				</#if>
				<#if custCd?has_content>
				AND	   CUST_CD = :custCd
				</#if>
		        ORDER BY CDATE DESC 
		) A
		WHERE ROWNUM = 1 		        		
		]]>
	</statement>

	<!-- 세금계산서 발행 마스터를 삭제한다.(논리삭제) -->
	<statement name="deleteTaxShetMst" type="update">
		/*+ com.hwfs.sm.stm.dao.TaxInvoiceMgntHqDAO.deleteTaxShetMst */
		<![CDATA[
		UPDATE SLA_TAX_SHET_PUBLISH_MST
		SET	   RECD_STATUS = 'D',
			   UUSER = :loginSabun,
			   UDATE = SYSDATE
		WHERE  TAX_SHET_NUM = :taxShetNum
		]]>
	</statement>

	<!-- 세금계산서 발행 상세를 삭제한다.(논리삭제) -->
	<statement name="deleteTaxShetDtl" type="update">
		/*+ com.hwfs.sm.stm.dao.TaxInvoiceMgntHqDAO.deleteTaxShetMst */
		<![CDATA[
		UPDATE SLA_TAX_SHET_PUBLISH_DETAIL
		SET	   RECD_STATUS = 'D',
			   UUSER = :loginSabun,
			   UDATE = SYSDATE
		WHERE  TAX_SHET_NUM = :taxShetNum
		]]>
	</statement>

	<!-- 세금계산서 발행 대상목록을 삭제한다.(논리삭제) -->
	<statement name="deleteTaxShetOccurObj" type="update">
		/*+
		com.hwfs.sm.stm.dao.TaxInvoiceMgntHqDAO."deleteTaxShetOccurObj"
		*/
		<![CDATA[
		UPDATE SLA_TAX_SHET_OCCUR_OBJ
		SET	   RECD_STATUS = 'D',
			   UUSER = :loginSabun,
			   UDATE = SYSDATE
		WHERE  TAX_SHET_NUM = :taxShetNum
		]]>
	</statement>

	<!-- 원본 세금계산서 발행 대상목록을 삭제한다.(논리삭제) -->
	<statement name="deleteTaxShetOccurObjOrgnl" type="update">
		/*+
		com.hwfs.sm.stm.dao.TaxInvoiceMgntHqDAO.deleteTaxShetOccurObjOrgnl
		*/
		<![CDATA[
		UPDATE SLA_TAX_SHET_OCCUR_OBJ
		SET	   RECD_STATUS = 'D',
			   UUSER = :loginSabun,
			   UDATE = SYSDATE
		WHERE  TAX_SHET_NUM = (SELECT TAX_SHET_NUM FROM  SLA_TAX_SHET_PUBLISH_MST WHERE TAX_SHET_APPRV_NUM=:orgnlTaxShetNum)
		]]>
	</statement>

	<!-- 세금계산서 진행상태를 변경한다.  -->
	<statement name="updateTaxProgressStatus" type="update">
		/*+
		com.hwfs.sm.stm.dao.TaxInvoiceMgntHqDAO.updateTaxProgressStatus
		*/
		<![CDATA[
		UPDATE SLA_TAX_SHET_PUBLISH_MST
		SET	   
			<#if progressStatus?exists> PROGRESS_STATUS = :progressStatus , </#if>
			<#if reqStatusChange?exists> REQ_STATUS_CHANGE = :reqStatusChange , </#if>
			<#if rcvrInchargeEmail?exists> RCVR_INCHARGE_EMAIL = :rcvrInchargeEmail , </#if>
			<#if rcvrInchargeHp?exists> RCVR_INCHARGE_HP = :rcvrInchargeHp , </#if>
			UUSER = :loginSabun,
			UDATE = SYSDATE
		WHERE  TAX_SHET_NUM = :taxShetNum
		--국세청전송완료된 건은 변경 안되도록 추가 20190104 김호석 
		AND PROGRESS_STATUS <> 'OK'

		]]>
	</statement>

	<!-- 수정 세금계산서(계약의 해제) 마스터를 등록한다.  -->
	<statement name="insertConcellation" type="insert"><![CDATA[
		INSERT INTO SLA_TAX_SHET_PUBLISH_MST
		(
			TAX_SHET_NUM              
			,WRITE_CLASS               
			,PUBLISH_DATE              
			,FISCAL_DATE               
			,MU_CD                     
			,CC_CD                     
			,NEWHGHT_UPJANG            
			,VAT_CD                    
			,REG_EMP_NUM               
			,CUST_CD                   
			,ORGNL_TAX_SHET_NUM        
			,ORGNL_TAX_SHET_APPRV_NUM   
			,DOC_CD                    
			,TAX_SHET_WRITE_DATE       
			,TAX_SHET_KIND             
			,TAX_SHET_CLSFI            
			,TAX_SHET_TYPE             
			,MODIFY_CD                 
			,TAX_SHET_CLASS            
			,PUBLISH_CLASS             
			,RCPT_BILLING_CLASS        
			,SENDCPNY_CD               
			,SENDCPNY_BIZ_CD           
			,CREATION_MNBD_CD          
			,APPRV_PROC_CLASS          
			,SEND_MTOD                 
			,SEND_REQ_DATE             
			,INCOME_NEWHGHT_NUM        
			,INCOME_PACKISSUE_SDATE    
			,INCOME_PACKISSUE_EDATE    
			,INCOME_TOT_QUANTITY       
			,SUPPLIER_SUB_UPJANG_NUM   
			,RCVR_SUB_UPJANG_NUM       
			,TRUST_SUB_UPJANG_NUM      
			,CLOSE_SDATE               
			,CLOSE_EDATE               
			,SUPPLIER_BIZ_NO           
			,SUPPLIER_BIZ_NM           
			,SUPPLIER_CEONM            
			,SUPPLIER_ADDR             
			,SUPPLIER_BIZ_TYPE         
			,SUPPLIER_BIZ_CAT          
			,RCVR_BIZ_NO_CLASS         
			,RCVR_BIZ_NO               
			,RCVR_BIZ_NM               
			,RCVR_CEONM                
			,RCVR_ADDR                 
			,RCVR_BIZ_TYPE             
			,RCVR_BIZ_CAT              
			,TRUST_BIZ_NO              
			,TRUST_BIZ_NM              
			,TRUST_CEONM               
			,TRUST_ADDR                
			,TRUST_BIZ_TYPE            
			,TRUST_BIZ_CAT             
			,SUPPLIER_INCHARGE_YN      
			,SUPPLIER_INCHARGE_ID      
			,SUPPLIER_INCHARGE_NM      
			,SUPPLIER_INCHARGE_TEL     
			,SUPPLIER_INCHARGE_HP      
			,SUPPLIER_INCHARGE_EMAIL   
			,SUPPLIER_INCHARGE_DEPT    
			,SUPPLIER_INCHARGE_ID2     
			,SUPPLIER_INCHARGE_NM2     
			,SUPPLIER_INCHARGE_TEL2    
			,SUPPLIER_INCHARGE_HP2     
			,SUPPLIER_INCHARGE_EMAIL2  
			,SUPPLIER_INCHARGE_DEPT2   
			,RCVR_INCHARGE_YN          
			,RCVR_INCHARGE_ID          
			,RCVR_INCHARGE_NM          
			,RCVR_INCHARGE_TEL         
			,RCVR_INCHARGE_HP          
			,RCVR_INCHARGE_EMAIL       
			,RCVR_INCHARGE_DEPT        
			,TRUST_INCHARGE_YN         
			,TRUST_INCHARGE_ID         
			,TRUST_INCHARGE_NM         
			,TRUST_INCHARGE_TEL        
			,TRUST_INCHARGE_HP         
			,TRUST_INCHARGE_EMAIL      
			,TRUST_INCHARGE_DEPT       
			,SUPPLY_AMT                
			,VAT_AMT                   
			,TOT_AMT                   
			,TAX_SHET_REMARK           
			,SIGN_MTODCD_CASH          
			,SIGN_MTODCD_MONEY_CHECK   
			,SIGN_MTODCD_NOTES         
			,SIGN_MTODCD_CRDT          
			,SIGN_MTODAMT_CASH         
			,SIGN_MTODAMT_MONEY_CHECK  
			,SIGN_MTODAMT_NOTES        
			,SIGN_MTODAMT_CRDT         
			,EMAIL_DISPATCH_YN         
			,SMS_DISPATCH_YN           
			,TAX_SHET_XML_DATA         
			,XML_NUM_FILENM            
			,VIRTUAL_BANK_ACCT_NO1     
			,VIRTUAL_BANK_ACCT_NO2     
			,VIRTUAL_BANK_ACCT_NO3     
			,VIRTUAL_BANK_ACCT_NO4     
			,VIRTUAL_BANK_ACCT_NO5     
			,RESERV_COLUMN1            
			,RESERV_COLUMN2            
			,RESERV_COLUMN3            
			,APPEND_DOC_YN             
			,APPEND_DOC_CNT            
			,CURRENT_DDTT              
			,BU_CD                     
			,SYS_CD                    
			,MODIFY_TAX_SHET_NUM       
			,REVRS_PUBLISH_TAX_SHET_NUM
			,NTS_APPRV_NUM             
			,ELCTN_TAX_SHET_YN         
			,PUBLISH_REASON            
			,CHECK_FLAG                
			,PROGRESS_STATUS           
			,JOURNALZ_YN               
			,JOURNALZ_NUM              
			,RECD_STATUS               
			,CUSER                     
			,CDATE                     
			,UUSER                     
			,UDATE                     
			,UPJANG_CD
			,SUB_UPJANG_CD
		)
		SELECT :newtaxShetNum as newTaxShetNum              
				,T.WRITE_CLASS               
				--,T.PUBLISH_DATE           
				--,T.FISCAL_DATE  
				,:publishDate
				,:publishDate
				,T.MU_CD                     
				,T.CC_CD                     
				,T.NEWHGHT_UPJANG            
				,T.VAT_CD                    
				,:loginSabun         
				,T.CUST_CD                   
				,:taxShetApprvNum		--(SELECT TAX_SHET_APPRVNUM FROM SLA_TAX_SHET_NTS_STATUS ST WHERE ST.TAX_SHET_NUM = T.TAX_SHET_NUM)
				,:taxShetApprvNum
				,'02'                
				--,T.TAX_SHET_WRITE_DATE  
				,:publishDate    
				,DECODE(T.TAX_SHET_KIND, '01' ,'02' , '03', '04', T.TAX_SHET_KIND)   
				,T.TAX_SHET_CLSFI            
				,T.TAX_SHET_TYPE             
				,:modifyCd                 
				,T.TAX_SHET_CLASS            
				,T.PUBLISH_CLASS             
				,T.RCPT_BILLING_CLASS        
				,T.SENDCPNY_CD               
				,T.SENDCPNY_BIZ_CD           
				,T.CREATION_MNBD_CD          
				,T.APPRV_PROC_CLASS          
				,T.SEND_MTOD                 
				,T.SEND_REQ_DATE             
				,T.INCOME_NEWHGHT_NUM        
				,T.INCOME_PACKISSUE_SDATE    
				,T.INCOME_PACKISSUE_EDATE    
				,T.INCOME_TOT_QUANTITY       
				,T.SUPPLIER_SUB_UPJANG_NUM   
				,T.RCVR_SUB_UPJANG_NUM       
				,T.TRUST_SUB_UPJANG_NUM      
				,T.CLOSE_SDATE               
				,T.CLOSE_EDATE               
				,T.SUPPLIER_BIZ_NO           
				,T.SUPPLIER_BIZ_NM           
				,T.SUPPLIER_CEONM            
				,T.SUPPLIER_ADDR             
				,T.SUPPLIER_BIZ_TYPE         
				,T.SUPPLIER_BIZ_CAT          
				,T.RCVR_BIZ_NO_CLASS         
				,T.RCVR_BIZ_NO               
				,T.RCVR_BIZ_NM               
				,T.RCVR_CEONM                
				,T.RCVR_ADDR                 
				,T.RCVR_BIZ_TYPE             
				,T.RCVR_BIZ_CAT              
				,T.TRUST_BIZ_NO              
				,T.TRUST_BIZ_NM              
				,T.TRUST_CEONM               
				,T.TRUST_ADDR                
				,T.TRUST_BIZ_TYPE            
				,T.TRUST_BIZ_CAT             
				,T.SUPPLIER_INCHARGE_YN      
				,T.SUPPLIER_INCHARGE_ID      
				,T.SUPPLIER_INCHARGE_NM      
				,T.SUPPLIER_INCHARGE_TEL     
				,T.SUPPLIER_INCHARGE_HP      
				,T.SUPPLIER_INCHARGE_EMAIL   
				,T.SUPPLIER_INCHARGE_DEPT    
				,T.SUPPLIER_INCHARGE_ID2     
				,T.SUPPLIER_INCHARGE_NM2     
				,T.SUPPLIER_INCHARGE_TEL2    
				,T.SUPPLIER_INCHARGE_HP2     
				,T.SUPPLIER_INCHARGE_EMAIL2  
				,T.SUPPLIER_INCHARGE_DEPT2   
				,T.RCVR_INCHARGE_YN          
				,T.RCVR_INCHARGE_ID          
				,T.RCVR_INCHARGE_NM          
				,T.RCVR_INCHARGE_TEL         
				,T.RCVR_INCHARGE_HP          
				,T.RCVR_INCHARGE_EMAIL       
				,T.RCVR_INCHARGE_DEPT        
				,T.TRUST_INCHARGE_YN         
				,T.TRUST_INCHARGE_ID         
				,T.TRUST_INCHARGE_NM         
				,T.TRUST_INCHARGE_TEL        
				,T.TRUST_INCHARGE_HP         
				,T.TRUST_INCHARGE_EMAIL      
				,T.TRUST_INCHARGE_DEPT       
				--,T.SUPPLY_AMT * -1                
				--,T.VAT_AMT * -1                   
				--,T.TOT_AMT * -1  
				--공급가액변경 구분이 추가 되면서 쿼리 변경 20161215 맹수영
				,DECODE(:modifyCd  , '02', DECODE(T.VAT_AMT,'0',:totAmt,ROUND(:totAmt/1.1)) , T.SUPPLY_AMT * -1) 
				,DECODE(:modifyCd  , '02', DECODE(T.VAT_AMT,'0',0,(:totAmt - ROUND(:totAmt/1.1)))  , T.VAT_AMT * -1 ) 
				,DECODE(:modifyCd  , '02', :totAmt , T.TOT_AMT * -1   )             
				,T.TAX_SHET_REMARK    		
				,T.SIGN_MTODCD_CASH          
				,T.SIGN_MTODCD_MONEY_CHECK   
				,T.SIGN_MTODCD_NOTES         
				,T.SIGN_MTODCD_CRDT          
				--,T.SIGN_MTODAMT_CASH * -1 
				--공급가액 변동인 경우 수정 필요 결재금액 불일치 해결 20191008 김호석(원 세금계산서의 금액이 있는 경우만 변동금액으로 INSERT)
				--,DECODE(:modifyCd   , '02', :totAmt ,T.SIGN_MTODAMT_CASH * -1 )        
				,DECODE(T.SIGN_MTODAMT_CASH,NULL,NULL,DECODE(:modifyCd   , '02', :totAmt ,T.SIGN_MTODAMT_CASH * -1 ))
				,T.SIGN_MTODAMT_MONEY_CHECK * -1  
				,T.SIGN_MTODAMT_NOTES * -1
				--,T.SIGN_MTODAMT_CRDT * -1
				--공급가액 변동인 경우 수정 필요 결재금액 불일치 해결 20191008 김호석(원 세금계산서의 금액이 있는 경우만 변동금액으로 INSERT)
				,DECODE(T.SIGN_MTODAMT_CRDT,NULL,NULL,DECODE(:modifyCd   , '02', :totAmt ,T.SIGN_MTODAMT_CRDT * -1 ))       
				,T.EMAIL_DISPATCH_YN         
				,T.SMS_DISPATCH_YN           
				,T.TAX_SHET_XML_DATA         
				,T.XML_NUM_FILENM            
				,T.VIRTUAL_BANK_ACCT_NO1     
				,T.VIRTUAL_BANK_ACCT_NO2     
				,T.VIRTUAL_BANK_ACCT_NO3     
				,T.VIRTUAL_BANK_ACCT_NO4     
				,T.VIRTUAL_BANK_ACCT_NO5     
				,T.RESERV_COLUMN1            
				,T.RESERV_COLUMN2            
				,T.RESERV_COLUMN3            
				,T.APPEND_DOC_YN             
				,T.APPEND_DOC_CNT            
				,T.CURRENT_DDTT              
				,T.BU_CD                     
				,T.SYS_CD                    
				,T.MODIFY_TAX_SHET_NUM       
				,T.REVRS_PUBLISH_TAX_SHET_NUM
				,T.NTS_APPRV_NUM             
				,T.ELCTN_TAX_SHET_YN         
				,T.PUBLISH_REASON            
				,T.CHECK_FLAG                
				,'010'       
				,'N'           
				,NULL             
				,'L'             
				,:loginSabun                   
				,SYSDATE                    
				,:loginSabun               
				,SYSDATE
				,T.UPJANG_CD
				,T.SUB_UPJANG_CD
		FROM SLA_TAX_SHET_PUBLISH_MST T
		WHERE TAX_SHET_NUM = :taxShetNum
		]]></statement>


	<!--수정 세금계산서 상세를 저장한다.  -->
	<statement name="insertConcellationDetail" type="insert"><![CDATA[
		INSERT INTO SLA_TAX_SHET_PUBLISH_DETAIL
		(
		TAX_SHET_NUM
		,ITEM_SEQ
		,ITEM_SUPPLY_DATE
		,ITEM_NM
		,ITEM_STAND
		,ITEM_QUANTITY
		,ITEM_UPRICE
		,ITEM_SUPPLY_AMT
		,ITEM_VAT_AMT
		,ITEM_REMARK
		,RECD_STATUS
		,CUSER
		,CDATE
		,UUSER
		,UDATE
		)
		SELECT :newtaxShetNum,
			   ITEM_SEQ,
			   --ITEM_SUPPLY_DATE,
			   :publishDate,
			   --SAP전송 시 에러 방지 <> -> ()로 강제변경
			   REPLACE(REPLACE(ITEM_NM,'<','('),'>',')'),
			   ITEM_STAND,
			   ITEM_QUANTITY,
			   ITEM_UPRICE,
				--공급가액변경 구분이 추가 되면서 쿼리 변경 20161215 맹수영
			   DECODE(:modifyCd  , '02', DECODE(ITEM_VAT_AMT,0,:totAmt,ROUND(:totAmt/1.1)) , ITEM_SUPPLY_AMT * -1), 
			   DECODE(:modifyCd  , '02', DECODE(ITEM_VAT_AMT,0,0,(:totAmt - ROUND(:totAmt/1.1)))  , ITEM_VAT_AMT * -1 ), 
			   --DECODE(:modifyCd , '02', DECODE(:vatCd,'40',:totAmt, ROUND(:totAmt/1.1)) , ITEM_SUPPLY_AMT * -1 ), 
			   --DECODE(:modifyCd , '02', DECODE(:vatCd,'40',0,(:totAmt - ROUND(:totAmt/1.1))) , ITEM_VAT_AMT * -1  ), 
               --ITEM_SUPPLY_AMT * -1,
			   --ITEM_VAT_AMT * -1,
			   ITEM_REMARK,
			   'L',
			   :loginSabun,
			   SYSDATE,
			   :loginSabun,
			   SYSDATE
		FROM   SLA_TAX_SHET_PUBLISH_DETAIL
		WHERE  TAX_SHET_NUM = :taxShetNum
		--삭제된 세금계산서 수정세금계산서 발행 시 필요(권한에 따라 부여)
		--AND	   RECD_STATUS = 'L'
		ORDER BY ITEM_SEQ
		]]></statement>



	<!-- 수정 세금계산서 번호를 생성한다. -->
	<statement name="selectTaxShetNumConcellation" type="select">
		/*+
		com.hwfs.sm.stm.dao.TaxInvoiceMgntHqDAO.selectTaxShetNumConcellation
		*/
		<![CDATA[
		SELECT :publishDate || '-' || :sysClass || '-' || SLA_TAX_SHET_NUM_SEQ.NEXTVAL AS  TAX_SHET_NUM FROM DUAL
		
		--SELECT TO_CHAR(SYSDATE,'YYYYMMDD') || '-' || SUBSTR(:taxShetNum, 10, 4) || '-' || LPAD(TO_NUMBER(NVL(SUBSTR(MAX(TAX_SHET_NUM), 15, 25), 0))+1, 10, 0) TAX_SHET_NUM	--회계일자_구분번호_일련번호(10자리)
		--FROM   SLA_TAX_SHET_PUBLISH_MST
		--WHERE  PUBLISH_DATE = TO_CHAR(SYSDATE,'YYYYMMDD')
		--AND	   SUBSTR(TAX_SHET_NUM, 0, 1) != 'T'
		--AND	   SUBSTR(TAX_SHET_NUM, 10, 4) = SUBSTR(:taxShetNum, 10, 4)
		]]>
	</statement>

	<!-- 수정 세금계산서(기재사항착오 및 착오 정정) 마스터를 등록한다.  -->
	<statement name="insertTaxShetCorrectionMst" type="insert">
		/*+
		com.hwfs.sm.stm.dao.TaxInvoiceMgntHqDAO.insertTaxShetCorrectionMst
		*/
		<![CDATA[
		INSERT INTO SLA_TAX_SHET_PUBLISH_MST
		(
			TAX_SHET_NUM              
			,WRITE_CLASS               
			,PUBLISH_DATE              
			,FISCAL_DATE               
			,MU_CD                     
			,CC_CD                     
			,NEWHGHT_UPJANG            
			,VAT_CD                    
			,REG_EMP_NUM               
			,CUST_CD                   
			,ORGNL_TAX_SHET_NUM        
			,ORGNL_TAX_SHET_APPRV_NUM   
			,DOC_CD                    
			,TAX_SHET_WRITE_DATE       
			,TAX_SHET_KIND             
			,TAX_SHET_CLSFI            
			,TAX_SHET_TYPE             
			,MODIFY_CD                 
			,TAX_SHET_CLASS            
			,PUBLISH_CLASS             
			,RCPT_BILLING_CLASS        
			,SENDCPNY_CD               
			,SENDCPNY_BIZ_CD           
			,CREATION_MNBD_CD          
			,APPRV_PROC_CLASS          
			,SEND_MTOD                 
			,SEND_REQ_DATE             
			,INCOME_NEWHGHT_NUM        
			,INCOME_PACKISSUE_SDATE    
			,INCOME_PACKISSUE_EDATE    
			,INCOME_TOT_QUANTITY       
			,SUPPLIER_SUB_UPJANG_NUM   
			,RCVR_SUB_UPJANG_NUM       
			,TRUST_SUB_UPJANG_NUM      
			,CLOSE_SDATE               
			,CLOSE_EDATE               
			,SUPPLIER_BIZ_NO           
			,SUPPLIER_BIZ_NM           
			,SUPPLIER_CEONM            
			,SUPPLIER_ADDR             
			,SUPPLIER_BIZ_TYPE         
			,SUPPLIER_BIZ_CAT          
			,RCVR_BIZ_NO_CLASS         
			,RCVR_BIZ_NO               
			,RCVR_BIZ_NM               
			,RCVR_CEONM                
			,RCVR_ADDR                 
			,RCVR_BIZ_TYPE             
			,RCVR_BIZ_CAT              
			,TRUST_BIZ_NO              
			,TRUST_BIZ_NM              
			,TRUST_CEONM               
			,TRUST_ADDR                
			,TRUST_BIZ_TYPE            
			,TRUST_BIZ_CAT             
			,SUPPLIER_INCHARGE_YN      
			,SUPPLIER_INCHARGE_ID      
			,SUPPLIER_INCHARGE_NM      
			,SUPPLIER_INCHARGE_TEL     
			,SUPPLIER_INCHARGE_HP      
			,SUPPLIER_INCHARGE_EMAIL   
			,SUPPLIER_INCHARGE_DEPT    
			,SUPPLIER_INCHARGE_ID2     
			,SUPPLIER_INCHARGE_NM2     
			,SUPPLIER_INCHARGE_TEL2    
			,SUPPLIER_INCHARGE_HP2     
			,SUPPLIER_INCHARGE_EMAIL2  
			,SUPPLIER_INCHARGE_DEPT2   
			,RCVR_INCHARGE_YN          
			,RCVR_INCHARGE_ID          
			,RCVR_INCHARGE_NM          
			,RCVR_INCHARGE_TEL         
			,RCVR_INCHARGE_HP          
			,RCVR_INCHARGE_EMAIL       
			,RCVR_INCHARGE_DEPT        
			,TRUST_INCHARGE_YN         
			,TRUST_INCHARGE_ID         
			,TRUST_INCHARGE_NM         
			,TRUST_INCHARGE_TEL        
			,TRUST_INCHARGE_HP         
			,TRUST_INCHARGE_EMAIL      
			,TRUST_INCHARGE_DEPT       
			,SUPPLY_AMT                
			,VAT_AMT                   
			,TOT_AMT                   
			,TAX_SHET_REMARK           
			,SIGN_MTODCD_CASH          
			,SIGN_MTODCD_MONEY_CHECK   
			,SIGN_MTODCD_NOTES         
			,SIGN_MTODCD_CRDT          
			,SIGN_MTODAMT_CASH         
			,SIGN_MTODAMT_MONEY_CHECK  
			,SIGN_MTODAMT_NOTES        
			,SIGN_MTODAMT_CRDT         
			,EMAIL_DISPATCH_YN         
			,SMS_DISPATCH_YN           
			,TAX_SHET_XML_DATA         
			,XML_NUM_FILENM            
			,VIRTUAL_BANK_ACCT_NO1     
			,VIRTUAL_BANK_ACCT_NO2     
			,VIRTUAL_BANK_ACCT_NO3     
			,VIRTUAL_BANK_ACCT_NO4     
			,VIRTUAL_BANK_ACCT_NO5     
			,RESERV_COLUMN1            
			,RESERV_COLUMN2            
			,RESERV_COLUMN3            
			,APPEND_DOC_YN             
			,APPEND_DOC_CNT            
			,CURRENT_DDTT              
			,BU_CD                     
			,SYS_CD                    
			,MODIFY_TAX_SHET_NUM       
			,REVRS_PUBLISH_TAX_SHET_NUM
			,NTS_APPRV_NUM             
			,ELCTN_TAX_SHET_YN         
			,PUBLISH_REASON            
			,CHECK_FLAG                
			,PROGRESS_STATUS           
			,JOURNALZ_YN               
			,JOURNALZ_NUM              
			,RECD_STATUS               
			,CUSER                     
			,CDATE                     
			,UUSER                     
			,UDATE                     
		)
		SELECT  :newtaxShetNum as newTaxShetNum              
				,:writeClass           
				,T.PUBLISH_DATE              
				,T.FISCAL_DATE               
				,T.MU_CD                     
				,T.CC_CD                     
				,T.NEWHGHT_UPJANG            
				,T.VAT_CD                    
				,:loginSabun         
				,T.CUST_CD                   
				,:taxShetApprvNum	--(SELECT TAX_SHET_APPRVNUM FROM SLA_TAX_SHET_NTS_STATUS ST WHERE ST.TAX_SHET_NUM = T.TAX_SHET_NUM)      
				,:taxShetApprvNum        
				,T.DOC_CD                
				,T.TAX_SHET_WRITE_DATE       
				,DECODE(T.TAX_SHET_KIND, '01' ,'02', '03', '04')  
				,:taxShetClsfi   
				,:taxShetType        
				,:modifyCd                 
				,T.TAX_SHET_CLASS            
				,T.PUBLISH_CLASS             
				,T.RCPT_BILLING_CLASS        
				,T.SENDCPNY_CD               
				,T.SENDCPNY_BIZ_CD           
				,T.CREATION_MNBD_CD          
				,T.APPRV_PROC_CLASS          
				,T.SEND_MTOD                 
				,T.SEND_REQ_DATE             
				,T.INCOME_NEWHGHT_NUM        
				,T.INCOME_PACKISSUE_SDATE    
				,T.INCOME_PACKISSUE_EDATE    
				,T.INCOME_TOT_QUANTITY       
				,T.SUPPLIER_SUB_UPJANG_NUM   
				,T.RCVR_SUB_UPJANG_NUM       
				,T.TRUST_SUB_UPJANG_NUM      
				,T.CLOSE_SDATE               
				,T.CLOSE_EDATE               
				,T.SUPPLIER_BIZ_NO           
				,T.SUPPLIER_BIZ_NM           
				,T.SUPPLIER_CEONM            
				,T.SUPPLIER_ADDR             
				,T.SUPPLIER_BIZ_TYPE         
				,T.SUPPLIER_BIZ_CAT          
				,T.RCVR_BIZ_NO_CLASS         
				,:rcvrBizNo               
				,:rcvrBizNm              
				,:rcvrCeonm                
				,:rcvrAddr                
				,:rcvrBizType         
				,:rcvrBizCat            
				,T.TRUST_BIZ_NO              
				,T.TRUST_BIZ_NM              
				,T.TRUST_CEONM               
				,T.TRUST_ADDR                
				,T.TRUST_BIZ_TYPE            
				,T.TRUST_BIZ_CAT             
				,:supplierInchargeYn    
				,:supplierInchargeId      
				,:supplierInchargeNm      
				,:supplierInchargeTel     
				,:supplierInchargeHp      
				,:supplierInchargeEmail   
				,:supplierInchargeDept    
				,:supplierInchargeId2     
				,:supplierInchargeNm2     
				,:supplierInchargeTel2    
				,:supplierInchargeHp2     
				,:supplierInchargeEmail2  
				,:supplierInchargeDept2   
				,:rcvrInchargeYn
				,:rcvrInchargeId          
				,:rcvrInchargeNm          
				,:rcvrInchargeTel         
				,:rcvrInchargeHp          
				,:rcvrInchargeEmail       
				,:rcvrInchargeDept        
				,T.TRUST_INCHARGE_YN         
				,T.TRUST_INCHARGE_ID         
				,T.TRUST_INCHARGE_NM         
				,T.TRUST_INCHARGE_TEL        
				,T.TRUST_INCHARGE_HP         
				,T.TRUST_INCHARGE_EMAIL      
				,T.TRUST_INCHARGE_DEPT       
				,:supplyAmt               
				,:vatAmt                  
				,:totAmt                   
				,<#if taxShetRemark?has_content> :taxShetRemark <#else> T.TAX_SHET_REMARK </#if>           
				,:signMtodcdCash        
				,:signMtodcdMoneyCheck   
				,:signMtodcdNotes         
				,:signMtodcdCrdt          
				,:signMtodamtCash        
				,:signMtodamtMoneyCheck   
				,:signMtodamtNotes         
				,:signMtodamtCrdt           
				,:emailDispatchYn         
				,:smsDispatchYn           
				,T.TAX_SHET_XML_DATA         
				,T.XML_NUM_FILENM            
				,T.VIRTUAL_BANK_ACCT_NO1     
				,T.VIRTUAL_BANK_ACCT_NO2     
				,T.VIRTUAL_BANK_ACCT_NO3     
				,T.VIRTUAL_BANK_ACCT_NO4     
				,T.VIRTUAL_BANK_ACCT_NO5     
				,T.RESERV_COLUMN1            
				,T.RESERV_COLUMN2            
				,T.RESERV_COLUMN3            
				,T.APPEND_DOC_YN             
				,T.APPEND_DOC_CNT            
				,T.CURRENT_DDTT              
				,T.BU_CD                     
				,T.SYS_CD                    
				,T.MODIFY_TAX_SHET_NUM       
				,T.REVRS_PUBLISH_TAX_SHET_NUM
				,T.NTS_APPRV_NUM             
				,T.ELCTN_TAX_SHET_YN         
				,T.PUBLISH_REASON            
				,T.CHECK_FLAG                
				,'010'       
				,T.JOURNALZ_YN               
				,T.JOURNALZ_NUM              
				,'L'             
				,:loginSabun                   
				,SYSDATE                    
				,:loginSabun               
				,SYSDATE
		FROM SLA_TAX_SHET_PUBLISH_MST T
		WHERE TAX_SHET_NUM = :taxShetNum
		]]>
	</statement>

	<!--수정 세금계산서(기재사항착오 및 착오 정정) 상세를 저장한다.  -->
	<statement name="insertTaxShetCorrectionDtl" type="insert">
		/*+
		com.hwfs.sm.stm.dao.TaxInvoiceMgntHqDAO.insertTaxShetCorrectionDtl
		*/
		<![CDATA[
		INSERT INTO SLA_TAX_SHET_PUBLISH_DETAIL
		(
		TAX_SHET_NUM
		,ITEM_SEQ
		,ITEM_SUPPLY_DATE
		,ITEM_NM
		,ITEM_STAND
		,ITEM_QUANTITY
		,ITEM_UPRICE
		,ITEM_SUPPLY_AMT
		,ITEM_VAT_AMT
		,ITEM_REMARK
		,RECD_STATUS
		,CUSER
		,CDATE
		,UUSER
		,UDATE
		) VALUES (
	    :newtaxShetNum,
	    :itemSeq,
	    :itemSupplyDate, 		--TO_CHAR(SYSDATE, 'YYYYMMDD'),
		--SAP전송 시 에러 방지 <> -> ()로 강제변경
	    REPLACE(REPLACE(:itemNm,'<','('),'>',')'),
	    :itemStand,
	    :itemQuantity,
	    :itemUprice,
	    :itemSupplyAmt,
	    :itemVatAmt,
	    :itemRemark,
	    'L',
	    :loginSabun,
	    SYSDATE,
	    :loginSabun,
	    SYSDATE
		)
		]]>
	</statement>

	<!--수정 세금계산서(기재사항착오 및 착오 정정) 상세를 저장한다.  -->
	<statement name="insertTaxShetApplyAmtDtl" type="insert">
		/*+
		com.hwfs.sm.stm.dao.TaxInvoiceMgntHqDAO.insertTaxShetApplyAmtDtl
		*/
		<![CDATA[
		INSERT INTO SLA_TAX_SHET_PUBLISH_DETAIL
		(
		TAX_SHET_NUM
		,ITEM_SEQ
		,ITEM_SUPPLY_DATE
		,ITEM_NM
		,ITEM_STAND
		,ITEM_QUANTITY
		,ITEM_UPRICE
		,ITEM_SUPPLY_AMT
		,ITEM_VAT_AMT
		,ITEM_REMARK
		,RECD_STATUS
		,CUSER
		,CDATE
		,UUSER
		,UDATE
		) VALUES (
	    :newtaxShetNum,
	    :itemSeq,
	    :itemSupplyDate,			--TO_CHAR(SYSDATE, 'YYYY') || :itemSupplyDateMm || :itemSupplyDateDd,
	    --SAP전송 시 에러 방지 <> -> ()로 강제변경
	    REPLACE(REPLACE(:itemNm,'<','('),'>',')'),
	    :itemStand,
	    :itemQuantity,
	    :itemUprice,
	    :itemSupplyAmt,
	    :itemVatAmt,
	    :itemRemark,
	    'L',
	    :loginSabun,
	    SYSDATE,
	    :loginSabun,
	    SYSDATE
		)
		]]>
	</statement>

	<!-- 기재사항 착오 정정일 경우 매출등에 대해서 새로운 세금계산서 번호로 업데이트 -->
	<statement name="updateCorrectionObj" type="update">
		/*+ com.hwfs.sm.stm.dao.TaxInvoiceMgntHqDAO.updateCorrectionObj
		*/
		<![CDATA[
		UPDATE SLA_TAX_SHET_OCCUR_OBJ
		SET	   TAX_SHET_NUM = :newtaxShetNum,
			   UUSER = :loginSabun,
			   UDATE = SYSDATE
		WHERE  TAX_SHET_NUM = :taxShetNum
		]]>
	</statement>

	<!-- 세금계산서 공급 받는자 담당자를 조회한다. -->
	<statement name="selectInvoiceRcvr" type="select">
		/*+ com.hwfs.sm.stm.dao.TaxInvoiceMgntHqDAO.selectInvoiceRcvr */
		<![CDATA[
		SELECT 
		       A.RCVR_INCHARGE_YN,
		       MAX(A.RCVR_INCHARGE_ID) AS RCVR_INCHARGE_ID,
		       A.RCVR_INCHARGE_NM,
		       A.RCVR_INCHARGE_TEL,
		       A.RCVR_INCHARGE_HP,
		       A.RCVR_INCHARGE_EMAIL,
		       A.RCVR_INCHARGE_DEPT
		FROM   SLA_TAX_SHET_PUBLISH_MST A
		WHERE  1 = 1
		<#if mainUpjangCd?has_content>
		AND	   UPJANG_CD = :mainUpjangCd
		</#if>
		<#if subUpjang?has_content>
		AND	   SUB_UPJANG_CD = :subUpjang
		</#if>
		<#if custCd?has_content>
		AND	   CUST_CD = :custCd
		</#if>
		<#if rcvrInchargeNm?has_content>
		AND	   RCVR_INCHARGE_NM = '%' || :rcvrInchargeNm || '%'
		</#if>
        GROUP BY 
		       A.RCVR_INCHARGE_YN,
		       A.RCVR_INCHARGE_NM,
		       A.RCVR_INCHARGE_TEL,
		       A.RCVR_INCHARGE_HP,
		       A.RCVR_INCHARGE_EMAIL,
		       A.RCVR_INCHARGE_DEPT		
		]]>
	</statement>


</hqml>
