<?xml version="1.0" encoding="utf-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="am.ams.equipmentRegistDAO">
	<desc>전산장비 등록 관리 HQML Query</desc>

	<statement name="selectAdminList" type="select">
		<![CDATA[
	/* 전산장비 관리자 조회 */
SELECT CODE AS SABUN,
       CODE_NAME AS NAME
  FROM SCC_COMMON_CODE
 WHERE GROUP_CODE = 'AMS_MAN_SABUN'
   AND USE_YN = 'Y'
ORDER BY SORT_SEQ
]]>
	</statement>
	<statement name="selectList"><![CDATA[/* 전산장비 등록 조회 */
SELECT
       '0' AS CHK,
       EQ_NO,
       STAT_CD,
       PURCHASE_TYPE,
       PURCHASE_DESC,
       COMEQ_TYPE,
       MODEL_NM,
       MODEL_DESC,
       OS_TYPE,
       OS_DESC,
       CPU_TYPE,
       CPU_DESC,
       MEM_TYPE,
       MEM_DESC,
       MAD_COMP,
       MAD_COMP_DESC,
       DISP_TYPE,
       HDD_TYPE,
       MAD_YMD,
       SERIAL_NO,
       PURCHASE_DT,
       PURCHASE_AMT,
       SERVICE_LIFE,
       INPUT_DT,
       INPUT_SABUN,
      (SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = INPUT_SABUN AND ROWNUM = 1) AS INPUT_SABUN_NM,
       ATTR_UPJANG,
      (SELECT UPJANGNM FROM SCO_UPJANG_MST_V WHERE UPJANG = ATTR_UPJANG AND ROWNUM = 1) AS ATTR_UPJANG_NM,
       ATTR_SABUN,
      (SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = ATTR_SABUN AND ROWNUM = 1) AS ATTR_SABUN_NM,
       ETC_NOTE,
       OUT_DT,
       OUT_SABUN,
      (SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = OUT_SABUN AND ROWNUM = 1) AS OUT_SABUN_NM,
       SALE_AMT,
       OUT_NOTE,
       PRT_CNT,
      (SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = AMS_EQ_MST.UUSER AND ROWNUM = 1) AS UUSER,
       UDATE,
       '' AS IMG_FILE,
       '' AS IS_UPLOAD,
       APPEND_FILENM,
       SERVER_FILENM,
      (CASE WHEN SERVER_FILENM IS NOT NULL THEN 'Y' ELSE 'N' END) AS FILE_EXISTS,
      USE_YN
  FROM AMS_EQ_MST
  INNER JOIN SCO_UPJANG_V UPJANG ON UPJANG.UPJANG = TO_NUMBER(ATTR_UPJANG) 
 <#if adminYn == "Y">
 	<#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
    <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if> 
	<#if outletCd?has_content> WHERE UPJANG.UPJANG = :outletCd </#if>
<#else>
   AND ATTR_UPJANG = :attrUpjang
</#if>
<#if START_DATE != "">
   AND INPUT_DT >= :START_DATE
</#if>
<#if END_DATE != "">
   AND INPUT_DT <= :END_DATE
</#if>
<#if statCd?has_content>
   AND STAT_CD = :statCd
</#if>
<#if comeqType?has_content>
   AND COMEQ_TYPE = :comeqType
</#if>
<#if purchaseType?has_content>
   AND PURCHASE_TYPE = :purchaseType
</#if>
<#if eqNo?has_content>
   AND EQ_NO = :eqNo
<#else>
   AND EQ_NO LIKE (SELECT '%' FROM DUAL)
</#if>
<#if useYn = "Y">
   AND USE_YN = 'Y'
<#else>
   AND USE_YN = 'N'
</#if>
<#if serialNo?has_content>
   AND SERIAL_NO like '%' || :serialNo || '%'
</#if>
<#if attrSabun?has_content>
   AND ATTR_SABUN = :attrSabun
</#if>
ORDER BY INPUT_DT DESC, EQ_NO DESC]]></statement>
	<statement name="insert"><![CDATA[INSERT INTO AMS_EQ_MST
(
EQ_NO,STAT_CD,PURCHASE_TYPE,PURCHASE_DESC,COMEQ_TYPE,
MODEL_NM,MODEL_DESC,OS_TYPE,OS_DESC,CPU_TYPE,CPU_DESC,MEM_TYPE,MEM_DESC,
DISP_TYPE,HDD_TYPE,
MAD_COMP,MAD_COMP_DESC,MAD_YMD,
SERIAL_NO,PURCHASE_DT,PURCHASE_AMT,SERVICE_LIFE,
INPUT_DT,INPUT_SABUN,ATTR_UPJANG,ATTR_SABUN,
ETC_NOTE,OUT_DT,OUT_SABUN,SALE_AMT,OUT_NOTE,
APPEND_FILENM, SERVER_FILENM,
CUSER,CDATE,UUSER,UDATE
)
VALUES
(
:eqNo,
:statCd,
<#if purchaseType?has_content> :purchaseType, <#else> null, </#if>
<#if purchaseDesc?has_content> :purchaseDesc, <#else> null, </#if>
:comeqType,
<#if modelNm?has_content> :modelNm, <#else> null, </#if>
<#if modelDesc?has_content> :modelDesc, <#else> null, </#if>
<#if osType?has_content> :osType, <#else> null, </#if>
<#if osDesc?has_content> :osDesc, <#else> null, </#if>
<#if cpuType?has_content> :cpuType, <#else> null, </#if>
<#if cpuDesc?has_content> :cpuDesc, <#else> null, </#if>
<#if memType?has_content> :memType, <#else> null, </#if>
<#if memDesc?has_content> :memDesc, <#else> null, </#if>
<#if dispType?has_content> :dispType, <#else> null, </#if>
<#if hddType?has_content> :hddType, <#else> null, </#if>
<#if madComp?has_content> :madComp, <#else> null, </#if>
<#if madCompDesc?has_content> :madCompDesc, <#else> null, </#if>
<#if madYmd?has_content> :madYmd, <#else> null, </#if>
<#if serialNo?has_content> :serialNo, <#else> null, </#if>
<#if purchaseDt?has_content> :purchaseDt, <#else> null, </#if>
<#if purchaseAmt?has_content> :purchaseAmt, <#else> 0, </#if>
<#if serviceLife?has_content> :serviceLife, <#else> 0, </#if>
<#if inputDt?has_content> :inputDt, <#else> null, </#if>
<#if inputSabun?has_content> :inputSabun, <#else> null, </#if>
<#if attrUpjang?has_content> :attrUpjang, <#else> null, </#if>
<#if attrSabun?has_content> :attrSabun, <#else> null, </#if>
<#if etcNote?has_content> :etcNote, <#else> null, </#if>
<#if outDt?has_content> :outDt, <#else> null, </#if>
<#if outSabun?has_content> :outSabun, <#else> null, </#if>
<#if saleAmt?has_content> :saleAmt, <#else> 0, </#if>
<#if outNote?has_content> :outNote, <#else> null, </#if>
<#if appendFilenm?has_content> :appendFilenm, <#else> null, </#if>
<#if serverFilenm?has_content> :serverFilenm, <#else> null, </#if>
:loginSabun,
SYSDATE,
:loginSabun,
SYSDATE
)]]></statement>
	<statement name="update"><![CDATA[UPDATE AMS_EQ_MST
   SET
STAT_CD          = <#if statCd?has_content> :statCd, <#else> null, </#if>          
PURCHASE_TYPE    = <#if purchaseType?has_content> :purchaseType, <#else> null, </#if>  
PURCHASE_DESC    = <#if purchaseDesc?has_content> :purchaseDesc, <#else> null, </#if>  
COMEQ_TYPE       = <#if comeqType?has_content> :comeqType, <#else> null, </#if>    
MODEL_NM         = <#if modelNm?has_content> :modelNm, <#else> null, </#if>        
MODEL_DESC       = <#if modelDesc?has_content> :modelDesc, <#else> null, </#if>    
OS_TYPE          = <#if osType?has_content> :osType, <#else> null, </#if>          
OS_DESC          = <#if osDesc?has_content> :osDesc, <#else> null, </#if>          
CPU_TYPE         = <#if cpuType?has_content> :cpuType, <#else> null, </#if>        
CPU_DESC         = <#if cpuDesc?has_content> :cpuDesc, <#else> null, </#if>        
MEM_TYPE         = <#if memType?has_content> :memType, <#else> null, </#if>        
MEM_DESC         = <#if memDesc?has_content> :memDesc, <#else> null, </#if>        
DISP_TYPE        = <#if dispType?has_content> :dispType, <#else> null, </#if>        
HDD_TYPE         = <#if hddType?has_content> :hddType, <#else> null, </#if>        
MAD_COMP         = <#if madComp?has_content> :madComp, <#else> null, </#if>        
MAD_COMP_DESC    = <#if madCompDesc?has_content> :madCompDesc, <#else> null, </#if>
MAD_YMD          = <#if madYmd?has_content> :madYmd, <#else> null, </#if>          
SERIAL_NO        = <#if serialNo?has_content> :serialNo, <#else> null, </#if>      
PURCHASE_DT      = <#if purchaseDt?has_content> :purchaseDt, <#else> null, </#if>  
PURCHASE_AMT     = <#if purchaseAmt?has_content> :purchaseAmt, <#else> 0, </#if>
SERVICE_LIFE     = <#if serviceLife?has_content> :serviceLife, <#else> 0, </#if>
INPUT_DT         = <#if inputDt?has_content> :inputDt, <#else> null, </#if>        
INPUT_SABUN      = <#if inputSabun?has_content> :inputSabun, <#else> null, </#if>  
ATTR_UPJANG      = <#if attrUpjang?has_content> :attrUpjang, <#else> null, </#if>  
ATTR_SABUN       = <#if attrSabun?has_content> :attrSabun, <#else> null, </#if>    
ETC_NOTE         = <#if etcNote?has_content> :etcNote, <#else> null, </#if>        
OUT_DT           = <#if outDt?has_content> :outDt, <#else> null, </#if>            
OUT_SABUN        = <#if outSabun?has_content> :outSabun, <#else> null, </#if>      
SALE_AMT         = <#if saleAmt?has_content> :saleAmt, <#else> 0, </#if>        
OUT_NOTE         = <#if outNote?has_content> :outNote, <#else> null, </#if>  
APPEND_FILENM    = <#if appendFilenm?has_content> :appendFilenm, <#else> null, </#if>  
SERVER_FILENM    = <#if serverFilenm?has_content> :serverFilenm, <#else> null, </#if>
USE_YN           = :useYn,
UUSER            = :loginSabun,
UDATE            = SYSDATE
 WHERE EQ_NO     = :eqNo]]></statement>
	<statement name="delete"><![CDATA[DELETE FROM AMS_EQ_MST
 WHERE EQ_NO = :eqNo]]></statement>
	<statement name="selectEqList"><![CDATA[SELECT EQ_NO,
   	   SCC_CODE_NM('AMS_STAT_CD',STAT_CD) AS STAT_CD,
   	   SCC_CODE_NM('AMS_COMEQ_TYPE',COMEQ_TYPE) AS COMEQ_TYPE,
   	   SERIAL_NO,
   	   PURCHASE_DT,
       (SELECT UPJANGNM FROM SCO_UPJANG_MST_V WHERE UPJANG = ATTR_UPJANG AND ROWNUM = 1) AS ATTR_UPJANG,
       (SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = ATTR_SABUN AND ROWNUM = 1) AS ATTR_SABUN
  FROM AMS_EQ_MST
 WHERE 1=1
<#if eqNo?has_content>
   AND EQ_NO = :eqNo
</#if>
<#if comeqType?has_content>
   AND COMEQ_TYPE = :comeqType
</#if>
<#if statCd?has_content>
   AND STAT_CD = :statCd
</#if>
<#if attrUpjang?has_content>
   AND ATTR_UPJANG = :attrUpjang
</#if>
<#if attrSabun?has_content>
   AND ATTR_SABUN = :attrSabun
</#if>
]]></statement>
	<statement name="selectHist"><![CDATA[SELECT
       EQ_NO,
       SEQ,
       CHG_YMD || ' ' || CHG_TIME AS CHG_DT,
       CHG_GUBUN,
      (SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = AMS_EQ_HIST.UUSER AND ROWNUM = 1) AS CHG_SABUN_NM,
       CHG_BEFORE,
       CHG_AFTER
  FROM AMS_EQ_HIST
 WHERE EQ_NO = :eqNo
ORDER BY CHG_YMD DESC, CHG_TIME DESC, SEQ DESC]]></statement>
	<statement name="selectEqno"><![CDATA[SELECT /* 전산장비관리번호채번 */
       T2.SET1||TO_CHAR(SYSDATE,'YYMMDD')||TO_CHAR(AMS_EQNO_SEQ.NEXTVAL)
  FROM SCC_COMMON_GROUP T1,
       SCC_COMMON_CODE  T2
 WHERE T1.GROUP_CODE = 'AMS_COMEQ_TYPE'
   AND T1.USE_YN     = 'Y'
   AND T1.GROUP_CODE = T2.GROUP_CODE
   AND T2.CODE       = :comeqType
   AND T2.USE_YN     = 'Y']]></statement>
	<statement name="updateA"><![CDATA[/* 재고-->지급 */
UPDATE AMS_EQ_MST
   SET STAT_CD = 'P'
 WHERE EQ_NO = :eqNo
   AND STAT_CD = 'I'
   AND ATTR_UPJANG = <#if attrUpjang?has_content> :attrUpjang <#else> null </#if>
   AND ATTR_SABUN = <#if attrSabun?has_content> :attrSabun <#else> null </#if>]]></statement>
	<statement name="selectAsList"><![CDATA[SELECT EQ_NO,
       SEQ,
       REMARK,
       TO_CHAR(CDATE,'YYYY-MM-DD') AS CDATE,
       (SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = AMS_EQ_AS.CUSER AND ROWNUM = 1) AS CUSER
  FROM AMS_EQ_AS
 WHERE 1=1
   AND EQ_NO = :eqNo
ORDER BY EQ_NO, SEQ DESC]]></statement>
	<statement name="insertAs"><![CDATA[INSERT INTO AMS_EQ_AS
(
EQ_NO,
SEQ,
REMARK,
CUSER,
CDATE,
UUSER,
UDATE
)
VALUES
(
:eqNo,
(SELECT NVL(MAX(SEQ)+1,1) FROM AMS_EQ_AS WHERE EQ_NO = :eqNo),
:remark,
:loginSabun,
SYSDATE,
:loginSabun,
SYSDATE
)]]></statement>
	<statement name="updateAs"><![CDATA[UPDATE AMS_EQ_AS
   SET REMARK = <#if remark?has_content> :remark, <#else> null, </#if>
       UUSER = :loginSabun,
       UDATE = SYSDATE
 WHERE EQ_NO = :eqNo
   AND SEQ   = :seq]]></statement>
	<statement name="deleteAs"><![CDATA[DELETE FROM AMS_EQ_AS
 WHERE MU_CD = :eqNo
   AND SEQ   = :seq]]></statement>

	<statement name="updatePrt"><![CDATA[UPDATE AMS_EQ_MST
   SET PRT_CNT = NVL(PRT_CNT,0) + 1
 WHERE EQ_NO = :eqNo]]></statement>

	<!-- 상세 코드 일괄 DATA를 조회한다. -->
	<statement name="selectCodeDtlBatchList" type="select">
		<![CDATA[
SELECT GROUP_CODE,
       CODE,
       CODE_NAME,
       SET1,
       SET2
FROM   SCC_COMMON_CODE
WHERE  GROUP_CODE IN ( :groupCodeList )
AND    USE_YN = 'Y'
ORDER BY GROUP_CODE, SORT_SEQ, CODE
        ]]>
	</statement>

	<statement name="selectBarprtList"><![CDATA[	/* 바코드프린터 사용자 조회 */
SELECT CODE AS SABUN,
       CODE_NAME AS NAME
  FROM SCC_COMMON_CODE
 WHERE GROUP_CODE = 'AMS_BARPRT_SABUN'
   AND USE_YN = 'Y'
ORDER BY SORT_SEQ]]></statement>
</hqml>