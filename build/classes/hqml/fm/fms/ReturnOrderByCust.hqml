<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="fm.fms.returnOrderByCustDAO">
	<desc>반환발주 HQML Query</desc>

	<!-- 반환발주 목록 조회 -->
	<statement name="selectReturnOrderByCustList" type="select">
		/*+ com.hwfs.fm.fms.dao.returnOrderByCustDAO.selectReturnOrderByCustList */
		<![CDATA[
		SELECT A.*
		 --운영율 FMU_OP_RATE -> FMS_TRANSACTION_V 수정 맹수영 20150919 시작
		     ,  DECODE(NVL(A.OP_PRICE_S,0), 0, A.SALE_PRICE, A.OP_PRICE_S) AS OP_PRICE --운영단가
		     ,  DECODE(NVL(A.OP_PRICE_S,0), 0, ROUND(DECODE(A.TAX_CODE, 100, A.SALE_PRICE*1.1, A.SALE_PRICE)), ROUND(DECODE(A.TAX_CODE, 100, A.OP_PRICE_S*1.1, A.OP_PRICE_S))) AS OP_PRICE_TAX --운영단가 NEW 
		     ,  DECODE(NVL(A.OP_PRICE_S,0), 0, A.SALE_AMOUNT, ROUND(A.OP_PRICE_S * A.PR_QTY)) AS OP_AMOUNT    
		     ,  DECODE(NVL(A.OP_PRICE_S,0), 0, A.SALE_AMOUNT, ROUND(A.OP_PRICE_S * A.PR_QTY)) AS OP_AMOUNT_OLD     		
		 --운영율 FMU_OP_RATE -> FMS_TRANSACTION_V 수정 맹수영 20150919  끝	      
		     , DECODE(NVL(A.D_DAYS,0),0,'-','D-'||TO_CHAR(A.D_DAYS)) AS D_DAY_DISP 
		     --, 'D-'||TO_CHAR(FMP_GETEXCDAYS_FUN(A.NEED_DATE,A.D_DAYS)) AS D_DAY_DISP
		     , 'P' AS MOBILE_GUBUN
		     , SCC_SOPR_AGG_FUN(A.SUBINV_CODE, A.ITEM_CODE, '1') AS MAX_SO_QTY
		     , DECODE(A.CENTER_FLAG, 'VC', 'Y', '') AS VC_YN
		     
		     --[PJT]주문채널통합
		     , B.WIN_ITEM_CD          --바코드
		     , DECODE(A.BOX_QTY, 0, 0, TRUNC(A.PR_QTY/A.BOX_QTY, 0)) AS  PR_BOX_QTY     --박스수량
		     , DECODE(A.BOX_QTY, 0, 0, MOD(A.PR_QTY, A.BOX_QTY))     AS  PR_PC_QTY      --낱개수량
		     , 'N' AS  INPUT_TYPE     --입력형태[P : PASTE(발주내역 그리드 붙여넣기), S : SELECT(상품검색 그리드 더블클릭), N : NOMAL(조회)]
		     , 'N' AS  ITEM_STATUS     --상품상태[E : ERROR, N : NOMAL(정상)]
		     
		     
		     , '' AS WEEK_ITEM_CODE
		     , '' AS LIMIT_ITEM
		     , '' AS LIMIT_REASON
		     , '' AS UNUSE_YN
		     , '' AS VAL_STP_YN
		     , '' AS DANGAWEEK_STATUS
		     , '' AS CONSUM_YN
		     , NVL((SELECT X.NM_KOR FROM HR_PERSONAL X WHERE X.SABUN = A.UPDATE_BY), 
                   (SELECT X.NM_KOR FROM SCC_USERINFO X WHERE X.SABUN = A.UPDATE_BY)) AS UPDATE_BY_NM
		  FROM 
		      (SELECT A.PR_ID, A.PR_NUM, A.APPROVE_NUM
				    , A.ITEM_CODE, A.ITEM_NAME, A.ITEM_SIZE, A.PO_UOM, A.UNIT_PRICE, A.MARGIN_PRICE
				    , A.SALE_PRICE, A.OP_PRICE AS OP_PRICE_S,A.PR_QTY, ROUND(A.SALE_PRICE * A.PR_QTY) AS SALE_AMOUNT
				    , A.LINE_STATUS
				    --LINE_STATUS 변경으로 상태값을 '001'로, DECODE(A.LINE_STATUS,'004','마감전','마감') AS CLS_STATUS
				    --, DECODE(A.LINE_STATUS,'001','마감전','마감') AS CLS_STATUS
				    --, CASE WHEN FMS_PO_LINESTATUS_FUN(A.PR_ID, A.PR_NUM, 'C') IN('DL', 'GC', 'IV') OR A.SO_STATUS IN('005', '007', '008') THEN '마감' ELSE '마감전' END AS CLS_STATUS
				      , CASE WHEN A.LINE_STATUS NOT IN ('001','003','004') THEN '마감' ELSE '마감전' END  AS CLS_STATUS
				    --, DECODE(A.LINE_STATUS,'005','[**발주취소**]')||A.PR_REMARK AS PR_REMARK
				    , A.PR_REMARK
				    --, FMS_PO_LINESTATUS_FUN(A.PR_ID, A.PR_NUM, 'N') AS PO_LINE_STATUS
				    , (SELECT S.CODE_NAME FROM SCC_COMMON_CODE S WHERE S.GROUP_CODE = 'RTN_LINE_STATUS' AND S.CODE = A.LINE_STATUS) AS PO_LINE_STATUS
				    , A.SUBINV_CODE, A.NEED_DATE
				    , A.TAX_CODE, A.CUSTCD, A.CENTER_FLAG
				    , A.CENTER_CODE, B.POINT_FLAG, A.PR_UPJANG
				    , A.RC_UPJANG, A.INVAT_FLAG, A.OUTVAT_FLAG
					  --수량통제 안하는 업장의 경우 소숫점발주가 Y이면 무조건 최소발주량/발주승수량을 무조건 0.1로 세팅하여 조회				  					  	
				  	, DECODE(<#if QTY_CONTROL_YN?has_content> :QTY_CONTROL_YN <#else> '' </#if>||B.POINT_FLAG,'NY',DECODE(B.MIN_ORD_QTY,0,0,0.1),B.MIN_ORD_QTY) AS MIN_ORD_QTY
				  	, B.MAX_ORD_QTY
				  	, DECODE(<#if QTY_CONTROL_YN?has_content> :QTY_CONTROL_YN <#else> '' </#if>||B.POINT_FLAG,'NY',DECODE(B.MULTIPLIER_QTY,0,0,0.1),B.MULTIPLIER_QTY) AS MULTIPLIER_QTY
				    , '0000' AS OTCUSTCD
				    , B.IMG_PATH AS IMAGE_PATH
				    --, 0 AS D_DAYS, 0 AS D_TIMES
				      --디데이날짜와 입고일이 같으면 디타임을 체크하여 넘었으면 디데이 하루 추가
				    , DECODE( SIGN(TO_DATE(<#if NEED_DATE?has_content> :NEED_DATE <#else> '' </#if>,'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE,'YYYYMMDD'),'YYYYMMDD') - NVL(C.D_DAYS,0) )
--6:00
--				            , 0, DECODE(SIGN(DECODE(C.D_TIMES,'',24,0,24,C.D_TIMES) - TO_NUMBER(TO_CHAR(SYSDATE,'HH24'))),1,0,1)
--				            , 0 ) + NVL(C.D_DAYS,0) AS D_DAYS
--				    , DECODE(C.D_TIMES,'',2400,0,2400,C.D_TIMES*100) AS D_TIMES
--5:30				    				    
				            , 0, DECODE(SIGN(DECODE(
				            						(SELECT CASE WHEN Z.SET1 <= <#if NEED_DATE?has_content> :NEED_DATE <#else> '' </#if> AND Z.SET2 >= <#if NEED_DATE?has_content> :NEED_DATE <#else> '' </#if> THEN ATTR01 ELSE ATTR02 END FROM SCC_COMMON_CODE Z WHERE GROUP_CODE = 'SYS_PROPERTY' AND CODE = 'SO_PR_RTN')
				            						,'',24,0,24,
				            									(SELECT CASE WHEN Z.SET1 <= <#if NEED_DATE?has_content> :NEED_DATE <#else> '' </#if> AND Z.SET2 >= <#if NEED_DATE?has_content> :NEED_DATE <#else> '' </#if> THEN ATTR01 ELSE ATTR02 END FROM SCC_COMMON_CODE Z WHERE GROUP_CODE = 'SYS_PROPERTY' AND CODE = 'SO_PR_RTN')
				            									) - TO_NUMBER(TO_CHAR(SYSDATE,'HH24'))),1,0,1)
				            , 0 ) + NVL(C.D_DAYS,0) AS D_DAYS
				    , DECODE(
				    		(SELECT CASE WHEN Z.SET1 <= <#if NEED_DATE?has_content> :NEED_DATE <#else> '' </#if> AND Z.SET2 >= <#if NEED_DATE?has_content> :NEED_DATE <#else> '' </#if> THEN ATTR01 ELSE ATTR02 END FROM SCC_COMMON_CODE Z WHERE GROUP_CODE = 'SYS_PROPERTY' AND CODE = 'SO_PR_RTN')
				    		,'',2400,0,2400,
				    						(SELECT CASE WHEN Z.SET1 <= <#if NEED_DATE?has_content> :NEED_DATE <#else> '' </#if> AND Z.SET2 >= <#if NEED_DATE?has_content> :NEED_DATE <#else> '' </#if> THEN ATTR01 ELSE ATTR02 END FROM SCC_COMMON_CODE Z WHERE GROUP_CODE = 'SYS_PROPERTY' AND CODE = 'SO_PR_RTN')
				    		) AS D_TIMES
				    		
				    , A.DOCU_SOURCE
				    , B.ITEM_CLASS4
				    , B.KEEPING_TYPE
				    , A.APPLY_SD
				    , A.VD_SN
				    , B.ORIGIN_TYPE
				    , A.UPJANG_GRP
				    , A.OP_RATE
				    , TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS APPROVE_TIME
				    , A.CREATE_BY
				    , A.UPDATE_BY
				    , A.T_ORDER
				    , B.KG_CONVERT_RATE
				    , B.UOM_CONVERT_RATE
				    --, ROUND((B.KG_CONVERT_RATE * B.UOM_CONVERT_RATE * A.PR_QTY),2)  AS TOT_WGHT
				    , ROUND((B.KG_CONVERT_RATE * A.PR_QTY),2)  AS TOT_WGHT
				    , A.WMS_INT_ID AS EVENT_ID
				    , NVL(FN_GET_BOX_QTY_FUN(A.ITEM_CODE, (SELECT OPER_ORG_SN_PURC FROM HLDC_PO_CENTER WHERE CENTER_CODE = A.CENTER_CODE), A.VD_SN, A.CENTER_FLAG), 0) AS BOX_QTY --박스입수량
				    , RTN_ORD_TYPE --반환/교환유형코드
				    , '' AS S_NEED_DATE
					, '' AS G_UPJANG					
			     FROM SO_PR_RTN A, HLDC_PO_ITEM_MST B, HLDC_PO_PREORDER_LIST C
			    WHERE A.ITEM_CODE   = B.ITEM_CODE
			      AND A.SUBINV_CODE = <#if SUBINV_CODE?has_content> :SUBINV_CODE <#else> '' </#if>			      
			      AND A.NEED_DATE = <#if NEED_DATE?has_content> :NEED_DATE <#else> '' </#if>
			      AND A.PO_TYPE IN ('51','52') /* 반환 */			      
			      AND A.LINE_STATUS NOT IN ('003','004','005')
			      AND A.CENTER_CODE = C.CENTER_CODE(+)
			      AND A.ITEM_CODE = C.ITEM_CODE(+)
			   ) A
			   , EPROCUSR.ESMMTGL B
		   WHERE A.ITEM_CODE = B.ITEM_CD(+)
		     AND B.SYS_ID      = '100'
		 ORDER BY A.PR_ID, A.PR_NUM 
		]]>
	</statement>
	
	<!-- 반환발주 정상주문일자(so_pr)조회 -->
	<statement name="selectSoPrGetNeedDate" type="select">
		/*+ com.hwfs.fm.fms.dao.returnOrderByCustDAO.selectSoPrGetNeedDate */
		<![CDATA[
		SELECT RC_UPJANG, NEED_DATE, NEED_DATE_DESC
		FROM (
		SELECT A.RC_UPJANG
		     , A.NEED_DATE
		     , TO_CHAR(TO_DATE(A.NEED_DATE,'YYYYMMDD'),'YYYY-MM-DD') AS NEED_DATE_DESC
		  FROM SO_PR A,
		       HLDC_PO_PO B
		 WHERE A.PR_ID = B.PO_ID
		   AND A.PR_NUM = B.PO_NUM
		   AND A.NEED_DATE > TO_CHAR(SYSDATE, 'YYYYMMDD')
		   AND A.NEED_DATE > '20220109' -- 브랜드유통 프로젝트 오픈
		   AND A.PO_TYPE IN ('07', '29', '97') -- 일반주문
		   --AND FMS_PO_LINESTATUS_FUN(A.PR_ID, A.PR_NUM, 'C') IN ('001', '007')
		   AND A.LINE_STATUS NOT IN ('003', '005')
		   AND A.RC_DEPT_ID IN (
		    					SELECT X.CC_CD
		    					  FROM HLDC_SC_DEPT_V X
					  		     WHERE X.BU_CD = '2000'
		      					   AND X.MU_CD = '2004'
		      					   --AND X.TM_CD LIKE 'CI%'
		      					   AND (X.TM_CD LIKE 'CI%' OR X.DEPT_ID IN (SELECT CODE FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'BRAND_UPJANG_POP_ETC'))
								) -- 브랜드유통사업장장
		   AND A.RC_UPJANG = <#if UPJANG?has_content> :UPJANG <#else> '' </#if>
		<#if NEED_DATE?has_content>		   
		   AND A.NEED_DATE =  :NEED_DATE 
		</#if>   
		 --GROUP BY A.RC_UPJANG, A.NEED_DATE
		 --ORDER BY A.NEED_DATE
		 
		 UNION ALL
		 
		 SELECT A.RC_UPJANG
			  , A.NEED_DATE
			  , TO_CHAR(TO_DATE(A.NEED_DATE,'YYYYMMDD'),'YYYY-MM-DD') AS NEED_DATE_DESC
		FROM SO_PR_RTN A
		WHERE A.NEED_DATE > TO_CHAR(SYSDATE, 'YYYYMMDD')
		 AND A.NEED_DATE > '20220109' -- 브랜드유통 프로젝트 오픈
		 AND A.PO_TYPE IN ('52', '51') -- 반환주문
		 AND A.LINE_STATUS IN ('001', '008', '100') -- 신청저장, 주문확정, 발주확정
		 AND A.RC_DEPT_ID IN (
			    					SELECT X.CC_CD
			    					  FROM HLDC_SC_DEPT_V X
						  		     WHERE X.BU_CD = '2000'
			      					   AND X.MU_CD = '2004'
			      					   --AND X.TM_CD LIKE 'CI%'
			      					   AND (X.TM_CD LIKE 'CI%' OR X.DEPT_ID IN (SELECT CODE FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'BRAND_UPJANG_POP_ETC'))
									) -- 브랜드유통사업장장
			   AND A.RC_UPJANG = <#if UPJANG?has_content> :UPJANG <#else> '' </#if>
			<#if NEED_DATE?has_content>		   
			   AND A.NEED_DATE =  :NEED_DATE 
			</#if>   
			 --GROUP BY A.RC_UPJANG, A.NEED_DATE
			 --ORDER BY A.NEED_DATE
		 )
		 GROUP BY RC_UPJANG, NEED_DATE, NEED_DATE_DESC
		 ORDER BY NEED_DATE 
		]]>
	</statement>
	
	<!-- 반환발주 반환가능업장 확인 -->
	<statement name="selectRtnOrderYn" type="select">
		/*+ com.hwfs.fm.fms.dao.returnOrderByCustDAO.selectRtnOrderYn */
		<![CDATA[
		SELECT TO_CHAR(A.UPJANG) AS UPJANG_CODE,
		       A.UPJANGNM_DISP AS UPJANG_NAME,
		       A.UPJANG,
		       A.UPJANGNM_DISP,
		       B.CC_CD,
		       C.CC_NM,
		       B.CUSTCD,
		       D.SAP_CUST_CD,
		       C.TM_CD,
		       C.TM_NM,
		       B.JONGSAUPNO,
		       A.RTN_YN
		FROM   FMS_UPJANG A,
		       ST_UPJANG B,
		       HLDC_SC_DEPT_V C,
		       ST_CUST D
		WHERE  B.UPJANG = A.UPJANG
		AND    C.CC_CD = B.CC_CD
		AND    D.CUSTCD = B.CUSTCD
		AND    A.USE_YN = 'Y'
		AND    B.VIRTURE_UPJANG_YN <> 'Y'
		AND	   C.BU_CD = '2000' 
		AND    C.MU_CD = '2004' 
		--AND    C.TM_CD LIKE 'CI%' -- 브랜드유통사업장 식별
		AND    (C.TM_CD LIKE 'CI%' OR A.DEPT_ID IN ( SELECT INV.CC_CD FROM HLDC_SC_DEPT_V INV WHERE INV.DEPT_ID IN (SELECT CODE FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'BRAND_UPJANG_POP_ETC')) ) -- 브랜드유통사업장 식별
		AND    A.UPJANG = <#if UPJANG?has_content> :UPJANG <#else> '' </#if>
		]]>
	</statement>

	<!-- 반환발주 prNum체크 -->
	<statement name="selectPrNumChk" type="select">
		/*+ com.hwfs.fm.fms.dao.returnOrderByCustDAO.selectPrNumChk */
		<![CDATA[
		SELECT NVL(MAX(PR_NUM), 'N') AS PR_NUM
             , NVL(SUM(CASE WHEN LINE_STATUS IN ('001', '003' ,'004' ,'005') THEN 0
                                                                                  ELSE 1
                        END), 0) AS CNT
		  FROM SO_PR_RTN
		 WHERE NEED_DATE = <#if sNeedDate?has_content> :sNeedDate <#else> '' </#if>
		   AND RC_UPJANG = <#if rcUpjang?has_content> :rcUpjang <#else> '' </#if>
		   AND SUBINV_CODE = <#if subinvCode?has_content> :subinvCode <#else> '' </#if>
		   AND PO_TYPE = (SELECT CASE WHEN USER_TYPE = '외부' THEN '51'
                                      WHEN USER_TYPE = '내부' THEN '52'                                      
                                  END    
                            FROM SCC_USERINFO
                           WHERE SABUN = <#if loginSabun?has_content> :loginSabun <#else> '' </#if>
                          )
		   AND PR_NUM = (SELECT MAX(PR_NUM) 
						   FROM SO_PR_RTN
						  WHERE NEED_DATE =  <#if sNeedDate?has_content> :sNeedDate <#else> '' </#if>
						    AND RC_UPJANG =  <#if rcUpjang?has_content> :rcUpjang <#else> '' </#if>
						    AND SUBINV_CODE =  <#if subinvCode?has_content> :subinvCode <#else> '' </#if>
						    AND PO_TYPE = (SELECT CASE WHEN USER_TYPE = '외부' THEN '51'
				                                       WHEN USER_TYPE = '내부' THEN '52'                                      
				                                   END    
				                             FROM SCC_USERINFO
				                            WHERE SABUN = <#if loginSabun?has_content> :loginSabun <#else> '' </#if>
				                           ) 
						 )                          
		]]>
	</statement>
	
	<!-- 반환발주 prNum채번 -->
	<statement name="selectGetPrNum" type="select">
		/*+ com.hwfs.fm.fms.dao.returnOrderByCustDAO.selectGetPrNum */
		<![CDATA[
		SELECT 'R'||:sNeedDate||'-'||LPAD(SO_PR_RTN_NUM_S.NEXTVAL,5,'0') AS PR_NUM FROM DUAL
		]]>
	</statement>
	
	<!-- 반환발주 prId채번 -->
	<statement name="selectGetPrId" type="select">
		/*+ com.hwfs.fm.fms.dao.returnOrderByCustDAO.selectGetPrId */
		<![CDATA[
		SELECT SO_PR_RTN_S.NEXTVAL AS PR_ID FROM DUAL
		]]>
	</statement>
	
	<!-- 반환발주를 등록 -->
	<statement name="insertReturnOrderByCustInfo" type="insert">
		/*+ com.hwfs.fm.fms.dao.returnOrderByCustDAO.insertReturnOrderByCustInfo */
		<![CDATA[
        INSERT INTO SO_PR_RTN( 
               PR_ID                                                              
             , PR_NUM 
             , PR_DATE 
             , PR_DEPT_ID 
             , PR_UPJANG 
             , PR_SABUN 
             , APPROVER 
             , APPROVE_TIME                      
             , PO_TYPE  
             , DOCU_SOURCE                    
             , CUSTCD 
             , SUBINV_CODE 
             , RC_MU_CD 
             , RC_DEPT_ID 
             , RC_UPJANG 
             , BUDDEPT_ID 
             , CENTER_CODE 
             , ITEM_CODE 
             , ITEM_NAME 
             , ITEM_SIZE 
             , PO_UOM 
             , TAX_CODE 
             , ACCTCD 
             , BUD_CLS 
             , CENTER_FLAG 
             , UNIT_PRICE 
             , MARGIN_PRICE 
             , SALE_PRICE 
             , PR_QTY 
             , PO_QTY 
             , NEED_DATE 
             , INVAT_FLAG 
             , OUTVAT_FLAG 
             , PR_REMARK 
             , LINE_STATUS 
             , CREATE_BY 
             , CREATE_DATE 
             , UPDATE_BY 
             , UPDATE_DATE 
             , APPLY_SD 
             , VD_SN 
             , MOBILE_GUBUN 
             , UPJANG_GRP 
         	 , OP_PRICE 
         	 , OP_RATE 
         	 , T_ORDER
             , RTN_ORD_TYPE					 
          ) VALUES ( 
         	  :prId
         	, <#if prNum?has_content> :prNum <#else> '' </#if>
         	, TO_CHAR(SYSDATE,'YYYYMMDD') 
         	, (SELECT DEPT_ID FROM HLDC_ST_UPJANG WHERE UPJANG = :gUpjang ) 
         	, :gUpjang
         	, :loginSabun
         	, :loginSabun
         	, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')                  
         	, (SELECT CASE WHEN USER_TYPE = '외부' THEN '51'
                           WHEN USER_TYPE = '내부' THEN '52'                           
                       END   
                 FROM SCC_USERINFO
                WHERE SABUN = :loginSabun)          	
         	, (SELECT CASE WHEN USER_TYPE = '외부' THEN '51 반환고객'
                           WHEN USER_TYPE = '내부' THEN '52 반환영업'                           
                       END   
                 FROM SCC_USERINFO
                WHERE SABUN = :loginSabun)          	
         	, <#if custcd?has_content> :custcd <#else> '' </#if>
         	, <#if subinvCode?has_content> :subinvCode <#else> '' </#if>
         	, (SELECT B.MU_CD FROM HLDC_ST_UPJANG A, HLDC_SC_DEPT B WHERE A.DEPT_ID = B.DEPT_ID AND A.UPJANG = <#if rcUpjang?has_content> :rcUpjang <#else> '' </#if>) 
         	, (SELECT DEPT_ID FROM HLDC_ST_UPJANG WHERE UPJANG = <#if rcUpjang?has_content> :rcUpjang <#else> '' </#if>)
         	, <#if rcUpjang?has_content> :rcUpjang <#else> '' </#if>
            , (SELECT BUDCC_CD FROM HLDC_PO_SUBINVENTORY WHERE SUBINV_CODE = <#if subinvCode?has_content> :subinvCode <#else> '' </#if>)
            , <#if centerCode?has_content> :centerCode <#else> '' </#if>
            , <#if itemCode?has_content> :itemCode <#else> '' </#if>
            , <#if itemName?has_content> :itemName <#else> '' </#if>
            , <#if itemSize?has_content> :itemSize <#else> '' </#if>					
            , <#if poUom?has_content> :poUom <#else> '' </#if>
            , <#if taxCode?has_content> :taxCode <#else> '' </#if>
            , (SELECT MATERIAL_ACCTCD FROM HLDC_PO_SUBINVENTORY WHERE SUBINV_CODE = <#if subinvCode?has_content> :subinvCode <#else> '' </#if>)                     
            , (SELECT MATERIAL_ACCTCD FROM HLDC_PO_SUBINVENTORY WHERE SUBINV_CODE = <#if subinvCode?has_content> :subinvCode <#else> '' </#if>) 
            , <#if centerFlag?has_content> :centerFlag <#else> '' </#if>
            , <#if unitPrice?has_content> :unitPrice <#else> '' </#if>
            , <#if unitPrice?has_content> :unitPrice <#else> '' </#if>
            , <#if salePrice?has_content> :salePrice <#else> '' </#if>
            , <#if prQty?has_content> :prQty <#else> '' </#if>
            , <#if prQty?has_content> :prQty <#else> '' </#if>
            , <#if sNeedDate?has_content> :sNeedDate <#else> '' </#if>  /*날짜변경 후 저장하는 케이스가 있음. 그리드에서 가져오면 안됨*/
            , <#if invatFlag?has_content> :invatFlag <#else> '' </#if>
            , <#if outvatFlag?has_content> :outvatFlag <#else> '' </#if>
            , <#if prRemark?has_content> :prRemark <#else> '' </#if>
            , '001'
            , :loginSabun
            , SYSDATE 
            , :loginSabun
            , SYSDATE 
            , <#if applySd?has_content> :applySd <#else> '' </#if>
            , <#if vdSn?has_content> :vdSn <#else> '' </#if>
            , <#if mobileGubun?has_content> :mobileGubun <#else> '' </#if>
            , <#if upjangGrp?has_content> :upjangGrp <#else> '' </#if>
            , <#if opPrice?has_content> :opPrice <#else> '' </#if>
            , <#if opRate?has_content> :opRate <#else> '' </#if>
            , <#if tOrder?has_content> :tOrder <#else> '' </#if>
            , <#if rtnOrdType?has_content> :rtnOrdType <#else> '' </#if>
             )
		]]>
	</statement>	
	
	<!-- 반환발주를 수정 -->
	<statement name="updateReturnOrderByCustInfo" type="update">
		/*+ com.hwfs.fm.fms.dao.returnOrderByCustDAO.updateReturnOrderByCustInfo */
		<![CDATA[
		UPDATE SO_PR_RTN
           SET PR_QTY = <#if prQty?has_content> :prQty <#else> '' </#if>
             , PO_QTY = <#if prQty?has_content> :prQty <#else> '' </#if>
             , PR_REMARK = <#if prRemark?has_content> :prRemark <#else> '' </#if>
             , RTN_ORD_TYPE = <#if rtnOrdType?has_content> :rtnOrdType <#else> '' </#if>            
             , APPROVER = :loginSabun
             , APPROVE_TIME = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
             , UPDATE_BY = :loginSabun
             , UPDATE_DATE = SYSDATE
             , T_ORDER = <#if tOrder?has_content> :tOrder <#else> '' </#if>
         WHERE PR_ID = :prId
		]]>
	</statement>
	
	<!-- 반환발주를 삭제(수정 0처리포함) -->
	<statement name="deleteReturnOrderByCustInfo" type="update">
		/*+ com.hwfs.fm.fms.dao.returnOrderByCustDAO.deleteReturnOrderByCustInfo */
		<![CDATA[
		UPDATE SO_PR_RTN
           SET PR_REMARK = <#if prRemark?has_content> :prRemark <#else> '' </#if>
             , LINE_STATUS = (SELECT CASE WHEN USER_TYPE = '내부' THEN '004' ELSE '003' END
                                FROM SCC_USERINFO
                               WHERE SABUN = :loginSabun)
             , SO_STATUS = (SELECT CASE WHEN USER_TYPE = '내부' THEN '004' ELSE '003' END
                              FROM SCC_USERINFO
                             WHERE SABUN = :loginSabun)             
             , RTN_ORD_TYPE = <#if rtnOrdType?has_content> :rtnOrdType <#else> '' </#if>            
             , APPROVER = :loginSabun
             , APPROVE_TIME = TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')
             , UPDATE_BY = :loginSabun
             , UPDATE_DATE = SYSDATE
             , T_ORDER = <#if tOrder?has_content> :tOrder <#else> '' </#if>
         WHERE PR_ID = :prId
		]]>
	</statement>
		
	<!-- sms info -->
	<statement name="selectReturnOrderByCustSmsInfo" type="select">
		/* com.hwfs.fm.fms.dao.returnOrderByCustDAO.selectReturnOrderByCustSmsInfo */
		<![CDATA[
		SELECT A.PR_ID
		     , A.PR_NUM
		     , A.WMS_INT_SABUN
		     , C.UPJANGNM_DISP                              -- 발주업장명		                                       
		     , TO_CHAR(TO_DATE(A.NEED_DATE, 'YYYYMMDD'),'YYYY-MM-DD') AS NEED_DATE -- 입고예정일
		     , CASE
		           WHEN A.PO_TYPE LIKE '5%' THEN '반환'
		           WHEN A.PO_TYPE LIKE '6%' THEN '교환'
		           WHEN A.PO_TYPE LIKE '7%' THEN '증정'
		           ELSE '기타' END               AS PO_TYPE_NM -- 주문유형
		     , A.ITEM_NAME                                   -- 상품명
		     , SCC_CRYPTO.DEC_FUN(B.HP_NO_ENC) AS HP_NO      -- 고객휴대전화번호
		     , (SELECT SCC_CRYPTO.DEC_FUN(Z.HP_NO_ENC) FROM SCC_USERINFO Z WHERE Z.SABUN = C.PART_SALES_SABUN) AS SALES_HP  -- 영업사원HP
		     , A.RC_UPJANG
		FROM SO_PR_RTN A,
		     SCC_USERINFO B,
		     FMS_UPJANG C
	   WHERE A.PR_SABUN = B.SABUN
		 AND A.RC_UPJANG = C.UPJANG  
		 AND A.PR_NUM = :prNum
		 AND (SELECT COUNT(*) FROM SO_PR_RTN WHERE PR_NUM = :prNum AND WMS_INT_SABUN IS NOT NULL) = 0
		 AND ROWNUM = 1           
		]]>
	</statement>
	
	<!-- 문자발송후 영업사원 사번UPDATE(중복발송방지) -->
	<statement name="updateWmsIntSabunInfo" type="update">
		/*+ com.hwfs.fm.fms.dao.returnOrderByCustDAO.updateWmsIntSabunInfo */
		<![CDATA[
		UPDATE SO_PR_RTN
		   SET WMS_INT_SABUN = (SELECT PART_SALES_SABUN FROM FMS_UPJANG WHERE UPJANG = <#if rcUpjang?has_content> :rcUpjang <#else> '' </#if>)  
		 WHERE PR_ID = <#if prId?has_content> :prId <#else> '' </#if>		
		]]>
	</statement>	
</hqml>
