<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="fm.fmc.orderClaimCntDAO">
	<desc>발주대비클레임건수 HQML Query</desc>

	<!-- 업장별클레임건수 목록1을 조회한다. -->
	<statement name="upjangSearch" type="select">
		/*+ com.hwfs.fm.fmc.dao.OrderClaimCntDAO.upjangSearch */
		<![CDATA[
		SELECT 
		       (SELECT Z.CENTER_NAME FROM VO_CENTER Z WHERE A.CENTER_CODE = Z.CENTER_CODE) AS CENTER_NM	/*센터명*/
		     , A.RC_UPJANG AS UPJANG			/*업장코드*/
		     , B.UPJANGNM						/*업장명*/
		     , DECODE(NVL(B.CUSTCD,0),0,'직영',(SELECT REPLACE(Z.CC_NM,'식재') FROM HLDC_SC_DEPT_V Z WHERE Z.CC_CD = B.CC_CD)) AS GUBUN /*업장구분*/
		     , COUNT(A.RC_UPJANG) AS ORDER_CNT	/*발주건수*/
		     , SUM(A.CLAIM_CNT) AS CLAIM_CNT		/*클레임건수*/
		     , ROUND(((SUM(A.CLAIM_CNT)/COUNT(A.RC_UPJANG))*100),2) AS ORDER_CLAIM_RATE	/*발주대비클레임율*/
		  FROM 
		      (SELECT A.*, (SELECT COUNT(*) FROM PO_CLAIM_LIST D WHERE  A.PO_ID = D.PO_ID  AND A.PO_NUM = D.PO_NUM AND D.PRCS_STATUS = '09') AS CLAIM_CNT		/*클레임건수*/
               FROM HLDC_PO_PO A 
               WHERE A.LINE_STATUS  IN ('DL','GC') 
               <#if schCenter!= "*">  AND A.CENTER_CODE = :schCenter   </#if>
		       <#if schFromDate?has_content>
		       AND A.NEED_DATE BETWEEN :schFromDate AND :schToDate	</#if>
		       ) A
               , ST_UPJANG B
               --, VO_FC_VENDOR C
		 WHERE A.RC_UPJANG = B.UPJANG(+)
		   --AND A.CUSTCD = C.VD_CD(+)
		 GROUP BY A.CENTER_CODE, A.RC_UPJANG, B.UPJANGNM, B.CUSTCD, B.CC_CD
		]]>
	</statement>
	
	<!-- 업체별클레임건수 목록2을 조회한다. -->
	<statement name="custSearch" type="select">
		/*+ com.hwfs.fm.fmc.dao.OrderClaimCntDAO.custSearch */
		<![CDATA[
		SELECT /*+ INDEX_FFS(SYS_C0024828) */
               (SELECT Z.CENTER_NAME FROM VO_CENTER Z WHERE A.CENTER_CODE = Z.CENTER_CODE) AS CNETER_NM	/*센터명*/
             , A.CUSTCD 										/*업체코드*/
             , B.VD_NM AS CUSTNM 						/*업체명*/
             , COUNT(A.RC_UPJANG) AS ORDER_CNT	/*발주건수*/
             , SUM(A.CLAIM_CNT) AS CLAIM_CNT		/*클레임건수*/
             , ROUND(((SUM(A.CLAIM_CNT)/COUNT(A.RC_UPJANG))*100),2) AS ORDER_CLAIM_RATE	/*발주대비클레임율*/
          FROM (SELECT A.*, (SELECT COUNT(*) FROM PO_CLAIM_LIST D WHERE  A.PO_ID = D.PO_ID  AND A.PO_NUM = D.PO_NUM) AS CLAIM_CNT		/*클레임건수*/
               FROM HLDC_PO_PO A 
               WHERE A.LINE_STATUS  IN ('DL','GC') 
               <#if schCenter!= "*">  AND A.CENTER_CODE = :schCenter   </#if>
		       <#if schFromDate?has_content>
		       AND A.NEED_DATE BETWEEN :schFromDate AND :schToDate	</#if>
		       ) A, VO_FC_VENDOR B
         WHERE A.CUSTCD = B.VD_CD(+)
         GROUP BY A.CENTER_CODE, A.CUSTCD, B.VD_NM
		]]>
	</statement>
	
	<!-- 업체별상세클레임건수 목록3을 조회한다. -->
	<statement name="custDetailSearch" type="select">
		/*+ com.hwfs.fm.fmc.dao.OrderClaimCntDAO.custDetailSearch */
		<![CDATA[
		/*MD담당자 테이블 변경으로 조회 막힘... 수정필요*/
		SELECT --/*+ INDEX_FFS(SYS_C0024828) */
               (SELECT Z.CENTER_NAME FROM VO_CENTER Z WHERE A.CENTER_CODE = Z.CENTER_CODE) AS CENTER_NM	/*센터명*/
             , A.CUSTCD 															/*업체코드*/
             , B.VD_NM AS CUSTNM 															/*업체명*/
           --  , D.NM_KOR||'('||B.SABUN||')' AS MD_NM									/*담당MD*/
             --, COUNT(A.RC_UPJANG) AS ORDER_CNT										/*발주건수*/
             , MAX(K.CNT) AS ORDER_CNT
             --, (SELECT COUNT(*) FROM HLDC_PO_PO WHERE CUSTCD = A.CUSTCD AND NEED_DATE BETWEEN :schFromDate AND :schToDate  AND LINE_STATUS IN ('PC','DL','GC') ) AS  ORDER_CNT										/*발주건수*/
             , COUNT(C.PO_ID) AS CLAIM_CNT											/*클레임건수*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0501', 1, 0)) AS C0501   		/*규격상이*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0502', 1, 0)) AS C0502       	/*유통기한 초과*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0503', 1, 0)) AS C0503   		/*유통기한 미표시*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0504' ,1, 0)) AS C0504   		/*유통기한 임박*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0505', 1, 0)) AS C0505  		/*이물질*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0506', 1, 0)) AS C0506       	/*중(수)량부족*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0507', 1, 0)) AS C0507       	/*품질불량*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0508', 1, 0)) AS C0508       	/*미입고*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0509', 1, 0)) AS C0509       	/*주문신청 오류*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0510', 1, 0)) AS C0510       	/*서류(라벨)미비*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0511', 1, 0)) AS C0511       	/*파손*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0512', 1, 0)) AS C0512       	/*냉해*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0513', 1, 0)) AS C0513       	/*오배송*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0514', 1, 0)) AS C0514       	/*검수오류*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0515', 1, 0)) AS C0515       	/*분실*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0516', 1, 0)) AS C0516       	/*하역오류*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0517', 1, 0)) AS C0517       	/*온도불량*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0518', 1, 0)) AS C0518       	/*기타*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0519', 1, 0)) AS C0519       	/*업체주의요청(식재사업부 전용)*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0520', 1, 0)) AS C0520       	/*배송지연*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0521', 1, 0)) AS C0521       	/*보관방법(적재)*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0522', 1, 0)) AS C0522       	/*전산오류*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0523', 1, 0)) AS C0523       	/*전산문의*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0524', 1, 0)) AS C0524       	/*샘플입고*/
          FROM HLDC_PO_PO A, VO_FC_VENDOR B
             , (SELECT Z.PO_ID,Z.PO_NUM, Z.NEED_DATE, Z.CT_CLAIM_KIND
                  FROM PO_CLAIM_LIST Z
                 WHERE 1=1
                   AND Z.NEED_DATE BETWEEN :schFromDate AND :schToDate   
               )C
             , ( SELECT K.CENTER_CODE
                      , K.CUSTCD
                      , COUNT(*) CNT
                   FROM HLDC_PO_PO K
                  WHERE 1 = 1
                    AND K.NEED_DATE BETWEEN :schFromDate AND :schToDate
                    AND K.LINE_STATUS IN ('DL','GC')
                  GROUP BY K.CENTER_CODE , K.CUSTCD ) K
             --, HR_PERSONAL D
         WHERE A.CUSTCD = B.VD_CD(+)
           AND A.PO_ID = C.PO_ID(+)
           AND A.PO_NUM = C.PO_NUM(+)
           AND A.CUSTCD = K.CUSTCD(+)
           AND A.CENTER_CODE = K.CENTER_CODE(+)
           --AND B.SABUN = D.SABUN
           AND A.LINE_STATUS IN ('DL','GC')
           <#if schCenter != "*" > AND   A.CENTER_CODE = :schCenter       </#if>
           AND A.NEED_DATE BETWEEN :schFromDate AND :schToDate    
         <#if chkCenter == 'true'>
           AND A.CENTER_FLAG = 'Y'	/*센터경유 클레임 확인 선택시*/
         </#if>
         GROUP BY A.CENTER_CODE, A.CUSTCD , B.VD_NM --, D.NM_KOR||'('||B.SABUN||')'
         <#if chkClaim == 'true'>
        HAVING COUNT(C.PO_ID) > 0	/*클레임 발주건만 출력 선택시*/
         </#if>

		]]>
	</statement>
	
	<!-- 업체별상세클레임건수 목록3을 조회한다._개정 클래임유형-->
	<statement name="custDetailSearch_rvn" type="select">
		/*+ com.hwfs.fm.fmc.dao.OrderClaimCntDAO.custDetailSearch_rvn */
		<![CDATA[
		/*MD담당자 테이블 변경으로 조회 막힘... 수정필요*/
		SELECT --/*+ INDEX_FFS(SYS_C0024828) */
               (SELECT Z.CENTER_NAME FROM VO_CENTER Z WHERE A.CENTER_CODE = Z.CENTER_CODE) AS CENTER_NM	/*센터명*/
             , A.CUSTCD 															/*업체코드*/
             , B.VD_NM AS CUSTNM 															/*업체명*/
           --  , D.NM_KOR||'('||B.SABUN||')' AS MD_NM									/*담당MD*/
             --, COUNT(A.RC_UPJANG) AS ORDER_CNT										/*발주건수*/
             , MAX(K.CNT) AS ORDER_CNT
             --, (SELECT COUNT(*) FROM HLDC_PO_PO WHERE CUSTCD = A.CUSTCD AND NEED_DATE BETWEEN :schFromDate AND :schToDate  AND LINE_STATUS IN ('PC','DL','GC') ) AS  ORDER_CNT										/*발주건수*/
             , COUNT(C.PO_ID) AS CLAIM_CNT											/*클레임건수*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0551', 1, 0)) AS C0551   		/*미입고-업체*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0552', 1, 0)) AS C0552       	/*미입고-물류*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0553', 1, 0)) AS C0553   		/*이물질-1등급*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0554' ,1, 0)) AS C0554   		/*이물질-2등급*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0555', 1, 0)) AS C0555  		/*이물질-3등급*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0556', 1, 0)) AS C0556       	/*이물질-4등급*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0557', 1, 0)) AS C0557       	/*유통기한-초과*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0558', 1, 0)) AS C0558       	/*유통기함-임박*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0559', 1, 0)) AS C0559       	/*유통기한-미표시*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0560', 1, 0)) AS C0560       	/*품질-이취*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0561', 1, 0)) AS C0561       	/*품질-맛*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0562', 1, 0)) AS C0562       	/*품질-변색*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0563', 1, 0)) AS C0563       	/*품질-식감*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0564', 1, 0)) AS C0564       	/*품질-숙성도*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0565', 1, 0)) AS C0565       	/*품질-지방함량*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0566', 1, 0)) AS C0566       	/*품질-계절요인*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0567', 1, 0)) AS C0567       	/*품질-변질*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0568', 1, 0)) AS C0568       	/*품질-냉해*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0569', 1, 0)) AS C0569       	/*품질-파손*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0570', 1, 0)) AS C0570       	/*규격-수(중)량부족*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0571', 1, 0)) AS C0571       	/*규격-타상품입고*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0572', 1, 0)) AS C0572       	/*규격-크기/중량*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0573', 1, 0)) AS C0573       	/*자재정보-이미지*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0574', 1, 0)) AS C0574       	/*자재정보-규격*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0575', 1, 0)) AS C0575       	/*자재정보-보관유형*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0576', 1, 0)) AS C0576       	/*자재정보-마감일*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0577', 1, 0)) AS C0577       	/*배송-지연*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0578', 1, 0)) AS C0578       	/*배송-오배송*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0579', 1, 0)) AS C0579       	/*배송-보관방법(적재)*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0580', 1, 0)) AS C0580       	/*배송-분실*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0581', 1, 0)) AS C0581       	/*배송-탑차온도불량*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0582', 1, 0)) AS C0582       	/*배송-파손(박스입고)*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0583', 1, 0)) AS C0583       	/*배송-요청사항미준수*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0584', 1, 0)) AS C0584       	/*배송-서류미입*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0585', 1, 0)) AS C0585       	/*배송-상품라벨훼손*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0586', 1, 0)) AS C0586       	/*배송-온도기록지미입*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0587', 1, 0)) AS C0587       	/*배송-거래명세서미입*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0588', 1, 0)) AS C0588       	/*고객사-매출처변경*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0589', 1, 0)) AS C0589       	/*고객사-주문착오*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0590', 1, 0)) AS C0590       	/*고객사-검수오류*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0591', 1, 0)) AS C0591       	/*실중량조정*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0592', 1, 0)) AS C0592       	/*구매단가변경*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0593', 1, 0)) AS C0593       	/*샘플지원입고*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0594', 1, 0)) AS C0594       	/*전산오류*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0595', 1, 0)) AS C0595       	/*complaints*/
          FROM HLDC_PO_PO A, VO_FC_VENDOR B
             , (SELECT Z.PO_ID,Z.PO_NUM, Z.NEED_DATE, Z.CT_CLAIM_KIND
                  FROM PO_CLAIM_LIST Z
                 WHERE 1=1
                   AND Z.NEED_DATE BETWEEN :schFromDate AND :schToDate   
               )C
             , ( SELECT K.CENTER_CODE
                      , K.CUSTCD
                      , COUNT(*) CNT
                   FROM HLDC_PO_PO K
                  WHERE 1 = 1
                    AND K.NEED_DATE BETWEEN :schFromDate AND :schToDate
                    AND K.LINE_STATUS IN ('DL','GC')
                  GROUP BY K.CENTER_CODE , K.CUSTCD ) K
             --, HR_PERSONAL D
         WHERE A.CUSTCD = B.VD_CD(+)
           AND A.PO_ID = C.PO_ID(+)
           AND A.PO_NUM = C.PO_NUM(+)
           AND A.CUSTCD = K.CUSTCD(+)
           AND A.CENTER_CODE = K.CENTER_CODE(+)
           --AND B.SABUN = D.SABUN
           AND A.LINE_STATUS IN ('DL','GC')
           <#if schCenter != "*" > AND   A.CENTER_CODE = :schCenter       </#if>
           AND A.NEED_DATE BETWEEN :schFromDate AND :schToDate    
         <#if chkCenter == 'true'>
           AND A.CENTER_FLAG = 'Y'	/*센터경유 클레임 확인 선택시*/
         </#if>
         GROUP BY A.CENTER_CODE, A.CUSTCD , B.VD_NM --, D.NM_KOR||'('||B.SABUN||')'
         <#if chkClaim == 'true'>
        HAVING COUNT(C.PO_ID) > 0	/*클레임 발주건만 출력 선택시*/
         </#if>

		]]>
	</statement>
	
	<!-- 원청업체별클레임건수 목록4을 조회한다. -->
	<statement name="subCustSearch" type="select">
		/*+ com.hwfs.fm.fmc.dao.OrderClaimCntDAO.subCustSearch */
		<![CDATA[
		SELECT --/*+ INDEX_FFS(SYS_C0024828) */                                                               
               (SELECT Z.CENTER_NAME FROM VO_CENTER Z WHERE A.CENTER_CODE = Z.CENTER_CODE) AS CENTER_NM	/*센터*/
             , A.CUSTCD 															/*업체코드*/                
             , B.VD_NM 	CUSTNM														/*업체명*/                 
             --, D.NM_KOR||'('||B.SABUN||')' AS MD_NM									/*담당MD*/                
             --, COUNT(A.RC_UPJANG) AS ORDER_CNT										/*발주건수*/
             , MAX(K.CNT) AS ORDER_CNT
             --, (SELECT COUNT(*) FROM HLDC_PO_PO WHERE CUSTCD = A.CUSTCD AND NEED_DATE BETWEEN :schFromDate AND :schToDate  AND LINE_STATUS IN ('PC','DL','GC') ) AS  ORDER_CNT										/*발주건수*/                
             , COUNT(C.PO_ID) AS CLAIM_CNT											/*클레임건수*/               
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0501', 1, 0)) AS C0501   		/*규격상이*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0502', 1, 0)) AS C0502       	/*유통기한 초과*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0503', 1, 0)) AS C0503   		/*유통기한 미표시*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0504' ,1, 0)) AS C0504   		/*유통기한 임박*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0505', 1, 0)) AS C0505  		/*이물질*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0506', 1, 0)) AS C0506       	/*중(수)량부족*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0507', 1, 0)) AS C0507       	/*품질불량*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0508', 1, 0)) AS C0508       	/*미입고*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0509', 1, 0)) AS C0509       	/*주문신청 오류*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0510', 1, 0)) AS C0510       	/*서류(라벨)미비*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0511', 1, 0)) AS C0511       	/*파손*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0512', 1, 0)) AS C0512       	/*냉해*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0513', 1, 0)) AS C0513       	/*오배송*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0514', 1, 0)) AS C0514       	/*검수오류*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0515', 1, 0)) AS C0515       	/*분실*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0516', 1, 0)) AS C0516       	/*하역오류*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0517', 1, 0)) AS C0517       	/*온도불량*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0518', 1, 0)) AS C0518       	/*기타*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0519', 1, 0)) AS C0519       	/*업체주의요청(식재사업부 전용)*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0520', 1, 0)) AS C0520       	/*배송지연*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0521', 1, 0)) AS C0521       	/*보관방법(적재)*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0522', 1, 0)) AS C0522       	/*전산오류*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0523', 1, 0)) AS C0523       	/*전산문의*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0524', 1, 0)) AS C0524       	/*샘플입고*/
          FROM (SELECT Z.PO_ID,Z.PO_NUM, Z.CENTER_CODE, Z.RC_UPJANG, Z.CENTER_FLAG
                     ,Z.CUSTCD 
                     --, PO_SOURCECUSTCD_FUN(Z.CUSTCD, Z.ITEM_CODE, Z.NEED_DATE) AS CUSTCD
                  FROM HLDC_PO_PO Z
                 WHERE Z.LINE_STATUS IN ('DL','GC')
                   <#if schCenter!= "*">  AND Z.CENTER_CODE = :schCenter   </#if>
                   AND Z.NEED_DATE BETWEEN :schFromDate AND :schToDate
               ) A, VO_FC_VENDOR B
             , (SELECT Z.PO_ID,Z.PO_NUM, Z.NEED_DATE, Z.CT_CLAIM_KIND
                  FROM PO_CLAIM_LIST Z
                 WHERE 1=1
                   AND Z.NEED_DATE BETWEEN :schFromDate AND :schToDate )C
             , ( SELECT K.CENTER_CODE
                      , K.CUSTCD
                      , COUNT(*) CNT
                   FROM HLDC_PO_PO K
                   WHERE 1 = 1
                     AND K.NEED_DATE BETWEEN :schFromDate AND :schToDate
                     AND K.LINE_STATUS IN ('DL','GC')
                   GROUP BY K.CENTER_CODE , K.CUSTCD ) K                   
             --, HR_PERSONAL D
         WHERE A.CUSTCD = B.VD_CD(+)
           AND A.PO_ID = C.PO_ID(+)
           AND A.PO_NUM = C.PO_NUM(+)
           AND A.CUSTCD = K.CUSTCD(+)
           AND A.CENTER_CODE = K.CENTER_CODE(+)
           --AND B.SABUN = D.SABUN
         <#if chkCenter == 'true'>
           AND A.CENTER_FLAG = 'Y'	/*센터경유 클레임 확인 선택시*/
         </#if>
         GROUP BY A.CENTER_CODE, A.CUSTCD, B.VD_NM --, D.NM_KOR||'('||B.SABUN||')'
         <#if chkClaim == 'true'>
        HAVING COUNT(C.PO_ID) > 0	/*클레임 발주건만 출력 선택시*/
         </#if>
		]]>
	</statement>
	
	<!-- 원청업체별클레임건수 목록4을 조회한다._개정 클래임유형 -->
	<statement name="subCustSearch_rvn" type="select">
		/*+ com.hwfs.fm.fmc.dao.OrderClaimCntDAO.subCustSearch_rvn */
		<![CDATA[
		SELECT --/*+ INDEX_FFS(SYS_C0024828) */                                                               
               (SELECT Z.CENTER_NAME FROM VO_CENTER Z WHERE A.CENTER_CODE = Z.CENTER_CODE) AS CENTER_NM	/*센터*/
             , A.CUSTCD 															/*업체코드*/                
             , B.VD_NM 	CUSTNM														/*업체명*/                 
             --, D.NM_KOR||'('||B.SABUN||')' AS MD_NM									/*담당MD*/                
             --, COUNT(A.RC_UPJANG) AS ORDER_CNT										/*발주건수*/
             , MAX(K.CNT) AS ORDER_CNT
             --, (SELECT COUNT(*) FROM HLDC_PO_PO WHERE CUSTCD = A.CUSTCD AND NEED_DATE BETWEEN :schFromDate AND :schToDate  AND LINE_STATUS IN ('PC','DL','GC') ) AS  ORDER_CNT										/*발주건수*/                
             , COUNT(C.PO_ID) AS CLAIM_CNT											/*클레임건수*/               
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0551', 1, 0)) AS C0551   		/*미입고-업체*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0552', 1, 0)) AS C0552       	/*미입고-물류*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0553', 1, 0)) AS C0553   		/*이물질-1등급*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0554' ,1, 0)) AS C0554   		/*이물질-2등급*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0555', 1, 0)) AS C0555  		/*이물질-3등급*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0556', 1, 0)) AS C0556       	/*이물질-4등급*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0557', 1, 0)) AS C0557       	/*유통기한-초과*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0558', 1, 0)) AS C0558       	/*유통기함-임박*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0559', 1, 0)) AS C0559       	/*유통기한-미표시*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0560', 1, 0)) AS C0560       	/*품질-이취*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0561', 1, 0)) AS C0561       	/*품질-맛*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0562', 1, 0)) AS C0562       	/*품질-변색*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0563', 1, 0)) AS C0563       	/*품질-식감*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0564', 1, 0)) AS C0564       	/*품질-숙성도*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0565', 1, 0)) AS C0565       	/*품질-지방함량*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0566', 1, 0)) AS C0566       	/*품질-계절요인*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0567', 1, 0)) AS C0567       	/*품질-변질*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0568', 1, 0)) AS C0568       	/*품질-냉해*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0569', 1, 0)) AS C0569       	/*품질-파손*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0570', 1, 0)) AS C0570       	/*규격-수(중)량부족*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0571', 1, 0)) AS C0571       	/*규격-타상품입고*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0572', 1, 0)) AS C0572       	/*규격-크기/중량*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0573', 1, 0)) AS C0573       	/*자재정보-이미지*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0574', 1, 0)) AS C0574       	/*자재정보-규격*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0575', 1, 0)) AS C0575       	/*자재정보-보관유형*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0576', 1, 0)) AS C0576       	/*자재정보-마감일*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0577', 1, 0)) AS C0577       	/*배송-지연*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0578', 1, 0)) AS C0578       	/*배송-오배송*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0579', 1, 0)) AS C0579       	/*배송-보관방법(적재)*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0580', 1, 0)) AS C0580       	/*배송-분실*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0581', 1, 0)) AS C0581       	/*배송-탑차온도불량*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0582', 1, 0)) AS C0582       	/*배송-파손(박스입고)*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0583', 1, 0)) AS C0583       	/*배송-요청사항미준수*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0584', 1, 0)) AS C0584       	/*배송-서류미입*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0585', 1, 0)) AS C0585       	/*배송-상품라벨훼손*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0586', 1, 0)) AS C0586       	/*배송-온도기록지미입*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0587', 1, 0)) AS C0587       	/*배송-거래명세서미입*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0588', 1, 0)) AS C0588       	/*고객사-매출처변경*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0589', 1, 0)) AS C0589       	/*고객사-주문착오*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0590', 1, 0)) AS C0590       	/*고객사-검수오류*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0591', 1, 0)) AS C0591       	/*실중량조정*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0592', 1, 0)) AS C0592       	/*구매단가변경*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0593', 1, 0)) AS C0593       	/*샘플지원입고*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0594', 1, 0)) AS C0594       	/*전산오류*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0595', 1, 0)) AS C0595       	/*complaints*/
          FROM (SELECT Z.PO_ID,Z.PO_NUM, Z.CENTER_CODE, Z.RC_UPJANG, Z.CENTER_FLAG
                     ,Z.CUSTCD 
                     --, PO_SOURCECUSTCD_FUN(Z.CUSTCD, Z.ITEM_CODE, Z.NEED_DATE) AS CUSTCD
                  FROM HLDC_PO_PO Z
                 WHERE Z.LINE_STATUS IN ('DL','GC')
                   <#if schCenter!= "*">  AND Z.CENTER_CODE = :schCenter   </#if>
                   AND Z.NEED_DATE BETWEEN :schFromDate AND :schToDate
               ) A, VO_FC_VENDOR B
             , (SELECT Z.PO_ID,Z.PO_NUM, Z.NEED_DATE, Z.CT_CLAIM_KIND
                  FROM PO_CLAIM_LIST Z
                 WHERE 1=1
                   AND Z.NEED_DATE BETWEEN :schFromDate AND :schToDate )C
             , ( SELECT K.CENTER_CODE
                      , K.CUSTCD
                      , COUNT(*) CNT
                   FROM HLDC_PO_PO K
                   WHERE 1 = 1
                     AND K.NEED_DATE BETWEEN :schFromDate AND :schToDate
                     AND K.LINE_STATUS IN ('DL','GC')
                   GROUP BY K.CENTER_CODE , K.CUSTCD ) K                   
             --, HR_PERSONAL D
         WHERE A.CUSTCD = B.VD_CD(+)
           AND A.PO_ID = C.PO_ID(+)
           AND A.PO_NUM = C.PO_NUM(+)
           AND A.CUSTCD = K.CUSTCD(+)
           AND A.CENTER_CODE = K.CENTER_CODE(+)
           --AND B.SABUN = D.SABUN
         <#if chkCenter == 'true'>
           AND A.CENTER_FLAG = 'Y'	/*센터경유 클레임 확인 선택시*/
         </#if>
         GROUP BY A.CENTER_CODE, A.CUSTCD, B.VD_NM --, D.NM_KOR||'('||B.SABUN||')'
         <#if chkClaim == 'true'>
        HAVING COUNT(C.PO_ID) > 0	/*클레임 발주건만 출력 선택시*/
         </#if>
		]]>
	</statement>
	
	<!-- 자재별클레임건수 목록5을 조회한다. -->
	<statement name="itemSearch" type="select">
		/*+ com.hwfs.fm.fmc.dao.OrderClaimCntDAO.itemSearch */
		<![CDATA[
		SELECT --/*+ INDEX_FFS(SYS_C0024828) */
               (SELECT Z.CENTER_NAME FROM VO_CENTER Z WHERE A.CENTER_CODE = Z.CENTER_CODE) AS CENTER_NM	/*센터*/
             , A.CUSTCD 															/*업체코드*/                
             , B.VD_NM 	CUSTNM														/*업체명*/     
             ,  A.ITEM_CODE 															/*자재코드*/
             , E.ITEM_NAME															/*자재명*/
             -- , COUNT(A.RC_UPJANG) AS ORDER_CNT										/*발주건수*/
             , MAX(K.CNT) AS ORDER_CNT
              --, (SELECT COUNT(*) FROM HLDC_PO_PO WHERE ITEM_CODE = A.ITEM_CODE AND NEED_DATE BETWEEN :schFromDate AND :schToDate  AND LINE_STATUS IN ('PC','DL','GC') ) AS  ORDER_CNT										/*발주건수*/          
              , COUNT(C.PO_ID) AS CLAIM_CNT											/*클레임건수*/         
              , SUM(DECODE(C.CT_CLAIM_KIND, 'C0501', 1, 0)) AS C0501   		/*규격상이*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0502', 1, 0)) AS C0502       	/*유통기한 초과*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0503', 1, 0)) AS C0503   		/*유통기한 미표시*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0504' ,1, 0)) AS C0504   		/*유통기한 임박*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0505', 1, 0)) AS C0505  		/*이물질*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0506', 1, 0)) AS C0506       	/*중(수)량부족*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0507', 1, 0)) AS C0507       	/*품질불량*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0508', 1, 0)) AS C0508       	/*미입고*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0509', 1, 0)) AS C0509       	/*주문신청 오류*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0510', 1, 0)) AS C0510       	/*서류(라벨)미비*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0511', 1, 0)) AS C0511       	/*파손*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0512', 1, 0)) AS C0512       	/*냉해*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0513', 1, 0)) AS C0513       	/*오배송*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0514', 1, 0)) AS C0514       	/*검수오류*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0515', 1, 0)) AS C0515       	/*분실*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0516', 1, 0)) AS C0516       	/*하역오류*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0517', 1, 0)) AS C0517       	/*온도불량*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0518', 1, 0)) AS C0518       	/*기타*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0519', 1, 0)) AS C0519       	/*업체주의요청(식재사업부 전용)*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0520', 1, 0)) AS C0520       	/*배송지연*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0521', 1, 0)) AS C0521       	/*보관방법(적재)*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0522', 1, 0)) AS C0522       	/*전산오류*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0523', 1, 0)) AS C0523       	/*전산문의*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0524', 1, 0)) AS C0524       	/*샘플입고*/
          FROM HLDC_PO_PO A
             , VO_FC_VENDOR B
             , (SELECT Z.PO_ID,Z.PO_NUM, Z.NEED_DATE, Z.CT_CLAIM_KIND
                  FROM PO_CLAIM_LIST Z
                 WHERE 1=1
                   AND Z.NEED_DATE BETWEEN :schFromDate AND :schToDate    -- 검색조건
               )C
             , ( SELECT K.CENTER_CODE, K.CUSTCD , K.ITEM_CODE, COUNT(*) CNT
                   FROM HLDC_PO_PO K
                  WHERE 1 = 1
                    AND K.NEED_DATE BETWEEN :schFromDate AND :schToDate
                    AND K.LINE_STATUS IN ('DL','GC')
                  GROUP BY K.CENTER_CODE , K.CUSTCD, K.ITEM_CODE) K      
             , HLDC_PO_ITEM_MST E
         WHERE 1=1
           AND A.CUSTCD = B.VD_CD(+)
           AND A.PO_ID = C.PO_ID(+)
           AND A.PO_NUM = C.PO_NUM(+)
           AND A.ITEM_CODE = K.ITEM_CODE(+)
           AND A.CUSTCD = K.CUSTCD(+)
           AND A.CENTER_CODE = K.CENTER_CODE(+)
           AND A.LINE_STATUS IN ('DL','GC')
           <#if schCenter!= "*">  AND A.CENTER_CODE = :schCenter   </#if>
           AND A.NEED_DATE BETWEEN :schFromDate AND :schToDate    -- 검색조건
           AND A.ITEM_CODE = E.ITEM_CODE
         GROUP BY A.CENTER_CODE, A.CUSTCD, B.VD_NM, A.ITEM_CODE, E.ITEM_NAME
--        HAVING COUNT(C.PO_ID) > 0
		]]>
	</statement>
	
	<!-- 자재별클레임건수 목록5을 조회한다._개정 클래임유형-->
	<statement name="itemSearch_rvn" type="select">
		/*+ com.hwfs.fm.fmc.dao.OrderClaimCntDAO.itemSearch_rvn */
		<![CDATA[
		SELECT --/*+ INDEX_FFS(SYS_C0024828) */
               (SELECT Z.CENTER_NAME FROM VO_CENTER Z WHERE A.CENTER_CODE = Z.CENTER_CODE) AS CENTER_NM	/*센터*/
             , A.CUSTCD 															/*업체코드*/                
             , B.VD_NM 	CUSTNM														/*업체명*/     
             ,  A.ITEM_CODE 															/*자재코드*/
             , E.ITEM_NAME															/*자재명*/
             -- , COUNT(A.RC_UPJANG) AS ORDER_CNT										/*발주건수*/
             , MAX(K.CNT) AS ORDER_CNT
              --, (SELECT COUNT(*) FROM HLDC_PO_PO WHERE ITEM_CODE = A.ITEM_CODE AND NEED_DATE BETWEEN :schFromDate AND :schToDate  AND LINE_STATUS IN ('PC','DL','GC') ) AS  ORDER_CNT										/*발주건수*/          
              , COUNT(C.PO_ID) AS CLAIM_CNT											/*클레임건수*/         
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0551', 1, 0)) AS C0551   		/*미입고-업체*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0552', 1, 0)) AS C0552       	/*미입고-물류*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0553', 1, 0)) AS C0553   		/*이물질-1등급*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0554' ,1, 0)) AS C0554   		/*이물질-2등급*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0555', 1, 0)) AS C0555  		/*이물질-3등급*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0556', 1, 0)) AS C0556       	/*이물질-4등급*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0557', 1, 0)) AS C0557       	/*유통기한-초과*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0558', 1, 0)) AS C0558       	/*유통기함-임박*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0559', 1, 0)) AS C0559       	/*유통기한-미표시*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0560', 1, 0)) AS C0560       	/*품질-이취*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0561', 1, 0)) AS C0561       	/*품질-맛*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0562', 1, 0)) AS C0562       	/*품질-변색*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0563', 1, 0)) AS C0563       	/*품질-식감*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0564', 1, 0)) AS C0564       	/*품질-숙성도*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0565', 1, 0)) AS C0565       	/*품질-지방함량*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0566', 1, 0)) AS C0566       	/*품질-계절요인*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0567', 1, 0)) AS C0567       	/*품질-변질*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0568', 1, 0)) AS C0568       	/*품질-냉해*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0569', 1, 0)) AS C0569       	/*품질-파손*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0570', 1, 0)) AS C0570       	/*규격-수(중)량부족*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0571', 1, 0)) AS C0571       	/*규격-타상품입고*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0572', 1, 0)) AS C0572       	/*규격-크기/중량*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0573', 1, 0)) AS C0573       	/*자재정보-이미지*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0574', 1, 0)) AS C0574       	/*자재정보-규격*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0575', 1, 0)) AS C0575       	/*자재정보-보관유형*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0576', 1, 0)) AS C0576       	/*자재정보-마감일*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0577', 1, 0)) AS C0577       	/*배송-지연*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0578', 1, 0)) AS C0578       	/*배송-오배송*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0579', 1, 0)) AS C0579       	/*배송-보관방법(적재)*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0580', 1, 0)) AS C0580       	/*배송-분실*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0581', 1, 0)) AS C0581       	/*배송-탑차온도불량*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0582', 1, 0)) AS C0582       	/*배송-파손(박스입고)*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0583', 1, 0)) AS C0583       	/*배송-요청사항미준수*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0584', 1, 0)) AS C0584       	/*배송-서류미입*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0585', 1, 0)) AS C0585       	/*배송-상품라벨훼손*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0586', 1, 0)) AS C0586       	/*배송-온도기록지미입*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0587', 1, 0)) AS C0587       	/*배송-거래명세서미입*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0588', 1, 0)) AS C0588       	/*고객사-매출처변경*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0589', 1, 0)) AS C0589       	/*고객사-주문착오*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0590', 1, 0)) AS C0590       	/*고객사-검수오류*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0591', 1, 0)) AS C0591       	/*실중량조정*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0592', 1, 0)) AS C0592       	/*구매단가변경*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0593', 1, 0)) AS C0593       	/*샘플지원입고*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0594', 1, 0)) AS C0594       	/*전산오류*/
             , SUM(DECODE(C.CT_CLAIM_KIND, 'C0595', 1, 0)) AS C0595       	/*complaints*/
          FROM HLDC_PO_PO A
             , VO_FC_VENDOR B
             , (SELECT Z.PO_ID,Z.PO_NUM, Z.NEED_DATE, Z.CT_CLAIM_KIND
                  FROM PO_CLAIM_LIST Z
                 WHERE 1=1
                   AND Z.NEED_DATE BETWEEN :schFromDate AND :schToDate    -- 검색조건
               )C
             , ( SELECT K.CENTER_CODE, K.CUSTCD , K.ITEM_CODE, COUNT(*) CNT
                   FROM HLDC_PO_PO K
                  WHERE 1 = 1
                    AND K.NEED_DATE BETWEEN :schFromDate AND :schToDate
                    AND K.LINE_STATUS IN ('DL','GC')
                  GROUP BY K.CENTER_CODE , K.CUSTCD, K.ITEM_CODE) K      
             , HLDC_PO_ITEM_MST E
         WHERE 1=1
           AND A.CUSTCD = B.VD_CD(+)
           AND A.PO_ID = C.PO_ID(+)
           AND A.PO_NUM = C.PO_NUM(+)
           AND A.ITEM_CODE = K.ITEM_CODE(+)
           AND A.CUSTCD = K.CUSTCD(+)
           AND A.CENTER_CODE = K.CENTER_CODE(+)
           AND A.LINE_STATUS IN ('DL','GC')
           <#if schCenter!= "*">  AND A.CENTER_CODE = :schCenter   </#if>
           AND A.NEED_DATE BETWEEN :schFromDate AND :schToDate    -- 검색조건
           AND A.ITEM_CODE = E.ITEM_CODE
         GROUP BY A.CENTER_CODE, A.CUSTCD, B.VD_NM, A.ITEM_CODE, E.ITEM_NAME
--        HAVING COUNT(C.PO_ID) > 0
		]]>
	</statement>
	
	
	<!-- 유형별claim을 조회한다. -->
	<statement name="chartSearch" type="select">
		/*+ com.hwfs.fm.fmc.dao.OrderClaimCntDAO.chartSearch */
		<![CDATA[
		 	SELECT 
				(SELECT C.SET2 FROM  SCC_COMMON_CODE C WHERE C.GROUP_CODE = 'C05' AND C.CODE = A.COMP_CLAIM_TYP) AS CLS1_CD,  
				(SELECT C.ATTR02 FROM  SCC_COMMON_CODE C WHERE C.GROUP_CODE = 'C05'AND C.CODE = A.COMP_CLAIM_TYP) AS CLS1_NM,
				(SELECT C.SET3 FROM  SCC_COMMON_CODE C WHERE C.GROUP_CODE = 'C05' AND C.CODE = A.COMP_CLAIM_TYP) AS CLS2_CD,
				(SELECT C.ATTR03 FROM  SCC_COMMON_CODE C WHERE C.GROUP_CODE = 'C05' AND C.CODE = A.COMP_CLAIM_TYP) AS CLS2_NM, 
				(SELECT C.CODE_NAME FROM  SCC_COMMON_CODE C WHERE C.GROUP_CODE = 'C05' AND C.CODE = A.COMP_CLAIM_TYP) AS CLS2_NM2, 
				A.COMP_CLAIM_TYP AS CLAIM_TYPE, 
				COUNT(1) AS CNT
			 FROM EPROCUSR.ESICRDT A
			    INNER JOIN EPROCUSR.V_ESPSSHP B
			    ON A.SHOP_CD = B.UPJANG
			 WHERE A.SYS_ID = '100'
			   AND A.COMP_CD = 'HFC'
			   AND B.BU_CD = '2000' --FC부문만
			   <#if schDtGnb == 'A'>
				AND A.GR_REQ_DATE BETWEEN :schDate1 AND :schDate2
				<#else>
				AND A.REQ_DATE BETWEEN :schDate1 AND :schDate2  
				</#if>
			   AND NVL(A.PROG_STS, 'X') NOT IN ('P', 'B') --요청중, 반려 제외
			GROUP BY A.COMP_CLAIM_TYP  
		]]>
	</statement>
	
	<!-- 유형별claim을 조회한다. -->
	<statement name="chartSearchFc" type="select">
		/*+ com.hwfs.fm.fmc.dao.OrderClaimCntDAO.chartSearchFc */
		<![CDATA[
		 	SELECT 
				(SELECT C.SET2 FROM  SCC_COMMON_CODE C WHERE C.GROUP_CODE = 'C05' AND C.CODE = A.CT_CLAIM_KIND) AS CLS1_CD,  
				(SELECT C.ATTR02 FROM  SCC_COMMON_CODE C WHERE C.GROUP_CODE = 'C05'AND C.CODE = A.CT_CLAIM_KIND) AS CLS1_NM,
				(SELECT C.SET3 FROM  SCC_COMMON_CODE C WHERE C.GROUP_CODE = 'C05' AND C.CODE = A.CT_CLAIM_KIND) AS CLS2_CD,
				(SELECT C.ATTR03 FROM  SCC_COMMON_CODE C WHERE C.GROUP_CODE = 'C05' AND C.CODE = A.CT_CLAIM_KIND) AS CLS2_NM, 
				(SELECT C.CODE_NAME FROM  SCC_COMMON_CODE C WHERE C.GROUP_CODE = 'C05' AND C.CODE = A.CT_CLAIM_KIND) AS CLS2_NM2, 
				A.CT_CLAIM_KIND AS CLAIM_TYPE, 
				COUNT(1) AS CNT
			 FROM PO_CLAIM_LIST A
			   WHERE PRCS_STATUS = '09'
			   <#if schDtGnb == 'A'>
				AND A.NEED_DATE BETWEEN :schDate1 AND :schDate2
				<#else>
				AND A.REQ_DATE BETWEEN :schDate1 AND :schDate2  
				</#if>
			   
			GROUP BY A.CT_CLAIM_KIND
		]]>
	</statement>
	
	<!-- 일자 기간 조회한다. -->
	<statement name="dayTermSearch" type="select">
		/*+ com.hwfs.fm.fmc.dao.OrderClaimCntDAO.typeSearchDiffDay */
		<![CDATA[
		SELECT   LISTAGG(DATE_INFO, ',') WITHIN GROUP(ORDER BY DATE_INFO) AS DATE_INFO
			FROM     ( SELECT DATE_INFO
			         FROM    ( SELECT TO_CHAR(TO_DATE (:schFromDate, 'YYYYMMDD') + LEVEL - 1, 'YYYYMMDD') AS DATE_INFO
			                 FROM    DUAL
			                         CONNECT BY (TO_DATE (:schFromDate, 'YYYYMMDD') + LEVEL - 1) <= TO_DATE (:schToDate, 'YYYYMMDD')
			                 )
			         )
		]]>
	</statement>
	
	<!-- 일자 월간 조회한다. -->
	<statement name="monthTermSearch" type="select">
		/*+ com.hwfs.fm.fmc.dao.OrderClaimCntDAO.typeSearchDiffMonth */
		<![CDATA[
			SELECT   LISTAGG(MONTHS, ',') WITHIN GROUP(ORDER BY MONTHS) AS DATE_INFO
				FROM     ( SELECT TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(:schFromDate, 1, 6), 'YYYYMM'), LEVEL - 1 ),'YYYYMM') AS MONTHS
				         FROM    DUAL
				                 CONNECT BY LEVEL <= MONTHS_BETWEEN( TO_DATE(SUBSTR(:schToDate, 1, 6), 'YYYYMM' ), TO_DATE(SUBSTR(:schFromDate, 1, 6), 'YYYYMM' ) ) + 1
				         )
		]]>
	</statement>
	
	
	<!-- 유형별claim을 조회한다. -->
	<statement name="typeSearch" type="select">
		/*+ com.hwfs.fm.fmc.dao.OrderClaimCntDAO.typeSearch */
		<![CDATA[
			SELECT CLS1_CD
				, CLS1_NM
				, CLS2_CD
				, CLS2_NM
				, CLS2_NM2
				, CLAIM_TYPE
				--, DECODE (CLS1_CD, 'G', 1, 'L', 2, 3) AS SRT
				, TOTAL
				${schVerse} FROM (
						SELECT A.*, SUM(CNT) OVER(PARTITION BY A.CLAIM_TYPE) AS TOTAL FROM (
							      SELECT 
							      		<#if schGnb == 'D'>
							      			A.REQ_DATE AS REQ_DATE,
							      		<#else>
							      			SUBSTR(A.REQ_DATE, 0, 6) AS REQ_DATE,
							      		</#if>
							              (SELECT C.SET2 FROM  SCC_COMMON_CODE C WHERE C.GROUP_CODE = 'C05' AND C.CODE = A.COMP_CLAIM_TYP) AS CLS1_CD,  
							              (SELECT C.ATTR02 FROM  SCC_COMMON_CODE C WHERE C.GROUP_CODE = 'C05'AND C.CODE = A.COMP_CLAIM_TYP) AS CLS1_NM,
							              (SELECT C.SET3 FROM  SCC_COMMON_CODE C WHERE C.GROUP_CODE = 'C05' AND C.CODE = A.COMP_CLAIM_TYP) AS CLS2_CD,
							              (SELECT C.ATTR03 FROM  SCC_COMMON_CODE C WHERE C.GROUP_CODE = 'C05' AND C.CODE = A.COMP_CLAIM_TYP) AS CLS2_NM, 
							              (SELECT C.CODE_NAME FROM  SCC_COMMON_CODE C WHERE C.GROUP_CODE = 'C05' AND C.CODE = A.COMP_CLAIM_TYP) AS CLS2_NM2, 
							              A.COMP_CLAIM_TYP AS CLAIM_TYPE, 
							              COUNT(1) AS CNT
							             FROM EPROCUSR.ESICRDT A
							                INNER JOIN EPROCUSR.V_ESPSSHP B
							                ON A.SHOP_CD = B.UPJANG
							             WHERE A.SYS_ID = '100'
							               AND A.COMP_CD = 'HFC'
							               AND B.BU_CD = '2000' --FC부문만
							               <#if schDtGnb == 'A'>
							               AND A.GR_REQ_DATE BETWEEN :schFromDate AND :schToDate
							               <#else>
							               AND A.REQ_DATE BETWEEN :schFromDate AND :schToDate  
							               </#if>
							               --AND NVL(A.PROG_STS, 'X') NOT IN ('P', 'B') --요청중, 반려 제외
							               AND A.PROG_STS = 'C'
							               <#if schTgGnb == '02'>
							               AND A.FCUS_REQ_DATE IS NULL
							               </#if>
							            GROUP BY A.REQ_DATE, A.COMP_CLAIM_TYP
						) A
			      ) T
			      PIVOT (
			      	SUM(T.CNT)
			        FOR REQ_DATE
			        IN (${schPivot})
			      )
			      --ORDER BY DECODE (CLS1_CD, 'G', 1, 'L', 2, 3)
		]]>
	</statement>
	
	<!-- 유형별claim을 조회한다. -->
	<statement name="typeSearchFc" type="select">
		/*+ com.hwfs.fm.fmc.dao.OrderClaimCntDAO.typeSearchFc */
		<![CDATA[
			SELECT CLS1_CD
				, CLS1_NM
				, CLS2_CD
				, CLS2_NM
				, CLS2_NM2
				, CLAIM_TYPE
				--, DECODE (CLS1_CD, 'G', 1, 'L', 2, 3) AS SRT
				, TOTAL
				${schVerse} FROM (
						SELECT A.*, SUM(CNT) OVER(PARTITION BY A.CLAIM_TYPE) AS TOTAL FROM (
							      SELECT 
							      		<#if schGnb == 'D'>
							      			A.NEED_DATE AS REQ_DATE,
							      		<#else>
							      			SUBSTR(A.NEED_DATE, 0, 6) AS REQ_DATE,
							      		</#if>
							              (SELECT C.SET2 FROM  SCC_COMMON_CODE C WHERE C.GROUP_CODE = 'C05' AND C.CODE = A.CT_CLAIM_KIND) AS CLS1_CD,  
							              (SELECT C.ATTR02 FROM  SCC_COMMON_CODE C WHERE C.GROUP_CODE = 'C05'AND C.CODE = A.CT_CLAIM_KIND) AS CLS1_NM,
							              (SELECT C.SET3 FROM  SCC_COMMON_CODE C WHERE C.GROUP_CODE = 'C05' AND C.CODE = A.CT_CLAIM_KIND) AS CLS2_CD,
							              (SELECT C.ATTR03 FROM  SCC_COMMON_CODE C WHERE C.GROUP_CODE = 'C05' AND C.CODE = A.CT_CLAIM_KIND) AS CLS2_NM, 
							              (SELECT C.CODE_NAME FROM  SCC_COMMON_CODE C WHERE C.GROUP_CODE = 'C05' AND C.CODE = A.CT_CLAIM_KIND) AS CLS2_NM2, 
							              A.CT_CLAIM_KIND AS CLAIM_TYPE, 
							              COUNT(1) AS CNT
							             FROM PO_CLAIM_LIST A
							             <#if schDtGnb == 'A'>
							             WHERE A.NEED_DATE BETWEEN :schFromDate AND :schToDate  
							             <#else>
							             WHERE A.REQ_DATE BETWEEN :schFromDate AND :schToDate
							             </#if>
							               AND A.PRCS_STATUS = '09'
							            GROUP BY A.NEED_DATE, A.CT_CLAIM_KIND
						) A
			      ) T
			      PIVOT (
			      	SUM(T.CNT)
			        FOR REQ_DATE
			        IN (${schPivot})
			      )
			      --ORDER BY DECODE (CLS1_CD, 'G', 1, 'L', 2, 3)
		]]>
	</statement>
	
	<!-- 발주대비클레임건수(을)를 등록한다. -->
	<statement name="insert" type="insert">
		/*+ com.hwfs.fm.fmc.dao.OrderClaimCntDAO.insert */
		<![CDATA[
		INSERT INTO TABLE_NAME 
		(
		       COLUMN_NAME1,
			   COLUMN_NAME2,
		       CUSER,
		       CDATE
		)
		VALUES
		(
		       :columnName1,
			   <#if columnName2?has_content> :columnName2, <#else> null, </#if>
		       :loginSabun,
		       SYSDATE
		)
		]]>
	</statement>
	
	<!-- 발주대비클레임건수(을)를 수정한다. -->
	<statement name="update" type="update">
		/*+ com.hwfs.fm.fmc.dao.OrderClaimCntDAO.update */
		<![CDATA[
		UPDATE TABLE_NAME 
		SET    COLUMN_NAME1 = :columnName1,
		       COLUMN_NAME2 = :columnName2,
		       UUSER = :loginSabun,
		       UDATE = SYSDATE
		WHERE  COLUMN_NAME = :columnName
		]]>
	</statement>

	<!-- 발주대비클레임건수(을)를 삭제한다. -->
	<statement name="delete" type="delete">
		/*+ com.hwfs.fm.fmc.dao.OrderClaimCntDAO.delete */
		<![CDATA[
		DELETE 
		FROM   TABLE_NAME 
		WHERE  COLUMN_NAME = :columnName
		]]>
	</statement>

</hqml>


     