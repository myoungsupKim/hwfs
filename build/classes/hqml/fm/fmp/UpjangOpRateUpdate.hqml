<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="fm.fmp.upjangOpRateUpdateDAO">
	<desc>운영율 업장별 업데이트 HQML Query</desc>

	<!-- 운영율 업장별 업데이트 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.fm.fmp.dao.UpjangOpRateUpdateDAO.selectList */
		<![CDATA[
		SELECT  DISTINCT '0' AS CHK,
          TO_CHAR(A.MAIN_UPJANG) AS MAIN_UPJANG,
                TO_CHAR(A.UPJANG) AS UPJANG,
                A.UPJANGNM_DISP   AS UPJANG_NM,
                (SELECT Z.NM_KOR
                   FROM    SCC_USERINFO Z
                   WHERE   Z.SABUN = C.MODIFY_SABUN
                   )              AS MODIFY_NM, 
                C.MODIFY_SABUN    AS MODIFY_SABUN,
                ''                AS START_DATE,
                ''                AS END_DATE,
                TO_CHAR(TO_DATE(C.START_DATE),'YYYY-MM-DD')      AS MODIFY_START_DATE,
                TO_CHAR(TO_DATE(C.END_DATE),'YYYY-MM-DD')        AS MODIFY_END_DATE,
                TO_CHAR(C.UDATE,'YYYY-MM-DD AM HH24:MI:SS') AS UDATE
		FROM    FMS_UPJANG A
		      , FMU_OP_RATE B
		      , FMS_OPRATE_MODIFY_HIS C
		WHERE  (1=1)
		AND    A.UPJANG = B.UPJANG
		AND    A.UPJANG = C.UPJANG(+)
		AND    A.USE_YN = 'Y'
		AND    B.USE_YN = 'Y'
		AND    A.MAIN_UPJANG = :schMainUpjang	
		ORDER BY A.UPJANG	
		]]>
	</statement>

	<!-- 운영율 업장별 업데이트(을)를 구매신청 테이블에 등록한다. -->
	<statement name="updateFcSoPr" type="update">
		/*+ com.hwfs.fm.fmp.dao.UpjangOpRateUpdateDAO.updateFcSoPr */
		<![CDATA[
		UPDATE SO_PR B
	    SET    B.OP_PRICE  = NVL( FCUS.FMU_OP_PRICE_FUN(B.RC_UPJANG, B.ITEM_CODE, B.SALE_PRICE, B.NEED_DATE), B.SALE_PRICE)
	    WHERE  B.RC_UPJANG = :upjang
	    AND    B.NEED_DATE BETWEEN :startDate AND :endDate
		]]>
	</statement>
	
	<!-- 운영율 업장별 업데이트(을)를 판매 단가_통합영업 테이블에 등록한다. -->
	<statement name="updateESPPODTSAL" type="update">
		/*+ com.hwfs.fm.fmp.dao.UpjangOpRateUpdateDAO.updateESPPODTSAL */
		<![CDATA[
		UPDATE EPROCUSR.ESPPODTSAL B
        SET    B.SAL_OPER_PRICE = NVL((SELECT FCUS.FMU_OP_PRICE_FUN(TO_NUMBER(B.SHOP_CD), A.ITEM_CD, B.SAL_PRICE, CASE WHEN B.CUST_GR_DATE <> A.GR_REQ_DATE THEN B.CUST_GR_DATE
                                                                                                                  ELSE A.GR_REQ_DATE END )
        FROM   EPROCUSR.ESPPODT A
        WHERE  A.SYS_ID  = B.SYS_ID
        AND    A.COMP_CD = B.COMP_CD
        AND    A.PO_NO   = B.PO_NO
        AND    A.PO_LNO  = B.PO_LNO), B.SAL_PRICE)
        WHERE  B.SHOP_CD = :upjang
        AND    CUST_GR_DATE BETWEEN :startDate AND :endDate
		]]>
	</statement>
	
	<!-- 운영율 업장별 업데이트(을)를 판매 단가 테이블에 등록한다. -->
	<statement name="updateESISALP" type="update">
		/*+ com.hwfs.fm.fmp.dao.UpjangOpRateUpdateDAO.updateESISALP */
		<![CDATA[
		UPDATE EPROCUSR.ESISALP B
        SET    B.SAL_OPER_PRICE = NVL((SELECT FCUS.FMU_OP_PRICE_FUN(TO_NUMBER(B.SHOP_CD), A.ITEM_CD, B.SAL_PRICE, CASE WHEN A.MG_DATE <> B.CUST_GR_DATE THEN B.CUST_GR_DATE
                                                                                                               ELSE A.MG_DATE END )
        FROM   EPROCUSR.ESIMGDT A
        WHERE  A.SYS_ID  = B.SYS_ID
        AND    A.COMP_CD = B.COMP_CD
        AND    A.MG_NO   = B.MG_NO), B.SAL_PRICE)
        WHERE  B.SHOP_CD = :upjang
        AND    CUST_GR_DATE BETWEEN :startDate AND :endDate
		]]>
	</statement>
	
	<!-- 운영율 변경시 변경자, 변경시간 및 변경기간 데이터를 기록 및 수정한다 -->
	<statement name="updateOprateModifyHis" type="update">
		/*+ com.hwfs.fm.fmp.dao.UpjangOpRateUpdateDAO.updateOprateModifyHis */
		<![CDATA[
		MERGE INTO FMS_OPRATE_MODIFY_HIS  A
		  USING (SELECT   DISTINCT TO_CHAR(A.MAIN_UPJANG)     AS MAIN_UPJANG
		                      , TO_CHAR(A.UPJANG)             AS UPJANG
		                      , A.UPJANGNM_DISP               AS UPJANGNM
		                      , :loginSabun                   AS MODIFY_SABUN
		                      , :startDate                    AS START_DATE
		                      , :endDate                      AS END_DATE
		                      , :loginSabun                   AS CUSER
		                      , SYSDATE                       AS CDATE
		                      , :loginSabun                   AS UUSER
		                      , SYSDATE                       AS UDATE
		      FROM   FMS_UPJANG A
		           , FMU_OP_RATE B
		           , FMS_OPRATE_MODIFY_HIS C
		      WHERE  (1=1)
		      AND    A.UPJANG = B.UPJANG
		      AND    A.UPJANG = C.UPJANG(+)
		      AND    A.USE_YN = 'Y'
		      AND    B.USE_YN = 'Y'
		      AND    A.UPJANG = :upjang) B
		   ON (A.UPJANG=B.UPJANG AND A.MAIN_UPJANG=B.MAIN_UPJANG) 
		  WHEN MATCHED THEN 
		        
		      UPDATE 
		      SET MODIFY_SABUN = B.MODIFY_SABUN
		        , START_DATE   = B.START_DATE
		        , END_DATE     = B.END_DATE
		        , UUSER        = B.UUSER
		        , UDATE        = SYSDATE    
		        
		  WHEN NOT MATCHED THEN 
		      INSERT
		               (
		                  MAIN_UPJANG
		                , UPJANG
		                , UPJANGNM
		                , MODIFY_SABUN
		                , START_DATE
		                , END_DATE
		                , CUSER
		                , CDATE
		                , UUSER
		                , UDATE
		               )
		      VALUES 
				       (  B.MAIN_UPJANG
				        , B.UPJANG
				        , B.UPJANGNM
				        , B.MODIFY_SABUN
				        , B.START_DATE
				        , B.END_DATE
				        , B.CUSER
				        , B.CDATE 
		                , B.UUSER 
		                , B.UDATE 
						       )		               
		 
		]]>
	</statement>
</hqml>
