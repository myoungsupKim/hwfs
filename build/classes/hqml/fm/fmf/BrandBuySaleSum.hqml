<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="fm.fmf.brandBuySaleSumDAO">
    <desc>매출현황(브랜드) HQML Query</desc>

    <!-- 매출현황(브랜드) 일자별집계 목록을 조회한다. -->
    <statement name="selectList" type="select"><![CDATA[
        /*+ com.hwfs.fm.fmf.dao.BrandBuySaleSumDAO.selectList */
        SELECT   RS.TRANS_DATE                                 /* 일자 */
        	 , RS.TRANS_DATE2
             ,   RS.ITEM_CODE                                  /* 자재코드 */
             ,   RS.ITEM_NAME                                  /* 자재명 */
             ,   RS.ITEM_SIZE                                  /* 규격 */
             ,   RS.TRANS_UOM                                  /* 단위 */
             ,   ROUND(RS.TRANS_PRICE)      AS TRANS_PRICE     /* 매입단가 */
             ,   ROUND(RS.SALE_PRICE)       AS SALE_PRICE      /* 매출단가 */
             ,   RS.SALE_AMT - (RS.CK_AMT + RS.JI_AMT)                               AS SALE_AMT        /* 매출금액 = 매출금액 - (각종 수수료금액 제외) */
             ,   RS.SALE_VAT - ((RS.CK_SUM - RS.CK_AMT) + (RS.JI_SUM - RS.JI_AMT))   AS SALE_VAT        /* 매출부가세 = 매출부가세 - (각종 수수료금액 제외) */
             ,   RS.SALE_SUM - (RS.CK_SUM + RS.JI_SUM)                               AS SALE_SUM        /* 매출합계 = 매출합계 - (각종 수수료금액 제외) */
             ,   RS.TRANS_AMOUNT                               /* 매입금액 */
             ,   RS.TRANS_VAT                                  /* 매입부가세 */
             ,   RS.TRANS_SUM                                  /* 매입합계 */
             
             ,   RS.SALE_AMT - (RS.CK_AMT +  RS.JI_AMT) - RS.TRANS_AMOUNT   AS MARGIN_AMT /* 이익액(VAT별도) */
             ,   CASE   WHEN  RS.SALE_AMT - (RS.CK_AMT +  RS.JI_AMT) = 0 THEN 0
                        ELSE  ROUND(((RS.SALE_AMT - (RS.CK_AMT +  RS.JI_AMT) - RS.TRANS_AMOUNT) / (RS.SALE_AMT - (RS.CK_AMT +  RS.JI_AMT))) * 100, 2)
                 END    AS MARGIN_RATIO                        /* 이익율 */

             ,   RS.TRANS_QTY                                                          /* 수량 */
           --,   CL.CLASS_CODE2                                                        /* 자재분류코드2 */
           --,   CL.CLASS_CODE3                                                        /* 자재분류코드3 */
           --,   CL.CLASS_CODE4                                                        /* 자재분류코드4 */
           --,   CL.CLASS_NAME2                                                        /* 자재분류명2 */
           --,   CL.CLASS_NAME3                                                        /* 자재분류명3 */
           --,   CL.CLASS_NAME4                                                        /* 자재분류명4 */
             ,   CL.CLASS_NAME2 || ' (' || CL.CLASS_CODE2 || ')' AS CLASS_NAME_CODE2   /* 자재분류명코드2 */
             ,   CL.CLASS_NAME3 || ' (' || CL.CLASS_CODE3 || ')' AS CLASS_NAME_CODE3   /* 자재분류명코드3 */
             ,   CL.CLASS_NAME4 || ' (' || CL.CLASS_CODE4 || ')' AS CLASS_NAME_CODE4   /* 자재분류명코드4 */
             ,   DECODE(PB.USE_YN, 'Y', 'PB', 'NB') AS PB_GBN  /* PB 구분 */
             ,   RS.ORDER_TYPE                                 /* 주문유형 */
             ,   CASE WHEN RS.ORDER_TYPE = 'S' THEN '일반'
                      WHEN RS.ORDER_TYPE = '5' THEN '반환'
                      WHEN RS.ORDER_TYPE = '6' THEN '교환'
                      WHEN RS.ORDER_TYPE = '7' THEN '증정'
                      ELSE '기타' 
                 END                    AS ORDER_TYPE_NM       /* 주문유형명 */
             ,   RS.TM_CD                                      /* 관리부서 */
             ,   RS.TM_NM                                      /* 관리부서명 */
             ,   RS.TRANS_UPJANG                               /* 사업장 */
             ,   RS.TRANS_UPJANGNM_DISP                        /* 사업장명 */
             ,   RS.MAIN_UPJANG                                /* 본사 */
             ,   UP.UPJANGNM_DISP  AS MAIN_UPJANGNM_DISP       /* 사업장명 */
             ,   RS.WIN_ITEM_CD                                /* 바코드 */
          FROM   (
                     SELECT   X.TRANS_DATE , X.TRANS_DATE2
                          ,   X.ITEM_CODE
                          ,   X.ITEM_NAME
                          ,   X.ITEM_SIZE
                          ,   X.TRANS_UOM
                          ,   ROUND(X.TRANS_MPRICE) AS TRANS_PRICE
                          ,   ROUND(X.SALE_PRICE)   AS SALE_PRICE
                          ,   X.TRANS_QTY           AS TRANS_QTY

                          ,   SUM(DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE2 * X.TRANS_QTY)) AS SALE_AMT
                          ,   SUM(
                                    CASE WHEN  X.FLAG = '1' THEN
                                               DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(DECODE(X.TAX_CODE,'100',0.1,0) * ROUND(X.SALE_PRICE2 * X.TRANS_QTY))
                                         ELSE
                                               DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(DECODE(X.TAX_CODE,'100',1,0) * X.SALE_VAT)
                                    END
                                 ) AS SALE_VAT
                          ,   SUM(
                                    CASE WHEN  X.FLAG = '1' THEN
                                               DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(DECODE(X.TAX_CODE,'100',1.1,1) * ROUND(X.SALE_PRICE2 * X.TRANS_QTY))
                                         ELSE
                                               DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE2 * X.TRANS_QTY) + X.SALE_VAT
                                    END
                                 ) AS SALE_SUM

                          ,   SUM(ROUND(X.TRANS_MAMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)))                                                 AS TRANS_AMOUNT
                          ,   SUM(DECODE(X.TAX_CODE,100,ROUND(X.TRANS_MVAT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)),0) )                          AS TRANS_VAT
                          ,   SUM(ROUND(X.TRANS_MAMOUNT) + DECODE(X.TAX_CODE,100,ROUND(X.TRANS_MVAT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)),0))  AS TRANS_SUM
                              
                          ,   SUM(ROUND(X.CK_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)))                                                     AS CK_AMT
                          ,   SUM(ROUND(X.CK_AMOUNT) + DECODE(X.TAX_CODE,100,ROUND(X.CK_AMOUNT / 10),0) * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1))  AS CK_SUM
                          ,   SUM(ROUND(X.JI_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)))                                                     AS JI_AMT
                          ,   SUM(ROUND(X.JI_AMOUNT) + DECODE(X.TAX_CODE,100,ROUND(X.JI_AMOUNT / 10),0) * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1))  AS JI_SUM
                          
                          ,   X.ITEM_CLASS2
                          ,   X.ITEM_CLASS3
                          ,   X.ITEM_CLASS4
                          ,   X.ORDER_TYPE
                          ,   X.TM_CD
                          ,   X.TM_NM
                          ,   X.TRANS_UPJANG
                          ,   X.TRANS_UPJANGNM_DISP
                          ,   X.MAIN_UPJANG
                          ,   X.WIN_ITEM_CD
                       FROM   (
                                  SELECT   T.TRANS_DATE , T.TRANS_DATE2
                                       ,   T.ITEM_CODE
                                       ,   T.ITEM_NAME
                                       ,   T.ITEM_SIZE
                                       ,   T.TRANS_UOM
                                       ,   T.TRANS_TYPE
                                       ,   T.TRANS_QTY
                                       ,   T.TRANS_MPRICE
                                       ,   T.TRANS_MAMOUNT
                                       ,   T.TRANS_MVAT
                                       ,   T.SALE_PRICE
                                       ,   T.SALE_PRICE2
                                       ,   T.SALE_AMOUNT
                                       ,   T.SALE_VAT
                                       ,   T.TAX_CODE
                                       ,   T.FLAG
                                       ,   CASE WHEN  NVL(T.SALE_AMOUNT, 0) = 0 THEN 0
                                                ELSE  CASE WHEN  NVL(T.C_SALE_RATE, 0) = 0 THEN
                                                                 CASE  WHEN NVL(T.C1_SALE_RATE, 0) = 0 THEN 0
                                                                       ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.C1_SALE_RATE,0) / 100))))
                                                                 END
                                                           ELSE  (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.C_SALE_RATE,0) / 100))))
                                                      END
                                           END  AS CK_AMOUNT
                                       ,   CASE WHEN  NVL(T.SALE_AMOUNT, 0) = 0 THEN 0
                                                ELSE  CASE WHEN  NVL(T.J_SALE_RATE, 0) = 0 THEN
                                                                 CASE  WHEN NVL(T.J1_SALE_RATE, 0) = 0 THEN 0
                                                                       ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.J1_SALE_RATE,0) / 100))))
                                                                 END
                                                           ELSE  (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.J_SALE_RATE,0) / 100))))
                                                      END
                                           END  AS JI_AMOUNT
                                       ,   DECODE(NVL(T.S_SALE_RATE,0), 0, NVL(T.S1_SALE_RATE,0), 0) AS SE_RATE
                                       
                                       ,   T.ITEM_CLASS2
                                       ,   T.ITEM_CLASS3
                                       ,   T.ITEM_CLASS4
                                       ,   T.ORDER_TYPE
                                       ,   T.TM_CD
                                       ,   T.TM_NM
                                       ,   T.TRANS_UPJANG
                                       ,   T.TRANS_UPJANGNM_DISP
                                       ,   T.MAIN_UPJANG
                                       ,   T.WIN_ITEM_CD
                                    FROM   (
                                               SELECT   <#if schMainUpjang?has_content || schUpjang?has_content> /* HINT 사용시 더 느림 TEST 필요함 + PUSH_PRED(A) */ </#if>
                                                        A.TRANS_DATE, A.TRANS_DATE2
                                                    ,   A.ITEM_CODE
                                                    ,   A.ITEM_NAME
                                                    ,   A.ITEM_SIZE
                                                    ,   A.TRANS_UOM
                                                    ,   A.TRANS_TYPE
                                                    ,   A.TRANS_QTY
                                                    
                                                    ,   NVL(A.TRANS_MPRICE, 0)     AS TRANS_MPRICE
                                                    ,   NVL(A.TRANS_MAMOUNT, 0)    AS TRANS_MAMOUNT
                                                    ,   ROUND(DECODE(A.TAX_CODE,'100',0.1,0) * NVL(A.TRANS_MAMOUNT, 0)) AS TRANS_MVAT
                                                    
                                                    /* 반환은 -처리, 교환,증정은 0  */
                                                    ,   NVL(A.SALE_PRICE, 0)   AS SALE_PRICE  /* 화면 표시용 판매단가  */
                                                    ,   CASE WHEN  SUBSTR(NVL(RTN.PO_TYPE, 'S'), 1, 1) IN ('7') THEN 0   /* 6:교환, 7:증정 */
                                                             WHEN  SUBSTR(NVL(RTN.PO_TYPE, 'S'), 1, 1) IN ('5','6')     THEN 1  /* 5:반환 */
                                                             ELSE  1                                                         /* 일반 */
                                                        END * NVL(A.SALE_PRICE, 0)   AS SALE_PRICE2  /* 매출금액 계산용 판매단가  */
                                                    ,   CASE WHEN  SUBSTR(NVL(RTN.PO_TYPE, 'S'), 1, 1) IN ('7') THEN 0   /* 6:교환, 7:증정 */
                                                             WHEN  SUBSTR(NVL(RTN.PO_TYPE, 'S'), 1, 1) IN ('5','6')     THEN 1  /* 5:반환 */
                                                             ELSE  1                                                         /* 일반 */
                                                        END * NVL(A.SALE_AMOUNT, 0)  AS SALE_AMOUNT
                                                    ,   CASE WHEN  SUBSTR(NVL(RTN.PO_TYPE, 'S'), 1, 1) IN ('7') THEN 0   /* 6:교환, 7:증정 */
                                                             WHEN  SUBSTR(NVL(RTN.PO_TYPE, 'S'), 1, 1) IN ('5','6')     THEN 1  /* 5:반환 */
                                                             ELSE  1                                                         /* 일반 */
                                                        END * NVL(A.SALE_VAT, 0)     AS SALE_VAT
                                                    ,   A.TAX_CODE
                                                    ,   A.FLAG

                                                    /*검색 조건 : CK물류비제외*/
                                                    ,   0   AS C1_SALE_RATE              /* 분류 기준 CK 물류비율 */
                                                    ,   0   AS C_SALE_RATE               /* 자재 기준 CK 물류비율 */
                                                    /*검색 조건 : 지급수수료제외*/
                                                    ,   0   AS J1_SALE_RATE            /* 분류 기준 지급수수료 비율 */
                                                    ,   0   AS J_SALE_RATE             /* 자재별 지급수수료 비율 */
                                                    /*검색 조건 : 장려금제외*/
                                                    ,   0   AS S1_SALE_RATE             /* 분류 기준 장려금 비율 */
                                                    ,   0   AS S_SALE_RATE              /* 자재별 장려금 비율 */

                                                    ,   M.ITEM_CLASS2
                                                    ,   M.ITEM_CLASS3
                                                    ,   M.ITEM_CLASS4
                                                    ,   SUBSTR(NVL(RTN.PO_TYPE, 'S'), 1, 1)  AS ORDER_TYPE /* 판매구분 */
                                                    ,   D.TM_CD
                                                    ,   D.TM_NM
                                                    ,   A.TRANS_UPJANG
                                                    ,   Z.UPJANGNM_DISP AS TRANS_UPJANGNM_DISP
                                                    ,   Z.MAIN_UPJANG
                                                    ,   NVL(W.WIN_ITEM_CD, ' ') AS WIN_ITEM_CD
                                                 FROM   FMS_TRANSACTION_RTN_V  A
                                                        LEFT OUTER JOIN   SO_PR_RTN RTN
                                                                     ON   A.PR_ID   = RTN.PR_ID
                                                                    AND   A.PR_NUM  = RTN.PR_NUM
                                                              
                                                        INNER JOIN   ST_UPJANG B2
                                                                ON   1 = 1
                                                              <#if schMainUpjang?has_content>
                                                                     /*검색 조건 : 본사*/
                                                               AND   B2.UPJANG IN (SELECT UPJANG FROM FMS_UPJANG WHERE  MAIN_UPJANG = :schMainUpjang)
                                                              </#if>
                                                              <#if schUpjang?has_content>
                                                                     /*검색 조건 : 사업장*/
                                                               AND   B2.UPJANG = :schUpjang
                                                              </#if>
                                                              AND A.TRANS_UPJANG = B2.UPJANG
                                                              
                                                        INNER JOIN   FMS_UPJANG Z
                                                                ON   1 = 1
                                                               <#if schSabun?has_content>
                                                                     /*검색 조건 : 영업담당*/
                                                               AND   Z.PART_SALES_SABUN = :schSabun
                                                               </#if>
                                                               AND   A.TRANS_UPJANG  = Z.UPJANG
                                                               AND   Z.DEPT_ID      IN (   -- 브랜드유통사업장만. 
                                                                                         SELECT CC_CD
                                                                                           FROM HLDC_SC_DEPT_V
                                                                                          WHERE BU_CD = '2000'
                                                                                            AND MU_CD = '2004'
                                                                                            AND TM_CD LIKE 'CI%'
                                                                                       )
                                                        INNER JOIN   HLDC_SC_DEPT_V D
                                                                ON   1 = 1
                                                               <#if schTms?has_content>
                                                                     /* 검색 조건 : 관리부서(팀) */
                                                               AND   D.TM_CD IN (
                                                                                   <#list schTms?split(",") as tmCd>
                                                                                       '${tmCd}'<#if tmCd_has_next>,</#if>
                                                                                   </#list>
                                                                                )
                                                               </#if>
                                                               <#if schCc?has_content>
                                                                     /* 검색 조건 : CC */
                                                               AND   D.CC_CD = :schCc
                                                               </#if>
                                                               AND   B2.DEPT_ID     = D.DEPT_ID
                                                               AND   D.BU_CD        = '2000'
                                                               AND   D.MU_CD        = '2004'
                                                               AND   D.TM_CD     LIKE 'CI%'
                                                               
                                                        LEFT JOIN   HLDC_PO_ITEM_MST M
                                                               ON   A.ITEM_CODE = M.ITEM_CODE
                                                              AND   SUBSTR(M.ITEM_CODE, 1, 1) = 'F'
                                                               
                                                        LEFT OUTER JOIN   EPROCUSR.ESMMTGL  W
                                                                     ON   A.ITEM_CODE   = W.ITEM_CD
                                                                    AND   W.SYS_ID      = '100'

                                                WHERE   SUBSTR(A.SUBINV_CODE, 1, 2) = 'S1'
                                                  AND   (A.TRANS_TYPE IN '_002' OR A.TRANS_TYPE = 'I001' )
                                                  AND   A.TRANS_DATE2 BETWEEN :schFromDate AND :schToDate /* 검색 조건 : 조회기간 */
                                                  
                                                  <#if schItemText?has_content>
                                                      /* 검색 조건 : 상품검색 */
                                                      <#if schItemGbn == '88'>        AND   W.WIN_ITEM_CD LIKE '%' || :schItemText        /* 바코드 */   </#if>
                                                      <#if schItemGbn == 'ITEM_CODE'> AND   A.ITEM_CODE   LIKE '%' || :schItemText || '%' /* 자재코드 */ </#if>
                                                      <#if schItemGbn == 'ITEM_NAME'> AND   A.ITEM_NAME   LIKE '%' || :schItemText || '%' /* 자재명 */   </#if>
                                                  </#if>
                                                  
                                                  <#if schOrderType?has_content>
                                                      /* 검색 조건 : 판매구분 */
                                                      <#if schOrderType == 'S'>
                                                          AND   RTN.PO_TYPE IS NULL                    /* 일반 */
                                                      <#else>
                                                          AND   RTN.PO_TYPE LIKE :schOrderType || '%'  /* 반환, 교환, 증정 */
                                                      </#if>
                                                  </#if>
                                                  
                                           )   T
                              )    X
                      GROUP   BY X.TRANS_DATE , X.TRANS_DATE2,  X.ITEM_CODE  , X.ITEM_NAME  , X.ITEM_SIZE , X.TRANS_UOM, X.TRANS_MPRICE, X.SALE_PRICE  , X.TRANS_QTY
                               , X.ITEM_CLASS2, X.ITEM_CLASS3, X.ITEM_CLASS4, X.ORDER_TYPE, X.TM_CD    , X.TM_NM       , X.TRANS_UPJANG, X.TRANS_UPJANGNM_DISP
                               , X.MAIN_UPJANG, X.WIN_ITEM_CD
                 )   RS
                     INNER JOIN   HLDC_PO_ITEM_CLASS_V CL
                             ON   RS.ITEM_CLASS2 = CL.CLASS_CODE2
                            AND   RS.ITEM_CLASS3 = CL.CLASS_CODE3
                            AND   RS.ITEM_CLASS4 = CL.CLASS_CODE4
                     LEFT OUTER JOIN   FSI_PB_MST PB
                                  ON   RS.ITEM_CODE        = PB.ITEM_CODE
                                 AND   RS.TRANS_DATE BETWEEN PB.START_DATE AND PB.END_DATE
                                 AND   PB.MU_CD            = '2004'
                                 AND   PB.USE_YN           = 'Y'
                     INNER JOIN   FMS_UPJANG UP
                             ON   UP.UPJANG = RS.MAIN_UPJANG
         ORDER   BY RS.TRANS_DATE DESC
    ]]></statement>


    <!-- 매출현황(브랜드) 브랜드유통 관리부서 목록을 조회한다. -->
    <statement name="selectBrandTm" type="select"><![CDATA[
        /*+ com.hwfs.fm.fmf.dao.BrandBuySaleSumDAO.selectBrandTm */
        SELECT '0' AS CHK
             , TM_CD
             , TM_NM
             , BU_CD
             , BU_NM
             , MU_CD
             , MU_NM
          FROM HLDC_SC_DEPT_V
         WHERE BU_CD    = '2000'
           AND MU_CD    = '2004'
           AND TM_CD LIKE 'CI%'
         GROUP BY TM_CD, TM_NM,BU_CD, BU_NM, MU_CD, MU_NM
         ORDER BY TM_CD
    ]]></statement>
</hqml>