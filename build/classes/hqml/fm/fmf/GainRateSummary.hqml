<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="fm.fmf.gainRateSummaryDAO">
	<desc>이익율집계 HQML Query</desc>

	<!-- 거래처별집계 목록을 조회한다. -->
	<statement name="selectListTab0" type="select"><![CDATA[
		SELECT
			  '(' || TO_CHAR(RS.DEPT_ID) || ')' || (SELECT CC_NM FROM HLDC_SC_DEPT_V WHERE DEPT_ID = RS.DEPT_ID) AS CC_NM
      		, RS.MAIN_UPJANG
    		, (SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = RS.MAIN_UPJANG) AS MAIN_UPJANGNM
			<#if schView == '2'>	
   			, RS.TRANS_UPJANG AS UPJANG
    		, (SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = RS.TRANS_UPJANG) AS UPJANGNM
			</#if>
			, RS.SALE_AMT - (RS.CK_AMT +  RS.JI_AMT) AS SALE_AMOUNT		/* 매출금액 = 매출금액 - (각종 수수료금액 제외) */
			, RS.SALE_VAT - ((RS.CK_SUM - RS.CK_AMT) + (RS.JI_SUM - RS.JI_AMT)) AS SALE_VAT			/* 매출부가세 = 매출부가세 - (각종 수수료금액 제외) */
			, RS.SALE_SUM - (RS.CK_SUM + RS.JI_SUM) AS SALE_SUM		/* 매출합계 = 매출합계 - (각종 수수료금액 제외) */
    		, RS.UNIT_AMOUNT
    		, RS.TRANS_AMOUNT
    		, RS.STRATEGY_AMOUNT
    		, (RS.TRANS_AMOUNT - RS.UNIT_AMOUNT) AS TRANS_MARGIN					/* 구매_이익액 = 구매금액 - 구매원가 */
    		, (RS.STRATEGY_AMOUNT - RS.TRANS_AMOUNT) AS STRATEGY_MARGIN		/* 전략_이익액 = 전략금액 - 구매금액 */
    		, (RS.SALE_AMT - (RS.CK_AMT +  RS.JI_AMT)) - RS.STRATEGY_AMOUNT AS SALE_MARGIN		/* 영업_이익액 = 영업금액 - 전략금액 */
    		, (RS.TRANS_AMOUNT - RS.UNIT_AMOUNT) + (RS.STRATEGY_AMOUNT - RS.TRANS_AMOUNT) + ((RS.SALE_AMT - (RS.CK_AMT +  RS.JI_AMT)) - RS.STRATEGY_AMOUNT) AS SUM_MARGIN  
		FROM 
    			(
    			SELECT
    					   X.DEPT_ID
        				,  B.MAIN_UPJANG        
						<#if schView == '2'>	
						/* 업장별 집계 */
          				, X.TRANS_UPJANG
						</#if>
          				-- 1) 판매단가_공급가액,부가세,합계
						<#if schChk3?has_content>
			        	, SUM(DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100)))) AS SALE_AMT 
						, SUM(
							CASE WHEN X.FLAG = '1' THEN
								DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100))) * DECODE(X.TAX_CODE,'100',0.1,0))
							ELSE
								-- 보정자재는 장려율 적용안됨
								DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(DECODE(X.TAX_CODE,'100',1,0) * X.SALE_VAT)
							END
							) AS SALE_VAT
						, SUM(
							CASE WHEN X.FLAG = '1' THEN
								DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100))) * DECODE(X.TAX_CODE,'100',1.1,1))
							ELSE
								-- 보정자재는 장려율 적용안됨
		 						DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY) + X.SALE_VAT
							END
							) AS SALE_SUM
						<#else>
						, SUM(DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY)) AS SALE_AMT 
		 				, SUM(
		 					CASE WHEN X.FLAG = '1' THEN
		 						DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(DECODE(X.TAX_CODE,'100',0.1,0) * ROUND(X.SALE_PRICE * X.TRANS_QTY))
		 					ELSE 
								DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(DECODE(X.TAX_CODE,'100',1,0) * X.SALE_VAT)
		 					END
		 					) AS SALE_VAT 
		 				, SUM(
		 					CASE WHEN X.FLAG = '1' THEN
		 						DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(DECODE(X.TAX_CODE,'100',1.1,1) * ROUND(X.SALE_PRICE * X.TRANS_QTY))
		 					ELSE
		 						DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY) + X.SALE_VAT
		 					END
		 					) AS SALE_SUM 
						</#if>
						-- 2) 구매원가_공급가액만 집계
          				, SUM(ROUND(X.UNIT_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1))) AS UNIT_AMOUNT
          				-- 3) 관리단가_공급가액만 집계
          				, SUM(ROUND(X.TRANS_MAMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1))) AS TRANS_AMOUNT
          				-- 4) 전략단가_공급가액만 집계
          				, SUM(DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.STRATEGY_PRICE * X.TRANS_QTY)) AS STRATEGY_AMOUNT 
          				-- CHECK 
          				, SUM(ROUND(X.CK_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1))) AS CK_AMT
          				, SUM(ROUND(X.CK_AMOUNT) + DECODE(X.TAX_CODE,100,ROUND(X.CK_AMOUNT / 10),0) * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)) AS CK_SUM
          				, SUM(ROUND(X.JI_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1))) AS JI_AMT
          				, SUM(ROUND(X.JI_AMOUNT) + DECODE(X.TAX_CODE,100,ROUND(X.JI_AMOUNT / 10),0) * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)) AS JI_SUM
    			FROM
        				(
        					SELECT
            						  T.TRANS_UPJANG
              						, T.SUBINV_CODE
              						, T.TRANS_DATE
              						, T.ITEM_CODE
              						, T.ITEM_NAME
              						, T.ITEM_SIZE
              						, T.TRANS_UOM
              						, T.TRANS_TYPE
              						, T.TRANS_QTY
              						, T.UNIT_PRICE
              						, DECODE(SUBSTR(T.TRANS_TYPE,1,1),'I',1,-1) * ROUND(T.UNIT_PRICE * T.TRANS_QTY) AS UNIT_AMOUNT
              						, T.TRANS_MPRICE
              						, T.TRANS_MAMOUNT
              						, T.TRANS_MVAT
              						, T.SALE_PRICE
              						, T.SALE_AMOUNT
              						, T.SALE_VAT
              						, T.STRATEGY_RATE
                                    , CASE WHEN T.ATTR09 = 'Y' THEN  T.TRANS_MPRICE
                                      ELSE
                                      		(CASE WHEN T.STRATEGY_RATE = 0 THEN T.TRANS_MPRICE
                                      		ELSE  FMS_GETPRICE_TYPE_FUN('S', T.TRANS_MPRICE, T.STRATEGY_RATE, 0, 0, 0)
                                      		END)
                                      END AS STRATEGY_PRICE
              						, T.TAX_CODE
              						, T.FLAG
		     		 				, T.DEPT_ID
		     			    		, CASE WHEN NVL(T.SALE_AMOUNT, 0) = 0 THEN 0
							  		  ELSE
			    							CASE WHEN NVL(T.C_SALE_RATE, 0) = 0 THEN  
												CASE WHEN NVL(T.C1_SALE_RATE, 0) = 0 THEN 0 
                                        		ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.C1_SALE_RATE,0) / 100)))) END			    					
			    							ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.C_SALE_RATE,0) / 100))))
			    							END 
							  		   END AS CK_AMOUNT
		      						, CASE WHEN NVL(T.SALE_AMOUNT, 0) = 0 THEN 0
							  		  ELSE
			    								CASE WHEN NVL(T.J_SALE_RATE, 0) = 0 THEN 
													CASE WHEN NVL(T.J1_SALE_RATE, 0) = 0 THEN 0 
                                        			ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.J1_SALE_RATE,0) / 100)))) END			    					
			    					  			ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.J_SALE_RATE,0) / 100))))
			    					  			END 
							  		  END AS JI_AMOUNT
								 , DECODE(NVL(T.S_SALE_RATE,0), 0, NVL(T.S1_SALE_RATE,0), 0) AS SE_RATE			
        					FROM
            						(
                						SELECT
										<#if schMainUpjang?has_content || schUpjang?has_content || schTm?has_content || schCc?has_content>
											/*+ ORDERED  USE_HASH(Z) */
										</#if>
                    						  A.TRANS_UPJANG
                                      		, A.SUBINV_CODE
											<#if schGubun=="1">
									 		, A.TRANS_DATE
			      							<#else>
									  		, A.MG_DATE AS TRANS_DATE
           									</#if>
                      						, A.ITEM_CODE
                      						, A.ITEM_NAME
                      						, A.ITEM_SIZE
                      						, A.TRANS_UOM
                      						, A.TRANS_TYPE
                      						, A.TRANS_QTY
				      						, NVL(A.UNIT_PRICE, 0) AS UNIT_PRICE					/* 구매원가_단가 :  수불상의 단가정보 상이함, PO_CONTRACT_FSALE 참조함 */	
                      						--, NVL((SELECT /*+ INDEX(F PO_CONTRACT_FSALE_PK) */
                      						--		NVL(F.PO_PRICE, 0)
                      						--   FROM PO_CONTRACT_FSALE F
                       						--   WHERE F.CENTER_CODE = (SELECT Z.CENTER_CODE FROM VO_CENTER_UPJANG Z WHERE Z.UPJANG = A.TRANS_UPJANG)
                         					--   AND    F.UPJANG = (SELECT AP_UNITPRICE_UPJANG FROM ST_UPJANG WHERE UPJANG = A.TRANS_UPJANG)     
                         					--   AND    A.TRANS_DATE BETWEEN F.CONTRACT_START AND F.CONTRACT_END
                         					--   AND    F.ITEM_CODE = A.ITEM_CODE
                      						--   AND    ROWNUM <= 1
                      						--   ),0) AS UNIT_PRICE2
				      						, NVL(A.TRANS_MPRICE, 0) AS TRANS_MPRICE				/* 관리단가_단가 */
				      						, NVL(A.TRANS_MAMOUNT, 0) AS TRANS_MAMOUNT	/* 관리단가_금액 */
				      						, NVL(A.TRANS_MVAT, 0) AS TRANS_MVAT					/* 관리단가_부가세 */
                      						, NVL(A.SALE_PRICE, 0) AS SALE_PRICE						/* 판매단가_단가 */
                      						, NVL(A.SALE_AMOUNT, 0) AS SALE_AMOUNT				/* 판매단가_금액 */
                      						, NVL(A.SALE_VAT, 0) AS SALE_VAT							/* 판매단가_부가세 */
                      						--, NVL((SELECT /*+ INDEX(F PO_CONTRACT_FSALE_I4) */
                      						--		NVL(F.STRATEGY_PRICE, 0)
                      						--   FROM PO_CONTRACT_FSALE F
                       						--   --WHERE F.CENTER_CODE = A.CENTER_CODE	
                         					--   WHERE    F.UPJANG = (SELECT AP_UNITPRICE_UPJANG FROM ST_UPJANG WHERE UPJANG = A.TRANS_UPJANG)     
                         					--   AND    A.TRANS_DATE BETWEEN F.CONTRACT_START AND F.CONTRACT_END
                         					--   AND    F.ITEM_CODE = A.ITEM_CODE
                      						--   AND    ROWNUM <= 1
                      						--   ),0) AS STRATEGY_PRICE
                      						, A.TAX_CODE
                      						, A.FLAG
				      						, B2.DEPT_ID
				     						, Z.ATTR09														/* 전략이익 제외여부 */
				     						-- 전략이익율은 자재별 기준만 GET
                                            /*, NVL((SELECT  INDEX(F FMS_STRATEGY_PROFIT_IDX01)   
                                                        		NVL(F.STRATEGY_RATE,0)
                                                      FROM FMS_STRATEGY_PROFIT F
                                                   	  WHERE F.CENTER_CODE = A.CENTER_CODE
                                           			  AND    F.CC_CD = (SELECT CC_CD FROM ST_UPJANG WHERE UPJANG = A.TRANS_UPJANG)
                                           			  AND    A.TRANS_DATE BETWEEN F.PROFIT_DATE AND F.PROFIT_END    
                                           			  AND    F.CLASS_TYPE = 'M'
                                               		  AND    F.ITEM_CODE = A.ITEM_CODE
                                               		  ),0) AS STRATEGY_RATE */
                                            ,NVL(F.STRATEGY_RATE,0) AS STRATEGY_RATE   		  
         									/*검색 조건 : CK물류비제외*/
         									<#if schChk1?has_content>
				      						, CASE WHEN A.TAX_CODE = '100' THEN
													(CASE WHEN NVL(C2.FM_SALE_RATE, 0) = 0 THEN NVL(C1.FM_SALE_RATE, 0)
													 ELSE NVL(C2.FM_SALE_RATE, 0)
													END)
									 		ELSE 
													(CASE WHEN NVL(C2.FM_NOSALE_RATE, 0) = 0 THEN NVL(C1.FM_NOSALE_RATE, 0)
										 			ELSE NVL(C2.FM_NOSALE_RATE, 0)
													END)
									 		END AS C1_SALE_RATE							/* 분류 기준 CK 물류비율 */	
				      			 			, FMS_ITEM_SALE_RATE_CODE_FUN(A.TAX_CODE, A.TRANS_UPJANG, A.SUBINV_CODE, '001', A.ITEM_CODE, A.TRANS_DATE) AS C_SALE_RATE		/* 자재별 CK 비율 */
				      						<#else>
				      						, 0 AS C1_SALE_RATE								/* 분류 기준 CK 물류비율 */
				      						, 0 AS C_SALE_RATE									/* 자재 기준 CK 물류비율 */
											</#if>
         									/*검색 조건 : 지급수수료제외*/
         									<#if schChk2?has_content>
				      						, CASE WHEN A.TAX_CODE = '100' THEN
													(CASE WHEN NVL(J2.FM_SALE_RATE, 0) = 0 THEN NVL(J1.FM_SALE_RATE, 0)
													ELSE NVL(J2.FM_SALE_RATE, 0)
													END)
									  		 ELSE 
													(CASE WHEN NVL(J2.FM_NOSALE_RATE, 0) = 0 THEN NVL(J1.FM_NOSALE_RATE, 0)
										 			ELSE NVL(J2.FM_NOSALE_RATE, 0)
													END)
									  		 END AS J1_SALE_RATE								/* 분류 기준 지급수수료 비율 */	
				     				 		, FMS_ITEM_SALE_RATE_CODE_FUN(A.TAX_CODE, A.TRANS_UPJANG, A.SUBINV_CODE, '002', A.ITEM_CODE, A.TRANS_DATE) AS J_SALE_RATE	/* 자재별 지급수수료 비율 */
				      						<#else>
				      				 		, 0 AS J1_SALE_RATE									/* 분류 기준 지급수수료 비율 */
				     				 		, 0 AS J_SALE_RATE		/* 자재별 지급수수료 비율 */
											</#if>
         									/*검색 조건 : 장려금제외*/
         									<#if schChk3?has_content>
				      			    		, CASE WHEN A.TAX_CODE = '100' THEN
													(CASE WHEN NVL(S2.FM_SALE_RATE, 0) = 0 THEN NVL(S1.FM_SALE_RATE, 0)
										 			ELSE NVL(S2.FM_SALE_RATE, 0)
										 		END)
									  		 ELSE 
													(CASE WHEN NVL(S2.FM_NOSALE_RATE, 0) = 0 THEN NVL(S1.FM_NOSALE_RATE, 0)
													ELSE NVL(S2.FM_NOSALE_RATE, 0)
													END)
											 END AS S1_SALE_RATE								/* 분류 기준 장려금 비율 */	
				     			  		, FMS_ITEM_SALE_RATE_CODE_FUN(A.TAX_CODE, A.TRANS_UPJANG, A.SUBINV_CODE, '003', A.ITEM_CODE, A.TRANS_DATE) AS S_SALE_RATE		/* 자재별 장려금 비율 */
				      					<#else>
								 	 	, 0 AS S1_SALE_RATE									/* 분류 기준 장려금 비율 */	
				     			  		, 0 AS S_SALE_RATE									/* 자재별 장려금 비율 */
										</#if>
 										FROM FMS_TRANSACTION_V A
                                     											INNER JOIN ST_UPJANG B2 ON 1 = 1
             																									/*검색 조건 : 본사*/
           																										<#if schMainUpjang?has_content>
           																										AND B2.UPJANG IN (SELECT UPJANG FROM FMS_UPJANG WHERE  MAIN_UPJANG = :schMainUpjang)
           																										</#if>
            																									 /*검색 조건 : 사업장*/
           																										<#if schUpjang?has_content>
           																										AND B2.UPJANG = :schUpjang
           																										</#if>
																												 AND A.TRANS_UPJANG = B2.UPJANG
																				INNER JOIN FMS_UPJANG Z ON 1 = 1
            																									 /*검색 조건 : 영업담당*/
           																										<#if schSabun?has_content>
           																		  								 AND Z.PART_SALES_SABUN = :schSabun
																												</#if>
																				  								 AND A.TRANS_UPJANG = Z.UPJANG
																				INNER JOIN HLDC_SC_DEPT_V D ON  1 = 1
           																												/*검색 조건 : 관리부서(팀)*/
           																												<#if schTm?has_content>
           																												AND D.TM_CD = :schTm
           																												</#if>
           																												/*검색 조건 : CC */
           																												<#if schCc?has_content>
           																												AND D.CC_CD = :schCc
           																												</#if>
																														AND  B2.DEPT_ID = D.DEPT_ID
                                        										LEFT JOIN HLDC_PO_ITEM_MST M ON SUBSTR(M.ITEM_CODE, 1, 1) = 'F'
                                                               																 AND A.ITEM_CODE = M.ITEM_CODE
                                    											/* 전략이익율 연계 : 2015-11-17 */                             					  
																				--LEFT JOIN FMS_STRATEGY_PROFIT FM ON FM.CENTER_CODE = A.CENTER_CODE        	/* 조건 : 센터코드 */
													  							--	  AND FM.CC_CD IN (SELECT CC_CD FROM ST_UPJANG WHERE UPJANG = A.TRANS_UPJANG)		/* 조건 : 업장코드 */
													  							--	  AND A.TRANS_DATE2 BETWEEN FM.PROFIT_DATE AND FM.PROFIT_END					/* 조건 : 전략이익율 기준일자 */
													  							--	  AND FM.CLASS_TYPE = 'M'																				/* 조건 : 자재 기준 */
													  							--	  AND A.ITEM_CODE = FM.ITEM_CODE		 														    							  

																				--LEFT JOIN FMS_STRATEGY_PROFIT FM1 ON FM1.CENTER_CODE = A.CENTER_CODE        /* 조건 : 센터코드 */
													  							--	  AND FM1.CC_CD IN (SELECT CC_CD FROM ST_UPJANG WHERE UPJANG = A.TRANS_UPJANG)		/* 조건 : 업장코드 */
													  							--	  AND A.TRANS_DATE2 BETWEEN FM1.PROFIT_DATE AND FM1.PROFIT_END					/* 조건 : 전략이익율 기준일자 */
													  							--	  AND FM1.CLASS_TYPE = 'D'					/* 조건 : 세분류 기준 */
													  							--	  AND M.ITEM_CLASS4 = FM1.ITEM_CODE		 														    							  

                                      											-- 추가 : 특약사항관련 : 중분류, 소분류
         																	<#if schChk1?has_content>
																			LEFT JOIN FMS_SALE_RATE C1 ON C1.UPJANG = A.TRANS_UPJANG
																													AND C1.SUBINV_CODE = A.SUBINV_CODE
																													AND C1.CASH_CODE = '001'			/* CK물류비(001) */
																													AND A.TRANS_DATE BETWEEN C1.SDATE AND C1.EDATE
																													AND M.ITEM_CLASS3 = C1.ITEM_CLASS /* 중분류 */
																			LEFT JOIN FMS_SALE_RATE C2 ON C2.UPJANG = A.TRANS_UPJANG
																													AND C2.SUBINV_CODE = A.SUBINV_CODE
																													AND C2.CASH_CODE = '001'			/* CK물류비(001) */
																													AND A.TRANS_DATE BETWEEN C2.SDATE AND C2.EDATE
																													AND M.ITEM_CLASS4 = C2.ITEM_CLASS	/* 소분류 */
																			</#if>
         																	<#if schChk2?has_content>
																			LEFT JOIN FMS_SALE_RATE J1 ON J1.UPJANG = A.TRANS_UPJANG
																													AND J1.SUBINV_CODE = A.SUBINV_CODE
																													AND J1.CASH_CODE = '002'			/* 지급수수료(002) */
																													AND A.TRANS_DATE BETWEEN J1.SDATE AND J1.EDATE
																													AND M.ITEM_CLASS3 = J1.ITEM_CLASS /* 중분류 */
																			LEFT JOIN FMS_SALE_RATE J2 ON J2.UPJANG = A.TRANS_UPJANG
																													AND J2.SUBINV_CODE = A.SUBINV_CODE
																													AND J2.CASH_CODE = '002'			/* 지급수수료(002) */
																													AND A.TRANS_DATE BETWEEN J2.SDATE AND J2.EDATE
																													AND M.ITEM_CLASS4 = J2.ITEM_CLASS	/* 소분류 */
																			</#if>
         																	<#if schChk3?has_content>
																			LEFT JOIN FMS_SALE_RATE S1 ON S1.UPJANG = A.TRANS_UPJANG
																													AND S1.SUBINV_CODE = A.SUBINV_CODE
																													AND S1.CASH_CODE = '003'			/* 장려금(003) */
																													AND A.TRANS_DATE BETWEEN S1.SDATE AND S1.EDATE
																													AND M.ITEM_CLASS3 = S1.ITEM_CLASS /* 중분류 */
																			LEFT JOIN FMS_SALE_RATE S2 ON S2.UPJANG = A.TRANS_UPJANG
																													AND S2.SUBINV_CODE = A.SUBINV_CODE
																													AND S2.CASH_CODE = '003'			/* 장려금(003) */
																													AND A.TRANS_DATE BETWEEN S2.SDATE AND S2.EDATE
																													AND M.ITEM_CLASS4 = S2.ITEM_CLASS /* 소분류 */
																			</#if>
            LEFT JOIN (SELECT /*+ NO_MERGE USE_HASH(F) */ F.CENTER_CODE
                          ,F.ITEM_CODE
                          ,F.PROFIT_DATE
                          ,F.PROFIT_END 
                          , NVL(F.STRATEGY_RATE,0) STRATEGY_RATE
                       ,A.TRANS_ID

                    FROM FMS_TRANSACTION_V A, FMS_STRATEGY_PROFIT F
                    WHERE 1=1
                    AND F.CENTER_CODE = A.CENTER_CODE
                    AND F.CC_CD = (SELECT /*+ NO_UNNEST */  CC_CD 
                                   FROM ST_UPJANG 
                                  WHERE UPJANG = A.TRANS_UPJANG
                                )
                    AND A.TRANS_DATE BETWEEN F.PROFIT_DATE AND F.PROFIT_END    
                    AND F.CLASS_TYPE = 'M'
                    AND F.ITEM_CODE = A.ITEM_CODE
                    AND SUBSTR(A.SUBINV_CODE, 1, 2) = 'S1'
                    AND (A.TRANS_TYPE IN '_002' OR A.TRANS_TYPE = 'I001' )
                    /*검색 조건 : 기간*/
                    --  AND A.TRANS_DATE2 BETWEEN '20160822' AND '20160822' -- 개발자와 상의후 변경
                    AND A.MG_DATE BETWEEN :schFromDate AND :schToDate
                 ) F
              ON  A.TRANS_ID = F.TRANS_ID
                						WHERE SUBSTR(A.SUBINV_CODE, 1, 2) = 'S1'
                						AND (A.TRANS_TYPE IN '_002' OR A.TRANS_TYPE = 'I001' )
           								/*검색 조건 : 기간*/
										<#if schGubun=="1">
           								AND A.TRANS_DATE2 BETWEEN :schFromDate AND :schToDate
			      						<#else>
           								AND A.MG_DATE BETWEEN :schFromDate AND :schToDate
           								</#if>
           								/*검색 조건 : 센터*/     
           								<#if schCenter?has_content>
           									<#if schCenter != '*'>
           									AND A.CENTER_CODE = :schCenter
           									</#if>
           								</#if>
             							/*검색 조건 : 납품업체*/
           								<#if schCustCd?has_content>
           								AND A.CUSTCD = :schCustCd
           								</#if>
            				) T 
        			) X INNER JOIN FMS_UPJANG B ON X.TRANS_UPJANG = B.UPJANG        
     			GROUP BY X.DEPT_ID, B.MAIN_UPJANG
				<#if schView == '2'>	
					/* 업장별 집계 */
     				, X.TRANS_UPJANG
				</#if>
  		) RS
        
		]]></statement>

	<!-- 자재별집계 목록을 조회한다. -->
	<statement name="selectListTab1" type="select">
		/*+ com.hwfs.fm.fmf.dao.GainRateSummaryDAO.selectList1 */
		<![CDATA[
		SELECT
			  '(' || TO_CHAR(RS.DEPT_ID) || ')' || (SELECT CC_NM FROM HLDC_SC_DEPT_V WHERE DEPT_ID = RS.DEPT_ID) AS CC_NM
 			, RS.CLASS_M
			, RS.CLASS_S
			, RS.ITEM_CODE
			, RS.ITEM_NAME
			, RS.ITEM_SIZE
			, RS.TRANS_UOM
			, ROUND(RS.UNIT_PRICE) AS UNIT_PRICE
			, RS.SALE_AMT - (RS.CK_AMT +  RS.JI_AMT) AS SALE_AMOUNT		/* 매출금액 = 매출금액 - (각종 수수료금액 제외) */
			, RS.SALE_VAT - ((RS.CK_SUM - RS.CK_AMT) + (RS.JI_SUM - RS.JI_AMT)) AS SALE_VAT			/* 매출부가세 = 매출부가세 - (각종 수수료금액 제외) */
			, RS.SALE_SUM - (RS.CK_SUM + RS.JI_SUM) AS SALE_SUM		/* 매출합계 = 매출합계 - (각종 수수료금액 제외) */
    		, RS.UNIT_AMOUNT
    		, RS.TRANS_AMOUNT
    		, RS.STRATEGY_AMOUNT
    		, (RS.TRANS_AMOUNT - RS.UNIT_AMOUNT) AS TRANS_MARGIN					/* 구매_이익액 = 구매금액 - 구매원가 */
    		, (RS.STRATEGY_AMOUNT - RS.TRANS_AMOUNT) AS STRATEGY_MARGIN		/* 전략_이익액 = 전략금액 - 구매금액 */
    		, (RS.SALE_AMT - (RS.CK_AMT +  RS.JI_AMT)) - RS.STRATEGY_AMOUNT AS SALE_MARGIN		/* 영업_이익액 = 영업금액 - 전략금액 */
    		, (RS.TRANS_AMOUNT - RS.UNIT_AMOUNT) + (RS.STRATEGY_AMOUNT - RS.TRANS_AMOUNT) + ((RS.SALE_AMT - (RS.CK_AMT +  RS.JI_AMT)) - RS.STRATEGY_AMOUNT) AS SUM_MARGIN  
		FROM
    			(
    			SELECT
    					      X.DEPT_ID
             				, X.CLASS_NAME2 ||'(' || X.ITEM_CLASS2 || ')' AS CLASS_M
              				, X.CLASS_NAME3 ||'(' || X.ITEM_CLASS3 || ')' AS CLASS_S
	      					, X.ITEM_CODE
	      					, X.ITEM_NAME
	      					, X.ITEM_SIZE
	      					, X.TRANS_UOM
	      					, AVG(X.UNIT_PRICE) AS UNIT_PRICE
          				-- 1) 판매단가_공급가액,부가세,합계
						<#if schChk3?has_content>
			        	, SUM(DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100)))) AS SALE_AMT 
						, SUM(
							CASE WHEN X.FLAG = '1' THEN
								DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100))) * DECODE(X.TAX_CODE,'100',0.1,0))
							ELSE
								-- 보정자재는 장려율 적용안됨
								DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(DECODE(X.TAX_CODE,'100',1,0) * X.SALE_VAT)
							END
							) AS SALE_VAT
						, SUM(
							CASE WHEN X.FLAG = '1' THEN
								DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100))) * DECODE(X.TAX_CODE,'100',1.1,1))
							ELSE
								-- 보정자재는 장려율 적용안 됨
		 						DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY) + X.SALE_VAT
							END
							) AS SALE_SUM
						<#else>
						, SUM(DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY)) AS SALE_AMT 
		 				, SUM(
		 					CASE WHEN X.FLAG = '1' THEN
		 						DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(DECODE(X.TAX_CODE,'100',0.1,0) * ROUND(X.SALE_PRICE * X.TRANS_QTY))
		 					ELSE 
								DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(DECODE(X.TAX_CODE,'100',1,0) * X.SALE_VAT)
		 					END
		 					) AS SALE_VAT 
		 				, SUM(
		 					CASE WHEN X.FLAG = '1' THEN
		 						DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(DECODE(X.TAX_CODE,'100',1.1,1) * ROUND(X.SALE_PRICE * X.TRANS_QTY))
		 					ELSE
		 						DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY) + X.SALE_VAT
		 					END
		 					) AS SALE_SUM 
						</#if>
						-- 2) 구매원가_공급가액만 집계
          				, SUM(ROUND(X.UNIT_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1))) AS UNIT_AMOUNT
          				-- 3) 관리단가_공급가액만 집계
          				, SUM(ROUND(X.TRANS_MAMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1))) AS TRANS_AMOUNT
          				-- 4) 전략단가_공급가액만 집계
          				, SUM(DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.STRATEGY_PRICE * X.TRANS_QTY)) AS STRATEGY_AMOUNT 
          				-- CHECK 
          				, SUM(ROUND(X.CK_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1))) AS CK_AMT
          				, SUM(ROUND(X.CK_AMOUNT) + DECODE(X.TAX_CODE,100,ROUND(X.CK_AMOUNT / 10),0) * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)) AS CK_SUM
          				, SUM(ROUND(X.JI_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1))) AS JI_AMT
          				, SUM(ROUND(X.JI_AMOUNT) + DECODE(X.TAX_CODE,100,ROUND(X.JI_AMOUNT / 10),0) * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)) AS JI_SUM
    			FROM
        				(
        					SELECT
            						  T.TRANS_UPJANG
              						, T.SUBINV_CODE
              						, T.TRANS_DATE
              						, T.ITEM_CODE
              						, T.ITEM_NAME
              						, T.ITEM_SIZE
              						, T.TRANS_UOM
              						, T.TRANS_TYPE
              						, T.TRANS_QTY
              						, T.UNIT_PRICE
              						, DECODE(SUBSTR(T.TRANS_TYPE,1,1),'I',1,-1) * ROUND(T.UNIT_PRICE * T.TRANS_QTY) AS UNIT_AMOUNT
              						, T.TRANS_MPRICE
              						, T.TRANS_MAMOUNT
              						, T.TRANS_MVAT
              						, T.SALE_PRICE
              						, T.SALE_AMOUNT
              						, T.SALE_VAT
              						, T.STRATEGY_RATE
                                    , CASE WHEN T.ATTR09 = 'Y' THEN  T.TRANS_MPRICE
                                      ELSE
                                      		(CASE WHEN T.STRATEGY_RATE = 0 THEN T.TRANS_MPRICE
                                      		ELSE  FMS_GETPRICE_TYPE_FUN('S', T.TRANS_MPRICE, T.STRATEGY_RATE, 0, 0, 0)
                                      		END)
                                      END AS STRATEGY_PRICE
              						, T.TAX_CODE
              						, T.FLAG
		     		 				, T.DEPT_ID
		      						, T.ITEM_CLASS2
		      						, T.ITEM_CLASS3
		      						, T.CLASS_NAME2
		      						, T.CLASS_NAME3
		     			    		, CASE WHEN NVL(T.SALE_AMOUNT, 0) = 0 THEN 0
							  		  ELSE
			    							CASE WHEN NVL(T.C_SALE_RATE, 0) = 0 THEN  
												CASE WHEN NVL(T.C1_SALE_RATE, 0) = 0 THEN 0 
                                        		ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.C1_SALE_RATE,0) / 100)))) END			    					
			    							ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.C_SALE_RATE,0) / 100))))
			    							END 
							  		   END AS CK_AMOUNT
		      						, CASE WHEN NVL(T.SALE_AMOUNT, 0) = 0 THEN 0
							  		  ELSE
			    								CASE WHEN NVL(T.J_SALE_RATE, 0) = 0 THEN 
													CASE WHEN NVL(T.J1_SALE_RATE, 0) = 0 THEN 0 
                                        			ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.J1_SALE_RATE,0) / 100)))) END			    					
			    					  			ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.J_SALE_RATE,0) / 100))))
			    					  			END 
							  		  END AS JI_AMOUNT
								 , DECODE(NVL(T.S_SALE_RATE,0), 0, NVL(T.S1_SALE_RATE,0), 0) AS SE_RATE			
        					FROM
            						(
                						SELECT
										<#if schMainUpjang?has_content || schUpjang?has_content>
											/*+ PUSH_PRED(A) */
										</#if>
                    						  A.TRANS_UPJANG
                                      		, A.SUBINV_CODE
											<#if schGubun=="1">
									 		, A.TRANS_DATE
			      							<#else>
									  		, A.MG_DATE AS TRANS_DATE
           									</#if>
                      						, A.ITEM_CODE
                      						, A.ITEM_NAME
                      						, A.ITEM_SIZE
                      						, A.TRANS_UOM
                      						, A.TRANS_TYPE
                      						, A.TRANS_QTY
				      						, NVL(A.UNIT_PRICE, 0) AS UNIT_PRICE					/* 구매원가_단가 :  수불상의 단가정보 상이함, PO_CONTRACT_FSALE 참조함 */	
                      						--, NVL((SELECT /*+ INDEX(F PO_CONTRACT_FSALE_PK) */
                      						--		NVL(F.PO_PRICE, 0)
                      						--   FROM PO_CONTRACT_FSALE F
                       						--   WHERE F.CENTER_CODE = (SELECT Z.CENTER_CODE FROM VO_CENTER_UPJANG Z WHERE Z.UPJANG = A.TRANS_UPJANG)
                         					--   AND    F.UPJANG = (SELECT AP_UNITPRICE_UPJANG FROM ST_UPJANG WHERE UPJANG = A.TRANS_UPJANG)     
                         					--   AND    A.TRANS_DATE BETWEEN F.CONTRACT_START AND F.CONTRACT_END
                         					--   AND    F.ITEM_CODE = A.ITEM_CODE
                      						--   AND    ROWNUM <= 1
                      						--   ),0) AS UNIT_PRICE
				      						, NVL(A.TRANS_MPRICE, 0) AS TRANS_MPRICE				/* 관리단가_단가 */
				      						, NVL(A.TRANS_MAMOUNT, 0) AS TRANS_MAMOUNT	/* 관리단가_금액 */
				      						, NVL(A.TRANS_MVAT, 0) AS TRANS_MVAT					/* 관리단가_부가세 */
                      						, NVL(A.SALE_PRICE, 0) AS SALE_PRICE						/* 판매단가_단가 */
                      						, NVL(A.SALE_AMOUNT, 0) AS SALE_AMOUNT				/* 판매단가_금액 */
                      						, NVL(A.SALE_VAT, 0) AS SALE_VAT							/* 판매단가_부가세 */
                      						--, NVL((SELECT /*+ INDEX(F PO_CONTRACT_FSALE_I4) */
                      						--		NVL(F.STRATEGY_PRICE, 0)
                      						--   FROM PO_CONTRACT_FSALE F
                       						  -- WHERE F.CENTER_CODE = A.CENTER_CODE
                         					--   WHERE F.UPJANG = (SELECT AP_UNITPRICE_UPJANG FROM ST_UPJANG WHERE UPJANG = A.TRANS_UPJANG)     
                         					--   AND    A.TRANS_DATE BETWEEN F.CONTRACT_START AND F.CONTRACT_END
                         					--   AND    F.ITEM_CODE = A.ITEM_CODE
                      						--   AND    ROWNUM <= 1
                      						--   ),0) AS STRATEGY_PRICE
                      						, A.TAX_CODE
                      						, A.FLAG
				      						, B2.DEPT_ID
				      						, M.ITEM_CLASS2
				      						, M.ITEM_CLASS3
				      						, (SELECT CLASS_NAME FROM HLDC_PO_ITEM_CLASS WHERE CLASS_TYPE = 'M' AND CLASS_CODE = M.ITEM_CLASS2) AS CLASS_NAME2
				     						, (SELECT CLASS_NAME FROM HLDC_PO_ITEM_CLASS WHERE CLASS_TYPE = 'S' AND CLASS_CODE = M.ITEM_CLASS3) AS CLASS_NAME3
				     						, Z.ATTR09														/* 전략이익 제외여부 */
				     						-- 전략이익율은 자재별 기준만 GET
                                            , NVL((SELECT /*+ INDEX(F FMS_STRATEGY_PROFIT_IDX01) */  
                                                        		NVL(F.STRATEGY_RATE,0)
                                                      FROM FMS_STRATEGY_PROFIT F
                                                   	  WHERE F.CENTER_CODE = A.CENTER_CODE
                                           			  AND    F.CC_CD = (SELECT CC_CD FROM ST_UPJANG WHERE UPJANG = A.TRANS_UPJANG)
                                           			  AND    A.TRANS_DATE BETWEEN F.PROFIT_DATE AND F.PROFIT_END    
                                           			  AND    F.CLASS_TYPE = 'M'
                                               		  AND    F.ITEM_CODE = A.ITEM_CODE
                                               		  ),0) AS STRATEGY_RATE
         									/*검색 조건 : CK물류비제외*/
         									<#if schChk1?has_content>
				      						, CASE WHEN A.TAX_CODE = '100' THEN
													(CASE WHEN NVL(C2.FM_SALE_RATE, 0) = 0 THEN NVL(C1.FM_SALE_RATE, 0)
													 ELSE NVL(C2.FM_SALE_RATE, 0)
													END)
									 		ELSE 
													(CASE WHEN NVL(C2.FM_NOSALE_RATE, 0) = 0 THEN NVL(C1.FM_NOSALE_RATE, 0)
										 			ELSE NVL(C2.FM_NOSALE_RATE, 0)
													END)
									 		END AS C1_SALE_RATE							/* 분류 기준 CK 물류비율 */	
				      			 			, FMS_ITEM_SALE_RATE_CODE_FUN(A.TAX_CODE, A.TRANS_UPJANG, A.SUBINV_CODE, '001', A.ITEM_CODE, A.TRANS_DATE) AS C_SALE_RATE		/* 자재별 CK 비율 */
				      						<#else>
				      						, 0 AS C1_SALE_RATE								/* 분류 기준 CK 물류비율 */
				      						, 0 AS C_SALE_RATE									/* 자재 기준 CK 물류비율 */
											</#if>
         									/*검색 조건 : 지급수수료제외*/
         									<#if schChk2?has_content>
				      						, CASE WHEN A.TAX_CODE = '100' THEN
													(CASE WHEN NVL(J2.FM_SALE_RATE, 0) = 0 THEN NVL(J1.FM_SALE_RATE, 0)
													ELSE NVL(J2.FM_SALE_RATE, 0)
													END)
									  		 ELSE 
													(CASE WHEN NVL(J2.FM_NOSALE_RATE, 0) = 0 THEN NVL(J1.FM_NOSALE_RATE, 0)
										 			ELSE NVL(J2.FM_NOSALE_RATE, 0)
													END)
									  		 END AS J1_SALE_RATE								/* 분류 기준 지급수수료 비율 */	
				     				 		, FMS_ITEM_SALE_RATE_CODE_FUN(A.TAX_CODE, A.TRANS_UPJANG, A.SUBINV_CODE, '002', A.ITEM_CODE, A.TRANS_DATE) AS J_SALE_RATE	/* 자재별 지급수수료 비율 */
				      						<#else>
				      				 		, 0 AS J1_SALE_RATE									/* 분류 기준 지급수수료 비율 */
				     				 		, 0 AS J_SALE_RATE		/* 자재별 지급수수료 비율 */
											</#if>
         									/*검색 조건 : 장려금제외*/
         									<#if schChk3?has_content>
				      			    		, CASE WHEN A.TAX_CODE = '100' THEN
													(CASE WHEN NVL(S2.FM_SALE_RATE, 0) = 0 THEN NVL(S1.FM_SALE_RATE, 0)
										 			ELSE NVL(S2.FM_SALE_RATE, 0)
										 		END)
									  		 ELSE 
													(CASE WHEN NVL(S2.FM_NOSALE_RATE, 0) = 0 THEN NVL(S1.FM_NOSALE_RATE, 0)
													ELSE NVL(S2.FM_NOSALE_RATE, 0)
													END)
											 END AS S1_SALE_RATE								/* 분류 기준 장려금 비율 */	
				     			  		, FMS_ITEM_SALE_RATE_CODE_FUN(A.TAX_CODE, A.TRANS_UPJANG, A.SUBINV_CODE, '003', A.ITEM_CODE, A.TRANS_DATE) AS S_SALE_RATE		/* 자재별 장려금 비율 */
				      					<#else>
								 	 	, 0 AS S1_SALE_RATE									/* 분류 기준 장려금 비율 */	
				     			  		, 0 AS S_SALE_RATE									/* 자재별 장려금 비율 */
										</#if>
 										FROM FMS_TRANSACTION_V A
                                     											INNER JOIN ST_UPJANG B2 ON 1 = 1
             																									/*검색 조건 : 본사*/
           																										<#if schMainUpjang?has_content>
           																										AND B2.UPJANG IN (SELECT UPJANG FROM FMS_UPJANG WHERE  MAIN_UPJANG = :schMainUpjang)
           																										</#if>
            																									 /*검색 조건 : 사업장*/
           																										<#if schUpjang?has_content>
           																										AND B2.UPJANG = :schUpjang
           																										</#if>
																												 AND A.TRANS_UPJANG = B2.UPJANG
																				INNER JOIN FMS_UPJANG Z ON 1 = 1
            																									 /*검색 조건 : 영업담당*/
           																										<#if schSabun?has_content>
           																		  								 AND Z.PART_SALES_SABUN = :schSabun
																												</#if>
																				  								 AND A.TRANS_UPJANG = Z.UPJANG
																				INNER JOIN HLDC_SC_DEPT_V D ON  1 = 1
           																												/*검색 조건 : 관리부서(팀)*/
           																												<#if schTm?has_content>
           																												AND D.TM_CD = :schTm
           																												</#if>
           																												/*검색 조건 : CC */
           																												<#if schCc?has_content>
           																												AND D.CC_CD = :schCc
           																												</#if>
																														AND  B2.DEPT_ID = D.DEPT_ID
                                        										LEFT JOIN HLDC_PO_ITEM_MST M ON SUBSTR(M.ITEM_CODE, 1, 1) = 'F'
                                                               																 AND A.ITEM_CODE = M.ITEM_CODE

                                    											/* 전략이익율 연계 : 2015-11-17 */
																				--LEFT JOIN FMS_STRATEGY_PROFIT FM ON FM.CENTER_CODE = A.CENTER_CODE        	/* 조건 : 센터코드 */
													  							--	  AND FM.CC_CD IN (SELECT CC_CD FROM ST_UPJANG WHERE UPJANG = A.TRANS_UPJANG)		/* 조건 : 업장코드 */
													  							--	  AND A.TRANS_DATE2 BETWEEN FM.PROFIT_DATE AND FM.PROFIT_END					/* 조건 : 전략이익율 기준일자 */
													  							--	  AND FM.CLASS_TYPE = 'M'																				/* 조건 : 자재 기준 */
													  							--	  AND A.ITEM_CODE = FM.ITEM_CODE		 														    							  

																				--LEFT JOIN FMS_STRATEGY_PROFIT FM1 ON FM1.CENTER_CODE = A.CENTER_CODE        /* 조건 : 센터코드 */
													  							--	  AND FM1.CC_CD IN (SELECT CC_CD FROM ST_UPJANG WHERE UPJANG = A.TRANS_UPJANG)		/* 조건 : 업장코드 */
													  							--	  AND A.TRANS_DATE2 BETWEEN FM1.PROFIT_DATE AND FM1.PROFIT_END					/* 조건 : 전략이익율 기준일자 */
													  							--	  AND FM1.CLASS_TYPE = 'D'					/* 조건 : 세분류 기준 */
													  							--	  AND M.ITEM_CLASS4 = FM1.ITEM_CODE		 														    							  

                                         											-- 추가 : 특약사항관련 : 중분류, 소분류
         																	<#if schChk1?has_content>
																			LEFT JOIN FMS_SALE_RATE C1 ON C1.UPJANG = A.TRANS_UPJANG
																													AND C1.SUBINV_CODE = A.SUBINV_CODE
																													AND C1.CASH_CODE = '001'			/* CK물류비(001) */
																													AND A.TRANS_DATE BETWEEN C1.SDATE AND C1.EDATE
																													AND M.ITEM_CLASS3 = C1.ITEM_CLASS /* 중분류 */
																			LEFT JOIN FMS_SALE_RATE C2 ON C2.UPJANG = A.TRANS_UPJANG
																													AND C2.SUBINV_CODE = A.SUBINV_CODE
																													AND C2.CASH_CODE = '001'			/* CK물류비(001) */
																													AND A.TRANS_DATE BETWEEN C2.SDATE AND C2.EDATE
																													AND M.ITEM_CLASS4 = C2.ITEM_CLASS	/* 소분류 */
																			</#if>
         																	<#if schChk2?has_content>
																			LEFT JOIN FMS_SALE_RATE J1 ON J1.UPJANG = A.TRANS_UPJANG
																													AND J1.SUBINV_CODE = A.SUBINV_CODE
																													AND J1.CASH_CODE = '002'			/* 지급수수료(002) */
																													AND A.TRANS_DATE BETWEEN J1.SDATE AND J1.EDATE
																													AND M.ITEM_CLASS3 = J1.ITEM_CLASS /* 중분류 */
																			LEFT JOIN FMS_SALE_RATE J2 ON J2.UPJANG = A.TRANS_UPJANG
																													AND J2.SUBINV_CODE = A.SUBINV_CODE
																													AND J2.CASH_CODE = '002'			/* 지급수수료(002) */
																													AND A.TRANS_DATE BETWEEN J2.SDATE AND J2.EDATE
																													AND M.ITEM_CLASS4 = J2.ITEM_CLASS	/* 소분류 */
																			</#if>
         																	<#if schChk3?has_content>
																			LEFT JOIN FMS_SALE_RATE S1 ON S1.UPJANG = A.TRANS_UPJANG
																													AND S1.SUBINV_CODE = A.SUBINV_CODE
																													AND S1.CASH_CODE = '003'			/* 장려금(003) */
																													AND A.TRANS_DATE BETWEEN S1.SDATE AND S1.EDATE
																													AND M.ITEM_CLASS3 = S1.ITEM_CLASS /* 중분류 */
																			LEFT JOIN FMS_SALE_RATE S2 ON S2.UPJANG = A.TRANS_UPJANG
																													AND S2.SUBINV_CODE = A.SUBINV_CODE
																													AND S2.CASH_CODE = '003'			/* 장려금(003) */
																													AND A.TRANS_DATE BETWEEN S2.SDATE AND S2.EDATE
																													AND M.ITEM_CLASS4 = S2.ITEM_CLASS /* 소분류 */
																			</#if>
                						WHERE SUBSTR(A.SUBINV_CODE, 1, 2) = 'S1'
                						AND (A.TRANS_TYPE IN '_002' OR A.TRANS_TYPE = 'I001' )
           								/*검색 조건 : 기간*/
										<#if schGubun=="1">
           								AND A.TRANS_DATE2 BETWEEN :schFromDate AND :schToDate
			      						<#else>
           								AND A.MG_DATE BETWEEN :schFromDate AND :schToDate
           								</#if>
           								/*검색 조건 : 센터*/     
           								<#if schCenter?has_content>
           									<#if schCenter != '*'>
           									AND A.CENTER_CODE = :schCenter
           									</#if>
           								</#if>
             							/*검색 조건 : 납품업체*/
           								<#if schCustCd?has_content>
           								AND A.CUSTCD = :schCustCd
           								</#if>
            				) T 
        			) X         
 				GROUP BY X.DEPT_ID,  X.CLASS_NAME2 ||'(' || X.ITEM_CLASS2 || ')' , X.CLASS_NAME3 ||'(' || X.ITEM_CLASS3 || ')',  X.ITEM_CODE, X.ITEM_NAME, X.ITEM_SIZE, X.TRANS_UOM
  		) RS
        
		]]>
	</statement>


	<!-- 영업사원별집계 목록을 조회한다. -->
	<statement name="selectListTab2" type="select">
		/*+ com.hwfs.fm.fmf.dao.GainRateSummaryDAO.selectList2 */
		<![CDATA[
		WITH A AS
		(
		SELECT
	  		  RS.MAIN_UPJANG
			, (SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = RS.MAIN_UPJANG) AS MAIN_UPJANGNM
			, RS.UPJANG
			, (SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = RS.UPJANG) AS UPJANGNM
			,  '(' || TO_CHAR(RS.DEPT_ID) || ')' || (SELECT CC_NM FROM HLDC_SC_DEPT_V WHERE DEPT_ID = RS.DEPT_ID) AS CC_NM
			, (SELECT NM_KOR FROM HR_PERSONAL WHERE SABUN = RS.PART_SALES_SABUN) || '(' || RS.PART_SALES_SABUN || ')' AS PART_SALES_SABUN
			, RS.SALE_AMT - (RS.CK_AMT +  RS.JI_AMT) AS SALE_AMOUNT		/* 매출금액 = 매출금액 - (각종 수수료금액 제외) */
			, RS.SALE_VAT - ((RS.CK_SUM - RS.CK_AMT) + (RS.JI_SUM - RS.JI_AMT)) AS SALE_VAT			/* 매출부가세 = 매출부가세 - (각종 수수료금액 제외) */
			, RS.SALE_SUM - (RS.CK_SUM + RS.JI_SUM) AS SALE_SUM		/* 매출합계 = 매출합계 - (각종 수수료금액 제외) */
    		, RS.UNIT_AMOUNT
    		, RS.TRANS_AMOUNT
    		, RS.STRATEGY_AMOUNT
    		, (RS.TRANS_AMOUNT - RS.UNIT_AMOUNT) AS TRANS_MARGIN					/* 구매_이익액 = 구매금액 - 구매원가 */
    		, (RS.STRATEGY_AMOUNT - RS.TRANS_AMOUNT) AS STRATEGY_MARGIN		/* 전략_이익액 = 전략금액 - 구매금액 */
    		, (RS.SALE_AMT - (RS.CK_AMT +  RS.JI_AMT)) - RS.STRATEGY_AMOUNT AS SALE_MARGIN		/* 영업_이익액 = 영업금액 - 전략금액 */
    		, (RS.TRANS_AMOUNT - RS.UNIT_AMOUNT) + (RS.STRATEGY_AMOUNT - RS.TRANS_AMOUNT) + ((RS.SALE_AMT - (RS.CK_AMT +  RS.JI_AMT)) - RS.STRATEGY_AMOUNT) AS SUM_MARGIN  
		FROM
    			(
    			SELECT
		  				  X.MAIN_UPJANG
						, X.UPJANG
						, X.DEPT_ID
						, X.PART_SALES_SABUN
          				-- 1) 판매단가_공급가액,부가세,합계
						<#if schChk3?has_content>
			        	, SUM(DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100)))) AS SALE_AMT 
						, SUM(
							CASE WHEN X.FLAG = '1' THEN
								DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100))) * DECODE(X.TAX_CODE,'100',0.1,0))
							ELSE
								-- 보정자재는 장려율 적용안됨
								DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(DECODE(X.TAX_CODE,'100',1,0) * X.SALE_VAT)
							END
							) AS SALE_VAT
						, SUM(
							CASE WHEN X.FLAG = '1' THEN
								DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100))) * DECODE(X.TAX_CODE,'100',1.1,1))
							ELSE
								-- 보정자재는 장려율 적용안됨
		 						DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY) + X.SALE_VAT
							END
							) AS SALE_SUM
						<#else>
						, SUM(DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY)) AS SALE_AMT 
		 				, SUM(
		 					CASE WHEN X.FLAG = '1' THEN
		 						DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(DECODE(X.TAX_CODE,'100',0.1,0) * ROUND(X.SALE_PRICE * X.TRANS_QTY))
		 					ELSE 
								DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(DECODE(X.TAX_CODE,'100',1,0) * X.SALE_VAT)
		 					END
		 					) AS SALE_VAT 
		 				, SUM(
		 					CASE WHEN X.FLAG = '1' THEN
		 						DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(DECODE(X.TAX_CODE,'100',1.1,1) * ROUND(X.SALE_PRICE * X.TRANS_QTY))
		 					ELSE
		 						DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY) + X.SALE_VAT
		 					END
		 					) AS SALE_SUM 
						</#if>
						-- 2) 구매원가_공급가액만 집계
          				, SUM(ROUND(X.UNIT_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1))) AS UNIT_AMOUNT
          				-- 3) 관리단가_공급가액만 집계
          				, SUM(ROUND(X.TRANS_MAMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1))) AS TRANS_AMOUNT
          				-- 4) 전략단가_공급가액만 집계
          				, SUM(DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.STRATEGY_PRICE * X.TRANS_QTY)) AS STRATEGY_AMOUNT 
          				-- CHECK 
          				, SUM(ROUND(X.CK_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1))) AS CK_AMT
          				, SUM(ROUND(X.CK_AMOUNT) + DECODE(X.TAX_CODE,100,ROUND(X.CK_AMOUNT / 10),0) * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)) AS CK_SUM
          				, SUM(ROUND(X.JI_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1))) AS JI_AMT
          				, SUM(ROUND(X.JI_AMOUNT) + DECODE(X.TAX_CODE,100,ROUND(X.JI_AMOUNT / 10),0) * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)) AS JI_SUM
    			FROM
        				(
        					SELECT
            						  T.MAIN_UPJANG
            						, T.UPJANG
              						, T.SUBINV_CODE
              						, T.TRANS_DATE
              						, T.ITEM_CODE
              						, T.ITEM_NAME
              						, T.ITEM_SIZE
              						, T.TRANS_UOM
              						, T.TRANS_TYPE
              						, T.TRANS_QTY
              						, T.UNIT_PRICE
              						, DECODE(SUBSTR(T.TRANS_TYPE,1,1),'I',1,-1) * ROUND(T.UNIT_PRICE * T.TRANS_QTY) AS UNIT_AMOUNT
              						, T.TRANS_MPRICE
              						, T.TRANS_MAMOUNT
              						, T.TRANS_MVAT
              						, T.SALE_PRICE
              						, T.SALE_AMOUNT
              						, T.SALE_VAT
              						, T.STRATEGY_RATE
                                    , CASE WHEN T.ATTR09 = 'Y' THEN  T.TRANS_MPRICE
                                      ELSE
                                      		(CASE WHEN T.STRATEGY_RATE = 0 THEN T.TRANS_MPRICE
                                      		ELSE  FMS_GETPRICE_TYPE_FUN('S', T.TRANS_MPRICE, T.STRATEGY_RATE, 0, 0, 0)
                                      		END)
                                      END AS STRATEGY_PRICE
              						, T.TAX_CODE
              						, T.FLAG
			      					, T.DEPT_ID
			      					, T.PART_SALES_SABUN
		     			    		, CASE WHEN NVL(T.SALE_AMOUNT, 0) = 0 THEN 0
							  		  ELSE
			    							CASE WHEN NVL(T.C_SALE_RATE, 0) = 0 THEN  
												CASE WHEN NVL(T.C1_SALE_RATE, 0) = 0 THEN 0 
                                        		ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.C1_SALE_RATE,0) / 100)))) END			    					
			    							ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.C_SALE_RATE,0) / 100))))
			    							END 
							  		   END AS CK_AMOUNT
		      						, CASE WHEN NVL(T.SALE_AMOUNT, 0) = 0 THEN 0
							  		  ELSE
			    								CASE WHEN NVL(T.J_SALE_RATE, 0) = 0 THEN 
													CASE WHEN NVL(T.J1_SALE_RATE, 0) = 0 THEN 0 
                                        			ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.J1_SALE_RATE,0) / 100)))) END			    					
			    					  			ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.J_SALE_RATE,0) / 100))))
			    					  			END 
							  		  END AS JI_AMOUNT
								 , DECODE(NVL(T.S_SALE_RATE,0), 0, NVL(T.S1_SALE_RATE,0), 0) AS SE_RATE			
        					FROM
            						(
                						SELECT
										<#if schMainUpjang?has_content || schUpjang?has_content>
											/*+ PUSH_PRED(A) */
										</#if>
											  Z.MAIN_UPJANG
                    						, A.TRANS_UPJANG AS UPJANG
                                      		, A.SUBINV_CODE
											<#if schGubun=="1">
									 		, A.TRANS_DATE
			      							<#else>
									  		, A.MG_DATE AS TRANS_DATE
           									</#if>
                      						, A.ITEM_CODE
                      						, A.ITEM_NAME
                      						, A.ITEM_SIZE
                      						, A.TRANS_UOM
                      						, A.TRANS_TYPE
                      						, A.TRANS_QTY
				      						, NVL(A.UNIT_PRICE, 0) AS UNIT_PRICE					/* 구매원가_단가 :  수불상의 단가정보 상이함, PO_CONTRACT_FSALE 참조함 */	
                      						--, NVL((SELECT /*+ INDEX(F PO_CONTRACT_FSALE_PK) */
                      						--		NVL(F.PO_PRICE, 0)
                      						--   FROM PO_CONTRACT_FSALE F
                       						--   WHERE F.CENTER_CODE = (SELECT Z.CENTER_CODE FROM VO_CENTER_UPJANG Z WHERE Z.UPJANG = A.TRANS_UPJANG)
                         					--   AND    F.UPJANG = (SELECT AP_UNITPRICE_UPJANG FROM ST_UPJANG WHERE UPJANG = A.TRANS_UPJANG)     
                         					--   AND    A.TRANS_DATE BETWEEN F.CONTRACT_START AND F.CONTRACT_END
                         					--   AND    F.ITEM_CODE = A.ITEM_CODE
                      						--   AND    ROWNUM <= 1
                      						--   ),0) AS UNIT_PRICE
				      						, NVL(A.TRANS_MPRICE, 0) AS TRANS_MPRICE				/* 관리단가_단가 */
				      						, NVL(A.TRANS_MAMOUNT, 0) AS TRANS_MAMOUNT	/* 관리단가_금액 */
				      						, NVL(A.TRANS_MVAT, 0) AS TRANS_MVAT					/* 관리단가_부가세 */
                      						, NVL(A.SALE_PRICE, 0) AS SALE_PRICE						/* 판매단가_단가 */
                      						, NVL(A.SALE_AMOUNT, 0) AS SALE_AMOUNT				/* 판매단가_금액 */
                      						, NVL(A.SALE_VAT, 0) AS SALE_VAT							/* 판매단가_부가세 */
                      						--, NVL((SELECT /*+ INDEX(F PO_CONTRACT_FSALE_I4) */
                      						--		NVL(F.STRATEGY_PRICE, 0)
                      						--   FROM PO_CONTRACT_FSALE F
                       						  -- WHERE F.CENTER_CODE = A.CENTER_CODE
                         					--   WHERE    F.UPJANG = (SELECT AP_UNITPRICE_UPJANG FROM ST_UPJANG WHERE UPJANG = A.TRANS_UPJANG)     
                         					--   AND    A.TRANS_DATE BETWEEN F.CONTRACT_START AND F.CONTRACT_END
                         					--   AND    F.ITEM_CODE = A.ITEM_CODE
                      						--   AND    ROWNUM <= 1
                      						--   ),0) AS STRATEGY_PRICE
                      						, A.TAX_CODE
                      						, A.FLAG
					      					, B2.DEPT_ID
					      					, Z.PART_SALES_SABUN
				     						, Z.ATTR09														/* 전략이익 제외여부 */
				     						-- 전략이익율은 자재별 기준만 GET
                                            , NVL((SELECT /*+ INDEX(F FMS_STRATEGY_PROFIT_IDX01) */  
                                                        		NVL(F.STRATEGY_RATE,0)
                                                      FROM FMS_STRATEGY_PROFIT F
                                                   	  WHERE F.CENTER_CODE = A.CENTER_CODE
                                           			  AND    F.CC_CD = (SELECT CC_CD FROM ST_UPJANG WHERE UPJANG = A.TRANS_UPJANG)
                                           			  AND    A.TRANS_DATE BETWEEN F.PROFIT_DATE AND F.PROFIT_END    
                                           			  AND    F.CLASS_TYPE = 'M'
                                               		  AND    F.ITEM_CODE = A.ITEM_CODE
                                               		  ),0) AS STRATEGY_RATE
         									/*검색 조건 : CK물류비제외*/
         									<#if schChk1?has_content>
				      						, CASE WHEN A.TAX_CODE = '100' THEN
													(CASE WHEN NVL(C2.FM_SALE_RATE, 0) = 0 THEN NVL(C1.FM_SALE_RATE, 0)
													 ELSE NVL(C2.FM_SALE_RATE, 0)
													END)
									 		ELSE 
													(CASE WHEN NVL(C2.FM_NOSALE_RATE, 0) = 0 THEN NVL(C1.FM_NOSALE_RATE, 0)
										 			ELSE NVL(C2.FM_NOSALE_RATE, 0)
													END)
									 		END AS C1_SALE_RATE							/* 분류 기준 CK 물류비율 */	
				      			 			, FMS_ITEM_SALE_RATE_CODE_FUN(A.TAX_CODE, A.TRANS_UPJANG, A.SUBINV_CODE, '001', A.ITEM_CODE, A.TRANS_DATE) AS C_SALE_RATE		/* 자재별 CK 비율 */
				      						<#else>
				      						, 0 AS C1_SALE_RATE								/* 분류 기준 CK 물류비율 */
				      						, 0 AS C_SALE_RATE									/* 자재 기준 CK 물류비율 */
											</#if>
         									/*검색 조건 : 지급수수료제외*/
         									<#if schChk2?has_content>
				      						, CASE WHEN A.TAX_CODE = '100' THEN
													(CASE WHEN NVL(J2.FM_SALE_RATE, 0) = 0 THEN NVL(J1.FM_SALE_RATE, 0)
													ELSE NVL(J2.FM_SALE_RATE, 0)
													END)
									  		 ELSE 
													(CASE WHEN NVL(J2.FM_NOSALE_RATE, 0) = 0 THEN NVL(J1.FM_NOSALE_RATE, 0)
										 			ELSE NVL(J2.FM_NOSALE_RATE, 0)
													END)
									  		 END AS J1_SALE_RATE								/* 분류 기준 지급수수료 비율 */	
				     				 		, FMS_ITEM_SALE_RATE_CODE_FUN(A.TAX_CODE, A.TRANS_UPJANG, A.SUBINV_CODE, '002', A.ITEM_CODE, A.TRANS_DATE) AS J_SALE_RATE	/* 자재별 지급수수료 비율 */
				      						<#else>
				      				 		, 0 AS J1_SALE_RATE									/* 분류 기준 지급수수료 비율 */
				     				 		, 0 AS J_SALE_RATE		/* 자재별 지급수수료 비율 */
											</#if>
         									/*검색 조건 : 장려금제외*/
         									<#if schChk3?has_content>
				      			    		, CASE WHEN A.TAX_CODE = '100' THEN
													(CASE WHEN NVL(S2.FM_SALE_RATE, 0) = 0 THEN NVL(S1.FM_SALE_RATE, 0)
										 			ELSE NVL(S2.FM_SALE_RATE, 0)
										 		END)
									  		 ELSE 
													(CASE WHEN NVL(S2.FM_NOSALE_RATE, 0) = 0 THEN NVL(S1.FM_NOSALE_RATE, 0)
													ELSE NVL(S2.FM_NOSALE_RATE, 0)
													END)
											 END AS S1_SALE_RATE								/* 분류 기준 장려금 비율 */	
				     			  		, FMS_ITEM_SALE_RATE_CODE_FUN(A.TAX_CODE, A.TRANS_UPJANG, A.SUBINV_CODE, '003', A.ITEM_CODE, A.TRANS_DATE) AS S_SALE_RATE		/* 자재별 장려금 비율 */
				      					<#else>
								 	 	, 0 AS S1_SALE_RATE									/* 분류 기준 장려금 비율 */	
				     			  		, 0 AS S_SALE_RATE									/* 자재별 장려금 비율 */
										</#if>
 										FROM FMS_TRANSACTION_V A
                                     											INNER JOIN ST_UPJANG B2 ON 1 = 1
             																									/*검색 조건 : 본사*/
           																										<#if schMainUpjang?has_content>
           																										AND B2.UPJANG IN (SELECT UPJANG FROM FMS_UPJANG WHERE  MAIN_UPJANG = :schMainUpjang)
           																										</#if>
            																									 /*검색 조건 : 사업장*/
           																										<#if schUpjang?has_content>
           																										AND B2.UPJANG = :schUpjang
           																										</#if>
																												 AND A.TRANS_UPJANG = B2.UPJANG
																				INNER JOIN FMS_UPJANG Z ON 1 = 1
            																									 /*검색 조건 : 영업담당*/
           																										<#if schSabun?has_content>
           																		  								 AND Z.PART_SALES_SABUN = :schSabun
																												</#if>
																				  								 AND A.TRANS_UPJANG = Z.UPJANG
																				INNER JOIN HLDC_SC_DEPT_V D ON  1 = 1
           																												/*검색 조건 : 관리부서(팀)*/
           																												<#if schTm?has_content>
           																												AND D.TM_CD = :schTm
           																												</#if>
           																												/*검색 조건 : CC */
           																												<#if schCc?has_content>
           																												AND D.CC_CD = :schCc
           																												</#if>
																														AND  B2.DEPT_ID = D.DEPT_ID
                                        										LEFT JOIN HLDC_PO_ITEM_MST M ON SUBSTR(M.ITEM_CODE, 1, 1) = 'F'
                                                               																 AND A.ITEM_CODE = M.ITEM_CODE
                                    											/* 전략이익율 연계 : 2015-11-17 */                             					  
																				--LEFT JOIN FMS_STRATEGY_PROFIT FM ON FM.CENTER_CODE = A.CENTER_CODE        	/* 조건 : 센터코드 */
													  							--	  AND FM.CC_CD IN (SELECT CC_CD FROM ST_UPJANG WHERE UPJANG = A.TRANS_UPJANG)		/* 조건 : 업장코드 */
													  							--	  AND A.TRANS_DATE2 BETWEEN FM.PROFIT_DATE AND FM.PROFIT_END					/* 조건 : 전략이익율 기준일자 */
													  							--	  AND FM.CLASS_TYPE = 'M'																				/* 조건 : 자재 기준 */
													  							--	  AND A.ITEM_CODE = FM.ITEM_CODE		 														    							  

																				--LEFT JOIN FMS_STRATEGY_PROFIT FM1 ON FM1.CENTER_CODE = A.CENTER_CODE        /* 조건 : 센터코드 */
													  							--	  AND FM1.CC_CD IN (SELECT CC_CD FROM ST_UPJANG WHERE UPJANG = A.TRANS_UPJANG)		/* 조건 : 업장코드 */
													  							--	  AND A.TRANS_DATE2 BETWEEN FM1.PROFIT_DATE AND FM1.PROFIT_END					/* 조건 : 전략이익율 기준일자 */
													  							--	  AND FM1.CLASS_TYPE = 'D'					/* 조건 : 세분류 기준 */
													  							--	  AND M.ITEM_CLASS4 = FM1.ITEM_CODE		 														    							  
                                                               																 
                                         											-- 추가 : 특약사항관련 : 중분류, 소분류
         																	<#if schChk1?has_content>
																			LEFT JOIN FMS_SALE_RATE C1 ON C1.UPJANG = A.TRANS_UPJANG
																													AND C1.SUBINV_CODE = A.SUBINV_CODE
																													AND C1.CASH_CODE = '001'			/* CK물류비(001) */
																													AND A.TRANS_DATE BETWEEN C1.SDATE AND C1.EDATE
																													AND M.ITEM_CLASS3 = C1.ITEM_CLASS /* 중분류 */
																			LEFT JOIN FMS_SALE_RATE C2 ON C2.UPJANG = A.TRANS_UPJANG
																													AND C2.SUBINV_CODE = A.SUBINV_CODE
																													AND C2.CASH_CODE = '001'			/* CK물류비(001) */
																													AND A.TRANS_DATE BETWEEN C2.SDATE AND C2.EDATE
																													AND M.ITEM_CLASS4 = C2.ITEM_CLASS	/* 소분류 */
																			</#if>
         																	<#if schChk2?has_content>
																			LEFT JOIN FMS_SALE_RATE J1 ON J1.UPJANG = A.TRANS_UPJANG
																													AND J1.SUBINV_CODE = A.SUBINV_CODE
																													AND J1.CASH_CODE = '002'			/* 지급수수료(002) */
																													AND A.TRANS_DATE BETWEEN J1.SDATE AND J1.EDATE
																													AND M.ITEM_CLASS3 = J1.ITEM_CLASS /* 중분류 */
																			LEFT JOIN FMS_SALE_RATE J2 ON J2.UPJANG = A.TRANS_UPJANG
																													AND J2.SUBINV_CODE = A.SUBINV_CODE
																													AND J2.CASH_CODE = '002'			/* 지급수수료(002) */
																													AND A.TRANS_DATE BETWEEN J2.SDATE AND J2.EDATE
																													AND M.ITEM_CLASS4 = J2.ITEM_CLASS	/* 소분류 */
																			</#if>
         																	<#if schChk3?has_content>
																			LEFT JOIN FMS_SALE_RATE S1 ON S1.UPJANG = A.TRANS_UPJANG
																													AND S1.SUBINV_CODE = A.SUBINV_CODE
																													AND S1.CASH_CODE = '003'			/* 장려금(003) */
																													AND A.TRANS_DATE BETWEEN S1.SDATE AND S1.EDATE
																													AND M.ITEM_CLASS3 = S1.ITEM_CLASS /* 중분류 */
																			LEFT JOIN FMS_SALE_RATE S2 ON S2.UPJANG = A.TRANS_UPJANG
																													AND S2.SUBINV_CODE = A.SUBINV_CODE
																													AND S2.CASH_CODE = '003'			/* 장려금(003) */
																													AND A.TRANS_DATE BETWEEN S2.SDATE AND S2.EDATE
																													AND M.ITEM_CLASS4 = S2.ITEM_CLASS /* 소분류 */
																			</#if>
                						WHERE SUBSTR(A.SUBINV_CODE, 1, 2) = 'S1'
                						AND (A.TRANS_TYPE IN '_002' OR A.TRANS_TYPE = 'I001' )
           								/*검색 조건 : 기간*/
										<#if schGubun=="1">
           								AND A.TRANS_DATE2 BETWEEN :schFromDate AND :schToDate
			      						<#else>
           								AND A.MG_DATE BETWEEN :schFromDate AND :schToDate
           								</#if>
           								/*검색 조건 : 센터*/     
           								<#if schCenter?has_content>
           									<#if schCenter != '*'>
           									AND A.CENTER_CODE = :schCenter
           									</#if>
           								</#if>
             							/*검색 조건 : 납품업체*/
           								<#if schCustCd?has_content>
           								AND A.CUSTCD = :schCustCd
           								</#if>
            				) T 
        			) X         
			 	GROUP BY  X.MAIN_UPJANG, X.UPJANG, X.DEPT_ID, X.PART_SALES_SABUN
  			) RS
        )
		SELECT
	       	CASE
		 		WHEN GROUPING(PART_SALES_SABUN) = 1 AND GROUPING(MAIN_UPJANG) = 1 AND GROUPING(UPJANG) = 1 THEN '총합계'
		 		WHEN GROUPING(PART_SALES_SABUN) = 0 AND GROUPING(MAIN_UPJANG) = 1 AND GROUPING(UPJANG) = 1 THEN '영업사원 소계'
		 		WHEN GROUPING(PART_SALES_SABUN) = 0 AND GROUPING(MAIN_UPJANG) = 0 AND GROUPING(UPJANG) = 1 THEN '본사 소계'
		 		ELSE ''
	       END AS LINE_NAME
	     , CC_NM
	     , PART_SALES_SABUN
	     , MAIN_UPJANG
	     , MAIN_UPJANGNM
	     , UPJANG
	     , UPJANGNM
		 , SUM(SALE_AMOUNT) AS SALE_AMOUNT
		 , SUM(SALE_VAT) AS SALE_VAT
		 , SUM(UNIT_AMOUNT) AS UNIT_AMOUNT
		 , SUM(TRANS_AMOUNT) AS TRANS_AMOUNT
		 , SUM(STRATEGY_AMOUNT) AS STRATEGY_AMOUNT
		 , SUM(TRANS_MARGIN) AS TRANS_MARGIN
		 , SUM(STRATEGY_MARGIN) AS STRATEGY_MARGIN
		 , SUM(SALE_MARGIN) AS SALE_MARGIN
		 , SUM(SUM_MARGIN) AS SUM_MARGIN
	  FROM A
	 GROUP BY ROLLUP(PART_SALES_SABUN, (MAIN_UPJANG, MAIN_UPJANGNM), (UPJANG, UPJANGNM, CC_NM))
		]]>
	</statement>


</hqml>


