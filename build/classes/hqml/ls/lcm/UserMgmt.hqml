<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="ls.lcm.userMgmtDAO">
	<desc>LIMS 담당자를 관리한다.</desc>

	<!-- 담당자를 조회한다. -->
	<statement name="selectUserMgmtList" type="select">
		/*+ com.hwfs.ls.lcm.dao.UserMgmtDAO.selectUserMgmtList */
		<![CDATA[
/* 담당자 조회 */
SELECT A.AUTH_CD,
       A.SABUN,
       (SELECT X.NM_KOR FROM HR_PERSONAL X WHERE X.SABUN = A.SABUN) AS USER_NM,
       A.INSPT_FLD,
       A.APPEND_FILENM,
       B.SVR_FILENM,
       DECODE(A.USE_YN, 'Y', '1', '0') AS USE_YN,
       A.CUSER,
       A.CDATE,
       A.SIGN_FILE,
       '' AS IS_UPLOAD,
       --CASE WHEN A.SIGN_FILE IS NULL THEN 'N' ELSE 'Y' END AS SIGNFILE_EXISTS
       --CASE WHEN A.SVR_FILENM IS NULL THEN 'N' ELSE 'Y' END AS SIGNFILE_EXISTS
       CASE WHEN B.SVR_FILENM IS NOT NULL THEN 'Y' ELSE 'N' END AS SIGNFILE_EXISTS,
       (SELECT NM_KOR
          FROM SCC_USERINFO
         WHERE SABUN = A.UUSER) AS UUSER,
       TO_CHAR(A.UDATE, 'YYYYMMDD') AS UDATE
FROM   LCM_USER A
     , (
        SELECT SABUN, MAX(SVR_FILENM) AS SVR_FILENM
          FROM LCM_USER
         GROUP BY SABUN
       ) B
WHERE  1 = 1
 AND A.SABUN = B.SABUN
<#if authCd?has_content> AND A.AUTH_CD = :authCd </#if>
<#if userNm?has_content>
 AND A.SABUN IN (SELECT Y.SABUN FROM HR_PERSONAL Y WHERE Y.NM_KOR LIKE '%' || :userNm || '%')
</#if>
ORDER BY A.AUTH_CD, A.SABUN
        ]]>
	</statement>

	<!-- 권한별 담당자를 조회한다. -->
	<statement name="selectUserList" type="select">
		/*+ com.hwfs.ls.lcm.dao.UserMgmtDAO.selectUserList */
		<![CDATA[
/* 담당자 조회 */
SELECT A.AUTH_CD,
       A.SABUN,
       (SELECT X.NM_KOR FROM HR_PERSONAL X WHERE X.SABUN = A.SABUN) ||
       CASE WHEN A.INSPT_FLD IS NULL THEN
           ''
       ELSE
           '(' || SCC_CODE_NM('INSPT_FLD', A.INSPT_FLD) || ')'
       END AS USER_NM,
       A.INSPT_FLD,
       A.APPEND_FILENM,
       A.SVR_FILENM,
       DECODE(A.USE_YN, 'Y', '1', '0') AS USE_YN,
       A.CUSER,
       A.CDATE,
       A.UUSER,
       A.UDATE,
       A.SIGN_FILE,
       '' AS IS_UPLOAD,
       --CASE WHEN A.SIGN_FILE IS NULL THEN 'N' ELSE 'Y' END AS SIGNFILE_EXISTS
       CASE WHEN A.SVR_FILENM IS NULL THEN 'N' ELSE 'Y' END AS SIGNFILE_EXISTS
FROM   LCM_USER A
WHERE  1 = 1
  AND  A.USE_YN = 'Y'
<#if authCd?has_content> AND A.AUTH_CD = :authCd </#if>
<#if userNm?has_content>
 AND A.SABUN IN (SELECT Y.SABUN FROM HR_PERSONAL Y WHERE Y.NM_KOR LIKE '%' || :userNm || '%')
</#if>
ORDER BY 1, 4, 3
        ]]>
	</statement>

	<!-- 담당자를 조회한다. -->
	<statement name="selectUser" type="select">
		/*+ com.hwfs.ls.lcm.dao.UserMgmtDAO."selectUser" */
		<![CDATA[
/* 담당자 생성 */
SELECT COUNT(1)
  FROM LCM_USER
 WHERE AUTH_CD = :authCd
   AND SABUN = :sabun
        ]]>
	</statement>

	<!-- 담당자를 생성한다. -->
	<statement name="insertUserList" type="insert">
		/*+ com.hwfs.ls.lcm.dao.UserMgmtDAO.insertUserList */
		<![CDATA[
/* 담당자 생성 */
INSERT INTO LCM_USER
(
 AUTH_CD,
 SABUN,
 INSPT_FLD,
 APPEND_FILENM,
 SVR_FILENM,
 USE_YN,
 SIGN_FILE,
 CUSER,
 CDATE,
 UUSER,
 UDATE
) VALUES (
 :authCd,
 :sabun,
<#if insptFld?exists> :insptFld, <#else> null, </#if>
<#if appendFilenm?exists> :appendFilenm, <#else> null, </#if>
<#if svrFilenm?exists> :svrFilenm, <#else> null, </#if>
<#if useYn?exists> DECODE(:useYn, '1', 'Y', 'N'), <#else> null, </#if>
<#if signFile?exists> null, <#else> null, </#if>
 :loginSabun,
 SYSDATE,
 :loginSabun,
 SYSDATE
)
        ]]>
	</statement>

	<!-- 담당자를 수정한다. -->
	<statement name="updateUserList" type="update">
		/*+ com.hwfs.ls.lcm.dao.UserMgmtDAO.updateUserList */
		<![CDATA[
/* 담당자 저장 */
UPDATE LCM_USER SET
<#if insptFld?exists> INSPT_FLD = :insptFld, </#if>
<#if appendFilenm?exists> APPEND_FILENM = :appendFilenm, </#if>
<#if svrFilenm?exists> SVR_FILENM = :svrFilenm, </#if>
<#if useYn?exists> USE_YN = DECODE(:useYn, '1', 'Y', 'N'), </#if>
<#if signFile?exists> SIGN_FILE = null, </#if>
       UUSER = :loginSabun,
       UDATE = SYSDATE
WHERE  AUTH_CD = :authCd
<#if insptFld?has_content>AND INSPT_FLD = :insptFld</#if>
AND    SABUN = :sabun
        ]]>
	</statement>

	<!-- 담당자를 삭제한다. -->
	<statement name="deleteUserList" type="delete">
		/*+ com.hwfs.ls.lcm.dao.UserMgmtDAO.deleteUserList */
		<![CDATA[
/* 담당자 삭제 */
UPDATE LCM_USER
   SET USE_YN = 'N',
       UUSER = :loginSabun,
       UDATE = SYSDATE
 WHERE AUTH_CD = :authCd
   <#if insptFld?has_content>AND INSPT_FLD = :insptFld</#if>
   AND SABUN = :sabun

--DELETE
--FROM   LCM_USER
--WHERE  AUTH_CD = :authCd
--AND    SABUN = :sabun
        ]]>
	</statement>

	<!-- 식품연구소 사원을 조회한다. -->
	<statement name="selectHrUserList" type="select"><![CDATA[
/* 식품연구소 사원 조회 */
SELECT A.SABUN,
       A.NM_KOR,
       B.MU_CD,
       (SELECT MU_NM FROM SCC_MU WHERE MU_CD = B.MU_CD) AS MU_NM,
       B.TM_CD,
       B.TM_NM,
       B.CC_CD,
       B.CC_NM
FROM   HR_PERSONAL A,
       HLDC_SC_DEPT_V B
WHERE  B.CC_CD = A.CC_CD
AND    B.MU_CD = '2001'
/* 2018.02.12 김명섭 [CH201802_00167] 조직코드 및 CC코드 변경으로 조건 변경(CCF->CAB) */
/* 2020.07.07 김중한 [CSR200700000171] 조직변경에 대한 조정불가(현업) 전체조회로 변경 */
--AND    B.TM_CD = 'CAB'
AND    (
        A.GB_JAEJIK = 'AA'
       )
<#if edtSearch?has_content> AND (A.SABUN = :edtSearch OR A.NM_KOR LIKE '%' || :edtSearch || '%') </#if>
ORDER BY B.CC_NM, A.SABUN, A.NM_KOR
        ]]></statement>

</hqml>
