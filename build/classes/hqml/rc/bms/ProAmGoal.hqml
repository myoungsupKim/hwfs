<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="rc.bms.proAmGoalDAO">
	<desc>모표관리.</desc>

 
	
	
	<!--  DATA를 조회한다. -->
	<statement name="selectList" type="select">
		<![CDATA[

			SELECT 
				   MAST.AM_CD,
				   MAST.GOAL_YEAR,
			       MAST.SEQ,
			       
			       MAST.OUTLET_CD, SHOP.OUTLET_NM AS OUTLET_NM,  --업장명
				    
			       MAST.GOAL_PSN,
			       MAST.GOAL_ROOM,
			       MAST.GOAL_AMT,
			       
			       MAST.ROOM01,
			       MAST.ROOM02,
			       MAST.ROOM03,
			       MAST.ROOM04,
			       MAST.ROOM05,
			       MAST.ROOM06,
			       MAST.ROOM07,
			       MAST.ROOM08,
			       MAST.ROOM09,
			       MAST.ROOM10,
			       MAST.ROOM11,
			       MAST.ROOM12,
			       MAST.FNB01,
			       MAST.FNB02,
			       MAST.FNB03,
			       MAST.FNB04,
			       MAST.FNB05,
			       MAST.FNB06,
			       MAST.FNB07,
			       MAST.FNB08,
			       MAST.FNB09,
			       MAST.FNB10,
			       MAST.FNB11,
			       MAST.FNB12,
			       MAST.CATER01,
			       MAST.CATER02,
			       MAST.CATER03,
			       MAST.CATER04,
			       MAST.CATER05,
			       MAST.CATER06,
			       MAST.CATER07,
			       MAST.CATER08,
			       MAST.CATER09,
			       MAST.CATER10,
			       MAST.CATER11,
			       MAST.CATER12,
			       
			    
			       
			       DECODE(MAST.USE_YN, 'Y', 1, 0) AS USE_YN,
			       MAST.CDATE,
			       MAST.CUSER,
			       MAST.UDATE,
			       MAST.UUSER
			       
			FROM   BMS_AM_GOAL         MAST
			INNER JOIN SLE_OUTLET_MST  SHOP ON SHOP.OUTLET_CD  = MAST.OUTLET_CD
			WHERE  MAST.AM_CD = :amCd
			AND    MAST.GOAL_YEAR = :goalYear


		]]>
	</statement>
		
	<!--  DATA를 저장한다. -->
	<statement name="insertData" type="insert">
		<![CDATA[
	 	INSERT INTO BMS_AM_GOAL
			(
			 AM_CD,
			 GOAL_YEAR,
			 SEQ,
			 OUTLET_CD,
			 GOAL_PSN,
			 GOAL_ROOM,
			 GOAL_AMT,
			 ROOM01,
			 ROOM02,
			 ROOM03,
			 ROOM04,
			 ROOM05,
			 ROOM06,
			 ROOM07,
			 ROOM08,
			 ROOM09,
			 ROOM10,
			 ROOM11,
			 ROOM12,
			 FNB01,
			 FNB02,
			 FNB03,
			 FNB04,
			 FNB05,
			 FNB06,
			 FNB07,
			 FNB08,
			 FNB09,
			 FNB10,
			 FNB11,
			 FNB12,
			 CATER01,
			 CATER02,
			 CATER03,
			 CATER04,
			 CATER05,
			 CATER06,
			 CATER07,
			 CATER08,
			 CATER09,
			 CATER10,
			 CATER11,
			 CATER12,
		
			 USE_YN,
			 CDATE,
			 CUSER,
			 UDATE,
			 UUSER
			 
			 
			) VALUES (
			:amCd,
			:goalYear,
			:seq,
			<#if outletCd?exists> :outletCd, <#else> null, </#if>
			<#if goalPsn?exists> :goalPsn, <#else> null, </#if>
			<#if goalRoom?exists> :goalRoom, <#else> null, </#if>
			<#if goalAmt?exists> :goalAmt, <#else> null, </#if>
			<#if room01?exists> :room01, <#else> null, </#if>
			<#if room02?exists> :room02, <#else> null, </#if>
			<#if room03?exists> :room03, <#else> null, </#if>
			<#if room04?exists> :room04, <#else> null, </#if>
			<#if room05?exists> :room05, <#else> null, </#if>
			<#if room06?exists> :room06, <#else> null, </#if>
			<#if room07?exists> :room07, <#else> null, </#if>
			<#if room08?exists> :room08, <#else> null, </#if>
			<#if room09?exists> :room09, <#else> null, </#if>
			<#if room10?exists> :room10, <#else> null, </#if>
			<#if room11?exists> :room11, <#else> null, </#if>
			<#if room12?exists> :room12, <#else> null, </#if>
			<#if fnb01?exists> :fnb01, <#else> null, </#if>
			<#if fnb02?exists> :fnb02, <#else> null, </#if>
			<#if fnb03?exists> :fnb03, <#else> null, </#if>
			<#if fnb04?exists> :fnb04, <#else> null, </#if>
			<#if fnb05?exists> :fnb05, <#else> null, </#if>
			<#if fnb06?exists> :fnb06, <#else> null, </#if>
			<#if fnb07?exists> :fnb07, <#else> null, </#if>
			<#if fnb08?exists> :fnb08, <#else> null, </#if>
			<#if fnb09?exists> :fnb09, <#else> null, </#if>
			<#if fnb10?exists> :fnb10, <#else> null, </#if>
			<#if fnb11?exists> :fnb11, <#else> null, </#if>
			<#if fnb12?exists> :fnb12, <#else> null, </#if>
			<#if cater01?exists> :cater01, <#else> null, </#if>
			<#if cater02?exists> :cater02, <#else> null, </#if>
			<#if cater03?exists> :cater03, <#else> null, </#if>
			<#if cater04?exists> :cater04, <#else> null, </#if>
			<#if cater05?exists> :cater05, <#else> null, </#if>
			<#if cater06?exists> :cater06, <#else> null, </#if>
			<#if cater07?exists> :cater07, <#else> null, </#if>
			<#if cater08?exists> :cater08, <#else> null, </#if>
			<#if cater09?exists> :cater09, <#else> null, </#if>
			<#if cater10?exists> :cater10, <#else> null, </#if>
			<#if cater11?exists> :cater11, <#else> null, </#if>
			<#if cater12?exists> :cater12, <#else> null, </#if>
		
			<#if useYn?exists> DECODE(:useYn, '1', 'Y', 'N'), <#else> null, </#if>
			SYSDATE,
			:loginSabun,
			SYSDATE,
			:loginSabun
			 
			)
	 
 
		]]>
	</statement>
	
	<!--  DATA를 수정한다. -->
	<statement name="updateData" type="update">
		<![CDATA[
		 UPDATE BMS_AM_GOAL SET
	 		<#if outletCd?exists> OUTLET_CD = :outletCd, </#if>
			<#if goalPsn?exists> GOAL_PSN = :goalPsn, </#if>
			<#if goalRoom?exists> GOAL_ROOM = :goalRoom, </#if>
			<#if goalAmt?exists> GOAL_AMT = :goalAmt, </#if>
			<#if room01?exists> ROOM01 = :room01, </#if>
			<#if room02?exists> ROOM02 = :room02, </#if>
			<#if room03?exists> ROOM03 = :room03, </#if>
			<#if room04?exists> ROOM04 = :room04, </#if>
			<#if room05?exists> ROOM05 = :room05, </#if>
			<#if room06?exists> ROOM06 = :room06, </#if>
			<#if room07?exists> ROOM07 = :room07, </#if>
			<#if room08?exists> ROOM08 = :room08, </#if>
			<#if room09?exists> ROOM09 = :room09, </#if>
			<#if room10?exists> ROOM10 = :room10, </#if>
			<#if room11?exists> ROOM11 = :room11, </#if>
			<#if room12?exists> ROOM12 = :room12, </#if>
			<#if fnb01?exists> FNB01 = :fnb01, </#if>
			<#if fnb02?exists> FNB02 = :fnb02, </#if>
			<#if fnb03?exists> FNB03 = :fnb03, </#if>
			<#if fnb04?exists> FNB04 = :fnb04, </#if>
			<#if fnb05?exists> FNB05 = :fnb05, </#if>
			<#if fnb06?exists> FNB06 = :fnb06, </#if>
			<#if fnb07?exists> FNB07 = :fnb07, </#if>
			<#if fnb08?exists> FNB08 = :fnb08, </#if>
			<#if fnb09?exists> FNB09 = :fnb09, </#if>
			<#if fnb10?exists> FNB10 = :fnb10, </#if>
			<#if fnb11?exists> FNB11 = :fnb11, </#if>
			<#if fnb12?exists> FNB12 = :fnb12, </#if>
			<#if cater01?exists> CATER01 = :cater01, </#if>
			<#if cater02?exists> CATER02 = :cater02, </#if>
			<#if cater03?exists> CATER03 = :cater03, </#if>
			<#if cater04?exists> CATER04 = :cater04, </#if>
			<#if cater05?exists> CATER05 = :cater05, </#if>
			<#if cater06?exists> CATER06 = :cater06, </#if>
			<#if cater07?exists> CATER07 = :cater07, </#if>
			<#if cater08?exists> CATER08 = :cater08, </#if>
			<#if cater09?exists> CATER09 = :cater09, </#if>
			<#if cater10?exists> CATER10 = :cater10, </#if>
			<#if cater11?exists> CATER11 = :cater11, </#if>
			<#if cater12?exists> CATER12 = :cater12, </#if>
	
			<#if useYn?exists> USE_YN = DECODE(:useYn, '1', 'Y', 'N'), </#if>
			UDATE = SYSDATE,
			UUSER = :loginSabun
		
		WHERE  AM_CD = :amCd
		AND    GOAL_YEAR = :goalYear
		AND    SEQ = :seq
		]]>
	</statement>
	
	<!--  코드를 생성한다. -->
	<statement name="maxCodeCreate" type="select">
		<![CDATA[
 		SELECT NVL(MAX(SEQ),'0') + 1 AS MAX_SEQ
 		FROM BMS_AM_GOAL
 		WHERE 1 = 1
 		<#if amCd?has_content>     AND AM_CD     = :amCd  </#if>
		<#if goalYear?has_content> AND GOAL_YEAR = :goalYear  </#if>
 		
		]]>
	</statement>
	
	
</hqml>	