<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="rc.bms.amAlreadyOrderListDAO">

	<desc>AM 수익분석</desc>
	
	<!-- DATA를 조회한다. -->
	<statement name="selectList" type="select">
		<![CDATA[
		
			
                
                
                SELECT SMGR.AM_TM_CD,  TEAM.CODE_NAME AS TEAM_NM    --팀명
	            	 , MAST.AM_CD,     SCC_CRYPTO.MASKAUTH_FUN(SMGR.AM_NM,12,:loginPersMask,:maskAuth) AS AM_NM --AM명
				     , MAST.KIND_CD,   KIND.CODE_NAME AS KIND_NM   --행사종류
	                 , MAST.OUTLET_CD, SHOP.OUTLET_NM AS OUTLET_NM --사업장명	
                	 , MAST.RESERV_NM
                	 , MAST.STR_DATE, MAST.END_DATE 
                     , TO_CHAR(TO_DATE(MAST.STR_DATE,'YYYY-MM-DD'),'YYYY-MM-DD') || '~' || 
		       		   TO_CHAR(TO_DATE(MAST.END_DATE,'YYYY-MM-DD'),'YYYY-MM-DD') AS RESERV_DATE
                     , MAST.RSVN_NM
                     , MAST.CUST_CD
                     , (SELECT A.CUSTNM      FROM ST_CUST A WHERE A.CUSTGUBUN IN ('002', '003') AND A.CUSTCD = MAST.CUST_CD) AS CUST_NM		--SAP고객명
					 , (SELECT A.SAP_CUST_CD FROM ST_CUST A WHERE A.CUSTGUBUN IN ('002', '003') AND A.CUSTCD = MAST.CUST_CD) AS SAP_CUST_CD --SAP코드

                     , DEPT.CODE_NAME AS PRCG_DEPT_NM	    --부서명
				     , DJOB.CODE_NAME AS JOB_POSITION_NM    --직위명
				     , CLAS.CODE_NAME AS CUST_CLASS_NM	    --고객구분
	
					 , MAST.RESERV_STATUS, STAT.CODE_NAME AS RESERV_STATUS_NM  --예약상태
                     , MAST.PSN  --인원수
                     , MAST.BEGIN_DATE --확정일자 
                     , MENU.TOT_AMT	AS TOT_AMT	--예상매출액
                     
                     , (SELECT DECODE(NVL(A.CUST_CD,'신규') , '신규','신규','기존')  FROM BMS_RESERV_MST A
                                   WHERE ROWNUM = 1  AND A.CUST_CD = MAST.CUST_CD  AND A.STR_DATE < :reservDtFr) AS NEW_CLASS
                  
	                  				
			   	FROM   BMS_RESERV_MST  MAST
			   	     INNER JOIN (SELECT RESERV_NUM, SUM(FNB_AMT) + SUM(ROM_AMT) AS TOT_AMT
                                                 
                                   FROM ( 
                                          SELECT A.RESERV_NUM, 0 AS FNB_AMT, SUM(A.TOT_AMT) AS ROM_AMT
                                          FROM BMS_RESERV_ROOM A
                                               INNER JOIN BMS_RESERV_MST B ON B.RESERV_NUM = A.RESERV_NUM
                                          WHERE A.USE_YN = 'Y'  
                                            AND A.RESERV_NUM = A.RESERV_NUM
                                            AND B.RESERV_STATUS IN ('2','3') 
                                            AND B.USE_YN = 'Y' 
                                            AND (( B.STR_DATE  BETWEEN :reservDtFr AND :reservDtTo OR B.END_DATE  BETWEEN :reservDtFr AND :reservDtTo )
                                              OR ( :reservDtFr BETWEEN B.STR_DATE  AND B.END_DATE  OR :reservDtTo BETWEEN B.STR_DATE  AND B.END_DATE ))  
                                          GROUP BY A.RESERV_NUM
                                          
                                          UNION ALL
                                          
                                          SELECT A.RESERV_NUM, SUM(TOT_AMT) AS FNB_AMT, 0  AS ROM_AMT
                                          FROM BMS_RESERV_MENU A 
                                               INNER JOIN BMS_RESERV_MST B ON B.RESERV_NUM = A.RESERV_NUM
                                               INNER JOIN BMS_AM_MST     C ON C.AM_CD      = B.AM_CD		                    
                                          WHERE A.USE_YN = 'Y'  
                                            AND A.RESERV_NUM = B.RESERV_NUM
                                            AND B.RESERV_STATUS IN ('2','3') 
                                            AND B.USE_YN = 'Y' 
                                            AND (( B.STR_DATE  BETWEEN :reservDtFr AND :reservDtTo OR B.END_DATE  BETWEEN :reservDtFr AND :reservDtTo )
                                              OR ( :reservDtFr BETWEEN B.STR_DATE  AND B.END_DATE  OR :reservDtTo BETWEEN B.STR_DATE  AND B.END_DATE ))
                                            <#if amCd?has_content >       AND B.AM_CD     = :amCd     </#if>
				  							<#if amTmCd?has_content >     AND C.AM_TM_CD  = :amTmCd   </#if>
                                            GROUP BY A.RESERV_NUM
                                            
                                        ) DUAL GROUP BY RESERV_NUM
                                ) MENU ON MENU.RESERV_NUM = MAST.RESERV_NUM                                            --예약 메뉴
                                
                     INNER JOIN SLE_OUTLET_MST  SHOP ON SHOP.OUTLET_CD = MAST.OUTLET_CD                                 --사업장 
                     INNER JOIN BMS_AM_MST      SMGR ON SMGR.AM_CD = MAST.AM_CD                                         --AM명칭
				     INNER JOIN SCC_COMMON_CODE TEAM ON TEAM.GROUP_CODE = 'BMS_0003' AND TEAM.CODE = SMGR.AM_TM_CD      --팀코드명
                     INNER JOIN SCC_COMMON_CODE RSRV ON RSRV.GROUP_CODE = 'BMS_0005' AND RSRV.CODE = MAST.RESERV_CD	    --행사형태
				     INNER JOIN SCC_COMMON_CODE STAT ON STAT.GROUP_CODE = 'BMS_0001' AND STAT.CODE = MAST.RESERV_STATUS	--예약상태
				     INNER JOIN SCC_COMMON_CODE KIND ON KIND.GROUP_CODE = 'BMS_0002' AND KIND.CODE = MAST.KIND_CD       --예약종류
                LEFT OUTER JOIN SCC_COMMON_CODE DEPT ON DEPT.GROUP_CODE = 'BMS_0009' AND DEPT.CODE = MAST.PRCG_DEPT		--부서
				LEFT OUTER JOIN SCC_COMMON_CODE DJOB ON DJOB.GROUP_CODE = 'BMS_0010' AND DJOB.CODE = MAST.JOB_POSITION	--직위
				LEFT OUTER JOIN SCC_COMMON_CODE CLAS ON CLAS.GROUP_CODE = 'BMS_0006' AND CLAS.CODE = MAST.CUST_CLASS	--고객구분
                
				WHERE MAST.USE_YN = 'Y'    --사용유무
				  AND MAST.RESERV_STATUS IN ('2','3') --확정,종료
	              AND (   ( MAST.STR_DATE BETWEEN :reservDtFr   AND :reservDtTo    OR  MAST.END_DATE BETWEEN :reservDtFr   AND :reservDtTo )
					         OR ( :reservDtFr   BETWEEN MAST.STR_DATE AND MAST.END_DATE  OR :reservDtTo    BETWEEN MAST.STR_DATE AND MAST.END_DATE ))
				  <#if amCd?has_content >       AND MAST.AM_CD     = :amCd     </#if>
				  <#if amTmCd?has_content >     AND SMGR.AM_TM_CD  = :amTmCd   </#if>
				 
	          
			
			       
		]]>
	</statement>
	
</hqml>	