<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="rc.bms.amTargetListDAO">

	<desc>AM 목표대비 실적현황</desc>
	
	<!-- DATA를 조회한다. -->
	<statement name="selectList" type="select">
		<![CDATA[
					 
		SELECT  TEAM_NM   --팀명
	          , AM_NM --담당자명

              , AVG(GOAL_AMT01) AS GOAL_AMT01
              , AVG(GOAL_AMT02) AS GOAL_AMT02
              , AVG(GOAL_AMT03) AS GOAL_AMT03
              , AVG(GOAL_AMT04) AS GOAL_AMT04
              , AVG(GOAL_AMT05) AS GOAL_AMT05
              , AVG(GOAL_AMT06) AS GOAL_AMT06
              , AVG(GOAL_AMT07) AS GOAL_AMT07
              , AVG(GOAL_AMT08) AS GOAL_AMT08
              , AVG(GOAL_AMT09) AS GOAL_AMT09
              , AVG(GOAL_AMT10) AS GOAL_AMT10
              , AVG(GOAL_AMT11) AS GOAL_AMT11
              , AVG(GOAL_AMT12) AS GOAL_AMT12
              , AVG(NVL(GOAL_AMT01,0) + NVL(GOAL_AMT02,0) + NVL(GOAL_AMT03,0) + NVL(GOAL_AMT04,0) + NVL(GOAL_AMT05,0) + NVL(GOAL_AMT06,0) + 
                    NVL(GOAL_AMT07,0) + NVL(GOAL_AMT08,0) + NVL(GOAL_AMT09,0) + NVL(GOAL_AMT10,0) + NVL(GOAL_AMT11,0) + NVL(GOAL_AMT12,0) )
                AS GOAL_AMT         
              
			  
			  , SUM(TOT_AMT01) AS TOT_AMT01
	          , SUM(TOT_AMT02) AS TOT_AMT02
	          , SUM(TOT_AMT03) AS TOT_AMT03
	          , SUM(TOT_AMT04) AS TOT_AMT04
	          , SUM(TOT_AMT05) AS TOT_AMT05
	          , SUM(TOT_AMT06) AS TOT_AMT06
	          , SUM(TOT_AMT07) AS TOT_AMT07
	          , SUM(TOT_AMT08) AS TOT_AMT08
	          , SUM(TOT_AMT09) AS TOT_AMT09
	          , SUM(TOT_AMT10) AS TOT_AMT10
	          , SUM(TOT_AMT11) AS TOT_AMT11
	          , SUM(TOT_AMT12) AS TOT_AMT12
	          , SUM(TOT_AMT0106) AS TOT_AMT0106
	          , SUM(TOT_AMT0712) AS TOT_AMT0712
	          , SUM(NVL(TOT_AMT01,0) + NVL(TOT_AMT02,0) + NVL(TOT_AMT03,0) + NVL(TOT_AMT04,0) + NVL(TOT_AMT05,0) + NVL(TOT_AMT06,0) + 
                    NVL(TOT_AMT07,0) + NVL(TOT_AMT08,0) + NVL(TOT_AMT09,0) + NVL(TOT_AMT10,0) + NVL(TOT_AMT11,0) + NVL(TOT_AMT12,0) )
                AS TOT_AMT
              
              , NVL(SUM(TOT_AMT01) * 100 / DECODE(AVG(GOAL_AMT01), 0, NULL, AVG(GOAL_AMT01)), 0) AS GOAL_PER01
              , NVL(SUM(TOT_AMT02) * 100 / DECODE(AVG(GOAL_AMT02), 0, NULL, AVG(GOAL_AMT02)), 0) AS GOAL_PER02
              , NVL(SUM(TOT_AMT03) * 100 / DECODE(AVG(GOAL_AMT03), 0, NULL, AVG(GOAL_AMT03)), 0) AS GOAL_PER03
              , NVL(SUM(TOT_AMT04) * 100 / DECODE(AVG(GOAL_AMT04), 0, NULL, AVG(GOAL_AMT04)), 0) AS GOAL_PER04
              , NVL(SUM(TOT_AMT05) * 100 / DECODE(AVG(GOAL_AMT05), 0, NULL, AVG(GOAL_AMT05)), 0) AS GOAL_PER05
              , NVL(SUM(TOT_AMT06) * 100 / DECODE(AVG(GOAL_AMT06), 0, NULL, AVG(GOAL_AMT06)), 0) AS GOAL_PER06
              , NVL(SUM(TOT_AMT07) * 100 / DECODE(AVG(GOAL_AMT07), 0, NULL, AVG(GOAL_AMT07)), 0) AS GOAL_PER07
              , NVL(SUM(TOT_AMT08) * 100 / DECODE(AVG(GOAL_AMT08), 0, NULL, AVG(GOAL_AMT08)), 0) AS GOAL_PER08
              , NVL(SUM(TOT_AMT09) * 100 / DECODE(AVG(GOAL_AMT09), 0, NULL, AVG(GOAL_AMT09)), 0) AS GOAL_PER09
              , NVL(SUM(TOT_AMT10) * 100 / DECODE(AVG(GOAL_AMT10), 0, NULL, AVG(GOAL_AMT10)), 0) AS GOAL_PER10
              , NVL(SUM(TOT_AMT11) * 100 / DECODE(AVG(GOAL_AMT11), 0, NULL, AVG(GOAL_AMT11)), 0) AS GOAL_PER11
              , NVL(SUM(TOT_AMT12) * 100 / DECODE(AVG(GOAL_AMT12), 0, NULL, AVG(GOAL_AMT12)), 0) AS GOAL_PER12
              , NVL(SUM(NVL(TOT_AMT01,0) + NVL(TOT_AMT02,0) + NVL(TOT_AMT03,0) + NVL(TOT_AMT04,0) + NVL(TOT_AMT05,0) + NVL(TOT_AMT06,0) + 
                    NVL(TOT_AMT07,0) + NVL(TOT_AMT08,0) + NVL(TOT_AMT09,0) + NVL(TOT_AMT10,0) + NVL(TOT_AMT11,0) + NVL(TOT_AMT12,0) ) * 100 / DECODE(NULlIF( 
                AVG(NVL(GOAL_AMT01,0) + NVL(GOAL_AMT02,0) + NVL(GOAL_AMT03,0) + NVL(GOAL_AMT04,0) + NVL(GOAL_AMT05,0) + NVL(GOAL_AMT06,0) + 
                    NVL(GOAL_AMT07,0) + NVL(GOAL_AMT08,0) + NVL(GOAL_AMT09,0) + NVL(GOAL_AMT10,0) + NVL(GOAL_AMT11,0) + NVL(GOAL_AMT12,0) ),0), 0, NULL, NULlIF( 
                AVG(NVL(GOAL_AMT01,0) + NVL(GOAL_AMT02,0) + NVL(GOAL_AMT03,0) + NVL(GOAL_AMT04,0) + NVL(GOAL_AMT05,0) + NVL(GOAL_AMT06,0) + 
                    NVL(GOAL_AMT07,0) + NVL(GOAL_AMT08,0) + NVL(GOAL_AMT09,0) + NVL(GOAL_AMT10,0) + NVL(GOAL_AMT11,0) + NVL(GOAL_AMT12,0) ),0)), 0)
              
              --, SUM(NVL(TOT_AMT01,0) + NVL(TOT_AMT02,0) + NVL(TOT_AMT03,0) + NVL(TOT_AMT04,0) + NVL(TOT_AMT05,0) + NVL(TOT_AMT06,0) + 
              --     NVL(TOT_AMT07,0) + NVL(TOT_AMT08,0) + NVL(TOT_AMT09,0) + NVL(TOT_AMT10,0) + NVL(TOT_AMT11,0) + NVL(TOT_AMT12,0) ) * 100 /
              --  NULlIF( 
              --  AVG(NVL(GOAL_AMT01,0) + NVL(GOAL_AMT02,0) + NVL(GOAL_AMT03,0) + NVL(GOAL_AMT04,0) + NVL(GOAL_AMT05,0) + NVL(GOAL_AMT06,0) + 
              --      NVL(GOAL_AMT07,0) + NVL(GOAL_AMT08,0) + NVL(GOAL_AMT09,0) + NVL(GOAL_AMT10,0) + NVL(GOAL_AMT11,0) + NVL(GOAL_AMT12,0) ),0)
                AS GOAL_PER   
              
              
              --전년
              , SUM(OLD_AMT01) AS OLD_AMT01
              , SUM(OLD_AMT02) AS OLD_AMT02
              , SUM(OLD_AMT03) AS OLD_AMT03
              , SUM(OLD_AMT04) AS OLD_AMT04
              , SUM(OLD_AMT05) AS OLD_AMT05
              , SUM(OLD_AMT06) AS OLD_AMT06
              , SUM(OLD_AMT07) AS OLD_AMT07
              , SUM(OLD_AMT08) AS OLD_AMT08
              , SUM(OLD_AMT09) AS OLD_AMT09
              , SUM(OLD_AMT10) AS OLD_AMT10
              , SUM(OLD_AMT11) AS OLD_AMT11
              , SUM(OLD_AMT12) AS OLD_AMT12
              
              , SUM(NVL(OLD_AMT01,0) + NVL(OLD_AMT02,0) + NVL(OLD_AMT03,0) + NVL(OLD_AMT04,0) + NVL(OLD_AMT05,0) + NVL(OLD_AMT06,0) + 
                    NVL(OLD_AMT07,0) + NVL(OLD_AMT08,0) + NVL(OLD_AMT09,0) + NVL(OLD_AMT10,0) + NVL(OLD_AMT11,0) + NVL(OLD_AMT12,0) ) 
                AS OLD_AMT
                
              --성장율
              , NVL(SUM(TOT_AMT01) / DECODE(SUM(OLD_AMT01), 0, NULL, SUM(OLD_AMT01)), 0) AS OLD_PER01
              , NVL(SUM(TOT_AMT02) / DECODE(SUM(OLD_AMT02), 0, NULL, SUM(OLD_AMT02)), 0) AS OLD_PER02
              , NVL(SUM(TOT_AMT03) / DECODE(SUM(OLD_AMT03), 0, NULL, SUM(OLD_AMT03)), 0) AS OLD_PER03
              , NVL(SUM(TOT_AMT04) / DECODE(SUM(OLD_AMT04), 0, NULL, SUM(OLD_AMT04)), 0) AS OLD_PER04
              , NVL(SUM(TOT_AMT05) / DECODE(SUM(OLD_AMT05), 0, NULL, SUM(OLD_AMT05)), 0) AS OLD_PER05
              , NVL(SUM(TOT_AMT06) / DECODE(SUM(OLD_AMT06), 0, NULL, SUM(OLD_AMT06)), 0) AS OLD_PER06
              , NVL(SUM(TOT_AMT07) / DECODE(SUM(OLD_AMT07), 0, NULL, SUM(OLD_AMT07)), 0) AS OLD_PER07
              , NVL(SUM(TOT_AMT08) / DECODE(SUM(OLD_AMT08), 0, NULL, SUM(OLD_AMT08)), 0) AS OLD_PER08
              , NVL(SUM(TOT_AMT09) / DECODE(SUM(OLD_AMT09), 0, NULL, SUM(OLD_AMT09)), 0) AS OLD_PER09
              , NVL(SUM(TOT_AMT10) / DECODE(SUM(OLD_AMT10), 0, NULL, SUM(OLD_AMT10)), 0) AS OLD_PER10
              , NVL(SUM(TOT_AMT11) / DECODE(SUM(OLD_AMT11), 0, NULL, SUM(OLD_AMT11)), 0) AS OLD_PER11
              , NVL(SUM(TOT_AMT12) / DECODE(SUM(OLD_AMT12), 0, NULL, SUM(OLD_AMT12)), 0) AS OLD_PER12
              
              ,NVL(SUM(NVL(TOT_AMT01,0) + NVL(TOT_AMT02,0) + NVL(TOT_AMT03,0) + NVL(TOT_AMT04,0) + NVL(TOT_AMT05,0) + NVL(TOT_AMT06,0) + 
                    NVL(TOT_AMT07,0) + NVL(TOT_AMT08,0) + NVL(TOT_AMT09,0) + NVL(TOT_AMT10,0) + NVL(TOT_AMT11,0) + NVL(TOT_AMT12,0) ) * 100 / DECODE(NULlIF(  
                SUM(NVL(OLD_AMT01,0) + NVL(OLD_AMT02,0) + NVL(OLD_AMT03,0) + NVL(OLD_AMT04,0) + NVL(OLD_AMT05,0) + NVL(OLD_AMT06,0) + 
                    NVL(OLD_AMT07,0) + NVL(OLD_AMT08,0) + NVL(OLD_AMT09,0) + NVL(OLD_AMT10,0) + NVL(OLD_AMT11,0) + NVL(OLD_AMT12,0) ),0), 0, NULL, NULlIF(  
                SUM(NVL(OLD_AMT01,0) + NVL(OLD_AMT02,0) + NVL(OLD_AMT03,0) + NVL(OLD_AMT04,0) + NVL(OLD_AMT05,0) + NVL(OLD_AMT06,0) + 
                    NVL(OLD_AMT07,0) + NVL(OLD_AMT08,0) + NVL(OLD_AMT09,0) + NVL(OLD_AMT10,0) + NVL(OLD_AMT11,0) + NVL(OLD_AMT12,0) ),0)), 0)
              --, SUM(NVL(TOT_AMT01,0) + NVL(TOT_AMT02,0) + NVL(TOT_AMT03,0) + NVL(TOT_AMT04,0) + NVL(TOT_AMT05,0) + NVL(TOT_AMT06,0) + 
              --      NVL(TOT_AMT07,0) + NVL(TOT_AMT08,0) + NVL(TOT_AMT09,0) + NVL(TOT_AMT10,0) + NVL(TOT_AMT11,0) + NVL(TOT_AMT12,0) ) * 100 /
              --  NULlIF(  
              --  SUM(NVL(OLD_AMT01,0) + NVL(OLD_AMT02,0) + NVL(OLD_AMT03,0) + NVL(OLD_AMT04,0) + NVL(OLD_AMT05,0) + NVL(OLD_AMT06,0) + 
              --      NVL(OLD_AMT07,0) + NVL(OLD_AMT08,0) + NVL(OLD_AMT09,0) + NVL(OLD_AMT10,0) + NVL(OLD_AMT11,0) + NVL(OLD_AMT12,0) ),0) 
                AS OLD_PER 
              
			FROM (
				SELECT SMGR.AM_TM_CD, MAX(TEAM.CODE_NAME) AS TEAM_NM    --팀명
	            	 , MAST.AM_CD, SCC_CRYPTO.MASKAUTH_FUN(MAX(SMGR.AM_NM),12,:loginPersMask,:maskAuth) AS AM_NM --AM명
				     
	                 , SUM(MENU.TOT_AMT)  AS TOT_AMT
                     
                     , AVG(GOAL.FNB01) AS GOAL_AMT01
					 , AVG(GOAL.FNB02) AS GOAL_AMT02
                     , AVG(GOAL.FNB03) AS GOAL_AMT03
                     , AVG(GOAL.FNB04) AS GOAL_AMT04
                     , AVG(GOAL.FNB05) AS GOAL_AMT05
                     , AVG(GOAL.FNB06) AS GOAL_AMT06
                     , AVG(GOAL.FNB07) AS GOAL_AMT07
                     , AVG(GOAL.FNB08) AS GOAL_AMT08
                     , AVG(GOAL.FNB09) AS GOAL_AMT09
                     , AVG(GOAL.FNB10) AS GOAL_AMT10
                     , AVG(GOAL.FNB11) AS GOAL_AMT11
                     , AVG(GOAL.FNB12) AS GOAL_AMT12
                     
                     , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '01' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT01
                     , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '02' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT02
                     , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '03' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT03
                     , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '04' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT04
                     , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '05' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT05
                     , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '06' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT06
                     , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '07' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT07
                     , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '08' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT08
                     , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '09' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT09
                     , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '10' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT10
                     , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '11' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT11
                     , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '12' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT12
                     , CASE WHEN SUBSTR(MENU.STR_DATE,5,2) BETWEEN '01' AND '06'  THEN SUM(MENU.TOT_AMT) END AS TOT_AMT0106
                     , CASE WHEN SUBSTR(MENU.STR_DATE,5,2) BETWEEN '07' AND '12'  THEN SUM(MENU.TOT_AMT) END AS TOT_AMT0712
	                 
                     --전년
                     , SUM(YYYY.OLD_AMT01) AS OLD_AMT01
                     , SUM(YYYY.OLD_AMT02) AS OLD_AMT02
                     , SUM(YYYY.OLD_AMT03) AS OLD_AMT03
                     , SUM(YYYY.OLD_AMT04) AS OLD_AMT04
                     , SUM(YYYY.OLD_AMT05) AS OLD_AMT05
                     , SUM(YYYY.OLD_AMT06) AS OLD_AMT06
                     , SUM(YYYY.OLD_AMT07) AS OLD_AMT07
                     , SUM(YYYY.OLD_AMT08) AS OLD_AMT08
                     , SUM(YYYY.OLD_AMT09) AS OLD_AMT09
                     , SUM(YYYY.OLD_AMT10) AS OLD_AMT10
                     , SUM(YYYY.OLD_AMT11) AS OLD_AMT11
                     , SUM(YYYY.OLD_AMT12) AS OLD_AMT12
                
                
                
			   	FROM   BMS_RESERV_MENU MENU
			   	INNER JOIN BMS_RESERV_MST   MAST ON MAST.RESERV_NUM = MENU.RESERV_NUM                            --예약 마스터
				INNER JOIN BMS_AM_MST       SMGR ON SMGR.AM_CD = MAST.AM_CD                                      --AM명칭
	            INNER JOIN SCC_COMMON_CODE  TEAM ON TEAM.GROUP_CODE ='BMS_0003'  AND TEAM.CODE = SMGR.AM_TM_CD   --팀코드명
	            INNER JOIN SCC_COMMON_CODE  CLAS ON CLAS.GROUP_CODE ='BMS_0002'  AND CLAS.CODE = MAST.KIND_CD  --행사종류
                LEFT OUTER JOIN BMS_AM_GOAL GOAL ON GOAL.AM_CD = MAST.AM_CD 	 AND GOAL.GOAL_YEAR =  SUBSTR(MENU.STR_DATE,1,4) --목표
                LEFT OUTER JOIN (

                			SELECT SMGR.AM_TM_CD 
                                   , MAST.AM_CD 
              				     
                                   , SUM(MENU.TOT_AMT)  AS TOT_AMT
                                   
                                  
                                   , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '01' THEN SUM(MENU.TOT_AMT) END AS OLD_AMT01
                                   , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '02' THEN SUM(MENU.TOT_AMT) END AS OLD_AMT02
                                   , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '03' THEN SUM(MENU.TOT_AMT) END AS OLD_AMT03
                                   , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '04' THEN SUM(MENU.TOT_AMT) END AS OLD_AMT04
                                   , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '05' THEN SUM(MENU.TOT_AMT) END AS OLD_AMT05
                                   , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '06' THEN SUM(MENU.TOT_AMT) END AS OLD_AMT06
                                   , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '07' THEN SUM(MENU.TOT_AMT) END AS OLD_AMT07
                                   , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '08' THEN SUM(MENU.TOT_AMT) END AS OLD_AMT08
                                   , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '09' THEN SUM(MENU.TOT_AMT) END AS OLD_AMT09
                                   , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '10' THEN SUM(MENU.TOT_AMT) END AS OLD_AMT10
                                   , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '11' THEN SUM(MENU.TOT_AMT) END AS OLD_AMT11
                                   , CASE SUBSTR(MENU.STR_DATE,5,2)  WHEN '12' THEN SUM(MENU.TOT_AMT) END AS OLD_AMT12
                                   , CASE WHEN SUBSTR(MENU.STR_DATE,5,2) BETWEEN '01' AND '06'  THEN SUM(MENU.TOT_AMT) END AS OLD_AMT0106
                                   , CASE WHEN SUBSTR(MENU.STR_DATE,5,2) BETWEEN '07' AND '12'  THEN SUM(MENU.TOT_AMT) END AS OLD_AMT0712
              	                  				
                              FROM   BMS_RESERV_MENU MENU
                				INNER JOIN BMS_RESERV_MST   MAST ON MAST.RESERV_NUM = MENU.RESERV_NUM 
                                INNER JOIN BMS_AM_MST       SMGR ON SMGR.AM_CD = MAST.AM_CD  
                              WHERE MENU.USE_YN = 'Y'    --사용유무
                                AND MAST.RESERV_STATUS IN ('2','3') 
                                <#if reservDtFr?has_content > AND SUBSTR(MENU.STR_DATE,1,4) = TO_NUMBER(:reservDtFr) -1   </#if>
                                <#if amCd?has_content >       AND MAST.AM_CD     = :amCd     </#if>
                                <#if amTmCd?has_content >     AND SMGR.AM_TM_CD  = :amTmCd   </#if>
                              GROUP BY SMGR.AM_TM_CD, MAST.AM_CD, SUBSTR(MENU.STR_DATE,5,2)  
                
                			) YYYY ON YYYY.AM_TM_CD = SMGR.AM_TM_CD AND YYYY.AM_CD = MAST.AM_CD
						 
				WHERE MENU.USE_YN = 'Y'    --사용유무
				  AND MAST.RESERV_STATUS IN ('2','3') 
	              <#if reservDtFr?has_content > AND SUBSTR(MENU.STR_DATE,1,4) = :reservDtFr  </#if>
				  <#if amCd?has_content >       AND MAST.AM_CD     = :amCd     </#if>
				  <#if amTmCd?has_content >     AND SMGR.AM_TM_CD  = :amTmCd   </#if>
				 
	            GROUP BY SMGR.AM_TM_CD, MAST.AM_CD, SUBSTR(MENU.STR_DATE,5,2)  
	        ) DUAL 
	        GROUP BY TEAM_NM, AM_NM 
	        ORDER BY TEAM_NM, AM_NM 
	        
	        
			       
		]]>
	</statement>
	
</hqml>	