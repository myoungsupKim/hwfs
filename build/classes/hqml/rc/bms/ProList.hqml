<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="rc.bms.proListDAO">
	<desc>판촉등록</desc>

 
	
<!--  DATA를 조회한다. -->
	<statement name="selectMask" type="select">
		<![CDATA[
		
SELECT
		AM_CD,	 	AM_NM,
	   	SCHD_DATE,
       	SEQ,
       	BC_CD,     	BC_NM ,
       	--START_TIME,
       	--END_TIME,
        STR_TIME_NM AS START_TIME,	--시작시간
		END_TIME_NM AS END_TIME,	--종료시간
        
       	--STR_TIME || '~' || END_TIME AS TIME_FRTO,
        STR_TIME_NM || '~' || END_TIME_NM AS TIME_FRTO,
       	
       	SCHEDULE_KIND,	SCHEDULE_KIND_NM,
       	STATUS_CLASS,	STATUS_CLASS_NM,
       
       	SCHEDULE_TITLE,
       	SCHEDULE_CONTENTS,
       	RMRK_FACT,
       
       	EXPECT_AMT,
       
       	DIARY_DATE,
       	DIARY_CONTENTS,
       	DIARY_FACT,
       	CUST_CD,    
        
        CUST_NM,
		JOB_POSITION,   JOB_POSITION_NM,
		PRCG_DEPT, 		PRCG_DEPT_NM ,
		CUST_CLASS, 	CUST_CLASS_NM ,
		PRCG_NM,
		CEO_NM,
		BSN_NO,
		CORP_NUM,
		BIZ_TYPE,
		BIZ_CAT,
	
		EMAIL_ADDR,
		ADDR_KEY,
		ADDR_INFO,
			
		SCC_TELNO_SPLIT_FUN(TEL_NUM,1) 
					 || DECODE(NVL(SCC_TELNO_SPLIT_FUN(TEL_NUM,2),''),'','','-') 
					 || SCC_TELNO_SPLIT_FUN(TEL_NUM,2)
					 || DECODE(NVL(SCC_TELNO_SPLIT_FUN(TEL_NUM,3),''),'','','-') 
					 || SCC_TELNO_SPLIT_FUN(TEL_NUM,3)     AS TEL_NUM,
					 
 		SCC_TELNO_SPLIT_FUN(TEL_NUM,1)     AS TEL_NUM1,
 		SCC_TELNO_SPLIT_FUN(TEL_NUM,2)     AS TEL_NUM2,
 		SCC_TELNO_SPLIT_FUN(TEL_NUM,3)     AS TEL_NUM3,
		
		SCC_TELNO_SPLIT_FUN(HAND_PHONE,1) 
					 || DECODE(NVL(SCC_TELNO_SPLIT_FUN(HAND_PHONE,2),''),'','','-') 
					 || SCC_TELNO_SPLIT_FUN(HAND_PHONE,2)
					 || DECODE(NVL(SCC_TELNO_SPLIT_FUN(HAND_PHONE,3),''),'','','-') 
					 || SCC_TELNO_SPLIT_FUN(HAND_PHONE,3)     AS HAND_PHONE,
					 
 		SCC_TELNO_SPLIT_FUN(HAND_PHONE,1)     AS HAND_PHONE1,
 		SCC_TELNO_SPLIT_FUN(HAND_PHONE,2)     AS HAND_PHONE2,
 		SCC_TELNO_SPLIT_FUN(HAND_PHONE,3)     AS HAND_PHONE3,
		
		SCC_TELNO_SPLIT_FUN(FAX_NUM,1) 
					 || DECODE(NVL(SCC_TELNO_SPLIT_FUN(FAX_NUM,2),''),'','','-') 
					 || SCC_TELNO_SPLIT_FUN(FAX_NUM,2)
					 || DECODE(NVL(SCC_TELNO_SPLIT_FUN(FAX_NUM,3),''),'','','-') 
					 || SCC_TELNO_SPLIT_FUN(FAX_NUM,3)     AS FAX_NUM,
					 
 		SCC_TELNO_SPLIT_FUN(FAX_NUM,1)     AS FAX_NUM1,
 		SCC_TELNO_SPLIT_FUN(FAX_NUM,2)     AS FAX_NUM2,
 		SCC_TELNO_SPLIT_FUN(FAX_NUM,3)     AS FAX_NUM3,

		USE_YN ,
		MENU_NM,
		MENU_PRICE,
		MENU_QTY
		
FROM (		
	SELECT 	MGMT.AM_CD,	 		AM.AM_NM AS AM_NM,
		   	MGMT.SCHD_DATE,
	       	MGMT.SEQ,
	       	MGMT.BC_CD,     	BC.DETAIL_NM AS BC_NM ,
	       	MGMT.STR_TIME,
	       	MGMT.END_TIME,
            STR.CODE_NAME AS STR_TIME_NM,	--시작시간
			EET.CODE_NAME AS END_TIME_NM,	--종료시간
	        
	       	MGMT.SCHEDULE_KIND,	KIND.DETAIL_NM AS SCHEDULE_KIND_NM ,
	       	MGMT.STATUS_CLASS,	CLAS.DETAIL_NM AS STATUS_CLASS_NM ,
	       
	       	MGMT.SCHEDULE_TITLE,
	       	MGMT.SCHEDULE_CONTENTS,
	       	MGMT.RMRK_FACT,
	       
	       
	       	MGMT.EXPECT_AMT,
	       
	       	MGMT.DIARY_DATE,
	       	MGMT.DIARY_CONTENTS,
	       	MGMT.DIARY_FACT,
	       	MGMT.CUST_CD,    
	        
	        CUST.CUST_NM,
			CUST.JOB_POSITION,      JOB.DETAIL_NM AS JOB_POSITION_NM,
			CUST.PRCG_DEPT, 		DEP.DETAIL_NM AS PRCG_DEPT_NM ,
			CUST.CUST_CLASS, 		CLS.DETAIL_NM AS CUST_CLASS_NM ,

			SCC_CRYPTO.MASK_FUN(CUST.PRCG_NM,12,:loginPersMask) AS PRCG_NM,
			SCC_CRYPTO.MASK_FUN(CUST.CEO_NM,12,:loginPersMask) AS CEO_NM,
			
			CUST.BSN_NO,
			CUST.CORP_NUM,
			CUST.BIZ_TYPE,
			CUST.BIZ_CAT,
			
			SCC_CRYPTO.MASK_FUN(CUST.TEL_NUM,9,:loginPersMask) AS TEL_NUM,
			SCC_CRYPTO.MASK_FUN(CUST.HAND_PHONE,8,:loginPersMask) AS HAND_PHONE,
			SCC_CRYPTO.MASK_FUN(CUST.FAX_NUM,9,:loginPersMask) AS FAX_NUM,
			SCC_CRYPTO.MASK_FUN(CUST.EMAIL_ADDR,10,:loginPersMask) AS EMAIL_ADDR,
			
			CUST.ADDR_KEY,
			SCC_ADDR_FUN(CUST.ADDR_KEY, :loginPersMask, :maskAuth) AS ADDR_INFO,
 
			
	       DECODE(MGMT.USE_YN, 'Y', 1, 0) AS USE_YN,
       	    MGMT.MENU_NM,
       	    MGMT.MENU_PRICE,
       	    MGMT.MENU_QTY
	       
	       
	FROM   BMS_SCHEDULE_MGMT MGMT
	LEFT OUTER JOIN BMS_CUST_MST  CUST ON CUST.CUST_CD  = MGMT.CUST_CD
	LEFT OUTER JOIN BMS_CDMGMT     CLS ON  CLS.CLSFI_CD ='C001' AND CLS.DETAIL_CD = CUST.CUST_CLASS
	LEFT OUTER JOIN BMS_CDMGMT     DEP ON  DEP.CLSFI_CD ='C002' AND DEP.DETAIL_CD = CUST.PRCG_DEPT
	LEFT OUTER JOIN BMS_CDMGMT     JOB ON  JOB.CLSFI_CD ='C003' AND JOB.DETAIL_CD = CUST.JOB_POSITION
	LEFT OUTER BMS_CDMGMT    KIND ON KIND.CLSFI_CD ='B003' AND KIND.DETAIL_CD = MGMT.SCHEDULE_KIND
	LEFT OUTER BMS_CDMGMT    CLAS ON CLAS.CLSFI_CD ='B004' AND CLAS.DETAIL_CD = MGMT.STATUS_CLASS
  	INNER JOIN SCC_COMMON_CODE STR ON STR.GROUP_CODE ='BMS_0015' AND STR.CODE =  MGMT.STR_TIME 		--행사시작시간
	INNER JOIN SCC_COMMON_CODE EET ON EET.GROUP_CODE ='BMS_0015' AND EET.CODE =  MGMT.END_TIME		--행사종료시간
	INNER JOIN BMS_AM_MST     AM  ON   AM.AM_CD    = MGMT.AM_CD
	
	
	LEFT OUTER JOIN  BMS_CDMGMT    BC   ON    BC.CLSFI_CD ='S001' AND BC.DETAIL_CD  = MGMT.BC_CD
	
	WHERE  MGMT.SCHD_DATE BETWEEN :dateFr AND :dateTo
	<#if useYn?has_content>  AND MGMT.USE_YN     = DECODE(:useYn, '1', 'Y', MGMT.USE_YN)  </#if>
	<#if amCd?has_content>   AND MGMT.AM_CD = :amCd  </#if>
	<#if kind0 == '1' &&  kind1 == '1'>
			AND (MGMT.SCHEDULE_KIND = '1001'  OR MGMT.SCHEDULE_KIND = '1002')
	<#else>		
		<#if kind0 == '1'>
	 		AND MGMT.SCHEDULE_KIND = '1001'	 	 	
	 	</#if>	
	 	<#if kind1 == '1'> 
	 		AND MGMT.SCHEDULE_KIND = '1002'	 		
	 	</#if>
	</#if>	
	<#if kind0 == '0' &&  kind1 == '0'>
		AND NOT (MGMT.SCHEDULE_KIND = '1001'  OR MGMT.SCHEDULE_KIND = '1002')
	</#if>
	<#if custNm?has_content> AND CUST.CUST_NM LIKE :custNm || '%'  </#if>
	<#if prcgNm?has_content> AND CUST.PRCG_NM LIKE :prcgNm   || '%'  </#if>
)
ORDER BY SCHD_DATE, AM_CD, STR_TIME

		]]>
	</statement>	

	
	
	<!--  DATA를 조회한다. -->
	<statement name="selectList" type="select">
		<![CDATA[
		
SELECT
		AM_CD,	 	AM_NM,
	   	SCHD_DATE,
       	SEQ,
       	BC_CD,     	BC_NM ,
       	
       	--START_TIME,
       	--END_TIME,
        STR_TIME_NM AS START_TIME,	--시작시간
		END_TIME_NM AS END_TIME,	--종료시간
        
       	--STR_TIME || '~' || END_TIME AS TIME_FRTO,
        STR_TIME_NM || '~' || END_TIME_NM AS TIME_FRTO,
       	
       	SCHEDULE_KIND,	SCHEDULE_KIND_NM,
       	STATUS_CLASS,	STATUS_CLASS_NM,
       
       	SCHEDULE_TITLE,
       	SCHEDULE_CONTENTS,
       	RMRK_FACT,
       
       	EXPECT_AMT,
       
       	DIARY_DATE,
       	DIARY_CONTENTS,
       	DIARY_FACT,
       	CUST_CD,    
        
        CUST_NM,
		JOB_POSITION,   JOB_POSITION_NM,
		PRCG_DEPT, 		PRCG_DEPT_NM ,
		CUST_CLASS, 	CUST_CLASS_NM ,
		PRCG_NM,
		CEO_NM,
		BSN_NO,
		CORP_NUM,
		BIZ_TYPE,
		BIZ_CAT,
		
		EMAIL_ADDR,
		ADDR_KEY,
 		ADDR_INFO,
			
		SCC_TELNO_SPLIT_FUN(TEL_NUM,1) 
					 || DECODE(NVL(SCC_TELNO_SPLIT_FUN(TEL_NUM,2),''),'','','-') 
					 || SCC_TELNO_SPLIT_FUN(TEL_NUM,2)
					 || DECODE(NVL(SCC_TELNO_SPLIT_FUN(TEL_NUM,3),''),'','','-') 
					 || SCC_TELNO_SPLIT_FUN(TEL_NUM,3)     AS TEL_NUM,
					 
 		SCC_TELNO_SPLIT_FUN(TEL_NUM,1)     AS TEL_NUM1,
 		SCC_TELNO_SPLIT_FUN(TEL_NUM,2)     AS TEL_NUM2,
 		SCC_TELNO_SPLIT_FUN(TEL_NUM,3)     AS TEL_NUM3,
		
		SCC_TELNO_SPLIT_FUN(HAND_PHONE,1) 
					 || DECODE(NVL(SCC_TELNO_SPLIT_FUN(HAND_PHONE,2),''),'','','-') 
					 || SCC_TELNO_SPLIT_FUN(HAND_PHONE,2)
					 || DECODE(NVL(SCC_TELNO_SPLIT_FUN(HAND_PHONE,3),''),'','','-') 
					 || SCC_TELNO_SPLIT_FUN(HAND_PHONE,3)     AS HAND_PHONE,
					 
 		SCC_TELNO_SPLIT_FUN(HAND_PHONE,1)     AS HAND_PHONE1,
 		SCC_TELNO_SPLIT_FUN(HAND_PHONE,2)     AS HAND_PHONE2,
 		SCC_TELNO_SPLIT_FUN(HAND_PHONE,3)     AS HAND_PHONE3,
		
		SCC_TELNO_SPLIT_FUN(FAX_NUM,1) 
					 || DECODE(NVL(SCC_TELNO_SPLIT_FUN(FAX_NUM,2),''),'','','-') 
					 || SCC_TELNO_SPLIT_FUN(FAX_NUM,2)
					 || DECODE(NVL(SCC_TELNO_SPLIT_FUN(FAX_NUM,3),''),'','','-') 
					 || SCC_TELNO_SPLIT_FUN(FAX_NUM,3)     AS FAX_NUM,
					 
 		SCC_TELNO_SPLIT_FUN(FAX_NUM,1)     AS FAX_NUM1,
 		SCC_TELNO_SPLIT_FUN(FAX_NUM,2)     AS FAX_NUM2,
 		SCC_TELNO_SPLIT_FUN(FAX_NUM,3)     AS FAX_NUM3,

		USE_YN ,
		MENU_NM,
		MENU_PRICE,
		MENU_QTY
		
FROM (		
	SELECT 	MGMT.AM_CD,	 		AM.AM_NM AS AM_NM,
		   	MGMT.SCHD_DATE,
	       	MGMT.SEQ,
	       	MGMT.BC_CD,     	BC.DETAIL_NM AS BC_NM ,
	       	MGMT.STR_TIME,
	       	MGMT.END_TIME,
            STR.CODE_NAME AS STR_TIME_NM,	--시작시간
			EET.CODE_NAME AS END_TIME_NM,	--종료시간
	        
	        
	       	MGMT.SCHEDULE_KIND,	KIND.DETAIL_NM AS SCHEDULE_KIND_NM ,
	       	MGMT.STATUS_CLASS,	CLAS.DETAIL_NM AS STATUS_CLASS_NM ,
	       
	       	MGMT.SCHEDULE_TITLE,
	       	MGMT.SCHEDULE_CONTENTS,
	       	MGMT.RMRK_FACT,
	       
	       
	       	MGMT.EXPECT_AMT,
	       
	       	MGMT.DIARY_DATE,
	       	MGMT.DIARY_CONTENTS,
	       	MGMT.DIARY_FACT,
	       	MGMT.CUST_CD,    
	        
	        CUST.CUST_NM,
			CUST.JOB_POSITION,      JOB.DETAIL_NM AS JOB_POSITION_NM,
			CUST.PRCG_DEPT, 		DEP.DETAIL_NM AS PRCG_DEPT_NM ,
			CUST.CUST_CLASS, 		CLS.DETAIL_NM AS CUST_CLASS_NM ,
			CUST.PRCG_NM,
			CUST.CEO_NM,
			CUST.BSN_NO,
			CUST.CORP_NUM,
			CUST.BIZ_TYPE,
			CUST.BIZ_CAT,
			
			SCC_CRYPTO.DEC_FUN(CUST.TEL_NUM) AS TEL_NUM,
			SCC_CRYPTO.DEC_FUN(CUST.HAND_PHONE) AS HAND_PHONE,
			SCC_CRYPTO.DEC_FUN(CUST.FAX_NUM) AS FAX_NUM,
			SCC_CRYPTO.DEC_FUN(CUST.EMAIL_ADDR) AS EMAIL_ADDR,
			
			CUST.ADDR_KEY,
			SCC_ADDR_FUN(CUST.ADDR_KEY, :loginPersMask, :maskAuth) AS ADDR_INFO,
 
 
	        DECODE(MGMT.USE_YN, 'Y', 1, 0) AS USE_YN ,
       	    MGMT.MENU_NM,
       	    MGMT.MENU_PRICE,
       	    MGMT.MENU_QTY
	       
	FROM   BMS_SCHEDULE_MGMT MGMT
	LEFT OUTER JOIN BMS_CUST_MST  CUST ON CUST.CUST_CD  = MGMT.CUST_CD
	LEFT OUTER JOIN BMS_CDMGMT     CLS ON  CLS.CLSFI_CD ='C001' AND  CLS.DETAIL_CD = CUST.CUST_CLASS
	LEFT OUTER JOIN BMS_CDMGMT     DEP ON  DEP.CLSFI_CD ='C002' AND  DEP.DETAIL_CD = CUST.PRCG_DEPT
	LEFT OUTER JOIN BMS_CDMGMT     JOB ON  JOB.CLSFI_CD ='C003' AND  JOB.DETAIL_CD = CUST.JOB_POSITION
	LEFT OUTER JOIN BMS_CDMGMT    KIND ON KIND.CLSFI_CD ='B003' AND KIND.DETAIL_CD = MGMT.SCHEDULE_KIND
	LEFT OUTER JOIN BMS_CDMGMT    CLAS ON CLAS.CLSFI_CD ='B004' AND CLAS.DETAIL_CD = MGMT.STATUS_CLASS
  	INNER JOIN SCC_COMMON_CODE STR ON STR.GROUP_CODE ='BMS_0015' AND STR.CODE =  MGMT.STR_TIME 		--행사시작시간
	INNER JOIN SCC_COMMON_CODE EET ON EET.GROUP_CODE ='BMS_0015' AND EET.CODE =  MGMT.END_TIME		--행사종료시간
	INNER JOIN BMS_AM_MST     AM  ON  AM.AM_CD     = MGMT.AM_CD
	
	
	LEFT OUTER JOIN  BMS_CDMGMT    BC   ON    BC.CLSFI_CD ='S001' AND BC.DETAIL_CD  = MGMT.BC_CD
	
	WHERE  MGMT.SCHD_DATE BETWEEN :dateFr AND :dateTo
	<#if useYn?has_content>  AND MGMT.USE_YN     = DECODE(:useYn, '1', 'Y', MGMT.USE_YN)  </#if>
	<#if amCd?has_content>   AND MGMT.AM_CD = :amCd  </#if>
	<#if kind0 == '1' &&  kind1 == '1'>
			AND (MGMT.SCHEDULE_KIND = '1001'  OR MGMT.SCHEDULE_KIND = '1002')
	<#else>		
		<#if kind0 == '1'>
	 		AND MGMT.SCHEDULE_KIND = '1001'	 	 	
	 	</#if>	
	 	<#if kind1 == '1'> 
	 		AND MGMT.SCHEDULE_KIND = '1002'	 		
	 	</#if>
	</#if>
	<#if kind0 == '0' &&  kind1 == '0'>
		AND NOT (MGMT.SCHEDULE_KIND = '1001'  OR MGMT.SCHEDULE_KIND = '1002')
	</#if>
	<#if custNm?has_content> AND CUST.CUST_NM LIKE :custNm || '%'  </#if>
	<#if prcgNm?has_content> AND CUST.PRCG_NM LIKE :prcgNm   || '%'  </#if>
)
ORDER BY SCHD_DATE, AM_CD, STR_TIME
		]]>
	</statement>
	
 
	
</hqml>	