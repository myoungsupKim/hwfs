<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="rc.sle.monMenuSalesListDAO">
	<desc>일/월 메뉴 판매현황</desc>

	<statement name="selectList" type="select"><![CDATA[
			
			
			SELECT AA.OUTLET_CD, KK.OUTLET_NM AS OUTLET_NM, AA.MENU_CD, AA.MENU_CLASS, AA.MENU_CLSFI, AA.MENU_SCLASS
				 , AA.MENU_CLASS || AA.MENU_CLSFI || AA.MENU_SCLASS AS MENU_CLSFI_CD, AA.MENU_CLSFI_NM, AA.MENU_NM
				 , UCST
			     , DAY_QTY, DAY_NET_AMT, DAY_DSCN_AMT, DAY_SVC_AMT, DAY_VAT_AMT, DAY_TOT_AMT,  DAY_SUB_RATE, DAY_TOT_RATE, DAY_RATE
                 , MON_QTY, MON_NET_AMT, MON_DSCN_AMT, MON_SVC_AMT, MON_VAT_AMT, MON_TOT_AMT,  MON_SUB_RATE, MON_TOT_RATE, MON_RATE
                 
			  FROM
				( 
			 	  SELECT A.OUTLET_CD, A.MENU_CD,  A.MENU_CLASS, A.MENU_CLSFI, A.MENU_SCLASS, B.MENU_CLSFI_NM,  A.MENU_NM 
			 	  FROM SLE_OUTLET_MENU A
			      INNER  JOIN SLE_MENU_CLSFI B ON B.MENU_CLASS  = A.MENU_CLASS
			                                  AND B.MENU_CLSFI  = A.MENU_CLSFI
			                                  AND B.MENU_SCLASS = A.MENU_SCLASS
                    
                    <#if outletCd?has_content >   WHERE  A.OUTLET_CD = :outletCd  </#if>--업장
				  GROUP BY A.OUTLET_CD, A.MENU_CD,  A.MENU_CLASS, A.MENU_CLSFI, A.MENU_SCLASS, B.MENU_CLSFI_NM,  A.MENU_NM 
				   
				)AA
			
				
				LEFT OUTER JOIN
				(
                	--일별 메뉴 판매 현황
                	SELECT 	OUTLET_CD, MENU_CD, UCST 
                            , SUM(QTY)      AS DAY_QTY,      SUM(NET_AMT) AS DAY_NET_AMT   --NET  값아님 Gross값
                            , SUM(DSCN_AMT) AS DAY_DSCN_AMT, SUM(SVC_AMT) AS DAY_SVC_AMT
                            , SUM(VAT_AMT)  AS DAY_VAT_AMT,  SUM(TOT_AMT) AS DAY_TOT_AMT
			         		, SUM(SUB_RATE) AS DAY_SUB_RATE
			         		, SUM(TOT_RATE) AS DAY_TOT_RATE
			         		, SUM(RATE)     AS DAY_RATE
                             
                            , SUM(YEAR_QTY)      AS MON_QTY,     SUM(YEAR_NET_AMT) AS MON_NET_AMT, SUM(YEAR_DSCN_AMT) AS MON_DSCN_AMT 
                            , SUM(YEAR_SVC_AMT)  AS MON_SVC_AMT, SUM(YEAR_VAT_AMT) AS MON_VAT_AMT, SUM(YEAR_TOT_AMT)  AS MON_TOT_AMT  
                            , SUM(YEAR_SUB_RATE) AS MON_SUB_RATE
                            , SUM(YEAR_TOT_RATE) AS MON_TOT_RATE
                            , SUM(YEAR_RATE)     AS MON_RATE
                    
                    FROM 
                    (
                
			  		SELECT 	A.OUTLET_CD, A.MENU_CD AS MENU_CD, A.UCST, 
                            A.QTY, A.NET_AMT, A.DSCN_AMT, A.SVC_AMT, A.VAT_AMT,  A.TOT_AMT,
			         		    ROUND((A.TOT_AMT / DECODE(B.TOT_AMT,0,NULL,B.TOT_AMT) * 100),2) AS SUB_RATE,
			         		SUM(ROUND((A.TOT_AMT / DECODE(B.TOT_AMT,0,NULL,B.TOT_AMT) * 100), 2)) OVER(ORDER BY A.OUTLET_CD, A.MENU_CD) AS TOT_RATE,
			         		 NVL(ROUND(A.TOT_AMT / DECODE(C.TOT_AMT,0,NULL,C.TOT_AMT) * 100, 2), 0) AS RATE,
                             
                            0     AS YEAR_QTY, 0 AS YEAR_NET_AMT, 0 AS YEAR_DSCN_AMT, 
                            0 AS YEAR_SVC_AMT, 0 AS YEAR_VAT_AMT, 0  AS YEAR_TOT_AMT,  
                            0 AS YEAR_SUB_RATE,
                            0 AS YEAR_TOT_RATE,
                            0 AS YEAR_RATE
                             
                             
					FROM(
						SELECT OUTLET_CD, MENU_CD  AS MENU_CD, UCST
			                 , SUM(QTY)  AS QTY,     SUM(NET_AMT)    AS NET_AMT,       SUM(DSCN_AMT) AS DSCN_AMT
			                 , SUM(SVC_AMT)  AS SVC_AMT, SUM(VAT_AMT)  AS VAT_AMT
			                 , SUM(TOT_AMT) AS TOT_AMT
						FROM (                       
						
						
							SELECT OUTLET_CD, MENU_CD  AS MENU_CD, UPRICE   AS UCST
				                 , SUM(QUANTITY) AS QTY,     SUM(SALS_AMT)    AS NET_AMT,       SUM(DISCNT_AMT) AS DSCN_AMT
				                 , SUM(SVC_AMT)  AS SVC_AMT, SUM(VAT_AMT)  AS VAT_AMT
				                 , SUM(TOT_SALS) AS TOT_AMT
				            	FROM SLE_SUM_MENU_SALS
				           		WHERE SALES_DATE     = :salesDate
				             	  AND SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
						      	  AND MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
				             	  <#if outletCd?has_content >   AND OUTLET_CD  = :outletCd  </#if>--업장
				                GROUP BY OUTLET_CD, MENU_CD, UPRICE
			                
			                UNION ALL
			                
			                --내부이용인 경우 수량만 추가하기 위해
			                SELECT  OUTLET_CD, MENU_CD, MENU_UPRICE AS UCST, SUM(QUANTITY)  AS QTY
			                		,     0    AS NET_AMT,       0 AS DSCN_AMT
			                 		, 0  AS SVC_AMT, 0 AS VAT_AMT, 0 AS TOT_AMT  
								FROM SLE_SALS_GOODS
								WHERE SALES_DATE     = :salesDate
				             	  AND SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
						      	  AND MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
						      	  AND RECEIPT_STATUS = 'E' --내부이용인 경우 
				             	  <#if outletCd?has_content >   AND OUTLET_CD  = :outletCd  </#if>--업장
				                GROUP BY OUTLET_CD, MENU_CD, MENU_UPRICE
				             )
						GROUP BY OUTLET_CD, MENU_CD, UCST                 
			                
			                
			          	)A
			           LEFT OUTER JOIN
			            (
			              SELECT OUTLET_CD, SUM(TOT_SALS) AS TOT_AMT FROM SLE_SUM_MENU_SALS
			              	WHERE SALES_DATE     = :salesDate
			              	  AND SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
					      	  AND MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
			              	  <#if outletCd?has_content >   AND OUTLET_CD  = :outletCd  </#if>--업장
                            GROUP BY OUTLET_CD
			            )B ON A.OUTLET_CD = B.OUTLET_CD
			
			          LEFT OUTER JOIN
			            (
			              SELECT OUTLET_CD, MENU_CD, UPRICE  AS UCST, SUM(TOT_SALS) AS TOT_AMT FROM SLE_SUM_MENU_SALS
			              	WHERE SALES_DATE LIKE (substr(:salesDate,1,4)) -1 || Substr(:salesDate,5,4) ||'%'
			              	  AND SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
					      	  AND MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
			                  <#if outletCd?has_content >   AND OUTLET_CD  = :outletCd  </#if>--업장
			                GROUP BY OUTLET_CD, MENU_CD,UPRICE
			
			            )C ON  A.OUTLET_CD = C.OUTLET_CD AND A.MENU_CD = C.MENU_CD AND A.UCST = C.UCST
			            
			            UNION ALL
			            
                        --월별 메뉴 판매 현황
					      
                        SELECT A.OUTLET_CD, A.MENU_CD AS MENU_CD, A.UCST, 
                        	   
                               0 AS QTY, 0 AS NET_AMT, 0 AS DSCN_AMT, 0 AS SVC_AMT, 0 AS VAT_AMT,  0 AS TOT_AMT,	   
                         	   0 AS SUB_RATE,
			         		   0 AS TOT_RATE,
			         		   0 AS RATE,
                        	
                               A.QTY     AS YEAR_QTY,     A.NET_AMT AS YEAR_NET_AMT, A.DSCN_AMT AS YEAR_DSCN_AMT, 
                               A.SVC_AMT AS YEAR_SVC_AMT, A.VAT_AMT AS YEAR_VAT_AMT, A.TOT_AMT  AS YEAR_TOT_AMT,
                               
                                   ROUND((A.TOT_AMT / DECODE(B.TOT_AMT,0,NULL,B.TOT_AMT) * 100),2) AS YEAR_SUB_RATE,
                               SUM(ROUND((A.TOT_AMT / DECODE(B.TOT_AMT,0,NULL,B.TOT_AMT) * 100), 2)) OVER(ORDER BY A.OUTLET_CD, A.MENU_CD) AS YEAR_TOT_RATE,
                                NVL(ROUND(A.TOT_AMT / DECODE(C.TOT_AMT,0,NULL,C.TOT_AMT) * 100, 2), 0) AS YEAR_RATE
                                
                        FROM
                        (
                          SELECT OUTLET_CD, MENU_CD, UPRICE  AS UCST
                               , SUM(QUANTITY) AS QTY,     SUM(SALS_AMT)      AS NET_AMT,  SUM(DISCNT_AMT) AS DSCN_AMT
                               , SUM(SVC_AMT)  AS SVC_AMT, SUM(VAT_AMT)  AS VAT_AMT
                               , SUM(TOT_SALS) AS TOT_AMT
                            FROM SLE_SUM_MENU_SALS
                           WHERE SALES_DATE  LIKE substr(:salesDate,1,6) ||'%'
                             AND SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
					      	 AND MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                             <#if outletCd?has_content >   AND OUTLET_CD  = :outletCd  </#if>--업장
                           GROUP BY OUTLET_CD, MENU_CD, UPRICE
                        )A
					
                        LEFT OUTER JOIN
                          (
                          SELECT OUTLET_CD, SUM(TOT_SALS) AS TOT_AMT FROM SLE_SUM_MENU_SALS
                           WHERE SALES_DATE LIKE substr(:salesDate,1,6) ||'%'
                             AND SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
					      	 AND MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                             <#if outletCd?has_content >   AND OUTLET_CD  = :outletCd  </#if>--업장
                             GROUP BY OUTLET_CD
                          )B  ON A.OUTLET_CD = B.OUTLET_CD
					
                        LEFT OUTER JOIN
                          (
                          SELECT OUTLET_CD, MENU_CD, UPRICE AS UCST, SUM(TOT_SALS) AS TOT_AMT FROM SLE_SUM_MENU_SALS
                           WHERE SALES_DATE LIKE (substr(:salesDate,1,4))  -1 || Substr(:salesDate,5,2) ||'%'
                             AND SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
					      	 AND MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                             <#if outletCd?has_content >   AND OUTLET_CD  = :outletCd  </#if>--업장
                           GROUP BY OUTLET_CD, MENU_CD, UPRICE
                         )C ON  A.OUTLET_CD = C.OUTLET_CD AND A.MENU_CD = C.MENU_CD AND A.UCST = C.UCST
					 ) JJ
                     GROUP BY OUTLET_CD,MENU_CD,UCST
			        )BB ON AA.OUTLET_CD = BB.OUTLET_CD  AND AA.MENU_CD   = BB.MENU_CD
			        
			 		INNER JOIN SLE_OUTLET_MST KK ON KK.OUTLET_CD = AA.OUTLET_CD 
					INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
				               FROM SLE_OUTLET_MST MST
				              INNER JOIN SCO_UPJANG_V UPJANG ON UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
				                     <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
				                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if> 
		                         <#if outletCd?has_content> WHERE MST.OUTLET_CD = :outletCd </#if>
				            ) OUTLET ON OUTLET.OUTLET_CD = AA.OUTLET_CD
			 		
			    WHERE (DAY_QTY <> 0 OR MON_QTY <> 0)
			    --(DAY_TOT_AMT <> 0 OR MON_TOT_AMT <> 0)
			    
			    <#if menuClass?has_content >   AND AA.MENU_CLASS   = :menuClass  </#if> 
			    <#if menuClsfi?has_content >   AND AA.MENU_CLSFI   = :menuClsfi  </#if> 
			    <#if menuSclass?has_content >  AND AA.MENU_SCLASS  = :menuSclass </#if> 
			   
            	ORDER BY AA.OUTLET_CD, AA.MENU_CD
			
		]]></statement>

	<statement name="selectDayList" type="select"><![CDATA[
			SELECT OUTLET_CD, OUTLET_NM, MENU_CLASS, MENU_CLSFI, MENU_SCLASS, MENU_CLSFI_NM,
				       MENU_ALL_CLASS,
				       TOT_QTY, TOT_AMT, DISCNT_AMT, NET_AMT
				FROM (
				      SELECT A.OUTLET_CD, B.OUTLET_NM, A.MENU_CLASS, A.MENU_CLSFI, A.MENU_SCLASS, A.MENU_CLSFI_NM,
				             A.MENU_CLASS || ':' || A.MENU_CLSFI || ':' || A.MENU_SCLASS AS MENU_ALL_CLASS, 
				             C.TOT_QTY, C.TOT_AMT, C.DISCNT_AMT, C.NET_AMT
				      FROM SLE_OUTLET_MENU_GRP   A 
				      INNER JOIN SLE_OUTLET_MST  B    ON B.OUTLET_CD      = A.OUTLET_CD
				      INNER JOIN (					
				                  SELECT 	GOODS.OUTLET_CD,   MENU.MENU_CLASS,  MENU.MENU_CLSFI,  MENU.MENU_SCLASS,
				                          SUM(GOODS.QUANTITY)    AS TOT_QTY,
				                          SUM(GOODS.NET_AMT) + SUM(GOODS.DISCNT_NET) AS TOT_AMT, 
				                          SUM(GOODS.DISCNT_NET)  AS DISCNT_AMT,
				                          SUM(GOODS.NET_AMT)     AS NET_AMT
				
				                  FROM SLE_SALS_GOODS GOODS	
				                        
				                       INNER JOIN SLE_OUTLET_MENU MENU ON MENU.OUTLET_CD = GOODS.OUTLET_CD      
				                                                      AND MENU.MENU_CD   = GOODS.MENU_CD      
				                                     
				                        INNER JOIN (SELECT MST.OUTLET_CD 
				                                     FROM   SLE_OUTLET_MST MST
				                                        INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
				                                                   <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
				                                                   <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
				                                   ) OUTLET ON OUTLET.OUTLET_CD = GOODS.OUTLET_CD
				      			              			 
				                        INNER JOIN (
				                              SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM 
				                              FROM SLE_SALS_INFO INFO
				                              LEFT OUTER JOIN (
				                                                SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
				                                                INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
				                                                <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
				                                                ORDER BY  OUTLET_CD, POS_NUM
				                                      ) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
				                                      WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
				                                        AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
				                                        <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
                      	   		      					<#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
                      	   			                    AND INFO.SALES_DATE BETWEEN :searchDateFr	AND :searchDateTo
				                                        <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
				                                        <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
				                                      ORDER BY    INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM
				                          )  INFO ON INFO.OUTLET_CD = GOODS.OUTLET_CD 
				                                 AND INFO.SALES_DATE = GOODS.SALES_DATE
				                                 AND INFO.RECEIPT_NUM = GOODS.RECEIPT_NUM	
				      		    				       
				                        WHERE 1=1
				                          --GOODS.SALS_YN       = 'Y'		--판매여부                        	                                     
        			        			  --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
				         				  AND GOODS.SELL_YN  = DECODE(GOODS.RECEIPT_STATUS ,'E','N','Y')				--매출 여부
  					 					  --종료			                       
				                          AND GOODS.DATA_CLASS     = '1'  -- 1:메뉴 3:주문사항 
				                          AND GOODS.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
				                          AND GOODS.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
				                          <#if internalYn == 'Y' > AND GOODS.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
                      	   		      	  <#if internalYn == 'N' > AND GOODS.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
				                          AND GOODS.SALES_DATE BETWEEN :searchDateFr	AND :searchDateTo
				                         <#if outletCd?has_content> AND GOODS.OUTLET_CD = :outletCd </#if>
				                       GROUP BY GOODS.OUTLET_CD,  MENU.MENU_CLASS, MENU.MENU_CLSFI,  MENU.MENU_SCLASS
				                  ) C ON C.OUTLET_CD   = A.OUTLET_CD
				                     AND C.MENU_CLASS  = A.MENU_CLASS 
				                     AND C.MENU_CLSFI  = A.MENU_CLSFI 
				                     AND C.MENU_SCLASS = A.MENU_SCLASS
				      WHERE A.OUTLET_CD = DECODE(:outletCd,'', A.OUTLET_CD, :outletCd)             
				
				      UNION ALL
				
				      SELECT A.OUTLET_CD, B.OUTLET_NM, 'Z' AS MENU_CLASS, '' AS MENU_CLSFI, '' AS MENU_SCLASS, '' AS MENU_CLSFI_NM,
				             '' AS MENU_ALL_CLASS, 
				             C.TOT_QTY, C.TOT_AMT, C.DISCNT_AMT, C.NET_AMT
				      FROM ( SELECT OUTLET_CD FROM  SLE_OUTLET_MENU_GRP
				                        GROUP BY OUTLET_CD
				      )  A 
				      INNER JOIN SLE_OUTLET_MST  B    ON B.OUTLET_CD      = A.OUTLET_CD
				      INNER JOIN (					
				                  SELECT 	GOODS.OUTLET_CD,    
				                          SUM(GOODS.QUANTITY)    AS TOT_QTY,
				                          SUM(GOODS.NET_AMT) + SUM(GOODS.DISCNT_NET) AS TOT_AMT, 
				                          SUM(GOODS.DISCNT_NET)  AS DISCNT_AMT,
				                          SUM(GOODS.NET_AMT)     AS NET_AMT
				
				                  FROM SLE_SALS_GOODS GOODS	
				                        
				                       INNER JOIN SLE_OUTLET_MENU MENU ON MENU.OUTLET_CD = GOODS.OUTLET_CD      
				                                                      AND MENU.MENU_CD   = GOODS.MENU_CD      
				                                     
				                        INNER JOIN (SELECT MST.OUTLET_CD 
				                                     FROM   SLE_OUTLET_MST MST
				                                        INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
				                                                   <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
				                                                   <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
				                                   ) OUTLET ON OUTLET.OUTLET_CD = GOODS.OUTLET_CD
				      			              			 
				                        INNER JOIN (
				                              SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM 
				                              FROM SLE_SALS_INFO INFO
				                              LEFT OUTER JOIN (
				                                                SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
				                                                INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
				                                                <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
				                                                ORDER BY  OUTLET_CD, POS_NUM
				                                      ) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
				                                      WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
				                                        AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
				                                        <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
                      	   		      					<#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
                      	   			                    AND INFO.SALES_DATE BETWEEN :searchDateFr	AND :searchDateTo
				                                       <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
				                                       <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
				                                      ORDER BY    INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM
				                          )  INFO ON INFO.OUTLET_CD = GOODS.OUTLET_CD 
				                                 AND INFO.SALES_DATE = GOODS.SALES_DATE
				                                 AND INFO.RECEIPT_NUM = GOODS.RECEIPT_NUM	
				      		    				       
				                        WHERE 1=1
				                          --GOODS.SALS_YN       = 'Y'		--판매여부                       	                                     
        			        			  --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
				         				  AND GOODS.SELL_YN  = DECODE(GOODS.RECEIPT_STATUS ,'E','N','Y')				--매출 여부
  					 					  --종료			                       
				                          AND GOODS.DATA_CLASS     = '1'  -- 1:메뉴 3:주문사항 
				                          AND GOODS.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
				                          AND GOODS.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
				                          <#if internalYn == 'Y' > AND GOODS.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
                      	   		      	  <#if internalYn == 'N' > AND GOODS.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
                      	   			      AND GOODS.SALES_DATE BETWEEN :searchDateFr	AND :searchDateTo
				                          <#if outletCd?has_content> AND GOODS.OUTLET_CD = :outletCd </#if>
				                       GROUP BY GOODS.OUTLET_CD
				                       
				                  ) C ON C.OUTLET_CD   = A.OUTLET_CD
				                      
				      WHERE A.OUTLET_CD = DECODE(:outletCd,'', A.OUTLET_CD, :outletCd)             
				
				) DUAL ORDER BY OUTLET_CD, MENU_CLASS, MENU_CLSFI, MENU_SCLASS

				
							
		]]></statement>
</hqml>
