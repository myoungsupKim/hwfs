<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="rc.sle.eodMgmtDAO">
	<desc>업장마감</desc>


	<statement name="eodList" type="select">
		/*+ com.hwfs.rc.sle.eodMgmtDAO.eodList */
		<![CDATA[
		
			SELECT 
				   (SELECT  DECODE(A.CNT,0,DECODE(B.CNT,0,'매출자료없음','미마감'),'마감완료') 
						FROM DUAL         
						INNER JOIN (SELECT  NVL(COUNT(1), 0) AS CNT  
									FROM SLA_IF_CARD_APPRV_INFO MAST
									INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM, SYS_CLASS.CODE AS SYS_CLASS 
						                          FROM   SLE_OUTLET_MST MST
						                          INNER JOIN  SCO_UPJANG_V   UPJANG      ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
						                                     <#if muCd?has_content>     AND UPJANG.MU_CD  = :muCd </#if>
						                                     <#if tmCd?has_content>     AND UPJANG.TM_CD  = :tmCd </#if>
						                                     
						                          INNER JOIN SCC_COMMON_CODE SYS_CLASS   ON SYS_CLASS.GROUP_CODE ='SYS_CLASS'
                  	 								     					            AND SYS_CLASS.SET3 = UPJANG.MU_CD
                  	 								     					            
                                    			 WHERE MST.OUTLET_CD = DECODE(:outletCd,'', MST.OUTLET_CD,  :outletCd)
                                    			            
						          			    ) OUTLET ON OUTLET.OUTLET_CD =  MAST.UPJANG_CD AND MAST.SYS_CLASS  = OUTLET.SYS_CLASS  
									 WHERE MAST.OCCUR_DATE = :salesDt 
									   AND ROWNUM          = 1 
									   AND MAST.UPJANG_CD  = DECODE(:outletCd , '' , MAST.UPJANG_CD , TO_NUMBER(:outletCd) )   
									) A ON A.CNT >= 0
									
						INNER JOIN (SELECT  NVL(COUNT(1), 0) AS CNT  
						              --FROM SLE_SALS_PAY MAST
						              FROM ( SELECT OUTLET_CD, SALES_DATE, PAY_CD FROM SLE_SALS_PAY   WHERE SALES_DATE   = :salesDt GROUP BY OUTLET_CD, SALES_DATE, PAY_CD
                                      		 UNION ALL 
                                             SELECT OUTLET_CD, SALES_DATE, PAY_CD FROM IF_SLE_SALS_PAY WHERE SALES_DATE   = :salesDt GROUP BY OUTLET_CD,SALES_DATE, PAY_CD
                                      ) MAST
						              
									INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
						                          FROM   SLE_OUTLET_MST MST
						                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
						                                     <#if muCd?has_content> AND UPJANG.MU_CD  = :muCd </#if>
						                                     <#if tmCd?has_content> AND UPJANG.TM_CD  = :tmCd </#if>
						          			    ) OUTLET ON OUTLET.OUTLET_CD =  MAST.OUTLET_CD  
						              WHERE MAST.SALES_DATE = :salesDt 
										AND MAST.PAY_CD    IN (SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0081' )   --카드지불수단목록
										AND ROWNUM          = 1
										AND MAST.OUTLET_CD  = DECODE(:outletCd, '', MAST.OUTLET_CD, :outletCd )           
									) B ON B.CNT >= 0
					 ) AS CARD_INFO
				 
				 , (SELECT  DECODE(A.CNT,0,DECODE(B.CNT,0,'매출자료없음','미마감'),'마감완료') 
						FROM DUAL         
						INNER JOIN (SELECT  NVL(COUNT(1), 0) AS CNT  
									  FROM CLUSTER_IF.PO_FOPOSTR_INTERFACE 
									 WHERE TRANS_DATE = :salesDt 
									   --AND CLS_FLAG   = 'Y' 
									   AND ROWNUM     = 1 
									) A ON A.CNT >= 0
						INNER JOIN (SELECT  NVL(COUNT(1), 0) AS CNT  
						              FROM SLE_SALS_INFO MAST
									INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
						                          FROM   SLE_OUTLET_MST MST
						                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
						                                     <#if muCd?has_content> AND UPJANG.MU_CD  = :muCd </#if>
						                                     <#if tmCd?has_content> AND UPJANG.TM_CD  = :tmCd </#if>
						                          
						          			    ) OUTLET ON OUTLET.OUTLET_CD =  MAST.OUTLET_CD  
						             WHERE SALES_DATE   = :salesDt 
						             AND ROWNUM         = 1
						             AND MAST.OUTLET_CD = DECODE(:outletCd, '', MAST.OUTLET_CD, :outletCd )    
						            ) B ON B.CNT >= 0
					) AS FOPOSTR_INFO
				
				------------------------------------------------------------------------------------------------------------
					
				, (SELECT  DECODE(A.CNT,0,DECODE(B.CNT,0,'매출자료없음','미마감'),'마감완료') 
						FROM DUAL         
						INNER JOIN (SELECT  NVL(COUNT(1), 0) AS CNT  
									  FROM SLA_IF_UPJANG_SALS_MST MAST
									INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM , SYS_CLASS.CODE AS SYS_CLASS
						                          FROM   SLE_OUTLET_MST MST
						                          INNER JOIN  SCO_UPJANG_V   UPJANG     ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
						                                     <#if muCd?has_content>    AND UPJANG.MU_CD  = :muCd </#if>
						                                     <#if tmCd?has_content>    AND UPJANG.TM_CD  = :tmCd </#if>
						                                     
						                          INNER JOIN SCC_COMMON_CODE SYS_CLASS  ON SYS_CLASS.GROUP_CODE ='SYS_CLASS'
                  	 								     					           AND SYS_CLASS.SET3 = UPJANG.MU_CD
                  	 								     					           
                                    			 WHERE MST.OUTLET_CD = DECODE(:outletCd,'', MST.OUTLET_CD,  :outletCd)
                                    			 
						          			    ) OUTLET ON OUTLET.OUTLET_CD =  MAST.UPJANG_CD AND MAST.SYS_CLASS  = OUTLET.SYS_CLASS   
									  WHERE OCCUR_DATE = :salesDt 
									  AND ROWNUM = 1 
									  AND MAST.UPJANG_CD  = DECODE(:outletCd,'',MAST.UPJANG_CD,TO_NUMBER(:outletCd))   
									) A ON A.CNT >= 0
						INNER JOIN (SELECT  NVL(COUNT(1), 0) AS CNT  
						              
						               FROM ( SELECT OUTLET_CD, SALES_DATE FROM SLE_SALS_INFO  WHERE SALES_DATE   = :salesDt GROUP BY OUTLET_CD, SALES_DATE
                                      		  UNION ALL 
                                              SELECT OUTLET_CD, SALES_DATE FROM IF_SLE_SALS_INFO WHERE SALES_DATE   = :salesDt GROUP BY OUTLET_CD,SALES_DATE
                                            ) MAST
                                      
									INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
						                          FROM   SLE_OUTLET_MST MST
						                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
						                                     <#if muCd?has_content> AND UPJANG.MU_CD  = :muCd </#if>
						                                     <#if tmCd?has_content> AND UPJANG.TM_CD  = :tmCd </#if>
						          			    ) OUTLET ON OUTLET.OUTLET_CD =  MAST.OUTLET_CD            
						             WHERE MAST.SALES_DATE = :salesDt 
						               AND ROWNUM          = 1 
						               AND MAST.OUTLET_CD  = DECODE(:outletCd, '', MAST.OUTLET_CD, :outletCd ) 
						           ) B ON B.CNT >= 0
					) AS SALES_INFO
															
			    , (SELECT  DECODE(A.CNT,0,DECODE(B.CNT,0,'매출자료없음','미마감'),'마감완료') 
						FROM DUAL         
						INNER JOIN (SELECT NVL(COUNT(1), 0) AS CNT  
									  FROM SLA_IF_UPJANG_SALS_DETAIL  MAST
									INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM , SYS_CLASS.CODE AS SYS_CLASS
						                          FROM   SLE_OUTLET_MST MST
						                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
						                                     <#if muCd?has_content> AND UPJANG.MU_CD  = :muCd </#if>
						                                     <#if tmCd?has_content> AND UPJANG.TM_CD  = :tmCd </#if>
						                          
						                          INNER JOIN SCC_COMMON_CODE SYS_CLASS  ON SYS_CLASS.GROUP_CODE ='SYS_CLASS'
                  	 								     					           AND SYS_CLASS.SET3 = UPJANG.MU_CD
                  	 								     					                      
						          			    ) OUTLET ON OUTLET.OUTLET_CD =  MAST.UPJANG_CD AND MAST.SYS_CLASS  = OUTLET.SYS_CLASS   
									 WHERE OCCUR_DATE      = :salesDt 
									   AND ROWNUM          = 1 
									   AND MAST.UPJANG_CD  =  DECODE( :outletCd , '' , MAST.UPJANG_CD , TO_NUMBER(:outletCd) )  
								   ) A ON A.CNT >= 0
						INNER JOIN (SELECT NVL(COUNT(1), 0) AS CNT  
						              --FROM SLE_SALS_GOODS  MAST
						               FROM ( SELECT OUTLET_CD, SALES_DATE FROM SLE_SALS_GOODS  WHERE SALES_DATE   = :salesDt GROUP BY OUTLET_CD, SALES_DATE
                                      		  UNION ALL 
                                              SELECT OUTLET_CD, SALES_DATE FROM IF_SLE_SALS_GOODS WHERE SALES_DATE   = :salesDt GROUP BY OUTLET_CD,SALES_DATE
                                            ) MAST
									INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
						                          FROM   SLE_OUTLET_MST MST
						                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
						                                     <#if muCd?has_content> AND UPJANG.MU_CD  = :muCd </#if>
						                                     <#if tmCd?has_content> AND UPJANG.TM_CD  = :tmCd </#if>
						          			    ) OUTLET ON OUTLET.OUTLET_CD =  MAST.OUTLET_CD               
						             WHERE SALES_DATE      = :salesDt 
						               AND ROWNUM          = 1
						               AND MAST.OUTLET_CD  = DECODE(:outletCd, '', MAST.OUTLET_CD, :outletCd )
						           ) B ON B.CNT >= 0
			    	) AS GOODS_INFO
			    	
			    , (SELECT  DECODE(A.CNT,0,DECODE(B.CNT,0,'매출자료없음','미마감'),'마감완료') 
						FROM DUAL         
						INNER JOIN (SELECT NVL(COUNT(1), 0) AS CNT  
									  FROM SLA_IF_UPJANG_PAYMENT   MAST
									INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM , SYS_CLASS.CODE AS SYS_CLASS
						                          FROM   SLE_OUTLET_MST MST
						                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
						                                     <#if muCd?has_content> AND UPJANG.MU_CD  = :muCd </#if>
						                                     <#if tmCd?has_content> AND UPJANG.TM_CD  = :tmCd </#if>
						                          
						                          INNER JOIN SCC_COMMON_CODE SYS_CLASS  ON SYS_CLASS.GROUP_CODE ='SYS_CLASS'
                  	 								     					           AND SYS_CLASS.SET3 = UPJANG.MU_CD
                  	 								     					                      
						          			    ) OUTLET ON OUTLET.OUTLET_CD =  MAST.UPJANG_CD AND MAST.SYS_CLASS  = OUTLET.SYS_CLASS
									 WHERE OCCUR_DATE      = :salesDt 
									   AND ROWNUM          = 1 
									   AND MAST.UPJANG_CD  =  DECODE(:outletCd , '' , MAST.UPJANG_CD , TO_NUMBER(:outletCd) )   
								   ) A ON A.CNT >= 0
						INNER JOIN (SELECT  NVL(COUNT(1), 0) AS CNT  
						              --FROM SLE_SALS_PAY MAST
						              FROM ( SELECT OUTLET_CD, SALES_DATE FROM SLE_SALS_PAY  WHERE SALES_DATE   = :salesDt GROUP BY OUTLET_CD, SALES_DATE
                                      		  UNION ALL 
                                              SELECT OUTLET_CD, SALES_DATE FROM IF_SLE_SALS_PAY WHERE SALES_DATE   = :salesDt GROUP BY OUTLET_CD,SALES_DATE
                                            ) MAST
									INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
						                          FROM   SLE_OUTLET_MST MST
						                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
						                                     <#if muCd?has_content> AND UPJANG.MU_CD  = :muCd </#if>
						                                     <#if tmCd?has_content> AND UPJANG.TM_CD  = :tmCd </#if>
						          			    ) OUTLET ON OUTLET.OUTLET_CD =  MAST.OUTLET_CD                   
						             WHERE SALES_DATE      = :salesDt 
						               AND ROWNUM          = 1
						               AND MAST.OUTLET_CD  = DECODE(:outletCd, '', MAST.OUTLET_CD, :outletCd ) 
						           ) B ON B.CNT >= 0
			    	) AS PAY_INFO
			     ----------------------------------------------------------------------------------------------------------------------------------------------------

			    , (SELECT  DECODE(A.CNT,0,DECODE(B.CNT,0,'매출자료없음','미마감'),'마감완료') 
			        FROM DUAL         
			        INNER JOIN (SELECT  NVL(COUNT(1), 0) AS CNT  
			        			  FROM SLE_SUM_OUTLET_SALS MAST
								INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
					                          FROM   SLE_OUTLET_MST MST
					                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
					                                     <#if muCd?has_content> AND UPJANG.MU_CD  = :muCd </#if>
					                                     <#if tmCd?has_content> AND UPJANG.TM_CD  = :tmCd </#if>
					          			    ) OUTLET ON OUTLET.OUTLET_CD =  MAST.OUTLET_CD   
			        			 WHERE SALES_DATE = :salesDt 
			        			   AND ROWNUM = 1 
			        			   AND MAST.OUTLET_CD  = DECODE(:outletCd, '', MAST.OUTLET_CD, :outletCd )
			        			) A ON A.CNT >= 0
			        INNER JOIN (SELECT  NVL(COUNT(1), 0) AS CNT  
			                      --FROM SLE_SALS_INFO  MAST
			                      FROM ( SELECT OUTLET_CD, SALES_DATE FROM SLE_SALS_INFO    WHERE SALES_DATE   = :salesDt GROUP BY OUTLET_CD, SALES_DATE
                                 		 UNION ALL 
                                         SELECT OUTLET_CD, SALES_DATE FROM IF_SLE_SALS_INFO WHERE SALES_DATE   = :salesDt GROUP BY OUTLET_CD,SALES_DATE
                                       ) MAST
								INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
					                          FROM   SLE_OUTLET_MST MST
					                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
					                                     <#if muCd?has_content> AND UPJANG.MU_CD  = :muCd </#if>
					                                     <#if tmCd?has_content> AND UPJANG.TM_CD  = :tmCd </#if>
					          			    ) OUTLET ON OUTLET.OUTLET_CD =  MAST.OUTLET_CD         
			                     WHERE SALES_DATE = :salesDt 
			                       AND ROWNUM = 1 
			                       AND MAST.OUTLET_CD  = DECODE(:outletCd, '', MAST.OUTLET_CD, :outletCd )
			                    ) B ON B.CNT >= 0
			        ) AS OUTLET_SALES
			        
			    
			    , (SELECT  DECODE(A.CNT,0,DECODE(B.CNT,0,'매출자료없음','미마감'),'마감완료') 
			        FROM DUAL         
			        INNER JOIN (SELECT  NVL(COUNT(1), 0) AS CNT  
			        			  FROM SLE_SUM_TIMELRG_SALS  MAST
								INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
					                          FROM   SLE_OUTLET_MST MST
					                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
					                                     <#if muCd?has_content> AND UPJANG.MU_CD  = :muCd </#if>
					                                     <#if tmCd?has_content> AND UPJANG.TM_CD  = :tmCd </#if>
					          			    ) OUTLET ON OUTLET.OUTLET_CD =  MAST.OUTLET_CD         
			        			 WHERE SALES_DATE = :salesDt 
			        			   AND ROWNUM = 1 
			        			   AND MAST.OUTLET_CD  = DECODE(:outletCd, '', MAST.OUTLET_CD, :outletCd )
			        			) A ON A.CNT >= 0
			        INNER JOIN (SELECT  NVL(COUNT(1), 0) AS CNT  
			        		      --FROM SLE_SALS_INFO  MAST
			        		      FROM ( SELECT OUTLET_CD, SALES_DATE FROM SLE_SALS_INFO    WHERE SALES_DATE   = :salesDt GROUP BY OUTLET_CD, SALES_DATE
	                               		 UNION ALL 
	                                     SELECT OUTLET_CD, SALES_DATE FROM IF_SLE_SALS_INFO WHERE SALES_DATE   = :salesDt GROUP BY OUTLET_CD,SALES_DATE
	                                   ) MAST
								INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
					                          FROM   SLE_OUTLET_MST MST
					                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
					                                     <#if muCd?has_content> AND UPJANG.MU_CD  = :muCd </#if>
					                                     <#if tmCd?has_content> AND UPJANG.TM_CD  = :tmCd </#if>
					          			    ) OUTLET ON OUTLET.OUTLET_CD =  MAST.OUTLET_CD           
			        		     WHERE SALES_DATE = :salesDt 
			        		       AND ROWNUM = 1 
			        		       AND MAST.OUTLET_CD  = DECODE(:outletCd, '', MAST.OUTLET_CD, :outletCd )   
			        		    ) B ON B.CNT >= 0
			        ) AS TIME_SALES
			
			    , (SELECT  DECODE(A.CNT,0,DECODE(B.CNT,0,'매출자료없음','미마감'),'마감완료') 
			        FROM DUAL         
			        INNER JOIN (SELECT  NVL(COUNT(1), 0) AS CNT  
			                      FROM SLE_SUM_DISCNT_TYPE  MAST
								INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
					                          FROM   SLE_OUTLET_MST MST
					                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
					                                     <#if muCd?has_content> AND UPJANG.MU_CD  = :muCd </#if>
					                                     <#if tmCd?has_content> AND UPJANG.TM_CD  = :tmCd </#if>
					          			    ) OUTLET ON OUTLET.OUTLET_CD =  MAST.OUTLET_CD        
			                     WHERE SALES_DATE = :salesDt 
			                       AND ROWNUM = 1 
			                       AND MAST.OUTLET_CD  = DECODE(:outletCd, '', MAST.OUTLET_CD, :outletCd )   
			                    ) A ON A.CNT >= 0
			        INNER JOIN (SELECT  NVL(COUNT(1), 0) AS CNT  
			                      FROM SLE_SALS_DISCNT  MAST
								INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
					                          FROM   SLE_OUTLET_MST MST
					                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
					                                     <#if muCd?has_content> AND UPJANG.MU_CD  = :muCd </#if>
					                                     <#if tmCd?has_content> AND UPJANG.TM_CD  = :tmCd </#if>
					          			    ) OUTLET ON OUTLET.OUTLET_CD =  MAST.OUTLET_CD            
			                     WHERE SALES_DATE = :salesDt 
			                       AND PRMT_CD IS NOT NULL 
			                       AND ROWNUM = 1 
			                       AND MAST.OUTLET_CD  = DECODE(:outletCd, '', MAST.OUTLET_CD, :outletCd )   
			                    ) B ON B.CNT >= 0
			        ) AS DISCN_SALES
			
				, (SELECT  DECODE(A.CNT,0,DECODE(B.CNT,0,'매출자료없음','미마감'),'마감완료') 
			        FROM DUAL         
			        INNER JOIN (SELECT  NVL(COUNT(1), 0) AS CNT  
			                      FROM SLE_SUM_MENU_SALS  MAST
								INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
					                          FROM   SLE_OUTLET_MST MST
					                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
					                                     <#if muCd?has_content> AND UPJANG.MU_CD  = :muCd </#if>
					                                     <#if tmCd?has_content> AND UPJANG.TM_CD  = :tmCd </#if>
					          			    ) OUTLET ON OUTLET.OUTLET_CD =  MAST.OUTLET_CD          
			                     WHERE SALES_DATE = :salesDt 
			                     AND ROWNUM = 1 
			                     AND MAST.OUTLET_CD  = DECODE(:outletCd, '', MAST.OUTLET_CD, :outletCd )   
			                    ) A ON A.CNT >= 0
			        INNER JOIN (SELECT  NVL(COUNT(1), 0) AS CNT  
			                      --FROM SLE_SALS_INFO   MAST
			                      FROM ( SELECT OUTLET_CD, SALES_DATE FROM SLE_SALS_INFO    WHERE SALES_DATE   = :salesDt GROUP BY OUTLET_CD, SALES_DATE
	                               		 UNION ALL 
	                                     SELECT OUTLET_CD, SALES_DATE FROM IF_SLE_SALS_INFO WHERE SALES_DATE   = :salesDt GROUP BY OUTLET_CD,SALES_DATE
	                                   ) MAST
								INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
					                          FROM   SLE_OUTLET_MST MST
					                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
					                                     <#if muCd?has_content> AND UPJANG.MU_CD  = :muCd </#if>
					                                     <#if tmCd?has_content> AND UPJANG.TM_CD  = :tmCd </#if>
					          			    ) OUTLET ON OUTLET.OUTLET_CD =  MAST.OUTLET_CD             
			                     WHERE SALES_DATE = :salesDt 
			                     AND ROWNUM = 1
			                     AND MAST.OUTLET_CD  = DECODE(:outletCd, '', MAST.OUTLET_CD, :outletCd )    
			                   ) B ON B.CNT >= 0
			        ) AS MENU_SALES
			        
			        
			        
			    , (SELECT    COUNT(POS_NUM) AS POS_CNT FROM SLE_POS_SOD MST
							   INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
					                      FROM SLE_OUTLET_MST MST
					                      INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
					                                        <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
					                                        <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
					             		) SHOP ON SHOP.OUTLET_CD = MST.OUTLET_CD
							WHERE  MST.SALES_DATE = :salesDt 
					          AND MST.SOD_STATUS ='S'
							<#if outletCd?has_content>    AND  MST.OUTLET_CD      = :outletCd   </#if>
					) AS POS_SCNT
				
				, (SELECT    COUNT(POS_NUM) AS POS_CNT FROM SLE_POS_SOD MST
							   INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
					                      FROM SLE_OUTLET_MST MST
					                      INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
					                                        <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
					                                        <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
					             		) SHOP ON SHOP.OUTLET_CD = MST.OUTLET_CD
							WHERE  MST.SALES_DATE = :salesDt 
					          AND MST.SOD_STATUS ='E'
							<#if outletCd?has_content>    AND  MST.OUTLET_CD      = :outletCd   </#if>
					) AS POS_ECNT
					
				, (SELECT    COUNT(POS_NUM) AS POS_CNT FROM SLE_POS_SOD MST
							   INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
					                      FROM SLE_OUTLET_MST MST
					                      INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
					                                        <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
					                                        <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
					             		) SHOP ON SHOP.OUTLET_CD = MST.OUTLET_CD
							WHERE  MST.SALES_DATE = :salesDt 
							<#if outletCd?has_content>    AND  MST.OUTLET_CD      = :outletCd   </#if>
					) AS POS_CNT
					
				, (SELECT COUNT(OUTLET_CD) AS  OUTLET_CNT
						FROM (SELECT    MST.OUTLET_CD FROM SLE_POS_SOD MST
							   INNER JOIN (SELECT MST.OUTLET_CD 
					                      FROM SLE_OUTLET_MST MST
					                      INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
					                                        <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
					                                        <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
					             		) SHOP ON SHOP.OUTLET_CD = MST.OUTLET_CD
							WHERE  MST.SALES_DATE = :salesDt 
							<#if outletCd?has_content>    AND  MST.OUTLET_CD      = :outletCd   </#if>
							GROUP BY MST.OUTLET_CD
						) DUAL
					) AS OUTLET_CNT	
						
				, ( SELECT COUNT(OUTLET_CD) AS  OUTLET_CNT
						FROM (SELECT    MST.OUTLET_CD FROM SLE_POS_SOD MST
							   INNER JOIN (SELECT MST.OUTLET_CD 
					                      FROM SLE_OUTLET_MST MST
					                      INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
					             		) SHOP ON SHOP.OUTLET_CD = MST.OUTLET_CD
							WHERE  MST.SALES_DATE = :salesDt
							<#if outletCd?has_content>    AND  MST.OUTLET_CD      = :outletCd   </#if> 
							GROUP BY MST.OUTLET_CD
						) DUAL
					) AS OUTLET_TOTCNT	
				
				---연세대처리 여부
				, (SELECT  DECODE(A.CNT,0,DECODE(B.CNT,0,'매출자료없음','미마감'),'마감완료') 
			        FROM DUAL         
			        INNER JOIN (SELECT  NVL(COUNT(1), 0) AS CNT  
			                      FROM SLE_ERP_BO_SALES  MAST
								 
			                     WHERE SALE_DT = :salesDt 
			                     AND ROWNUM = 1 
			                     AND STORE_CD  IN ( SELECT CODE FROM SCC_COMMON_CODE 
			                                                                        WHERE GROUP_CODE ='SLE_01144'
			                                                                        <#if outletCd?has_content> AND CODE = :outletCd   </#if> 
			                                                                         )
			                    ) A ON A.CNT >= 0
			        INNER JOIN (SELECT  NVL(COUNT(1), 0) AS CNT  
			                     
			                      FROM ( SELECT OUTLET_CD, SALES_DATE FROM SLE_SALS_INFO    
			                                          WHERE SALES_DATE   = :salesDt 
	                               		             AND     OUTLET_CD  IN ( SELECT CODE FROM SCC_COMMON_CODE WHERE GROUP_CODE ='SLE_01144' 
	                               		             									<#if outletCd?has_content> AND CODE = :outletCd   </#if>
	                               		             									)
	                               		             GROUP BY OUTLET_CD, SALES_DATE
	                                      ) MAST
								 
			                     WHERE MAST.SALES_DATE = :salesDt 
			                     AND ROWNUM = 1
			                     AND MAST.OUTLET_CD  IN (  SELECT CODE FROM SCC_COMMON_CODE  WHERE GROUP_CODE ='SLE_01144'
			                                                                        <#if outletCd?has_content> AND CODE = :outletCd   </#if> 
			                                                                         )
			                   ) B ON B.CNT >= 0
			        ) AS BO_SALES
				
			FROM DUAL 

		]]>
	</statement>

	<statement name="ListOutlet" type="select">
		/*+ com.hwfs.rc.sle.eodMgmtDAO.ListOutlet */
		<![CDATA[
		
		SELECT MST.OUTLET_CD, UPJANG.MU_CD, UPJANG.TM_CD, UPJANG.CC_CD, SYS_CLASS.CODE AS SYS_CLASS
                  FROM       SLE_OUTLET_MST MST
                  INNER JOIN SCO_UPJANG_V   UPJANG      ON UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD)
                                                       AND UPJANG.MU_CD  = DECODE(:muCd,'', UPJANG.MU_CD, :muCd)
                                                       AND UPJANG.TM_CD  = DECODE(:tmCd,'', UPJANG.TM_CD,:tmCd)
                  INNER JOIN SCC_COMMON_CODE SYS_CLASS  ON SYS_CLASS.GROUP_CODE ='SYS_CLASS'
                  	 								   AND SYS_CLASS.SET3 = UPJANG.MU_CD
                  WHERE MST.OUTLET_CD   = DECODE(:outletCd,'', MST.OUTLET_CD, :outletCd)
		
		]]>
	</statement>
	<statement name="insertData" type="insert">
		/*+ com.hwfs.rc.sle.eodMgmtDAO.insertData */
		<![CDATA[
			
					
			MERGE INTO SLE_EOD_LIST A
			USING DUAL
			ON (		   OUTLET_CD   = :outletCd
					AND    SALES_DATE  = :salesDt   
					AND    EOD_SEQ     = :eodSeq
					 			
			)
			WHEN MATCHED THEN
			    UPDATE SET
			    	
			    	EOD_NM   = :eodNm,
			    	O_RTN    = :oRtn,
			    	O_RTNMSG = :oRtnmsg,
					 
					UDATE = SYSDATE
					
			WHEN NOT MATCHED THEN
	 		INSERT (
	 				OUTLET_CD,
	 				SALES_DATE,
	 				EOD_SEQ,
	 				EOD_NM,
	 				O_RTN,
	 				O_RTNMSG,
	 				CDATE,
	 				UDATE
	 				) VALUES (
	 				
	 				:outletCd,
	 				:salesDt,
	 				:eodSeq,
	 				
	 				:eodNm,
	 				:oRtn,
	 				:oRtnmsg,
	 				
	 				SYSDATE,
	 				SYSDATE
	 				
	 				)
		]]>
	</statement>

	<statement name="endOfDayList" type="select">
		/*+ com.hwfs.rc.sle.eodMgmtDAO.endOfDayList */
		<![CDATA[
		
		SELECT A.OUTLET_CD, G.OUTLET_NM, DECODE(SOD_STATUS,'S','개점',DECODE(SOD_STATUS,'E', '마감','오류')) AS SOD_NM
    	, NVL(F.EOD_NM,'자재 정보')                 AS EOD_INV   , F.O_RTN AS O_RTN_INV,   NVL(F.O_RTNMSG,'미마감') AS O_RTNMSG_INV,   TO_CHAR(F.CDATE,'YYYY-MM-DD PMHH:MI:SS') AS CDATE_INV,    TO_CHAR(F.UDATE,'YYYY-MM-DD PMHH:MI:SS') AS UDATE_INV
    	, NVL(B.EOD_NM,'매출 정보 (영업회계)')      AS EOD_INFO  , B.O_RTN AS O_RTN_INFO,  NVL(B.O_RTNMSG,'미마감') AS O_RTNMSG_INFO,  TO_CHAR(B.CDATE,'YYYY-MM-DD PMHH:MI:SS') AS CDATE_INFO,   TO_CHAR(B.UDATE,'YYYY-MM-DD PMHH:MI:SS') AS UDATE_INFO
        , NVL(C.EOD_NM,'매출 상세 정보 (영업회계)') AS EOD_GOODS , C.O_RTN AS O_RTN_GOODS, NVL(C.O_RTNMSG,'미마감') AS O_RTNMSG_GOODS, TO_CHAR(C.CDATE,'YYYY-MM-DD PMHH:MI:SS') AS CDATE_GOODS,  TO_CHAR(C.UDATE,'YYYY-MM-DD PMHH:MI:SS') AS UDATE_GOODS
        , NVL(D.EOD_NM,'매출 지불 정보 (영업회계)') AS EOD_PAY   , D.O_RTN AS O_RTN_PAY,   NVL(D.O_RTNMSG,'미마감') AS O_RTNMSG_PAY,   TO_CHAR(D.CDATE,'YYYY-MM-DD PMHH:MI:SS') AS CDATE_PAY,    TO_CHAR(D.UDATE,'YYYY-MM-DD PMHH:MI:SS') AS UDATE_PAY
        , NVL(E.EOD_NM,'카드 승인 정보 (영업회계)') AS EOD_CARD  , E.O_RTN AS O_RTN_CARD,  NVL(E.O_RTNMSG,'미마감') AS O_RTNMSG_CARD,  TO_CHAR(E.CDATE,'YYYY-MM-DD PMHH:MI:SS') AS CDATE_CARD,   TO_CHAR(E.UDATE,'YYYY-MM-DD PMHH:MI:SS') AS UDATE_CARD

	    FROM SLE_POS_SOD A
	    LEFT OUTER JOIN (SELECT  OUTLET_CD, EOD_NM, O_RTN, O_RTNMSG, CDATE, UDATE
	                FROM SLE_EOD_LIST  
	                WHERE SALES_DATE = :salesDt  AND EOD_SEQ ='200'
	                ) B ON B.OUTLET_CD = A.OUTLET_CD  
	    LEFT OUTER JOIN (SELECT  OUTLET_CD, EOD_NM, O_RTN, O_RTNMSG, CDATE, UDATE
	                FROM SLE_EOD_LIST  
	                WHERE SALES_DATE = :salesDt AND EOD_SEQ ='300'
	                ) C ON C.OUTLET_CD = A.OUTLET_CD 
	    LEFT OUTER JOIN (SELECT  OUTLET_CD, EOD_NM, O_RTN, O_RTNMSG, CDATE, UDATE
	                FROM SLE_EOD_LIST  
	                WHERE SALES_DATE = :salesDt AND EOD_SEQ ='400'
	                ) D ON D.OUTLET_CD = A.OUTLET_CD 
	    LEFT OUTER JOIN (SELECT  OUTLET_CD, EOD_NM, O_RTN, O_RTNMSG, CDATE, UDATE
	                FROM SLE_EOD_LIST  
	                WHERE SALES_DATE = :salesDt AND EOD_SEQ ='500'
	                ) E ON E.OUTLET_CD = A.OUTLET_CD        
	    LEFT OUTER JOIN (SELECT  OUTLET_CD, EOD_NM, O_RTN, O_RTNMSG, CDATE, UDATE
	                FROM SLE_EOD_LIST  
	                WHERE SALES_DATE = :salesDt AND EOD_SEQ ='100'
	                ) F ON E.OUTLET_CD = F.OUTLET_CD 
	    INNER JOIN SLE_OUTLET_MST G ON G.OUTLET_CD = A.OUTLET_CD                                      
	    WHERE A.SALES_DATE =:salesDt
	    AND   A.POS_NUM ='01'
	     
	
			]]>
	</statement>


	<statement name="eodAllList" type="select"><![CDATA[ 
		
				SELECT SOD.OUTLET_CD, MAX(OUTLET.OUTLET_NM) AS OUTLET_NM ,  
						SUBSTR(SOD.SALES_DATE,1,4) || '-' ||   SUBSTR(SOD.SALES_DATE,5,2)   || '-' || SUBSTR(SOD.SALES_DATE,7,2)       AS SALES_DATE, 
				       NVL(MAX(INV.MA_YN),'자료없음')   AS INV_YN,
				       NVL(MAX(CARD.MA_YN),'자료없음')  AS CARD_YN,
				       NVL(MAX(INFO.MA_YN),'자료없음')  AS INFO_YN,
					   NVL(MAX(DETA.MA_YN),'자료없음')  AS DETA_YN,
				       NVL(MAX(PAY.MA_YN),'자료없음')  AS PAY_YN,
				       NVL(MAX(ERP.MA_YN),'자료없음')   AS ERP_YN
				
				FROM SLE_POS_SOD SOD
				INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
				                FROM   SLE_OUTLET_MST MST
				                INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
				                           <#if muCd?has_content> AND UPJANG.MU_CD  = :muCd </#if>
				                           <#if tmCd?has_content> AND UPJANG.TM_CD  = :tmCd </#if>             
				              ) OUTLET ON OUTLET.OUTLET_CD =  SOD.OUTLET_CD  
				              
				LEFT OUTER JOIN (
						SELECT KK.OUTLET_CD, KK.SALES_DATE, DECODE(SLE_YN,'Y',DECODE(MA_YN,'Y','마감','미마감'),'자료없음') AS MA_YN
				        FROM (
						  SELECT OUTLET_CD, SALES_DATE, DECODE(NVL(COUNT(1), 0),0,'N','Y') AS SLE_YN 
				          FROM SLE_SALS_GOODS 
				          WHERE OUTLET_CD       =  DECODE(:outletCd, '', OUTLET_CD, :outletCd )
				            AND SALES_DATE      BETWEEN :frSalesDt AND :toSalesDt	--영업일자
				            AND SELL_YN         = 'Y'			--매출 여부
				            AND RECEIPT_STATUS IN ('Q','R','E')	--영수증 상태
				            AND SALS_CLASS = '0'               --매출구분 (0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업관리,5:미포스)
				            AND MATERIAL_CD IS NOT NULL       --마스터에 있는 경우 자재가 변경 되면 문제가 생긴다 하여 염병문 차장님과 야기 해서 매출처리시 넣기로함
				          GROUP BY OUTLET_CD, SALES_DATE 
				            ) KK 
				          LEFT OUTER JOIN (                                      				
				                    SELECT SHOP_CD AS OUTLET_CD, TRANS_DATE AS SALES_DATE, DECODE(NVL(COUNT(1), 0),0,'N','Y') AS MA_YN  
				                      FROM CLUSTER_IF.PO_FOPOSTR_INTERFACE     
				                     WHERE TRANS_DATE BETWEEN :frSalesDt AND :toSalesDt
				                       AND SHOP_CD  = DECODE(:outletCd, '', SHOP_CD, :outletCd )
				                       AND BU_CD ='2000'   
				                     GROUP BY SHOP_CD, TRANS_DATE
				                     ) AA ON AA.OUTLET_CD = KK.OUTLET_CD AND AA.SALES_DATE = KK.SALES_DATE
				           ) INV ON INV.OUTLET_CD = SOD.OUTLET_CD AND INV.SALES_DATE = SOD.SALES_DATE
				
				LEFT OUTER JOIN (
						 	SELECT KK.OUTLET_CD, KK.SALES_DATE, DECODE(SLE_YN,'Y',DECODE(MA_YN,'Y','마감','미마감'),'자료없음') AS MA_YN 
				            FROM (
				            	SELECT OUTLET_CD, SALES_DATE, DECODE(NVL(COUNT(1), 0),0,'N','Y') AS SLE_YN  
				            	FROM SLE_SALS_PAY
				                WHERE OUTLET_CD       =  DECODE(:outletCd, '', OUTLET_CD, :outletCd )
				                  AND SALES_DATE      BETWEEN :frSalesDt AND :toSalesDt		--영업일자
				                  AND SELL_YN         = 'Y'			--매출 여부
				                  AND RECEIPT_STATUS IN ('Q','R','E')		--영수증 상태
				                  AND PAY_CD IN (SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0081' )  --카드지불수단목록
				            	GROUP BY OUTLET_CD, SALES_DATE 
				            ) KK
				            
							LEFT OUTER JOIN ( 
				                SELECT A.UPJANG_CD AS OUTLET_CD, A.OCCUR_DATE AS SALES_DATE, DECODE(NVL(COUNT(1), 0),0,'N','Y') AS MA_YN  
				                  FROM SLA_IF_CARD_APPRV_INFO   A        
				                 WHERE A.OCCUR_DATE BETWEEN :frSalesDt AND :toSalesDt
				                   AND A.UPJANG_CD  = DECODE(:outletCd, '', UPJANG_CD, :outletCd )  
				                   AND A.SYS_CLASS IN ('20','21') 
				                 GROUP BY A.UPJANG_CD, A.OCCUR_DATE
				                 ) AA ON AA.OUTLET_CD = KK.OUTLET_CD AND AA.SALES_DATE = KK.SALES_DATE
				                 
				           ) CARD ON CARD.OUTLET_CD = SOD.OUTLET_CD AND CARD.SALES_DATE = SOD.SALES_DATE
				
				LEFT OUTER JOIN (
							SELECT KK.OUTLET_CD, KK.SALES_DATE, DECODE(SLE_YN,'Y',DECODE(MA_YN,'Y','마감','미마감'),'자료없음') AS MA_YN 
				            FROM (
				            	SELECT OUTLET_CD, SALES_DATE, DECODE(NVL(COUNT(1), 0),0,'N','Y') AS SLE_YN  
				                FROM SLE_SALS_INFO
								    WHERE OUTLET_CD       = DECODE(:outletCd, '', OUTLET_CD, :outletCd )  
				                      AND SALES_DATE      BETWEEN :frSalesDt AND :toSalesDt		--영업일자
				                      AND RECEIPT_STATUS IN ('Q','R','E')	--영수증 상태
				                      AND SALS_CLASS = '0'                --매출구분 (0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업관리,5:미포스)
				
				            	GROUP BY OUTLET_CD, SALES_DATE 
				            ) KK
				            
							LEFT OUTER JOIN ( 
				                SELECT A.UPJANG_CD AS OUTLET_CD, A.OCCUR_DATE AS SALES_DATE, DECODE(NVL(COUNT(1), 0),0,'N','Y') AS MA_YN  
				                  FROM SLA_IF_UPJANG_SALS_MST  A        
				                 WHERE A.OCCUR_DATE  BETWEEN :frSalesDt AND :toSalesDt
				                   AND A.UPJANG_CD  = DECODE(:outletCd, '', A.UPJANG_CD, :outletCd )  
				                   AND A.SYS_CLASS IN ('20','21') 
				                 GROUP BY A.UPJANG_CD, A.OCCUR_DATE
				            	 ) AA ON AA.OUTLET_CD = KK.OUTLET_CD AND AA.SALES_DATE = KK.SALES_DATE
				                    
				           ) INFO ON INFO.OUTLET_CD = SOD.OUTLET_CD AND INFO.SALES_DATE = SOD.SALES_DATE 
				           
				LEFT OUTER JOIN (
							SELECT KK.OUTLET_CD, KK.SALES_DATE, DECODE(SLE_YN,'Y',DECODE(MA_YN,'Y','마감','미마감'),'자료없음') AS MA_YN 
				            FROM (
				            	SELECT OUTLET_CD, SALES_DATE, DECODE(NVL(COUNT(1), 0),0,'N','Y') AS SLE_YN  
				                FROM SLE_SALS_GOODS
								    WHERE OUTLET_CD       = DECODE(:outletCd, '', OUTLET_CD, :outletCd )  
				                      AND SALES_DATE      BETWEEN :frSalesDt AND :toSalesDt		--영업일자
				                      AND SELL_YN         = DECODE(RECEIPT_STATUS ,'E','N','Y')				--매출 여부
				                      AND RECEIPT_STATUS IN ('Q','R','E')	--영수증 상태
				                      AND SALS_CLASS = '0'                --매출구분 (0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업관리,5:미포스)
				
				            	GROUP BY OUTLET_CD, SALES_DATE 
				            ) KK
				            
							LEFT OUTER JOIN (
				                SELECT A.UPJANG_CD AS OUTLET_CD, A.OCCUR_DATE AS SALES_DATE, DECODE(NVL(COUNT(1), 0),0,'N','Y') AS MA_YN  
				                  FROM SLA_IF_UPJANG_SALS_DETAIL A          
				                 WHERE A.OCCUR_DATE BETWEEN :frSalesDt AND :toSalesDt
				                   AND A.UPJANG_CD  = DECODE(:outletCd, '', A.UPJANG_CD, :outletCd )  
				                   AND A.SYS_CLASS IN ('20','21') 
				                 GROUP BY A.UPJANG_CD, A.OCCUR_DATE
				           		) AA ON AA.OUTLET_CD = KK.OUTLET_CD AND AA.SALES_DATE = KK.SALES_DATE
				                
				           ) DETA ON DETA.OUTLET_CD = SOD.OUTLET_CD AND DETA.SALES_DATE = SOD.SALES_DATE 
				
				LEFT OUTER JOIN (
				
							SELECT KK.OUTLET_CD, KK.SALES_DATE, DECODE(SLE_YN,'Y',DECODE(MA_YN,'Y','마감','미마감'),'자료없음') AS MA_YN 
				            FROM (
				            	SELECT OUTLET_CD, SALES_DATE, DECODE(NVL(COUNT(1), 0),0,'N','Y') AS SLE_YN  
				                FROM SLE_SALS_PAY
								    WHERE OUTLET_CD       = DECODE(:outletCd, '', OUTLET_CD, :outletCd )  
				                      AND SALES_DATE      BETWEEN :frSalesDt AND :toSalesDt		--영업일자
				                      AND RECEIPT_STATUS IN ('Q','R','E')	--영수증 상태
				                      AND SALS_CLASS = '0'                --매출구분 (0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업관리,5:미포스)
				
				            	GROUP BY OUTLET_CD, SALES_DATE 
				            ) KK
				            
							LEFT OUTER JOIN (
				                SELECT A.UPJANG_CD AS OUTLET_CD, A.OCCUR_DATE AS SALES_DATE, DECODE(NVL(COUNT(1), 0),0,'N','Y') AS MA_YN  
				                  FROM SLA_IF_UPJANG_PAYMENT A         
				                 WHERE A.OCCUR_DATE BETWEEN :frSalesDt AND :toSalesDt
				                   AND A.UPJANG_CD  = DECODE(:outletCd, '', UPJANG_CD, :outletCd )  
				                   AND A.SYS_CLASS IN ('20','21') 
				                 GROUP BY A.UPJANG_CD, A.OCCUR_DATE
				                 ) AA ON AA.OUTLET_CD = KK.OUTLET_CD AND AA.SALES_DATE = KK.SALES_DATE
				                 
				           ) PAY ON PAY.OUTLET_CD = SOD.OUTLET_CD AND PAY.SALES_DATE = SOD.SALES_DATE 
				           
				LEFT OUTER JOIN (
					
							SELECT KK.OUTLET_CD, KK.SALES_DATE, DECODE(SLE_YN,'Y',DECODE(MA_YN,'Y','마감','미마감'),'자료없음') AS MA_YN 
				            FROM (
				            	SELECT OUTLET_CD, SALES_DATE, DECODE(NVL(COUNT(1), 0),0,'N','Y') AS SLE_YN  
				                FROM SLE_SALS_INFO
								    WHERE OUTLET_CD IN (SELECT CODE FROM SCC_COMMON_CODE WHERE GROUP_CODE ='SLE_01144')
				                      AND SALES_DATE      BETWEEN :frSalesDt AND :toSalesDt		--영업일자
				                      AND RECEIPT_STATUS IN ('Q','R')	--영수증 상태
				                      AND SALS_CLASS = '0'                --매출구분 (0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업관리,5:미포스) 
				                      AND MODIFY_STATUS IN ('0','1')        --
				                    
				            	GROUP BY OUTLET_CD, SALES_DATE 
				            ) KK
				            
							LEFT OUTER JOIN (	  
				                SELECT A.STORE_CD AS OUTLET_CD, A.SALE_DT AS SALES_DATE, DECODE(NVL(COUNT(1), 0),0,'N','Y') AS MA_YN  
				                  FROM SLE_ERP_BO_SALES A        
				                 WHERE A.SALE_DT BETWEEN :frSalesDt AND :toSalesDt
				                   AND A.STORE_CD  = DECODE(:outletCd, '', A.STORE_CD, :outletCd )   
				                 GROUP BY A.STORE_CD, A.SALE_DT
				           		 ) AA ON AA.OUTLET_CD = KK.OUTLET_CD AND AA.SALES_DATE = KK.SALES_DATE
							) ERP ON ERP.OUTLET_CD = SOD.OUTLET_CD AND ERP.SALES_DATE = SOD.SALES_DATE                         
				                                                 
				 WHERE SOD.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt
				    AND SOD.OUTLET_CD  = DECODE(:outletCd, '', SOD.OUTLET_CD, :outletCd )   
				 GROUP BY SOD.OUTLET_CD, SOD.SALES_DATE
 
		]]></statement>

</hqml>
