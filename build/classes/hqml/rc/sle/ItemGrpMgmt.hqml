<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="rc.sle.itemGrpMgmtDAO">
	<desc>아이템 그룹 등록 관리</desc>
 
	
	
	<!--  DATA를 조회한다. -->
	<statement name="selectList" type="select">
	/*+ com.hwfs.rc.sle.dao.itemGrpMgmtDAO.selectList */
	<![CDATA[
	SELECT  TREE_KEY,  DSPL_CD ,
			 MENU_CLASS, MENU_CLASS_NM,
			 MENU_CLSFI, MENU_CLSFI_NAME,
			 MENU_SCLASS,
			 MENU_CLSFI_NM,
			 CLASS_PIC,
             CLSFI_PIC,
             PIC_PLACE,
			 LANGAE1,
			 LANGAE2,
			 LANGAE3
	
	FROM (
		SELECT  '0' AS TREE_KEY,   '00' AS DSPL_CD ,
				'00' AS MENU_CLASS, '' AS MENU_CLASS_NM,
				'00' AS MENU_CLSFI, '' AS MENU_CLSFI_NAME,
				'00' AS MENU_SCLASS,
				'Item Group' AS MENU_CLSFI_NM,
				'0' AS CLASS_PIC,
                '0' AS CLSFI_PIC,
                '0' AS PIC_PLACE,
				'' AS LANGAE1,
				'' AS LANGAE2,
				'' AS LANGAE3
		FROM DUAL
		UNION ALL
		SELECT
			DECODE(NVL(MENU_SCLASS, '00'), '00', DECODE(NVL(MENU_CLSFI, '00'), '00','1' ,'2'),'3') AS TREE_KEY,
			DECODE(NVL(MENU_SCLASS, '00'), '00', DECODE(NVL(MENU_CLSFI, '00'), '00',MENU_CLASS ,MENU_CLSFI) , MENU_SCLASS) AS  DSPL_CD,
			MENU_CLASS, A.MENU_CLASS_NM,
			MENU_CLSFI, 
			B.MENU_CLSFI_NAME,
						
			MENU_SCLASS,
			MENU_CLSFI_NM,
			
			CLASS_PIC,
            DECODE(NVL(MENU_CLSFI, '00'),  '00','0',MENU_CLSFI) AS CLSFI_PIC,
            DECODE(NVL(MENU_SCLASS, '00'), '00','0',PIC_PLACE) AS PIC_PLACE,
			 
			LANGAE1,
			LANGAE2,
			LANGAE3
		
		FROM  SLE_MENU_CLSFI 
		
		--대분류
		INNER JOIN (SELECT  MENU_CLASS AS CLASS_CD , PIC_PLACE AS CLASS_PIC, 
        					MENU_CLSFI_NM AS MENU_CLASS_NM 
        				FROM SLE_MENU_CLSFI  
                        WHERE MENU_CLSFI = '00' 
                          AND MENU_SCLASS   = '00') A ON  A.CLASS_CD = MENU_CLASS 
        --중부류               
		INNER JOIN (SELECT 	MENU_CLASS AS CLASS_CD , MENU_CLSFI AS CLSFI_CD, PIC_PLACE AS CLSFI_PIC,
        					MENU_CLSFI_NM AS MENU_CLSFI_NAME 
        				FROM SLE_MENU_CLSFI  
                        WHERE MENU_SCLASS = '00') B ON B.CLASS_CD = MENU_CLASS  AND B.CLSFI_CD = MENU_CLSFI
                        
		WHERE USE_YN = 'Y'
		
	)
		ORDER BY CLASS_PIC, CLSFI_PIC, PIC_PLACE, MENU_CLASS, MENU_CLSFI, MENU_SCLASS

	]]>
	</statement>
	

	<!--  DATA를 조회한다. -->
	<statement name="searchList" type="select">
	/*+ com.hwfs.rc.sle.dao.itemGrpMgmtDAO.searchList */
	<![CDATA[
	 
		SELECT
			DECODE(NVL(MENU_SCLASS, '00'), '00', DECODE(NVL(MENU_CLSFI, '00'), '00','1' ,'2'),'3' ) AS TREE_KEY,
			DECODE(NVL(MENU_SCLASS, '00'), '00', DECODE(NVL(MENU_CLSFI, '00'), '00',MENU_CLASS ,MENU_CLSFI) , MENU_SCLASS) AS  DSPL_CD,
			MENU_CLASS,
			MENU_CLSFI,
			MENU_SCLASS,
			MENU_CLSFI_NM,
			PIC_PLACE,
			LANGAE1,
			LANGAE2,
			LANGAE3,
			DECODE(USE_YN, 'Y', 1, 0) AS USE_YN
			
		FROM  SLE_MENU_CLSFI 
		WHERE   USE_YN  	= DECODE(:useYn, '1', 'Y', USE_YN) 
		<#if menuClass?exists>
		 	<#if menuClsfi?exists>   
			  AND MENU_CLASS     = :menuClass  
			  AND MENU_CLSFI     = :menuClsfi
			  AND MENU_SCLASS    > '00'
			<#else>   
			  AND MENU_CLASS     = :menuClass  
			  AND MENU_CLSFI     > '00'
			  AND MENU_SCLASS    = '00' 
			
			</#if>
		<#else>
			AND MENU_CLSFI     = '00'
			AND MENU_SCLASS    = '00'
			
		</#if>
		ORDER BY MENU_CLASS, MENU_CLSFI, MENU_SCLASS

	]]>
	</statement>
	
		
	<!--  DATA를 저장한다. -->
	<statement name="insertData" type="insert">
	/*+ com.hwfs.rc.sle.dao.itemGrpMgmtDAO.insertData */
		<![CDATA[
	 INSERT INTO SLE_MENU_CLSFI
		(
		 MENU_CLASS,
		 MENU_CLSFI,
		 MENU_SCLASS,
		 MENU_CLSFI_NM,
		 PIC_PLACE,
		 LANGAE1,
		 LANGAE2,
		 LANGAE3,
		 
		 USE_YN,
		 CDATE,
		 CUSER,
		 UDATE,
		 UUSER
		) VALUES (
		 :menuClass,
		 :menuClsfi,
		 :menuSclass,
		 :menuClsfiNm, 
		
		<#if picPlace?exists> :picPlace, <#else> null, </#if>
		<#if langae1?exists> :langae1, <#else> null, </#if>
		<#if langae2?exists> :langae2, <#else> null, </#if>
		<#if langae3?exists> :langae3, <#else> null, </#if>
		 
		
		<#if useYn?exists> DECODE(:useYn, '1', 'Y', 'N'), <#else> null, </#if>
		 SYSDATE,
		 :loginSabun,
		 SYSDATE,
		 :loginSabun
		
		)
		]]>
	</statement>
	
	<!--  DATA를 수정한다. -->
	<statement name="updateData" type="update">
	/*+ com.hwfs.rc.sle.dao.itemGrpMgmtDAO.updateData */
		<![CDATA[
 		UPDATE SLE_MENU_CLSFI SET
		
		 		<#if menuClsfiNm?exists> MENU_CLSFI_NM = :menuClsfiNm, </#if>
				<#if picPlace?exists> PIC_PLACE = :picPlace, </#if>
				<#if langae1?exists> LANGAE1 = :langae1, </#if>
				<#if langae2?exists> LANGAE2 = :langae2, </#if>
				<#if langae3?exists> LANGAE3 = :langae3, </#if> 
				
				<#if useYn?exists> USE_YN = DECODE(:useYn, '1', 'Y', 'N'), </#if>
				UDATE = SYSDATE,
				UUSER = :loginSabun
		
		WHERE  MENU_CLASS  = :menuClass
		AND    MENU_CLSFI  = :menuClsfi
		AND    MENU_SCLASS = :menuSclass
 
		]]>
	</statement>
	
	
	
	<!--  중복을 체크 한다. -->
	<statement name="selectListCheck" type="select">
	/*+ com.hwfs.rc.sle.dao.itemGrpMgmtDAO.selectListCheck */
		<![CDATA[
 		SELECT MENU_CLASS,MENU_CLSFI,MENU_SCLASS,MENU_CLSFI_NM,PIC_PLACE ,USE_YN
 		FROM SLE_MENU_CLSFI 
		WHERE  MENU_CLASS  = :menuClass
		AND    MENU_CLSFI  = :menuClsfi
		AND    MENU_SCLASS = :menuSclass
 
		]]>
	</statement>
	
	<!--  코드를 생성한다. -->
	<statement name="maxCodeCreate" type="select">
	/*+ com.hwfs.rc.sle.dao.itemGrpMgmtDAO.maxCodeCreate */
		<![CDATA[
		<#if treeKey == '1'>
			SELECT LPAD(NVL(MAX(MENU_CLASS),'0') + 1,'10','0') AS MAX_CODE
	 		FROM SLE_MENU_CLSFI
	 		WHERE MENU_CLSFI  = '00'
			  AND MENU_SCLASS = '00'
		<#elseif treeKey == '2'>
			SELECT LPAD(NVL(MAX(MENU_CLSFI),'0') + 1,'10','0') AS MAX_CODE
	 		FROM SLE_MENU_CLSFI
	 		WHERE MENU_CLASS  = :menuClass
			  AND MENU_SCLASS = '00'
		<#else>
			SELECT LPAD(NVL(MAX(MENU_SCLASS),'0') + 1,'10','0') AS MAX_CODE
	 		FROM SLE_MENU_CLSFI
	 		WHERE MENU_CLASS  = :menuClass
			  AND MENU_CLSFI  = :menuClsfi
		</#if>
 		
 		
		]]>
	</statement>
	
	<!--  하위코드가 존재 하는지 확인 한다. -->
	<statement name="selectRecordCnt" type="select">
	/*+ com.hwfs.rc.sle.dao.itemGrpMgmtDAO.selectRecordCnt */
		<![CDATA[
		<#if treeKey == '1'>
			SELECT COUNT(MENU_CLSFI) AS RECORD_CNT
	 		FROM SLE_MENU_CLSFI
	 		WHERE MENU_CLASS  = :menuClass
	 		
		<#elseif treeKey == '2'>
			SELECT COUNT(MENU_SCLASS) AS RECORD_CNT
	 		FROM SLE_MENU_CLSFI
	 		WHERE MENU_CLASS  = :menuClass
			  AND MENU_CLSFI  = :menuClsfi
		<#else>
			SELECT 0 AS RECORD_CNT
	 		FROM DUAL 
		</#if>
 		
 		
		]]>
	</statement>
	
</hqml>	