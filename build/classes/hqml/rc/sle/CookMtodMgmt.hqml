<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="rc.sle.cookMtodMgmtDAO">
	<desc>조리 방법 등록</desc>
 
	
	
	<!--  GRP DATA를 조회한다. -->
	<statement name="selectGrpList" type="select">
	<![CDATA[
		SELECT MST.OUTLET_CD, SHOP.OUTLET_NM AS OUTLET_NM,

		       MST.COOK_MTOD_GRP,
		       MST.COOK_MTOD_GRP_NM,
		       MST.LANGAE1,
		       MST.LANGAE2, 
		       MST.LANGAE3,

		       DECODE(MST.USE_YN, 'Y', 1, 0) AS USE_YN 
		
		FROM        SLE_COOK_MTOD_GRP 	MST
		INNER  JOIN SLE_OUTLET_MST      SHOP   ON SHOP.OUTLET_CD   = MST.OUTLET_CD  -- 업장 코드
		WHERE  1 = 1
		
		<#if outletCd?has_content>  	AND   MST.OUTLET_CD = :outletCd  </#if>
		<#if useYn?has_content>  		AND   MST.USE_YN  	= DECODE(:useYn, '1', 'Y', MST.USE_YN)  </#if>
		 
		ORDER BY MST.OUTLET_CD,   MST.COOK_MTOD_GRP, MST.COOK_MTOD_GRP_NM

	]]>
	</statement>
	
 
	<!--  DATA를 조회한다. -->
	<statement name="selectList" type="select">
	<![CDATA[
 
		SELECT MST.OUTLET_CD,     SHOP.OUTLET_NM        AS OUTLET_NM,
		       MST.COOK_MTOD_GRP,  GRP.COOK_MTOD_GRP_NM AS COOK_MTOD_GRP_NM,
		       
		       MST.COOK_MTOD_CD,
		       MST.COOK_MTOD_NM,
	           MST.LANGAE1,
			   MST.LANGAE2,
			   MST.LANGAE3,

		       DECODE(MST.USE_YN, 'Y', 1, 0) AS USE_YN 
		       
		FROM        SLE_COOK_MTOD   	MST
		INNER  JOIN SLE_OUTLET_MST      SHOP   ON SHOP.OUTLET_CD   		= MST.OUTLET_CD  -- 업장 코드
		
		INNER  JOIN SLE_COOK_MTOD_GRP   GRP    ON GRP.OUTLET_CD    		= MST.OUTLET_CD
											  AND GRP.COOK_MTOD_GRP     = MST.COOK_MTOD_GRP

		WHERE  1 = 1
		
		<#if outletCd?has_content>  		AND   MST.OUTLET_CD     = :outletCd         </#if>
		<#if cookMtodGrp?has_content>  		AND   MST.COOK_MTOD_GRP = :cookMtodGrp  </#if>
		<#if useYn?has_content>  			AND   MST.USE_YN  	    = DECODE(:useYn, '1', 'Y', MST.USE_YN)  </#if>
			 	 
		ORDER BY MST.OUTLET_CD, MST.COOK_MTOD_GRP,  MST.COOK_MTOD_CD,MST.COOK_MTOD_NM

	]]>
	</statement>
		
	<!--  코드 존재여부 확인 -->
	<statement name="selectListGrpCheck" type="select">
	<![CDATA[
 
		SELECT   OUTLET_CD 
		       , COOK_MTOD_GRP
		       , COOK_MTOD_GRP_NM
		FROM   SLE_COOK_MTOD_GRP 	
		WHERE  OUTLET_CD     = :outletCd  
		  AND  COOK_MTOD_GRP = :cookMtodGrp

	]]>
	</statement>
	
	<!--  코드 존재여부 확인 -->
	<statement name="selectListCheck" type="select">
	<![CDATA[
 
		SELECT   OUTLET_CD 
		       , COOK_MTOD_GRP
		       , COOK_MTOD_GRP_NM
		       , COOK_MTOD_CD
		       , COOK_MTOD_NM
		FROM   SLE_COOK_MTOD 	
		WHERE  OUTLET_CD     = :outletCd  
		  AND  COOK_MTOD_CD  = :cookMtodCd

	]]>
	</statement>	
		
		
	<!-- GRP DATA를 저장한다. -->
	<statement name="insertGrpData" type="insert">
		<![CDATA[
	  	INSERT INTO SLE_COOK_MTOD_GRP
			(
				 OUTLET_CD,
				 COOK_MTOD_GRP,
				 COOK_MTOD_GRP_NM,
				 LANGAE1,
				 LANGAE2,
				 LANGAE3,
				 USE_YN,
				 CDATE,
				 CUSER,
				 UDATE,
				 UUSER
			) VALUES (
				 :outletCd,
				 :cookMtodGrp,
				<#if cookMtodGrpNm?exists> :cookMtodGrpNm, 			<#else> null, </#if>
				<#if langae1?exists> 	   :langae1, 				<#else> null, </#if>
				<#if langae2?exists> 	   :langae2, 				<#else> null, </#if>
				<#if langae3?exists> 	   :langae3, 				<#else> null, </#if>
				<#if useYn?exists>  DECODE(:useYn, '1', 'Y', 'N'), 	<#else> null, </#if>
				 SYSDATE,
				 :loginSabun,
				 SYSDATE,
				 :loginSabun
			)


		
		]]>
	</statement>
	
	<!--  DATA를 저장한다. -->
	<statement name="insertData" type="insert">
		<![CDATA[
	 	INSERT INTO SLE_COOK_MTOD
			(
				OUTLET_CD,
				COOK_MTOD_GRP,
				COOK_MTOD_CD,
				COOK_MTOD_NM,
				LANGAE1,
				LANGAE2,
				LANGAE3,
				USE_YN,
				CDATE,
				CUSER,
				UDATE,
				UUSER
			) VALUES (
				 :outletCd,
				 :cookMtodGrp,
				 :cookMtodCd,
				<#if cookMtodNm?exists> 	:cookMtodNm, 			<#else> null, </#if>
				<#if langae1?exists> 		:langae1, 				<#else> null, </#if>
				<#if langae2?exists> 		:langae2, 				<#else> null, </#if>
				<#if langae3?exists> 		:langae3, 				<#else> null, </#if>
				<#if useYn?exists>   DECODE(:useYn, '1', 'Y', 'N'), <#else> null, </#if>
				 SYSDATE,
				 :loginSabun,
				 SYSDATE,
				 :loginSabun
			)


				 
		
		]]>
	</statement>
	
	
	<!-- GRP DATA를 수정한다. -->
	<statement name="updateGrpData" type="update">
		<![CDATA[
		UPDATE SLE_COOK_MTOD_GRP SET
			<#if cookMtodGrpNm?exists> 	COOK_MTOD_GRP_NM = :cookMtodGrpNm, </#if>
			<#if langae1?exists> 		LANGAE1 = :langae1, </#if>
			<#if langae2?exists> 		LANGAE2 = :langae2, </#if>
			<#if langae3?exists> 		LANGAE3 = :langae3, </#if>
			<#if useYn?exists> 			USE_YN = DECODE(:useYn, '1', 'Y', 'N'), </#if>
							       		UDATE = SYSDATE,
							       		UUSER = :loginSabun
		WHERE  OUTLET_CD     = :outletCd
		AND    COOK_MTOD_GRP = :cookMtodGrp
				                   
		 
		]]>
	</statement>
	
	<!--  코드를 생성한다. -->
	<statement name="maxCodeCreateGrp" type="select">
		<![CDATA[
		 
		SELECT LPAD(NVL(MAX(COOK_MTOD_GRP),'0') + 1,'4','0') AS MAX_CODE
 		FROM SLE_COOK_MTOD_GRP
 		WHERE  OUTLET_CD 		 = :outletCd
		
		
		]]>
	</statement>
	
	
	 <!--  DATA를 수정한다. -->
	<statement name="updateData" type="update">
		<![CDATA[
	  	UPDATE SLE_COOK_MTOD SET
			<#if cookMtodNm?exists> COOK_MTOD_NM = :cookMtodNm, </#if>
			<#if langae1?exists> 	LANGAE1      = :langae1, </#if>
			<#if langae2?exists> 	LANGAE2      = :langae2, </#if>
			<#if langae3?exists> 	LANGAE3      = :langae3, </#if>
			<#if useYn?exists> 		USE_YN       = DECODE(:useYn, '1', 'Y', 'N'), </#if>
			       					UDATE        = SYSDATE,
			       					UUSER        = :loginSabun
		WHERE  OUTLET_CD       = :outletCd
		AND    COOK_MTOD_CD    = :cookMtodCd


 
		]]>
	</statement>
	
	
	<!-- 상위 코드가 수정 되는 경우 하위코드를 모두 수정한다. -->
	<statement name="updateUseAllData" type="update">
		<![CDATA[
		UPDATE SLE_COOK_MTOD
		SET    USE_YN = DECODE(:useYn, '1', 'Y', 'N'),
		       UUSER = :loginSabun,
		       UDATE = SYSDATE
		WHERE  OUTLET_CD 		 = :outletCd
		AND    COOK_MTOD_GRP 	 = :cookMtodGrp
	 

				]]>
			</statement>
	
	 <!--  코드를 생성한다. -->
	<statement name="maxCodeCreate" type="select">
		<![CDATA[
		 
		SELECT LPAD(NVL(MAX(COOK_MTOD_CD),'0') + 1,'10','0') AS MAX_CODE
 		FROM SLE_COOK_MTOD
 		WHERE  OUTLET_CD 		 = :outletCd
		
		
		]]>
	</statement>
</hqml>	