<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="rc.sle.outletDailySalesDAO">
	<desc>외시식사업부 영업속보</desc>
	<statement name="dailyDelete" type="delete">
	/*+ com.hwfs.rc.sle.dao.outletDailySalesDAO.dailyDelete */
		<![CDATA[
			DELETE FROM SLE_DAILY_TEMP
		]]>
	</statement>	
		
	<statement name="dailyInsert" type="insert">
	/*+ com.hwfs.rc.sle.dao.outletDailySalesDAO.dailyInsert */
		<![CDATA[

				 

				INSERT INTO SLE_DAILY_TEMP (
				OUTLET_BGN,OUTLET_BGN_NM,
				OUTLET_GRP,OUTLET_GRP_NM,
				OUTLET_SUM,OUTLET_HAP_NM,
				OUTLET_CD,OUTLET_NM,
				PIC_PLACE,GBN_PLACE,GRP_PLACE,
				TODAY_GOAL,TODAY_NET,TODAY_PER,TODAY_WEEK_NET,TODAY_WEEK_PER,TODAY_YEAR_NET,TODAY_YEAR_PER,
				MTD_GOAL_MOON,MTD_GOAL,MTD_NET,MTD_PER,MTD_YEAR_NET,MTD_YEAR_PER,
				YTD_GOAL_YEAR,YTD_GOAL,YTD_NET,YTD_PER,YTD_OLD_NET,YTD_OLD_PER
				
				
				)
				
				
				SELECT OUTLET.OUTLET_BGN, BGN.CODE_NAME AS OUTLET_BGN_NM,
				       OUTLET.OUTLET_GRP, GRP.CODE_NAME AS OUTLET_GRP_NM,
				       OUTLET.OUTLET_SUM, HAP.CODE_NAME AS OUTLET_HAP_NM,
				       OUTLET.OUTLET_CD , OUTLET.OUTLET_NM,
                       OUTLET.PIC_PLACE, BGN.SORT_SEQ AS GBN_PLACE , GRP.SORT_SEQ AS GRP_PLACE,
				       --TODAY
				       NVL(TODAY_GOODS.TODAY_GOAL_AMT,0) AS TODAY_GOAL,   --목표
				       NVL(TODAY_GOODS.NET_AMT,0) AS TODAY_NET,			 --실적
				       ROUND(NVL(TODAY_GOODS.NET_AMT,0) / DECODE(NVL(TODAY_GOODS.TODAY_GOAL_AMT,0),0,NULL,NVL(TODAY_GOODS.TODAY_GOAL_AMT,0)) * 100 ,1) AS TODAY_PER, --실적(%)
				       TODAY_WEEK.WEEK_NET_AMT AS TODAY_WEEK_NET,								 --전년(요일)
				       ROUND( NVL(TODAY_GOODS.NET_AMT,0) / DECODE(NVL(TODAY_WEEK.WEEK_NET_AMT,0),0,NULL,NVL(TODAY_WEEK.WEEK_NET_AMT,0)) * 100 ,1) AS TODAY_WEEK_PER,  --전년(요일) %
				       NVL(TODAY_YEAR.TODAY_YEAR_NET_AMT,0) AS TODAY_YEAR_NET,	--TODAY 전년(일자)
					   ROUND(NVL(TODAY_GOODS.NET_AMT,0) / DECODE(NVL(TODAY_YEAR.TODAY_YEAR_NET_AMT,0),0,NULL,NVL(TODAY_YEAR.TODAY_YEAR_NET_AMT,0)) * 100 ,1) AS TODAY_YEAR_PER, --전년(일자) %

					   --MTD
				       NVL(MTD_GOAL.MOON_GOAL_AMT,0)        AS MTD_GOAL_MOON,	 --월간목표
				       NVL(MTD_DAY_GOAL.MTD_DAY_GOAL_AMT,0) AS MTD_GOAL, --누계목표
					   NVL(MTD_DAY_GOODS.MTD_NET_AMT,0)     AS MTD_NET,      --누계실적
				       ROUND( NVL(MTD_DAY_GOODS.MTD_NET_AMT,0) / DECODE(NVL(MTD_DAY_GOAL.MTD_DAY_GOAL_AMT,0),0,NULL,NVL(MTD_DAY_GOAL.MTD_DAY_GOAL_AMT,0)) * 100 ,1) AS	MTD_PER, --실적(%)
				       NVL(MTD_YEAR_GOODS.MTD_YEAR_NET_AMT,0) AS MTD_YEAR_NET, --전년실적
				       ROUND(NVL(MTD_DAY_GOODS.MTD_NET_AMT,0) / DECODE(NVL(MTD_YEAR_GOODS.MTD_YEAR_NET_AMT,0),0,NULL,NVL(MTD_YEAR_GOODS.MTD_YEAR_NET_AMT,0)) * 100 ,1) AS	MTD_YEAR_PER, --실적(%)

				       --YTD
				       NVL(YTD_GOAL.YEAR_GOAL_AMT,0) AS YTD_GOAL_YEAR, --년간목표
				       NVL(YTD_YEAR_GOAL.YEAR_GOAL_AMT_MOON,0) + NVL(YTD_YEAR_GOAL_DAY.YEAR_DAY_GOAL_AMT,0) AS YTD_GOAL,  --목표
				       NVL(YTD_GOODS.YEAR_NET_AMT,0) AS YTD_NET,  --실적
				       ROUND(NVL(YTD_GOODS.YEAR_NET_AMT,0) /
				        DECODE(NVL(YTD_YEAR_GOAL.YEAR_GOAL_AMT_MOON,0) + NVL(YTD_YEAR_GOAL_DAY.YEAR_DAY_GOAL_AMT,0),0,NULL,
				        		NVL(YTD_YEAR_GOAL.YEAR_GOAL_AMT_MOON,0) + NVL(YTD_YEAR_GOAL_DAY.YEAR_DAY_GOAL_AMT,0)) * 100 ,1) AS	YTD_PER, --실적(%)
				       NVL(YTD_OLD_GOODS.YEAR_OLD_NET_AMT,0) AS YTD_OLD_NET,  --전년실적
				       ROUND(NVL(YTD_GOODS.YEAR_NET_AMT,0) / DECODE(NVL(YTD_OLD_GOODS.YEAR_OLD_NET_AMT,0),0,NULL,NVL(YTD_OLD_GOODS.YEAR_OLD_NET_AMT,0)) * 100 ,1)  AS	YTD_OLD_PER --실적(%)


				FROM SLE_OUTLET_MST OUTLET

				INNER JOIN SCC_COMMON_CODE BGN ON BGN.GROUP_CODE = 'SLE_0112' AND BGN.CODE = OUTLET.OUTLET_BGN --대그룹
				INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0110' AND GRP.CODE = OUTLET.OUTLET_GRP --그룹
				LEFT OUTER JOIN SCC_COMMON_CODE HAP ON HAP.GROUP_CODE = 'SLE_0113' AND HAP.CODE = OUTLET.OUTLET_SUM --합하기  (합하지 않는 것도 있을수 있음)
				INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
		                           FROM   SLE_OUTLET_MST      MST
		                           INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD)
		                                         					<#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
		                                         					<#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
		                                         					<#if upjangCd?has_content> AND  MST.OUTLET_CD = :upjangCd </#if>
		              			 ) OUTLET2 ON OUTLET2.OUTLET_CD =  OUTLET.OUTLET_CD
				LEFT OUTER JOIN (
				           --TODAY 실적
				           SELECT OUTLET_CD, NET_AMT AS NET_AMT, GOOL_AMT AS TODAY_GOAL_AMT
				             FROM (SELECT OUTLET_CD, SALES_DATE, SUM(NET_AMT) AS NET_AMT, SUM(GOOL_AMT) AS GOOL_AMT
                          FROM (

                            -- 포스 일자별 매출
                              SELECT OUTLET_CD, SALES_DATE, SUM(NET_AMT) AS NET_AMT, 0 AS GOOL_AMT
                                   FROM SLE_SALS_GOODS
                                  WHERE RECEIPT_STATUS IN ('Q', 'R', 'E') --내부매출도 포함
                                    AND SALS_CLASS    = '0'	     -- 0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
                                    --AND MODIFY_STATUS = '0'        --
                                    --AND SALS_YN       = 'Y'	     -- 판매여부                                    
	                                --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
									AND SELL_YN  = DECODE(RECEIPT_STATUS ,'E','N','Y')				--매출 여부
								    --종료
                                    AND SALES_DATE = :searchDt  -- 매출일자
                                    GROUP BY OUTLET_CD, SALES_DATE
                              UNION ALL
                              
                                SELECT OUTLET_CD, YYMM || '01' AS SALES_DATE , 0 AS NET_AMT, AMT01 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '02' AS SALES_DATE , 0 AS NET_AMT, AMT02 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '03' AS SALES_DATE , 0 AS NET_AMT, AMT03 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '04' AS SALES_DATE , 0 AS NET_AMT, AMT04 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '05' AS SALES_DATE , 0 AS NET_AMT, AMT05 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '06' AS SALES_DATE , 0 AS NET_AMT, AMT06 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '07' AS SALES_DATE , 0 AS NET_AMT, AMT07 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '08' AS SALES_DATE , 0 AS NET_AMT, AMT08 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '09' AS SALES_DATE , 0 AS NET_AMT, AMT09 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '10' AS SALES_DATE , 0 AS NET_AMT, AMT10 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '11' AS SALES_DATE , 0 AS NET_AMT, AMT11 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '12' AS SALES_DATE , 0 AS NET_AMT, AMT12 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '13' AS SALES_DATE , 0 AS NET_AMT, AMT13 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '14' AS SALES_DATE , 0 AS NET_AMT, AMT14 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '15' AS SALES_DATE , 0 AS NET_AMT, AMT15 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '16' AS SALES_DATE , 0 AS NET_AMT, AMT16 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '17' AS SALES_DATE , 0 AS NET_AMT, AMT17 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '18' AS SALES_DATE , 0 AS NET_AMT, AMT18 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '19' AS SALES_DATE , 0 AS NET_AMT, AMT19 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '20' AS SALES_DATE , 0 AS NET_AMT, AMT20 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '21' AS SALES_DATE , 0 AS NET_AMT, AMT21 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '22' AS SALES_DATE , 0 AS NET_AMT, AMT22 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '23' AS SALES_DATE , 0 AS NET_AMT, AMT23 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '24' AS SALES_DATE , 0 AS NET_AMT, AMT24 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '25' AS SALES_DATE , 0 AS NET_AMT, AMT25 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '26' AS SALES_DATE , 0 AS NET_AMT, AMT26 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '27' AS SALES_DATE , 0 AS NET_AMT, AMT27 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '28' AS SALES_DATE , 0 AS NET_AMT, AMT28 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '29' AS SALES_DATE , 0 AS NET_AMT, AMT29 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '30' AS SALES_DATE , 0 AS NET_AMT, AMT30 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '31' AS SALES_DATE , 0 AS NET_AMT, AMT31 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY
							

                              UNION ALL

                              --회계에서 입력되는 매출 단 업장관리에서 입력되는 것에 체크된 업장만 가져 온다.
                              SELECT TO_CHAR(UPJANG_CD) AS OUTLET_CD, OCCUR_DATE AS SALES_DATE, SUM(NET_AMT) AS NET_AMT, 0 AS GOOL_AMT
                              FROM SLA_IF_UPJANG_SALS_DETAIL WHERE TO_CHAR(UPJANG_CD) IN (SELECT OUTLET_CD FROM SLE_OUTLET_MST WHERE OUTLET_TY = 'Y') AND RECD_STATUS = 'L'
                              AND OCCUR_DATE = :searchDt  -- 매출일자 
                              AND SYS_CLASS <> '21' --20180531 김호석 추가, 수기 매출등록 건만 가져온다(POS 매출은 제외)
                            GROUP BY UPJANG_CD, OCCUR_DATE

                              UNION ALL

                              --외식영업팀 폐유 매출 가져온다
                              SELECT TO_CHAR(UPJANG_CD) AS OUTLET_CD, OCCUR_DATE AS SALES_DATE, SUM(NET_AMT) AS NET_AMT, 0 AS GOOL_AMT
                              FROM SLA_IF_UPJANG_SALS_DETAIL WHERE SYS_CLASS = '19' AND SCC_GET_PT_BY_CC('CODE',CC_CD) in ('CEEA','CEFA') AND RECD_STATUS = 'L'
                              AND OCCUR_DATE    = :searchDt  -- 매출일자
                            GROUP BY UPJANG_CD, OCCUR_DATE

                              UNION ALL

                              --호텔 영업통계 자료 집계한 내역 (2014-01-01-2014-09-30)
                              SELECT OUTLET_CD, SALES_DATE, NET_AMT, GOOAL_AMT
                                FROM SLE_DAILY_HOTEL
                                 WHERE SALES_DATE    = :searchDt  -- 매출일자

                          ) DUAL
                          WHERE SALES_DATE    = :searchDt  -- 매출일자
                          GROUP BY OUTLET_CD, SALES_DATE)

							) TODAY_GOODS ON TODAY_GOODS.OUTLET_CD = OUTLET.OUTLET_CD

				LEFT OUTER JOIN (

				           --전년 요일 (해당 주의 요일을 구한다.)
				           SELECT OUTLET_CD, NET_AMT AS WEEK_NET_AMT
				             FROM (SELECT OUTLET_CD, SALES_DATE, SUM(NET_AMT) AS NET_AMT, SUM(GOOL_AMT) AS GOOL_AMT
                  FROM (

                    -- 포스 일자별 매출
                      SELECT OUTLET_CD, SALES_DATE, SUM(NET_AMT) AS NET_AMT, 0 AS GOOL_AMT
                           FROM SLE_SALS_GOODS
                          WHERE RECEIPT_STATUS IN ('Q', 'R', 'E') --내부매출도 포함
                            AND SALS_CLASS    = '0'	     -- 0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
                            --AND MODIFY_STATUS = '0'        --
                            --AND SALS_YN       = 'Y'	     -- 판매여부                                                                
                            --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
							AND SELL_YN  = DECODE(RECEIPT_STATUS ,'E','N','Y')				--매출 여부
						    --종료
                            AND SALES_DATE    = (
				                                    SELECT TO_CHAR(DT,'YYYYMMDD') AS DT  FROM (
				                                    --SELECT WEEK, TO_CHAR(DT,'YYYYMMDD') AS DT,WK FROM (
				                                    SELECT TO_CHAR(YMD2,'WW') WEEK, DT
				                                    , CASE WHEN TO_CHAR(DT, 'D') = 1 THEN '일요일'
				                                           WHEN TO_CHAR(DT, 'D') = 2 THEN '월요일'
				                                           WHEN TO_CHAR(DT, 'D') = 3 THEN '화요일'
				                                           WHEN TO_CHAR(DT, 'D') = 4 THEN '수요일'
				                                           WHEN TO_CHAR(DT, 'D') = 5 THEN '목요일'
				                                           WHEN TO_CHAR(DT, 'D') = 6 THEN '금요일'
				                                           WHEN TO_CHAR(DT, 'D') = 7 THEN '토요일'
				                                     END WK
				                                    FROM (
				                                    SELECT TRUNC(TO_DATE(:searchDt,'YYYYMMDD')-LEVEL,'D')+4 YMD2, TO_DATE(:searchDt,'YYYYMMDD') -LEVEL+1 DT
				                                    FROM DUAL
				                                    CONNECT BY LEVEL <= TO_DATE(:searchDt,'YYYYMMDD') - ADD_MONTHS(TO_DATE(:searchDt,'YYYYMMDD'),-15))
				                                    --GROUP BY YMD2, TO_CHAR(YMD2,'WW')
				                                    ORDER BY YMD2 DESC)
				                                    WHERE (WEEK, WK) IN (
				                                    SELECT WEEK, WK FROM (
				                                    SELECT TO_CHAR(YMD2,'WW') WEEK, DT
				                                    , CASE WHEN TO_CHAR(DT, 'D') = 1 THEN '일요일'
				                                           WHEN TO_CHAR(DT, 'D') = 2 THEN '월요일'
				                                           WHEN TO_CHAR(DT, 'D') = 3 THEN '화요일'
				                                           WHEN TO_CHAR(DT, 'D') = 4 THEN '수요일'
				                                           WHEN TO_CHAR(DT, 'D') = 5 THEN '목요일'
				                                           WHEN TO_CHAR(DT, 'D') = 6 THEN '금요일'
				                                           WHEN TO_CHAR(DT, 'D') = 7 THEN '토요일'
				                                     END WK
				                                    FROM (
				                                    SELECT TRUNC(TO_DATE(:searchDt,'YYYYMMDD')-LEVEL,'D')+4 YMD2, TO_DATE(:searchDt,'YYYYMMDD') -LEVEL+1 DT
				                                    FROM DUAL
				                                    CONNECT BY LEVEL <= SYSDATE - ADD_MONTHS(TO_DATE(:searchDt,'YYYYMMDD'),-15))
				                                    --GROUP BY YMD2, TO_CHAR(YMD2,'WW')
				                                    ORDER BY YMD2 DESC)
				                                    WHERE TRUNC(DT)  = TRUNC(TO_DATE(:searchDt,'YYYYMMDD')))
				                                      AND TRUNC(DT) != TRUNC(TO_DATE(:searchDt,'YYYYMMDD'))
				                                    )
                            GROUP BY OUTLET_CD, SALES_DATE

                      UNION ALL

                      --회계에서 입력되는 매출 단 업장관리에서 입력되는 것에 체크된 업장만 가져 온다.
                      SELECT TO_CHAR(UPJANG_CD) AS OUTLET_CD, OCCUR_DATE AS SALES_DATE, SUM(NET_AMT) AS NET_AMT, 0 AS GOOL_AMT
                      FROM SLA_IF_UPJANG_SALS_DETAIL WHERE TO_CHAR(UPJANG_CD) IN (SELECT OUTLET_CD FROM SLE_OUTLET_MST WHERE OUTLET_TY = 'Y') AND RECD_STATUS = 'L'
                      AND SYS_CLASS <> '21' --20180531 김호석 추가, 수기 매출등록 건만 가져온다(POS 매출은 제외)
                      AND OCCUR_DATE    = (
				                                    SELECT TO_CHAR(DT,'YYYYMMDD') AS DT  FROM (
				                                    --SELECT WEEK, TO_CHAR(DT,'YYYYMMDD') AS DT,WK FROM (
				                                    SELECT TO_CHAR(YMD2,'WW') WEEK, DT
				                                    , CASE WHEN TO_CHAR(DT, 'D') = 1 THEN '일요일'
				                                           WHEN TO_CHAR(DT, 'D') = 2 THEN '월요일'
				                                           WHEN TO_CHAR(DT, 'D') = 3 THEN '화요일'
				                                           WHEN TO_CHAR(DT, 'D') = 4 THEN '수요일'
				                                           WHEN TO_CHAR(DT, 'D') = 5 THEN '목요일'
				                                           WHEN TO_CHAR(DT, 'D') = 6 THEN '금요일'
				                                           WHEN TO_CHAR(DT, 'D') = 7 THEN '토요일'
				                                     END WK
				                                    FROM (
				                                    SELECT TRUNC(TO_DATE(:searchDt,'YYYYMMDD')-LEVEL,'D')+4 YMD2, TO_DATE(:searchDt,'YYYYMMDD') -LEVEL+1 DT
				                                    FROM DUAL
				                                    CONNECT BY LEVEL <= TO_DATE(:searchDt,'YYYYMMDD') - ADD_MONTHS(TO_DATE(:searchDt,'YYYYMMDD'),-15))
				                                    --GROUP BY YMD2, TO_CHAR(YMD2,'WW')
				                                    ORDER BY YMD2 DESC)
				                                    WHERE (WEEK, WK) IN (
				                                    SELECT WEEK, WK FROM (
				                                    SELECT TO_CHAR(YMD2,'WW') WEEK, DT
				                                    , CASE WHEN TO_CHAR(DT, 'D') = 1 THEN '일요일'
				                                           WHEN TO_CHAR(DT, 'D') = 2 THEN '월요일'
				                                           WHEN TO_CHAR(DT, 'D') = 3 THEN '화요일'
				                                           WHEN TO_CHAR(DT, 'D') = 4 THEN '수요일'
				                                           WHEN TO_CHAR(DT, 'D') = 5 THEN '목요일'
				                                           WHEN TO_CHAR(DT, 'D') = 6 THEN '금요일'
				                                           WHEN TO_CHAR(DT, 'D') = 7 THEN '토요일'
				                                     END WK
				                                    FROM (
				                                    SELECT TRUNC(TO_DATE(:searchDt,'YYYYMMDD')-LEVEL,'D')+4 YMD2, TO_DATE(:searchDt,'YYYYMMDD') -LEVEL+1 DT
				                                    FROM DUAL
				                                    CONNECT BY LEVEL <= SYSDATE - ADD_MONTHS(TO_DATE(:searchDt,'YYYYMMDD'),-15))
				                                    --GROUP BY YMD2, TO_CHAR(YMD2,'WW')
				                                    ORDER BY YMD2 DESC)
				                                    WHERE TRUNC(DT)  = TRUNC(TO_DATE(:searchDt,'YYYYMMDD')))
				                                      AND TRUNC(DT) != TRUNC(TO_DATE(:searchDt,'YYYYMMDD'))
				                                    )
                    GROUP BY UPJANG_CD, OCCUR_DATE

                      UNION ALL

                      --외식영업팀 폐유 매출 가져온다
                      SELECT TO_CHAR(UPJANG_CD) AS OUTLET_CD, OCCUR_DATE AS SALES_DATE, SUM(NET_AMT) AS NET_AMT, 0 AS GOOL_AMT
                      FROM SLA_IF_UPJANG_SALS_DETAIL WHERE SYS_CLASS = '19' AND SCC_GET_PT_BY_CC('CODE',CC_CD) in ('CEEA','CEFA') AND RECD_STATUS = 'L'
                      AND OCCUR_DATE    = (
				                                    SELECT TO_CHAR(DT,'YYYYMMDD') AS DT  FROM (
				                                    --SELECT WEEK, TO_CHAR(DT,'YYYYMMDD') AS DT,WK FROM (
				                                    SELECT TO_CHAR(YMD2,'WW') WEEK, DT
				                                    , CASE WHEN TO_CHAR(DT, 'D') = 1 THEN '일요일'
				                                           WHEN TO_CHAR(DT, 'D') = 2 THEN '월요일'
				                                           WHEN TO_CHAR(DT, 'D') = 3 THEN '화요일'
				                                           WHEN TO_CHAR(DT, 'D') = 4 THEN '수요일'
				                                           WHEN TO_CHAR(DT, 'D') = 5 THEN '목요일'
				                                           WHEN TO_CHAR(DT, 'D') = 6 THEN '금요일'
				                                           WHEN TO_CHAR(DT, 'D') = 7 THEN '토요일'
				                                     END WK
				                                    FROM (
				                                    SELECT TRUNC(TO_DATE(:searchDt,'YYYYMMDD')-LEVEL,'D')+4 YMD2, TO_DATE(:searchDt,'YYYYMMDD') -LEVEL+1 DT
				                                    FROM DUAL
				                                    CONNECT BY LEVEL <= TO_DATE(:searchDt,'YYYYMMDD') - ADD_MONTHS(TO_DATE(:searchDt,'YYYYMMDD'),-15))
				                                    --GROUP BY YMD2, TO_CHAR(YMD2,'WW')
				                                    ORDER BY YMD2 DESC)
				                                    WHERE (WEEK, WK) IN (
				                                    SELECT WEEK, WK FROM (
				                                    SELECT TO_CHAR(YMD2,'WW') WEEK, DT
				                                    , CASE WHEN TO_CHAR(DT, 'D') = 1 THEN '일요일'
				                                           WHEN TO_CHAR(DT, 'D') = 2 THEN '월요일'
				                                           WHEN TO_CHAR(DT, 'D') = 3 THEN '화요일'
				                                           WHEN TO_CHAR(DT, 'D') = 4 THEN '수요일'
				                                           WHEN TO_CHAR(DT, 'D') = 5 THEN '목요일'
				                                           WHEN TO_CHAR(DT, 'D') = 6 THEN '금요일'
				                                           WHEN TO_CHAR(DT, 'D') = 7 THEN '토요일'
				                                     END WK
				                                    FROM (
				                                    SELECT TRUNC(TO_DATE(:searchDt,'YYYYMMDD')-LEVEL,'D')+4 YMD2, TO_DATE(:searchDt,'YYYYMMDD') -LEVEL+1 DT
				                                    FROM DUAL
				                                    CONNECT BY LEVEL <= SYSDATE - ADD_MONTHS(TO_DATE(:searchDt,'YYYYMMDD'),-15))
				                                    --GROUP BY YMD2, TO_CHAR(YMD2,'WW')
				                                    ORDER BY YMD2 DESC)
				                                    WHERE TRUNC(DT)  = TRUNC(TO_DATE(:searchDt,'YYYYMMDD')))
				                                      AND TRUNC(DT) != TRUNC(TO_DATE(:searchDt,'YYYYMMDD'))
				                                    )
                    GROUP BY UPJANG_CD, OCCUR_DATE
                    
            		UNION ALL

				    --호텔 영업통계 자료 집계한 내역 (2014-01-01-2014-09-30)
				    SELECT OUTLET_CD, SALES_DATE, NET_AMT, GOOAL_AMT
				      FROM SLE_DAILY_HOTEL
				      WHERE SALES_DATE    = (
				                                    SELECT TO_CHAR(DT,'YYYYMMDD') AS DT  FROM (
				                                    --SELECT WEEK, TO_CHAR(DT,'YYYYMMDD') AS DT,WK FROM (
				                                    SELECT TO_CHAR(YMD2,'WW') WEEK, DT
				                                    , CASE WHEN TO_CHAR(DT, 'D') = 1 THEN '일요일'
				                                           WHEN TO_CHAR(DT, 'D') = 2 THEN '월요일'
				                                           WHEN TO_CHAR(DT, 'D') = 3 THEN '화요일'
				                                           WHEN TO_CHAR(DT, 'D') = 4 THEN '수요일'
				                                           WHEN TO_CHAR(DT, 'D') = 5 THEN '목요일'
				                                           WHEN TO_CHAR(DT, 'D') = 6 THEN '금요일'
				                                           WHEN TO_CHAR(DT, 'D') = 7 THEN '토요일'
				                                     END WK
				                                    FROM (
				                                    SELECT TRUNC(TO_DATE(:searchDt,'YYYYMMDD')-LEVEL,'D')+4 YMD2, TO_DATE(:searchDt,'YYYYMMDD') -LEVEL+1 DT
				                                    FROM DUAL
				                                    CONNECT BY LEVEL <= TO_DATE(:searchDt,'YYYYMMDD') - ADD_MONTHS(TO_DATE(:searchDt,'YYYYMMDD'),-15))
				                                    --GROUP BY YMD2, TO_CHAR(YMD2,'WW')
				                                    ORDER BY YMD2 DESC)
				                                    WHERE (WEEK, WK) IN (
				                                    SELECT WEEK, WK FROM (
				                                    SELECT TO_CHAR(YMD2,'WW') WEEK, DT
				                                    , CASE WHEN TO_CHAR(DT, 'D') = 1 THEN '일요일'
				                                           WHEN TO_CHAR(DT, 'D') = 2 THEN '월요일'
				                                           WHEN TO_CHAR(DT, 'D') = 3 THEN '화요일'
				                                           WHEN TO_CHAR(DT, 'D') = 4 THEN '수요일'
				                                           WHEN TO_CHAR(DT, 'D') = 5 THEN '목요일'
				                                           WHEN TO_CHAR(DT, 'D') = 6 THEN '금요일'
				                                           WHEN TO_CHAR(DT, 'D') = 7 THEN '토요일'
				                                     END WK
				                                    FROM (
				                                    SELECT TRUNC(TO_DATE(:searchDt,'YYYYMMDD')-LEVEL,'D')+4 YMD2, TO_DATE(:searchDt,'YYYYMMDD') -LEVEL+1 DT
				                                    FROM DUAL
				                                    CONNECT BY LEVEL <= SYSDATE - ADD_MONTHS(TO_DATE(:searchDt,'YYYYMMDD'),-15))
				                                    --GROUP BY YMD2, TO_CHAR(YMD2,'WW')
				                                    ORDER BY YMD2 DESC)
				                                    WHERE TRUNC(DT)  = TRUNC(TO_DATE(:searchDt,'YYYYMMDD')))
				                                      AND TRUNC(DT) != TRUNC(TO_DATE(:searchDt,'YYYYMMDD'))
				                                    )
				
				) DUAL
				GROUP BY OUTLET_CD, SALES_DATE)


							) TODAY_WEEK ON TODAY_WEEK.OUTLET_CD = OUTLET.OUTLET_CD

				LEFT OUTER JOIN (
				       			            --전년 일자
				             SELECT OUTLET_CD, NET_AMT  AS TODAY_YEAR_NET_AMT
				               --FROM SLE_DAILY_RPT
				               --속도개선 뷰해체 20191014 김호석
				               FROM (
				               		SELECT OUTLET_CD, SALES_DATE, SUM(NET_AMT) AS NET_AMT, SUM(GOOL_AMT) AS GOOL_AMT
									FROM (
										
										-- 포스 일자별 매출
										SELECT OUTLET_CD, SALES_DATE, SUM(NET_AMT) AS NET_AMT, 0 AS GOOL_AMT
											 FROM SLE_SALS_GOODS
											WHERE RECEIPT_STATUS IN ('Q', 'R', 'E') --내부매출도 포함
											  AND SALS_CLASS    = '0'	     -- 0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
											  AND SALES_DATE = TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || SUBSTR(:searchDt,5,4) --매출일자
											  --AND MODIFY_STATUS = '0'        --
											  --AND SALS_YN       = 'Y'	     -- 판매여부
											   --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
														AND SELL_YN  = DECODE(RECEIPT_STATUS ,'E','N','Y')				--매출 여부
														--종료 
											  GROUP BY OUTLET_CD, SALES_DATE
									
										UNION ALL
										
										--회계에서 입력되는 매출 단 업장관리에서 입력되는 것에 체크된 업장만 가져 온다.
										SELECT TO_CHAR(UPJANG_CD) AS OUTLET_CD, OCCUR_DATE AS SALES_DATE, SUM(NET_AMT) AS NET_AMT, 0 AS GOOL_AMT 
										FROM SLA_IF_UPJANG_SALS_DETAIL WHERE TO_CHAR(UPJANG_CD) IN (SELECT OUTLET_CD FROM SLE_OUTLET_MST WHERE OUTLET_TY = 'Y') AND RECD_STATUS = 'L'
										AND SYS_CLASS <> '21' --20180531 김호석 추가, 수기 매출등록 건만 가져온다(POS 매출은 제외)
										AND OCCUR_DATE = TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || SUBSTR(:searchDt,5,4) --매출일자
										GROUP BY UPJANG_CD, OCCUR_DATE
										
										UNION ALL
										
										--외식영업팀 폐유 매출 가져온다
										SELECT TO_CHAR(UPJANG_CD) AS OUTLET_CD, OCCUR_DATE AS SALES_DATE, SUM(NET_AMT) AS NET_AMT, 0 AS GOOL_AMT 
										FROM SLA_IF_UPJANG_SALS_DETAIL WHERE SYS_CLASS = '19' AND SCC_GET_PT_BY_CC('CODE',CC_CD) in ('CEEA','CEFA') AND RECD_STATUS = 'L'
										AND OCCUR_DATE = TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || SUBSTR(:searchDt,5,4) --매출일자
										GROUP BY UPJANG_CD, OCCUR_DATE
										
										UNION ALL
										
										--호텔 영업통계 자료 집계한 내역 (2014-01-01-2014-09-30)
										SELECT OUTLET_CD, SALES_DATE, NET_AMT, GOOAL_AMT 
										  FROM SLE_DAILY_HOTEL  
										  WHERE SALES_DATE = TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || SUBSTR(:searchDt,5,4) --매출일자
										 
									) DUAL 
									GROUP BY OUTLET_CD, SALES_DATE				               
				               )				               
				              WHERE  SALES_DATE    = TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || SUBSTR(:searchDt,5,4) --매출일자
							) TODAY_YEAR ON TODAY_YEAR.OUTLET_CD = OUTLET.OUTLET_CD

				LEFT OUTER JOIN (
				             --월간목표
				             SELECT OUTLET_CD, SUM(GOOL_AMT) AS MOON_GOAL_AMT
				               FROM (
							    SELECT OUTLET_CD, YYMM || '01' AS SALES_DATE , 0 AS NET_AMT, AMT01 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '02' AS SALES_DATE , 0 AS NET_AMT, AMT02 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '03' AS SALES_DATE , 0 AS NET_AMT, AMT03 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '04' AS SALES_DATE , 0 AS NET_AMT, AMT04 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '05' AS SALES_DATE , 0 AS NET_AMT, AMT05 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '06' AS SALES_DATE , 0 AS NET_AMT, AMT06 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '07' AS SALES_DATE , 0 AS NET_AMT, AMT07 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '08' AS SALES_DATE , 0 AS NET_AMT, AMT08 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '09' AS SALES_DATE , 0 AS NET_AMT, AMT09 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '10' AS SALES_DATE , 0 AS NET_AMT, AMT10 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '11' AS SALES_DATE , 0 AS NET_AMT, AMT11 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '12' AS SALES_DATE , 0 AS NET_AMT, AMT12 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '13' AS SALES_DATE , 0 AS NET_AMT, AMT13 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '14' AS SALES_DATE , 0 AS NET_AMT, AMT14 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '15' AS SALES_DATE , 0 AS NET_AMT, AMT15 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '16' AS SALES_DATE , 0 AS NET_AMT, AMT16 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '17' AS SALES_DATE , 0 AS NET_AMT, AMT17 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '18' AS SALES_DATE , 0 AS NET_AMT, AMT18 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '19' AS SALES_DATE , 0 AS NET_AMT, AMT19 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '20' AS SALES_DATE , 0 AS NET_AMT, AMT20 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '21' AS SALES_DATE , 0 AS NET_AMT, AMT21 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '22' AS SALES_DATE , 0 AS NET_AMT, AMT22 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '23' AS SALES_DATE , 0 AS NET_AMT, AMT23 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '24' AS SALES_DATE , 0 AS NET_AMT, AMT24 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '25' AS SALES_DATE , 0 AS NET_AMT, AMT25 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '26' AS SALES_DATE , 0 AS NET_AMT, AMT26 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '27' AS SALES_DATE , 0 AS NET_AMT, AMT27 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '28' AS SALES_DATE , 0 AS NET_AMT, AMT28 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '29' AS SALES_DATE , 0 AS NET_AMT, AMT29 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '30' AS SALES_DATE , 0 AS NET_AMT, AMT30 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '31' AS SALES_DATE , 0 AS NET_AMT, AMT31 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY
							
							    UNION ALL
							
							    --호텔 영업통계 자료 집계한 내역 (2014-01-01-2014-09-30)
							    SELECT OUTLET_CD, SALES_DATE, NET_AMT, GOOAL_AMT
							      FROM SLE_DAILY_HOTEL
							      WHERE SUBSTR(SALES_DATE,1,6) = SUBSTR(:searchDt,1,6))
				               WHERE SUBSTR(SALES_DATE,1,6) = SUBSTR(:searchDt,1,6)
                               GROUP BY OUTLET_CD
							) MTD_GOAL ON MTD_GOAL.OUTLET_CD = OUTLET.OUTLET_CD
				LEFT OUTER JOIN (
				             --현재일까지의 목표
				             SELECT OUTLET_CD, SUM(GOOL_AMT) AS MTD_DAY_GOAL_AMT
				               --FROM SLE_DAILY_RPT
				               --속도개선 뷰해체 20191014 김호석
				               FROM (
				               		SELECT OUTLET_CD, SALES_DATE, SUM(NET_AMT) AS NET_AMT, SUM(GOOL_AMT) AS GOOL_AMT
									FROM (
										--일자별 목표
										SELECT OUTLET_CD, YYMM || '01' AS SALES_DATE , 0 AS NET_AMT, AMT01 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '02' AS SALES_DATE , 0 AS NET_AMT, AMT02 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL 
										SELECT OUTLET_CD, YYMM || '03' AS SALES_DATE , 0 AS NET_AMT, AMT03 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '04' AS SALES_DATE , 0 AS NET_AMT, AMT04 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '05' AS SALES_DATE , 0 AS NET_AMT, AMT05 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '06' AS SALES_DATE , 0 AS NET_AMT, AMT06 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '07' AS SALES_DATE , 0 AS NET_AMT, AMT07 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '08' AS SALES_DATE , 0 AS NET_AMT, AMT08 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '09' AS SALES_DATE , 0 AS NET_AMT, AMT09 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '10' AS SALES_DATE , 0 AS NET_AMT, AMT10 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '11' AS SALES_DATE , 0 AS NET_AMT, AMT11 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '12' AS SALES_DATE , 0 AS NET_AMT, AMT12 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '13' AS SALES_DATE , 0 AS NET_AMT, AMT13 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '14' AS SALES_DATE , 0 AS NET_AMT, AMT14 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '15' AS SALES_DATE , 0 AS NET_AMT, AMT15 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '16' AS SALES_DATE , 0 AS NET_AMT, AMT16 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '17' AS SALES_DATE , 0 AS NET_AMT, AMT17 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '18' AS SALES_DATE , 0 AS NET_AMT, AMT18 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '19' AS SALES_DATE , 0 AS NET_AMT, AMT19 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '20' AS SALES_DATE , 0 AS NET_AMT, AMT20 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '21' AS SALES_DATE , 0 AS NET_AMT, AMT21 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '22' AS SALES_DATE , 0 AS NET_AMT, AMT22 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '23' AS SALES_DATE , 0 AS NET_AMT, AMT23 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '24' AS SALES_DATE , 0 AS NET_AMT, AMT24 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '25' AS SALES_DATE , 0 AS NET_AMT, AMT25 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '26' AS SALES_DATE , 0 AS NET_AMT, AMT26 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '27' AS SALES_DATE , 0 AS NET_AMT, AMT27 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '28' AS SALES_DATE , 0 AS NET_AMT, AMT28 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '29' AS SALES_DATE , 0 AS NET_AMT, AMT29 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '30' AS SALES_DATE , 0 AS NET_AMT, AMT30 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
										SELECT OUTLET_CD, YYMM || '31' AS SALES_DATE , 0 AS NET_AMT, AMT31 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY
										UNION ALL
										
										--호텔 영업통계 자료 집계한 내역 (2014-01-01-2014-09-30)
										SELECT OUTLET_CD, SALES_DATE, NET_AMT, GOOAL_AMT 
										  FROM SLE_DAILY_HOTEL
										  WHERE SALES_DATE BETWEEN SUBSTR(:searchDt,1,6) || '01' AND :searchDt
										 
									) DUAL 
									GROUP BY OUTLET_CD, SALES_DATE
				               
				               
				               )
				               
				               WHERE SALES_DATE BETWEEN SUBSTR(:searchDt,1,6) || '01' AND :searchDt
                               GROUP BY OUTLET_CD
							) MTD_DAY_GOAL ON MTD_DAY_GOAL.OUTLET_CD = OUTLET.OUTLET_CD

				LEFT OUTER JOIN (
				              --MTD 실적
				              SELECT OUTLET_CD, SUM(NET_AMT) AS MTD_NET_AMT
				               --FROM SLE_DAILY_RPT
				               --속도개선 뷰해체 20191014 김호석
				               FROM (
				               		SELECT OUTLET_CD, SALES_DATE, SUM(NET_AMT) AS NET_AMT, SUM(GOOL_AMT) AS GOOL_AMT
									FROM (
										
										-- 포스 일자별 매출
										SELECT OUTLET_CD, SALES_DATE, SUM(NET_AMT) AS NET_AMT, 0 AS GOOL_AMT
											 FROM SLE_SALS_GOODS
											WHERE RECEIPT_STATUS IN ('Q', 'R', 'E') --내부매출도 포함
											  AND SALS_CLASS    = '0'	     -- 0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
											  AND SALES_DATE BETWEEN SUBSTR(:searchDt,1,6) || '01' AND :searchDt  -- 매출일자
											  --AND MODIFY_STATUS = '0'        --
											  --AND SALS_YN       = 'Y'	     -- 판매여부
											   --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
														AND SELL_YN  = DECODE(RECEIPT_STATUS ,'E','N','Y')				--매출 여부
														--종료 
											  GROUP BY OUTLET_CD, SALES_DATE
										
										UNION ALL
										
										--회계에서 입력되는 매출 단 업장관리에서 입력되는 것에 체크된 업장만 가져 온다.
										SELECT TO_CHAR(UPJANG_CD) AS OUTLET_CD, OCCUR_DATE AS SALES_DATE, SUM(NET_AMT) AS NET_AMT, 0 AS GOOL_AMT 
										FROM SLA_IF_UPJANG_SALS_DETAIL WHERE TO_CHAR(UPJANG_CD) IN (SELECT OUTLET_CD FROM SLE_OUTLET_MST WHERE OUTLET_TY = 'Y') AND RECD_STATUS = 'L'
										AND SYS_CLASS <> '21' --20180531 김호석 추가, 수기 매출등록 건만 가져온다(POS 매출은 제외)
										AND OCCUR_DATE BETWEEN SUBSTR(:searchDt,1,6) || '01' AND :searchDt  -- 매출일자
										GROUP BY UPJANG_CD, OCCUR_DATE
										
										UNION ALL
										
										--외식영업팀 폐유 매출 가져온다
										SELECT TO_CHAR(UPJANG_CD) AS OUTLET_CD, OCCUR_DATE AS SALES_DATE, SUM(NET_AMT) AS NET_AMT, 0 AS GOOL_AMT 
										FROM SLA_IF_UPJANG_SALS_DETAIL 
										WHERE SYS_CLASS = '19' AND SCC_GET_PT_BY_CC('CODE',CC_CD) in ('CEEA','CEFA') AND RECD_STATUS = 'L'
										AND OCCUR_DATE BETWEEN SUBSTR(:searchDt,1,6) || '01' AND :searchDt  -- 매출일자
										GROUP BY UPJANG_CD, OCCUR_DATE
										
										UNION ALL
										
										--호텔 영업통계 자료 집계한 내역 (2014-01-01-2014-09-30)
										SELECT OUTLET_CD, SALES_DATE, NET_AMT, GOOAL_AMT 
										  FROM SLE_DAILY_HOTEL  
										  WHERE SALES_DATE BETWEEN SUBSTR(:searchDt,1,6) || '01' AND :searchDt  -- 매출일자
										 
									) DUAL 
									GROUP BY OUTLET_CD, SALES_DATE
				               
				               )				               
				              WHERE  SALES_DATE    BETWEEN SUBSTR(:searchDt,1,6) || '01' AND :searchDt  -- 매출일자
				                GROUP BY OUTLET_CD
							) MTD_DAY_GOODS ON MTD_DAY_GOODS.OUTLET_CD = OUTLET.OUTLET_CD

				LEFT OUTER JOIN (
				              --MTD 전년 누계
				              SELECT OUTLET_CD,SUM(NET_AMT) AS MTD_YEAR_NET_AMT
				               --FROM SLE_DAILY_RPT
				               --속도개선 뷰해체 20191014 김호석
				               FROM (
				               		SELECT OUTLET_CD, SALES_DATE, SUM(NET_AMT) AS NET_AMT, SUM(GOOL_AMT) AS GOOL_AMT
									FROM (
										
										-- 포스 일자별 매출
										SELECT OUTLET_CD, SALES_DATE, SUM(NET_AMT) AS NET_AMT, 0 AS GOOL_AMT
											 FROM SLE_SALS_GOODS
											WHERE RECEIPT_STATUS IN ('Q', 'R', 'E') --내부매출도 포함
											  AND SALS_CLASS    = '0'	     -- 0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
											  AND SALES_DATE BETWEEN  TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || SUBSTR(:searchDt,5,2) || '01'
				                                                 AND  TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || SUBSTR(:searchDt,5,4) || '%'-- 매출일자
											  --AND MODIFY_STATUS = '0'        --
											  --AND SALS_YN       = 'Y'	     -- 판매여부
											   --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
														AND SELL_YN  = DECODE(RECEIPT_STATUS ,'E','N','Y')				--매출 여부
														--종료 
											  GROUP BY OUTLET_CD, SALES_DATE
										
										UNION ALL
										
										--회계에서 입력되는 매출 단 업장관리에서 입력되는 것에 체크된 업장만 가져 온다.
										SELECT TO_CHAR(UPJANG_CD) AS OUTLET_CD, OCCUR_DATE AS SALES_DATE, SUM(NET_AMT) AS NET_AMT, 0 AS GOOL_AMT 
										FROM SLA_IF_UPJANG_SALS_DETAIL WHERE TO_CHAR(UPJANG_CD) IN (SELECT OUTLET_CD FROM SLE_OUTLET_MST WHERE OUTLET_TY = 'Y') AND RECD_STATUS = 'L'
										AND SYS_CLASS <> '21' --20180531 김호석 추가, 수기 매출등록 건만 가져온다(POS 매출은 제외)
										AND OCCUR_DATE BETWEEN  TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || SUBSTR(:searchDt,5,2) || '01'
				                                                 AND  TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || SUBSTR(:searchDt,5,4) || '%'-- 매출일자
										GROUP BY UPJANG_CD, OCCUR_DATE
										
										UNION ALL
										
										--외식영업팀 폐유 매출 가져온다
										SELECT TO_CHAR(UPJANG_CD) AS OUTLET_CD, OCCUR_DATE AS SALES_DATE, SUM(NET_AMT) AS NET_AMT, 0 AS GOOL_AMT 
										FROM SLA_IF_UPJANG_SALS_DETAIL 
										WHERE SYS_CLASS = '19' AND SCC_GET_PT_BY_CC('CODE',CC_CD) in ('CEEA','CEFA') AND RECD_STATUS = 'L'
										AND OCCUR_DATE BETWEEN  TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || SUBSTR(:searchDt,5,2) || '01'
				                                                 AND  TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || SUBSTR(:searchDt,5,4) || '%'-- 매출일자
										GROUP BY UPJANG_CD, OCCUR_DATE
										
										UNION ALL
										
										--호텔 영업통계 자료 집계한 내역 (2014-01-01-2014-09-30)
										SELECT OUTLET_CD, SALES_DATE, NET_AMT, GOOAL_AMT 
										  FROM SLE_DAILY_HOTEL  
										  WHERE SALES_DATE BETWEEN  TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || SUBSTR(:searchDt,5,2) || '01'
				                                                 AND  TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || SUBSTR(:searchDt,5,4) || '%'-- 매출일자
										 
									) DUAL 
									GROUP BY OUTLET_CD, SALES_DATE
				               
				               )
				              WHERE SALES_DATE    BETWEEN  TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || SUBSTR(:searchDt,5,2) || '01'
				                                                 AND  TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || SUBSTR(:searchDt,5,4) || '%'-- 매출일자
				                GROUP BY OUTLET_CD
							) MTD_YEAR_GOODS ON MTD_YEAR_GOODS.OUTLET_CD = OUTLET.OUTLET_CD

				LEFT OUTER JOIN (
				              --년간목표
				              SELECT OUTLET_CD, SUM(GOOL_AMT) AS YEAR_GOAL_AMT
				               FROM (
							    SELECT OUTLET_CD, YYMM || '01' AS SALES_DATE , 0 AS NET_AMT, AMT01 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '02' AS SALES_DATE , 0 AS NET_AMT, AMT02 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '03' AS SALES_DATE , 0 AS NET_AMT, AMT03 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '04' AS SALES_DATE , 0 AS NET_AMT, AMT04 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '05' AS SALES_DATE , 0 AS NET_AMT, AMT05 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '06' AS SALES_DATE , 0 AS NET_AMT, AMT06 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '07' AS SALES_DATE , 0 AS NET_AMT, AMT07 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '08' AS SALES_DATE , 0 AS NET_AMT, AMT08 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '09' AS SALES_DATE , 0 AS NET_AMT, AMT09 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '10' AS SALES_DATE , 0 AS NET_AMT, AMT10 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '11' AS SALES_DATE , 0 AS NET_AMT, AMT11 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '12' AS SALES_DATE , 0 AS NET_AMT, AMT12 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '13' AS SALES_DATE , 0 AS NET_AMT, AMT13 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '14' AS SALES_DATE , 0 AS NET_AMT, AMT14 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '15' AS SALES_DATE , 0 AS NET_AMT, AMT15 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '16' AS SALES_DATE , 0 AS NET_AMT, AMT16 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '17' AS SALES_DATE , 0 AS NET_AMT, AMT17 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '18' AS SALES_DATE , 0 AS NET_AMT, AMT18 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '19' AS SALES_DATE , 0 AS NET_AMT, AMT19 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '20' AS SALES_DATE , 0 AS NET_AMT, AMT20 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '21' AS SALES_DATE , 0 AS NET_AMT, AMT21 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '22' AS SALES_DATE , 0 AS NET_AMT, AMT22 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '23' AS SALES_DATE , 0 AS NET_AMT, AMT23 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '24' AS SALES_DATE , 0 AS NET_AMT, AMT24 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '25' AS SALES_DATE , 0 AS NET_AMT, AMT25 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '26' AS SALES_DATE , 0 AS NET_AMT, AMT26 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '27' AS SALES_DATE , 0 AS NET_AMT, AMT27 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '28' AS SALES_DATE , 0 AS NET_AMT, AMT28 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '29' AS SALES_DATE , 0 AS NET_AMT, AMT29 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '30' AS SALES_DATE , 0 AS NET_AMT, AMT30 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
							    SELECT OUTLET_CD, YYMM || '31' AS SALES_DATE , 0 AS NET_AMT, AMT31 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY
							
							    UNION ALL
							
							    --호텔 영업통계 자료 집계한 내역 (2014-01-01-2014-09-30)
							    SELECT OUTLET_CD, SALES_DATE, NET_AMT, GOOAL_AMT
							      FROM SLE_DAILY_HOTEL
							      WHERE SUBSTR(SALES_DATE,1,4) = SUBSTR(:searchDt,1,4))
				               WHERE SUBSTR(SALES_DATE,1,4) = SUBSTR(:searchDt,1,4)
				               GROUP BY OUTLET_CD

							) YTD_GOAL ON YTD_GOAL.OUTLET_CD = OUTLET.OUTLET_CD

				LEFT OUTER JOIN (
				               --년간해당일까지목표
				                SELECT OUTLET_CD, CASE WHEN SUBSTR(:searchDt,5,2) = '01' THEN 0 ELSE SUM(GOOL_AMT) END AS YEAR_GOAL_AMT_MOON
				                 FROM (
								    SELECT OUTLET_CD, YYMM || '01' AS SALES_DATE , 0 AS NET_AMT, AMT01 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '02' AS SALES_DATE , 0 AS NET_AMT, AMT02 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '03' AS SALES_DATE , 0 AS NET_AMT, AMT03 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '04' AS SALES_DATE , 0 AS NET_AMT, AMT04 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '05' AS SALES_DATE , 0 AS NET_AMT, AMT05 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '06' AS SALES_DATE , 0 AS NET_AMT, AMT06 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '07' AS SALES_DATE , 0 AS NET_AMT, AMT07 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '08' AS SALES_DATE , 0 AS NET_AMT, AMT08 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '09' AS SALES_DATE , 0 AS NET_AMT, AMT09 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '10' AS SALES_DATE , 0 AS NET_AMT, AMT10 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '11' AS SALES_DATE , 0 AS NET_AMT, AMT11 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '12' AS SALES_DATE , 0 AS NET_AMT, AMT12 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '13' AS SALES_DATE , 0 AS NET_AMT, AMT13 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '14' AS SALES_DATE , 0 AS NET_AMT, AMT14 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '15' AS SALES_DATE , 0 AS NET_AMT, AMT15 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '16' AS SALES_DATE , 0 AS NET_AMT, AMT16 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '17' AS SALES_DATE , 0 AS NET_AMT, AMT17 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '18' AS SALES_DATE , 0 AS NET_AMT, AMT18 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '19' AS SALES_DATE , 0 AS NET_AMT, AMT19 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '20' AS SALES_DATE , 0 AS NET_AMT, AMT20 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '21' AS SALES_DATE , 0 AS NET_AMT, AMT21 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '22' AS SALES_DATE , 0 AS NET_AMT, AMT22 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '23' AS SALES_DATE , 0 AS NET_AMT, AMT23 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '24' AS SALES_DATE , 0 AS NET_AMT, AMT24 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '25' AS SALES_DATE , 0 AS NET_AMT, AMT25 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '26' AS SALES_DATE , 0 AS NET_AMT, AMT26 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '27' AS SALES_DATE , 0 AS NET_AMT, AMT27 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '28' AS SALES_DATE , 0 AS NET_AMT, AMT28 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '29' AS SALES_DATE , 0 AS NET_AMT, AMT29 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '30' AS SALES_DATE , 0 AS NET_AMT, AMT30 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '31' AS SALES_DATE , 0 AS NET_AMT, AMT31 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY
								
								    UNION ALL
								
								    --호텔 영업통계 자료 집계한 내역 (2014-01-01-2014-09-30)
								    SELECT OUTLET_CD, SALES_DATE, NET_AMT, GOOAL_AMT
								      FROM SLE_DAILY_HOTEL
								      WHERE SUBSTR(SALES_DATE,1,4) = SUBSTR(:searchDt,1,4))
				                 --WHERE SALES_DATE BETWEEN SUBSTR(:searchDt,1,4) ||'0101' AND SUBSTR(:searchDt,1,4) || TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,5,2)) -1) || '31'
				                 WHERE SALES_DATE BETWEEN SUBSTR(:searchDt,1,4) ||'0101' AND SUBSTR(:searchDt,1,4) || TO_CHAR(ADD_MONTHS(TO_DATE(:searchDt,'yyyymmdd'),-1),'MM') || '31'
				                 GROUP BY OUTLET_CD

							) YTD_YEAR_GOAL ON YTD_YEAR_GOAL.OUTLET_CD = OUTLET.OUTLET_CD

				 LEFT OUTER JOIN (
				               SELECT OUTLET_CD, SUM(GOOL_AMT)  AS YEAR_DAY_GOAL_AMT
				                 FROM (
								    SELECT OUTLET_CD, YYMM || '01' AS SALES_DATE , 0 AS NET_AMT, AMT01 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '02' AS SALES_DATE , 0 AS NET_AMT, AMT02 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '03' AS SALES_DATE , 0 AS NET_AMT, AMT03 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '04' AS SALES_DATE , 0 AS NET_AMT, AMT04 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '05' AS SALES_DATE , 0 AS NET_AMT, AMT05 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '06' AS SALES_DATE , 0 AS NET_AMT, AMT06 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '07' AS SALES_DATE , 0 AS NET_AMT, AMT07 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '08' AS SALES_DATE , 0 AS NET_AMT, AMT08 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '09' AS SALES_DATE , 0 AS NET_AMT, AMT09 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '10' AS SALES_DATE , 0 AS NET_AMT, AMT10 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '11' AS SALES_DATE , 0 AS NET_AMT, AMT11 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '12' AS SALES_DATE , 0 AS NET_AMT, AMT12 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '13' AS SALES_DATE , 0 AS NET_AMT, AMT13 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '14' AS SALES_DATE , 0 AS NET_AMT, AMT14 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '15' AS SALES_DATE , 0 AS NET_AMT, AMT15 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '16' AS SALES_DATE , 0 AS NET_AMT, AMT16 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '17' AS SALES_DATE , 0 AS NET_AMT, AMT17 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '18' AS SALES_DATE , 0 AS NET_AMT, AMT18 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '19' AS SALES_DATE , 0 AS NET_AMT, AMT19 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '20' AS SALES_DATE , 0 AS NET_AMT, AMT20 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '21' AS SALES_DATE , 0 AS NET_AMT, AMT21 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '22' AS SALES_DATE , 0 AS NET_AMT, AMT22 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '23' AS SALES_DATE , 0 AS NET_AMT, AMT23 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '24' AS SALES_DATE , 0 AS NET_AMT, AMT24 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '25' AS SALES_DATE , 0 AS NET_AMT, AMT25 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '26' AS SALES_DATE , 0 AS NET_AMT, AMT26 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '27' AS SALES_DATE , 0 AS NET_AMT, AMT27 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '28' AS SALES_DATE , 0 AS NET_AMT, AMT28 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '29' AS SALES_DATE , 0 AS NET_AMT, AMT29 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '30' AS SALES_DATE , 0 AS NET_AMT, AMT30 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY UNION ALL
								    SELECT OUTLET_CD, YYMM || '31' AS SALES_DATE , 0 AS NET_AMT, AMT31 AS GOOL_AMT FROM  SLE_SALS_GOAL_DAY
								
								    UNION ALL
								
								    --호텔 영업통계 자료 집계한 내역 (2014-01-01-2014-09-30)
								    SELECT OUTLET_CD, SALES_DATE, NET_AMT, GOOAL_AMT
								      FROM SLE_DAILY_HOTEL
								      WHERE SALES_DATE BETWEEN SUBSTR(:searchDt,1,6) ||'01' AND :searchDt)
												                 --WHERE SUBSTR(SALES_DATE,1,6) = SUBSTR(:searchDt,1,6)
												                 WHERE SALES_DATE BETWEEN SUBSTR(:searchDt,1,6) ||'01' AND :searchDt
																 GROUP BY OUTLET_CD
								
															) YTD_YEAR_GOAL_DAY ON YTD_YEAR_GOAL_DAY.OUTLET_CD = OUTLET.OUTLET_CD
								
												LEFT OUTER JOIN (
												                 --YDT 실적 01부터 현재일까지의 합계
												               SELECT OUTLET_CD, SUM(NET_AMT) AS YEAR_NET_AMT
												               FROM (
								SELECT OUTLET_CD, SALES_DATE, SUM(NET_AMT) AS NET_AMT, SUM(GOOL_AMT) AS GOOL_AMT
								FROM (
								
									-- 포스 일자별 매출
								    SELECT OUTLET_CD, SALES_DATE, SUM(NET_AMT) AS NET_AMT, 0 AS GOOL_AMT
								         FROM SLE_SALS_GOODS
								        WHERE RECEIPT_STATUS IN ('Q', 'R', 'E') --내부매출도 포함
								          AND SALS_CLASS    = '0'	     -- 0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
								          --AND MODIFY_STATUS = '0'        --
								          --AND SALS_YN       = 'Y'	     -- 판매여부								                                                                          
                            			  --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
										  AND SELL_YN  = DECODE(RECEIPT_STATUS ,'E','N','Y')				--매출 여부
						    			  --종료
								          AND SALES_DATE    BETWEEN   SUBSTR(:searchDt,1,4) || '0101' AND  :searchDt -- 매출일자
								          GROUP BY OUTLET_CD, SALES_DATE
								
								
								    UNION ALL
								
								    --회계에서 입력되는 매출 단 업장관리에서 입력되는 것에 체크된 업장만 가져 온다.
								    SELECT TO_CHAR(UPJANG_CD) AS OUTLET_CD, OCCUR_DATE AS SALES_DATE, SUM(NET_AMT) AS NET_AMT, 0 AS GOOL_AMT
								    FROM SLA_IF_UPJANG_SALS_DETAIL WHERE TO_CHAR(UPJANG_CD) IN (SELECT OUTLET_CD FROM SLE_OUTLET_MST WHERE OUTLET_TY = 'Y') AND RECD_STATUS = 'L'
								    AND OCCUR_DATE    BETWEEN   SUBSTR(:searchDt,1,4) || '0101' AND  :searchDt -- 매출일자
                              		AND SYS_CLASS <> '21' --20180531 김호석 추가, 수기 매출등록 건만 가져온다(POS 매출은 제외)
									GROUP BY UPJANG_CD, OCCUR_DATE
								
								    UNION ALL
								
								    --외식영업팀 폐유 매출 가져온다
								    SELECT TO_CHAR(UPJANG_CD) AS OUTLET_CD, OCCUR_DATE AS SALES_DATE, SUM(NET_AMT) AS NET_AMT, 0 AS GOOL_AMT
								    FROM SLA_IF_UPJANG_SALS_DETAIL WHERE SYS_CLASS = '19' AND SCC_GET_PT_BY_CC('CODE',CC_CD) in ('CEEA','CEFA') AND RECD_STATUS = 'L'
								    AND OCCUR_DATE     BETWEEN   SUBSTR(:searchDt,1,4) || '0101' AND  :searchDt -- 매출일자
									GROUP BY UPJANG_CD, OCCUR_DATE
								
								    UNION ALL
								
								    --호텔 영업통계 자료 집계한 내역 (2014-01-01-2014-09-30)
								    SELECT OUTLET_CD, SALES_DATE, NET_AMT, GOOAL_AMT
								      FROM SLE_DAILY_HOTEL
								       WHERE SALES_DATE    BETWEEN   SUBSTR(:searchDt,1,4) || '0101' AND  :searchDt -- 매출일자
								
								
								) DUAL
								GROUP BY OUTLET_CD, SALES_DATE)

				                  GROUP BY OUTLET_CD
				        	) YTD_GOODS ON YTD_GOODS.OUTLET_CD = OUTLET.OUTLET_CD
				LEFT OUTER JOIN (
				                --Y.T.D 전년누계

				                SELECT OUTLET_CD, SUM(NET_AMT) AS YEAR_OLD_NET_AMT
				                 --FROM SLE_DAILY_RPT
				                 --속도개선 뷰해체 20191014 김호석
				                 FROM (
				                 	SELECT OUTLET_CD, SALES_DATE, SUM(NET_AMT) AS NET_AMT, SUM(GOOL_AMT) AS GOOL_AMT
									FROM (
										
										-- 포스 일자별 매출
										SELECT OUTLET_CD, SALES_DATE, SUM(NET_AMT) AS NET_AMT, 0 AS GOOL_AMT
											 FROM SLE_SALS_GOODS
											WHERE RECEIPT_STATUS IN ('Q', 'R', 'E') --내부매출도 포함
											  AND SALS_CLASS    = '0'	     -- 0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
											  AND SALES_DATE  BETWEEN  TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || '0101'
				                                       AND   TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || SUBSTR(:searchDt,5,4) -- 매출일자
											  --AND MODIFY_STATUS = '0'        --
											  --AND SALS_YN       = 'Y'	     -- 판매여부
											   --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
														AND SELL_YN  = DECODE(RECEIPT_STATUS ,'E','N','Y')				--매출 여부
														--종료 
											  GROUP BY OUTLET_CD, SALES_DATE
										
										UNION ALL
										
										--회계에서 입력되는 매출 단 업장관리에서 입력되는 것에 체크된 업장만 가져 온다.
										SELECT TO_CHAR(UPJANG_CD) AS OUTLET_CD, OCCUR_DATE AS SALES_DATE, SUM(NET_AMT) AS NET_AMT, 0 AS GOOL_AMT 
										FROM SLA_IF_UPJANG_SALS_DETAIL WHERE TO_CHAR(UPJANG_CD) IN (SELECT OUTLET_CD FROM SLE_OUTLET_MST WHERE OUTLET_TY = 'Y') AND RECD_STATUS = 'L'
										AND SYS_CLASS <> '21' --20180531 김호석 추가, 수기 매출등록 건만 가져온다(POS 매출은 제외)
										AND OCCUR_DATE  BETWEEN  TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || '0101'
				                                       AND   TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || SUBSTR(:searchDt,5,4) -- 매출일자
										GROUP BY UPJANG_CD, OCCUR_DATE
										
										UNION ALL
										
										--외식영업팀 폐유 매출 가져온다
										SELECT TO_CHAR(UPJANG_CD) AS OUTLET_CD, OCCUR_DATE AS SALES_DATE, SUM(NET_AMT) AS NET_AMT, 0 AS GOOL_AMT 
										FROM SLA_IF_UPJANG_SALS_DETAIL 
										WHERE SYS_CLASS = '19' AND SCC_GET_PT_BY_CC('CODE',CC_CD) in ('CEEA','CEFA') AND RECD_STATUS = 'L'
										AND OCCUR_DATE  BETWEEN  TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || '0101'
				                                       AND   TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || SUBSTR(:searchDt,5,4) -- 매출일자
										GROUP BY UPJANG_CD, OCCUR_DATE
										
										UNION ALL
										
										--호텔 영업통계 자료 집계한 내역 (2014-01-01-2014-09-30)
										SELECT OUTLET_CD, SALES_DATE, NET_AMT, GOOAL_AMT 
										  FROM SLE_DAILY_HOTEL  
										  WHERE SALES_DATE  BETWEEN  TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || '0101'
				                                       AND   TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || SUBSTR(:searchDt,5,4) -- 매출일자
										  
										 
									) DUAL 
									GROUP BY OUTLET_CD, SALES_DATE
				               )
				                 

				                WHERE SALES_DATE    BETWEEN  TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || '0101'
				                                       AND   TO_CHAR(TO_NUMBER(SUBSTR(:searchDt,1,4)) -1) || SUBSTR(:searchDt,5,4) -- 매출일자
				                  GROUP BY OUTLET_CD
							) YTD_OLD_GOODS ON YTD_OLD_GOODS.OUTLET_CD = OUTLET.OUTLET_CD

				WHERE 1=1



					
				
		]]>
	</statement>		
	
	<statement name="dailyHap" type="insert">
	/*+ com.hwfs.rc.sle.dao.outletDailySalesDAO.dailyHap */
		<![CDATA[			
				
			INSERT INTO SLE_DAILY_TEMP (
				OUTLET_BGN,OUTLET_BGN_NM,
				OUTLET_GRP,OUTLET_GRP_NM,
				OUTLET_SUM,OUTLET_HAP_NM,
				OUTLET_CD,OUTLET_NM,
				PIC_PLACE,GBN_PLACE,GRP_PLACE,
                
				TODAY_GOAL,TODAY_NET,TODAY_PER,TODAY_WEEK_NET,TODAY_WEEK_PER,TODAY_YEAR_NET,TODAY_YEAR_PER,
				MTD_GOAL_MOON,MTD_GOAL,MTD_NET,MTD_PER,MTD_YEAR_NET,MTD_YEAR_PER,
				YTD_GOAL_YEAR,YTD_GOAL,YTD_NET,YTD_PER,YTD_OLD_NET,YTD_OLD_PER
				)
				SELECT
                OUTLET_BGN, OUTLET_BGN_NM,
				OUTLET_GRP, OUTLET_GRP_NM, 
                MAX(HAP.ATTR01) AS OUTLET_SUM, OUTLET_HAP_NM,
                MAX(HAP.ATTR01) AS OUTLET_CD, MAX(HAP.CODE_NAME)   AS OUTLET_NM, 
                MAX(PIC_PLACE)  AS PIC_PLACE, MAX(GBN_PLACE)  AS GBN_PLACE, MAX(GRP_PLACE)  AS GRP_PLACE,
				SUM(TODAY_GOAL),SUM(TODAY_NET),
				ROUND(NVL(SUM(TODAY_NET),0) / DECODE(NVL(SUM(TODAY_GOAL),0),0,NULL,NVL(SUM(TODAY_GOAL),0)) * 100 ,1) AS TODAY_PER, --실적(%)
				SUM(TODAY_WEEK_NET),
				ROUND( NVL(SUM(TODAY_NET),0) / DECODE(NVL(SUM(TODAY_WEEK_NET),0),0,NULL,NVL(SUM(TODAY_WEEK_NET),0)) * 100 ,1) AS TODAY_WEEK_PER,  --전년(요일) %
				SUM(TODAY_YEAR_NET),
				ROUND(NVL(SUM(TODAY_NET),0) / DECODE(NVL(SUM(TODAY_YEAR_NET),0),0,NULL,NVL(SUM(TODAY_YEAR_NET),0)) * 100 ,1) AS TODAY_YEAR_PER, --전년(일자) %
				
				SUM(MTD_GOAL_MOON),SUM(MTD_GOAL),SUM(MTD_NET),
				ROUND( NVL(SUM(MTD_NET),0) / DECODE(NVL(SUM(MTD_GOAL),0),0,NULL,NVL(SUM(MTD_GOAL),0)) * 100 ,1) AS	MTD_PER, --실적(%)
				SUM(MTD_YEAR_NET),
				ROUND(NVL(SUM(MTD_NET),0) / DECODE(NVL(SUM(MTD_YEAR_NET),0),0,NULL,NVL(SUM(MTD_YEAR_NET),0)) * 100 ,1) AS	MTD_YEAR_PER, --실적(%)
				
				SUM(YTD_GOAL_YEAR),SUM(YTD_GOAL),SUM(YTD_NET),
				ROUND(NVL(SUM(YTD_NET),0) / DECODE(NVL(SUM(YTD_GOAL),0),0,NULL,	NVL(SUM(YTD_GOAL),0)) * 100 ,1) AS	YTD_PER, --실적(%)
				SUM(YTD_OLD_NET),
				ROUND(NVL(SUM(YTD_NET),0) / DECODE(NVL(SUM(YTD_OLD_NET),0),0,NULL,NVL(SUM(YTD_OLD_NET),0)) * 100 ,1)  AS	YTD_OLD_PER --실적(%)
				FROM SLE_DAILY_TEMP TEMP
				INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0110' AND GRP.CODE = TEMP.OUTLET_GRP
                INNER JOIN SCC_COMMON_CODE HAP ON HAP.GROUP_CODE = 'SLE_0113' AND HAP.CODE = TEMP.OUTLET_SUM
                
				GROUP BY OUTLET_BGN, OUTLET_BGN_NM,OUTLET_GRP, OUTLET_GRP_NM,  OUTLET_SUM, OUTLET_HAP_NM
				
		]]>
	</statement>		
	
	<statement name="dailyHapDelete" type="delete">
	/*+ com.hwfs.rc.sle.dao.outletDailySalesDAO.dailyHapDelete */
		<![CDATA[	
			DELETE FROM SLE_DAILY_TEMP WHERE OUTLET_SUM IN (SELECT CODE FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'SLE_0113')
			
		]]>
	</statement>	
	
	<statement name="dailyGroup" type="insert">
	/*+ com.hwfs.rc.sle.dao.outletDailySalesDAO.dailyGroup */
		<![CDATA[			
				INSERT INTO SLE_DAILY_TEMP (
				OUTLET_BGN,OUTLET_BGN_NM,
				OUTLET_GRP,OUTLET_GRP_NM,
				OUTLET_SUM,OUTLET_HAP_NM,
				OUTLET_CD,OUTLET_NM,
				PIC_PLACE,GBN_PLACE,GRP_PLACE,
                
				TODAY_GOAL,TODAY_NET,TODAY_PER,TODAY_WEEK_NET,TODAY_WEEK_PER,TODAY_YEAR_NET,TODAY_YEAR_PER,
				MTD_GOAL_MOON,MTD_GOAL,MTD_NET,MTD_PER,MTD_YEAR_NET,MTD_YEAR_PER,
				YTD_GOAL_YEAR,YTD_GOAL,YTD_NET,YTD_PER,YTD_OLD_NET,YTD_OLD_PER
				)
				SELECT
                OUTLET_BGN, OUTLET_BGN_NM,
				OUTLET_GRP, '' AS OUTLET_GRP_NM, 
                ''  AS OUTLET_SUM, '' AS OUTLET_HAP_NM,
                'ZZ' AS OUTLET_CD, MAX(GRP.CODE_NAME) || ' 소계' AS OUTLET_NM,
                MAX(PIC_PLACE)  AS PIC_PLACE, MAX(GBN_PLACE)  AS GBN_PLACE, MAX(GRP_PLACE)  AS GRP_PLACE,
				SUM(TODAY_GOAL),SUM(TODAY_NET),
				ROUND(NVL(SUM(TODAY_NET),0) / DECODE(NVL(SUM(TODAY_GOAL),0),0,NULL,NVL(SUM(TODAY_GOAL),0)) * 100 ,1) AS TODAY_PER, --실적(%)
				SUM(TODAY_WEEK_NET),
				ROUND( NVL(SUM(TODAY_NET),0) / DECODE(NVL(SUM(TODAY_WEEK_NET),0),0,NULL,NVL(SUM(TODAY_WEEK_NET),0)) * 100 ,1) AS TODAY_WEEK_PER,  --전년(요일) %
				SUM(TODAY_YEAR_NET),
				ROUND(NVL(SUM(TODAY_NET),0) / DECODE(NVL(SUM(TODAY_YEAR_NET),0),0,NULL,NVL(SUM(TODAY_YEAR_NET),0)) * 100 ,1) AS TODAY_YEAR_PER, --전년(일자) %
				
				SUM(MTD_GOAL_MOON),SUM(MTD_GOAL),SUM(MTD_NET),
				ROUND( NVL(SUM(MTD_NET),0) / DECODE(NVL(SUM(MTD_GOAL),0),0,NULL,NVL(SUM(MTD_GOAL),0)) * 100 ,1) AS	MTD_PER, --실적(%)
				SUM(MTD_YEAR_NET),
				ROUND(NVL(SUM(MTD_NET),0) / DECODE(NVL(SUM(MTD_YEAR_NET),0),0,NULL,NVL(SUM(MTD_YEAR_NET),0)) * 100 ,1) AS	MTD_YEAR_PER, --실적(%)
				
				SUM(YTD_GOAL_YEAR),SUM(YTD_GOAL),SUM(YTD_NET),
				ROUND(NVL(SUM(YTD_NET),0) / DECODE(NVL(SUM(YTD_GOAL),0),0,NULL,	NVL(SUM(YTD_GOAL),0)) * 100 ,1) AS	YTD_PER, --실적(%)
				SUM(YTD_OLD_NET),
				ROUND(NVL(SUM(YTD_NET),0) / DECODE(NVL(SUM(YTD_OLD_NET),0),0,NULL,NVL(SUM(YTD_OLD_NET),0)) * 100 ,1)  AS	YTD_OLD_PER --실적(%)
				FROM SLE_DAILY_TEMP TEMP
				INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0110' AND GRP.CODE = TEMP.OUTLET_GRP
              
                
				GROUP BY OUTLET_BGN, OUTLET_BGN_NM,OUTLET_GRP, OUTLET_GRP_NM
				
		]]>
	</statement>		
	
	<statement name="dailySum" type="insert">
	/*+ com.hwfs.rc.sle.dao.outletDailySalesDAO.dailySum */
		<![CDATA[	
		INSERT INTO SLE_DAILY_TEMP (
				OUTLET_BGN,OUTLET_BGN_NM,
				OUTLET_GRP,OUTLET_GRP_NM,
				OUTLET_SUM,OUTLET_HAP_NM,
				OUTLET_CD,OUTLET_NM,
				PIC_PLACE,GBN_PLACE,GRP_PLACE,
                
				TODAY_GOAL,TODAY_NET,TODAY_PER,TODAY_WEEK_NET,TODAY_WEEK_PER,TODAY_YEAR_NET,TODAY_YEAR_PER,
				MTD_GOAL_MOON,MTD_GOAL,MTD_NET,MTD_PER,MTD_YEAR_NET,MTD_YEAR_PER,
				YTD_GOAL_YEAR,YTD_GOAL,YTD_NET,YTD_PER,YTD_OLD_NET,YTD_OLD_PER
				)
				SELECT
                OUTLET_BGN, '' AS OUTLET_BGN_NM,
				'ZZ' AS OUTLET_GRP,'' AS OUTLET_GRP_NM, 
                ''   AS OUTLET_SUM, '' AS OUTLET_HAP_NM,
                'ZZ' AS OUTLET_CD, OUTLET_BGN_NM || ' 합계' AS OUTLET_NM,
                MAX(PIC_PLACE)  AS PIC_PLACE , MAX(GBN_PLACE)  AS GBN_PLACE, MAX(GRP_PLACE)  AS GRP_PLACE,
				SUM(TODAY_GOAL),SUM(TODAY_NET),
				ROUND(NVL(SUM(TODAY_NET),0) / DECODE(NVL(SUM(TODAY_GOAL),0),0,NULL,NVL(SUM(TODAY_GOAL),0)) * 100 ,1) AS TODAY_PER, --실적(%)
				SUM(TODAY_WEEK_NET),
				ROUND( NVL(SUM(TODAY_NET),0) / DECODE(NVL(SUM(TODAY_WEEK_NET),0),0,NULL,NVL(SUM(TODAY_WEEK_NET),0)) * 100 ,1) AS TODAY_WEEK_PER,  --전년(요일) %
				SUM(TODAY_YEAR_NET),
				ROUND(NVL(SUM(TODAY_NET),0) / DECODE(NVL(SUM(TODAY_YEAR_NET),0),0,NULL,NVL(SUM(TODAY_YEAR_NET),0)) * 100 ,1) AS TODAY_YEAR_PER, --전년(일자) %
				
				SUM(MTD_GOAL_MOON),SUM(MTD_GOAL),SUM(MTD_NET),
				ROUND( NVL(SUM(MTD_NET),0) / DECODE(NVL(SUM(MTD_GOAL),0),0,NULL,NVL(SUM(MTD_GOAL),0)) * 100 ,1) AS	MTD_PER, --실적(%)
				SUM(MTD_YEAR_NET),
				ROUND(NVL(SUM(MTD_NET),0) / DECODE(NVL(SUM(MTD_YEAR_NET),0),0,NULL,NVL(SUM(MTD_YEAR_NET),0)) * 100 ,1) AS	MTD_YEAR_PER, --실적(%)
				
				SUM(YTD_GOAL_YEAR),SUM(YTD_GOAL),SUM(YTD_NET),
				ROUND(NVL(SUM(YTD_NET),0) / DECODE(NVL(SUM(YTD_GOAL),0),0,NULL,	NVL(SUM(YTD_GOAL),0)) * 100 ,1) AS	YTD_PER, --실적(%)
				SUM(YTD_OLD_NET),
				ROUND(NVL(SUM(YTD_NET),0) / DECODE(NVL(SUM(YTD_OLD_NET),0),0,NULL,NVL(SUM(YTD_OLD_NET),0)) * 100 ,1)  AS	YTD_OLD_PER --실적(%)
				FROM SLE_DAILY_TEMP TEMP
				INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0110' AND GRP.CODE = TEMP.OUTLET_GRP
              	WHERE OUTLET_CD <> 'ZZ'
                
				GROUP BY OUTLET_BGN, OUTLET_BGN_NM
			]]>
	</statement>		
	
		
	<statement name="dailyTotal" type="insert">
	/*+ com.hwfs.rc.sle.dao.outletDailySalesDAO.dailyTotal */
		<![CDATA[	
				INSERT INTO SLE_DAILY_TEMP (
				OUTLET_BGN,OUTLET_BGN_NM,
				OUTLET_GRP,OUTLET_GRP_NM,
				OUTLET_SUM,OUTLET_HAP_NM,
				OUTLET_CD,OUTLET_NM,
				PIC_PLACE,GBN_PLACE,GRP_PLACE,
                
				TODAY_GOAL,TODAY_NET,TODAY_PER,TODAY_WEEK_NET,TODAY_WEEK_PER,TODAY_YEAR_NET,TODAY_YEAR_PER,
				MTD_GOAL_MOON,MTD_GOAL,MTD_NET,MTD_PER,MTD_YEAR_NET,MTD_YEAR_PER,
				YTD_GOAL_YEAR,YTD_GOAL,YTD_NET,YTD_PER,YTD_OLD_NET,YTD_OLD_PER
				)
				SELECT
                'ZZ' AS OUTLET_BGN, '' AS OUTLET_BGN_NM,
				'ZZ' AS OUTLET_GRP,  '' AS OUTLET_GRP_NM, 
                '' AS OUTLET_SUM,    '' AS OUTLET_HAP_NM,
                'ZZ' AS OUTLET_CD, '전체 합계' AS OUTLET_NM,
                MAX(PIC_PLACE)  AS PIC_PLACE, MAX(GBN_PLACE)  AS GBN_PLACE, MAX(GRP_PLACE)  AS GRP_PLACE,
				SUM(TODAY_GOAL),SUM(TODAY_NET),
				ROUND(NVL(SUM(TODAY_NET),0) / DECODE(NVL(SUM(TODAY_GOAL),0),0,NULL,NVL(SUM(TODAY_GOAL),0)) * 100 ,1) AS TODAY_PER, --실적(%)
				SUM(TODAY_WEEK_NET),
				ROUND( NVL(SUM(TODAY_NET),0) / DECODE(NVL(SUM(TODAY_WEEK_NET),0),0,NULL,NVL(SUM(TODAY_WEEK_NET),0)) * 100 ,1) AS TODAY_WEEK_PER,  --전년(요일) %
				SUM(TODAY_YEAR_NET),
				ROUND(NVL(SUM(TODAY_NET),0) / DECODE(NVL(SUM(TODAY_YEAR_NET),0),0,NULL,NVL(SUM(TODAY_YEAR_NET),0)) * 100 ,1) AS TODAY_YEAR_PER, --전년(일자) %
				
				SUM(MTD_GOAL_MOON),SUM(MTD_GOAL),SUM(MTD_NET),
				ROUND( NVL(SUM(MTD_NET),0) / DECODE(NVL(SUM(MTD_GOAL),0),0,NULL,NVL(SUM(MTD_GOAL),0)) * 100 ,1) AS	MTD_PER, --실적(%)
				SUM(MTD_YEAR_NET),
				ROUND(NVL(SUM(MTD_NET),0) / DECODE(NVL(SUM(MTD_YEAR_NET),0),0,NULL,NVL(SUM(MTD_YEAR_NET),0)) * 100 ,1) AS	MTD_YEAR_PER, --실적(%)
				
				SUM(YTD_GOAL_YEAR),SUM(YTD_GOAL),SUM(YTD_NET),
				ROUND(NVL(SUM(YTD_NET),0) / DECODE(NVL(SUM(YTD_GOAL),0),0,NULL,	NVL(SUM(YTD_GOAL),0)) * 100 ,1) AS	YTD_PER, --실적(%)
				SUM(YTD_OLD_NET),
				ROUND(NVL(SUM(YTD_NET),0) / DECODE(NVL(SUM(YTD_OLD_NET),0),0,NULL,NVL(SUM(YTD_OLD_NET),0)) * 100 ,1)  AS	YTD_OLD_PER --실적(%)
				FROM SLE_DAILY_TEMP TEMP
				INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0110' AND GRP.CODE = TEMP.OUTLET_GRP
              	WHERE OUTLET_CD <> 'ZZ'
		]]>
	</statement>	
			
	<statement name="selectList" type="select">
	/*+ com.hwfs.rc.sle.dao.outletDailySalesDAO.selectList */
		<![CDATA[		
				
				SELECT 
						:searchDt AS TODAY,
						OUTLET_BGN,OUTLET_BGN_NM,
						OUTLET_GRP,OUTLET_GRP_NM,
						OUTLET_SUM,OUTLET_HAP_NM,
						OUTLET_CD,OUTLET_NM,
						PIC_PLACE, GBN_PLACE,GRP_PLACE,

				TODAY_GOAL,TODAY_NET,TODAY_PER,TODAY_WEEK_NET,TODAY_WEEK_PER,TODAY_YEAR_NET,TODAY_YEAR_PER,
				MTD_GOAL_MOON,MTD_GOAL,MTD_NET,MTD_PER,MTD_YEAR_NET,MTD_YEAR_PER,
				YTD_GOAL_YEAR,YTD_GOAL,YTD_NET,YTD_PER,YTD_OLD_NET,YTD_OLD_PER
				FROM SLE_DAILY_TEMP
				ORDER BY GBN_PLACE, OUTLET_BGN,	GRP_PLACE, OUTLET_GRP,  PIC_PLACE,	OUTLET_CD 
		]]>
	</statement>	

</hqml>		