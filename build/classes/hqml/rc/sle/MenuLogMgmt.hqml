<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="rc.sle.menuLogMgmtDAO">

	<desc>업장별 메뉴코드 이력 관리</desc>



	<!--  DATA를 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.rc.sle.dao.menuLogMgmtDAO.selectList */
		<![CDATA[
		SELECT  0 AS CHK_YN, 
				MENU.OUTLET_CD, SHOP.OUTLET_NM AS OUTLET_NM,
				MENU.MENU_CD,
		        MENU.SEQ,
		        MENU.MENU_CLASS,
		        MENU.MENU_CLSFI,
		        MENU.MENU_SCLASS,
		        MENU.MENU_NM,
		        MENU.MENU_ABBR,
		        MENU.LANGAE1,
		        MENU.LANGAE2,
		        MENU.LANGAE3,
		        MENU.BASIS_PRICE,
		        NVL(MENU.CST,0) AS CST,
		        MENU.APPLY_DD,
		        NVL(MENU.APPLY_PRICE,0) AS APPLY_PRICE,
		        MENU.END_DD,
		      
		        DECODE(MENU.USE_CLASS, 'Y', 1, 0) AS USE_CLASS,
		        MENU.CONVERT_QUANTITY,
		        MENU.EXPL,
		        MENU.UNIT,
		        MENU.DPST_CD,
		        
		        DECODE(MENU.UPRICE_CHG_POSS_YN, 'Y', 1, 0) AS UPRICE_CHG_POSS_YN,
		        
		        MENU.SESN_APPLY_YN,
		        MENU.MENU_TYPE,
		        MENU.BAR_CD,
		        MENU.MATERIAL_CD,
		        MENU.RECP_CD,
		        MENU.PIC_PLACE,
		        MENU.TAX_YN,
		        MENU.CAL_METHOD,
		        MENU.SVC,
		        MENU.SPEC_TAX,
		        MENU.EDU_TAX,
		        MENU.FF_TAX,
		        MENU.VAT,
		        MENU.FUND,
		        MENU.DISCNT_POSS_YN,
		        MENU.KTCN_PRINT_NM,
		        MENU.KTCN_PRTR_CD1,
		        MENU.KTCN_PRINT_YN1,
		        MENU.TICKET_PRINT_YN,
		        MENU.KTCN_PRINT_YN2,
		        MENU.KTCN_PRINT_YN3,
		        MENU.KTCN_PRINT_YN4,
		        MENU.KTCN_PRTR_CD2,
		        MENU.KTCN_PRTR_CD3,
		        MENU.KTCN_PRTR_CD4,
		        MENU.CUST_CD,
		        MENU.COMM_RAT,
		    
		        DECODE(MENU.USE_YN, 'Y', 1, 0) AS USE_YN,
		          
		        SCLAS.MENU_CLSFI_NM AS MENU_SCLASS_NM,
		        CLSFI.MENU_CLSFI_NM AS MENU_CLSFI_NM,
		        CLASS.MENU_CLSFI_NM AS MENU_CLASS_NM,
		
		        USECLASS.CODE_NAME  AS USE_CLASS_NM,
		        UNIT.CODE_NAME      AS UNIT_NM,
		        MENUTYPE.CODE_NAME  AS MENU_TYPE_NM,
		        SESNYN.CODE_NAME    AS SESN_APPLY_YN_NM,
		        TAXYN.CODE_NAME     AS TAX_YN_NM,
		        CALMETHOD.CODE_NAME AS CAL_METHOD_NM,
		        DISPOSYN.CODE_NAME  AS DISCNT_POSS_YN_NM,
		        PRIPOSYN.CODE_NAME  AS UPRICE_CHG_POSS_YN_NM,
		        KTCNYN1.CODE_NAME   AS KTCN_PRINT_YN1_NM,
		        KTCNYN2.CODE_NAME   AS KTCN_PRINT_YN2_NM,
		        KTCNYN3.CODE_NAME   AS KTCN_PRINT_YN3_NM,
		        KTCNYN4.CODE_NAME   AS KTCN_PRINT_YN4_NM,
		        TICKER.CODE_NAME    AS TICKET_PRINT_YN_NM,
		        USEYN.CODE_NAME     AS USE_YN_NM,
				
				MENU.CDATE,
				MENU.CUSER, SCCC.NM_KOR AS CUSER_NM,
				MENU.UDATE,
				MENU.UUSER, SCCU.NM_KOR AS UUSER_NM
		
		FROM SLE_AMT_HIST MENU
		INNER      JOIN SCC_USERINFO  SCCC  ON SCCC.USERID    = MENU.CUSER  -- 등록자
		INNER      JOIN SCC_USERINFO  SCCU  ON SCCU.USERID    = MENU.UUSER  -- 수정자
		
		INNER      JOIN SLE_OUTLET_MST  SHOP  ON SHOP.OUTLET_CD    = MENU.OUTLET_CD  -- 업장 코드
		INNER JOIN SLE_OUTLET_MENU_GRP SCLAS  ON SCLAS.OUTLET_CD   = MENU.OUTLET_CD
		                                     AND SCLAS.MENU_CLASS  = MENU.MENU_CLASS
		                                     AND SCLAS.MENU_CLSFI  = MENU.MENU_CLSFI
		                                     AND SCLAS.MENU_SCLASS = MENU.MENU_SCLASS
		INNER JOIN SLE_OUTLET_MENU_GRP CLSFI  ON CLSFI.OUTLET_CD   = MENU.OUTLET_CD
		                                     AND CLSFI.MENU_CLASS  = MENU.MENU_CLASS
		                                     AND CLSFI.MENU_CLSFI  = MENU.MENU_CLSFI
		                                     AND CLSFI.MENU_SCLASS = '00'
		INNER JOIN SLE_OUTLET_MENU_GRP CLASS  ON CLASS.OUTLET_CD   = MENU.OUTLET_CD
		                                     AND CLASS.MENU_CLASS  = MENU.MENU_CLASS
		                                     AND CLASS.MENU_CLSFI  = '00'
		                                     AND CLASS.MENU_SCLASS = '00'
		                                     
		INNER JOIN SCC_COMMON_CODE USECLASS   ON USECLASS.GROUP_CODE  = 'SLE_0003' AND USECLASS.CODE  = DECODE(MENU.USE_CLASS, 'Y', 1, 0)
		INNER JOIN SCC_COMMON_CODE MENUTYPE   ON MENUTYPE.GROUP_CODE  = 'SLE_0005' AND MENUTYPE.CODE  = MENU.MENU_TYPE
		INNER JOIN SCC_COMMON_CODE SESNYN     ON SESNYN.GROUP_CODE    = 'SLE_0008' AND SESNYN.CODE    = MENU.SESN_APPLY_YN
		INNER JOIN SCC_COMMON_CODE TAXYN      ON TAXYN.GROUP_CODE     = 'SLE_0006' AND TAXYN.CODE     = MENU.TAX_YN
		INNER JOIN SCC_COMMON_CODE CALMETHOD  ON CALMETHOD.GROUP_CODE = 'SLE_0002' AND CALMETHOD.CODE = MENU.CAL_METHOD
		INNER JOIN SCC_COMMON_CODE DISPOSYN   ON DISPOSYN.GROUP_CODE  = 'SLE_0008' AND DISPOSYN.CODE  = MENU.DISCNT_POSS_YN
		INNER JOIN SCC_COMMON_CODE PRIPOSYN   ON PRIPOSYN.GROUP_CODE  = 'SLE_0003' AND PRIPOSYN.CODE  = DECODE(MENU.UPRICE_CHG_POSS_YN, 'Y', 1, 0) 
		INNER JOIN SCC_COMMON_CODE KTCNYN1    ON KTCNYN1.GROUP_CODE   = 'SLE_0004' AND KTCNYN1.CODE   = MENU.KTCN_PRINT_YN1
		INNER JOIN SCC_COMMON_CODE KTCNYN2    ON KTCNYN2.GROUP_CODE   = 'SLE_0004' AND KTCNYN2.CODE   = MENU.KTCN_PRINT_YN2
		INNER JOIN SCC_COMMON_CODE KTCNYN3    ON KTCNYN3.GROUP_CODE   = 'SLE_0004' AND KTCNYN3.CODE   = MENU.KTCN_PRINT_YN3
		INNER JOIN SCC_COMMON_CODE KTCNYN4    ON KTCNYN4.GROUP_CODE   = 'SLE_0004' AND KTCNYN4.CODE   = MENU.KTCN_PRINT_YN4
		INNER JOIN SCC_COMMON_CODE TICKER     ON TICKER.GROUP_CODE    = 'SLE_0004' AND TICKER.CODE    = MENU.TICKET_PRINT_YN
		INNER JOIN SCC_COMMON_CODE USEYN      ON USEYN.GROUP_CODE     = 'SLE_0003' AND USEYN.CODE     = DECODE(MENU.USE_YN, 'Y', 1, 0)  
		
		LEFT OUTER JOIN SCC_COMMON_CODE UNIT  ON UNIT.GROUP_CODE      = 'SLE_0007' AND UNIT.CODE      = MENU.UNIT
	
		WHERE MENU.USE_YN = 'Y' 
		<#if outletCd?has_content> AND  MENU.OUTLET_CD     = :outletCd   </#if>
		<#if dateFr?has_content>   AND  MENU.APPLY_DD     >= :dateFr  </#if>
		<#if dateTo?has_content>   AND  MENU.APPLY_DD     <= :dateTo  </#if>
		<#if menuNm?has_content>   AND (MENU.MENU_NM     LIKE '%' || :menuNm || '%' OR MENU.MENU_CD LIKE '%' || :menuNm || '%' ) </#if>
		<#if itemCd?has_content>   AND  LOWER(MENU.MENU_CD)    LIKE '%' || LOWER(:itemCd) || '%'    </#if>
		
		ORDER BY MENU.APPLY_DD DESC, MENU.MENU_CD, MENU.SEQ
		
	]]>
	</statement>




	<!--  DATA를 저장한다. -->
	<statement name="insertData" type="insert">
		/*+ com.hwfs.rc.sle.dao.menuLogMgmtDAO.insertData */
		<![CDATA[
		INSERT INTO SLE_AMT_HIST (
				OUTLET_CD,
				MENU_CD,
				SEQ,
				MENU_CLASS,
				MENU_CLSFI,
				MENU_SCLASS,
				MENU_NM,
				MENU_ABBR,
				LANGAE1,
				LANGAE2,
				LANGAE3,
				BASIS_PRICE,
				CST,
				APPLY_DD,
				APPLY_PRICE,
				END_DD,
				USE_CLASS,
				CONVERT_QUANTITY,
				EXPL,
				UNIT,
				DPST_CD,
				UPRICE_CHG_POSS_YN,
				SESN_APPLY_YN,
				MENU_TYPE,
				BAR_CD,
				MATERIAL_CD,
				RECP_CD,
				PIC_PLACE,
				TAX_YN,
				CAL_METHOD,
				SVC,
				SPEC_TAX,
				EDU_TAX,
				FF_TAX,
				VAT,
				FUND,
				DISCNT_POSS_YN,
				KTCN_PRINT_NM,
				KTCN_PRTR_CD1,
				KTCN_PRINT_YN1,
				TICKET_PRINT_YN,
				KTCN_PRINT_YN2,
				KTCN_PRINT_YN3,
				KTCN_PRINT_YN4,
				KTCN_PRTR_CD2,
				KTCN_PRTR_CD3,
				KTCN_PRTR_CD4,
				CUST_CD,
				COMM_RAT,
				USE_YN,
				CDATE,
				CUSER,
				UDATE,
				UUSER
				) VALUES (
				 :outletCd,
				 :menuCd,
				 :seq,
				 :menuClass,
				 :menuClsfi,
				 :menuSclass,
				<#if menuNm?exists> 		 :menuNm, 					<#else> null, </#if>
				<#if menuAbbr?exists> 		 :menuAbbr, 				<#else> null, </#if>
				<#if langae1?exists> 		 :langae1, 					<#else> null, </#if>
				<#if langae2?exists> 		 :langae2, 					<#else> null, </#if>
				<#if langae3?exists> 		 :langae3, 					<#else> null, </#if>
				<#if basisPrice?exists>      :basisPrice, 			 	<#else> null, </#if>
				<#if cst?exists>             :cst, 					 	<#else> null, </#if>
				<#if applyDd?exists>         :applyDd, 				 	<#else> null, </#if>
				<#if chgPrice?exists>        :chgPrice, 			 	<#else> null, </#if>
				<#if endDd?exists>           :endDd, 				 	<#else> null, </#if>
				<#if useClass?exists> DECODE(:useClass, '1', 'Y', 'N'), <#else> null, </#if>
				<#if convertQuantity?exists> :convertQuantity, 		 	<#else> null, </#if>
				<#if expl?exists>            :expl, 				 	<#else> null, </#if>
				<#if unit?exists>            :unit, 				 	<#else> null, </#if>
				<#if dpstCd?exists>          :dpstCd, 				 	<#else> null, </#if>
				<#if upriceChgPossYn?exists> DECODE(:upriceChgPossYn, '1', 'Y', 'N'), <#else> null, </#if>
				<#if sesnApplyYn?exists> 	 :sesnApplyYn, 			 	<#else> null, </#if>
				<#if menuType?exists> 		 :menuType, 			 	<#else> null, </#if>
				<#if barCd?exists> 			 :barCd, 			 	 	<#else> null, </#if>
				<#if materialCd?exists> 	 :materialCd, 			 	<#else> null, </#if>
				<#if recpCd?exists> 		 :recpCd, 				 	<#else> null, </#if>
				<#if picPlace?exists> 		 :picPlace, 			 	<#else> null, </#if>
				<#if taxYn?exists> 			 :taxYn, 				 	<#else> null, </#if>
				<#if calMethod?exists> 		 :calMethod,    		 	<#else> null, </#if>
				<#if svc?exists> 			 :svc, 						<#else> null, </#if>
				<#if specTax?exists> 		 :specTax, 				 	<#else> null, </#if>
				<#if eduTax?exists> 		 :eduTax, 				 	<#else> null, </#if>
				<#if ffTax?exists> 			 :ffTax, 				 	<#else> null, </#if>
				<#if vat?exists> 			 :vat, 					 	<#else> null, </#if>
				<#if fund?exists> 			 :fund, 			     	<#else> null, </#if>
				<#if discntPossYn?exists> 	 :discntPossYn, 		 	<#else> null, </#if>
				<#if ktcnPrintNm?exists> 	 :ktcnPrintNm, 			 	<#else> null, </#if>
				<#if ktcnPrtrCd1?exists> 	 :ktcnPrtrCd1, 		  	 	<#else> null, </#if>
				<#if ktcnPrintYn1?exists>  	 :ktcnPrintYn1,  		 	<#else> null, </#if>
				<#if ticketPrintYn?exists> 	 :ticketPrintYn, 		 	<#else> null, </#if>
				<#if ktcnPrintYn2?exists>  	 :ktcnPrintYn2,  		 	<#else> null, </#if>
				<#if ktcnPrintYn3?exists>    :ktcnPrintYn3,  		 	<#else> null, </#if>
				<#if ktcnPrintYn4?exists>    :ktcnPrintYn4, 		 	<#else> null, </#if>
				<#if ktcnPrtrCd2?exists>     :ktcnPrtrCd2, 			 	<#else> null, </#if>
				<#if ktcnPrtrCd3?exists>     :ktcnPrtrCd3, 			 	<#else> null, </#if>
				<#if ktcnPrtrCd4?exists>     :ktcnPrtrCd4, 			 	<#else> null, </#if>
				<#if custCd?exists>          :custCd, 				 	<#else> null, </#if>
				<#if commRat?exists>         :commRat, 				 	<#else> null, </#if>
				<#if useYn?exists>    DECODE(:useYn, '1', 'Y', 'N'), 	<#else> null, </#if>
				 SYSDATE,
				 :loginSabun,
				 SYSDATE,
				 :loginSabun
				)
		
		]]>
	</statement>

	<!--  DATA를 수정한다. -->
	<statement name="updateData" type="update">
		/*+ com.hwfs.rc.sle.dao.menuLogMgmtDAO.updateData */
		<![CDATA[
		 UPDATE SLE_AMT_HIST SET
											MENU_CLASS = :menuClass,
											MENU_CLSFI = :menuClsfi,
											MENU_SCLASS = :menuSclass,
			<#if menuNm?exists> 			MENU_NM = :menuNm, </#if>
			<#if menuAbbr?exists> 			MENU_ABBR = :menuAbbr, </#if>
			<#if langae1?exists> 			LANGAE1 = :langae1, </#if>
			<#if langae2?exists> 			LANGAE2 = :langae2, </#if>
			<#if langae3?exists> 			LANGAE3 = :langae3, </#if>
			<#if basisPrice?exists> 		BASIS_PRICE = :basisPrice, </#if>
			<#if cst?exists> 				CST = :cst, </#if>
			<#if applyDd?exists> 			APPLY_DD = :applyDd, </#if>
			<#if chgPrice?exists> 		    APPLY_PRICE = :chgPrice, </#if>
			<#if endDd?exists> 				END_DD = :endDd, </#if>
	
			<#if useClass?exists> 			USE_CLASS = DECODE(:useClass, '1', 'Y', 'N'), </#if>
			<#if convertQuantity?exists> 	CONVERT_QUANTITY = :convertQuantity, </#if>
			<#if expl?exists> 				EXPL = :expl, </#if>
			<#if unit?exists> 				UNIT = :unit, </#if>
			<#if dpstCd?exists> 			DPST_CD = :dpstCd, </#if>
			<#if upriceChgPossYn?exists> 	UPRICE_CHG_POSS_YN = DECODE(:upriceChgPossYn, '1', 'Y', 'N'), </#if>
			<#if sesnApplyYn?exists> 		SESN_APPLY_YN = :sesnApplyYn, </#if>
			<#if menuType?exists> 			MENU_TYPE = :menuType, </#if>
			<#if barCd?exists> 				BAR_CD = :barCd, </#if>
			<#if materialCd?exists> 		MATERIAL_CD = :materialCd, </#if>
			<#if recpCd?exists> 			RECP_CD = :recpCd, </#if>
			<#if picPlace?exists> 			PIC_PLACE = :picPlace, </#if>
			<#if taxYn?exists> 				TAX_YN = :taxYn, </#if>
			<#if calMethod?exists> 			CAL_METHOD = :calMethod, </#if>
			<#if svc?exists> 				SVC = :svc, </#if>
			<#if specTax?exists> 			SPEC_TAX = :specTax, </#if>
			<#if eduTax?exists> 			EDU_TAX = :eduTax, </#if>
			<#if ffTax?exists> 				FF_TAX = :ffTax, </#if>
			<#if vat?exists> 				VAT = :vat, </#if>
			<#if fund?exists> 				FUND = :fund, </#if>
			<#if discntPossYn?exists> 		DISCNT_POSS_YN = :discntPossYn, </#if>
			<#if ktcnPrintNm?exists> 		KTCN_PRINT_NM = :ktcnPrintNm, </#if>
			<#if ktcnPrtrCd1?exists> 		KTCN_PRTR_CD1 = :ktcnPrtrCd1, </#if>
			<#if ktcnPrintYn1?exists> 		KTCN_PRINT_YN1 = :ktcnPrintYn1,  </#if>
			<#if ticketPrintYn?exists> 		TICKET_PRINT_YN = :ticketPrintYn, </#if>
			<#if ktcnPrintYn2?exists> 		KTCN_PRINT_YN2 = :ktcnPrintYn2,  </#if>
			<#if ktcnPrintYn3?exists> 		KTCN_PRINT_YN3 = :ktcnPrintYn3, </#if>
			<#if ktcnPrintYn4?exists> 		KTCN_PRINT_YN4 = :ktcnPrintYn4, </#if>
			<#if ktcnPrtrCd2?exists> 		KTCN_PRTR_CD2 = :ktcnPrtrCd2, </#if>
			<#if ktcnPrtrCd3?exists> 		KTCN_PRTR_CD3 = :ktcnPrtrCd3, </#if>
			<#if ktcnPrtrCd4?exists> 		KTCN_PRTR_CD4 = :ktcnPrtrCd4, </#if>
			<#if custCd?exists> 			CUST_CD = :custCd, </#if>
			<#if commRat?exists> 			COMM_RAT = :commRat, </#if>
			<#if useYn?exists> 				USE_YN = DECODE(:useYn, '1', 'Y', 'N'), </#if>
									       	UDATE = SYSDATE,
									       	UUSER = :loginSabun	
		WHERE  OUTLET_CD = :outletCd
		AND    MENU_CD = :menuCd
		AND    SEQ = :seq

	]]>
	</statement>

	<!--  코드를 생성한다. -->
	<statement name="maxCodeCreate" type="select"><![CDATA[
		 
		SELECT  NVL(MAX(SEQ),'0') + 1 AS MAX_CODE
 		FROM SLE_AMT_HIST
 		WHERE  OUTLET_CD = :outletCd
		  AND  MENU_CD = :menuCd
 ]]></statement>



	<!--  당일인경우 메뉴코드의 단가를 변경해준다. -->
	<statement name="menuSave" type="update">
		/*+ com.hwfs.rc.sle.dao.menuLogMgmtDAO.menuSave */
		<![CDATA[
		 
		UPDATE SLE_OUTLET_MENU SET  
			<#if applyDd?exists> 			APPLY_DD    = :applyDd, </#if>
			<#if chgPrice?exists> 		    APPLY_PRICE = :chgPrice, </#if>
			UDATE = SYSDATE,
			UUSER = :loginSabun	
 		WHERE  OUTLET_CD = :outletCd
		  AND  MENU_CD   = :menuCd
 
	]]>
	</statement>

	<statement name="selectPosYn"><![CDATA[SELECT DECODE(POS_YN,'N', 0, 1) as POS_YN
  FROM SLE_OUTLET_MST
 WHERE OUTLET_CD = :outletCd]]></statement>
</hqml>
