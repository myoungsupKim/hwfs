<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="rc.rrm.standardRecipeBatchChangeDAO">
	<desc>표준 레시피 자재 일괄 변경 HQML Query</desc>

	<!-- 표준 레시피 자재 일괄 변경 목록을 조회한다. -->
	<statement name="selectList" type="select">
	<![CDATA[
	SELECT A.MU_CD
	     , (SELECT MU_NM FROM SCC_MU WHERE MU_CD = A.MU_CD) MU_NM
	     , A.UPJANG_TYPE
	     , A.STD_RECIPE_CD
	     , B.RECIPE_NM
	     , A.MATERIAL_CD
	     , C.ITEM_NAME AS MATERIAL_NM
	     , A.SDATE
	     , A.EDATE
	     , A.NEED_QTY
	     , A.CST_AMT
	     , A.BASIS_UNIT_CD
	     , A.PO_UNIT
	     , A.RECIPE_APPLY_UNIT
	     , A.LOSS_RATE
	     , A.YIELD
	     , A.SEMI_GOODS_YN
	     , A.SORT_ORDER
	     , A.CHG_REASON_CD
	     , A.CHG_REASON
	     , A.REMARK
	     , C.ITEM_SIZE
	     , A.STD_SEQ
	  FROM RSS_STD_RECIPE_CD_DETAIL A
	     , RSS_STD_RECIPE_CD_MST B
	     , HLDC_PO_ITEM_MST C
	 WHERE A.MU_CD = B.MU_CD
	   AND A.UPJANG_TYPE = B.UPJANG_TYPE
	   AND A.STD_RECIPE_CD = B.STD_RECIPE_CD
	   AND A.MATERIAL_CD = C.ITEM_CODE(+)
	   AND A.MU_CD = :muCd
	   AND A.UPJANG_TYPE = :upjangType
	   AND A.MATERIAL_CD = :orgMaterialCd
	   AND A.SDATE <= :sdate
	   AND A.EDATE >= :sdate
	   AND NVL(B.SML_YN, 'N') = 'N'
	   AND B.USE_YN = 'Y'
	 ORDER BY A.STD_RECIPE_CD ASC
	]]>
	</statement>

	<!-- 표준 레시피 자재 일괄 변경(을)를 등록한다. -->
	<statement name="insert" type="insert">
	/*+ com.hwfs.rc.rrm.dao.StandardRecipeBatchChangeDAO.insert */
	<![CDATA[
	INSERT INTO RSS_STD_RECIPE_CD_DETAIL
	(
	   MU_CD
	 , UPJANG_TYPE
	 , STD_RECIPE_CD
	 , MATERIAL_CD
	 , STD_SEQ
	 , SDATE
	 , EDATE
	 , NEED_QTY
	 , CST_AMT
	 , BASIS_UNIT_CD
	 , PO_UNIT
	 , RECIPE_APPLY_UNIT
	 , LOSS_RATE
	 , YIELD
	 , SEMI_GOODS_YN
	 , PRVS_MATERIAL_CD
	 , SORT_ORDER
	 , CHG_REASON_CD
	 , CHG_REASON
	 , REMARK
	 , CUSER
	 , CDATE
	 , UUSER
	 , UDATE
	)
	VALUES
	(
	   :muCd
	 , :upjangType
	 , :stdRecipeCd
	 , :materialCd
	 , (SELECT NVL(MAX(STD_SEQ)+1, 1) FROM RSS_STD_RECIPE_CD_DETAIL WHERE UPJANG_TYPE = :upjangType AND STD_RECIPE_CD = :stdRecipeCd AND MATERIAL_CD  = :materialCd)
	 , :sdate
	<#if edate?exists>
	 , :edate
	<#else>
	 , null
	</#if>
	<#if needQty?exists>
	 , :needQty
	<#else>
	 , null
	</#if>
	<#if cstAmt?exists>
	 , :cstAmt
	<#else>
	 , null
	</#if>
	<#if basisUnitCd?exists>
	 , :basisUnitCd
	<#else>
	 , null
	</#if>
	<#if poUnit?exists>
	 , :poUnit
	<#else>
	 , null
	</#if>
	<#if recipeApplyUnit?exists>
	 , :recipeApplyUnit
	<#else>
	 , null
	</#if>
	<#if lossRate?exists>
	 , :lossRate
	<#else>
	 , null
	</#if>
	<#if yield?exists>
	 , :yield
	<#else>
	 , null
	</#if>
	<#if semiGoodsYn?exists>
	 , :semiGoodsYn
	<#else>
	 , null
	</#if>
	<#if prvsMaterialCd?exists>
	 , :prvsMaterialCd
	<#else>
	 , null
	</#if>
	<#if sortOrder?exists>
	 , :sortOrder
	<#else>
	 , null
	</#if>
	<#if chgReasonCd?exists>
	 , :chgReasonCd
	<#else>
	 , null
	</#if>
	<#if chgReason?exists>
	 , :chgReason
	<#else>
	 , null
	</#if>
	<#if remark?exists>
	 , :remark
	<#else>
	 , null
	</#if>
	 , :loginSabun
	 , SYSDATE
	 , :loginSabun
	 , SYSDATE
	)
	]]>
	</statement>

	<!-- 업장 레시피 자재 일괄 변경(을)를 등록한다. -->
	<statement name="insertUpjang" type="insert">
		/*+
		com.hwfs.rc.rrm.dao.StandardRecipeBatchChangeDAO.insertUpjang */
		<![CDATA[
		INSERT INTO RSS_UPJANG_RECIPE_CD_DETAIL
		(
			 UPJANG_CD,
			 STD_RECIPE_CD,
			 MATERIAL_CD,
			 SDATE,
			 UPJANG_TYPE,
			 EDATE,
			 NEED_QTY,
			 CST_AMT,
			 BASIS_UNIT_CD,
			 PO_UNIT,
			 RECIPE_APPLY_UNIT,
			 LOSS_RATE,
			 YIELD,
			 SEMI_GOODS_YN,
			 PRVS_MATERIAL_CD,
			 SORT_ORDER,
			 CHG_REASON_CD,
			 CHG_REASON,
			 REMARK,
			 CUSER,
			 CDATE,
			 UUSER,
			 UDATE
		)
		SELECT
			A.UPJANG_CD,
			A.STD_RECIPE_CD,
			:materialCd,
			:sdate,
			A.UPJANG_TYPE,
			A.EDATE,
			A.NEED_QTY,
			<#if cstAmt?exists> :cstAmt, <#else> null, </#if>
			A.BASIS_UNIT_CD,
			<#if poUnit?exists> :poUnit, <#else> null, </#if>
			A.RECIPE_APPLY_UNIT,
			A.LOSS_RATE,
			A.YIELD,
			A.SEMI_GOODS_YN,
			<#if prvsMaterialCd?exists> :prvsMaterialCd, <#else> null, </#if>
			A.SORT_ORDER,
			A.CHG_REASON_CD,
			A.CHG_REASON,
			A.REMARK,
			:loginSabun,
			SYSDATE,
			:loginSabun,
			SYSDATE
		FROM RSS_UPJANG_RECIPE_CD_DETAIL A,
			 RSS_UPJANG_RECIPE_CD_MST B
		WHERE A.UPJANG_CD = B.UPJANG_CD(+)
		AND	  A.STD_RECIPE_CD = B.STD_RECIPE_CD(+)
		AND	  A.STD_RECIPE_CD = :stdRecipeCd
		AND	  A.MATERIAL_CD = :prvsMaterialCd
		AND	  A.SDATE = :orgSdate
		]]>
	</statement>
	
	<!-- (표준)변경 후 자재 삭제 2017.02.17 add -->
	<statement name="deleteStd" type="delete">			
		<![CDATA[
		/*+ com.hwfs.rc.rrm.dao.StandardRecipeBatchChangeDAO.deleteStd */
		DELETE
		FROM RSS_STD_RECIPE_CD_DETAIL
		WHERE  MU_CD = :muCd
		AND	   UPJANG_TYPE = :upjangType
		AND	   STD_RECIPE_CD = :stdRecipeCd
		AND	   MATERIAL_CD = :materialCd
		]]>
	</statement>

	<!-- (표준)변경된 기투입자재를 수정한다.(종료일자를 변경후자재의 시작일자 -1 일자로 변경) -->
	<!-- 중복 식자재 못들어가도록 키 재생성 후 업데이트 방식 변경 2017.02.17 update-->
	<statement name="updateEdate" type="update">
		/*+ com.hwfs.rc.rrm.dao.StandardRecipeBatchChangeDAO.updateEdate
		*/
		<![CDATA[
		UPDATE RSS_STD_RECIPE_CD_DETAIL 
		--SET    EDATE = TO_CHAR(TO_DATE(:sdate, 'YYYYMMDD')-1, 'YYYYMMDD'),		
		SET	   MATERIAL_CD = :materialCd,
			   <#if chgReasonCd?exists> CHG_REASON_CD = :chgReasonCd, </#if>
			   <#if chgReason?exists> CHG_REASON = :chgReason, </#if>
			   
		       UUSER = :loginSabun,
		       UDATE = SYSDATE
		WHERE  MU_CD = :muCd
		AND	   UPJANG_TYPE = :upjangType
		AND	   STD_RECIPE_CD = :stdRecipeCd
		AND	   MATERIAL_CD = :prvsMaterialCd
		--AND	   SDATE = :orgSdate
		--AND    STD_SEQ = :stdSeq
		]]>
	</statement>
	
	<!-- (업장)변경 후 자재 삭제 2017.02.17 add -->
	<statement name="deleteUpjang" type="delete">
		
		<![CDATA[
		/*+ com.hwfs.rc.rrm.dao.StandardRecipeBatchChangeDAO.deleteUpjang */
		DELETE 
		FROM RSS_UPJANG_RECIPE_CD_DETAIL
		WHERE  STD_RECIPE_CD = :stdRecipeCd
			AND MATERIAL_CD = :materialCd
		]]>
	</statement>
	
	<!-- (업장)변경된 기투입자재를 수정한다.(종료일자를 변경후자재의 시작일자 -1 일자로 변경) -->
	<!-- 중복 식자재 못들어가도록 키 재생성 후 업데이트 방식 변경 2017.02.17 update -->
	<statement name="updateEdateUpjang" type="update">
		/*+	com.hwfs.rc.rrm.dao.StandardRecipeBatchChangeDAO.updateEdateUpjang	*/
		<![CDATA[
		UPDATE RSS_UPJANG_RECIPE_CD_DETAIL A
		   --SET EDATE = TO_CHAR(TO_DATE(:sdate, 'YYYYMMDD') - 1, 'YYYYMMDD')
		   SET MATERIAL_CD = :materialCd
		<#if chgReasonCd?exists>
		     , CHG_REASON_CD = :chgReasonCd
		</#if>
		<#if chgReason?exists>
		     , CHG_REASON = :chgReason
		</#if> 
			 , UUSER = :loginSabun
		     , UDATE = SYSDATE
		 WHERE STD_RECIPE_CD = :stdRecipeCd
		   AND MATERIAL_CD = :prvsMaterialCd
		   --AND SDATE = :orgSdate
		   --AND EXISTS (SELECT 1
		   --              FROM RSS_UPJANG_RECIPE_CD_MST B 
		   --             WHERE A.UPJANG_CD = B.UPJANG_CD
		   --               AND	A.STD_RECIPE_CD = B.STD_RECIPE_CD)
		]]>
	</statement>

	<!-- 표준 레시피 자재 일괄 변경 후 이력을 등록한다. -->
	<statement name="insertStdLog" type="insert">
	/*+ com.hwfs.rc.rrm.dao.StandardRecipeBatchChangeDAO.insertStdLog */
	<![CDATA[
	INSERT INTO RSS_STD_RECIPE_CD_LOG
	(
	   CHG_SEQ
	 , CHG_DATE
	 , MU_CD
	 , UPJANG_TYPE
	 , STD_RECIPE_CD
	 , PRVS_MATERIAL_CD
	 , CHG_MATERIAL_CD
	 , CHG_REASON_CD
	 , CHG_REASON
	 , START_DATE
	 , END_DATE
	 , CUSER
	 , CDATE
	 , UUSER
	 , UDATE
	)
	VALUES
	(
	   (SELECT NVL(MAX(CHG_SEQ) + 1, 1) FROM RSS_STD_RECIPE_CD_LOG)
	 , TO_CHAR(SYSDATE, 'YYYYMMDD')
	 , :muCd
	 , :upjangType
	 , :stdRecipeCd
	 , :prvsMaterialCd
	 , :materialCd
	 , :chgReasonCd
	 , :chgReason
	 , NULL
	 , NULL
	 , :loginSabun
	 , TO_CHAR(SYSDATE, 'YYYYMMDD')
	 , :loginSabun
	 , TO_CHAR(SYSDATE, 'YYYYMMDD')
	)
	]]>
	</statement>
</hqml>
