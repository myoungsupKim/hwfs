<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="rc.rrm.recipeDetailedMgntDAO">
	<desc>업장 레시피 상세 HQML Query</desc>

	<!-- 업장 레시피 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.rc.rrm.dao.RecipeDetailedMgntDAO.selectList */
		<![CDATA[
		SELECT A.UPJANG_CD
		     , F.UPJANGNM AS UPJANG_NM
		     , A.UPJANG_TYPE
		     , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'UPJANG_TYPE' AND CODE = A.UPJANG_TYPE) AS UPJANG_TYPE_NM
		     , A.STD_RECIPE_CD
		     , A.MU_CD
		     , (SELECT MU_NM FROM SCC_MU WHERE MU_CD = A.MU_CD) AS MU_NM
		     , A.RECIPE_NM
		     , A.RECIPE_NM_ENGLISH
		     , A.RECIPE_NM_BYNM
		     , A.STAND
		     , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'STAND_TYPE' AND CODE = A.STAND) AS STAND_NM
		     , A.ORIGIN
		     , A.OFFER_UNIT
		     , A.OFER_UNIT
		     , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'OFER_UNIT' AND CODE = A.OFER_UNIT) AS OFER_UNIT_NM
		     , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'OFFER_UNIT' AND CODE = A.OFFER_UNIT) AS OFFER_UNIT_NM
		     , A.COOK_UNIT
		     , A.OFER_NO
		     , A.GOAL_CSTRAT
		     , DECODE(A.CSTRAT_DRCT_INPUT_YN, 'Y', 1, 0) AS CSTRAT_DRCT_INPUT_YN
		     , A.DRCT_INPUT_CST_RATE
		     , A.STD_RECIPE_APPLY_BASIS
		     , A.MCALSS_CD
		     , A.SCLASS_CD
		     , A.RECIPE_REG_AGED
		     , A.SALE_PRICE
		     , A.RECIPE_DVLP_BY
		     , A.RECIPE_UUSER
		     , A.REMARK
		     , A.REG_DATE
		     , A.REF_SEQ
		     , A.APPEND_SEQ
		     , E.REL_PATH
		     , E.SAVE_FILE_NM
		     , E.ORGNL_FILE_NM
		     , A.UPJANG_MODIFY_ALLOW_YN
		     , A.RECIPE_STATUS
		     , A.USE_YN
		     , A.CUSER
		     , A.CDATE
		     , A.UUSER
		     , A.UDATE
		     , (SELECT COUNT(*) AS CNT
		          FROM RSS_UPJANG_RECIPE_CD_DETAIL Z
		         WHERE Z.UPJANG_CD = A.UPJANG_CD
		           AND Z.STD_RECIPE_CD = A.STD_RECIPE_CD
		           AND Z.UPJANG_TYPE = A.UPJANG_TYPE
		           AND :stdDate BETWEEN Z.SDATE AND Z.EDATE) AS SUB_COUNT
		     , A.SET_RECIPE_CD
		     , A.SET_RECIPE_CD AS OLD_SET_RECIPE_CD
		     , DECODE((SELECT COUNT(*) FROM RSS_STD_RECIPE_CUISINE WHERE STD_RECIPE_CD = A.STD_RECIPE_CD), 0, 'N', 'Y') AS CUSINE_CNT
		     --, FN_RECIPE_AMT_FUN(A.UPJANG_CD, A.STD_RECIPE_CD, :stdDate, '3') AS INVEST_AMT
		  FROM RSS_UPJANG_RECIPE_CD_MST A
		     , SCC_APPEND_FILE E
		     , SCO_UPJANG_MST_V F
		 WHERE A.REF_SEQ = E.REF_SEQ(+)
		   AND A.APPEND_SEQ = E.APPEND_SEQ(+)
		   AND A.UPJANG_CD = F.UPJANG(+)
		<#if muCd?has_content>
		   AND A.MU_CD = :muCd
		</#if>
		<#if upjangCd?has_content>
		   AND A.UPJANG_CD = :upjangCd
		</#if>
		<#if recipeNm?has_content>
		   AND UPPER(A.RECIPE_NM) LIKE '%' || UPPER(:recipeNm) || '%'
		</#if>
		<#if mcalssCd?has_content>
		   AND A.MCALSS_CD = :mcalssCd
		</#if>
		<#if sclassCd?has_content>
		   AND A.SCLASS_CD = :sclassCd
		</#if>
		<#if useYn?has_content>
		   AND A.USE_YN = :useYn
		</#if>
		 ORDER BY A.STD_RECIPE_CD ASC
		]]>
	</statement>

	<!-- 업장 레시피 상세 목록을 조회한다. -->
	<statement name="selectListDtl" type="select">
		/*+ com.hwfs.rc.rrm.dao.RecipeDetailedMgntDAO.selectListDtl */
		<![CDATA[
		SELECT '0' AS CHK
		     , A.UPJANG_CD
		     , A.UPJANG_NM
		     , A.UPJANG_TYPE
		     , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'UPJANG_TYPE' AND CODE = A.UPJANG_TYPE) AS UPJANG_TYPE_NM
		     , A.STD_RECIPE_CD
		     , A.MU_CD
		     , (SELECT MU_NM FROM SCC_MU WHERE MU_CD = A.MU_CD) AS MU_NM
		     , A.RECIPE_NM
		     , A.RECIPE_NM_BYNM
		     , A.COOK_UNIT
		     , A.STAND
		     , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'STAND_TYPE' AND CODE = A.STAND) STAND_NM
		     , A.UPJANG_MODIFY_ALLOW_YN
		     , A.MATERIAL_CD
		     , DECODE(A.SEMI_GOODS_YN, 'Y', A.SUB_RECIPE_NM, A.ITEM_NAME) AS MATERIAL_CD_NM
		     ,(SELECT 
          			    MAX(A.PROC_TYP_CD)
				FROM --HLDC_ST_UPJANG B, 
              		 --HLDC_PO_UPJANG_CENTER F,  
                   	 EPROCUSR.VO_CONTRACT_F_RCP A, -- 논리적 분사이후 단가불러오는 뷰 변경 20200309
              		 EPROCUSR.VO_CENTER_UPJANG_RCP F, -- 논리적 분사이후 단가불러오는 뷰 변경 20200309	
              		 --HLDC_PO_CONTRACT_F A,
                   	 (SELECT B.UPJANG, C.N_CC_CD
                                        FROM ST_UPJANGV B
                                           , SAP_IF.SAP_IFC_CC_MAP C
                                         WHERE B.CC_CD = C.O_CC_CD) X,	   
              		 VO_FC_VENDOR E 
        		WHERE A.CENTER_CODE = F.CENTER_CODE 
          			AND A.CUSTCD = E.VD_CD 
          			AND A.USE_YN = 'Y' 
          			AND A.CONTRACT_PRICE > 0 
          			--AND A.UPJANG = B.AP_UNITPRICE_UPJANG 
          			--AND B.AP_UNITPRICE_UPJANG = F.UPJANG 
         			--AND B.UPJANG = A.UPJANG_CD
         			AND A.UPJANG = X.N_CC_CD
         			AND X.UPJANG = :upjangCd
          			AND A.ITEM_CODE = A.MATERIAL_CD
          			AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN A.CONTRACT_START AND A.CONTRACT_END ) AS GUBUN 
             
		     , DECODE(A.SEMI_GOODS_YN, 'Y', ROUND(A.G_PRICE, 2), ROUND(A.CONTRACT_PRICE / A.KG_CONVERT_RATE / 1000, 2)) AS GRAM_PRICE
		     , CASE WHEN  (:stdDate BETWEEN A.SDATE AND A.EDATE) THEN
			       CASE WHEN A.SEMI_GOODS_YN = 'Y'
			            THEN CASE WHEN A.LOSS_RATE > 100
			                      --THEN ROUND((A.NEED_QTY / (A.LOSS_RATE / 100)) * A.G_PRICE, 3)  16.04.20(이다미씨 요청으로 변경) 
			                      THEN ROUND((A.NEED_QTY * (A.LOSS_RATE / 100)) * A.G_PRICE, 0)
			                      ELSE ROUND((A.NEED_QTY * (A.LOSS_RATE / 100)) * A.G_PRICE, 0)
			                  END
			            ELSE ROUND(A.NEED_QTY * (A.CONTRACT_PRICE / A.KG_CONVERT_RATE / 1000), 0)
			        END
		         ELSE 0 END AS INVEST_AMT	--투입재료비
		     , A.SDATE
		     , A.EDATE
		     , CASE WHEN  (:stdDate BETWEEN A.SDATE AND A.EDATE) THEN 
				      	A.NEED_QTY
		        ELSE 
		          0
		        END AS NEED_QTY 
		     , CASE WHEN  (:stdDate BETWEEN A.SDATE AND A.EDATE) THEN
			       CASE WHEN A.LOSS_RATE > 100
			            --THEN ROUND(A.NEED_QTY / (A.LOSS_RATE / 100), 0)
			            THEN ROUND(A.NEED_QTY * (A.LOSS_RATE / 100), 0)
			            ELSE ROUND(A.NEED_QTY * (A.LOSS_RATE / 100), 0)
			        END 
			     ELSE 
		            0 
		         END AS SUM_NEED_QTY
		     , A.ITEM_SIZE
		     , A.MAKER
		     , A.ORIGIN_TYPE
		     , A.COOK_UNIT_ITEM
		     , A.OFFER_UNIT_ITEM
		     , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'OFFER_UNIT' AND CODE = A.OFFER_UNIT_ITEM) AS OFFER_UNIT_NM
		     , A.BASIS_UNIT_CD
		     , A.PO_UNIT
		     , A.RECIPE_APPLY_UNIT
		     , A.LOSS_RATE
		     , A.YIELD
		     , A.SEMI_GOODS_YN
		     , A.PRVS_MATERIAL_CD
		     , A.SORT_ORDER
		     , A.CHG_REASON
		     , A.REMARK
		     , A.ITEM_UPJANG
		     , A.REL_PATH
		     , A.SAVE_FILE_NM
		     , A.CUSER
		     , A.CDATE
		     , A.UUSER
		     , A.UDATE
		     , (SELECT COUNT(*)
		          FROM RSS_UPJANG_RECIPE_CD_DETAIL X
		         WHERE X.UPJANG_CD = A.UPJANG_CD
		           AND X.STD_RECIPE_CD = A.STD_RECIPE_CD
		           AND X.PRVS_MATERIAL_CD = A.MATERIAL_CD) AS PRVS_CNT
		     , A.CONTRACT_START
		     , A.CONTRACT_END		     
             --투입재료량, 실제사용량, 투입재료비 현재 사용중인것만 합계내기 위한 구분값
             , CASE WHEN  (:stdDate BETWEEN A.SDATE AND A.EDATE) THEN 1 ELSE 0 END AS USE_YN
		  FROM (
		        SELECT /*+ PUSH_PRED(G) */ 
		               A.UPJANG_CD
		             , D.UPJANGNM AS UPJANG_NM
		             , A.UPJANG_TYPE
		             , A.STD_RECIPE_CD
		             , B.MU_CD
		             , B.RECIPE_NM
		             , B.RECIPE_NM_BYNM
		             , B.COOK_UNIT
		             , B.STAND
		             , B.UPJANG_MODIFY_ALLOW_YN
		             , A.MATERIAL_CD
		             , E.RECIPE_NM AS SUB_RECIPE_NM
		             --, DECODE(A.MATERIAL_CD, '0006248', 'N', A.SEMI_GOODS_YN) AS SEMI_GOODS_YN
		             , SEMI_GOODS_YN
		             , G.CONTRACT_PRICE
		             , DECODE(C.KG_CONVERT_RATE, 0, 1, C.KG_CONVERT_RATE) AS KG_CONVERT_RATE
		             , A.LOSS_RATE
		             , NVL(A.NEED_QTY, 0) AS NEED_QTY  
		             , A.SDATE
		             , A.EDATE
		             , C.ITEM_SIZE
		             , C.MAKER
		             , C.ORIGIN_TYPE
		             , E.COOK_UNIT AS COOK_UNIT_ITEM
		             , E.OFFER_UNIT AS OFFER_UNIT_ITEM
		             , A.BASIS_UNIT_CD
		             , A.PO_UNIT
		             , A.RECIPE_APPLY_UNIT
		             , A.YIELD
		             , A.PRVS_MATERIAL_CD
		             , A.SORT_ORDER
		             , A.CHG_REASON
		             , A.REMARK
		             , A.ITEM_UPJANG
		             , F.REL_PATH
		             , F.SAVE_FILE_NM
		             , A.CUSER
		             , A.CDATE
		             , A.UUSER
		             , A.UDATE
		             , (SELECT COUNT(*)
		                  FROM RSS_UPJANG_RECIPE_CD_DETAIL X
		                 WHERE X.UPJANG_CD = A.UPJANG_CD
		                   AND X.STD_RECIPE_CD = A.STD_RECIPE_CD
		                   AND X.PRVS_MATERIAL_CD = A.MATERIAL_CD) AS PRVS_CNT
		             , G.CONTRACT_START
		             , G.CONTRACT_END
		             , DECODE(A.SEMI_GOODS_YN, 'Y', (SELECT FN_RECIPE_AMT_FUN(A.UPJANG_CD, A.MATERIAL_CD, :stdDate, '1') FROM DUAL), 0) AS G_PRICE
		             --, DECODE(A.SEMI_GOODS_YN, 'Y', FN_RECIPE_AMT_FUN(A.UPJANG_CD, A.MATERIAL_CD, :stdDate, '1'), 0) AS G_PRICE
		             , C.ITEM_NAME
		          FROM RSS_UPJANG_RECIPE_CD_DETAIL A
		             , RSS_UPJANG_RECIPE_CD_MST B
		             , HLDC_PO_ITEM_MST C	
		             , SCO_UPJANG_MST_V D
		             , RSS_UPJANG_RECIPE_CD_MST E
		             , SCC_APPEND_FILE F
		             , (SELECT ITEM_CODE
		                     --, UPJANG
		                     , :upjangCd AS UPJANG
		                     , MAX(CONTRACT_START) AS CONTRACT_START
		                     , MAX(CONTRACT_END) AS CONTRACT_END
		                     , AVG(CONTRACT_PRICE) AS CONTRACT_PRICE
		                  --FROM EPROCUSR.VO_CONTRACT_F A
		                  FROM EPROCUSR.VO_CONTRACT_F_RCP A  
		                 WHERE  1 = 1
		                   AND :stdDate BETWEEN CONTRACT_START AND CONTRACT_END
		                   --AND UPJANG = :upjangCd
		                   -- 논리적 분사이후 신규조직 매핑 20200309
	                   	   AND UPJANG IN (SELECT C.N_CC_CD
                                        FROM ST_UPJANGV B
                                           , SAP_IF.SAP_IFC_CC_MAP C
                                         WHERE B.UPJANG = :upjangCd
	                                        AND B.CC_CD = C.O_CC_CD)
		                 GROUP BY UPJANG, ITEM_CODE) G
		         WHERE A.UPJANG_CD = B.UPJANG_CD(+)
		           AND A.STD_RECIPE_CD = B.STD_RECIPE_CD(+)
		           AND A.MATERIAL_CD = C.ITEM_CODE(+)
		           AND A.UPJANG_CD = D.UPJANG(+)
		           AND A.UPJANG_CD = E.UPJANG_CD(+)
		           AND A.MATERIAL_CD = E.STD_RECIPE_CD(+)
		           AND E.REF_SEQ = F.REF_SEQ(+)
		           AND E.APPEND_SEQ = F.APPEND_SEQ(+)
		           AND A.MATERIAL_CD = G.ITEM_CODE(+)
		           AND A.UPJANG_CD = G.UPJANG(+)
		           AND A.UPJANG_CD = :upjangCd
		           AND A.STD_RECIPE_CD = :stdRecipeCd
		        <#if materialCd?has_content>
		           AND A.MATERIAL_CD = :materialCd
		        </#if>
				--레시피 상세 식자재/레시피가 키가 되면서 아래 조건이 없어야함
				--2017.04.17 CH201703_00534 김호석 상세에서는 기간제한 업이 조회 가능하도록 수정
		        <#if sdate?has_content>
		           --AND A.SDATE = :sdate
		        </#if>
		        <#if stdDate?has_content>
		           --AND A.SDATE <= :stdDate
		           --AND A.EDATE >= :stdDate
		        </#if>
		       ) A
		
		 ORDER BY A.EDATE DESC, A.SDATE DESC,A.STD_RECIPE_CD ASC, A.SORT_ORDER ASC
		]]>
	</statement>

	<!-- 업장레시피 상세(을)를 등록한다. -->
	<statement name="insert" type="insert">
		/*+ com.hwfs.rc.rrm.dao.RecipeDetailedMgntDAO.insert */
		<![CDATA[
		INSERT INTO RSS_UPJANG_RECIPE_CD_DETAIL
		(
			 UPJANG_CD,
			 STD_RECIPE_CD,
			 MATERIAL_CD,
			 SDATE,
			 UPJANG_TYPE,
			 EDATE,
			 NEED_QTY,
			 CST_AMT,
			 BASIS_UNIT_CD,
			 PO_UNIT,
			 RECIPE_APPLY_UNIT,
			 LOSS_RATE,
			 YIELD,
			 SEMI_GOODS_YN,
			 PRVS_MATERIAL_CD,
			 SORT_ORDER,
			 CHG_REASON,
			 REMARK,
			 ITEM_UPJANG,
			 CUSER,
			 CDATE,
			 UUSER,
			 UDATE
		) VALUES (
			 :upjangCd,
			 :stdRecipeCd,
			 :materialCd,
			 :sdate,
			 :upjangType,
			 <#if edate?exists> :edate, <#else> null, </#if>
			 <#if needQty?exists> :needQty, <#else> null, </#if>
			 <#if cstAmt?exists> :cstAmt, <#else> null, </#if>
			 <#if basisUnitCd?exists> :basisUnitCd, <#else> null, </#if>
			 <#if poUnit?exists> :poUnit, <#else> null, </#if>
			 <#if recipeApplyUnit?exists> :recipeApplyUnit, <#else> null, </#if>
			 <#if lossRate?exists> :lossRate, <#else> null, </#if>
			 <#if yield?exists> :yield, <#else> null, </#if>
			 <#if semiGoodsYn?exists> :semiGoodsYn, <#else> null, </#if>
			 <#if prvsMaterialCd?exists> :prvsMaterialCd, <#else> null, </#if>
			 <#if sortOrder?exists> :sortOrder, <#else> null, </#if>
			 <#if chgReason?exists> :chgReason, <#else> null, </#if>
			 <#if remark?exists> :remark, <#else> null, </#if>
			 <#if itemUpjang?exists> :itemUpjang, <#else> null, </#if>
			 :loginSabun,
			 SYSDATE,
			 :loginSabun,
			 SYSDATE
		)
		]]>
	</statement>
	
	<!-- 업장레시피 상세(을)를 수정한다. -->
	<statement name="update" type="update">
		/*+ com.hwfs.rc.rrm.dao.RecipeDetailedMgntDAO.update */
		<![CDATA[
		UPDATE RSS_UPJANG_RECIPE_CD_DETAIL SET
			   <#if edate?exists> EDATE = :edate, </#if>
			   <#if needQty?exists> NEED_QTY = :needQty, </#if>
			   <#if cstAmt?exists> CST_AMT = :cstAmt, </#if>
			   <#if basisUnitCd?exists> BASIS_UNIT_CD = :basisUnitCd, </#if>
			   <#if poUnit?exists> PO_UNIT = :poUnit, </#if>
			   <#if recipeApplyUnit?exists> RECIPE_APPLY_UNIT = :recipeApplyUnit, </#if>
			   <#if lossRate?exists> LOSS_RATE = :lossRate, </#if>
			   <#if yield?exists> YIELD = :yield, </#if>
			   <#if semiGoodsYn?exists> SEMI_GOODS_YN = :semiGoodsYn, </#if>
			   <#if sortOrder?exists> SORT_ORDER = :sortOrder, </#if>
			   <#if chgReason?exists> CHG_REASON = :chgReason, </#if>
			   <#if remark?exists> REMARK = :remark, </#if>
			   <#if itemUpjang?exists> ITEM_UPJANG = :itemUpjang, </#if>
		       UUSER = :loginSabun,
		       UDATE = SYSDATE
		WHERE  UPJANG_CD = :upjangCd
		AND    STD_RECIPE_CD = :stdRecipeCd
		AND    MATERIAL_CD = :materialCd
		AND    SDATE = :sdate
		]]>
	</statement>

	<!-- 업장레시피 상세(을)를 삭제한다. -->
	<statement name="delete" type="delete">
		/*+ com.hwfs.rc.rrm.dao.RecipeDetailedMgntDAO.delete */
		<![CDATA[
		DELETE
		FROM   RSS_UPJANG_RECIPE_CD_DETAIL
		WHERE  UPJANG_CD = :upjangCd
		AND    STD_RECIPE_CD = :stdRecipeCd
		AND    MATERIAL_CD = :materialCd
		AND    SDATE = :sdate

		]]>
	</statement>
	
	<!-- 업장레시피 상세 중복확인을 조회한다. -->
	<statement name="selectExists" type="select">
		/*+ com.hwfs.rc.rrm.dao.RecipeDetailedMgntDAO.selectExists */
		<![CDATA[
		SELECT COUNT (*)
		FROM   RSS_UPJANG_RECIPE_CD_DETAIL
		WHERE  UPJANG_CD = :upjangCd
		AND    STD_RECIPE_CD = :stdRecipeCd
		AND    MATERIAL_CD = :materialCd
		AND    SDATE = :sdate
		]]>  
	</statement>
	
	<!-- 업장레시피 상세 종료일자를 수정한다.
		(품목이 새로 등록이 될 경우) -->
	<statement name="updateEdate" type="update">
		/*+ com.hwfs.rc.rrm.dao.RecipeDetailedMgntDAO.updateEdate */
		<![CDATA[
		UPDATE RSS_UPJANG_RECIPE_CD_DETAIL
		SET	   EDATE = TO_CHAR(TO_DATE(:sdate, 'YYYYMMDD')-1, 'YYYYMMDD')
		WHERE  UPJANG_CD = :upjangCd
		AND    STD_RECIPE_CD = :stdRecipeCd
		AND    MATERIAL_CD = :materialCd
		AND    SDATE = :orgSdate
		]]>
	</statement>
	
	<!-- 업장레시피 상세 종료일자를 수정한다.
		(이전 식자재코드가 있는 식자재의 시작일자를 변경했을 경우 ) -->
	<statement name="updateEdatePrvsMaterial" type="update">
		/*+ com.hwfs.rc.rrm.dao.RecipeDetailedMgntDAO.updateEdatePrvsMaterial */
		<![CDATA[
		UPDATE RSS_UPJANG_RECIPE_CD_DETAIL
		SET	   EDATE = TO_CHAR(TO_DATE(:sdate, 'YYYYMMDD')-1, 'YYYYMMDD')
		WHERE  UPJANG_CD = :upjangCd
		AND    STD_RECIPE_CD = :stdRecipeCd
		AND    MATERIAL_CD = :prvsMaterialCd
		--AND	   PRVS_MATERIAL_CD = :prvsMaterialCd
		]]>
	</statement>
	
	<!-- 업장레시피 상세 시작일자를 수정한다.(식자재코드를 제외한 그 외 컬럼 포함) -->
	<statement name="updateSdate" type="update">
		/*+ com.hwfs.rc.rrm.dao.RecipeDetailedMgntDAO.updateSdate */
		<![CDATA[
		UPDATE RSS_UPJANG_RECIPE_CD_DETAIL SET
			   <#if sdate?exists> SDATE = :sdate, </#if>
			   <#if edate?exists> EDATE = :edate, </#if>
			   <#if needQty?exists> NEED_QTY = :needQty, </#if>
			   <#if cstAmt?exists> CST_AMT = :cstAmt, </#if>
			   <#if basisUnitCd?exists> BASIS_UNIT_CD = :basisUnitCd, </#if>
			   <#if poUnit?exists> PO_UNIT = :poUnit, </#if>
			   <#if recipeApplyUnit?exists> RECIPE_APPLY_UNIT = :recipeApplyUnit, </#if>
			   <#if lossRate?exists> LOSS_RATE = :lossRate, </#if>
			   <#if yield?exists> YIELD = :yield, </#if>
			   <#if semiGoodsYn?exists> SEMI_GOODS_YN = :semiGoodsYn, </#if>
			   <#if sortOrder?exists> SORT_ORDER = :sortOrder, </#if>
			   <#if chgReason?exists> CHG_REASON = :chgReason, </#if>
			   <#if remark?exists> REMARK = :remark, </#if>
			   <#if itemUpjang?exists> ITEM_UPJANG = :itemUpjang, </#if>
		       UUSER = :loginSabun,
		       UDATE = SYSDATE
		WHERE  UPJANG_CD = :upjangCd
		AND    STD_RECIPE_CD = :stdRecipeCd
		AND    MATERIAL_CD = :materialCd
		AND    SDATE = :orgSdate	--시작일자를 수정하기 때문에 기존 등록되어 있는 시작일의 데이터를 수정
		]]>
	</statement>
	
	<!-- 업장레시피 상세 식자재를 수정한다.(그 외 컬럼 포함) -->
	<statement name="updateMaterialCd" type="update">
		/*+ com.hwfs.rc.rrm.dao.RecipeDetailedMgntDAO.updateSdate */
		<![CDATA[
		UPDATE RSS_UPJANG_RECIPE_CD_DETAIL SET
			   MATERIAL_CD = :materialCd,
			   <#if sdate?exists> SDATE = :sdate, </#if>
			   <#if edate?exists> EDATE = :edate, </#if>
			   <#if needQty?exists> NEED_QTY = :needQty, </#if>
			   <#if cstAmt?exists> CST_AMT = :cstAmt, </#if>
			   <#if basisUnitCd?exists> BASIS_UNIT_CD = :basisUnitCd, </#if>
			   <#if poUnit?exists> PO_UNIT = :poUnit, </#if>
			   <#if recipeApplyUnit?exists> RECIPE_APPLY_UNIT = :recipeApplyUnit, </#if>
			   <#if lossRate?exists> LOSS_RATE = :lossRate, </#if>
			   <#if yield?exists> YIELD = :yield, </#if>
			   <#if semiGoodsYn?exists> SEMI_GOODS_YN = :semiGoodsYn, </#if>
			   <#if sortOrder?exists> SORT_ORDER = :sortOrder, </#if>
			   <#if chgReason?exists> CHG_REASON = :chgReason, </#if>
			   <#if remark?exists> REMARK = :remark, </#if>
			   <#if itemUpjang?exists> ITEM_UPJANG = :itemUpjang, </#if>
		       UUSER = :loginSabun,
		       UDATE = SYSDATE
		WHERE  UPJANG_CD = :upjangCd
		AND    STD_RECIPE_CD = :stdRecipeCd
		AND    MATERIAL_CD = :orgMaterialCd		--식자재를 변경하기 때문에 기존 등록되어 있는 식자재코드의 데이터를 수정
		AND    SDATE = :sdate
		]]>
	</statement>
	
	<!-- 표준레시피 수정시 업장 레시피를 일괄 수정한다. -->
	<statement name="selectRsr" type="update">
		/*+ com.hwfs.rc.rrm.dao.StandardRecipeMasterMgntDAO.selectRsr */
		<![CDATA[
		SELECT STD_RECIPE_CD,RECIPE_NM FROM RSS_UPJANG_RECIPE_CD_MST
		WHERE SCLASS_CD = 'RSR'
		<#if upjangCd?has_content>
		AND  UPJANG_CD = :upjangCd
		</#if>
		<#if upjangType?has_content>
		AND	   UPJANG_TYPE = :upjangType
		</#if>
		AND USE_YN = 'Y'
		]]>
	</statement>
	
	<!-- 업장레시피 코드에 반찬세트를 업데이트한다. -->
	<statement name="updateMst" type="update">
	/*+ com.hwfs.rc.rrm.dao.RecipeDetailedMgntDAO.updateMst */
		<![CDATA[
		UPDATE RSS_UPJANG_RECIPE_CD_MST
			SET SET_RECIPE_CD = :setRecipeCd
			,UUSER = :loginSabun
			,UDATE = SYSDATE
			WHERE UPJANG_CD = :upjangCd
			  AND STD_RECIPE_CD = :stdRecipeCd
		]]>
	</statement>
	
	<!-- 업장레시피 상세에 변경된 반찬세트를 삭제한다. -->
	<statement name="setRecipeDelMst" type="delete">
	/*+ com.hwfs.rc.rrm.dao.RecipeDetailedMgntDAO.setRecipeDelMst */
		<![CDATA[
			DELETE RSS_UPJANG_RECIPE_CD_DETAIL
			WHERE UPJANG_CD  = :upjangCd
	        AND STD_RECIPE_CD = :stdRecipeCd
	        AND SET_RECIPE_CD = :oldSetRecipeCd
		]]>
	</statement>
	
	<!-- 업장레시피 상세에 변경된 반찬세트를 삭제한다. -->
	<statement name="setRecipeUpdateMst" type="insert">
	/*+ com.hwfs.rc.rrm.dao.RecipeDetailedMgntDAO.setRecipeUpdateMst */
		<![CDATA[	
			INSERT 
			  INTO RSS_UPJANG_RECIPE_CD_DETAIL
			       ( 
			           UPJANG_CD
			         ,STD_RECIPE_CD
			         ,MATERIAL_CD
			         ,SDATE
			         ,NEED_QTY
			         ,CST_AMT
			         ,BASIS_UNIT_CD
			         ,PO_UNIT
			         ,RECIPE_APPLY_UNIT
			         ,LOSS_RATE
			         ,YIELD
			         ,SEMI_GOODS_YN
			         ,PRVS_MATERIAL_CD
			         ,SORT_ORDER
			         ,CHG_REASON
			         ,REMARK
			         ,EDATE
			         ,UPJANG_TYPE
			         ,ITEM_UPJANG
			         ,CUSER
			         ,CDATE
			         ,UUSER
			         ,UDATE
			         ,SET_RECIPE_CD 
			       ) 
			     SELECT A.UPJANG_CD,
			       :stdRecipeCd STD_RECIPE_CD,
			       A.MATERIAL_CD,
			       A.SDATE,
			       A.NEED_QTY,
			       A.CST_AMT,
			       A.BASIS_UNIT_CD,
			       A.PO_UNIT,
			       A.RECIPE_APPLY_UNIT,
			       A.LOSS_RATE,
			       A.YIELD,
			       A.SEMI_GOODS_YN,
			       A.PRVS_MATERIAL_CD,
			       NULL SORT_ORDER,
			       A.CHG_REASON,
			       A.REMARK,
			       A.EDATE,
			       A.UPJANG_TYPE,
			       A.ITEM_UPJANG,
			       :loginSabun,
			       SYSDATE,
			       :loginSabun,
			       SYSDATE,
			       :setRecipeCd SET_RECIPE_CD
			  FROM RSS_UPJANG_RECIPE_CD_DETAIL A
			WHERE A.UPJANG_CD = :upjangCd
			AND A.STD_RECIPE_CD = :setRecipeCd
			]]>
	</statement>
	
</hqml>
