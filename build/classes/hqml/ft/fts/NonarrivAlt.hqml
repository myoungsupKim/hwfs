<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="ft.fts.nonarrivAltDAO">
	<desc>미착대체를 관리한다.</desc>

	<!-- PO 기본정보를 조회한다. -->
	<statement name="selectList" type="select"><![CDATA[
/* PO 기본정보를 조회 */
SELECT A.PO_ORDER_NUM,  -- 구매 주문 번호
       A.SALSPLCE_NM,   -- 매출처명
       A.SPLR_NM,       -- 매입처명
       A.LSHIP_DATE,    -- 선적일자
       A.BL_NUM,        -- B/L NO
       B.SALE_TYPE		-- 판매유형
  FROM PO_ORDER_MST A
      ,PO_PROPOSAL_MST B
 WHERE 1 = 1
 AND A.PO_PROPOSAL_NUM  = B.PO_PROPOSAL_NUM
 AND B.PO_TYPE='10'	  --수입만
   AND EXISTS (
                SELECT 1
                  FROM (SELECT X.PO_ORDER_NUM  --수수료
                          FROM PO_ORDER_MST X
                             , PO_ORDER_OTHER_AMT Y
                             , SAP_IF.SAP_IFC_SLIP_STATUS Z
                         WHERE X.PO_ORDER_NUM = Y.PO_ORDER_NUM
                         AND   Y.SLIP_NUM = Z.SLIP_NUM    --전표처리된 내역중
                         AND   Z.SLIP_STATUS  IN( 'P','V')       --전표확정
                        UNION ALL
                                                SELECT X.PO_ORDER_NUM --원물대
                          FROM PO_ORDER_MST X
                             , GDSPAYM_MST Y
                             , SAP_IF.SAP_IFC_SLIP_STATUS Z
                         WHERE X.PO_ORDER_NUM = Y.PO_ORDER_NUM
                         AND   Y.SLIP_NUM = Z.SLIP_NUM    --전표처리된 내역중
                         AND    Z.SLIP_STATUS IN( 'P','V')        --전표확정
                        ) P
                 WHERE 1 = 1
                   AND P.PO_ORDER_NUM = A.PO_ORDER_NUM
              )
<#if poOrderNum?has_content>   AND A.PO_ORDER_NUM LIKE '%' || :poOrderNum || '%' </#if>
<#if salsplceNm?has_content>   AND A.SALSPLCE_NM LIKE '%' || :salsplceNm || '%' </#if>
<#if blNum?has_content>   AND A.BL_NUM LIKE '%' || :blNum || '%'  </#if>
 ORDER BY A.PO_ORDER_NUM DESC
        ]]></statement>

	<!-- PO 상세 정보를 조회한다. -->
	<statement name="selectDetailList" type="select"><![CDATA[
            /* 원물대*/
            SELECT '0' AS CHK
                 , 'GP' AS DETAIL_GUBUN
                 , '원물대' AS DETAIL_NM
                 , X.PO_ORDER_NUM --원물대
                 , B.ENTRY_NUM
                 , A.PO_TYPE
                 , Y.SEQ AS SEQ
                 , DECODE(Z.SLIP_STATUS,'P','Y','N') AS NONARRIV_SLIP_CREATION_YN
                 , Z.SLIP_NUM AS ORG_SLIP_NUM
                 , '' TAX_BILL_NUM
                 , Y.BUY_SLIP_DATE AS SLIP_PUBLISH_DATE
                 , Y.PAY_SCHD_DATE AS PAY_SCHD_DATE
                 /*
                 ,ROUND((SELECT SUM(WONWTR_AMT_KRW) AS WONWTR_AMT_KRW
                   FROM PO_ORDER_ITEM_DETAIL T
                   WHERE X.PO_ORDER_NUM = T.PO_ORDER_NUM
                   GROUP BY PO_ORDER_NUM )) AS SIGN_AMT
                 --, ROUND(C.PAY_AMT * X.EXCHANGE_RATE)  SIGN_AMT
                 */
                 , B.DELIVER_AMT AS SIGN_AMT
                 , Y.REMARKS1
                 , X.ATTACH_DEPT
                 ,(SELECT SET1 FROM SCC_COMMON_CODE
                   WHERE  GROUP_CODE = 'ATTACH_DEPT'
                   AND CODE = X.ATTACH_DEPT ) AS ATTACH_DEPT_SAP   /*귀속부서명 SAP*/
                 , X.LC_NUM
                 , X.BL_NUM
                 , X.LSHIP_DATE
                 , X.EXCHANGE_RATE
                 , X.AMOUNT_UNIT
                 --, DECODE ( SCC_SIGN_STATUS_FUN(Y.SIGN_INSTANCE_ID2),'COMPLETE',Y.ALT_FISCAL_SLIP_NUM, '') ALT_FISCAL_SLIP_NUM
                 , B.ALT_FISCAL_SLIP_NUM
                 , G.SLIP_STATUS
                 , (SELECT CODE_NAME FROM SCC_COMMON_CODE
                    WHERE  GROUP_CODE = 'SLIP_STATUS' AND CODE =G.SLIP_STATUS) AS SLIP_STATUS_NM
                 , P.FISCAL_YEAR


                 ,CASE WHEN G.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                     NULL
                 ELSE
                     B.SIGN_INSTANCE_ID2
                 END AS SIGN_INSTANCE_ID

                 ,CASE WHEN G.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                     NULL
                 ELSE
                     NVL(SCC_SIGN_STATUS_FUN(B.SIGN_INSTANCE_ID2),'')
                 END AS SIGN_PROGRESS_STATUS

                 ,CASE WHEN G.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                     NULL
                 ELSE
                     CASE SCC_SIGN_STATUS_FUN(B.SIGN_INSTANCE_ID2)
                     WHEN 'COMPLETE' THEN
                         (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='30' )
                     WHEN 'REJECT' THEN
                         (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='40' )
                     WHEN 'CANCEL' THEN
                         (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='50' )
                     WHEN 'DRAFT' THEN
                         (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='20' )
                     ELSE
                         (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND CODE = G.SLIP_STATUS )
                     END
                 END AS SIGN_PROGRESS_STATUS_NM
                 ,Q.SLIP_EVIDENCE_DATE     --전표증빙일자
                 ,Q.SLIP_PERIOD_DATE     --전표전기일자
                 ,B.ALT_SLIP_DATE		 --전표일자
              FROM PO_PROPOSAL_MST A
                 , (SELECT
                          T.PO_ORDER_NUM
                         ,T.ENTRY_NUM
                         ,T3.ALT_SLIP_DATE,T3.SIGN_INSTANCE_ID2,T3.ALT_FISCAL_SLIP_NUM
                         ,SUM(T2.DELIVER_AMT) AS  DELIVER_AMT
                    FROM ENTRY_ITEM_DETAIL T
                        ,INVENTORY_MGMT_DELIVER T2
                        ,ENTRY_MST T3
                    WHERE T.ENTRY_NUM = T2.ENTRY_NUM
                      AND T.ENTRY_ITEM_SEQ = T2.ENTRY_ITEM_SEQ
                      AND T.ENTRY_NUM = T3.ENTRY_NUM
                    GROUP BY T.PO_ORDER_NUM,T.ENTRY_NUM,T3.ALT_SLIP_DATE,T3.SIGN_INSTANCE_ID2,T3.ALT_FISCAL_SLIP_NUM
                   ) B
                 ,PO_ORDER_PAY_COND C
                 , PO_ORDER_MST X
                 , GDSPAYM_MST Y
                 , SAP_IF.SAP_IFC_SLIP_STATUS Z
                 , SAP_IF.SAP_IFC_SLIP_STATUS P
                 , FT_SAP_INTERFACE G
                 , SAP_IF.SAP_IFC_SLIP_MST Q
             WHERE 1 = 1
               AND A.PO_PROPOSAL_NUM =X.PO_PROPOSAL_NUM
               AND X.PO_ORDER_NUM = B.PO_ORDER_NUM

               AND C.PO_ORDER_NUM = Y.PO_ORDER_NUM(+)
               AND C.PAY_COND_SEQ = Y.SEQ(+)

               AND X.PO_ORDER_NUM = :strPoOrderNum
               AND X.PO_ORDER_NUM = Y.PO_ORDER_NUM
               AND Y.SLIP_NUM = Z.SLIP_NUM    --전표처리된 내역중
               AND B.ALT_FISCAL_SLIP_NUM = P.SLIP_NUM(+)    --대체전표처리된 내역중
               AND B.ALT_FISCAL_SLIP_NUM = G.SLIP_NUM(+)
               AND Z.SLIP_NUM = Q.SLIP_NUM(+)
               --AND Z.SLIP_STATUS IN( 'P' )       --전표확정
        ]]></statement>

	<statement name="selectDetailList_back" type="select"><![CDATA[
            /* 원물대*/
            SELECT '0' AS CHK
                 , 'GP' AS DETAIL_GUBUN
                 , '원물대' AS DETAIL_NM
                 , X.PO_ORDER_NUM --원물대
                 , B.ENTRY_NUM
                 , A.PO_TYPE
                 , Y.SEQ AS SEQ
                 , DECODE(Z.SLIP_STATUS,'P','Y','N') AS NONARRIV_SLIP_CREATION_YN
                 , Z.SLIP_NUM AS ORG_SLIP_NUM
                 , '' TAX_BILL_NUM
                 , Y.BUY_SLIP_DATE AS SLIP_PUBLISH_DATE
                 , Y.PAY_SCHD_DATE AS PAY_SCHD_DATE
                 /*
                 ,ROUND((SELECT SUM(WONWTR_AMT_KRW) AS WONWTR_AMT_KRW
                   FROM PO_ORDER_ITEM_DETAIL T
                   WHERE X.PO_ORDER_NUM = T.PO_ORDER_NUM
                   GROUP BY PO_ORDER_NUM )) AS SIGN_AMT
                 --, ROUND(C.PAY_AMT * X.EXCHANGE_RATE)  SIGN_AMT
                 */
                 , B.DELIVER_AMT AS SIGN_AMT
                 , Y.REMARKS1
                 , X.ATTACH_DEPT
                 ,(SELECT SET1 FROM SCC_COMMON_CODE
                   WHERE  GROUP_CODE = 'ATTACH_DEPT'
                   AND CODE = X.ATTACH_DEPT ) AS ATTACH_DEPT_SAP   /*귀속부서명 SAP*/
                 , X.LC_NUM
                 , X.BL_NUM
                 , X.LSHIP_DATE
                 , X.EXCHANGE_RATE
                 , X.AMOUNT_UNIT
                 --, DECODE ( SCC_SIGN_STATUS_FUN(Y.SIGN_INSTANCE_ID2),'COMPLETE',Y.ALT_FISCAL_SLIP_NUM, '') ALT_FISCAL_SLIP_NUM
                 , Y.ALT_FISCAL_SLIP_NUM
                 , G.SLIP_STATUS
                 , (SELECT CODE_NAME FROM SCC_COMMON_CODE
                    WHERE  GROUP_CODE = 'SLIP_STATUS' AND CODE =G.SLIP_STATUS) AS SLIP_STATUS_NM
                 , P.FISCAL_YEAR


                 ,CASE WHEN G.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                     NULL
                 ELSE
                     Y.SIGN_INSTANCE_ID2
                 END AS SIGN_INSTANCE_ID

                 ,CASE WHEN G.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                     NULL
                 ELSE
                     NVL(SCC_SIGN_STATUS_FUN(Y.SIGN_INSTANCE_ID2),'')
                 END AS SIGN_PROGRESS_STATUS

                 ,CASE WHEN G.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                     NULL
                 ELSE
                     CASE SCC_SIGN_STATUS_FUN(Y.SIGN_INSTANCE_ID2)
                     WHEN 'COMPLETE' THEN
                         (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='30' )
                     WHEN 'REJECT' THEN
                         (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='40' )
                     WHEN 'CANCEL' THEN
                         (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='50' )
                     WHEN 'DRAFT' THEN
                         (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='20' )
                     ELSE
                         (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND CODE = G.SLIP_STATUS )
                     END
                 END AS SIGN_PROGRESS_STATUS_NM
                 ,Q.SLIP_EVIDENCE_DATE     --전표증빙일자
                 ,Q.SLIP_PERIOD_DATE     --전표전기일자
                 ,Y.ALT_SLIP_DATE		 --전표일자
              FROM PO_PROPOSAL_MST A
                 , (SELECT
                          T.PO_ORDER_NUM
                         ,T.ENTRY_NUM
                         ,SUM(T2.DELIVER_AMT) AS  DELIVER_AMT
                    FROM ENTRY_ITEM_DETAIL T
                        ,INVENTORY_MGMT_DELIVER T2
                    WHERE T.ENTRY_NUM = T2.ENTRY_NUM
                      AND T.ENTRY_ITEM_SEQ = T2.ENTRY_ITEM_SEQ
                    GROUP BY T.PO_ORDER_NUM,T.ENTRY_NUM
                   ) B
                 ,PO_ORDER_PAY_COND C
                 , PO_ORDER_MST X
                 , GDSPAYM_MST Y
                 , SAP_IF.SAP_IFC_SLIP_STATUS Z
                 , SAP_IF.SAP_IFC_SLIP_STATUS P
                 , FT_SAP_INTERFACE G
                 , SAP_IF.SAP_IFC_SLIP_MST Q
             WHERE 1 = 1
               AND A.PO_PROPOSAL_NUM =X.PO_PROPOSAL_NUM
               AND X.PO_ORDER_NUM = B.PO_ORDER_NUM

               AND C.PO_ORDER_NUM = Y.PO_ORDER_NUM(+)
               AND C.PAY_COND_SEQ = Y.SEQ(+)

               AND X.PO_ORDER_NUM = :strPoOrderNum
               AND X.PO_ORDER_NUM = Y.PO_ORDER_NUM
               AND Y.SLIP_NUM = Z.SLIP_NUM    --전표처리된 내역중
               AND Y.ALT_FISCAL_SLIP_NUM = P.SLIP_NUM(+)    --대체전표처리된 내역중
               AND Y.ALT_FISCAL_SLIP_NUM = G.SLIP_NUM(+)
               AND Z.SLIP_NUM = Q.SLIP_NUM(+)
               --AND Z.SLIP_STATUS IN( 'P' )       --전표확정
        ]]></statement>

	<!-- PO 상세 정보를 조회한다. -->
	<statement name="selectDetailList2" type="select"><![CDATA[
        /* 부대비 조회 */
                  SELECT '0' AS CHK
                     , 'PO' AS DETAIL_GUBUN
                     , '부대비' AS DETAIL_NM
                     , X.PO_ORDER_NUM  --수수료
                     , Y.DELIVER_NUM
                     , Y.ENTRY_NUM

                     , H.CODE_NAME AS COMM_CLASS_NM
                     , Y.OTHER_AMT_SEQ AS SEQ
                     , DECODE(Z.SLIP_STATUS,'P','Y','N') AS NONARRIV_SLIP_CREATION_YN
                     , Y.ORG_SLIP_NUM
                     , Y.OTHER_AMT_SEQ

                    ,  Y.COMM_CLASS
                     , Y.TAX_BILL_NUM
                     , Y.SLIP_PUBLISH_DATE
                     , Y.PAY_SCHD_DATE
                     , Y.BILL_PUBLISHDD
                     , Y.COMM_AMT
                     , Y.DIV_AMT
                     , Y.DIV_SEQ

                     , X.PO_ORDER_NUM ||' '|| H.CODE_NAME ||' '|| Y.REMARKS  AS REMARKS

                     , X.ATTACH_DEPT
                     ,(SELECT SET1 FROM SCC_COMMON_CODE
                       WHERE  GROUP_CODE = 'ATTACH_DEPT'
                       AND CODE = X.ATTACH_DEPT ) AS ATTACH_DEPT_SAP   /*귀속부서명 SAP*/
                     , X.LC_NUM
                     , X.BL_NUM
                     , X.LSHIP_DATE
                     , X.EXCHANGE_RATE
                     , X.AMOUNT_UNIT
                     , Y.ALT_FISCAL_SLIP_NUM
                     , R.INCOME_LIC_NUM
                     , G.FISCAL_YEAR

                     , G.SLIP_STATUS
                     , (SELECT CODE_NAME FROM SCC_COMMON_CODE
                        WHERE  GROUP_CODE = 'SLIP_STATUS' AND CODE =G.SLIP_STATUS) AS SLIP_STATUS_NM


                     ,CASE WHEN G.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                         NULL
                     ELSE
                         Y.SIGN_INSTANCE_ID
                     END AS SIGN_INSTANCE_ID

                     ,CASE WHEN G.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                         NULL
                     ELSE
                         NVL(SCC_SIGN_STATUS_FUN(Y.SIGN_INSTANCE_ID),'')
                     END AS SIGN_PROGRESS_STATUS

                     ,CASE WHEN G.SLIP_STATUS IN ('R','C') THEN                   --역분개, 임시전표취소
                         NULL
                     ELSE
                         CASE SCC_SIGN_STATUS_FUN(Y.SIGN_INSTANCE_ID)
                         WHEN 'COMPLETE' THEN
                             (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='30' )
                         WHEN 'REJECT' THEN
                             (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='40' )
                         WHEN 'CANCEL' THEN
                             (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='50' )
                         WHEN 'DRAFT' THEN
                             (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND  CODE='20' )
                         ELSE
                             (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_PROPOSAL_STATUS' AND CODE = G.SLIP_STATUS )
                         END
                     END AS SIGN_PROGRESS_STATUS_NM
                     ,Q.SLIP_EVIDENCE_DATE     --전표증빙일자
                     ,Q.SLIP_PERIOD_DATE     --전표전기일자
                     ,Y.ALT_SLIP_DATE		 --전표일자
                  FROM PO_ORDER_MST X
                     --, PO_ORDER_OTHER_AMT Y
                     ,(
                           SELECT
                               A.PO_ORDER_NUM,A.ENTRY_NUM,C.REMARKS,A.ENTRY_ITEM_SEQ,C.COMM_AMT,C.PAY_SCHD_DATE,C.SLIP_PUBLISH_DATE,C.TAX_BILL_NUM,C.BILL_PUBLISHDD
                               , C.NONARRIV_SLIP_CREATION_YN
                               , C.SLIP_NUM AS ORG_SLIP_NUM
                               ,B.*
                           FROM INVENTORY_MGMT_DELIVER A
                               ,DELIVERITEM_OTHER_AMT_DIV B
                               ,PO_ORDER_OTHER_AMT  C
                           WHERE A.DELIVER_NUM = B.DELIVER_NUM
                           AND A.PO_ORDER_NUM = C.PO_ORDER_NUM
                           AND B.OTHER_AMT_SEQ =C.OTHER_AMT_SEQ
                           AND A.PO_ORDER_NUM = :strPoOrderNum
                           --AND A.DELIVER_TYPE='10'	--발주입고
                      ) Y
                     , ENTRY_MST R
                     , ENTRY_ITEM_DETAIL Q
                     , FT_SAP_INTERFACE G
                     ,(
                        SELECT *
                        FROM   SCC_COMMON_CODE T
                        WHERE  T.GROUP_CODE = 'COMM_CLASS'
                        AND    T.USE_YN = 'Y'
                      ) H
                      , FT_SAP_INTERFACE Z
                      , SAP_IF.SAP_IFC_SLIP_MST Q
                 WHERE 1 = 1
                   AND X.PO_ORDER_NUM = :strPoOrderNum
                   AND X.PO_ORDER_NUM = Y.PO_ORDER_NUM
                   AND R.ENTRY_NUM = Q.ENTRY_NUM
                   AND Q.ENTRY_NUM =Y.ENTRY_NUM
                   AND Q.ENTRY_ITEM_SEQ = Y.ENTRY_ITEM_SEQ
                   AND Y.ALT_FISCAL_SLIP_NUM = G.SLIP_NUM(+)
                   AND Y.ORG_SLIP_NUM = Z.SLIP_NUM(+)
                   AND Y.COMM_CLASS = H.CODE(+)
                   AND Y.ORG_SLIP_NUM = Q.SLIP_NUM(+)
                   --AND Z.SLIP_STATUS = 'P'	--전표확정 건만
                   --AND Y.DIV_AMT >0		--창고이동 감안
                   ORDER BY Y.DELIVER_NUM DESC

        ]]></statement>

	<!-- 구매주문 부대비를 수정한다. -->
	<statement name="updatePoList" type="update">
		/*+ com.hwfs.ft.fts.dao.NonarrivAltDAO.updatePoList */
		<![CDATA[
/* 시험항목 저장 */
UPDATE PO_ORDER_OTHER_AMT SET
       NONARRIV_SLIP_CREATION_YN = :nonarrivSlipCreationYn,
       ALT_FISCAL_SLIP_NUM = :slipNum,
       UUSER = :loginSabun,
       UDATE = SYSDATE
 WHERE PO_ORDER_NUM = :poOrderNum
   AND OTHER_AMT_SEQ = :seq
        ]]>
	</statement>

	<!-- 구매주문 부대비를 수정한다. -->
	<statement name="updateOtherList" type="update">
		/*+ com.hwfs.ft.fts.dao.NonarrivAltDAO.updateOtherList */
		<![CDATA[
/* 시험항목 저장 */
UPDATE DELIVERITEM_OTHER_AMT_DIV SET
       NONARRIV_ALT_YN = :nonarrivSlipCreationYn,
       ALT_FISCAL_SLIP_NUM = :slipNum,
       ALT_SLIP_DATE    = :altSlipDate,
       UUSER = :loginSabun,
       UDATE = SYSDATE
 WHERE DELIVER_NUM = :deliverNum
   AND DIV_SEQ = :divSeq
        ]]>
	</statement>

	<!-- 구매주문 부대비를 수정한다. -->
	<statement name="saveNonarrivAltDraft2" type="update">
		/*+ com.hwfs.ft.fts.dao.NonarrivAltDAO.saveNonarrivAltDraft2 */
		<![CDATA[
/* 시험항목 저장 */
UPDATE DELIVERITEM_OTHER_AMT_DIV SET
       SIGN_INSTANCE_ID = :signInstanceId,
       UUSER = :loginSabun,
       UDATE = SYSDATE
 WHERE DELIVER_NUM = :deliverNum
   AND DIV_SEQ = :divSeq
        ]]>
	</statement>

	<!-- 물품대금을 수정한다. -->
	<statement name="updateGpList" type="update">
		/*+ com.hwfs.ft.fts.dao.NonarrivAltDAO.updateGpList */
		<![CDATA[
/* 시험항목 저장 */
UPDATE GDSPAYM_MST SET
       --NONARRIV_SLIP_CREATION_YN = :nonarrivSlipCreationYn,
       ALT_FISCAL_SLIP_NUM    = :slipNum,
       ALT_SLIP_DATE    = :altSlipDate,
       UUSER = :loginSabun,
       UDATE = SYSDATE
 WHERE PO_ORDER_NUM = :poOrderNum
   AND SEQ = :seq
        ]]>
	</statement>

	<!-- 수입면허&통관을 수정한다. -->
	<statement name="updateEntryList" type="update">
		/*+ com.hwfs.ft.fts.dao.NonarrivAltDAO.updateGpList */
		<![CDATA[
/* 미착대체 전표 저장 */
UPDATE ENTRY_MST SET
       NONARRIV_SLIP_CREATION_YN = :nonarrivSlipCreationYn,
       ALT_FISCAL_SLIP_NUM    = :slipNum,
       ALT_SLIP_DATE    = :altSlipDate,
       UUSER = :loginSabun,
       UDATE = SYSDATE
 WHERE ENTRY_NUM = :entryNum
        ]]>
	</statement>

	<!-- 물품대금을 수정한다. -->
	<statement name="saveNonarrivAltDraft" type="update">
		/*+ com.hwfs.ft.fts.dao.NonarrivAltDAO.saveNonarrivAltDraft */
		<![CDATA[
/* 시험항목 저장 */
UPDATE GDSPAYM_MST SET
       SIGN_INSTANCE_ID2          = :signInstanceId,
       UUSER = :loginSabun,
       UDATE = SYSDATE
 WHERE PO_ORDER_NUM = :poOrderNum
   AND SEQ = :seq
        ]]>
	</statement>

	<!-- 수입면허&통관을 전자결재ID를 수정한다. -->
	<statement name="saveEntryDraft" type="update">
		/*+ com.hwfs.ft.fts.dao.NonarrivAltDAO.updateGpList */
		<![CDATA[
/* 미착대체 전자결재 번호 저장 */
UPDATE ENTRY_MST SET
       SIGN_INSTANCE_ID2 = :signInstanceId,
       UUSER = :loginSabun,
       UDATE = SYSDATE
 WHERE ENTRY_NUM = :entryNum
        ]]>
	</statement>

</hqml>
