<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="ft.fdm.entryItemDetailDAO">
    <desc>관세비용 및 입고예정 품목 상세 정보를 등록 관리 HQML Query</desc>

    <!-- 관세비용 및 입고예정 품목 상세 정보를 등록 관리 목록을 조회한다. -->
    <statement name="selectList" type="select">
        /*+ com.hwfs.ft.fdm.dao.EntryItemDetailDAO.selectList */
        <![CDATA[
        SELECT COLUMN_NAME1,
               COLUMN_NAME2
        FROM   TABLE_NAME
        WHERE  1=1
        <#if columnName?has_content>
        AND    COLUMN_NAME = :columnName
        </#if>
        ORDER BY COLUMN_NAME ASC
        ]]>
    </statement>

    <!-- 관세비용 및 입고예정 품목 상세 정보를 등록 관리(을)를 등록한다. -->
    <statement name="insert" type="insert">
        /*+ com.hwfs.ft.fdm.dao.EntryItemDetailDAO.insert */
        <![CDATA[
        INSERT INTO ENTRY_ITEM_DETAIL
        (
         ENTRY_NUM,
         ENTRY_ITEM_SEQ,
         PO_ORDER_NUM,
         ITEM_SEQ,
         ITEM_CD,
         ITEM_NM,
         UNIT,
         UPRICE,
         ENTRY_REQ_QUANTITY,
         ENTRY_REQ_WGT,
         ENTRY_REQ_WONWTR_AMT,
         TAX_PRICE,
         GVRNTAX_RATE,
         WH_CD,
         ORIGIN,
         CHARG_COST,
         IOUT_COST,
         INCOME_DTR_DSCT_NUM,
         EST_NO,
         CUSER,
         CDATE,
         UUSER,
         UDATE
        ) VALUES (
         :entryNum,
         (SELECT NVL(MAX(ENTRY_ITEM_SEQ),0) +1 FROM ENTRY_ITEM_DETAIL WHERE ENTRY_NUM=:entryNum),   /* 품의 순번     */
         :poOrderNum,
         :itemSeq,
        <#if itemCd?exists> :itemCd, <#else> null, </#if>
        <#if itemNm?exists> :itemNm, <#else> null, </#if>
        <#if unit?exists> :unit, <#else> null, </#if>
        <#if uprice?exists> :uprice, <#else> null, </#if>
        <#if entryReqQuantity?exists> :entryReqQuantity, <#else> null, </#if>
        <#if entryReqWgt?exists> :entryReqWgt, <#else> null, </#if>
        <#if entryReqWonwtrAmt?exists> :entryReqWonwtrAmt, <#else> null, </#if>
        <#if taxPrice?exists> :taxPrice, <#else> null, </#if>
        <#if gvrntaxRate?exists> :gvrntaxRate, <#else> null, </#if>
        <#if whCd?exists> :whCd, <#else> null, </#if>
        <#if origin?exists> :origin, <#else> null, </#if>
        <#if chargCost?exists> :chargCost, <#else> null, </#if>
        <#if ioutCost?exists> :ioutCost, <#else> null, </#if>
        <#if incomeDtrDsctNum?exists> :incomeDtrDsctNum, <#else> null, </#if>
        <#if estNo?exists> :estNo, <#else> null, </#if>
         :loginSabun,
         SYSDATE,
         :loginSabun,
         SYSDATE
        )

        ]]>
    </statement>

    <!-- 관세비용 및 입고예정 품목 상세 정보를 등록 관리(을)를 수정한다. -->
    <statement name="update" type="update">
        /*+ com.hwfs.ft.fdm.dao.EntryItemDetailDAO.update */
        <![CDATA[
        UPDATE ENTRY_ITEM_DETAIL SET
               PO_ORDER_NUM = :poOrderNum,
               ITEM_SEQ = :itemSeq,
        <#if itemCd?exists> ITEM_CD = :itemCd, </#if>
        <#if itemNm?exists> ITEM_NM = :itemNm, </#if>
        <#if unit?exists> UNIT = :unit, </#if>
        <#if uprice?exists> UPRICE = :uprice, </#if>
        <#if entryReqQuantity?exists> ENTRY_REQ_QUANTITY = :entryReqQuantity, </#if>
        <#if entryReqWgt?exists> ENTRY_REQ_WGT = :entryReqWgt, </#if>
        <#if entryReqWonwtrAmt?exists> ENTRY_REQ_WONWTR_AMT = :entryReqWonwtrAmt, </#if>
        <#if taxPrice?exists> TAX_PRICE = :taxPrice, </#if>
        <#if gvrntaxRate?exists> GVRNTAX_RATE = :gvrntaxRate, </#if>
        <#if whCd?exists> WH_CD = :whCd, </#if>
        <#if origin?exists> ORIGIN = :origin, </#if>
        <#if chargCost?exists> CHARG_COST = :chargCost, </#if>
        <#if ioutCost?exists> IOUT_COST = :ioutCost, </#if>
        <#if incomeDtrDsctNum?exists> INCOME_DTR_DSCT_NUM = :incomeDtrDsctNum, </#if>
        <#if estNo?exists> EST_NO = :estNo, </#if>
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  ENTRY_NUM = :entryNum
        AND    ENTRY_ITEM_SEQ = :entryItemSeq

        ]]>
    </statement>

    <!-- 관세비용 및 입고예정 품목 상세 정보를 등록 관리(을)를 삭제한다. -->
    <statement name="delete" type="delete">
        /*+ com.hwfs.ft.fdm.dao.EntryItemDetailDAO.delete */
        <![CDATA[
        DELETE
        FROM   ENTRY_ITEM_DETAIL
        WHERE  ENTRY_NUM = :entryNum
        AND    ENTRY_ITEM_SEQ = :entryItemSeq

        ]]>
    </statement>

    <!-- 관세비용 및 입고예정 품목 상세 정보를 등록 관리(을)를 삭제한다. -->
    <statement name="deleteAll" type="delete">
        /*+ com.hwfs.ft.fdm.dao.EntryItemDetailDAO.delete */
        <![CDATA[
        DELETE
        FROM   ENTRY_ITEM_DETAIL
        WHERE  ENTRY_NUM = :entryNum

        ]]>
    </statement>

    <!-- 통관 품목 상세를 조회한다. -->
    <statement name="selectEntryItemDetail" type="select">
        /*+ com.hwfs.ft.fdm.dao.EntryItemDetailDAO.selectEntryItemDetail */
        <![CDATA[
         SELECT
               C.ENTRY_ITEM_SEQ RNUM ,
               C.ENTRY_NUM,
               C.ENTRY_ITEM_SEQ,
               C.PO_ORDER_NUM,
               C.ITEM_SEQ,
               C.ITEM_CD,
               --C.ITEM_NM,
               F.ITEM_NAME||' '||F.ITEM_SIZE AS ITEM_NM,
               C.WH_CD,
               (SELECT MAX(VD_NM_LOC) FROM EPROCUSR.ESMVDFW WHERE CUS_VD_CLS IN ('10', '50') AND C.WH_CD=VD_CD  AND VD_STS = 'C') WH_NM,  
               C.CHARG_COST,
               C.IOUT_COST,
               B.HS_CD,
               B.QUANTITY PO_QUANTITY,
               B.WGT PO_WGT,
               SUM(ENTRY_REQ_QUANTITY) OVER(PARTITION BY C.ITEM_CD, C.ITEM_SEQ
                                           ORDER BY B.PO_ORDER_NUM, B.ITEM_CD, B.ITEM_SEQ, C.ENTRY_NUM, C.ENTRY_ITEM_SEQ
                                           ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) ENTRY_ACCUM_QUANTITY,
               SUM(ENTRY_REQ_WGT) OVER(PARTITION BY C.ITEM_CD, C.ITEM_SEQ
                                           ORDER BY B.PO_ORDER_NUM, B.ITEM_CD, B.ITEM_SEQ, C.ENTRY_NUM, C.ENTRY_ITEM_SEQ
                                           ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) ENTRY_ACCUM_WGT,
               C.ENTRY_REQ_QUANTITY,
               (NVL(B.QUANTITY,0) - NVL(B.ENTRY_END_QUANTITY,0)) ENTRY_QUANTITY,
               (NVL(B.WGT,0) - NVL(B.ENTRY_END_WGT,0)) ENTRY_WGT,
               B.ENTRY_END_QUANTITY,
               B.ENTRY_END_WGT,
               C.UNIT,
               C.UPRICE,
               C.ENTRY_REQ_WONWTR_AMT,
               C.ENTRY_REQ_WGT,
               (SELECT CL_AMOUNT_UNIT FROM ENTRY_MST WHERE ENTRY_NUM = C.ENTRY_NUM) CL_AMOUNT_UNIT,
               B.ITEM_SEQ PO_ITEM_SEQ,
               C.TAX_PRICE,
               C.GVRNTAX_RATE,
               E.DELIVER_NUM,
               F.KG_CONVERT_RATE
          FROM ENTRY_ITEM_DETAIL C
              ,INVENTORY_MGMT_DELIVER E
              ,PO_ORDER_ITEM_DETAIL B
              ,HLDC_PO_ITEM_MST F
          WHERE  1=1
          AND    C.ENTRY_NUM = E.ENTRY_NUM(+)
          AND    C.ENTRY_ITEM_SEQ = E.ENTRY_ITEM_SEQ(+)
          AND    C.ITEM_CD = E.ITEM_CD(+)
          AND    C.ITEM_SEQ = E.ITEM_SEQ(+)
          AND    C.PO_ORDER_NUM = E.PO_ORDER_NUM(+)

          AND    C.PO_ORDER_NUM = B.PO_ORDER_NUM(+)
          AND    C.ITEM_SEQ = B.ITEM_SEQ(+)

          AND     C.ITEM_CD = F.ITEM_CODE(+)
          AND    C.ENTRY_NUM = :entryNum
         ORDER BY B.PO_ORDER_NUM,C.ENTRY_ITEM_SEQ, B.ITEM_CD, B.ITEM_SEQ, C.ENTRY_NUM, C.ENTRY_ITEM_SEQ DESC
        ]]>
    </statement>

   <!--  통관 삭제시 구매 주문 품목 상세의 차감시킬 통관 완료 수량을 조회한다.-->
    <statement name="selectEntryReqQuantity" type="select">
        /*+ com.hwfs.ft.fdm.dao.EntryItemDetailDAO.selectEntryReqQuantity */
        <![CDATA[
          SELECT
             A.PO_ORDER_NUM, A.ITEM_SEQ, B.ENTRY_REQ_QUANTITY, B.ENTRY_REQ_WGT
        FROM PO_ORDER_ITEM_DETAIL A,
             ENTRY_ITEM_DETAIL B
        WHERE A.PO_ORDER_NUM = B.PO_ORDER_NUM
        AND A.ITEM_CD = B.ITEM_CD
        AND A.ITEM_SEQ = B.ITEM_SEQ
        AND B.ENTRY_NUM=:entryNum
        ]]>
    </statement>

   <!--  관세율을 조회한다.-->
    <statement name="getGvrntaxRate" type="select">
        /*+ com.hwfs.ft.fdm.dao.EntryItemDetailDAO.getGvrntaxRate */
        <![CDATA[
        SELECT
              A.GVRNTAX_RATE
            , NVL(A.CHARG_COST * DECODE(B.TAX_YN,'Y', 1, 1.1),0) AS CHARG_COST
            , A.IOUT_COST
        FROM ENTRY_ITEM_DETAIL A
            ,PO_ORDER_ITEM_DETAIL B
        WHERE 1=1
        AND A.PO_ORDER_NUM = B.PO_ORDER_NUM
        AND A.ITEM_CD = B.ITEM_CD
        AND A.ITEM_SEQ = B.ITEM_SEQ
        AND A.ENTRY_NUM = :entryNum
        AND A.ENTRY_ITEM_SEQ =:entryItemSeq
        ]]>
    </statement>

</hqml>
