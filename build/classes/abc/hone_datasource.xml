<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/jee 
		http://www.springframework.org/schema/jee/spring-jee-4.0.xsd">
	
	<description>
	<![CDATA[
		 Datasource 관련 설정이 포함되어 있는 파일입니다.
		  아래는 각 DB 별 JDBC 드라이버 및 URL설정 입니다
		# Oracle: using old classes12.zip
		# 		Driver File Name: classes12.zip
		# 		Driver Class Name: oracle.jdbc.driver.OracleDriver
		# 		Typical URL: jdbc:oracle:thin:@myserver:1521:ORCL
		# Oracle: using new ojdbcX.jar
		# 		Driver File Name: ojdbcX.jar
		# 		Driver Class Name: oracle.jdbc.OracleDriver
		# 		Typical URL: jdbc:oracle:thin:@myserver:1521:ORCL
		# Sybase:
		# 		Driver File Name: jconn2.jar
		# 		Driver Class Name: com.sybase.jdbc2.jdbc.SybDriver
		# 		Typical URL: jdbc:sybase:Tds:myserver:5000
		# MySQL: using the mm JDBC Driver
		# 		Driver File Name: mysql_comp.jar
		# 		Driver Class Name: org.gjt.mm.mysql.Driver
		# 		Typical URL: jdbc:mysql://localhost/mydatabase
		# MySQL: using the MySQL JDBC Driver
		# 		Driver File Name: mysql-connector-java-X.X.X-bin.jar
		# 		Driver Class Name: com.mysql.jdbc.Driver
		# 		Typical URL: jdbc:mysql://localhost/mydatabase
		# SQLServer: using the Microsoft JDBC driver
		# 		Driver File Name: sqlserver.jar, msbase.jar, msutil.jar
		# 		Driver Class Name: com.microsoft.jdbc.sqlserver.SQLServerDriver
		# 		Typical URL: jdbc:sqlserver://myserver:1433
		# SQLServer: using the Merant JDBC driver
		# 		Driver File Name: sqlserver.jar (also needs base.jar and util.jar)
		# 		Driver Class Name: com.merant.datadirect.jdbc.sqlserver.SQLServerDriver
		# 		Typical URL: jdbc:sqlserver://myserver:1433
	]]>
	</description>
		
	<!-- **************************************
	     개발/운영서버 Jeus DataSource 설정
	     ************************************** -->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
    	<property name="jndiName" value="hwfsDS" />         
    </bean>
	
	<!--
		DBCP를 사용한 리조트 FO DataSource 설정 : 외부DB는 jndi로 설정하지 않음
	-->
	<bean id="resortfoDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="#{HoneEnv['resortfo.jdbc.driverClassName']}"/>
        <property name="url" value="#{HoneEnv['resortfo.jdbc.url']}"/>
        <property name="username" value="#{HoneEnv['resortfo.jdbc.username']}"/>
        <property name="password" value="#{HoneEnv['resortfo.jdbc.password']}"/>
        <property name="validationQuery" value="SELECT 1 FROM DUAL"/>
        <property name="defaultAutoCommit" value="false" />
        <property name="poolPreparedStatements" value="true" />
        <!-- 
        <property name="maxActive" value="10"/>
        <property name="maxIdle" value="3"/>
        <property name="maxWait" value="-1"/>
         -->
    </bean>
	
	<!--
		DBCP를 사용한 MS-SQL 이연fnc DataSource 설정 : 외부DB는 jndi로 설정하지 않음
	-->
	<bean id="yfncDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="#{HoneEnv['yfnc.jdbc.driverClassName']}"/>
        <property name="url" value="#{HoneEnv['yfnc.jdbc.url']}"/>
        <property name="username" value="#{HoneEnv['yfnc.jdbc.username']}"/>
        <property name="password" value="#{HoneEnv['yfnc.jdbc.password']}"/>
        <property name="defaultAutoCommit" value="false" />
		<!--          
        <property name="maxActive" value="10"/>
        <property name="maxIdle" value="1"/>
        <property name="maxWait" value="-1"/>
         -->
    </bean>

	<!--
		DBCP를 사용한 MY-SQL 화성로컬푸드 DataSource 설정 : 외부DB는 jndi로 설정하지 않음
	-->
	<bean id="localFoodDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="#{HoneEnv['localfood.jdbc.driverClassName']}"/>
        <property name="url" value="#{HoneEnv['localfood.jdbc.url']}"/>
        <property name="username" value="#{HoneEnv['localfood.jdbc.username']}"/>
        <property name="password" value="#{HoneEnv['localfood.jdbc.password']}"/>
        <property name="defaultAutoCommit" value="false" />
		<!--          
        <property name="maxActive" value="10"/>
        <property name="maxIdle" value="1"/>
        <property name="maxWait" value="-1"/>
         -->
    </bean>
    
	<!--
		DBCP를 사용한 Maria 식재앱 DataSource 설정 : 외부DB는 jndi로 설정하지 않음
	-->
	<bean id="fdappDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="#{HoneEnv['fdapp.jdbc.driverClassName']}"/>
        <property name="url" value="#{HoneEnv['fdapp.jdbc.url']}"/>
        <property name="username" value="#{HoneEnv['fdapp.jdbc.username']}"/>
        <property name="password" value="#{HoneEnv['fdapp.jdbc.password']}"/>
        <property name="defaultAutoCommit" value="false" />
    </bean>
    
    <!--
	<bean id="jenniferDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="#{HoneEnv['jennifer.jdbc.driverClassName']}"/>
        <property name="url" value="#{HoneEnv['jennifer.jdbc.url']}"/>
        <property name="username" value="#{HoneEnv['jennifer.jdbc.username']}"/>
        <property name="password" value="#{HoneEnv['jennifer.jdbc.password']}"/>
        <property name="defaultAutoCommit" value="false" />
        <property name="poolPreparedStatements" value="true" />
    </bean>
    -->
    
    <bean id="sisDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="#{HoneEnv['sis.jdbc.driverClassName']}"/>
        <property name="url" value="#{HoneEnv['sis.jdbc.url']}"/>
        <property name="username" value="#{HoneEnv['sis.jdbc.username']}"/>
        <property name="password" value="#{HoneEnv['sis.jdbc.password']}"/>
        <property name="defaultAutoCommit" value="false" />
		<!--          
        <property name="maxActive" value="10"/>
        <property name="maxIdle" value="1"/>
        <property name="maxWait" value="-1"/>
         -->
    </bean>
	<!--
		JDBC 로깅을 위한  DataSource 인터셉터 설정 : 외부 DB 데이터소스는 설정하지 않음
	-->
	<bean id="datasourceInterceptor" class="hone.core.jdbc.monitor.interceptor.DataSourceInterceptor"/>
	<bean class="hone.core.jdbc.monitor.interceptor.DataSourceBeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				<value>dataSource</value>
				<!-- <value>jenniferDataSource</value> -->
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>datasourceInterceptor</value>
			</list>
		</property>
	</bean>
 
	<!-- DBAppender에서 DataSource를 사용하도록 하기 위한 설정 -->
    <bean id="singletonDataSourceProvider" class="com.hwfs.cmn.log.SingletonDataSourceProvider" factory-method="getInstance">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
</beans>