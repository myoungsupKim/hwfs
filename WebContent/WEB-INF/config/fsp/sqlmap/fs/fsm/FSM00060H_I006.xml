<?xml version="1.0" encoding="euc-kr"?>
<query>
	<type>insert</type>
	<description><![CDATA[레시피검색및 등록-자재등록]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>0</result-count>
	<statement>
<![CDATA[
INSERT INTO FSH_CYCLE_RECIPE_ITEM ( 
       UPJANG
	 , MENU_CD
	 , RECIPE_CD
	 , ITEM_CODE
	 , ITEM_SEQ
	 , NEED_QTY
	 , EDIBLE_QTY
	 , CUT_SPEC
	 , ORDER_YN
	 , PR_ID
	 , PR_NUM
	 , PR_QTY
	 , NEED_DATE
	 , UNIT_PRICE
	 , MARGIN_RATE
	 , MARGIN_PRICE
	 , CUSER
	 , CDATE
	 , UUSER
	 , UDATE
) 
( 
SELECT #UPJANG#
	 , #MENU_CD#
	 , A.RECIPE_CD
	 , A.ITEM_CODE 
	 , A.ITEM_SEQ 
	 , A.NEED_QTY
	 , ROUND(A.NEED_QTY * NVL((SELECT (100-NVL(DISUSE_RATE, 0)) / 100 AS CALC
                        	     FROM FSI_ITEM_NUT
                                WHERE ITEM_CODE = A.ITEM_CODE),1) , 2 )
	 , A.CUT_SPEC 
	 , 'N'
	 , ''
	 , 0
	 , 0
	 , TO_CHAR(TO_DATE(#NEED_DATE#, 'RRRR-MM-DD') - (SELECT SUM(D_DAY) AS D_DAY
                                                       FROM (SELECT 'G' AS GUBUN, 0 AS D_DAY FROM DUAL
                                                     UNION ALL
                                                     SELECT 'G' AS GUBUN, NVL(D_DAY, 0)
                                                       FROM FSA_HALL_DTL
                                                      WHERE UPJANG = #UPJANG#
                                                        AND HALL_CD = #HALL_CD#
                                                        AND MEAL = #MEAL#
                                                        AND CORNER = #CORNER#)
                                                      GROUP BY GUBUN), 'YYYYMMDD')
	 , NVL(B.CONTRACT_PRICE,0) --0
	 , NVL(B.MARGIN_RATE,0) -- 0
	 , NVL(B.ITEM_PRICE,0)  -- 0
	 , #g_EmpNo#
	 , SYSDATE
	 , #g_EmpNo#
	 , SYSDATE
 FROM FSR_STD_RECIPE_ITEM A,
	(
	    SELECT /*+ USE_HASH(A D E) */ 
	           A.ITEM_CODE
	         , D.ITEM_NAME
	         , D.ITEM_SIZE
	         , D.PO_UOM
	         , A.CUSTCD
	         , DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) AS ITEM_PRICE
	         , KG_CONVERT_RATE
	         , ROUND((DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) )/KG_CONVERT_RATE/1000,2) AS G_ITEM_PRICE
	         , A.UPJANG
	         , A.CENTER_CODE
		     , A.CONTRACT_PRICE	         
		     , A.MARGIN_RATE
  	      FROM HLDC_PO_CONTRACT_F A
  	         , HLDC_PO_ITEM_MST D
  	         , HLDC_PO_SUBINVENTORY E		      
		 WHERE 1=1
           AND A.UPJANG = (SELECT AP_UNITPRICE_UPJANG FROM HLDC_ST_UPJANG Z WHERE Z.UPJANG = #UPJANG#)
		   AND #NEED_DATE# BETWEEN A.CONTRACT_START AND A.CONTRACT_END
		   AND A.USE_YN = 'Y'
		   AND A.CONTRACT_PRICE > 0
           AND E.UPJANG = #UPJANG#
           AND E.SUBINV_CODE = #SUBINV_CODE#
           AND A.ITEM_CODE = D.ITEM_CODE
	) B
 WHERE 
	 A.RECIPE_CD = #RECIPE_CD#
	 AND A.ITEM_CODE = B.ITEM_CODE(+)
 )	]]></statement>
	<input default-name="ds_in">
	</input>
	<output default-name="ds_out">
	</output>
</query>
