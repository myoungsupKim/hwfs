<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[-레시피검색및 등록- 레시피수정조회]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
<![CDATA[	    
SELECT A.UPJANG           /* 업장코드 */
     , A.MENU_CD          /* 메뉴코드 */
     , A.RECIPE_SEQ       /* 레시피순번 */
     , A.RECIPE_TYPE      /* 레시피타입 */
     , A.CUISINE_TYPE     /* 조리법유형 */
     , A.RECIPE_CD        /* 레시피코드 */
     , A.RECIPE_NAME      /* 레시피명 */
     , A.DISUSE_RATE      /* 폐기율 */
     , A.ITEM_CODE        /* 자재코드 */
     , A.ITEM_NAME        /* 자재명 */
     , A.ITEM_SEQ         /* 자재순번 */
     , A.ITEM_CLASS1      /* 자재군분류 */
     , A.ITEM_CLASS2      /* 자재대분류 */
     , A.ITEM_CLASS3      /* 자재중분류 */
     , A.ITEM_CLASS4      /* 자재소분류 */
     , '' FEATURE_NAME    /* 자재특성 */
     , A.ITEM_SIZE        /* 자재규격 */
     , A.PO_UOM           /* 구매단위코드 */
     , A.EDIBLE_QTY       /* 가식부량 */
     , A.CUT_SPEC         /* 커팅규격 */
     , A.NEED_QTY         /* 1인량 */
     , A.EXPECT_MEAL_QTY  /* 예상식수 */
     , A.EXPECT_SALE_QTY  /* 예상판매량 */
     , A.TOT_QTY          /* 총소요량 = 1인량 * 예상식수 / 1000 */
     , A.CUR_PRICE        /* 1인당단가 = 1인량 * g당 단가 */
     , A.ORDER_YN         /* 발주여부 */
     , A.MARGIN_PRICE     /* 출하율적용단가 */
     , A.G_ITEM_PRICE     /* g당 단가 = 출하율적용단가 / Kg 환산율 / 1000 */
     , A.MARGIN_RATE      /* 출하율 */
     , A.UNIT_PRICE       /* 구매(매입)단가 */
     , A.NEED_DATE        /* 입고예정일 */
     , A.ITEM_PRICE       /* 실시간 원가 */
     , A.CENTER_CODE
     , D.RESTRICT_START
     , D.RESTRICT_END
     , D.RESTRICT_REASON
     , D.CNL_START
     , D.CNL_END
     , D.CNL_REASON
     , 'D-' || DECODE(C.D_DAYS, 0, 1, '', 1, DECODE(SIGN(DECODE(C.D_TIMES, '', 24, 0, 24, C.D_TIMES) - TO_NUMBER(TO_CHAR(SYSDATE,'HH24'))), 1, 0, 1) + C.D_DAYS + 1) D_DAYS
     , DECODE(C.D_DAYS, 0, 1, '', 1, DECODE(SIGN(DECODE(C.D_TIMES, '', 24, 0, 24, C.D_TIMES) - TO_NUMBER(TO_CHAR(SYSDATE, 'HH24'))), 1, 0, 1) + C.D_DAYS + 1) D_DAY
     , 'N' AS CHEAP_YN
     , 'N' AS DAY_COLOR
  FROM (     
        SELECT A.UPJANG           /* 업장코드 */
             , A.MENU_CD          /* 메뉴코드 */
             , B.RECIPE_SEQ       /* 레시피순번 */
             , B.RECIPE_TYPE      /* 레시피타입 */
             , B.CUISINE_TYPE     /* 조리법유형 */
             , B.RECIPE_CD        /* 레시피코드 */
             , B.RECIPE_NAME      /* 레시피명 */
             , NVL(H.DISUSE_RATE, 0) AS DISUSE_RATE   /* 폐기율 */
             , E.ITEM_CODE        /* 자재코드 */
             , E.ITEM_NAME        /* 자재명 */
             , C.ITEM_SEQ         /* 자재순번 */
             , E.ITEM_CLASS1      /* 자재군분류 */
             , E.ITEM_CLASS2      /* 자재대분류 */
             , E.ITEM_CLASS3      /* 자재중분류 */
             , E.ITEM_CLASS4      /* 자재소분류 */
             , '' FEATURE_NAME    /* 자재특성 */
             , E.ITEM_SIZE        /* 자재규격 */
             , E.PO_UOM           /* 구매단위코드 */
             , C.EDIBLE_QTY       /* 가식부량 */
             , C.CUT_SPEC         /* 커팅규격 */
             , C.NEED_QTY         /* 1인량 */
             , A.EXPECT_MEAL_QTY  /* 예상식수 */
             , B.EXPECT_SALE_QTY  /* 예상판매량 */
             , ROUND(C.NEED_QTY * A.EXPECT_MEAL_QTY / 1000, 2) TOT_QTY /* 총소요량 = 1인량 * 예상식수 / 1000 */
             , ROUND(NVL(C.NEED_QTY, 0) * NVL(C.MARGIN_PRICE / E.KG_CONVERT_RATE / 1000, 0)) AS CUR_PRICE /* 1인당단가 = 1인량 * g당 단가 */
             , C.ORDER_YN         /* 발주여부 */
             , C.MARGIN_PRICE     /* 출하율적용단가 */
             , ROUND(NVL(C.MARGIN_PRICE / E.KG_CONVERT_RATE / 1000, 0)) AS G_ITEM_PRICE /* g당 단가 = 출하율적용단가 / Kg 환산율 / 1000 */
             , C.MARGIN_RATE      /* 출하율 */
             , C.UNIT_PRICE       /* 구매(매입)단가 */
             , C.NEED_DATE        /* 입고예정일 */
             , CASE WHEN D.MARGIN_RATE = 0 THEN 0
                    WHEN D.MARGIN_RATE > 0 AND NVL(F.OUTVAT_FLAG, 'N') = 'Y' THEN
                      ROUND(D.CONTRACT_PRICE * DECODE(E.TAX_CODE, '100', 1.1, 1) * D.MARGIN_RATE)
                    WHEN D.MARGIN_RATE > 0 AND NVL(F.OUTVAT_FLAG, 'N') = 'N' THEN
                      ROUND(D.CONTRACT_PRICE * D.MARGIN_RATE)
                    ELSE 0
               END AS ITEM_PRICE /* 실시간 원가 */
             , E.KG_CONVERT_RATE /* Kg 환산율 */
             , D.CENTER_CODE     /* 센터코드 */
             , A.MENU_DATE       /* 제공일 */
             , D.CUSTCD          /* 매입거래처 */
             , B.CDATE
          FROM FSH_CYCLE_MENU_MST A
             , FSH_CYCLE_RECIPE_MST B
             , FSH_CYCLE_RECIPE_ITEM C
             , HLDC_PO_CONTRACT_F D
             , HLDC_PO_ITEM_MST E
             , HLDC_PO_SUBINVENTORY F
             , FSI_ITEM_NUT H
         WHERE A.UPJANG = B.UPJANG
           AND A.MENU_CD = B.MENU_CD
           AND B.UPJANG = C.UPJANG
           AND B.MENU_CD = C.MENU_CD
           AND B.RECIPE_CD = C.RECIPE_CD
           AND C.UPJANG = D.UPJANG(+)
           AND C.ITEM_CODE = D.ITEM_CODE(+)
           AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN D.CONTRACT_START(+) AND D.CONTRACT_END(+)
           AND C.ITEM_CODE = E.ITEM_CODE
           AND A.UPJANG = F.UPJANG
           AND C.ITEM_CODE = H.ITEM_CODE(+)
           AND A.UPJANG = #UPJANG#
           AND A.HALL_CD = #HALL_CD#
           AND A.MENU_DATE = #MENU_DATE#
           AND A.MENU_CD = #MENU_CD#
           AND F.SUBINV_CODE = #SUBINV_CODE# 
       ) A                      /* 식단자재 기본 */
     , HLDC_PO_ORDER_SCHEDULE B /* 요일제한 */
     , HLDC_PO_PREORDER_LIST C  /* 선발주제한 */
     , (
        SELECT UPJANG
             , ITEM_CODE
             , RESTRICT_START
             , RESTRICT_END
             , RESTRICT_REASON
             , CNL_START
             , CNL_END
             , CNL_REASON
          FROM FSI_RESTRICT_SET
         WHERE UPJANG = #UPJANG#
           AND (RESTRICT_START <= #MENU_DATE# AND RESTRICT_END >= #MENU_DATE#)
           AND NOT (CNL_START <= #MENU_DATE# AND CNL_END >= #MENU_DATE#)
       ) D                      /* 금지자재 */
 WHERE A.CENTER_CODE = B.CENTER_CODE(+)
   AND A.UPJANG = B.UPJANG(+)
   AND A.CUSTCD = B.CUSTCD(+)
   AND A.ITEM_CODE = B.ITEM_CODE(+)
   AND B.UPJANG_TYPE(+) = '01'     /* 업장유형코드 (01:직영, 02:고객) */
   AND A.CENTER_CODE = C.CENTER_CODE(+)
   AND A.ITEM_CODE = C.ITEM_CODE(+)
   AND A.UPJANG = D.UPJANG(+)
   AND A.ITEM_CODE = D.ITEM_CODE(+)
 ORDER BY A.CDATE, A.RECIPE_SEQ, A.RECIPE_TYPE, A.CUISINE_TYPE, A.RECIPE_CD, A.NEED_QTY DESC
]]>  
    </statement>
	<input default-name="ds_cond">
	</input>
	<output default-name="ds_Item">
	</output>
</query>