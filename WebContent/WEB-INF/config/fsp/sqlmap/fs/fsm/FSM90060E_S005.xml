<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[레시피검색]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
SELECT GUBUN
     , RECIPE_CD
     , RECIPE_NAME
     , RECIPE_CLASS
     , RECIPE_TYPE
     , CUISINE_TYPE
     , ROUND(SUM(NEED_QTY * (NVL(MARGIN_PRICE, 0) / KG_CONVERT_RATE / 1000))) AS RECIPE_COST
     , 0 AS COST_RATE
     , 0 AS SALE_PRICE
     , PREFER
     , '' AS PREFER_LABEL
     , CASE WHEN MONTHS_BETWEEN(TO_DATE(TO_CHAR(SYSDATE, 'yyyymmdd'), 'YYYYMMDD'), TO_DATE(TO_CHAR(CDATE, 'yyyymmdd'), 'YYYYMMDD')) &lt;= 1.0 THEN 1 
            ELSE 0 
       END AS DI_MON
  FROM (
<isEqual col="STD_CHK" value="1">  
       SELECT --/*+ USE_HASH(B C D E F H) */
              TRIM('표준') AS GUBUN
            , B.RECIPE_CD
            , B.RECIPE_NAME
            , CASE WHEN D.MARGIN_RATE = 0 THEN
                        D.CONTRACT_PRICE
                   WHEN D.MARGIN_RATE > 0 AND F.OUTVAT_FLAG = 'Y' THEN
                        ROUND((D.CONTRACT_PRICE * DECODE(E.TAX_CODE, '100', 1.1, 1) * (D.MARGIN_RATE + 100) / 100) / 10) * 10
                   WHEN D.MARGIN_RATE > 0 AND F.OUTVAT_FLAG = 'N' THEN
                        ROUND((D.CONTRACT_PRICE * (D.MARGIN_RATE + 100) / 100) / 10) * 10
              END AS MARGIN_PRICE            
            , B.RECIPE_CLASS
            , B.RECIPE_TYPE
            , B.CUISINE_TYPE
            , C.NEED_QTY
            , E.KG_CONVERT_RATE
            , B.CDATE
            , '' AS PREFER
         FROM FSR_STD_RECIPE_MST B
            , FSR_STD_RECIPE_ITEM C 
            , HLDC_PO_CONTRACT_F D
            , HLDC_PO_ITEM_MST E
            , HLDC_PO_SUBINVENTORY F
            ,(SELECT B.RECIPE_CLASS
                FROM SCC_COMMON_CODE A
                   , FSA_UPJANG_RECIPE_LINK B
               WHERE B.UPJANG = #UPJANG#
                 AND A.GROUP_CODE = 'FS0001'
                 AND A.CODE = B.RECIPE_CLASS
                 AND A.USE_YN='Y') H
        WHERE B.RECIPE_CD = C.RECIPE_CD
          AND C.ITEM_CODE = D.ITEM_CODE(+)
          AND B.USE_YN = 'Y'
          --AND C.USE_YN = 'Y'
          AND D.CONTRACT_PRICE(+) &gt; 0
          AND #MENU_DATE# BETWEEN D.CONTRACT_START(+) AND D.CONTRACT_END(+)
          AND C.ITEM_CODE = E.ITEM_CODE
          AND D.UPJANG(+) = #UPJANG#
          AND F.UPJANG = #UPJANG#
          AND F.SUBINV_CODE = #SUBINV_CODE#
          AND B.RECIPE_CLASS = H.RECIPE_CLASS
<isNotNull col="RECIPE_TYPE">
          AND B.RECIPE_TYPE = #RECIPE_TYPE#
</isNotNull>
<isNotNull col="CUISINE_TYPE">
          AND B.CUISINE_TYPE = #CUISINE_TYPE#
</isNotNull>
<isNotNull col="MAIN_ITEM_CODE1">
          AND B.MAIN_ITEM_CODE1 = #MAIN_ITEM_CODE1#
</isNotNull>
<isNotNull col="RESP_NUT1">
          AND B.RESP_NUT1 = #RESP_NUT1#
</isNotNull>   
<isNotNull col="RECIPE_CLASS">
          AND B.RECIPE_CLASS = #RECIPE_CLASS#
</isNotNull>
<isNotNull col="RECIPE_NAME">
          AND (REGEXP_LIKE(B.RECIPE_NAME, REPLACE(REPLACE(REPLACE(#RECIPE_NAME#, '(', '\\('), ')', '\\)'), ' ', '|')) OR REGEXP_LIKE(B.SAME_WORD, REPLACE(REPLACE(REPLACE(#RECIPE_NAME#, '(', '\\('), ')', '\\)'), ' ', '|')))
</isNotNull>    
</isEqual> 
<isEqual col="STD_CHK" value="1">
    	<isEqual col="UPJANG_CHK" value="1">
        UNION ALL
		</isEqual>
</isEqual>	
<isEqual col="UPJANG_CHK" value="1">              
       SELECT --/*+ USE_HASH(B C D E F G H) */
              TRIM('업장') AS GUBUN
            , B.RECIPE_CD
            , B.RECIPE_NAME
            , CASE WHEN D.MARGIN_RATE = 0 THEN
                        D.CONTRACT_PRICE
                   WHEN D.MARGIN_RATE > 0 AND F.OUTVAT_FLAG = 'Y' THEN
                        ROUND((D.CONTRACT_PRICE * DECODE(E.TAX_CODE, '100', 1.1, 1) * (D.MARGIN_RATE + 100) / 100) / 10) * 10
                   WHEN D.MARGIN_RATE > 0 AND F.OUTVAT_FLAG = 'N' THEN
                        ROUND((D.CONTRACT_PRICE * (D.MARGIN_RATE + 100) / 100) / 10) * 10
              END AS MARGIN_PRICE            
            , B.RECIPE_CLASS
            , B.RECIPE_TYPE
            , B.CUISINE_TYPE
            , C.NEED_QTY
            , E.KG_CONVERT_RATE
            , B.CDATE
            , (SELECT  trim(CODE_NAME) FROM    SCC_COMMON_CODE WHERE CODE = B.PREFER AND GROUP_CODE = 'FS0020' AND USE_YN = 'Y') AS PREFER
         FROM FSR_UPJANG_RECIPE_MST B
            , FSR_UPJANG_RECIPE_ITEM C 
            , HLDC_PO_CONTRACT_F D
            , HLDC_PO_ITEM_MST E
            , HLDC_PO_SUBINVENTORY F
            , FSA_HALL_MST G
            ,(SELECT B.RECIPE_CLASS
                FROM SCC_COMMON_CODE A
                   , FSA_UPJANG_RECIPE_LINK B
               WHERE B.UPJANG = #UPJANG#
                 AND A.GROUP_CODE = 'FS0001'
                 AND A.CODE = B.RECIPE_CLASS
                 AND A.USE_YN='Y') H
        WHERE B.UPJANG = C.UPJANG
          AND B.HALL_CLASS = C.HALL_CLASS
          AND B.RECIPE_CD = C.RECIPE_CD
          AND C.ITEM_CODE = D.ITEM_CODE(+)
          AND B.USE_YN = 'Y'
          --AND C.USE_YN = 'Y'
          AND D.CONTRACT_PRICE(+) &gt; 0          
          AND #MENU_DATE# BETWEEN D.CONTRACT_START(+) AND D.CONTRACT_END(+)
          AND C.ITEM_CODE = E.ITEM_CODE
          AND D.UPJANG(+) = #UPJANG#
          AND B.UPJANG = #UPJANG#
          AND B.UPJANG = F.UPJANG
          AND F.SUBINV_CODE = #SUBINV_CODE#
          AND B.UPJANG = G.UPJANG
          AND G.HALL_CD = #HALL_CD#
          AND B.HALL_CLASS = G.HALL_CLASS
          AND B.RECIPE_CLASS = H.RECIPE_CLASS
<isNotNull col="RECIPE_TYPE">
          AND B.RECIPE_TYPE = #RECIPE_TYPE#
</isNotNull>
<isNotNull col="CUISINE_TYPE">
          AND B.CUISINE_TYPE = #CUISINE_TYPE#
</isNotNull>
<isNotNull col="MAIN_ITEM_CODE1">
          AND B.MAIN_ITEM_CODE1 = #MAIN_ITEM_CODE1#
</isNotNull>
<isNotNull col="RESP_NUT1">
          AND B.RESP_NUT1 = #RESP_NUT1#
</isNotNull>   
<isNotNull col="RECIPE_CLASS">
          AND B.RECIPE_CLASS = #RECIPE_CLASS#
</isNotNull>
<isNotNull col="RECIPE_NAME">
		  AND (REGEXP_LIKE(B.RECIPE_NAME, REPLACE(REPLACE(REPLACE(#RECIPE_NAME#, '(', '\\('), ')', '\\)'), ' ', '|')) OR REGEXP_LIKE(B.SAME_WORD, REPLACE(REPLACE(REPLACE(#RECIPE_NAME#, '(', '\\('), ')', '\\)'), ' ', '|')))
</isNotNull>    
</isEqual>
<isEqual col="ENF_CHK" value="1">
       SELECT --/*+ USE_HASH(B C D E F H) */
              TRIM('그룹') AS GUBUN
            , B.RECIPE_CD
            , B.RECIPE_NAME
            , CASE WHEN D.MARGIN_RATE = 0 THEN
                        D.CONTRACT_PRICE
                   WHEN D.MARGIN_RATE > 0 AND F.OUTVAT_FLAG = 'Y' THEN
                        ROUND((D.CONTRACT_PRICE * DECODE(E.TAX_CODE, '100', 1.1, 1) * (D.MARGIN_RATE + 100) / 100) / 10) * 10
                   WHEN D.MARGIN_RATE > 0 AND F.OUTVAT_FLAG = 'N' THEN
                        ROUND((D.CONTRACT_PRICE * (D.MARGIN_RATE + 100) / 100) / 10) * 10
              END AS MARGIN_PRICE            
            , B.RECIPE_CLASS
            , B.RECIPE_TYPE
            , B.CUISINE_TYPE
            , C.NEED_QTY
            , E.KG_CONVERT_RATE
            , B.CDATE
            , '' AS PREFER
         FROM FSR_STD_RECIPE_MST B
            , FSR_STD_RECIPE_ITEM C 
            , HLDC_PO_CONTRACT_F D
            , HLDC_PO_ITEM_MST E
            , HLDC_PO_SUBINVENTORY F
            ,(SELECT B.RECIPE_CLASS
                FROM SCC_COMMON_CODE A
                   , FSA_UPJANG_RECIPE_LINK B
               WHERE B.UPJANG = #UPJANG#
                 AND A.GROUP_CODE = 'FS0001'
                 AND A.CODE = B.RECIPE_CLASS
                 AND A.USE_YN='Y') H
            ,(SELECT DISTINCT
                     D.RECIPE_CD
                FROM FSR_ENF_UPJANG A
                   , FSR_ENF_UPJANG_GRP B
                   , FSR_ENF_RECIPE_UPJANG C
                   , FSR_ENF_RECIPE D
               WHERE A.GRP_SEQ = B.GRP_SEQ
                 AND A.GRP_SEQ = C.UPJANG_GRP_SEQ
                 AND D.GRP_SEQ = C.RECIPE_GRP_SEQ
                 AND A.UPJANG = #UPJANG#
                 AND #MENU_DATE# BETWEEN B.START_DATE AND B.END_DATE) G                 
        WHERE B.RECIPE_CD = C.RECIPE_CD
          AND C.ITEM_CODE = D.ITEM_CODE(+)
          AND B.USE_YN = 'Y'
          --AND C.USE_YN = 'Y'
          AND D.CONTRACT_PRICE(+) &gt; 0
          AND #MENU_DATE# BETWEEN D.CONTRACT_START(+) AND D.CONTRACT_END(+)
          AND C.ITEM_CODE = E.ITEM_CODE
          AND D.UPJANG(+) = #UPJANG#
          AND F.UPJANG = #UPJANG#
          AND F.SUBINV_CODE = #SUBINV_CODE#
          AND B.RECIPE_CLASS = H.RECIPE_CLASS
          AND B.RECIPE_CD = G.RECIPE_CD
<isNotNull col="RECIPE_TYPE">
          AND B.RECIPE_TYPE = #RECIPE_TYPE#
</isNotNull>
<isNotNull col="CUISINE_TYPE">
          AND B.CUISINE_TYPE = #CUISINE_TYPE#
</isNotNull>
<isNotNull col="MAIN_ITEM_CODE1">
          AND B.MAIN_ITEM_CODE1 = #MAIN_ITEM_CODE1#
</isNotNull>
<isNotNull col="RESP_NUT1">
          AND B.RESP_NUT1 = #RESP_NUT1#
</isNotNull>   
<isNotNull col="RECIPE_CLASS">
          AND B.RECIPE_CLASS = #RECIPE_CLASS#
</isNotNull>
<isNotNull col="RECIPE_NAME">
          AND (REGEXP_LIKE(B.RECIPE_NAME, REPLACE(REPLACE(REPLACE(#RECIPE_NAME#, '(', '\\('), ')', '\\)'), ' ', '|')) OR REGEXP_LIKE(B.SAME_WORD, REPLACE(REPLACE(REPLACE(#RECIPE_NAME#, '(', '\\('), ')', '\\)'), ' ', '|')))
</isNotNull>    
</isEqual> 
       ) A
 GROUP BY GUBUN, RECIPE_CD, RECIPE_NAME, RECIPE_CLASS, RECIPE_TYPE, CUISINE_TYPE, CDATE, PREFER
<isNotNull col="START_COST"> 
    <isNotNull col="END_COST">
HAVING ROUND(SUM(NEED_QTY * (NVL(MARGIN_PRICE, 0) / KG_CONVERT_RATE / 1000))) BETWEEN #START_COST# AND #END_COST#
	</isNotNull>   
</isNotNull>          
 ORDER BY GUBUN DESC, RECIPE_CD	    
    </statement>
	<input default-name="ds_recipeCond">
	</input>
	<output default-name="ds_List">
	</output>
</query>