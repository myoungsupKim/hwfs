<?xml version="1.0" encoding="euc-kr"?>
<query>
	<type>select</type>
	<description><![CDATA[--레시피검색및 등록--
일자별,끼니별,코너별 식단구성조회]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
<![CDATA[
SELECT  /*+ ORDERED USE_HASH(AA BB CC) */
        0 CREAT,
        AA.RECIPE_CD,
        AA.RECIPE_NAME,
        AA.RECIPE_COST,
        AA.SALE_PRICE,--판매가
        AA.EXPECT_SALE_QTY,--예상판매량
        AA.TOT_COST,
        AA.TOT_SALE,
        AA.MAJOR_DISH_INFO,--병원구성요소
        AA.PHF,
        AA.COST_RATE, --원가율
        AA.CORN_SALE_PRICE, --코너별 식단가
        NVL(BB.ATTR02, 0) AS ATTR02,  -- 대표레시피 여부
        NVL(BB.ATTR03, 0) AS ATTR03,  -- 메인이지미 여부
        NVL(BB.ATTR04, 0) AS ATTR04,  -- 평가대상 여부
        BB.RECIPE_SEQ,
        BB.UPJANG,
        BB.MENU_CD,
        BB.RECIPE_COLOR,
        BB.COLOR,
        BB.HALL_CD,
        BB.MENU_DATE,
        BB.MEAL,
        BB.CORNER,
        BB.NEED_QTY,
        BB.EDIBLE_QTY,
		0 V_STA,
		0 V_RATE,
        CC.KCAL,--"열량",
        CC.WATER,--"수분",
        CC.PROT,--"단백질",
        CC.FAT,--"지질",
        CC.CARBO,--"당질",
        CC.FIBER,--"섬유",
        CC.ASH,--"회분",
        CC.CA,--"칼슘",
        CC.P,--"인",
        CC.FE,--"철",
        CC.NA,--"나트륨",
        CC.K,--"칼륨",
        CC.VITA,--"비타민A",
        CC.RETIN,--"레티놀",
        CC.B_CAROT,--"B_카르틴",
        CC.THIA,--"비타민B1",
        CC.RIBO,--"비타민B2",
        CC.NIASIN,--"나이아신",
        CC.VITA_C,--"비타민C",
        CC.CHOLE,--"콜레스테롤"
        -- 폐기율 미적용 영양소 보기체크시  1인소요량에의한 영양가 계산
        NVL(BB.S_KCAL,0)    S_KCAL,--"열량",
        NVL(BB.S_WATER,0)    S_WATER,--"수분",
        NVL(BB.S_PROT,0)    S_PROT,--"단백질",
        NVL(BB.S_FAT,0)        S_FAT,--"지질",
        NVL(BB.S_CARBO,0)    S_CARBO,--"당질",
        NVL(BB.S_FIBER,0)    S_FIBER,--"섬유",
        NVL(BB.S_ASH,0)        S_ASH,--"회분",
        NVL(BB.S_CA,0)        S_CA,--"칼슘",
        NVL(BB.S_P,0)        S_P,--"인",
        NVL(BB.S_FE,0)        S_FE,--"철",
        NVL(BB.S_NA,0)        S_NA,--"나트륨",
        NVL(BB.S_K,0)        S_K,--"칼륨",
        NVL(BB.S_VITA,0)    S_VITA,--"비타민A",
        NVL(BB.S_RETIN,0)    S_RETIN,--"레티놀",
        NVL(BB.S_B_CAROT,0)    S_B_CAROT,--"B_카르틴",
        NVL(BB.S_THIA,0)    S_THIA,--"비타민B1",
        NVL(BB.S_RIBO,0)    S_RIBO,--"비타민B2",
        NVL(BB.S_NIASIN,0)  S_NIASIN,--"나이아신",
        NVL(BB.S_VITA_C,0)    S_VITA_C,--"비타민C",
        NVL(BB.S_CHOLE,0)    S_CHOLE,--"콜레스테롤"
        -- 폐기율 미적용 영양소 보기미체크시  가식부량에 의한 영양가 계산
        NVL(BB.SS_KCAL,0)    SS_KCAL,--"열량",
        NVL(BB.SS_WATER,0)    SS_WATER,--"수분",
        NVL(BB.SS_PROT,0)    SS_PROT,--"단백질",
        NVL(BB.SS_FAT,0)    SS_FAT,--"지질",
        NVL(BB.SS_CARBO,0)    SS_CARBO,--"당질",
        NVL(BB.SS_FIBER,0)    SS_FIBER,--"섬유",
        NVL(BB.SS_ASH,0)    SS_ASH,--"회분",
        NVL(BB.SS_CA,0)        SS_CA,--"칼슘",
        NVL(BB.SS_P,0)        SS_P,--"인",
        NVL(BB.SS_FE,0)        SS_FE,--"철",
        NVL(BB.SS_NA,0)        SS_NA,--"나트륨",
        NVL(BB.SS_K,0)        SS_K,--"칼륨",
        NVL(BB.SS_VITA,0)    SS_VITA,--"비타민A",
        NVL(BB.SS_RETIN,0)    SS_RETIN,--"레티놀",
        NVL(BB.SS_B_CAROT,0)SS_B_CAROT,--"B_카르틴",
        NVL(BB.SS_THIA,0)    SS_THIA,--"비타민B1",
        NVL(BB.SS_RIBO,0)    SS_RIBO,--"비타민B2",
        NVL(BB.SS_NIASIN,0) SS_NIASIN,--"나이아신",
        NVL(BB.SS_VITA_C,0)    SS_VITA_C,--"비타민C",
        NVL(BB.SS_CHOLE,0)    SS_CHOLE,--"콜레스테롤"
        AA.CDATE
FROM
(
SELECT /*+ ORDERED USE_NL(A B C)*/
       A.RECIPE_CD,
       A.RECIPE_NAME,
       NVL(ROUND(SUM( (B.NEED_QTY * ROUND(B.MARGIN_PRICE/D.KG_CONVERT_RATE/1000,2)))),0)  AS RECIPE_COST, --레시피원가
       --ROUND((레시피원가/판매가)*100)
       A.SALE_PRICE,--판매가
       A.EXPECT_SALE_QTY,--예상판매량
       A.MAJOR_DISH_INFO,--병원구성요소
       A.PHF,
       C.SALE_PRICE AS CORN_SALE_PRICE,
       --CASE WHEN A.SALE_PRICE=0 THEN 0 ELSE ROUND((NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0))),2),0) / A.SALE_PRICE)*100,2) END COST_RATE, --원가율
       --총평균 원가율계산할 분모(판매가*예상판매량)
       NVL(A.SALE_PRICE,0)*NVL(A.EXPECT_SALE_QTY,0) TOT_SALE,
       --총평균 원가율계산할 분자(레시피원가*예상판매량)
       ROUND(SUM( (B.NEED_QTY * NVL(ROUND(B.MARGIN_PRICE/D.KG_CONVERT_RATE/1000,2),0)))) * NVL(A.EXPECT_SALE_QTY,0) TOT_COST,
       --원가율
       ROUND(DECODE( NVL(A.SALE_PRICE,0)*NVL(A.EXPECT_SALE_QTY,0) ,0,0,(ROUND(SUM( (B.NEED_QTY * NVL(ROUND(B.MARGIN_PRICE/D.KG_CONVERT_RATE/1000,2),0)))) * NVL(A.EXPECT_SALE_QTY,0)) / (NVL(A.SALE_PRICE,0)*NVL(A.EXPECT_SALE_QTY,0))  )*100,1) COST_RATE,
       A.CDATE
  FROM 
       FSM_REAL_MENU_MST C
     , FSM_REAL_RECIPE_MST A
     , FSM_REAL_RECIPE_ITEM B      
	 , HLDC_PO_ITEM_MST D
  WHERE A.UPJANG     = B.UPJANG
    AND A.MENU_CD    = B.MENU_CD
    AND A.RECIPE_CD  = B.RECIPE_CD
    AND A.UPJANG     = C.UPJANG
    AND A.MENU_CD    = C.MENU_CD
    AND B.ITEM_CODE  = D.ITEM_CODE
    AND C.MENU_CD    = #MENU_DATE#||'-'||#HALL_CD#||#MEAL#||#CORNER#
    AND C.MEAL       = #MEAL#
    AND C.CORNER     = #CORNER#
    AND C.MENU_DATE  = #MENU_DATE#
    AND C.HALL_CD    = #HALL_CD#
    AND C.UPJANG     = #UPJANG#          -- 업장
  GROUP BY A.RECIPE_CD, A.RECIPE_NAME, A.SALE_PRICE, A.EXPECT_SALE_QTY, A.MAJOR_DISH_INFO, A.PHF, C.SALE_PRICE, A.CDATE
) AA,
(
SELECT  
        A.RECIPE_SEQ,
        A.UPJANG,
        A.MENU_CD,
        A.ATTR02,
        A.ATTR03,
        A.ATTR04,
        A.RECIPE_CD,
        A.RECIPE_NAME,
        A.RECIPE_COLOR,
        (SELECT SET1 FROM SCC_COMMON_CODE WHERE GROUP_CODE ='FS0007' AND A.RECIPE_COLOR=CODE) COLOR,
        D.HALL_CD,
        D.MENU_DATE,
        D.MEAL,
        D.CORNER,
        SUM(B.NEED_QTY) NEED_QTY,
        SUM(B.EDIBLE_QTY) EDIBLE_QTY,
        -- 폐기율 미적용 영양소 보기체크시  1인소요량에의한 영양가 계산
        SUM(ROUND((C.CAL        * B.NEED_QTY / 100),2)) S_KCAL,--"열량",
        SUM(ROUND((C.WATER      * B.NEED_QTY / 100),2)) S_WATER,--"수분",
        SUM(ROUND((C.PROT       * B.NEED_QTY / 100),2)) S_PROT,--"단백질",
        SUM(ROUND((C.FAT        * B.NEED_QTY / 100),2)) S_FAT,--"지질",
        SUM(ROUND((C.CARBO      * B.NEED_QTY / 100),2)) S_CARBO,--"당질",
        SUM(ROUND((C.FIBER      * B.NEED_QTY / 100),2)) S_FIBER,--"섬유",
        SUM(ROUND((C.ASH        * B.NEED_QTY / 100),2)) S_ASH,--"회분",
        SUM(ROUND((C.CA         * B.NEED_QTY / 100),2)) S_CA,--"칼슘",
        SUM(ROUND((C.P          * B.NEED_QTY / 100),2)) S_P,--"인",
        SUM(ROUND((C.FE         * B.NEED_QTY / 100),2)) S_FE,--"철",
        SUM(ROUND((C.NA         * B.NEED_QTY / 100),2)) S_NA,--"나트륨",
        SUM(ROUND((C.K          * B.NEED_QTY / 100),2)) S_K,--"칼륨",
        SUM(ROUND((C.VITA_A     * B.NEED_QTY / 100),2)) S_VITA,--"비타민A",
        SUM(ROUND((C.RETIN      * B.NEED_QTY / 100),2)) S_RETIN,--"레티놀",
        SUM(ROUND((C.B_CAROT    * B.NEED_QTY / 100),2)) S_B_CAROT,--"B_카르틴",
        SUM(ROUND((C.THIA       * B.NEED_QTY / 100),2)) S_THIA,--"비타민B1",
        SUM(ROUND((C.RIBO       * B.NEED_QTY / 100),2)) S_RIBO,--"비타민B2",
        SUM(ROUND((C.NIACIN     * B.NEED_QTY / 100),2)) S_NIASIN,--"나이아신",
        SUM(ROUND((C.VITA_C     * B.NEED_QTY / 100),2)) S_VITA_C,--"비타민C",
        SUM(ROUND((C.CHOLE      * B.NEED_QTY / 100),2)) S_CHOLE,--"콜레스테롤"
        -- 폐기율 미적용 영양소 보기미체크시  가식부량에 의한 영양가 계산
        SUM(ROUND((C.CAL        * B.EDIBLE_QTY / 100),2)) SS_KCAL,--"열량",
        SUM(ROUND((C.WATER      * B.EDIBLE_QTY / 100),2)) SS_WATER,--"수분",
        SUM(ROUND((C.PROT       * B.EDIBLE_QTY / 100),2)) SS_PROT,--"단백질",
        SUM(ROUND((C.FAT        * B.EDIBLE_QTY / 100),2)) SS_FAT,--"지질",
        SUM(ROUND((C.CARBO      * B.EDIBLE_QTY / 100),2)) SS_CARBO,--"당질",
        SUM(ROUND((C.FIBER      * B.EDIBLE_QTY / 100),2)) SS_FIBER,--"섬유",
        SUM(ROUND((C.ASH        * B.EDIBLE_QTY / 100),2)) SS_ASH,--"회분",
        SUM(ROUND((C.CA         * B.EDIBLE_QTY / 100),2)) SS_CA,--"칼슘",
        SUM(ROUND((C.P          * B.EDIBLE_QTY / 100),2)) SS_P,--"인",
        SUM(ROUND((C.FE         * B.EDIBLE_QTY / 100),2)) SS_FE,--"철",
        SUM(ROUND((C.NA         * B.EDIBLE_QTY / 100),2)) SS_NA,--"나트륨",
        SUM(ROUND((C.K          * B.EDIBLE_QTY / 100),2)) SS_K,--"칼륨",
        SUM(ROUND((C.VITA_A     * B.EDIBLE_QTY / 100),2)) SS_VITA,--"비타민A",
        SUM(ROUND((C.RETIN      * B.EDIBLE_QTY / 100),2)) SS_RETIN,--"레티놀",
        SUM(ROUND((C.B_CAROT    * B.EDIBLE_QTY / 100),2)) SS_B_CAROT,--"B_카르틴",
        SUM(ROUND((C.THIA       * B.EDIBLE_QTY / 100),2)) SS_THIA,--"비타민B1",
        SUM(ROUND((C.RIBO       * B.EDIBLE_QTY / 100),2)) SS_RIBO,--"비타민B2",
        SUM(ROUND((C.NIACIN     * B.EDIBLE_QTY / 100),2)) SS_NIASIN,--"나이아신",
        SUM(ROUND((C.VITA_C     * B.EDIBLE_QTY / 100),2)) SS_VITA_C,--"비타민C",
        SUM(ROUND((C.CHOLE      * B.EDIBLE_QTY / 100),2)) SS_CHOLE--"콜레스테롤"
FROM    FSM_REAL_RECIPE_MST A , -- FSR_UPJANG_RECIPE_MST
        FSM_REAL_RECIPE_ITEM  B , --FSR_UPJANG_RECIPE_ITEM
        FSM_REAL_MENU_MST D,
        FSI_ITEM_NUT C
WHERE   A.UPJANG=B.UPJANG
AND     A.MENU_CD=B.MENU_CD
AND     A.RECIPE_CD=B.RECIPE_CD
AND     B.ITEM_CODE=C.ITEM_CODE(+)
AND     A.UPJANG=D.UPJANG
AND     A.MENU_CD=D.MENU_CD
AND     D.UPJANG=#UPJANG#
AND     D.HALL_CD=#HALL_CD#
AND     D.MEAL=#MEAL#
AND     D.CORNER=#CORNER#
AND     D.MENU_DATE=#MENU_DATE#
GROUP BY A.RECIPE_SEQ ,
         A.UPJANG,
         A.MENU_CD,
         A.ATTR02,
         A.ATTR03,
         A.ATTR04,
         A.RECIPE_CD,
         A.RECIPE_NAME,
         A.RECIPE_COLOR,
         D.HALL_CD,
         D.MENU_DATE,
         D.MEAL,
         D.CORNER
) BB,
(
SELECT  A.RECIPE_SEQ,
        A.UPJANG,
        A.MENU_CD,
        A.RECIPE_CD,
        A.RECIPE_NAME,
        A.RECIPE_COLOR,
        (SELECT SET1 FROM SCC_COMMON_CODE WHERE GROUP_CODE ='FS0007' AND A.RECIPE_COLOR=CODE) COLOR,
        D.HALL_CD,
        D.MENU_DATE,
        D.MEAL,
        D.CORNER,
        SUM(C.CAL      ) KCAL,--"열량",
        SUM(C.WATER    ) WATER,--"수분",
        SUM(C.PROT     ) PROT,--"단백질",
        SUM(C.FAT      ) FAT,--"지질",
        SUM(C.CARBO    ) CARBO,--"당질",
        SUM(C.FIBER    ) FIBER,--"섬유",
        SUM(C.ASH      ) ASH,--"회분",
        SUM(C.CA       ) CA,--"칼슘",
        SUM(C.P        ) P,--"인",
        SUM(C.FE       ) FE,--"철",
        SUM(C.NA       ) NA,--"나트륨",
        SUM(C.K        ) K,--"칼륨",
        SUM(C.VITA_A   ) VITA,--"비타민A",
        SUM(C.RETIN    ) RETIN,--"레티놀",
        SUM(C.B_CAROT  ) B_CAROT,--"B_카르틴",
        SUM(C.THIA     ) THIA,--"비타민B1",
        SUM(C.RIBO     ) RIBO,--"비타민B2",
        SUM(C.NIACIN   ) NIASIN,--"나이아신",
        SUM(C.VITA_C   ) VITA_C,--"비타민C",
        SUM(C.CHOLE    ) CHOLE--"콜레스테롤"
FROM    FSM_REAL_RECIPE_MST A , -- FSR_UPJANG_RECIPE_MST
        FSM_REAL_RECIPE_ITEM  B , --FSR_UPJANG_RECIPE_ITEM
        FSM_REAL_MENU_MST D,
        FSI_ITEM_NUT C
WHERE   A.UPJANG=B.UPJANG
AND     A.MENU_CD=B.MENU_CD
AND     A.RECIPE_CD=B.RECIPE_CD
AND     B.ITEM_CODE=C.ITEM_CODE(+)
AND     A.UPJANG=D.UPJANG
AND     A.MENU_CD=D.MENU_CD
AND     D.UPJANG=#UPJANG#
AND     D.HALL_CD=#HALL_CD#
AND     D.MEAL=#MEAL#
AND     D.CORNER=#CORNER#
AND     D.MENU_DATE=#MENU_DATE# 
GROUP BY A.RECIPE_SEQ ,
    A.UPJANG,
        A.MENU_CD,
        A.RECIPE_CD,
        A.RECIPE_NAME,
        A.RECIPE_COLOR,
        D.HALL_CD,
        D.MENU_DATE,
        D.MEAL,
        D.CORNER
) CC
WHERE AA.RECIPE_CD=BB.RECIPE_CD
AND	  AA.RECIPE_CD=CC.RECIPE_CD
ORDER BY AA.CDATE	]]></statement>
	<input default-name="ds_cond">
	</input>
	<output default-name="ds_Menu">
	</output>
</query>