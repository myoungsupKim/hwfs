<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
-----  일마감관리											
		SELECT B.MU_CD,
		       B.MU_NM,
		       B.TM_CD,
		       B.TM_NM,
		       A.UPJANG,
		       B.UPJANGNM,
		       MAX(A) AS A, --단체급식,
		       MAX(B) AS B, --장례식장,
		       MAX(C) AS C, --폐식용유,
		       MAX(D) AS D, --특판,
		       MAX(E) AS E --POS
		       
		FROM (
		    SELECT UPJANG,
		           MIN(CLOSE_GUBUN) A ,
		           '' B ,
		           '' C ,
		           '' D ,
		           '' E
		    FROM (
		          SELECT UPJANG_CD AS UPJANG, OCCUR_DATE AS CLOSE_DATE, DDDD_CLOSE_YN AS CLOSE_GUBUN
	              FROM SLA_IF_UPJANG_SALS_DETAIL 
	              WHERE OCCUR_DATE BETWEEN #CLOSE_DATE# || '01' AND #CLOSE_DATE# || TO_CHAR(LAST_DAY(TO_DATE(#CLOSE_DATE#,'YYYYMM')),'DD')
	              AND   SYS_CLASS = '11' 
	              AND   RECD_STATUS = 'L' 
	              UNION ALL
	              SELECT UPJANG_CD AS UPJANG, OCCUR_DATE AS CLOSE_DATE, DDDD_CLOSE_YN AS CLOSE_GUBUN
	              FROM SLA_IF_ADVANCE_OCCUR
	              WHERE OCCUR_DATE BETWEEN #CLOSE_DATE# || '01' AND #CLOSE_DATE# || TO_CHAR(LAST_DAY(TO_DATE(#CLOSE_DATE#,'YYYYMM')),'DD')
	              AND   SYS_CLASS = '11'    
		          )
		    GROUP BY UPJANG
		    UNION ALL
		    SELECT UPJANG,
	               '' A ,
	               MIN(CLOSE_GUBUN) B ,
	               '' C ,
	               '' D ,
	               '' E
	        FROM (
	              SELECT UPJANG_CD AS UPJANG, OCCUR_DATE AS CLOSE_DATE, DDDD_CLOSE_YN AS CLOSE_GUBUN
	              FROM SLA_IF_UPJANG_SALS_DETAIL
	              WHERE OCCUR_DATE BETWEEN #CLOSE_DATE# || '01' AND #CLOSE_DATE# || TO_CHAR(LAST_DAY(TO_DATE(#CLOSE_DATE#,'YYYYMM')),'DD')
	              AND   SYS_CLASS = '16' 
	              AND   RECD_STATUS = 'L' 
	              )
	        GROUP BY UPJANG
		    UNION ALL
		    SELECT UPJANG,
	               '' A ,
	               '' B ,
	               MIN(CLOSE_GUBUN) C ,
	               '' D ,
	               '' E
	        FROM (
	              SELECT A.UPJANG_CD AS UPJANG, A.OCCUR_DATE AS CLOSE_DATE, A.DDDD_CLOSE_YN AS CLOSE_GUBUN
	              FROM SLA_IF_UPJANG_SALS_DETAIL A,
	                   MAS_DC_OIL_MGMT B
	              WHERE OCCUR_DATE BETWEEN #CLOSE_DATE# || '01' AND #CLOSE_DATE# || TO_CHAR(LAST_DAY(TO_DATE(#CLOSE_DATE#,'YYYYMM')),'DD')
	                AND A.UPJANG_CD(+) = B.UPJANG  
	                AND A.SYS_CLASS(+) = '19' 
	                AND A.RECD_STATUS(+) = 'L'             
	              )
	        GROUP BY UPJANG
		    UNION ALL
		    SELECT UPJANG,
	               '' A ,
	               '' B ,
	               '' C ,
	               MIN(CLOSE_GUBUN) D ,
	               '' E --SLA_IF_UPJANG_SALS_DETAIL 테이블 특판 테이블로 변경 필요
	        FROM (
	              SELECT A.UPJANG_CD AS UPJANG, A.OCCUR_DATE AS CLOSE_DATE, A.DDDD_CLOSE_YN AS CLOSE_GUBUN
	              FROM SLA_IF_UPJANG_SALS_DETAIL A,
	                   FSP_PO_SPECIAL_SALE B
	              WHERE OCCUR_DATE BETWEEN #CLOSE_DATE# || '01' AND #CLOSE_DATE# || TO_CHAR(LAST_DAY(TO_DATE(#CLOSE_DATE#,'YYYYMM')),'DD')
	                AND A.UPJANG_CD(+) = B.UPJANG 
	                AND A.SYS_CLASS(+) = '17' 
	                AND A.RECD_STATUS(+) = 'L'               
	              )
	        GROUP BY UPJANG
		    UNION ALL
		    SELECT UPJANG,
		           '' A ,
		           '' B ,
		           '' C ,
		           '' D ,
		           MIN(CLOSE_GUBUN) E
		    FROM (
		          SELECT A.UPJANG_CD AS UPJANG, OCCUR_DATE AS CLOSE_DATE, DDDD_CLOSE_YN AS CLOSE_GUBUN
                  FROM SLA_IF_UPJANG_SALS_DETAIL A
                  WHERE A.OCCUR_DATE BETWEEN #CLOSE_DATE# || '01' AND #CLOSE_DATE# || TO_CHAR(LAST_DAY(TO_DATE(#CLOSE_DATE#,'YYYYMM')),'DD')
		          AND A.RECD_STATUS = 'L'
               	  AND A.SYS_CLASS = '20'		          
		          )
		    GROUP BY UPJANG	 
		    )A,
		    SCO_UPJANG_MST_V B
		WHERE A.UPJANG = B.UPJANG
		<isNotNull col="MU_CD">
		AND   (B.MU_CD  = #MU_CD#)
		</isNotNull>  
		<isNotNull col="TM_CD">  
		AND   (B.TM_CD  = #TM_CD#)
		</isNotNull>  
		<isNotNull col="UPJANG">  
		AND   (B.UPJANG  = #UPJANG#)
		</isNotNull>  
		<isNotEqual col="CLOSE_GUBUN" value="006">
		AND  DECODE(#CLOSE_GUBUN#,'001',A,'002',B,'003',C,'004',D,'005',E) = 'N'     
		</isNotEqual>
		<isEqual col="CLOSE_GUBUN" value="006">
		AND (A = 'N' OR B = 'N' OR C = 'N' OR D = 'N' OR E = 'N') 
		</isEqual>
		GROUP BY B.MU_CD, B.MU_NM, B.TM_CD, B.TM_NM, A.UPJANG, B.UPJANGNM	
		ORDER BY B.MU_CD, B.TM_CD										
</statement>
	<input default-name="ds_cond">
		<col name="TM_CD" size="256" type="VARCHAR" description="" /> 
		<col name="UPJANG" size="" type="NUMERIC" description="" /> 
		<col name="CLOSE_GUBUN" size="256" type="VARCHAR" description="" /> 			
		<col name="CLOSE_DATE" size="256" type="VARCHAR" description="" /> 
	</input>
	<output default-name="ds_list">
		<col name="MU_CD" size="256" type="VARCHAR" description="" /> 
		<col name="MU_NM" size="256" type="VARCHAR" description="" /> 		
		<col name="TM_CD" size="256" type="VARCHAR" description="" /> 
		<col name="TM_NM" size="256" type="VARCHAR" description="" /> 		
		<col name="UPJANG" size="" type="NUMERIC" description="" /> 
		<col name="UPJANGNM" size="256" type="VARCHAR" description="" /> 
 	  <col name="GUBUN" size="256" type="VARCHAR" description="" /> 	  
	</output>
</query>