<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>

<isEqual col="VIEW" value="1">
SELECT
    S.PART_SALES_SABUNNM
   ,NULL AS MAIN_UPJANG
   , '' AS MAIN_UPJANGNM
   , NULL AS UPJANG
   , '(영업담당소계)' AS UPJANGNM
   , '' AS BOND_DATE
   , ' ' AS ADDDATE_TIME
   , SUM(S.RECEIVE_AMT) AS RECEIVE_AMT
   , '' AS GUBUN  
   , '' AS RECEIVE_TYPE_NM
   , '' AS ACCTNM
   , '' AS BANK_ACCT_NO
   , ''  AS PL_CD
   , '' AS PL_UP_CD
   , '' AS BL_SHOW
   , 3 AS LEVEL_NO
   , '+' AS  BL_PLUS
FROM 
	(
</isEqual> 
<isEqual col="VIEW" value="2">
SELECT
     S.PART_SALES_SABUNNM
   , S.MAIN_UPJANG
   , S.MAIN_UPJANGNM
   , NULL AS UPJANG
   , '(본사소계)' AS UPJANGNM
   , '' AS BOND_DATE
   , ' ' AS ADDDATE_TIME
   , SUM(S.RECEIVE_AMT) AS RECEIVE_AMT
   , '' AS GUBUN  
   , '' AS RECEIVE_TYPE_NM
   , '' AS ACCTNM
   , '' AS BANK_ACCT_NO
   , ''  AS PL_CD
   , '' AS PL_UP_CD
   , '' AS BL_SHOW
   , 3 AS LEVEL_NO
   , '+' AS  BL_PLUS
FROM 
	(
</isEqual> 
	SELECT
			  H.NM_KOR AS PART_SALES_SABUNNM
			, F.MAIN_UPJANG
			, (SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = F.MAIN_UPJANG) AS MAIN_UPJANGNM
			, X.UPJANG_CD AS UPJANG
			, S.UPJANGNM AS UPJANGNM
			, TO_CHAR(TO_DATE(X.RECEIVE_DATE, 'YYYYMMDD'), 'YYYY-MM-DD') AS BOND_DATE
			, TO_CHAR(X.ADDTIME,'YYYY-MM-DD HH24:MI:SS') AS ADDDATE_TIME
			, X.RECEIVE_AMT
			, CASE WHEN NVL(X.BANK_ACCT_NO, '1') = '1' THEN '수기입금'
				   WHEN NVL(X.BANK_ACCT_NO, '1') = 'ALT_IN' THEN '선수금이관'
			   ELSE '가상계좌입금' END  GUBUN
			, T.TYPE_NM AS RECEIVE_TYPE_NM
			, AC.ACCTNM5 AS ACCTNM
			, DECODE(X.BANK_ACCT_NO,'ALT_IN',NULL,X.BANK_ACCT_NO) AS BANK_ACCT_NO
			, F.MAIN_UPJANG || '-' || X.UPJANG_CD  AS PL_CD
			, X.REMARK
			, '1' AS PL_UP_CD
			, '0' AS BL_SHOW
			, 3  AS LEVEL_NO
			, '+' AS  BL_PLUS
	FROM 
		(
		-- 1.가상계좌 입금 정보
		 SELECT 
					TO_NUMBER(B.UPJANG_CD) AS UPJANG_CD
				  , A.RECEIVE_DATE
				  , NVL(A.RECEIVE_AMT,0) -NVL((SELECT SUM(APPLY_AMT) FROM SLA_ADVANCE_ALT_MST A , SLA_ADVANCE_ALT_DETAIL B WHERE A.ALT_NUM = B.ALT_NUM AND B.ADVANCE_NUM = AD.ADVANCE_NUM AND A.RECD_STATUS = 'L' AND B.RECD_STATUS = 'L'),0 )               AS RECEIVE_AMT
				  , '' AS ACCT_CD
				  , '' AS RECEIVE_TYPE_CD
				  , SCC_CRYPTO.DEC_FUN(A.BANK_ACCT_NO) AS BANK_ACCT_NO
				  , A.ADDTIME
				  , '' AS REMARK
			FROM SLA_SAP_SUSPENSE_INFO A
			     , SLA_SAP_SUSPENSE_ALT_DETAIL AD
			     , SLA_SAP_BANK_ACCT_NO B
			     , FMS_UPJANG G
			     , ST_UPJANG S
			     , HLDC_SC_DEPT_V D
		 WHERE A.SAP_SUSPENSE_NUM = AD.SAP_SUSPENSE_NUM
		       AND A.RECD_STATUS = 'L'
		       AND B.BANK_ACCT_TYPE = 'V'
		       AND A.BANK_ACCT_NO = B.BANK_ACCT_NO
				<isNotNull col="TM_CD">
					AND D.TM_CD = #TM_CD#
				</isNotNull>
				<isNotNull col="CC_CD">
					AND D.CC_CD = #CC_CD#
				</isNotNull>
		       AND S.DEPT_ID = D.DEPT_ID
		       AND A.BANK_ACCT_NO = B.BANK_ACCT_NO
		       <isNotNull col="MAIN_UPJANG">
				AND G.MAIN_UPJANG = #MAIN_UPJANG#
				</isNotNull>
				<isNotNull col="PART_SALES_SABUN">
				AND G.PART_SALES_SABUN = #PART_SALES_SABUN#
				</isNotNull>			
		       AND B.UPJANG_CD = G.UPJANG
		       AND B.UPJANG_CD = S.UPJANG
		       AND     A.RECEIVE_DATE BETWEEN #TRX_DATEFR# AND #TRX_DATETO#		
		
		
		UNION ALL
			SELECT 
					TO_NUMBER(B.UPJANG_CD) AS UPJANG_CD
				  , A.RECEIVE_DATE
				  , NVL(NVL(CC.RECEIVE_AMT,BB.APPLY_AMT),A.RECEIVE_AMT) AS RECEIVE_AMT
				  , NVL(CC.ACCT_CD,BB.ACCT_CD) AS ACCT_CD
				  , '' AS RECEIVE_TYPE_CD
				  , SCC_CRYPTO.DEC_FUN(A.BANK_ACCT_NO) AS BANK_ACCT_NO
				  , A.ADDTIME
				  , NVL(CC.REMARKS,BB.REMARK) AS REMARK
			FROM SLA_SAP_SUSPENSE_INFO A
			     , SLA_SAP_SUSPENSE_ALT_DETAIL AD
			     , SLA_SAP_BANK_ACCT_NO B
			     , FMS_UPJANG G
			     , ST_UPJANG S
			     , HLDC_SC_DEPT_V D
			     , SLA_ADVANCE_ALT_MST AA 
                 , SLA_ADVANCE_ALT_DETAIL BB 
                 , SLA_AR_RECEIVE_DETAIL CC
		 WHERE A.SAP_SUSPENSE_NUM = AD.SAP_SUSPENSE_NUM
		       AND A.RECD_STATUS = 'L'
		       AND B.BANK_ACCT_TYPE = 'V'
               AND AD.ADVANCE_NUM = BB.ADVANCE_NUM
               AND BB.ALT_NUM = AA.ALT_NUM 
               AND BB.RECEIVE_NUM = CC.RECEIVE_NUM(+)
               AND AA.RECD_STATUS = 'L' 
               AND BB.RECD_STATUS = 'L' 		   
               AND CC.RECD_STATUS(+) = 'L'  	       
				<isNotNull col="TM_CD">
					AND D.TM_CD = #TM_CD#
				</isNotNull>
				<isNotNull col="CC_CD">
					AND D.CC_CD = #CC_CD#
				</isNotNull>
		       AND S.DEPT_ID = D.DEPT_ID
		       AND A.BANK_ACCT_NO = B.BANK_ACCT_NO
		       <isNotNull col="MAIN_UPJANG">
				AND G.MAIN_UPJANG = #MAIN_UPJANG#
				</isNotNull>
				<isNotNull col="PART_SALES_SABUN">
				AND G.PART_SALES_SABUN = #PART_SALES_SABUN#
				</isNotNull>			
			   -- 선수금이관(거래처이관, 부서이관)한 금액은 표시하지 않는다(2015-12-30)
			   AND AA.ALT_TYPE_CD NOT IN ('G06', 'G07')        
		       AND B.UPJANG_CD = G.UPJANG
		       AND B.UPJANG_CD = S.UPJANG
		       AND     A.RECEIVE_DATE BETWEEN #TRX_DATEFR# AND #TRX_DATETO#


	   UNION ALL

		-- 2. 수기입금정보 
			SELECT 
			  M.UPJANG_CD
			, D.RECEIVE_DATE
			, D.RECEIVE_AMT
			, D.ACCT_CD
			, R.RECEIVE_TYPE_CD
			, '' AS BANK_ACCT_NO
			, D.CDATE AS ADDTIME
			, '' AS REMARK
			FROM SLA_AR_RECEIVE_DETAIL D INNER JOIN SLA_AR_MST M ON M.SYS_CLASS = '13'
																								AND M.RECD_STATUS = 'L'
																								AND D.AR_NUM = M.AR_NUM
															INNER JOIN FMS_UPJANG G ON 1 = 1
																								<isNotNull col="MAIN_UPJANG">
																								AND G.MAIN_UPJANG = #MAIN_UPJANG#
																								</isNotNull>
																								<isNotNull col="PART_SALES_SABUN">
																								AND G.PART_SALES_SABUN = #PART_SALES_SABUN#
																								</isNotNull>
																								AND M.UPJANG_CD = G.UPJANG
															INNER JOIN ST_UPJANG S ON M.UPJANG_CD = S.UPJANG
															INNER JOIN HLDC_SC_DEPT_V D ON 1 = 1
																										<isNotNull col="TM_CD">
																										AND D.TM_CD = #TM_CD#
																										</isNotNull>
																										<isNotNull col="CC_CD">
																										AND D.CC_CD = #CC_CD#
																										</isNotNull>
																										AND S.DEPT_ID = D.DEPT_ID
															--INNER JOIN SLA_AR_RECEIVE_MST R ON D.RECEIVE_NUM = R.RECEIVE_NUM AND R.RECD_STATUS = 'L'
															INNER JOIN SLA_AR_RECEIVE_MST R ON R.RECEIVE_TYPE_CD NOT IN ('B10')	 -- 선수금 제외
																											AND D.RECEIVE_NUM = R.RECEIVE_NUM
																											AND R.RECD_STATUS = 'L'																										

			WHERE  D.RECD_STATUS = 'L'
			  AND D.RECEIVE_DATE BETWEEN #TRX_DATEFR# AND #TRX_DATETO#
			  AND R.RECEIVE_TYPE_CD NOT IN ('B07','B16')  --이성훈 채권이관건 제거
			UNION ALL
			
            	SELECT MST.UPJANG_CD AS UPJNAG_CD 
					     , MST.OCCUR_DATE    AS RECEIVE_DATE 
					       -- 대체일자 
					     , MST.OCCUR_AMT AS RECEIVE_AMT 
					       -- 대체 금액 
					     , '' ACCT_CD 
					     , '' RECEIVE_TYPE_CD 
					     , DECODE(ADVANCE_OCCUR_CLASS,'AO09','1','ALT_IN') AS BANK_ACCT_NO 
					     , MST.CDATE  AS ADDTIME 
					     , MST.REMARK 
					  FROM SLA_ADVANCE_MST MST , ST_UPJANG S , HLDC_SC_DEPT_V D , FMS_UPJANG F
					 WHERE  (MST.MNGMV_ADVANCE_NUM IS NOT NULL OR ADVANCE_OCCUR_CLASS = 'AO09')
					    AND MST.RECD_STATUS = 'L'
                        AND MST.UPJANG_CD = S.UPJANG
                        AND MST.UPJANG_CD = F.UPJANG
                        AND S.DEPT_ID = D.DEPT_ID
                        AND MST.OCCUR_DATE BETWEEN #TRX_DATEFR# AND #TRX_DATETO#
                        <isNotNull col="MAIN_UPJANG">
                        AND F.MAIN_UPJANG = #MAIN_UPJANG#
                        </isNotNull>
						<isNotNull col="PART_SALES_SABUN">
						AND F.PART_SALES_SABUN = #PART_SALES_SABUN#
						</isNotNull>                        
						<isNotNull col="TM_CD">
						AND D.TM_CD = #TM_CD#
						</isNotNull>
						<isNotNull col="CC_CD">
						AND D.CC_CD = #CC_CD#
						</isNotNull>                        
                       
			
		) X INNER JOIN FMS_UPJANG F ON X.UPJANG_CD = F.UPJANG
			 INNER JOIN ST_UPJANG S ON X.UPJANG_CD = S.UPJANG 	
			 LEFT JOIN HLDC_HR_PERSONAL H ON F.PART_SALES_SABUN = H.SABUN
			 LEFT JOIN ST_ACCOUNT AC ON AC.BU_CD = '2000'							/* 조건 : SAP 관련 */
												AND X.ACCT_CD = AC.ACCTCD	
			 LEFT JOIN SLA_TYPE_CD_MST T ON T.TYPE_GRP_CD = '002'
													   AND X.RECEIVE_TYPE_CD = T.TYPE_CD
	  WHERE  X.RECEIVE_AMT NOT IN ( 0 )

<isNotEqual col="VIEW" value="0">
) S
</isNotEqual> 
<isEqual col="VIEW" value="1">
GROUP BY S.PART_SALES_SABUNNM
</isEqual> 
<isEqual col="VIEW" value="2">
GROUP BY S.PART_SALES_SABUNNM,  S.MAIN_UPJANG,  S.MAIN_UPJANGNM
</isEqual> 

<isEqual col="VIEW" value="0">
	<isNotEqual col="UPJANG_YN" value="true">
		ORDER BY F.MAIN_UPJANG, X.RECEIVE_DATE, X.UPJANG_CD
	</isNotEqual> 
</isEqual> 

         
</statement>
	<input default-name="ds_cond">
		<col name="MAIN_UPJANG" size="6" type="NUMERIC" description="업장코드" /> 
		<col name="UPJANG" size="6" type="NUMERIC" description="업장코드" /> 
		<col name="TRX_DATEFR" size="255" type="VARCHAR" description="" /> 
		<col name="TRX_DATETO" size="255" type="VARCHAR" description="" /> 
		<col name="TM_CD" size="255" type="VARCHAR" description="" />
		<col name="CC_CD" size="255" type="VARCHAR" description="" />
		<col name="VIEW" size="255" type="VARCHAR" description="" />
	</input>
	<output default-name="ds_list">      


	</output>
</query>