<?xml version="1.0" encoding="euc-kr"?>
<query>
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
<![CDATA[
SELECT   AA.YYYY
    	,AA.QUATER
    	,AA.ALLY_CD
        ,AA.ALLY_NM
    	,AA.MEAL_AMT
    	,AA.FICS_AMT
    	,AA.HMR_AMT
    	,AA.GITA_AMT
        ,AA.AMT_SUM
        ,CC.RATIO
        ,CASE WHEN BB.MEAL_AMT=0 THEN 0 ELSE  ROUND(AA.MEAL_AMT/BB.MEAL_AMT,2)*100  END  MEAL
        ,CASE WHEN BB.FICS_AMT=0 THEN 0 ELSE  ROUND(AA.FICS_AMT/BB.FICS_AMT,2)*100  END  FICS
        ,CASE WHEN BB.HMR_AMT=0  THEN 0 ELSE  ROUND(AA.HMR_AMT /BB.HMR_AMT,2)*100   END  HMR
        ,CASE WHEN BB.GITA_AMT=0 THEN 0 ELSE  ROUND(AA.GITA_AMT/BB.GITA_AMT,2)*100  END  GITA
        ,CASE WHEN BB.AMT_SUM=0  THEN 0 ELSE  ROUND(AA.AMT_SUM /BB.AMT_SUM,2)*100   END  AMT
        ,BB.MEAL_AMT AGO_MEAL_AMT
    	,BB.FICS_AMT AGO_FICS_AMT
    	,BB.HMR_AMT  AGO_HMR_AMT
    	,BB.GITA_AMT AGO_GITA_AMTT
        ,BB.AMT_SUM  AGO_AMT_SUM
        ,AA.SORT
FROM
(
    SELECT #YYYY# YYYY
    	, #QUATER# QUATER
    	, '999' ALLY_CD
        , '총계'  ALLY_NM
    	, SUM(NVL(A.MEAL_AMT,0)) MEAL_AMT
    	, SUM(NVL(A.FICS_AMT,0)) FICS_AMT
    	, SUM(NVL(A.HMR_AMT,0))  HMR_AMT
    	, SUM(NVL(A.GITA_AMT,0)) GITA_AMT
        , SUM(NVL(A.MEAL_AMT,0)+NVL(A.FICS_AMT,0)+NVL(A.HMR_AMT,0)+NVL(A.GITA_AMT,0)) AMT_SUM
        , 1 SORT
     FROM (SELECT * FROM SCC_COMMON_CODE WHERE GROUP_CODE='MA2001'  )   B,  --회사
          (SELECT * FROM  MAS_EIS_A  WHERE YYYY = #YYYY# AND QUATER = #QUATER# AND GUBUN ='100') A
     WHERE B.CODE =A.ALLY_CD(+)
    UNION ALL
    SELECT   #YYYY# YYYY
    	, #QUATER# QUATER
    	, B.CODE ALLY_CD
        , B.CODE_NAME GUBUN_NM
    	, NVL(A.MEAL_AMT,0) MEAL_AMT
    	, NVL(A.FICS_AMT,0) FICS_AMT
    	, NVL(A.HMR_AMT,0)  HMR_AMT
    	, NVL(A.GITA_AMT,0) GITA_AMT
        , NVL(A.MEAL_AMT,0)+NVL(A.FICS_AMT,0)+NVL(A.HMR_AMT,0)+NVL(A.GITA_AMT,0) AMT_SUM
        , 2 SORT
     FROM (SELECT * FROM SCC_COMMON_CODE WHERE GROUP_CODE='MA2001'  )   B,  --회사
          (SELECT * FROM  MAS_EIS_A  WHERE YYYY = #YYYY# AND QUATER = #QUATER# AND GUBUN ='100') A
     WHERE B.CODE =A.ALLY_CD(+)
) AA,    --조회년 자료
(
    SELECT    #YYYY# YYYY
    	, #QUATER# QUATER
    	, '999' ALLY_CD
        , '총계'  ALLY_NM
    	, SUM(NVL(A.MEAL_AMT,0)) MEAL_AMT
    	, SUM(NVL(A.FICS_AMT,0)) FICS_AMT
    	, SUM(NVL(A.HMR_AMT,0))  HMR_AMT
    	, SUM(NVL(A.GITA_AMT,0)) GITA_AMT
        , SUM(NVL(A.MEAL_AMT,0)+NVL(A.FICS_AMT,0)+NVL(A.HMR_AMT,0)+NVL(A.GITA_AMT,0)) AMT_SUM
     FROM (SELECT * FROM SCC_COMMON_CODE WHERE GROUP_CODE='MA2001'  )   B,  --회사
          (SELECT * FROM  MAS_EIS_A  WHERE YYYY = #YYYY#-#QUATER# AND QUATER = #QUATER# AND GUBUN ='100') A
     WHERE B.CODE =A.ALLY_CD(+)
    UNION ALL
    SELECT    #YYYY# YYYY
    	, #QUATER# QUATER
    	, B.CODE ALLY_CD
        , B.CODE_NAME ALLY_NM
    	, NVL(A.MEAL_AMT,0) MEAL_AMT
    	, NVL(A.FICS_AMT,0) FICS_AMT
    	, NVL(A.HMR_AMT,0)  HMR_AMT
    	, NVL(A.GITA_AMT,0) GITA_AMT
        , NVL(A.MEAL_AMT,0)+NVL(A.FICS_AMT,0)+NVL(A.HMR_AMT,0)+NVL(A.GITA_AMT,0) AMT_SUM
     FROM (SELECT * FROM SCC_COMMON_CODE WHERE GROUP_CODE='MA2001'  )   B,  --회사
          (SELECT * FROM  MAS_EIS_A  WHERE YYYY = #YYYY#-#QUATER# AND QUATER = #QUATER# AND GUBUN ='100') A
     WHERE B.CODE =A.ALLY_CD(+)
) BB, --조회전년 자료
(
    SELECT   DD.YYYY
           , DD.QUATER
           , DD.ALLY_CD
           , DD.ALLY_NM
           , '100' GUBUN
           , CASE WHEN DD.AMT_SUM=0 THEN 0 ELSE ROUND(EE.AMT_SUM/DD.AMT_SUM,2)*100 END RATIO --계열사 비중
    FROM
    (
        --매출액
        SELECT  #YYYY# YYYY
              , #QUATER# QUATER
              , C.CODE ALLY_CD
              , C.CODE_NAME ALLY_NM
        	  , NVL(A.MEAL_AMT,0) MEAL_AMT
        	  , NVL(A.FICS_AMT,0) FICS_AMT
        	  , NVL(A.HMR_AMT,0)  HMR_AMT
        	  , NVL(A.GITA_AMT,0) GITA_AMT
        	  , NVL(A.MEAL_AMT,0)+NVL(A.FICS_AMT,0)+NVL(A.HMR_AMT,0)+NVL(A.GITA_AMT,0) AMT_SUM
        FROM  (SELECT * FROM SCC_COMMON_CODE WHERE GROUP_CODE='MA2001')   C,   --회사
              (SELECT * FROM MAS_EIS_A WHERE YYYY = #YYYY# AND QUATER = #QUATER# AND GUBUN ='100') A
        WHERE 1=1
        AND   C.CODE=A.ALLY_CD(+)
        UNION ALL
        SELECT  #YYYY# YYYY
              , #QUATER# QUATER
              , '999'   ALLY_CD
              , '총계'  ALLY_NM
       	  , SUM(NVL(A.MEAL_AMT,0)) MEAL_AMT
        	  , SUM(NVL(A.FICS_AMT,0)) FICS_AMT
        	  , SUM(NVL(A.HMR_AMT,0)) HMR_AMT
        	  , SUM(NVL(A.GITA_AMT,0)) GITA_AMT
        	  , SUM(NVL(A.MEAL_AMT,0)+NVL(A.FICS_AMT,0)+NVL(A.HMR_AMT,0)+NVL(A.GITA_AMT,0)) AMT_SUM
        FROM  (SELECT * FROM SCC_COMMON_CODE WHERE GROUP_CODE='MA2001')   C,   --회사
              (SELECT * FROM MAS_EIS_A WHERE YYYY = #YYYY# AND QUATER = #QUATER# AND GUBUN ='100')  A
        WHERE 1=1
        AND   C.CODE=A.ALLY_CD(+)
    ) DD,
    (
        --관계사매출
        SELECT  #YYYY# YYYY
              , #QUATER# QUATER
              , C.CODE ALLY_CD
              , C.CODE_NAME ALLY_NM
        	  , NVL(A.MEAL_AMT,0) MEAL_AMT
        	  , NVL(A.FICS_AMT,0) FICS_AMT
        	  , NVL(A.HMR_AMT,0)  HMR_AMT
        	  , NVL(A.GITA_AMT,0) GITA_AMT
        	  , NVL(A.MEAL_AMT,0)+NVL(A.FICS_AMT,0)+NVL(A.HMR_AMT,0)+NVL(A.GITA_AMT,0) AMT_SUM
        FROM  (SELECT * FROM SCC_COMMON_CODE WHERE GROUP_CODE='MA2001')   C,   --회사
              (SELECT * FROM MAS_EIS_A WHERE YYYY = #YYYY# AND QUATER = #QUATER# AND GUBUN ='101')  A
        WHERE 1=1
        AND   C.CODE=A.ALLY_CD(+)
        UNION ALL
        SELECT  #YYYY# YYYY
              , #QUATER# QUATER
              , '999'   ALLY_CD
              , '총계'  ALLY_NM
        	  , SUM(NVL(A.MEAL_AMT,0)) MEAL_AMT
        	  , SUM(NVL(A.FICS_AMT,0)) FICS_AMT
        	  , SUM(NVL(A.HMR_AMT,0))  HMR_AMT
        	  , SUM(NVL(A.GITA_AMT,0)) GITA_AMT
        	  , SUM(NVL(A.MEAL_AMT,0)+NVL(A.FICS_AMT,0)+NVL(A.HMR_AMT,0)+NVL(A.GITA_AMT,0)) AMT_SUM
        FROM  (SELECT * FROM SCC_COMMON_CODE WHERE GROUP_CODE='MA2001')   C,   --회사
              (SELECT * FROM MAS_EIS_A WHERE YYYY = #YYYY# AND QUATER = #QUATER# AND GUBUN ='101')  A
        WHERE 1=1
        AND   C.CODE=A.ALLY_CD(+)
    ) EE
    WHERE DD.YYYY=EE.YYYY
    AND DD.QUATER=EE.QUATER
    AND DD.ALLY_CD=EE.ALLY_CD
) CC
WHERE AA.YYYY=BB.YYYY
AND   AA.QUATER=BB.QUATER
AND   AA.ALLY_CD=BB.ALLY_CD
AND   AA.YYYY=CC.YYYY
AND   AA.QUATER=CC.QUATER
AND   AA.ALLY_CD=CC.ALLY_CD
ORDER BY AA.SORT,AA.ALLY_CD	]]></statement>
	<input default-name="ds_in">
		<col name="YYYY" size="4000" type="VARCHAR" description="" /> 
		<col name="QUATER" size="4000" type="VARCHAR" description="" /> 
	</input>
	<output default-name="ds_Result">
		<col name="YYYY" size="4000" type="VARCHAR" description="" /> 
		<col name="QUATER" size="4000" type="VARCHAR" description="" /> 
		<col name="ALLY_CD" size="50" type="VARCHAR" description="" /> 
		<col name="ALLY_NM" size="100" type="VARCHAR" description="" /> 
		<col name="MEAL_AMT" size="22" type="NUMERIC" description="" /> 
		<col name="FICS_AMT" size="22" type="NUMERIC" description="" /> 
		<col name="HMR_AMT" size="22" type="NUMERIC" description="" /> 
		<col name="GITA_AMT" size="22" type="NUMERIC" description="" /> 
		<col name="AMT_SUM" size="22" type="NUMERIC" description="" /> 
		<col name="RATIO" size="22" type="NUMERIC" description="" /> 
		<col name="MEAL" size="22" type="NUMERIC" description="" /> 
		<col name="FICS" size="22" type="NUMERIC" description="" /> 
		<col name="HMR" size="22" type="NUMERIC" description="" /> 
		<col name="GITA" size="22" type="NUMERIC" description="" /> 
		<col name="AMT" size="22" type="NUMERIC" description="" /> 
		<col name="AGO_MEAL_AMT" size="22" type="NUMERIC" description="" /> 
		<col name="AGO_FICS_AMT" size="22" type="NUMERIC" description="" /> 
		<col name="AGO_HMR_AMT" size="22" type="NUMERIC" description="" /> 
		<col name="AGO_GITA_AMTT" size="22" type="NUMERIC" description="" /> 
		<col name="AGO_AMT_SUM" size="22" type="NUMERIC" description="" /> 
		<col name="SORT" size="22" type="NUMERIC" description="" /> 
	</output>
</query>
