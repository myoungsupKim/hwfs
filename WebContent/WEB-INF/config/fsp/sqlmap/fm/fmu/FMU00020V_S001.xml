<?xml version="1.0" encoding="euc-kr"?>
<query>
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
<![CDATA[
SELECT DECODE(#CLASS#,'CLASS_NAME1',DECODE(A.CONSUM_YN,'Y','소모품','식자재')
                     ,'CLASS_NAME2',(SELECT B.CLASS_NAME FROM HLDC_PO_ITEM_CLASS_HLDC_V B WHERE B.CLASS_CODE = A.ITEM_CLASS2)
                     ,'CLASS_NAME3',(SELECT B.CLASS_NAME FROM HLDC_PO_ITEM_CLASS_HLDC_V B WHERE B.CLASS_CODE = A.ITEM_CLASS3)
                     ,'CLASS_NAME4',(SELECT B.CLASS_NAME FROM HLDC_PO_ITEM_CLASS_HLDC_V B WHERE B.CLASS_CODE = A.ITEM_CLASS4)) AS CLASS_NAME
     , A.ITEM_CODE, A.ITEM_NAME, A.ITEM_SIZE, A.PO_UOM, A.TAX_CODE
     , A.SDATEP, A.EDATEP, A.PRE_SALE_PRICE, A.SALE_PRICE, A.RATE
     , CASE WHEN B.OP_PRICE IS NOT NULL OR B.OP_RATE IS NOT NULL 
	        THEN DECODE(SIGN(NVL(B.OP_PRICE,0) ),0, SCC_CEIL(A.SALE_PRICE + (A.SALE_PRICE * NVL(B.OP_RATE,0) / 100),B.CEIL_VAL), B.OP_PRICE) 
	        WHEN C.OP_PRICE IS NOT NULL OR C.OP_RATE IS NOT NULL 
	        THEN DECODE(SIGN(NVL(C.OP_PRICE,0) ),0, SCC_CEIL(A.SALE_PRICE + (A.SALE_PRICE * NVL(C.OP_RATE,0) / 100),C.CEIL_VAL), C.OP_PRICE) 
	   ELSE A.SALE_PRICE END AS OP_PRICE --운영단가 
     --, DECODE(SIGN(NVL(B.OP_PRICE,0)),0, SCC_CEIL(A.SALE_PRICE + ROUND(A.SALE_PRICE * NVL(B.OP_RATE,0) / 100),B.CEIL_VAL), B.OP_PRICE) AS OP_PRICE
     , A.D_DAYS, A.USE_YN
  --FROM FMU_OP_RATE B
  FROM	(  
	     SELECT ITEM_CODE, OP_RATE, OP_PRICE, CEIL_VAL, SDATE, EDATE, UPJANG  
	       FROM FMU_OP_RATE 
	      WHERE UPJANG = #UPJANG# 
	        AND USE_YN = 'Y' 
	        AND ITEM_TYPE = 'M' 
	   ) B 
	 , (         
	     SELECT ITEM_CODE, OP_RATE, OP_PRICE, CEIL_VAL, SDATE, EDATE, UPJANG 
	       FROM FMU_OP_RATE 
	      WHERE UPJANG = #UPJANG# 
	        AND USE_YN = 'Y' 
	        AND ITEM_TYPE = 'C' 
	   ) C 
     ,(SELECT
              #UPJANG# AS UPJANG, A.CONTRACT_START AS SDATE, B.CONSUM_YN, B.ITEM_CLASS2, B.ITEM_CLASS3, B.ITEM_CLASS4
            , A.ITEM_CODE, B.ITEM_NAME, B.ITEM_SIZE, B.PO_UOM
            , DECODE(B.TAX_CODE,'100','과세','210','면세','영세') AS TAX_CODE
            , C.SDATEP, C.EDATEP, C.PRE_SALE_PRICE, A.SALE_PRICE
            , DECODE(NVL(C.PRE_SALE_PRICE,0),0,100,ROUND(100*A.SALE_PRICE/C.PRE_SALE_PRICE,2)) AS RATE
               -- 구매 D_DAYS 사용(기존 +1 삭제)
            , 'D-'||TO_CHAR(NVL(K.D_DAYS,0)) AS D_DAYS
            , A.USE_YN
         FROM HLDC_PO_CONTRACT_FSALE A, HLDC_PO_ITEM_MST B
            , HLDC_PO_PREORDER_LIST K
            ,(SELECT A.ITEM_CODE, A.CONTRACT_START, A.SALE_PRICE AS PRE_SALE_PRICE
                   , A.CONTRACT_START AS SDATEP, CONTRACT_END_RK AS EDATEP
                FROM HLDC_PO_CONTRACT_FSALE A
                   ,(SELECT A.CENTER_CODE, A.UPJANG, A.ITEM_CODE, MAX(A.CONTRACT_START) AS CONTRACT_START
                       FROM HLDC_PO_CONTRACT_FSALE A
                       WHERE A.CENTER_CODE = (SELECT A.CENTER_CODE FROM HLDC_PO_UPJANG_CENTER A, HLDC_ST_UPJANG B WHERE A.UPJANG = B.AP_UNITPRICE_UPJANG AND B.UPJANG = #UPJANG#)
                         AND A.UPJANG = (SELECT A.AP_UNITPRICE_UPJANG FROM HLDC_ST_UPJANG A WHERE A.UPJANG = #UPJANG#)
                         AND A.ITEM_CODE > ' '
                         AND A.CONTRACT_START < #SDATE#
                       GROUP BY A.CENTER_CODE, A.UPJANG, A.ITEM_CODE) C
               WHERE A.CENTER_CODE = C.CENTER_CODE
                 AND A.UPJANG = C.UPJANG
                 AND A.ITEM_CODE = C.ITEM_CODE
                 AND A.CONTRACT_START = C.CONTRACT_START) C
        WHERE A.ITEM_CODE = B.ITEM_CODE
          AND A.ITEM_CODE = C.ITEM_CODE(+)
          AND A.CENTER_CODE = (SELECT A.CENTER_CODE FROM HLDC_PO_UPJANG_CENTER A, HLDC_ST_UPJANG B WHERE A.UPJANG = B.AP_UNITPRICE_UPJANG AND B.UPJANG = #UPJANG#)
          AND A.UPJANG = (SELECT A.AP_UNITPRICE_UPJANG FROM HLDC_ST_UPJANG A WHERE A.UPJANG = #UPJANG#)
          AND A.ITEM_CODE > ' '
          AND A.CONTRACT_START = #SDATE#
          AND A.CENTER_CODE = K.CENTER_CODE(+)
          AND A.ITEM_CODE = K.ITEM_CODE(+)
        UNION ALL
       SELECT #UPJANG# AS UPJANG, A.SDATE, B.CONSUM_YN, B.ITEM_CLASS2, B.ITEM_CLASS3, B.ITEM_CLASS4
            , A.ITEM_CODE, B.ITEM_NAME, B.ITEM_SIZE, B.PO_UOM
            , DECODE(B.TAX_CODE,'100','과세','210','면세','영세') AS TAX_CODE
            , C.SDATEP, C.EDATEP, C.PRE_SALE_PRICE, A.SALE_PRICE
            , DECODE(NVL(C.PRE_SALE_PRICE,0),0,100,ROUND(100*A.SALE_PRICE/C.PRE_SALE_PRICE,2)) AS RATE
            , DECODE(NVL(B.D_DAYS,0),0,NULL,'D-'||TO_CHAR(B.D_DAYS)) AS D_DAYS
            , A.USE_YN
         FROM FMP_OTCUST_PRICE_AVA_V A, FMP_OTCUST_ITEM B
            ,(SELECT A.ITEM_CODE, A.SALE_PRICE AS PRE_SALE_PRICE, A.SDATE AS SDATEP, A.EDATE AS EDATEP
                FROM FMP_OTCUST_PRICE_AVA_V A
                   ,(SELECT UPJANG, ITEM_CODE, MAX(SDATE) AS SDATE
                       FROM FMP_OTCUST_PRICE_AVA_V
                      WHERE UPJANG = (SELECT OTCUST_PRICE_UPJANG FROM FMS_UPJANG WHERE UPJANG = #UPJANG#)
                        AND SDATE < #SDATE#
                      GROUP BY UPJANG, ITEM_CODE) C
               WHERE A.UPJANG = C.UPJANG
                 AND A.ITEM_CODE = C.ITEM_CODE
                 AND A.SDATE  = C.SDATE) C
        WHERE A.ITEM_CODE = B.ITEM_CODE
          AND A.ITEM_CODE = C.ITEM_CODE(+)
          AND A.UPJANG = (SELECT OTCUST_PRICE_UPJANG FROM FMS_UPJANG WHERE UPJANG = #UPJANG#)
          AND A.SDATE  = #SDATE#
      ) A
 WHERE A.UPJANG = B.UPJANG(+)
   AND A.UPJANG = C.UPJANG(+)
   AND A.SDATE BETWEEN B.SDATE(+) AND B.EDATE(+)
   AND A.SDATE BETWEEN C.SDATE(+) AND C.EDATE(+)
   AND A.ITEM_CODE = B.ITEM_CODE(+)
   AND A.ITEM_CLASS4 = C.ITEM_CODE(+)
   AND A.CONSUM_YN = #CONSUM_YN#
   AND A.ITEM_CLASS2 = NVL(#ITEM_CLASS2#,A.ITEM_CLASS2)
   AND A.ITEM_CLASS3 = NVL(#ITEM_CLASS3#,A.ITEM_CLASS3)
   AND A.ITEM_CLASS4 = NVL(#ITEM_CLASS4#,A.ITEM_CLASS4)
   AND (A.ITEM_CODE LIKE #ITEM_CODE#||'%' OR A.ITEM_NAME LIKE '%'||#ITEM_CODE#||'%')
 ORDER BY A.ITEM_CLASS4, A.ITEM_CODE
	]]></statement>
	<input default-name="ds_Cond">
		<col name="CLASS" size="50" type="VARCHAR" description="" /> 
		<col name="UPJANG" size="22" type="NUMERIC" description="" /> 
		<col name="SDATE" size="8" type="VARCHAR" description="" /> 
		<col name="CONSUM_YN" size="1" type="VARCHAR" description="" /> 
		<col name="ITEM_CLASS2" size="8" type="VARCHAR" description="" /> 
		<col name="ITEM_CLASS3" size="8" type="VARCHAR" description="" /> 
		<col name="ITEM_CLASS4" size="8" type="VARCHAR" description="" /> 
		<col name="ITEM_CODE" size="50" type="VARCHAR" description="" /> 
	</input>
	<output default-name="ds_List">
		<col name="CLASS_NAME" size="50" type="VARCHAR" description="" /> 
		<col name="ITEM_CODE" size="50" type="VARCHAR" description="" /> 
		<col name="ITEM_NAME" size="200" type="VARCHAR" description="" /> 
		<col name="ITEM_SIZE" size="100" type="VARCHAR" description="" /> 
		<col name="PO_UOM" size="10" type="VARCHAR" description="" /> 
		<col name="TAX_CODE" size="4" type="VARCHAR" description="" /> 
		<col name="SDATEP" size="8" type="VARCHAR" description="" /> 
		<col name="EDATEP" size="8" type="VARCHAR" description="" /> 
		<col name="PRE_SALE_PRICE" size="22" type="NUMERIC" description="" /> 
		<col name="SALE_PRICE" size="22" type="NUMERIC" description="" /> 
		<col name="RATE" size="22" type="NUMERIC" description="" /> 
		<col name="OP_PRICE" size="22" type="NUMERIC" description="" /> 
		<col name="D_DAYS" size="42" type="VARCHAR" description="" /> 
		<col name="USE_YN" size="1" type="VARCHAR" description="" /> 
	</output>
</query>
