<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
	SELECT A.MAIN_UPJANG
     , B.UPJANGNM_DISP AS MAIN_UPJANGNM
     , SUBSTR(A.RECEIVE_DATE,1,4)||'-'||SUBSTR(A.RECEIVE_DATE,5,2)||'-'||SUBSTR(A.RECEIVE_DATE,7,2) BOND_DATE
     , SUM(A.R_RECEIVE_AMT) AS RCP_AMT1
     , SUM(A.V_RECEIVE_AMT) AS RCP_AMT2
     , A.REMARK
  FROM (
 	SELECT C.MAIN_UPJANG AS MAIN_UPJANG
             , A.RECEIVE_DATE                  
             , DECODE(B.BANK_ACCT_TYPE, 'V', 0, A.RECEIVE_AMT) AS  R_RECEIVE_AMT
             , DECODE(B.BANK_ACCT_TYPE, 'V', A.RECEIVE_AMT, 0) AS  V_RECEIVE_AMT
             , '' AS REMARK
          FROM SLA_SAP_SUSPENSE_INFO A -- SAP 가수금 정보를 관리한다. 
             , SLA_SAP_BANK_ACCT_NO B -- SAP에서 전송된 계좌번호 
             , FMS_UPJANG C 
         WHERE A.BANK_ACCT_NO = B.BANK_ACCT_NO 
           AND B.UPJANG_CD = C.UPJANG
           AND C.MAIN_UPJANG = #MAIN_UPJANG# 
           AND A.RECEIVE_DATE BETWEEN #TRX_DATEFR# AND #TRX_DATETO#
           AND A.RECD_STATUS = 'L'
         UNION ALL
        SELECT D.MAIN_UPJANG
             , AM.OCCUR_DATE
             , AM.OCCUR_AMT AS R_RECEIVE_AMT
             , 0 AS V_RECEIVE_AMT
             , '' AS REMARK
          FROM FMS_UPJANG D
             , SLA_ADVANCE_MST AM
             --, SLA_ADVANCE_RECEIVE_WAY AD
         WHERE 1=1 --AM.ADVANCE_NUM = AD.ADVANCE_NUM
           AND AM.OCCUR_DATE BETWEEN #TRX_DATEFR# AND #TRX_DATETO#
           AND AM.UPJANG_CD = D.UPJANG
           AND D.MAIN_UPJANG = #MAIN_UPJANG#
           AND AM.ADVANCE_TYPE_CD = 'F11'
           AND AM.RECD_STATUS = 'L'
           -- AND AD.RECD_STATUS = 'L' 
        UNION ALL
        SELECT D.MAIN_UPJANG
             , AM.OCCUR_DATE
             , AM.OCCUR_AMT AS R_RECEIVE_AMT
             , 0 AS V_RECEIVE_AMT
             , AM.REMARK AS REMARK
          FROM FMS_UPJANG D
             , SLA_ADVANCE_MST AM
             --, SLA_ADVANCE_RECEIVE_WAY AD
         WHERE 1=1 --AM.ADVANCE_NUM = AD.ADVANCE_NUM
           AND AM.OCCUR_DATE BETWEEN #TRX_DATEFR# AND #TRX_DATETO#
           AND AM.UPJANG_CD = D.UPJANG
           AND D.MAIN_UPJANG = #MAIN_UPJANG#
           AND AM.ADVANCE_TYPE_CD = 'F08' AND AM.MNGMV_ADVANCE_NUM IS NOT NULL
           AND AM.RECD_STATUS = 'L'
           -- AND AD.RECD_STATUS = 'L'              
        
        --카드내역 추가
        UNION ALL
			select b.UPJANG_CD ,
			       a.RECEIVE_DATE ,
			       a.RECEIVE_AMT ,
			       0 AS V_RECEIVE_AMT,
			       '' AS REMARK
			  from SLA_AR_RECEIVE_DETAIL a ,
			       sla_ar_mst b ,
			       fms_upjang c ,
			       st_upjang d ,
			       SLA_AR_RECEIVE_MST e
			 where a.ar_num = b.ar_num
			   and a.RECD_STATUS = 'L'
			   and a.RECEIVE_DATE between #TRX_DATEFR# AND #TRX_DATETO#
			   and b.SYS_CLASS = '13'
			   and b.RECD_STATUS = 'L'
			   and b.upjang_cd = c.upjang
			   and c.MAIN_UPJANG = #MAIN_UPJANG# 
			   and b.UPJANG_CD = d.upjang
			   and a.RECEIVE_NUM = e.RECEIVE_NUM
			   and e.RECEIVE_TYPE_CD not in ('B10') -- 선수금 제외
			   and e.RECD_STATUS = 'L'        
        ) A, FMS_UPJANG B
WHERE A.MAIN_UPJANG = B.UPJANG        
 GROUP BY A.MAIN_UPJANG, B.UPJANGNM_DISP, A.RECEIVE_DATE, A.REMARK
ORDER BY A.MAIN_UPJANG, A.RECEIVE_DATE
	
	<!-- 
	
SELECT A.MAIN_UPJANG
     , B.UPJANGNM_DISP AS MAIN_UPJANGNM
     , SUBSTR(A.RECEIVE_DATE,1,4)||'-'||SUBSTR(A.RECEIVE_DATE,5,2)||'-'||SUBSTR(A.RECEIVE_DATE,7,2) BOND_DATE
     , SUM(A.R_RECEIVE_AMT) AS RCP_AMT1
     , SUM(A.V_RECEIVE_AMT) AS RCP_AMT2
  FROM (SELECT D.MAIN_UPJANG
             , A.RECEIVE_DATE
             , DECODE(BF.UPJANG_CD, NULL, A.RECEIVE_AMT) AS R_RECEIVE_AMT
             , DECODE(BF.UPJANG_CD, NULL, 0, A.RECEIVE_AMT) AS V_RECEIVE_AMT
          FROM SLA_AR_RECEIVE_DETAIL A, SLA_AR_MST B, SLA_AR_RECEIVE_MST C, FMS_UPJANG D
             , SLA_SAP_SUSPENSE_ALT_DETAIL SD, SLA_SAP_SUSPENSE_INFO SE, SLA_SAP_BANK_ACCT_NO BF
         WHERE A.AR_NUM = B.AR_NUM
           AND A.RECEIVE_NUM = C.RECEIVE_NUM
           AND C.RECEIVE_TYPE_CD IN ('B02', 'B19', 'B10')
           AND A.RECD_STATUS = 'L'
           AND B.RECD_STATUS = 'L'
           AND C.ADVANCE_ALT = SD.ALT_NUM
           AND SD.SAP_SUSPENSE_NUM = SE.SAP_SUSPENSE_NUM
           AND SE.BANK_ACCT_NO = BF.BANK_ACCT_NO
           AND A.RECEIVE_DATE BETWEEN #TRX_DATEFR# AND #TRX_DATETO#
           AND B.UPJANG_CD = D.UPJANG
           AND D.MAIN_UPJANG = #MAIN_UPJANG#
         UNION ALL
        SELECT D.MAIN_UPJANG
             , A.RECEIVE_DATE
             , DECODE(BF.UPJANG_CD, NULL, A.RECEIVE_AMT) AS R_RECEIVE_AMT
             , DECODE(BF.UPJANG_CD, NULL, 0, A.RECEIVE_AMT) AS V_RECEIVE_AMT
          FROM SLA_AR_RECEIVE_DETAIL A, SLA_AR_MST B, SLA_AR_RECEIVE_MST C, FMS_UPJANG D
             , SLA_ADVANCE_ALT_DETAIL AD, SLA_SAP_SUSPENSE_ALT_DETAIL SD, SLA_SAP_SUSPENSE_INFO SE, SLA_SAP_BANK_ACCT_NO BF
         WHERE A.AR_NUM = B.AR_NUM
           AND A.RECEIVE_NUM = C.RECEIVE_NUM
           AND C.RECEIVE_TYPE_CD IN ('B02', 'B19', 'B10')
           AND A.RECD_STATUS = 'L'
           AND B.RECD_STATUS = 'L'
           AND C.RECEIVE_NUM = AD.RECEIVE_NUM
           AND AD.ADVANCE_NUM = SD.ADVANCE_NUM
           AND SD.SAP_SUSPENSE_NUM = SE.SAP_SUSPENSE_NUM
           AND SE.BANK_ACCT_NO = BF.BANK_ACCT_NO
           AND A.RECEIVE_DATE BETWEEN #TRX_DATEFR# AND #TRX_DATETO#
           AND B.UPJANG_CD = D.UPJANG
           AND D.MAIN_UPJANG = #MAIN_UPJANG#
        ) A, FMS_UPJANG B
 WHERE A.MAIN_UPJANG = B.UPJANG        
 GROUP BY A.MAIN_UPJANG, B.UPJANGNM_DISP, A.RECEIVE_DATE
 ORDER BY A.MAIN_UPJANG, A.RECEIVE_DATE
 -->
   	    
<!-- 
SELECT A.MAIN_UPJANG,
       (SELECT UPJANGNM_DISP FROM FMS_UPJANG WHERE UPJANG = A.MAIN_UPJANG) MAIN_UPJANGNM,
       V.UPJANG,
       (SELECT UPJANGNM FROM SCO_UPJANG_MST_V WHERE UPJANG = V.UPJANG) UPJANGNM,
       SUBSTR(V.BOND_DATE,1,4)||'-'||SUBSTR(V.BOND_DATE,5,2)||'-'||SUBSTR(V.BOND_DATE,7,2) BOND_DATE,
       V.RCP_AMT1,
       V.RCP_AMT2,       
       V.RCP_AMT1 RCP_AMT1FORSUM,
       V.GUBUN,
       V.ACCTNM,
       V.VIRACTNUM,
       (SELECT NM_KOR FROM HLDC_HR_PERSONAL WHERE SABUN = A.PART_SALES_SABUN) PART_SALES_SABUNNM,
       V.REMARK, 
       A.MAIN_UPJANG||'-'||V.UPJANG PL_CD,
       '1' PL_UP_CD,
       '0' BL_SHOW,
       2 LEVEL_NO,
       '+' BL_PLUS 
  FROM (SELECT  D.MAIN_UPJANG                   UPJANG
              , C.RECEIPT_DATE                  BOND_DATE
              , SUM(DECODE(C.AUTO_GUBUN, 'N',C.AMOUNT,0)) AS RCP_AMT1   수기입금
              , SUM(DECODE(C.AUTO_GUBUN, 'N',0,C.AMOUNT)) AS RCP_AMT2   가상계좌 입금
               DECODE(C.AUTO_GUBUN, 'N', '수기입금', 'Y', '가상계좌입금') GUBUN,
               (SELECT ACCTNM6 FROM HLDC_ST_ACCOUNT WHERE ACCTCD = C.ACCTCD) ACCTNM,
               (SELECT VIRACTNUM FROM HLDC_TR_VIR_ACCOUNT_TR_LIST WHERE ADDDATE||'-'||MOACCNT||'-'||TRNNUMBER = C.TRNUMBER) VIRACTNUM,
               C.REMARK
          FROM HLDC_FM_RECEIPT C, FMS_UPJANG D
        WHERE  (C.RECEIPT_DATE  BETWEEN #TRX_DATEFR# AND #TRX_DATETO#)
        AND    (C.DCGUBUN       = '2')
        AND    (C.ACCTCD        IN ('1110411', '2110441')) 외상,선수만.. 잡이익은 제외
		<isNotNull col="UPJANG">
		AND    (C.UPJANG          LIKE #UPJANG#)
		</isNotNull>
		AND    (C.UPJANG = D.UPJANG)
		GROUP BY D.MAIN_UPJANG, C.RECEIPT_DATE
        ) V,
        FMS_UPJANG A
WHERE (V.UPJANG = A.UPJANG)
AND   (1=1)
<isNotNull col="MAIN_UPJANG">
AND   (A.MAIN_UPJANG          = #MAIN_UPJANG#)
</isNotNull>
ORDER BY A.MAIN_UPJANG,
         V.UPJANG,
         V.BOND_DATE
 -->         
</statement>
	<input default-name="ds_cond">		 
		<col name="MAIN_UPJANG" size="6" type="NUMERIC" description="업장코드" /> 
		<col name="UPJANG" size="6" type="NUMERIC" description="업장코드" /> 
		<col name="TRX_DATEFR" size="255" type="VARCHAR" description="" /> 
		<col name="TRX_DATETO" size="255" type="VARCHAR" description="" /> 

	</input>
	<output default-name="ds_list">      


	</output>
</query>