<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
SELECT UPJANG,
       UPJANGNM_DISP,
       SUBSTR(OP_DATE,1,6) OP_DATE,
       SUM(LEAVING_QTY) LEAVING_QTY,
       SUM(OVER_QTY)  OVER_QTY,
       SUM(OUT_QTY)   OUT_QTY,
       SUM(RAW_AMT)  RAW_AMT,
       SUM(MEAL_QTY) MEAL_QTY,
       CASE WHEN  SUM(OUT_QTY)=0 THEN 0 ELSE   ROUND((SUM(LEAVING_QTY)+SUM(OVER_QTY))/SUM(OUT_QTY),2)            END    LOSS_RATE,
       CASE WHEN  SUM(MEAL_QTY)=0 THEN 0 ELSE  ROUND((SUM(LEAVING_QTY)+SUM(OVER_QTY))*1000/SUM(MEAL_QTY),2)       END    MAN_LEAVING_QTY,
       CASE WHEN  SUM(OUT_QTY)=0 THEN 0 ELSE   ROUND((SUM(LEAVING_QTY)*SUM(RAW_AMT))/SUM(OUT_QTY),2)              END    LEAVING_LOSS_AMT,
       CASE WHEN  SUM(OUT_QTY)=0 THEN 0 ELSE   ROUND((SUM(OVER_QTY)*SUM(RAW_AMT))/SUM(OUT_QTY),2)                 END    OVER_LOSS_AMT
FROM (
	SELECT A.UPJANG,
           C.UPJANGNM_DISP,
           A.OP_DATE,
           --SUM(NVL(A.LEAVING_QTY,0))   LEAVING_QTY, --잔반량
           A.LEAVING_QTY,
           --SUM(NVL(A.OVER_QTY,0))      OVER_QTY,    --잔식량
           A.OVER_QTY,
           --A.MEAL_QTY,         --식수
           SUM(NVL(E.REAL_MEAL_QTY,0)) MEAL_QTY,	--실제식수
           SUM(NVL(B.OUT_QTY,0))       OUT_QTY,     --재료사용량
           --SUM(NVL(A.RAW_AMT,0))       RAW_AMT ,    --식재료비
           A.RAW_AMT,
           CASE WHEN SUM(NVL(B.OUT_QTY,0))=0       THEN 0 ELSE ROUND(((A.LEAVING_QTY+A.OVER_QTY)/ SUM(B.OUT_QTY))*100,  2) END LOSS_RATE,          --LOSS율
           CASE WHEN SUM(NVL(E.REAL_MEAL_QTY,0))=0 THEN 0 ELSE ROUND((A.LEAVING_QTY+A.OVER_QTY) * 1000 / SUM(E.REAL_MEAL_QTY), 2) END MAN_LEAVING_QTY,    --1인 잔반식량
           CASE WHEN SUM(NVL(B.OUT_QTY,0))=0       THEN 0 ELSE ROUND((A.LEAVING_QTY*A.RAW_AMT)  / SUM(B.OUT_QTY),       2) END LEAVING_LOSS_AMT,   --잔반 LOSS금액
           CASE WHEN SUM(NVL(B.OUT_QTY,0))=0       THEN 0 ELSE ROUND((A.OVER_QTY*A.RAW_AMT)     / SUM(B.OUT_QTY),       2) END OVER_LOSS_AMT       --잔식 LOSS금액
FROM   FMO_OP_DIARY A,
       (
           SELECT UPJANG,SDATE,SUM(OUT_QTY) OUT_QTY --당일 출고량의 합-당일 재료사용량
           FROM   FMP_SUBUL
           WHERE (1=1)
			<isNotNull col="OP_FDATE">
			AND    SUBSTR(SDATE,1,6)&gt;=#OP_FDATE#
			</isNotNull>
			<isNotNull col="OP_TDATE">
			AND    SUBSTR(SDATE,1,6)&lt;=#OP_TDATE#
			</isNotNull>
           GROUP BY UPJANG,SDATE
       ) B,
       FMS_UPJANG C
       ,FMO_OP_MENU E
<isEqual col="GBN1" value="2">
       ,FMS_USER_UPJANG D
</isEqual>
WHERE  1=1
AND A.UPJANG=E.UPJANG(+)
AND A.OP_DATE=E.OP_DATE(+)
<isNotNull col="OP_FDATE">
AND    SUBSTR(A.OP_DATE,1,6)&gt;=#OP_FDATE#
</isNotNull>
<isNotNull col="OP_TDATE">
AND    SUBSTR(A.OP_DATE,1,6)&lt;=#OP_TDATE#
</isNotNull>
AND    A.OP_DATE=B.SDATE(+)
AND    A.UPJANG=B.UPJANG(+)
<isEqual col="GBN1" value="0">
AND    A.UPJANG=C.UPJANG(+)--본부 전체
</isEqual>
<isEqual col="GBN1" value="1">
AND    C.MAIN_UPJANG=#g_Main_Upjang#--본사 전체 
AND    A.UPJANG=C.UPJANG
</isEqual>
<isEqual col="GBN1" value="4">
AND    C.UPJANG=#UPJANG#--단일 업장 검색
AND    A.UPJANG=C.UPJANG
</isEqual>
<isEqual col="GBN1" value="2">
AND    A.UPJANG=C.UPJANG
AND    D.SABUN=#g_EmpNo#	--사업장 전체 검색
AND    C.UPJANG=D.UPJANG
</isEqual>	
GROUP BY A.UPJANG, C.UPJANGNM_DISP, A.OP_DATE,A.LEAVING_QTY,A.OVER_QTY,A.RAW_AMT
     )
GROUP BY UPJANG,UPJANGNM_DISP,SUBSTR(OP_DATE,1,6)	</statement>
	<input default-name="ds_input">
	</input>
	<output default-name="ds_list">
	</output>
</query>
