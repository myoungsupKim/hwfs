<?xml version="1.0" encoding="euc-kr"?>
<query>
	<type>select</type>
	<description><![CDATA[자재구성조회]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
<![CDATA[
SELECT /*+ USE_HASH (AA CC) */
       AA.UPJANG,
       AA.RECIPE_CD,             --레시피코드
       AA.ITEM_SEQ,              --자재순번
       AA.ITEM_CODE,             --레시피명
       BB.ITEM_NAME,             --자재명
       BB.ITEM_SIZE,             --규격
       BB.PO_UOM,                --구매단위
       DD.FEATURE_NAME,          --자재특성
       AA.NEED_QTY,              --1인소요량
       CC.OP_PRICE MARGIN_PRICE, --구매단가
       BB.DISUSE_RATE,           --페기율
       AA.CUT_SPEC,              --커팅규격
       BB.CAL,                   --100G당 에너지
       DECODE(NVL(CC.OP_PRICE,0) ,0, 'Y' , 'N' ) RESTRICT_YN,   --상태
       ROUND(AA.NEED_QTY*(100-BB.DISUSE_RATE)/100,2) EDIBLE_QTY,--가식부량
       ROUND(AA.NEED_QTY * (NVL(CC.OP_PRICE,0) / BB.KG_CONVERT_RATE / 1000) ) PERSON_PRICE,    --1인원가
       ROUND( NVL(BB.CAL,0) * ROUND(AA.NEED_QTY*(100-BB.DISUSE_RATE)/100,2) / 100,2) CAL_CALC, --가식부량에 대한 에너지
       ROUND(NVL(CC.OP_PRICE,0) / BB.KG_CONVERT_RATE / 1000,2) AS GRAM_PRICE                   --G당 단가
  FROM FMM_STD_RECIPE_ITEM AA ,
       (
       SELECT A.ITEM_CODE,
              A.ITEM_NAME,
              A.ITEM_SIZE,
              A.PO_UOM,
              A.KG_CONVERT_RATE ,
              B.CAL,
              B.WATER,
              B.PROT,
              B.FAT,
              B.CARBO,
              B.FIBER,
              B.ASH,
              B.CA,
              B.P ,
              B.FE,
              B.NA,
              B.K,
              B.VITA_A,
              B.RETIN,
              B.B_CAROT,
              B.THIA,
              B.RIBO,
              B.NIACIN ,
              B.VITA_C,
              B.CHOLE,
              B.DISUSE_RATE
         FROM
              (
              SELECT B.ITEM_CODE,
                     B.ITEM_NAME,
                     B.ITEM_SIZE,
                     B.PO_UOM,
                     B.TAX_CODE,
                     B.KG_CONVERT_RATE
                FROM HLDC_PO_ITEM_MST B,
                     HLDC_PO_TREAT_UPJANG A
               WHERE A.ITEM_CODE = B.ITEM_CODE
                 AND B.ITEM_CODE BETWEEN '010000000000' AND '019999999999'
                 AND A.UPJANG =
                     (
                     SELECT C.AP_UNITPRICE_UPJANG
                       FROM HLDC_ST_UPJANG C
                      WHERE C.UPJANG = #UPJANG#
                     )
                 AND A.USE_YN = 'Y'
                 AND B.USE_YN = 'Y'
               UNION ALL
              SELECT A.ITEM_CODE,
                     A.ITEM_NAME,
                     A.ITEM_SIZE,
                     A.PO_UOM,
                     A.TAX_CODE,
                     A.KG_CONVERT_RATE
                FROM FMP_OTCUST_ITEM A,
                     FMP_OTCUST_PRICE_AVA_V B ,
                     (
                     SELECT UPJANG,
                            ITEM_CODE,
                            MAX(SDATE) AS SDATE
                       FROM FMP_OTCUST_PRICE_AVA_V
                      WHERE UPJANG =
                            (
                            SELECT Z.OTCUST_PRICE_UPJANG
                              FROM FMS_UPJANG Z
                             WHERE Z.UPJANG = #UPJANG#
                            )
                        AND SDATE <= NVL( '' ,TO_CHAR(SYSDATE, 'YYYYMMDD' ) )
                      GROUP BY UPJANG,
                            ITEM_CODE
                     ) C
               WHERE A.ITEM_CODE = B.ITEM_CODE
                 AND B.UPJANG = C.UPJANG
                 AND B.SDATE = C.SDATE
                 AND B.ITEM_CODE = C.ITEM_CODE
                 AND A.USE_YN = 'Y'
                 AND B.USE_YN = 'Y'
              ) A,
              (
              SELECT ITEM_CODE, CAL, WATER, PROT, FAT, CARBO, FIBER, ASH, CA, P, FE, NA, K, VITA_A, RETIN, B_CAROT, THIA, RIBO, NIACIN, VITA_C, CHOLE, DISUSE_RATE
                FROM	FMP_ITEM_NUT
               WHERE	UPJANG = #UPJANG#
               UNION ALL
                     (
                     SELECT	ITEM_CODE, CAL, WATER, PROT, FAT, CARBO, FIBER, ASH, CA, P, FE, NA, K, VITA_A, RETIN, B_CAROT, THIA, RIBO, NIACIN, VITA_C, CHOLE, DISUSE_RATE
                       FROM	FSI_ITEM_NUT
                      WHERE ITEM_CODE IN
                            (
                            SELECT	ITEM_CODE
                              FROM	FSI_ITEM_NUT MINUS
                            SELECT	ITEM_CODE
                              FROM	FMP_ITEM_NUT
                             WHERE	UPJANG = #UPJANG#
                            )
                     )
              ) B
        WHERE A.ITEM_CODE = B.ITEM_CODE
       ) BB,  --자재리스트
       (
       SELECT /*+ USE_HASH (C A) */ A.ITEM_CODE,
              DECODE(SIGN(NVL(C.OP_PRICE, 0) ) , 0, SCC_CEIL(A.SALE_PRICE + ROUND(A.SALE_PRICE * NVL(C.OP_RATE, 0) / 100), C.CEIL_VAL) , C.OP_PRICE) AS OP_PRICE       --운영단가(1인원가)
         FROM FMS_ITEM_V B,
              FMU_OP_RATE C ,
              (
              SELECT /*+ INDEX_DESC(C PO_CONTRACT_FSALE_U1) */ #UPJANG# AS UPJANG,
                     NVL( '' , TO_CHAR(SYSDATE, 'YYYYMMDD' ) ) AS NEED_DATE,
                     C.ITEM_CODE,
                     TO_NUMBER(SUBSTR(MAX(C.ROWID||C.SALE_PRICE) , 19, 100) ) SALE_PRICE,
                     C.CENTER_CODE
                FROM HLDC_PO_CONTRACT_FSALE C,
                     HLDC_PO_UPJANG_CENTER D,
                     HLDC_ST_UPJANG E
               WHERE C.CENTER_CODE = D.CENTER_CODE
                 AND D.UPJANG = E.AP_UNITPRICE_UPJANG
                 AND E.UPJANG = #UPJANG#
                 AND C.UPJANG = E.AP_UNITPRICE_UPJANG
                 AND C.ITEM_CODE > ' '
                 AND C.CONTRACT_START <= NVL( '' , TO_CHAR(SYSDATE, 'YYYYMMDD' ) )
                 AND C.SALE_PRICE > 0
                 AND EXISTS
                     (
                     SELECT 1
                       FROM HLDC_PO_TREAT_UPJANG X
                      WHERE X.ITEM_CODE = C.ITEM_CODE
                        AND X.UPJANG = C.UPJANG
                     )
               GROUP BY C.CENTER_CODE,
                     C.UPJANG,
                     C.ITEM_CODE
              -----------
               UNION ALL
              -----------
              SELECT #UPJANG# AS UPJANG,
                     NVL( '' , TO_CHAR(SYSDATE, 'YYYYMMDD' ) ) AS NEED_DATE ,
                     A.ITEM_CODE,
                     A.SALE_PRICE,
                     0 CENTER_CODE
                FROM FMP_OTCUST_PRICE_AVA_V A ,
                     (
                     SELECT UPJANG,
                            ITEM_CODE,
                            MAX(SDATE) AS SDATE
                       FROM FMP_OTCUST_PRICE_AVA_V
                      WHERE UPJANG =
                            (
                            SELECT OTCUST_PRICE_UPJANG
                              FROM FMS_UPJANG
                             WHERE UPJANG = #UPJANG#
                            )
                        AND SDATE <= NVL( '' , TO_CHAR(SYSDATE, 'YYYYMMDD' ) )
                      GROUP BY UPJANG,
                            ITEM_CODE
                     ) B
               WHERE A.UPJANG = B.UPJANG
                 AND A.SDATE = B.SDATE
                 AND A.ITEM_CODE = B.ITEM_CODE
                 AND A.SALE_PRICE > 0
                 AND A.USE_YN = 'Y'
              ) A
        WHERE A.ITEM_CODE = B.ITEM_CODE
          AND A.UPJANG = C.UPJANG(+)
          AND A.NEED_DATE BETWEEN C.SDATE(+) AND C.EDATE(+)
          AND A.ITEM_CODE BETWEEN C.ITEM_CODE(+) AND C.ITEM_CODE(+)||'9999'
          AND C.USE_YN(+) = 'Y'
       ) CC, --단가
       (
       SELECT ITEM_CODE,
              (
              SELECT CODE_NAME
                FROM SCC_COMMON_CODE
               WHERE GROUP_CODE = 'FS0033'
                 AND CODE = ITEM_FEATURE
              ) AS FEATURE_NAME
         FROM FSI_ITEM_FEATURE
        WHERE (ITEM_CODE, CDATE) IN
              (
              SELECT ITEM_CODE,
                     MAX(CDATE) AS CDATE
                FROM FSI_ITEM_FEATURE
               WHERE (1=1)
                 AND (CENTER_CODE, CUSTCD, ITEM_CODE, APPLY_DATE) IN
                     (
                     SELECT CENTER_CODE,
                            CUSTCD,
                            ITEM_CODE,
                            MAX(APPLY_DATE) AS APPLY_DATE
                       FROM FSI_ITEM_FEATURE
                      WHERE CENTER_CODE = '300001'
                        AND APPLY_DATE BETWEEN TO_CHAR(SYSDATE, 'YYYYMMDD' ) AND ADD_MONTHS(TO_CHAR(SYSDATE, 'YYYYMMDD' ) ,1)-1
                      GROUP BY CENTER_CODE,
                            CUSTCD,
                            ITEM_CODE
                     )
               GROUP BY ITEM_CODE
              )
       ) DD   -- 자재 특성
 WHERE AA.UPJANG    = #UPJANG#
   AND AA.RECIPE_CD = #RECIPE_CD#
   AND AA.ITEM_CODE = BB.ITEM_CODE
   AND AA.ITEM_CODE = CC.ITEM_CODE(+)
   AND AA.ITEM_CODE = DD.ITEM_CODE(+)
 ORDER BY AA.ITEM_SEQ,
       AA.ITEM_CODE	]]></statement>
	<input default-name="ds_cond">
		<col name="RECIPE_NAME" size="255" type="VARCHAR" description="" /> 
	</input>
	<output default-name="ds_ItemList">
		<col name="CAL" size="22" type="NUMERIC" description="" /> 
		<col name="CAL_CALC" size="22" type="NUMERIC" description="" /> 
		<col name="CUT_SPEC" size="20" type="VARCHAR" description="" /> 
		<col name="CUT_SPEC_NAME" size="100" type="VARCHAR" description="" /> 
		<col name="DISUSE_RATE" size="22" type="NUMERIC" description="" /> 
		<col name="EDIBLE_QTY" size="22" type="NUMERIC" description="" /> 
		<col name="GRAM_PRICE" size="22" type="NUMERIC" description="" /> 
		<col name="ITEM_CODE" size="12" type="VARCHAR" description="" /> 
		<col name="ITEM_NAME" size="200" type="VARCHAR" description="" /> 
		<col name="ITEM_SEQ" size="22" type="NUMERIC" description="" /> 
		<col name="ITEM_SIZE" size="100" type="VARCHAR" description="" /> 
		<col name="ITEM_SPEC" size="0" type="VARCHAR" description="" /> 
		<col name="MARGIN_PRICE" size="22" type="NUMERIC" description="" /> 
		<col name="NEED_QTY" size="22" type="NUMERIC" description="" /> 
		<col name="PERSON_PRICE" size="22" type="NUMERIC" description="" /> 
		<col name="PO_UOM" size="10" type="VARCHAR" description="" /> 
		<col name="RECIPE_CD" size="20" type="VARCHAR" description="" /> 
		<col name="RESTRICT_YN" size="1" type="VARCHAR" description="" /> 
	</output>
</query>
