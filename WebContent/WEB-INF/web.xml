<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns="http://java.sun.com/xml/ns/javaee" 
xmlns:web="http://java.sun.com/xml/ns/javaee" 
xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="honeBasic" version="2.5">
  <display-name>hwfs</display-name>
  <context-param>
    <param-name>logbackConfigLocation</param-name>
    <param-value>/WEB-INF/config/framework/log/logback.xml</param-value>
  </context-param>

  <!-- Batch 추가 by kksoo -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
    	/WEB-INF/config/application/**/service/*.xml,
    	/WEB-INF/config/framework/service/*.xml,
    	classpath:batch/context-*.xml,
		classpath:batch/job/**/*.xml
    </param-value>
  </context-param>

 <!-- FSP 설정 START  -->
    <filter>
	    <filter-name>FSP_Filter</filter-name>
	    <filter-class>com.sz.ui.ServiceLoaderFilter</filter-class>
        <init-param>
            <param-name>servicePath</param-name>
            <param-value>config/fsp/service.xml</param-value>
        </init-param>
    </filter>
    <filter-mapping>
	    <filter-name>FSP_Filter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<servlet>
		<display-name>Xplatform Main Action Servlet</display-name>
		<servlet-name>XplatformMainServlet</servlet-name>
		<servlet-class>com.sz.ui.xplatform.XplatformMainServlet</servlet-class>
		<init-param>
			<param-name>SESSION_CHECK</param-name>
			<param-value>false</param-value>
		</init-param>
		<init-param>
			<param-name>SESSION_SERVICE</param-name>
			<param-value>SessionManager</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>XplatformMainServlet</servlet-name>
		<url-pattern>/XMain</url-pattern>
	</servlet-mapping>			
	
	<servlet>
	      <display-name>File Uploader</display-name>
	      <servlet-name>FileUploadServlet</servlet-name>
		  <servlet-class>com.sz.ui.xplatform.HttpFileManagerServlet</servlet-class>
	      <init-param>
	         <param-name>serviceName</param-name>
	         <param-value>HttpFileManagerService</param-value>
	      </init-param>
	      <!--
	      <init-param>
	         <param-name>result</param-name>
	         <param-value>N</param-value>
	      </init-param>
	      -->
	</servlet>
	<servlet-mapping>
	       <servlet-name>FileUploadServlet</servlet-name>
	       <url-pattern>/FileUploader</url-pattern>
	</servlet-mapping>
	
	<!-- Mobile FSP File Uploader 추가 2015-03-30  -->
	<servlet>
		<display-name>File Uploader Mobile</display-name>
		<servlet-name>FileUploadServletMobile</servlet-name>
		<servlet-class>com.sz.ui.file.DefaultHttpFileManagerServlet</servlet-class>
	    <init-param>
	         <param-name>serviceName</param-name>
	         <param-value>HttpFileManagerServiceMobile</param-value>
	    </init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>FileUploadServletMobile</servlet-name>
		<url-pattern>/FileUploaderMobile</url-pattern>
	</servlet-mapping>
		
	<servlet>
		<display-name>DataSet Layout</display-name>
		<servlet-name>DataSetLayoutServlet</servlet-name>
		<servlet-class>com.sz.ui.xplatform.DataSetLayoutServlet</servlet-class>
		<init-param>
			<param-name>serviceName</param-name>
			<param-value>sql#SqlMapLayoutService</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>DataSetLayoutServlet</servlet-name>
		<url-pattern>/serviceInfo</url-pattern>
	</servlet-mapping>
 <!-- FSP 설정 END  -->
 
  <filter>
    <filter-name>hone.web.filter.ClientDetectFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>

  <filter>
    <filter-name>hone.web.filter.ExceptionServletFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>

  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>

  <!-- 코멘트 처리 by kksoo
  <filter>
    <filter-name>springSecurityFilterChain</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
   -->
  <!-- User ID별로 로깅처리를 위한 Filter by kksoo --> 
  <filter>
    <filter-name>hone.web.filter.UserIdLoggingFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  
  <!-- XPLATFORM/NEXACRO의 분리를 user-agent가 아닌 url-pattern으로 분리하기 위해 설정 by kksoo --> 
  <filter-mapping>
	<filter-name>encodingFilter</filter-name>
	<url-pattern>*.do</url-pattern>
  </filter-mapping>
  
  <filter-mapping>
    <filter-name>hone.web.filter.ClientDetectFilter</filter-name>
    <url-pattern>*.xdo</url-pattern>
  </filter-mapping>

  <filter-mapping>
    <filter-name>hone.web.filter.ExceptionServletFilter</filter-name>
    <url-pattern>*.xdo</url-pattern>
  </filter-mapping>

  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>*.xdo</url-pattern>
  </filter-mapping>

  <!-- 코멘트 처리 by kksoo 
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
   -->
  <!--  User ID별로 로깅처리를 위한 Filter 패턴 by kksoo -->
  <filter-mapping>
    <filter-name>hone.web.filter.UserIdLoggingFilter</filter-name>
    <url-pattern>*.xdo</url-pattern>
    <url-pattern>*.jsp</url-pattern>	<!-- ASIS jsp로직 로그를 위해 추가 -->
  </filter-mapping> 

  <listener>
    <listener-class>hone.online.web.util.LogbackConfigListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <servlet>
    <servlet-name>spring-mvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>
      	/WEB-INF/config/application/**/web/*.xml
      	/WEB-INF/config/framework/web/*.xml
      </param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <!-- 웹 방식 추가 by kksoo -->
  <servlet-mapping>
	<servlet-name>spring-mvc</servlet-name>
	<url-pattern>*.do</url-pattern>
  </servlet-mapping>
  <!-- XPLATFORM/NEXACRO 방식 -->	
  <servlet-mapping>
    <servlet-name>spring-mvc</servlet-name>
    <url-pattern>*.xdo</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>spring-mvc</servlet-name>
    <url-pattern>/remoting/*</url-pattern>
  </servlet-mapping>

  <!-- json 방식 -->	
  <servlet-mapping>
    <servlet-name>spring-mvc</servlet-name>
    <url-pattern>*.jDo</url-pattern>
  </servlet-mapping>
  
  <!-- current request에 대한 HttpServletRequest를 가져오기 위해 설정 추가 by kksoo -->
  <listener>
	<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>
 
  <!-- SessionListener 설정 추가 by kksoo -->
  <listener>
	<listener-class>com.hwfs.cmn.listener.SessionListener</listener-class>
  </listener>
  
  <!-- CXF Servlet START by kksoo-->
  <!-- 그룹웨어 axis와 충돌로 사용 안함 
  <servlet>
		<servlet-name>cxfServlet</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
		<servlet-name>cxfServlet</servlet-name>
		<url-pattern>/webservice/*</url-pattern>
  </servlet-mapping>
   -->
  <!-- CXF Servlet END -->

  <!-- 보안설정 by kksoo -->	
  <error-page>
	<exception-type>java.lang.Throwable</exception-type>
	<location>/common/error.jsp</location>
  </error-page>
  <error-page>
    <error-code>403</error-code>
    <location>/common/error.jsp</location>
  </error-page>
  <error-page>
    <error-code>404</error-code>
    <location>/common/error.jsp</location>
  </error-page>
  <error-page>
    <error-code>500</error-code>
    <location>/common/error.jsp</location>
  </error-page>
  <mime-mapping>
    <extension>xml</extension>
    <mime-type>application/xml</mime-type>
  </mime-mapping>
  <mime-mapping>
        <extension>apk</extension>
        <mime-type>application/vnd.android.package-archive</mime-type>
    </mime-mapping>
  <welcome-file-list>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>index.xdo</welcome-file>
  </welcome-file-list>
</web-app>