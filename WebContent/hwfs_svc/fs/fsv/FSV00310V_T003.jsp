/*-----------------------------------------------------------------------------■ 시스템명     : 협력업체 > 운영관리■ 프로그램ID   : FSV00310E_S001.jsp■ 프로그램명   : 전자세금계산서담당자관리■ 작성일자     : 2010-05-20■ 작성자       : 문형광■ 이력관리     : 2010-05-20 - 최초작성 문형광 CSR#(00000)-----------------------------------------------------------------------------*/<%@ page contentType="text/html; charset=EUC-KR" %><%@ include file = "../../sc/main/common.jsp" %><%	Statement stmt             =  null;	try {		PlatformRequest platformRequest = this.proc_input(request);  		in_vl = platformRequest.getData().getVariableList(); //변수를 반환한다.		in_dl = platformRequest.getData().getDataSetList(); //객체를 반환한다		//입력 데이타                                                                                                                                                                                         		//DataSet ds_List  		= in_dl.get("ds_List");		//DataSet ds_Cond1        = in_dl.get("ds_Cond1");		String g_Sabun     		= nullToBlank(in_vl.getString("g_Sabun"));				if(conn != null && !conn.isClosed()) conn.close(); //??대충 DB연결하는거 같음.		conn = getIRISConn();				//out 데이타		DataSet ds_Cond1;				StringBuffer sbSql 	= new StringBuffer();	//sql문 버퍼생성		//		sbSql.delete(0, sbSql.length());		// 양방향 암호화        //sbSql.append("SELECT SABUN, NAME, TEL_NO, HP_NO, EMAIL		                                				\n");		sbSql.append("SELECT SABUN, NAME, SC_CRYPTO_FUN('DEC',TEL_NO_ENC ,4) AS TEL_NO, SC_CRYPTO_FUN('DEC',HP_NO_ENC ,4) AS HP_NO, SC_CRYPTO_FUN('DEC',EMAIL_ENC ,5) AS EMAIL		                                				\n");        sbSql.append("  FROM PO_SABUN_INFO             												   				\n");        sbSql.append(" WHERE SABUN = '" + g_Sabun + "'         														\n");                out_vl.add("fa_Sql", sbSql.toString());		//System.out.println(sbSql.toString());		pstmt = conn.prepareStatement(sbSql.toString());				rs = pstmt.executeQuery(); 		ds_Cond1 = this.makeDataSet(rs, "ds_Cond1");				pstmt.close();		rs.close();		/**종료**/		out_dl.add(ds_Cond1);	   	this.setResultMessage(0, "OK",out_vl);	    } catch(Exception ex) {			conn.rollback();	       this.setResultMessage(-1, ex.toString(),out_vl);		} finally {			if(rs != null) {				try {					rs.close();				}catch(Exception e) {}			}			if(pstmt != null) {				try {					pstmt.close();				}catch(Exception e) {}			}			if(stmt != null) {				try {					stmt.close();				}catch(Exception e) {}			}			if(conn != null) {				try {					conn.close();				}catch(Exception e) {}			}		}	  proc_output(response,out,out_vl,out_dl);	%>	