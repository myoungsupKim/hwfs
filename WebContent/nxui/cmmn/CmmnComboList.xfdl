<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="CmmnComboList" classname="frmComboList" inheritanceid="" position="absolute" titletext="콤보리스트" scrollbars="none" ondevicebuttondown="frmComboList_ondevicebuttondown" left="0" width="420" top="0" height="196" onload="CmmnComboList_onload" ontimer="CmmnComboList_ontimer">
    <Layouts>
      <Layout width="420" height="196">
        <Static id="staFormSize" text="" position="absolute" left="0" width="420" top="0" height="175" cssclass="sta_POP_Bg"/>
        <Static id="staTitle" text="Title" position="absolute" left="0" width="400" top="0" height="70" cssclass="sta_POP_TitleBg"/>
        <Grid id="grdList" taborder="1" useinputpanel="false" position="absolute" wheelscrollrow="1" style="border:0 solid #b2b2b2ff ;bordertype:normal 0 0 ;font:bold antialias 24 arial;" oncellclick="grdList_oncellclick" left="0" width="420" top="70" height="123" autofittype="col" scrollbars="autovert" scrollpixel="all" autosizingtype="row" extendsizetype="row">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="372"/>
              </Columns>
              <Rows>
                <Row size="55" band="head"/>
                <Row size="67"/>
              </Rows>
              <Band id="head">
                <Cell style="padding:0 0 0 10;"/>
              </Band>
              <Band id="body">
                <Cell style="align:left;padding:0 15 0 15;" wordwrap="char" autosizerow="limitmin"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Static id="staBtnClose" taborder="3" onclick="staBtnClose_onclick" left="301" top="0" right="0" height="67"/>
        <Button id="btnClose" taborder="2" onclick="btnClose_onclick" position="absolute" width="68" top="0" height="70" cssclass="btn_POP_XBtn" right="0"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false"/>
    </Objects>
    <Script type="xscript5.0"><![CDATA[
/*======================================================
 전역변수
 ======================================================*/
// arg[0] : 바인딩되는 데이타셋
// arg[1] : 타이틀
// arg[2] : Grid의 Header 명
// arg[3] : Grid의 Body에 binding 되는 columnID
// arg[4] : 메뉴로 사용할 때만 사용
this.arg = undefined;
this.maxViewCount = 7; //한번에 보여지는 최대 리스트 수
this.F_erow = 0; //20140715 콤보리스트 선택 시 색상 표현
/*======================================================
 From 관련 함수
 ======================================================*/
this.CmmnComboList_onload = function (obj:Form, e:LoadEventInfo)
{
	this.arg = application.goMain.gfn_POP_getArg();

	this.ds.copyData(this.arg[0], true);

	var count = this.ds.rowcount;
	var strTitle = this.arg[1];
	var arrHead = this.arg[2].split("|");
	var arrBody = this.arg[3].split("|");
	var arrBodyAttr = new Array();
	var bTitle;
	var borderW = this.grdList.currentstyle.border.width.replace("px","");
	var scrollW = this.grdList.vscrollbar.getOffsetWidth();

	this.grdList.setFormatColProperty(0, "size", this.grdList.getOffsetWidth() - 2 * borderW - scrollW);

	// 컬럼 속성 정보 -------------------------------
	var tmp;
	for (var i = 0; i < arrBody.length; i++) 
	{
		tmp = arrBody[i].split(":");
		if (tmp.length <= 1) 
		{
			arrBodyAttr.getSetter(i).set("String");
		}
		else if (tmp[1] == "I") 
		{
			arrBodyAttr.getSetter(i).set("Image");
			arrBody.getSetter(i).set(tmp[0]);
		}
	}
	// -------------------------------------------------

	// 타이틀 설정
	// 값이 없으면 보이지 않게 한다.
	if (application.gfn_IsNull(strTitle)) 
	{
		bTitle = false;
		this.staTitle.set_visible(false);
		this.btnClose.set_visible(false);
	}
	else 
	{
		bTitle = true;
		this.staTitle.set_text(strTitle);
		this.staTitle.set_visible(true);
		this.btnClose.set_visible(true);
	}

	var heightHEAD;
	var heightBODY;

	// Grid Header
	// 값이 없으면 보이지 않게 한다.
	if (application.gfn_IsNull(arrHead) || arrHead[0].length <= 0) 
	{
		this.grdList.deleteContentsRow("head", 0);
		heightHEAD = 0;
		heightBODY = this.grdList.getFormatRowSize(0);
	}
	else 
	{
		heightHEAD = this.grdList.getFormatRowSize(0);
		heightBODY = this.grdList.getFormatRowSize(1);
	}

	var contentsH = this.parent.getOffsetHeight();

	// Grid의 크기(높이) 설정
	// 최대 maxViewCount 가 보여질 만큼
	if (count >= this.maxViewCount) 
	{
		this.grdList.set_height(heightBODY * this.maxViewCount + heightHEAD + borderW * 2);
	}
	else if (count <= 0) 
	{
	}
	// grdList.nodatatext = "No Data";		// nodatatext Ajax 미지원
	else 
	{
		this.grdList.set_height(heightBODY * count + heightHEAD + borderW * 2);
	}

	// 높이를 정했으니 Grid에 dataset를 연결한다.
	//this.grdList.setBindDatasetObject(this.ds);
	this.grdList.set_binddataset(this.ds.id);

	// 보여줄 컬럼이 2개 이상이면 col을 추가한다.
	if (arrBody.length > 1) 
	{
		// grdList.autosizingtype = "col";

		for (var i = 0; i < arrBody.length - 1; i++) 
		{
			this.grdList.appendContentsCol();
		}

		this.grdList.set_autosizingtype("col");
	}

	// 컬럼 속성에 따른 설정 --------------------------
	for (var i = 0; i < this.grdList.getFormatColCount(); i++) 
	{
		if (arrBodyAttr[i] == "Image") 
		{
			this.grdList.setCellProperty("Body", i, "displaytype", "image");
			this.grdList.setCellProperty("Body", i, "padding", "0 5 0 5");
		}
	}
	// ----------------------------------------------------

	var colTotalWidth = 0;
	for (var i = 0; i < this.grdList.getCellCount("body"); i++) 
	{
		colTotalWidth += this.grdList.getFormatColSize(i);
	}
	if (colTotalWidth + borderW * 2 > this.grdList.getOffsetWidth()) 
	{
		if (application.gfn_IsNull(system.mobileproducttype) == false) 
		{
			this.grdList.hscrollbar.getSetter("scrollbarsize", "set_scrollbarsize").set(0);
		}
		else 
		{
			this.grdList.set_height(this.grdList.getOffsetHeight() + this.grdList.hscrollbar.getOffsetHeight());
		}
	}

	for (var i = 0; i < arrHead.length; i++) 
	{
		if (arrHead[i].length > 0) 
		{
			this.grdList.setCellProperty("Head", i, "text", arrHead[i]);
		}
	}

	for (var i = 0; i < arrBody.length; i++) 
	{
		this.grdList.setCellProperty("Body", i, "text", "bind:" + arrBody[i]);
	}


	var colSize = new Array();
	for (var i = 0; i < arrBody.length; i++) 
	{
		colSize.getSetter(i).set(this.grdList.getRealColSize(i));
	}

	if (arrBody.length > 1 && (colSize[0] + colSize[1]) < this.grdList.getOffsetWidth() - borderW * 2) 
	{
		this.grdList.setRealColSize(1, this.grdList.getOffsetWidth() - colSize[0] - borderW * 2);
	}

	var gw = this.grdList.getOffsetWidth();
	var gh = this.grdList.getOffsetHeight() + 5;

	if (bTitle) 
	{
		gh += this.staTitle.getOffsetHeight();
	}
	else 
	{
		this.grdList.set_top(0);
	}

	this.staFormSize.set_width(gw);
	this.staFormSize.set_height(gh);
	//안드로이드4.3TODO
// 	if(this.ds.rowcount  < 8)
// 	{
// 		this.staFormSize.set_height(gh);
// 	}
// 	else
// 	{
// 		this.staFormSize.set_height(gh-5);
// 	}

	this.ds.set_rowposition(-1);
	
	//this.setTimer(2,100);
	application.goMain.gfn_POP_resize(this);
}

// 안드로이드 취소, 메뉴키 관련 이벤트
this.frmComboList_ondevicebuttondown = function (obj:Form, e:DeviceButtonEventInfo)
{
	return false;
}

/*======================================================
 Component 관련 함수
 ======================================================*/
this.grdList_oncellclick = function (obj:Grid, e:GridClickEventInfo)
{
	//20140715 콤보리스트 선택 시 색상 표현
	this.F_erow = e.row;
	this.setTimer(1,200);

}

this.btnClose_onclick = function (obj:Button, e:ClickEventInfo)
{
	application.goMain.gfn_POP_close(this, "CLOSEONLY");
}

this.staBtnClose_onclick = function(obj:Static,  e:nexacro.ClickEventInfo)
{
	application.goMain.gfn_POP_close(this, "CLOSEONLY");
}

this.CmmnComboList_ontimer = function(obj:Form, e:nexacro.TimerEventInfo)
{
	this.killTimer(e.timerid);

	if(e.timerid == 1)
	{
		if (this.arg[4] == "MENU") 
		{
			var value = this.ds.getColumn(this.F_erow, "url");

			if (!application.gfn_IsNull(value)) 
			{
				if (value.substr(0, 1) == "+") 
				{
					application.goMain.gfn_POP_close(this, this.F_erow, false);
					return;
				}
			}
		}

		application.goMain.gfn_POP_close(this, this.F_erow);
	}
	else
	{
		application.goMain.gfn_POP_resize(this);
	}
}
]]></Script>
  </Form>
</FDL>
