<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="..\..\..\default_typedef.xml"/>
  <Form id="StrategyGainRateItemReg" classname="COMP_GUIDE_13" inheritanceid="" position="absolute 0 0 1252 725" titletext="전략이익률 자재등록" scrollbars="autoboth" onload="form_onload">
    <Layouts>
      <Layout>
        <Static id="Static06" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 1237 0 1252 710" anchor="top right"/>
        <Static id="Static71" text="h15" class="Guide01_AreaRed" visible="false" position="absolute 0 710 1252 725" anchor="left bottom"/>
        <Div id="div_cmnBtn" anchor="left top right" taborder="5" url="cmn::CmnBtn.xfdl" text="Div00" scrollbars="none" position="absolute 0 0 1237 30" tabstop="false"/>
        <Static id="Static60" text="h15" class="Guide01_AreaRed" visible="false" position="absolute 0 71 450 86" anchor="left top"/>
        <Static id="Static08" class="sta_WFSA_Labelbg" position="absolute 0 30 1237 71" anchor="left top right"/>
        <Static id="Static28" text="센터" class="sta_WFSA_label" position="absolute 15 40 77 61" anchor="left top"/>
        <Static id="Static04" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 0 30 93 40" anchor="left top"/>
        <Static id="Static05" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 0 61 93 71" anchor="left top"/>
        <Static id="Static07" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 0 40 15 61" anchor="left top"/>
        <Static id="Static11" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 60 40 70 61" anchor="left top"/>
        <Grid id="grd_list" taborder="3" binddataset="ds_list" scrollbars="autoboth" autoenter="select" useinputpanel="false" cellsizingtype="col" position="absolute 0 100 1236 710" anchor="all" autofittype="col">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="32"/>
                <Column size="83"/>
                <Column size="147"/>
                <Column size="228"/>
                <Column size="77"/>
                <Column size="103"/>
                <Column size="72"/>
                <Column size="99"/>
                <Column size="78"/>
                <Column size="101"/>
              </Columns>
              <Rows>
                <Row size="26" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell class="head_Excel"/>
                <Cell col="1" text="자재코드"/>
                <Cell col="2" text="자재명"/>
                <Cell col="3" text="규격"/>
                <Cell col="4" text="구매단위"/>
                <Cell col="5" text="매입단가"/>
                <Cell col="6" text="전략율"/>
                <Cell col="7" text="전략단가"/>
                <Cell col="8" text="기획율"/>
                <Cell col="9" text="기획단가"/>
              </Band>
              <Band id="body">
                <Cell text="bind:NO" expr="currow+1"/>
                <Cell col="1" displaytype="text" style="align:center middle;" text="bind:itemCode"/>
                <Cell col="2" displaytype="text" style="align:left middle;" text="bind:itemName"/>
                <Cell col="3" displaytype="text" edittype="none" style="align:left middle;" text="bind:itemSize"/>
                <Cell col="4" displaytype="text" style="align:center middle;" text="bind:itemUnit"/>
                <Cell col="5" displaytype="number" edittype="none" text="bind:contractPrice" mask="#,##0.0" editautoselect="true"/>
                <Cell col="6" displaytype="number" edittype="masknumber" style="color:blue;color2:blue;" text="bind:strategyRate" mask="#,##0.#" editautoselect="true"/>
                <Cell col="7" displaytype="number" edittype="masknumber" style="color:blue;color2:blue;" text="bind:strategyPrice" mask="#,##0.0" editautoselect="true"/>
                <Cell col="8" displaytype="number" edittype="masknumber" style="color:red;color2:red;" text="bind:planningRate" mask="#,##0.#" editautoselect="true"/>
                <Cell col="9" displaytype="number" edittype="masknumber" style="color:red;color2:red;" text="bind:planningPrice" mask="#,##0.0" editautoselect="true"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Static id="Static22" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 201 40 231 61" anchor="left top"/>
        <Static id="Static31" text="일자" class="sta_WFSA_label" position="absolute 230 40 312 61" anchor="left top"/>
        <Static id="Static32" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 263 40 273 96" anchor="left top"/>
        <Combo id="cbo_gubun" taborder="2" codecolumn="codecolumn" datacolumn="datacolumn" position="absolute 361 40 460 61" anchor="left top" class="cmb_WF_Essential">
          <Dataset id="innerdataset">
            <ColumnInfo>
              <Column id="codecolumn" size="256"/>
              <Column id="datacolumn" size="256"/>
            </ColumnInfo>
            <Rows>
              <Row>
                <Col id="codecolumn">01</Col>
                <Col id="datacolumn">상반기</Col>
              </Row>
              <Row>
                <Col id="codecolumn">16</Col>
                <Col id="datacolumn">하반기</Col>
              </Row>
            </Rows>
          </Dataset>
        </Combo>
        <Button id="btn_itemUpload" taborder="4" text="엑셀부르기" onclick="fn_itemUpload" class="btn_WF_Function" position="absolute 1160 76 1235 96" anchor="top right"/>
        <Static id="Static01" text="글자기준간격 h05" class="Guide01_AreaRed" visible="false" position="absolute 843 71 1237 76" anchor="left top"/>
        <Static id="Static02" text="글자기준간격 h05" class="Guide01_AreaRed" visible="false" position="absolute 843 95 1237 100" anchor="left top"/>
        <Combo id="cbo_centerCode" taborder="0" innerdataset="ds_center" codecolumn="centerCode" datacolumn="centerName" onitemchanged="fn_listClear" position="absolute 69 40 201 61" anchor="left top" class="cmb_WF_Essential"/>
        <Static id="Static00" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 352 40 362 96" anchor="left top"/>
        <ObjCalMonth id="cal_month" titletext="월력" taborder="1" scrollbars="none" position="absolute 273 40 353 61"/>
        <Static id="Static03" text="자재별목록" class="sta_WF_Title01" position="absolute 0 83 275 101" anchor="left top"/>
        <Static id="Static34" text="h06" class="Guide01_AreaRed" visible="false" position="absolute -5 95 291 101" anchor="top right"/>
        <Static id="Static41" text="엑셀 업로드 시 전략율,기획율은 재계산 합니다." onclick="Static41_onclick" class="sta_WF_DiscInfo" position="absolute 755 78 1068 98" anchor="top right"/>
        <Div id="div_excel" taborder="6" style="background:#f0f5ffff;border:1 solid #808080ff ;" visible="false" position="absolute 490 287 771 440">
          <Layouts>
            <Layout>
              <Static id="Static00" class="sta_WF_AlertMessege" position="absolute -1 0 279 150"/>
              <Static id="Static02" text="◎ 엑셀 업로드 작업 체크" class="sta_WF_MessegeTitle" position="absolute 4 0 269 28" anchor="left top"/>
              <Static id="Static01" class="sta_WF_AltMsgInformationImg" position="absolute 12 65 46 99" anchor="left top"/>
              <TextArea id="TextArea00" taborder="1" value="엑셀 업로드 자료에 대한 오류사항을 체크중입니다.                       오류가 없는 경우 저장 확인여부 메시지를 반드시 확인하십시요." wordwrap="word" class="txt_WF_Messege" position="absolute 58 45 269 127" anchor="all"/>
            </Layout>
          </Layouts>
        </Div>
        <ObjCalendar id="cal_date" titletext="캘린더" taborder="7" text="20150101" scrollbars="none" position="absolute 470 40 566 61" enable="false"/>
        <Static id="Static09" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 460 41 470 97" anchor="left top"/>
        <Button id="btn_template" taborder="8" text="엑셀템플릿" onclick="btn_template_onclick" class="btn_WF_Function" position="absolute 1081 76 1158 96" anchor="top right"/>
        <Grid id="grd_excel" taborder="9" binddataset="ds_excel" autoenter="select" useinputpanel="false" cellsizingtype="col" autofittype="col" position="absolute 1305 102 2273 215" anchor="all" visible="false">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="32"/>
                <Column size="83"/>
                <Column size="147"/>
                <Column size="228"/>
                <Column size="77"/>
                <Column size="103"/>
                <Column size="72"/>
                <Column size="99"/>
                <Column size="78"/>
                <Column size="101"/>
              </Columns>
              <Rows>
                <Row size="26" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell class="head_Excel"/>
                <Cell col="1" text="자재코드"/>
                <Cell col="2" text="자재명"/>
                <Cell col="3" text="규격"/>
                <Cell col="4" text="구매단위"/>
                <Cell col="5" text="매입단가"/>
                <Cell col="6" text="전략율"/>
                <Cell col="7" text="전략단가"/>
                <Cell col="8" text="기획율"/>
                <Cell col="9" text="기획단가"/>
              </Band>
              <Band id="body">
                <Cell text="bind:NO" expr="currow+1"/>
                <Cell col="1" displaytype="text" style="align:center middle;" text="bind:itemCode"/>
                <Cell col="2" displaytype="text" style="align:left middle;" text="bind:itemName"/>
                <Cell col="3" displaytype="text" edittype="none" style="align:left middle;" text="bind:itemSize"/>
                <Cell col="4" displaytype="text" style="align:center middle;" text="bind:itemUnit"/>
                <Cell col="5" displaytype="number" edittype="none" text="bind:contractPrice" mask="#,##0.0" editautoselect="true"/>
                <Cell col="6" displaytype="number" edittype="masknumber" style="color:blue;color2:blue;" text="bind:strategyRate" mask="#,##0.#" editautoselect="true"/>
                <Cell col="7" displaytype="number" edittype="masknumber" style="color:blue;color2:blue;" text="bind:strategyPrice" mask="#,##0.0" editautoselect="true"/>
                <Cell col="8" displaytype="number" edittype="masknumber" style="color:red;color2:red;" text="bind:planningRate" mask="#,##0.#" editautoselect="true"/>
                <Cell col="9" displaytype="number" edittype="masknumber" style="color:red;color2:red;" text="bind:planningPrice" mask="#,##0.0" editautoselect="true"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <ProgressBar id="pbr_status" taborder="10" text="전략이익율 생성작업" max="100" min="0" visible="false" position="absolute 469 74 752 98" anchor="top right"/>
        <Button id="btn_errorView" taborder="11" text="오류메시지확인" onclick="btn_errorView_onclick" class="btn_WF_Function" visible="false" position="absolute 359 76 460 96" anchor="left top"/>
      </Layout>
    </Layouts>
    <Bind>
      <BindItem id="item0" compid="cbo_centerCode" propid="value" datasetid="ds_search" columnid="schCenter"/>
      <BindItem id="item2" compid="cbo_gubun" propid="value" datasetid="ds_search" columnid="schGubun"/>
      <BindItem id="item5" compid="cal_date" propid="text" datasetid="ds_date" columnid="sDate"/>
    </Bind>
    <Objects>
      <Dataset id="ds_center" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="centerCode" type="STRING" size="256"/>
          <Column id="centerName" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_list" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false" oncolumnchanged="ds_list_oncolumnchanged">
        <ColumnInfo>
          <Column id="rowNum" type="STRING" size="256"/>
          <Column id="itemCode" type="STRING" size="256"/>
          <Column id="itemName" type="STRING" size="256"/>
          <Column id="itemSize" type="STRING" size="256"/>
          <Column id="itemUnit" type="STRING" size="256"/>
          <Column id="contractPrice" type="STRING" size="256"/>
          <Column id="strategyRate" type="STRING" size="256"/>
          <Column id="strategyPrice" type="STRING" size="256"/>
          <Column id="planningRate" type="STRING" size="256"/>
          <Column id="planningPrice" type="STRING" size="256"/>
          <Column id="schCenter" type="STRING" size="256"/>
          <Column id="schDate" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_search" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false" oncolumnchanged="ds_search_oncolumnchanged">
        <ColumnInfo>
          <Column id="schCenter" type="STRING" size="256"/>
          <Column id="schMonth" type="STRING" size="256"/>
          <Column id="schGubun" type="STRING" size="256"/>
          <Column id="schDate" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_searchValid" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="schCenter" type="STRING" size="256"/>
          <Column id="schMonth" type="STRING" size="256"/>
          <Column id="schGubun" type="STRING" size="256"/>
          <Column id="schDate" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="schCenter">title:센터,required:true,focus:cbo_centerCode</Col>
            <Col id="schMonth">title:일자,required:true,focus:cal_month</Col>
            <Col id="schGubun">title:구분,required:true,date;true,focus:cbo_gubun</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_listCopy" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false" oncolumnchanged="ds_list_oncolumnchanged">
        <ColumnInfo>
          <Column id="rowNum" type="STRING" size="256"/>
          <Column id="itemCode" type="STRING" size="256"/>
          <Column id="itemName" type="STRING" size="256"/>
          <Column id="itemSize" type="STRING" size="256"/>
          <Column id="itemUnit" type="STRING" size="256"/>
          <Column id="contractPrice" type="STRING" size="256"/>
          <Column id="strategyRate" type="STRING" size="256"/>
          <Column id="strategyPrice" type="STRING" size="256"/>
          <Column id="planningRate" type="STRING" size="256"/>
          <Column id="planningPrice" type="STRING" size="256"/>
          <Column id="schCenter" type="STRING" size="256"/>
          <Column id="schDate" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_date" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="sDate" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_excel" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="rowNum" type="STRING" size="256"/>
          <Column id="itemCode" type="STRING" size="256"/>
          <Column id="itemName" type="STRING" size="256"/>
          <Column id="itemSize" type="STRING" size="256"/>
          <Column id="itemUnit" type="STRING" size="256"/>
          <Column id="contractPrice" type="STRING" size="256"/>
          <Column id="strategyRate" type="STRING" size="256"/>
          <Column id="strategyPrice" type="STRING" size="256"/>
          <Column id="planningRate" type="STRING" size="256"/>
          <Column id="planningPrice" type="STRING" size="256"/>
          <Column id="schCenter" type="STRING" size="256"/>
          <Column id="schDate" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="rowNum">1</Col>
            <Col id="itemCode">F100001</Col>
            <Col id="itemName">경기미 </Col>
            <Col id="itemSize">면)[20kg/포] </Col>
            <Col id="itemUnit">포</Col>
            <Col id="contractPrice">756.8</Col>
            <Col id="strategyPrice">832.48</Col>
            <Col id="planningPrice">832.48</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_save" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="rowNum" type="STRING" size="256"/>
          <Column id="itemCode" type="STRING" size="256"/>
          <Column id="itemName" type="STRING" size="256"/>
          <Column id="itemSize" type="STRING" size="256"/>
          <Column id="itemUnit" type="STRING" size="256"/>
          <Column id="contractPrice" type="STRING" size="256"/>
          <Column id="strategyRate" type="STRING" size="256"/>
          <Column id="strategyPrice" type="STRING" size="256"/>
          <Column id="planningRate" type="STRING" size="256"/>
          <Column id="planningPrice" type="STRING" size="256"/>
          <Column id="schCenter" type="STRING" size="256"/>
          <Column id="schDate" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_saveRow" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="rowNum" type="STRING" size="256"/>
          <Column id="itemCode" type="STRING" size="256"/>
          <Column id="itemName" type="STRING" size="256"/>
          <Column id="itemSize" type="STRING" size="256"/>
          <Column id="itemUnit" type="STRING" size="256"/>
          <Column id="contractPrice" type="STRING" size="256"/>
          <Column id="strategyRate" type="STRING" size="256"/>
          <Column id="strategyPrice" type="STRING" size="256"/>
          <Column id="planningRate" type="STRING" size="256"/>
          <Column id="planningPrice" type="STRING" size="256"/>
          <Column id="schCenter" type="STRING" size="256"/>
          <Column id="schDate" type="STRING" size="256"/>
          <Column id="saveFlag" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript4.0"><![CDATA[/*
  화 면 명 : GainRateSetMngt
  파 일 명 : GainRateSetMngt.xfdl
  기    능 : 식재영업 / 기준관리 / 단가관리 / 전략이익율 자재등록

    수정일    수정자                  수정내용
  ----------   -------  --------------------------------------------------
  2015.05.15   최성연   최초 생성
  
  1) 처리사항
  - 엑셀 업로드 시 업로드 한 금액을 기준으로 율을 자동으로 계산함
    : 엑셀 업로드 양식은 비율 외에 금액만 처리 함
  
  2) 수정 사항
  - 전략단가 : 매입단가 기준 전략율을 반영
  - 기획단가 : 전략단가 기준 기획율을 반영
  
  3) 화면 상단 공통 버튼 
  - 조회, 삭제, 저장, 도움말 버튼만 활성화 함
  
*/

/************************************************************************************************
 * 공통 라이브러리 INCLUDE 영역 (필수)
************************************************************************************************/
include "lib::lib_com.xjs";



/************************************************************************************************
 * FORM 변수 선언 영역 (필수)
************************************************************************************************/
var fv_processCnt = 0;			//처리건수
var fv_objColInfo;				//데이터셋 컬럼정보
var fv_excelFlag = false;		//엑셀업로드 후 전략, 기획단가 재계산 여부
var fv_excelFlag2 = false;		//엑셀업로드 저장 여부 CHECK

// 저장관련 변수
var fv_saveFlag = "";			//신규저장 시 CallBack 처리 구분
var fv_saveRowCnt;				//저장대상 Row Count
var fv_saveRow;					//저장대상 Row Index
var fv_errorFlag;				//에러발생 여부(Y/N)
var fv_errorMsg;				//에러발생 메시지

/************************************************************************************************
 * FORM EVENT 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : Form Load (필수)
 *---------------------------------------------------------------------------------------------*/
function form_onload(obj:Form, e:LoadEventInfo)
{	
	// Form Load 시 공통 기능 처리(obj:Form, bCreateEvent:이벤트 생성 여부)
	gfn_formOnLoad(this);
	
	// 초기값 셋팅
	fn_init();
}


/*----------------------------------------------------------------------------------------------
 * 설명      : 초기값 셋팅
 *---------------------------------------------------------------------------------------------*/
function fn_init()
{
	// 업데이트여부를 체크할 DataSet, 여러개 있을 경우 ;로 구분
	v_ds_check = "ds_list";
	
	//조회조건을 초기화한다.
	var nRow= ds_search.addRow();
	ds_search.setColumn(nRow, "schCenter", "");							// 센터코드
	ds_search.setColumn(nRow, "schGubun", "01");						// 구분(상반기 기본 SET)
	
	// 월력 초기화(해당Form, 값지정, 값변경시 실행할 callBack함수, dataset과 bind)
	cal_month.fn_initMonthCal(this, gfn_getYear()+gfn_getMonth(), "", ds_search, "schMonth", "Y");

	// 조회일자 SET
	cal_date.fn_initMonthCal(this, "", "", ds_date, "sDate", "");

	// 센터정보 COMBO 초기화 : 조건
	fn_searchCenter();
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 화면 닫기 전 변경 유무 체크 (필수-Frame에서 창 닫힐때 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_close()
{	
//	// v_ds_check 미사용시 변경사항 체크(입력 프로그램일때 변경되는 Dataset 전체 기술)
// 	if (gfn_dsIsUpdated(ds_list) == true) 
// 	{
// 		// 변경된 데이터가 있습니다. 현재 화면을 닫겠습니까?
//         if (!gfn_confirm("confirm.before.movepage")) return false;
//     }
//     
//	// 조회프로그램에도 Return true; 기술해 주세요!
// 	return true;

	// v_ds_check 사용시 변경사항 체크
	if(gfn_length(v_ds_check) == 0) 
	{	
		// v_ds_check 설정기준 변경사항 체크
		if (gfn_isDataChange() == true) 
		{		
			// 변경된 데이터가 있습니다. 현재 화면을 닫겠습니까?
			if (!gfn_confirm("confirm.before.movepage")) return false;
		}
	}
    
	// 조회프로그램에도 Return true; 기술해 주세요!
	return true;
}

/************************************************************************************************
 * 공통기능 FUNCTION 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 조회 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_search()
{
	var nRow= ds_search.rowposition;
	ds_search.setColumn(nRow, "schDate", ds_search.getColumn(nRow, "schMonth")+ds_search.getColumn(nRow, "schGubun"));	// 기준일자	

	// 조회시 Validation Check
	if (gfn_validCheck(ds_search, ds_searchValid, true) == false) return;

    // Grid sort 표시 초기화(필수)
    gfn_clearSortMark(grd_list);
    
   	//서비스 쿼리 결과로 데이터가 없는 경우 데이터셋 컬럼정보가 사라지는 현상을 복원하기 위해 현재 컬럼정보 저장 
	fv_objColInfo = gfn_getDatasetInfo (ds_list);
    
    var strSvcID    = "search";
    var strURL      = "fm/fms/strategyGainRateItemReg/selectList.xdo";
    var strInDs     = "ds_search=ds_search:A";
    var strOutDs    = "ds_list=ds_list ds_date=ds_date";
    var strArg      = "";
    var strCallback = "fn_callBack";
    var bAsync      = true;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 신규 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_insert()
{	
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 삭제 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_delete()
{
	var nRowCnt = ds_list.getRowCount();	// DataSet Count
	var nRow= ds_search.rowposition;

	// 삭제할 자료 여부 CHECK
	if(nRowCnt == 0) 
	{
		var sMsg = "삭제할 데이터가 없습니다.";
		gfn_alert(sMsg, "", "A");
		return;
	}

	ds_search.setColumn(nRow, "schDate", ds_search.getColumn(nRow, "schMonth")+ds_search.getColumn(nRow, "schGubun"));	// 기준일자	

	// 조회시 Validation Check
	if (gfn_validCheck(ds_search, ds_searchValid, true) == false) return;

	var sMsg = "자재별 전략이익율을 삭제합니다.\n계속 진행 하시겠습니까?\n\n";
	if (!gfn_confirm(sMsg, "", "C")) return;

	// 삭제 Transaction
    var strSvcID    = "delete";
    var strURL      = "fm/fms/strategyGainRateItemReg/deleteList.xdo";
	var strInDs     = "ds_search=ds_search:A";
    var strOutDs    = "";
    var strArg      = "";
    var strCallback = "fn_callBack";
    var bAsync      = true;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 저장 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_save()
{
	var nRowCnt = ds_list.getRowCount();	// DataSet Count

	// 저장할 자료 여부 CHECK
	if(nRowCnt == 0) 
	{
		gfn_alert("msg.save.nodata", "저장할 데이터");	// 저장할 데이터가 없습니다.
		return;
	}
	// 변경내역 여부 CHECK
 	if (gfn_dsIsUpdated(ds_list) == false) 
 	{
 		gfn_alert("msg.save.nochange");	// 변경된 내역이 없습니다.
 		return;
 	}

	// 조회시 Validation Check : 저장 시 Check
	if (gfn_validCheck(ds_search, ds_searchValid, true) == false) return;

// 	if (fv_excelFlag2 == true) {
// 		sMsg = "엑셀 업로드 시 자료에 대한 중복여부 및 필수입력 사항을 체크합니다.\n\n";
// 	    sMsg = sMsg + "계속 진행 하시겠습니까?\n\n";
// 		if (!gfn_confirm(sMsg, "", "C")) return;
// 
// 		fn_processInit("0");
// 
// 		// 저장 시 Validation Check : 중복 CHECK	
// 		if( !fn_saveItemChk() ) 
// 		{
// 			fn_processInit("1");
// 			return;
// 		} 
// 		fn_processInit("1");
// 	}	


	var sMsg = "자재별 전략이익율을 저장합니다.\n계속 진행 하시겠습니까?";
	if (!gfn_confirm(sMsg, "", "C")) return;


	// 저장 시 조건(KEY)을 ds_list의 KEY 값으로 복사
	var nRow= ds_search.rowposition;

	for (var i = 0 ; i < nRowCnt ; i++)
	{
		if (gfn_transNullToEmpty(ds_list.getColumn(i, "itemCode"))=="") ds_list.setColumn(i, "itemCode", "");				// 자재코드
		ds_list.setColumn(i, "schCenter", ds_search.getColumn(nRow, "schCenter"));											// 센터코드
		ds_list.setColumn(i, "schDate", ds_search.getColumn(nRow, "schMonth")+ds_search.getColumn(nRow, "schGubun"));		// 기준일자	
	}

	// DataSet 복사
	ds_save.clearData();
	ds_save.copyData(ds_list);

	// 저장 Transaction
    var strSvcID    = "save";
    var strURL      = "fm/fms/strategyGainRateItemReg/saveList.xdo";
	var strInDs     = "ds_list=ds_save:A";
    var strOutDs    = "";
    var strArg      = "";
    var strCallback = "fn_callBack";
    var bAsync      = true;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 저장 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_save_old()
{
	var nRowCnt = ds_list.getRowCount();	// DataSet Count

	// 저장할 자료 여부 CHECK
	if(nRowCnt == 0) 
	{
		gfn_alert("msg.save.nodata", "저장할 데이터");	// 저장할 데이터가 없습니다.
		return;
	}
	// 변경내역 여부 CHECK
 	if (gfn_dsIsUpdated(ds_list) == false) 
 	{
 		gfn_alert("msg.save.nochange");	// 변경된 내역이 없습니다.
 		return;
 	}

	// 조회시 Validation Check : 저장 시 Check
	if (gfn_validCheck(ds_search, ds_searchValid, true) == false) return;


	// 에러메시지 버튼 숨기기
	fn_errorView(false);


	var sMsg = "자재별 전략이익율을 저장합니다.\n계속 진행 하시겠습니까?";
	if (!gfn_confirm(sMsg, "", "C")) return;

	// 저장 프로세스 시작
	fn_processSet();
}


/*----------------------------------------------------------------------------------------------
 * 설명      : 출력 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_print()
{
	
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 도움말 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_help()
{
	
}

/************************************************************************************************
 * TRANSACTION 및 CallBack 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 트랜잭션 콜백 함수 (필수)
 *---------------------------------------------------------------------------------------------*/
function fn_callBack(strSvcID, nErrorCode, strErrorMsg)
{
	// 에러시 gfn_callBack에서 메시지 제공, 화면별 특정 에러 발생시에만 사용하세요.
	if (nErrorCode < 0) 
	{
		if(strSvcID=="saveList2")
		{
			fv_errorFlag="Y";
			fv_errorMsg = strErrorMsg;
			fn_processStep();
			return;
		}
		else 
		{
			return;
		}
	}
	
    switch(strSvcID)
    {
            
		// 목록 조회
        case "search" :
            //trace(ds_list.saveXML());
            if (ds_list.getRowCount() == 0) {
				//서비스 쿼리 결과로 데이터가 없는 경우 데이터셋 컬럼정보 복원
				gfn_loadDatasetInfo (ds_list, fv_objColInfo);
            }
            // 엑셀업로드 관련 변수 초기화
			fv_excelFlag = false;
			fv_excelFlag2 = false;			
            break;
        
        // 저장
        case "save" :
			//trace("처리건수 : " + fv_processCnt);
			gfn_alert("msg.save.success");	// 저장 되었습니다.
			fn_search();					// 저장 후 재조회
            break;    

        // 저장 : N Transaction
        case "saveList2" :
			if (fv_processCnt > 0) {
				fv_errorFlag="";
				fv_errorMsg="";
			}
			//gfn_alert("msg.save.success");	// 저장 되었습니다.
			fn_processStep();
            break;    

        // 삭제
        case "delete" :
			//trace("처리건수 : " + fv_processCnt);
			gfn_alert("msg.delete.success");	// 삭제 되었습니다.
			fn_search();						// 삭제 후 재조회
            break;   
            
		// 센터 조회
        case "searchCenter" :
            //trace(ds_center.saveXML());
            fn_center_init();
            break;
    }
}

/************************************************************************************************
 * 사용자 FUNCTION 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 시스템오류 발생 시 오류메시지 저장
 *---------------------------------------------------------------------------------------------*/
function fn_error()
{
	trace("작업종료");
	fn_processInit2("2");
	
	// 에러표시 후 작업중단 창 표시
	var sMsg = "전략이익율 생성 시 오류가 발생했습니다.\n\n";
	sMsg = sMsg + "※ 기 진행중인 자료는 모두 취소됩니다.\n";
	sMsg = sMsg + "  오류메시지확인 버튼을 클릭하여 오류 메시지를 확인한 후 재 작업하세요";
	gfn_alert(sMsg, "", "A");
	
	fn_errorView(true);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 시스템오류 발생 시 오류메시지 콘트롤
 *---------------------------------------------------------------------------------------------*/
function fn_errorView(flag)
{
	if (flag) {
		btn_errorView.visible = true;
	} else {
		btn_errorView.visible = false;
	}
}

/*----------------------------------------------------------------------------------------------
 * 설명      : Progress Bar - 저장 용
 *---------------------------------------------------------------------------------------------*/
function fn_processSet()
{
	var nRowCnt = ds_list.getRowCount();	// DataSet Count
	var iCnt = 0;
	var iRow = 0;

  	// 저장 시 Progress Bar 표시 창 
 	fn_processInit2("1");

	// 저장할 Dataset Clear
	ds_save.clearData();

	// 저장 대상 개수 
	for (var i = 0 ; i < nRowCnt ; i++)
	{
		// 신규일경우 - 전체, 그외 변경분만 처리
		if (!fv_excelFlag2) {
			// 신규 및 수정건에 대해서만 처리
			if (ds_list.getRowType(i) == Dataset.ROWTYPE_INSERT || ds_list.getRowType(i) == Dataset.ROWTYPE_UPDATE) {
				iCnt++;
				// 대상을 ds_save로 복사
				ds_save.addRow();
				iRow = ds_save.rowposition;
				ds_save.copyRow(iRow, ds_list, i);
			}
		} else {
			iCnt++;
			// 전체를 ds_save로 복사
			ds_save.addRow();
			iRow = ds_save.rowposition;
			ds_save.copyRow(iRow, ds_list, i);
		}
	}
	
	
	var nRow = ds_search.rowposition;
 	// 저장 시 조건(KEY)을 ds_list의 KEY 값으로 복사
 	for (var i = 0 ; i < iCnt ; i++)
 	{
		if (gfn_transNullToEmpty(ds_save.getColumn(i, "itemCode"))=="") ds_save.setColumn(i, "itemCode", "");				// 자재코드
		ds_save.setColumn(i, "schCenter", ds_search.getColumn(nRow, "schCenter"));											// 센터코드
		ds_save.setColumn(i, "schDate", ds_search.getColumn(nRow, "schMonth")+ds_search.getColumn(nRow, "schGubun"));		// 기준일자	
 	}
	


	// 저장 대상 ROW
	fv_saveRowCnt = iCnt;

	trace("iCnt : " + iCnt);

	//trace("fv_saveRowCnt : " + fv_saveRowCnt);

	if(fv_saveRowCnt>0)
	{
		// progress bar 초기 set
		pbr_status.max = fv_saveRowCnt;
		pbr_status.step = 1;
	
		// 최초 process 실행 호출
		fv_saveRow = 0;
		fn_process(fv_saveRow);
	}
}


/*----------------------------------------------------------------------------------------------
 * 설명      : Progress Bar - 저장 용
 *---------------------------------------------------------------------------------------------*/
function fn_processInit2(flag)
{
	pbr_status.text = "전략이익율 생성작업";
	pbr_status.pos = 0;
	if (flag=="1") pbr_status.visible = true;
	else pbr_status.visible = false;
}


/*----------------------------------------------------------------------------------------------
 * 설명      : 저장 로직 처리, 1 Row 씩 처리
 * arg : 처리 Index(row id)
 *---------------------------------------------------------------------------------------------*/
function fn_process(arg)
{
	// 최초 실행 시 첫번째 Row
	if (arg=="") arg = 0;

	// 선택 Row 가 최대 Row보다 클 경우 종료
	if ((arg+1) > fv_saveRowCnt) {
		fn_processInit2("2");
		
		var sMsg = "저장 되었습니다.\r\r";
		sMsg = sMsg + "-. 처리건수 : " + fv_saveRowCnt + " 건";
		gfn_alert(sMsg, "", "A");
		
		// 재조회
		fn_search();
		return;
	}

	//trace("arg : " + arg);
	
	// saveRow Dataset Clear
	ds_saveRow.clearData();
	
	// saveRow Dataset 에 복사 
	var iIdx = ds_saveRow.addRow();
	
	ds_saveRow.copyRow(iIdx, ds_save, arg);
	// Find Row Value 지정
	fv_row = ds_save.getColumn(arg, "itemCode");
	
	
	// 저장(신규, 수정)관련 Flag Set
	if (fv_excelFlag2) 
		ds_saveRow.setColumn(0, "saveFlag", "I");
	else
		ds_saveRow.setColumn(0, "saveFlag", "U");
	

	// 저장 Transaction
 	var strSvcID    = "saveList2";
    var strURL      = "fm/fms/strategyGainRateItemReg/saveList2.xdo";
	var strInDs     = "ds_saveRow=ds_saveRow:A";
    var strOutDs    = "";
    var strArg      = "";
    var strCallback = "fn_callBack";
    var bAsync      = true;
 	
 	gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : Callback 후 작업진행 여부 CHECK 및 프로세스 호출
 *---------------------------------------------------------------------------------------------*/
function fn_processStep()
{
	if(fv_errorFlag=="Y")
	{
		// ERROR 발생 시 결과 표시
		fn_error();
		return;
	}

	
	var msg = "";
	
	//trace("fv_errorFlag : " + fv_errorFlag);

	// 해당 ROW POSITION 위치 : 최종 ROW
	var nRow = ds_list.findRowExpr("itemCode=='"+fv_row+"'");
	ds_list.rowposition = nRow;
	
	//trace("fv_row : " + fv_row);
	//trace("nRow : " + nRow);
	
	// Progress Bar SET
	pbr_status.text = "전략이익율 생성작업 ("+(fv_saveRow+1)+"/"+ fv_saveRowCnt+")";
	
	pbr_status.pos = fv_saveRow+1;
	pbr_status.stepIt();
	this.updateWindow(); // 이 부분 추가
	//trace("iRow : " + iRow);

	//다음 Transaction 처리 실행
	fv_saveRow++;
		
	//trace("fv_saveRow : " + fv_saveRow); 
	fn_process(fv_saveRow);
}


/*----------------------------------------------------------------------------------------------
 * 설명      : Progress Bar 초기화
 *---------------------------------------------------------------------------------------------*/
function fn_processInit(flag)
{
	if (flag=="0") {
		div_excel.visible = true;
	} else {
		div_excel.visible = false;
	}
	this.updateWindow(); // 이 부분 추가
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 센터정보 조회
 *---------------------------------------------------------------------------------------------*/
function fn_searchCenter()
{
    var strSvcID    = "searchCenter";
    var strURL      = "fm/fms/upriceContractUpjangSet/selectCenter.xdo";
    var strInDs     = "";
    var strOutDs    = "ds_center=ds_center";
    var strArg      = "";		
    var strCallback = "fn_callBack";
    var bAsync      = true;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 센터 COMBO 초기화 
 *---------------------------------------------------------------------------------------------*/
function fn_center_init()
{
	var defVal = "";
	ds_center.filter("centerCode != '*'");
	// COMBO 에 첫번째 Row에 기본값을 SET
	if (ds_center.getRowCount() > 1) {
		defVal = ds_center.getColumn(0, "centerCode");
	}
	//trace("centerCode : " + defVal);
	cbo_centerCode.value = defVal;
}


/*----------------------------------------------------------------------------------------------
 * 설명      : 자재별 목록의 비율 등록 시 금액 자동계산 함수 [전략단가 계산]
 * 인자      : 선택한 ROW, 입력한 비율, 계산된 금액(Return)
 *---------------------------------------------------------------------------------------------*/
function fn_calcAmt(row, rate)
{
	var v_contractPrice = 0; 	// 매입단가
	var v_calcAmt = 0;
	
	v_contractPrice = ds_list.getColumn(row, "contractPrice");

	if (v_contractPrice == 0) return 0;
	
	if (rate=="") return 0;
	
	v_calcAmt = v_contractPrice * (1 + (rate / 100));
	
	//trace("v_calcAmt : " + v_calcAmt);
	
	v_calcAmt = gfn_round(v_calcAmt, 1);

	//trace("gfn_round(v_calcAmt) : " + v_calcAmt);
	return v_calcAmt;
} 

/*----------------------------------------------------------------------------------------------
 * 설명      : 자재별 목록의 비율 등록 시 금액 자동계산 함수 [기획단가 계산]
 * 인자      : 선택한 ROW, 입력한 비율, 계산된 금액(Return)
 *---------------------------------------------------------------------------------------------*/
function fn_calcAmt2(row, rate)
{
	var v_strategyPrice = 0; 	// 전략단가
	var v_calcAmt = 0;
	
	v_strategyPrice = ds_list.getColumn(row, "strategyPrice");

	if (v_strategyPrice == 0) return 0;
	
	if (rate=="") return 0;
	
	v_calcAmt = v_strategyPrice * (1 + (rate / 100));
	
	v_calcAmt = gfn_round(v_calcAmt, 1);

	return v_calcAmt;
} 



/*----------------------------------------------------------------------------------------------
 * 설명      : 자재별 목록의 금액 등록 시 비율 자동계산 함수	[전략율 계산]
 * 인자      : 선택한 ROW, 입력한 금액, 계산된 비율(Return)
 *---------------------------------------------------------------------------------------------*/
function fn_calcRate(row, amt)
{
	var v_contractPrice = 0; 	// 매입단가
	var v_calcRate = 0;
	
	v_contractPrice = ds_list.getColumn(row, "contractPrice");

	if (v_contractPrice == 0) return 0;
	
	if (amt=="") return 0;
	
	v_calcRate = ((amt / v_contractPrice)-1) * 100;
	
	v_calcRate = gfn_round(v_calcRate, 1);

	return v_calcRate;
} 

/*----------------------------------------------------------------------------------------------
 * 설명      : 자재별 목록의 금액 등록 시 비율 자동계산 함수	[기획율 계산]
 * 인자      : 선택한 ROW, 입력한 금액, 계산된 비율(Return)
 *---------------------------------------------------------------------------------------------*/
function fn_calcRate2(row, amt)
{
	var v_strategyPrice = 0; 	// 전략단가
	var v_calcRate = 0;
	
	v_strategyPrice = ds_list.getColumn(row, "strategyPrice");

	if (v_strategyPrice == 0) return 0;
	
	if (amt=="") return 0;
	
	v_calcRate = ((amt / v_strategyPrice)-1) * 100;
	
	v_calcRate = gfn_round(v_calcRate, 1);

	return v_calcRate;
} 


/*----------------------------------------------------------------------------------------------
 * 설명      : 엑셀 업로드 시 자재코드 관련 기본 CHECK
 *---------------------------------------------------------------------------------------------*/
function fn_saveItemChk()
{
	var nRowCnt = ds_list.getRowCount();	// DataSet Count
	var v_itemCode = "";
	
	// DataSet Copy
	ds_listCopy.clearData();
	ds_listCopy.copyData(ds_list);

	this.setWaitCursor(true);

	for (var i = 0 ; i < nRowCnt ; i++)
	{
		//trace(" i : " + i);
		
		v_itemCode = gfn_transNullToEmpty(ds_list.getColumn(i, "itemCode"));
		
		// 필수입력 CHECK
		if (v_itemCode=="") {
			this.setWaitCursor(false);
			sMsg = "자재코드는 필수입력 사항입니다.";
			gfn_alert(sMsg, "", "A");
			ds_list.rowposition = i;
			return false;
		}	
		
		
		ds_listCopy.filterRow(i);
		
		var iFindRowIdx = ds_listCopy.findRowExpr("itemCode == '"+v_itemCode+"'", 0, ds_listCopy.rowcount);
		
		if (iFindRowIdx != -1)
		{
			this.setWaitCursor(false);
			sMsg = "중복된 자재코드가 존재합니다.\r\r";
			sMsg = sMsg + "- 자재코드 : " + ds_list.getColumn(i, "itemCode");
			gfn_alert(sMsg, "", "A");
			ds_list.rowposition = i;
			return false;
		}
		ds_listCopy.filter("");
	}
	this.setWaitCursor(false);
	return true;
}



/************************************************************************************************
 * 각 COMPONENT 별 EVENT 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 자재별 목록의 DS 변경 이벤트 처리
 * 해당 Column의 값이 변경될 때에만 적용
 *---------------------------------------------------------------------------------------------*/
function ds_list_oncolumnchanged(obj:Dataset, e:DSColChangeEventInfo)
{
	var v_amt;
	var v_rate;
	  
    switch(e.columnid)
    {
		// 매입단가 : 전략율, 기획율 기준으로 금액변경
		case "contractPrice" :
			//v_rate = fn_calcRate(e.row, ds_list.getColumn(e.row, "strategyPrice"));
			//ds_list.setColumn(e.row, "strategyRate", v_rate); 
			//trace("v_rate1 : " + v_rate);
			v_amt = fn_calcAmt(e.row, ds_list.getColumn(e.row, "strategyRate"));
			ds_list.setColumn(e.row, "strategyPrice", v_amt); 
			
			//v_rate = fn_calcRate2(e.row, ds_list.getColumn(e.row, "planningPrice"));
			//ds_list.setColumn(e.row, "planningRate", v_rate); 
			//trace("v_rate2 : " + v_rate);
			v_amt = fn_calcAmt2(e.row, ds_list.getColumn(e.row, "planningRate"));
			ds_list.setColumn(e.row, "planningPrice", v_amt); 
			break;

		// 전략율
        case "strategyRate" :
			if (fv_excelFlag==true) return;		// 엑셀업로드 시에는 계산하지 못하게 함
			v_amt = fn_calcAmt(e.row, ds_list.getColumn(e.row, "strategyRate"));
			ds_list.setColumn(e.row, "strategyPrice", v_amt); 
			// 전략단가 변경 시 기획단가 변경됨
			v_amt = fn_calcAmt2(e.row, ds_list.getColumn(e.row, "planningRate"));
			ds_list.setColumn(e.row, "planningPrice", v_amt); 
			//trace("strategyRate");
            break;

		// 전략단가
        case "strategyPrice" :
			v_rate = fn_calcRate(e.row, ds_list.getColumn(e.row, "strategyPrice"));
			ds_list.setColumn(e.row, "strategyRate", v_rate); 
			// 전략단가 변경 시 기획단가 변경됨
			v_amt = fn_calcAmt2(e.row, ds_list.getColumn(e.row, "planningRate"));
			ds_list.setColumn(e.row, "planningPrice", v_amt); 
			//trace("strategyPrice");
            break;

		// 기획율
        case "planningRate" :
			if (fv_excelFlag==true) return;		// 엑셀업로드 시에는 계산하지 못하게 함
			v_amt = fn_calcAmt2(e.row, ds_list.getColumn(e.row, "planningRate"));
			ds_list.setColumn(e.row, "planningPrice", v_amt); 
			//trace("planningRate");
            break;

		// 기획단가
        case "planningPrice" :
			v_rate = fn_calcRate2(e.row, ds_list.getColumn(e.row, "planningPrice"));
			ds_list.setColumn(e.row, "planningRate", v_rate); 
			//trace("planningPrice");
            break;
	
	}	
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 자재별 목록에 대한 엑셀 업로드 
 * 주) 연동 시 SQL 항목 순서와 Dataset 순서를 동일하게 해야 함
 *---------------------------------------------------------------------------------------------*/
function fn_itemUpload(obj:Button,  e:ClickEventInfo)
{

	// 조회시 Validation Check : 기본조건  Check
	if (gfn_validCheck(ds_search, ds_searchValid, true) == false) return;

	this.setWaitCursor(true);

	// 파일 선택
	var strFileName = gfn_excelFileDialog("LOAD", "EXCEL");

	if (strFileName.length == 0)
	{
		this.setWaitCursor(false);
		return;
	}

	/*********************************************************************************************
	** argument             : strFileName		파일명 (경로 포함)
	**                        strDsName			Import 대상 Dataset Name
	**                        nStartRow			Import 시작 행(사용된 Range 기준, 1 base)
	**						  bKeepColInfo		Dataset의 컬럼 정보를 유지할지 여부
	*********************************************************************************************/
	
	var rtn = gfn_importExcel(strFileName, "ds_list", 2, true);

	var v_rate;

	if (ds_list.getRowCount()>0) {
		fv_excelFlag = true;
		fv_excelFlag2 = true;
	
		// 엑셀 업로드 후에 Rowtype 속성 변경
		ds_list.updatecontrol = false;
		for(var i=0; i<ds_list.rowcount; i++)
		{	
			// Value CHECK
			if (gfn_isNum(ds_list.getColumn(i, "strategyRate"))==false) {
				ds_list.setColumn(i, "strategyRate", "0"); 
			}
			if (gfn_isNum(ds_list.getColumn(i, "strategyPrice"))==false) {
				ds_list.setColumn(i, "strategyPrice", "0"); 
			}
			if (gfn_isNum(ds_list.getColumn(i, "planningRate"))==false) {
				ds_list.setColumn(i, "planningRate", "0"); 
			}
			if (gfn_isNum(ds_list.getColumn(i, "planningPrice"))==false) {
				ds_list.setColumn(i, "planningPrice", "0"); 
			}
		
			ds_list.setRowType(i, Dataset.ROWTYPE_INSERT);
			// 전략단가
			// 전략단가가 0 이면 전략율을 0
			if (ds_list.getColumn(i, "strategyPrice")=="0") 
				v_rate = "0";
			else 
				v_rate = fn_calcRate(i, ds_list.getColumn(i, "strategyPrice"));
			ds_list.setColumn(i, "strategyRate", v_rate); 
			
			//trace("전략율 " + v_rate);
			// 기획단가	
			// 기획단가가 0 이면 기획율을 0
			if (ds_list.getColumn(i, "planningPrice")=="0") 
				v_rate = "0";
			else
				v_rate = fn_calcRate2(i, ds_list.getColumn(i, "planningPrice"));
			ds_list.setColumn(i, "planningRate", v_rate); 

			//trace("기획율 " + v_rate);
		
		}
		ds_list.updatecontrol = true;
		fv_excelFlag = false;
		gfn_alert("msg.action.success");	// 처리 되었습니다.
	}

	this.setWaitCursor(false);
	
	//trace(ds_list.saveXML());
	
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 조건 DS 변경 이벤트 처리
 * 해당 Column의 값이 변경될 때에만 적용
 *---------------------------------------------------------------------------------------------*/
function ds_search_oncolumnchanged(obj:Dataset, e:DSColChangeEventInfo)
{
    switch(e.columnid)
    {
		// 센터
        case "schCenter" :
			ds_list.clearData();
			ds_date.clearData();
            break;

		// 기준월
        case "schMonth" :
			ds_list.clearData();
			ds_date.clearData();
            break;

		// 구분
        case "schGubun" :
			ds_list.clearData();
			ds_date.clearData();
            break;

	}	
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 엑셀템플릿 버튼 클릭 이벤트 - 엑셀 업로드용 export
 *---------------------------------------------------------------------------------------------*/
function btn_template_onclick(obj:Button,  e:ClickEventInfo)
{
	gfn_exportExcel(grd_excel); 
}


/*----------------------------------------------------------------------------------------------
 * 설명      : 엑셀템플릿 버튼 클릭 이벤트 - 엑셀 업로드용 export
 *---------------------------------------------------------------------------------------------*/
function btn_errorView_onclick(obj:Button,  e:ClickEventInfo)
{
	var arrParam = new Array();

	// 전송할 파라미터 1 : 오류메시지
	arrParam[0] = fv_errorMsg;
	arrParam[1] = "strategy";

	var rtnVal = gfn_dialog("SalePriceAutoPop"					// Dialog ID
							, "X_FMS::SalePriceAutoPop.xfdl"	// Form URL
							, {fv_Contents:arrParam}			// 배열
							, null, null, null, null, null, false, true, -1);
	
}
]]></Script>
  </Form>
</FDL>
