<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="..\..\..\default_typedef.xml"/>
  <Form id="StdRecipeItemPackModify" onload="form_onload" titletext="표준레시피 자재일괄수정" position="absolute 0 0 1252 725" scrollbars="none">
    <Layouts>
      <Layout>
        <Static id="Static08" class="sta_WFSA_Labelbg" position="absolute 0 30 1237 71" anchor="left top right"/>
        <Div id="divFSI00041V" taborder="2" text="Div0" url="U_FSI::FSI00041V.xfdl" position="absolute 0 84 595 384" scrollbars="none" anchor="left top"/>
        <Div id="divFSI00042V" taborder="3" text="Div0" url="U_FSI::FSI00042V.xfdl" position="absolute 0 410 595 710" scrollbars="none" anchor="left bottom"/>
        <Div id="divFSI00043V" taborder="4" text="Div0" url="U_FSI::FSI00043V.xfdl" position="absolute 595 83 1247 672" scrollbars="none" anchor="left top right"/>
        <Div id="divFSI00044V" taborder="7" text="Div0" url="U_FSI::FSI00044V.xfdl" visible="false" position="absolute 316 376 500 408" scrollbars="none"/>
        <Static id="Static13" position="absolute 595 672 1237 700" class="sta_WFSA_Labelbg" anchor="left right bottom" onclick="Static13_onclick"/>
        <Button id="btn_FSI00047V" onclick="btn_FSI00047V_OnClick" taborder="5" text="자재 일괄 수정 이력 조회" position="absolute 1087 675 1234 697" class="btn_WF_Custom" image="" anchor="right bottom"/>
        <Button id="btnITEM_CHANGE" onclick="btnITEM_CHANGE_OnClick" taborder="6" text="자재 일괄 변경 적용  " position="absolute 938 675 1085 697" class="btn_WF_Save" image="" style="align:right;" anchor="right bottom"/>
        <CheckBox id="chk0" taborder="11" value="false" position="absolute 151 40 237 60" userdata="" onclick="chk0_onclick"/>
        <CheckBox id="chk1" taborder="12" value="false" position="absolute 238 40 324 60" userdata="" onclick="chk1_onclick"/>
        <CheckBox id="chk2" taborder="13" value="false" position="absolute 325 40 411 60" userdata="" onclick="chk2_onclick"/>
        <CheckBox id="chk3" taborder="14" value="false" position="absolute 412 40 498 60" userdata="" onclick="chk3_onclick"/>
        <CheckBox id="chk4" taborder="15" value="false" position="absolute 499 40 585 60" userdata="" onclick="chk4_onclick"/>
        <CheckBox id="chk5" taborder="16" value="false" position="absolute 586 40 672 60" userdata="" onclick="chk5_onclick"/>
        <CheckBox id="chk6" taborder="17" value="false" position="absolute 673 40 759 60" userdata="" onclick="chk6_onclick"/>
        <CheckBox id="chk7" taborder="18" value="false" position="absolute 760 40 846 60" userdata="" onclick="chk7_onclick"/>
        <CheckBox id="chk8" taborder="19" value="false" position="absolute 847 40 933 60" userdata="" onclick="chk8_onclick"/>
        <CheckBox id="chk9" taborder="20" value="false" position="absolute 934 40 1004 60" userdata="" onclick="chk9_onclick"/>
        <Button id="btnRECIPE_ALL_CHECK" onclick="btnRECIPE_ALL_CHECK_OnClick" taborder="10" text="레시피분류 선택" position="absolute 15 39 141 61" class="btn_WF_Custom" image=""/>
        <Div id="div_cmnBtn" anchor="left top right" taborder="21" url="cmn::CmnBtn.xfdl" text="Div00" scrollbars="none" position="absolute 0 0 1237 30"/>
        <Static id="Static19" text="h13" class="Guide01_AreaRed" visible="false" position="absolute 0 71 754 84"/>
        <Static id="Static04" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 0 30 93 40" anchor="left top"/>
        <Static id="Static05" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 0 61 93 71" anchor="left top"/>
        <Static id="Static07" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 0 40 15 61" anchor="left top"/>
        <Static id="Static11" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 141 40 151 61" anchor="left top"/>
        <Static id="Static71" text="h15" class="Guide01_AreaRed" visible="false" position="absolute 0 710 1252 725" anchor="left bottom"/>
        <Static id="Static06" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 1237 0 1252 710" anchor="top right"/>
        <Static id="Static59" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 586 700 1153 710"/>
        <Static id="Static2" text="▼" position="absolute 256 386 290 416" anchor="default" style="font:Gulim,26;"/>
        <Static id="Static15" text="h13" class="Guide01_AreaRed" visible="false" position="absolute 596 659 1046 672" anchor="left top"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_cuisine_type"/>
      <Dataset id="ds_recipe_type"/>
      <Dataset id="ds_recipe_class"/>
      <Dataset id="ds_cbo_item_classM41">
        <ColumnInfo>
          <Column id="CLASS_CODE" size="255" type="STRING"/>
          <Column id="CLASS_NAME" size="255" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_cbo_item_classS41">
        <ColumnInfo>
          <Column id="CLASS_CODE" size="8" type="STRING"/>
          <Column id="CLASS_NAME" size="50" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_cbo_item_classD41">
        <ColumnInfo>
          <Column id="CLASS_CODE" size="8" type="STRING"/>
          <Column id="CLASS_NAME" size="50" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_SEARCH_ITEM_BEFORE" onload="ds_SEARCH_ITEM_BEFORE_OnLoadCompleted" onrowposchanged="ds_SEARCH_ITEM_BEFORE_OnRowPosChanged">
        <ColumnInfo>
          <Column id="ITEM_CODE" size="12" type="STRING"/>
          <Column id="ITEM_NAME" size="200" type="STRING"/>
          <Column id="ITEM_SIZE" size="100" type="STRING"/>
          <Column id="PO_UOM" size="10" type="STRING"/>
          <Column id="ITEM_INFO" size="100" type="STRING"/>
          <Column id="ITEM_PRICE" size="22" type="BIGDECIMAL"/>
          <Column id="KG_CONVERT_RATE" size="22" type="BIGDECIMAL"/>
          <Column id="G_ITEM_PRICE" size="22" type="BIGDECIMAL"/>
          <Column id="DISUSE_RATE" size="22" type="BIGDECIMAL"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_SELECT_ITEM_BEFORE">
        <ColumnInfo>
          <Column id="ITEM_CODE" size="12" type="STRING"/>
          <Column id="ITEM_NAME" size="200" type="STRING"/>
          <Column id="ITEM_SIZE" size="100" type="STRING"/>
          <Column id="PO_UOM" size="10" type="STRING"/>
          <Column id="ITEM_INFO" size="100" type="STRING"/>
          <Column id="ITEM_PRICE" size="22" type="BIGDECIMAL"/>
          <Column id="KG_CONVERT_RATE" size="22" type="BIGDECIMAL"/>
          <Column id="G_ITEM_PRICE" size="22" type="BIGDECIMAL"/>
          <Column id="DISUSE_RATE" size="22" type="BIGDECIMAL"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_cbo_item_classD42">
        <ColumnInfo>
          <Column id="CLASS_CODE" size="8" type="STRING"/>
          <Column id="CLASS_NAME" size="50" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_cbo_item_classM42">
        <ColumnInfo>
          <Column id="CLASS_CODE" size="255" type="STRING"/>
          <Column id="CLASS_NAME" size="255" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_cbo_item_classS42">
        <ColumnInfo>
          <Column id="CLASS_CODE" size="8" type="STRING"/>
          <Column id="CLASS_NAME" size="50" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_SEARCH_ITEM_AFTER" onload="ds_SEARCH_ITEM_AFTER_OnLoadCompleted" onrowposchanged="ds_SEARCH_ITEM_AFTER_OnRowPosChanged">
        <ColumnInfo>
          <Column id="ITEM_CODE" size="12" type="STRING"/>
          <Column id="ITEM_NAME" size="200" type="STRING"/>
          <Column id="ITEM_SIZE" size="100" type="STRING"/>
          <Column id="PO_UOM" size="10" type="STRING"/>
          <Column id="ITEM_INFO" size="100" type="STRING"/>
          <Column id="ITEM_PRICE" size="22" type="BIGDECIMAL"/>
          <Column id="KG_CONVERT_RATE" size="22" type="BIGDECIMAL"/>
          <Column id="G_ITEM_PRICE" size="22" type="BIGDECIMAL"/>
          <Column id="DISUSE_RATE" size="22" type="BIGDECIMAL"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_SELECT_ITEM_AFTER">
        <ColumnInfo>
          <Column id="ITEM_CODE" size="12" type="STRING"/>
          <Column id="ITEM_NAME" size="200" type="STRING"/>
          <Column id="ITEM_SIZE" size="100" type="STRING"/>
          <Column id="PO_UOM" size="10" type="STRING"/>
          <Column id="ITEM_INFO" size="100" type="STRING"/>
          <Column id="ITEM_PRICE" size="22" type="BIGDECIMAL"/>
          <Column id="KG_CONVERT_RATE" size="22" type="BIGDECIMAL"/>
          <Column id="G_ITEM_PRICE" size="22" type="BIGDECIMAL"/>
          <Column id="DISUSE_RATE" size="22" type="BIGDECIMAL"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_STD_RECIPE_MST">
        <ColumnInfo>
          <Column id="RECIPE_CD" size="20" type="STRING"/>
          <Column id="RECIPE_NAME" size="50" type="STRING"/>
          <Column id="RECIPE_CLASS" size="20" type="STRING"/>
          <Column id="RECIPE_CLASS_NAME" size="100" type="STRING"/>
          <Column id="RECIPE_TYPE" size="20" type="STRING"/>
          <Column id="RECIPE_TYPE_NAME" size="100" type="STRING"/>
          <Column id="CUISINE_TYPE" size="20" type="STRING"/>
          <Column id="CUISINE_TYPE_NAME" size="100" type="STRING"/>
          <Column id="ITEM_CODE" size="12" type="STRING"/>
          <Column id="CHK_YN" size="22" type="BIGDECIMAL"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_where040">
        <ColumnInfo>
          <Column id="AFTER_ITEM_CODE" size="256" type="STRING"/>
          <Column id="BEFORE_ITEM_CODE" size="256" type="STRING"/>
          <Column id="RECIPE_CD" size="256" type="STRING"/>
          <Column id="RECIPE_CLASS" size="256" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_check040"/>
    </Objects>
    <Script type="xscript4.0"><![CDATA[include "U_lib::lib_conversionCom.xjs";
/*
 ******************************************************************************************
 * 시스템구분: IFIS/메뉴관리/식단자재관리
 * 프로그램명: FSI00040E.XML
 * 기ㅡㅡㅡ능: 표준레시피 자재일괄 수정
 * 작ㅡ성ㅡ자: 한화S&C 박종세
 * 작성ㅡ일자: 2008-05-13
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
//=========================================================================================
// [ PART 1 ]
// Form에서 Include 할 내용을 정의
//
//========================================================================================= 
//@@컨버터에서 주석처리 #include "lib::tit_comm_0001.js"
//@@컨버터에서 주석처리 #include "lib::sc_comon.js"
//@@컨버터에서 주석처리 #include "lib::fs_common.js"

//=========================================================================================
// [ PART 2 ]
// Form에서 사용될 전역변수를 선언
//
//=========================================================================================

//=========================================================================================
// [ PART 3 ]
// Form Loading 시 작업 정의
//
//=========================================================================================
function form_onload(obj:Form, e:LoadEventInfo)
{
	gfn_formOnLoad(obj, false);

	   //폼 초기화
		fn_InitForm(obj);
}

//폼 초기화
function fn_InitForm(obj)
{
	// action 정보 생성 초기화 
	fsp_init(this);		
		
	// 폼 데이터 초기화
	fn_InitData(false);
	
	// 기타 레시피 분류 체크박스 만들기 
	fn_MakeRecipeClassCheckbox();
}

// 폼데이터 초기화 
function fn_InitData(blnAllClear)
{

	/*****************************************************************************************
     * 기      능   :  대 중 소 분류  자재 분류 데이터 조회-41V, 42V 공통으로 사용
     *****************************************************************************************/
	// action 정보 초기화 
	fsp_clear(this);
   	// 자재 대분류 조회  
	fsp_addSearch(this, "fs/fsi:FSI00010E_S002");	
    // 자재 중분류 조회  
	fsp_addSearch(this, "fs/fsi:FSI00010E_S003");
    // 자재 소분류 조회  
	fsp_addSearch(this, "fs/fsi:FSI00010E_S004");
	// 서버 호출 
	fsp_callService(this, "", "", "", "ds_cbo_item_classM41=ds_cbo_item_classM ds_cbo_item_classS41=ds_cbo_item_classS ds_cbo_item_classD41=ds_cbo_item_classD" , "BLANK=Y", "fn_After_InitData");

	//----------------------------------------------
	// 공통코드 DataSet create 
	//----------------------------------------------
	var v_ds;
	var v_fil_cond;
	
	v_ds = fn_common_code("'FS0001'","","","blk","Y");

	//FS0001 : RECIPE_CLASS
	v_fil_cond = "GROUP_CODE == 'FS0001'";
	v_ds.filter(v_fil_cond);
	CopyF(ds_recipe_class,v_ds.name);	
	//blank 삭제
	ds_recipe_class.deleteRow(0);
}


//초기화 콜백함수
function fn_After_InitData()
{
	Copy(ds_cbo_item_classM42,"ds_cbo_item_classM41");
	Copy(ds_cbo_item_classS42,"ds_cbo_item_classS41");
	Copy(ds_cbo_item_classD42,"ds_cbo_item_classD41");	
	
    divFSI00041V.ed_item_name.setFocus();
    
}


//=========================================================================================
// [ PART 4 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,도움말,form닫기)
//
//=========================================================================================
/*------------------------------------------------------------
	1. Function ID : fn_Search()
	2. 개       요 : 업무프로세스에 따른 조회작업
	3. 기       능 : 검색버튼 입력 시 처리되는 작업
	4. 인 수 설 명:
*------------------------------------------------------------*/
function fn_search()
{
	  //필수 입력사항 체크-----------------------------------------------------------------------
	  // if (!fn_Chk_SearchKey()) return fasle;
	
	  //조회 조건만들기-----------------------------------------------------------------------

	  // action 정보 삭제 초기화 
	  // tit_clearActionInfo(this);
		
	  // 서버에서 조회할 정보 추가 
	  //tit_addSearchActionInfo(this, "fs/fsa:FSA00050E_S001");
		
	  // 서버 호출 
	  //http.sync = true;
	  //tit_callService(this, "", "", "", "ds_hall_class=ds_out ds_template_obj=ds_list" , "UPJANG="+ Quote(strUPJANG), "fn_After_Search");	
	  //조회 실행-----------------------------------------------------------------------------
	  //http.sync = false;
}

// 조회 후 콜백 함수 
function fn_After_Search()
{
   // 데이터셋 플래그 클리어
	//ds_template_obj.ApplyChange();
}

// 조회 조건 검색
function fn_Chk_SearchKey()
{
   //체크로직- 틀리면 return false;    
   return true;
}



/*------------------------------------------------------------
	1. Function ID : fn_Insert()
	2. 개       요 : 업무프로세스에 따른 입력작업
	3. 기       능 : 입력버튼 입력 시 처리되는 작업
	4. 인 수 설 명:
*------------------------------------------------------------*/
function fn_insert()
{
   //데이터셋 로우 추가
   //ds_template_obj.AddRow();				   

    //신규추가시 기본값 설정
	//fn_SetDefaultNewRow();
}

// 신규추가시 기본값 설정
function fn_SetDefaultNewRow()
{   
}



/*------------------------------------------------------------
	1. Function ID : fn_Delete()
	2. 개       요 : 업무프로세스에 따른 정보 삭제작업
	3. 기       능 : 삭제버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
*------------------------------------------------------------*/
function fn_delete()
{
    // 삭제 확인메세지 호출
	//if (!fn_Call_DeleteMsg()){ return false; }							
	
    // 데이터셋이 Insert일 경우는 DeleteRow만 실행한다. 
    //if(fn_chk_rowtypeInsert_deleteRow(ds_template_obj)){return false;}

	// TO DO 식당마스터를 삭제하기전에  지울수 있는지 확인한다.				
	//if(!fn_chk_canDeleteRow(ds_template_obj)){return false;}				
	
	// 데이터셋 삭제
	//ds_template_obj.DeleteRow(ds_template_obj.row);
				
	// 트랜잭션 시작 
	//tit_clearActionInfo(this);
				
	//삭제
	//tit_addSaveActionInfo(this, "", "","fs/fsa:FSA00050E_D003", "", "", "", "");
					
	// 서버 호출 
	//tit_callService(this, "", "", "ds_in=ds_template_obj:U", "", "", "fn_After_Delete()");
	// 트랜잭션 종료 
	
	//}
}

//삭제 후 콜백 함수 
function fn_After_Delete()
{

}

//삭제 가능여부 체크
function fn_chk_canDeleteRow(ds_template_obj)
{
	//체크로직- 틀리면 return false;
	return true;
}



/*------------------------------------------------------------
	1. Function ID : fn_Save()
	2. 개       요 : 업무프로세스에 따른 정보 저장작업
	3. 기       능 : 저장버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
*------------------------------------------------------------*/
function fn_save()
{
 	// 데이터 유효성 검사
	 if (!fn_DataValidation()){	return false; }
			
	  //조회 조건만들기-----------------------------------------------------------------------
	  //레시피 코드 만들기 
	  var strRECIPE_CD = "";
	  var rowCnt_CD=ds_STD_RECIPE_MST.rowcount;
	
	  for(var i=0;i<rowCnt_CD;i++)
	  {  if(ds_STD_RECIPE_MST.getColumn(i,"CHK_YN")==1)
	     { strRECIPE_CD += ds_STD_RECIPE_MST.getColumn(i,"RECIPE_CD") + ",";}
	  }
	  var arrRECIPE_CD = gfn_split(strRECIPE_CD,",");

	  //레시피 클래스(분류) 만들기 
	  var strRECIPE_CLASS = "";
	  var rowCnt_CLASS=ds_recipe_class.rowcount;			
	  for(var i=0;i<rowCnt_CLASS;i++)
	  {
		 var chkObj = eval("chk"+i);
		 if (chkObj.value)
		 {
		 	strRECIPE_CLASS+=chkObj.userdata + ",";		
		 }
	  }
	  var arrRECIPE_CLASS = gfn_split(strRECIPE_CLASS,",");
	 
	 //-------------------------------------------------------
	 //--- 레시피 클래스(분류)가 선택되었는지 확인합니다.
	 //------------------------------------------------------
	 if((gfn_length(arrRECIPE_CD)==0)&&(gfn_length(arrRECIPE_CLASS)==0))
	 { 
	    g_Message("EE","변경하시려는 레시피 분류를 선택하시거나 레시피를 선택해 주십시요.");
	    return false;
	 }
/*	  
	  // 조회 데이터셋 생성
	  ds_where040.AddRow();
	  ds_where040.SetColumn(0,"AFTER_ITEM_CODE",  ds_SELECT_ITEM_AFTER.GetColumn(ds_SELECT_ITEM_AFTER.currow,"ITEM_CODE"));
	  ds_where040.SetColumn(0,"BEFORE_ITEM_CODE", ds_SELECT_ITEM_BEFORE.GetColumn(ds_SELECT_ITEM_BEFORE.currow,"ITEM_CODE"));
*/

	  // 레시피 코드가 선택되지 않았을 경우는 레시피 분류만 사용
	  if((rowCnt_CD<=0) || (gfn_length(arrRECIPE_CD)<1))
	  {
		  for(var i=0; i<gfn_length(arrRECIPE_CLASS);i++)
		  {
				ds_where040.addRow();
				ds_where040.setColumn(i,"AFTER_ITEM_CODE",  ds_SELECT_ITEM_AFTER.getColumn(ds_SELECT_ITEM_AFTER.rowposition,"ITEM_CODE"));
				ds_where040.setColumn(i,"BEFORE_ITEM_CODE", ds_SELECT_ITEM_BEFORE.getColumn(ds_SELECT_ITEM_BEFORE.rowposition,"ITEM_CODE"));
				//
				ds_where040.setColumn(i,"RECIPE_CLASS", arrRECIPE_CLASS[i]);
				//ds_where040.AddRow();
		  }
		  //if(length(arrRECIPE_CLASS)>0){ds_where040.DeleteRow(length(arrRECIPE_CLASS));}
	  }
	  else //레시피 코드가 선택되었다면 레시피 코드만 사용
	  {
		  for(var i=0; i<gfn_length(arrRECIPE_CD);i++)
		  {  
				ds_where040.addRow();
				ds_where040.setColumn(i,"AFTER_ITEM_CODE",  ds_SELECT_ITEM_AFTER.getColumn(ds_SELECT_ITEM_AFTER.rowposition,"ITEM_CODE"));
				ds_where040.setColumn(i,"BEFORE_ITEM_CODE", ds_SELECT_ITEM_BEFORE.getColumn(ds_SELECT_ITEM_BEFORE.rowposition,"ITEM_CODE"));
				//
				ds_where040.setColumn(i,"RECIPE_CD", arrRECIPE_CD[i]);
				//ds_where040.AddRow();
		  }
		  //if(length(arrRECIPE_CD)>0){ds_where040.DeleteRow(length(arrRECIPE_CD));}
	  }


	  /////////////////////////////////////////////
	  //////////// 자재 확인 
	  //////////////////////////////////////////////

	 // action 정보 삭제 초기화 
     fsp_clear(this);
/* in조건에 1000개가 넘으면 오라클 에러난다.
	  // 서버에서 조회할 정보 추가 
	  tit_addSearchActionInfo(this, "fs/fsi:FSI00040E_S001");
	  // 서버 호출 
	  http.sync = true;
	  tit_callService(this, "", "", "ds_where040=ds_where040", "ds_check040=ds_check040", "", "");	
	  http.sync = false;
	
	  var CHK_CNT = ds_check040.GetColumn(0, "CHK_CNT");
	  if (CHK_CNT > 0)
	  {
			g_Message("01", "변경후 자재를 이미 가지고 있는 레시피가 있습니다. 해당 레시피는 제외하고 변경합니다.");
	  }
*/
	g_Message("01", "변경후 자재를 이미 가지고 있는 레시피는 제외하고 변경합니다.");
	  			
	 // 입력 임시 데이터셋 생성 --> 로그생성
	  var dsObj;
	  create("Dataset", "ds_in040");
	  dsObj = eval("ds_in040");
	  
	  dsObj.addColumn("B_ITEM_CODE", "STRING", 100);
	  dsObj.addColumn("B_ITEM_NAME", "STRING", 100);
	  dsObj.addColumn("B_ITEM_SIZE", "STRING", 100);
	  dsObj.addColumn("B_KG_CONVERT_RATE", "BIGDECIMAL", 22);
	  dsObj.addColumn("B_ITEM_PRICE", "BIGDECIMAL", 22);
	  dsObj.addColumn("B_G_ITEM_PRICE", "BIGDECIMAL", 22);
	  
	  dsObj.addColumn("A_ITEM_CODE", "STRING", 100);
	  dsObj.addColumn("A_ITEM_NAME", "STRING", 100);
	  dsObj.addColumn("A_ITEM_SIZE",   "STRING", 100);
	  dsObj.addColumn("A_KG_CONVERT_RATE", "BIGDECIMAL", 22);
	  dsObj.addColumn("A_ITEM_PRICE", "BIGDECIMAL", 22);
	  dsObj.addColumn("A_G_ITEM_PRICE", "BIGDECIMAL", 22);
	  	  
	  dsObj.addRow();

	  dsObj.setColumn(0,"B_ITEM_CODE", ds_SELECT_ITEM_BEFORE.getColumn(ds_SELECT_ITEM_BEFORE.rowposition,"ITEM_CODE"));
	  dsObj.setColumn(0,"B_ITEM_NAME", ds_SELECT_ITEM_BEFORE.getColumn(ds_SELECT_ITEM_BEFORE.rowposition,"ITEM_NAME"));
	  dsObj.setColumn(0,"B_ITEM_SIZE", ds_SELECT_ITEM_BEFORE.getColumn(ds_SELECT_ITEM_BEFORE.rowposition,"ITEM_SIZE"));
	  dsObj.setColumn(0,"B_KG_CONVERT_RATE", ds_SELECT_ITEM_BEFORE.getColumn(ds_SELECT_ITEM_BEFORE.rowposition,"KG_CONVERT_RATE"));
	  dsObj.setColumn(0,"B_ITEM_PRICE", ds_SELECT_ITEM_BEFORE.getColumn(ds_SELECT_ITEM_BEFORE.rowposition,"ITEM_PRICE"));
	  dsObj.setColumn(0,"B_G_ITEM_PRICE", ds_SELECT_ITEM_BEFORE.getColumn(ds_SELECT_ITEM_BEFORE.rowposition,"G_ITEM_PRICE"));

  	  dsObj.setColumn(0,"A_ITEM_CODE",  ds_SELECT_ITEM_AFTER.getColumn(ds_SELECT_ITEM_AFTER.rowposition,"ITEM_CODE"));
  	  dsObj.setColumn(0,"A_ITEM_NAME",  ds_SELECT_ITEM_AFTER.getColumn(ds_SELECT_ITEM_AFTER.rowposition,"ITEM_NAME"));
  	  dsObj.setColumn(0,"A_ITEM_SIZE", ds_SELECT_ITEM_AFTER.getColumn(ds_SELECT_ITEM_AFTER.rowposition,"ITEM_SIZE"));
	  dsObj.setColumn(0,"A_KG_CONVERT_RATE",ds_SELECT_ITEM_AFTER.getColumn(ds_SELECT_ITEM_AFTER.rowposition,"KG_CONVERT_RATE"));
	  dsObj.setColumn(0,"A_ITEM_PRICE", ds_SELECT_ITEM_AFTER.getColumn(ds_SELECT_ITEM_AFTER.rowposition,"ITEM_PRICE"));
	  dsObj.setColumn(0,"A_G_ITEM_PRICE", ds_SELECT_ITEM_AFTER.getColumn(ds_SELECT_ITEM_AFTER.rowposition,"G_ITEM_PRICE"));
	  
	  // action 정보 초기화 
	  fsp_clear(this);
	 
	  // single Action -- 1. 표준레시피 자재 마스터 UPDATE 한다.
	  //in조건에 1000개가 넘으면 오라클 에러난다.
	  //tit_addSingleActionInfo(this, "fs/fsi:FSI00040E_U001", "", "", "");
	  fsp_addMulti(this, "fs/fsi:FSI00040E_U001", "", "", "");

	  // 1--> 업데이트를 한 후 트리거(FSR_STD_RECIPE_ITEM_AU)가 자동으로 호출되고 -->자재변경로그 insert 완료 후
  	  // single Action -- 2. 자재 변경 로그(표준레시피 자재변경) 데이터를 UPDATE 한다.
	  fsp_addSingle(this, "fs/fsi:FSI00040E_U002", "", "", "");
 	  
 	  // 서버 호출 후 조회 
	  fsp_callService(this, "", "", "ds_where040=ds_where040:A ds_in040=ds_in040", "" , "", "fn_After_Save");
}

//저장 후 콜백 함수 
function fn_After_Save()
{
    //조회조건 초기화
    ds_where040.clearData();
    
    //레시피 조회결과값은 삭제
    ds_STD_RECIPE_MST.clearData();
    
    //임시입력값 삭제
    Destroy("ds_in040");
    
	g_Message("01","자재변경이 완료되었습니다.");
} 

//데이터 유효성검사
function fn_DataValidation()
{
    //체크로직- 틀리면 return false;

    //변경데이터 검사
	//if(!ds_template_obj.GetUpdate())   {alert("변경된 데이터가 없습니다."); return false;}
	
	//입력값 검사 - 컴포넌트 
	if(!fn_DataValidation_Component()) {return false;}	
	
	//입력값 검사 - 데이터셋
	if(!fn_DataValidation_DataSet())   {return false;}

    return true;
}

function fn_DataValidation_Component()
{
	//체크로직 - 틀리면 return false;
	return true;
}

function fn_DataValidation_DataSet()
{
	//체크로직 - 틀리면 return false;
	if((this.ds_SELECT_ITEM_BEFORE.rowcount<=0)||(gfn_length(this.ds_SELECT_ITEM_BEFORE.getColumn(ds_SELECT_ITEM_BEFORE.rowposition,"ITEM_CODE"))==0)) 
	 {
		//변경전 자재선택 메세지
		g_Message("EE","[변경전] 자재가 선택되지 않았습니다.\n[변경전] 자재를 조회 선택하여 주십시요.");
		return false;
	 }

	//체크로직 - 틀리면 return false;
	if((this.ds_SELECT_ITEM_AFTER.rowcount<=0)||(gfn_length(this.ds_SELECT_ITEM_AFTER.getColumn(ds_SELECT_ITEM_AFTER.rowposition,"ITEM_CODE"))==0))
	 {
		//변경후 자재선택 메세지
		g_Message("EE","[변경후] 자재가 선택되지 않았습니다.\n[변경후] 자재를 조회 선택하여 주십시요.");
		return false;
	 }
	 
	 if((ds_SELECT_ITEM_BEFORE.getColumn(ds_SELECT_ITEM_BEFORE.rowposition,"ITEM_CODE"))==(ds_SELECT_ITEM_AFTER.getColumn(ds_SELECT_ITEM_AFTER.rowposition,"ITEM_CODE")))
	 {
	  //변경전 자재와 변경후 자재가 같을경우 
		g_Message("EE","[변경전] 자재와 [변경후] 자재가 같습니다.\n선택하신 자재를 확인 하여 주십시요.");
		return false;
	 }
	 
	 if((ds_SELECT_ITEM_AFTER.getColumn(ds_SELECT_ITEM_AFTER.rowposition,"ITEM_PRICE"))==0)
	 {
	  //변경전 자재와 변경후 자재가 같을경우 
		g_Message("EE","[변경후] 자재의 단가가 0 원 입니다.\n선택하신 자재를 확인 하여 주십시요.");
		return false;
	 }
	 
	 var BEFORE_ITEM_CODE = ds_SELECT_ITEM_BEFORE.getColumn(ds_SELECT_ITEM_BEFORE.rowposition,"ITEM_CODE");
	 var BEFORE_ITEM_NAME = ds_SELECT_ITEM_BEFORE.getColumn(ds_SELECT_ITEM_BEFORE.rowposition,"ITEM_NAME");
	 var AFTER_ITEM_CODE  = ds_SELECT_ITEM_AFTER.getColumn(ds_SELECT_ITEM_AFTER.rowposition,"ITEM_CODE");
	 var AFTER_ITEM_NAME  = ds_SELECT_ITEM_AFTER.getColumn(ds_SELECT_ITEM_AFTER.rowposition,"ITEM_NAME");
	 
	 var blnRtn=g_Confirm("04","[변경전] 자재명:"+ BEFORE_ITEM_NAME +"\n" +
	                    "[변경후] 자재명:"+ AFTER_ITEM_NAME  +"\n\n" +
	                    "자재 변경 적용을 하시겠습니까?");
	         
	 if(!blnRtn) { return false; }
	     
	return true;
}
        


/*------------------------------------------------------------
	1. Function ID : fn_Print()
	2. 개       요 : 업무프로세스에 따른 인쇄 처리
	3. 기       능 : 인쇄버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
*------------------------------------------------------------*/
function fn_print()
{
}

/*------------------------------------------------------------
	1. Function ID : fn_Close()
	2. 개       요 : 업무프로세스에 따른 폼 종료 
	3. 기       능 : 닫기버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
*------------------------------------------------------------*/
function fn_Close()
{
	this.close();
}

/*------------------------------------------------------------
	1. Function ID : fn_Help()
	2. 개       요 : 업무프로세스에 따른 도움말 
	3. 기       능 : 도움말버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
*------------------------------------------------------------*/
function fn_help()
{
}

//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
//
//=========================================================================================
function fn_MakeRecipeClassCheckbox()
{
	//-------------------------------------------------------
	// 공통코드 데이터셋 - FS0001 레시피 분류 ds_recipe_class
	//-------------------------------------------------------
	if(ds_recipe_class.rowcount<=0) {return false;}
	
	var rowCnt=ds_recipe_class.rowcount;
			
	for(var i=0;i<rowCnt;i++)
	{
		var chkObj = eval("chk"+i);
		chkObj.text     =  ds_recipe_class.getColumn(i, "CODE_NAME"); //체크박스 명을 레시피명
		chkObj.userdata =  ds_recipe_class.getColumn(i, "CODE");	  //체크박스 사용자데이터를 레시피코드 
//	    chkObj.onclick  =  "fn_CheckboxClick";                        //체크박스의 이벤트를  fn_CheckboxClick 으로 연결( 이벤트 처리로 이동)
	}
	
	
	//checkbox object의 갯수 
	var chkObjNumber=10;
	
	while(rowCnt<chkObjNumber)
	{	
		var chkObj = eval("chk"+rowCnt);
		chkObj.enable=false;
		chkObj.visible=false;
		rowCnt++;
	}
}

function fn_CheckboxClick(obj)
{
	if(obj.value)
	{
		obj.style.background.color="#FFFFBB";		
	}
	else
	{
		obj.style.background.color="-1";
	}

	
	//체크박스를 클릭하면 무조건 조회된 자재, 레시피 리스트를 클리어 한다.//이명희 요구사항
	ds_SEARCH_ITEM_BEFORE.clearData();
	ds_STD_RECIPE_MST.clearData();
}


//레시피 분류선택
function btnRECIPE_ALL_CHECK_OnClick(obj:Button, e:ClickEventInfo)
{
	if(ds_recipe_class.rowcount<=0) {return false;}
	
	var rowCnt=ds_recipe_class.rowcount;
			
	for(var i=0;i<rowCnt;i++)
	{
		var chkObj = eval("chk"+i);
		if(chkObj.value==false)
		{ chkObj.value=true;
		  fn_CheckboxClick(chkObj); } //체크박스 선택
		else
		{ chkObj.value=false;
		  fn_CheckboxClick(chkObj); } //체크박스 해제
	}
}

//=========================================================================================
// [ PART 6 ]
// component Event 정의 ( User Define function )
// --> component Event의 기요,기능,동작 등 상세내용은 MiPlatform 메뉴얼을 참조하시기 바랍니다.
//=========================================================================================


function ds_SEARCH_ITEM_BEFORE_OnLoadCompleted(obj:Dataset, e:DSLoadEventInfo)
{
	ds_SELECT_ITEM_BEFORE.enableevent=false;	
   //전체 로우를 삭제한다.
	ds_SELECT_ITEM_BEFORE.deleteAll();
	//로우를 추가한다.
	ds_SELECT_ITEM_BEFORE.addRow();
	//데이터를 카피한다.
	ds_SELECT_ITEM_BEFORE.copyRow(0, ds_SEARCH_ITEM_BEFORE, 0);
	ds_SELECT_ITEM_BEFORE.enableevent=true;
}


function ds_SEARCH_ITEM_BEFORE_OnRowPosChanged(obj:Dataset, e:DSRowPosChangeEventInfo)
{	
	ds_SELECT_ITEM_BEFORE.enableevent=false;	
   //전체 로우를 삭제한다.
	ds_SELECT_ITEM_BEFORE.deleteAll();
	//로우를 추가한다.
	ds_SELECT_ITEM_BEFORE.addRow();
	//데이터를 카피한다.
	ds_SELECT_ITEM_BEFORE.copyRow(0, ds_SEARCH_ITEM_BEFORE, e.newrow);
	ds_SELECT_ITEM_BEFORE.enableevent=true;
}


function ds_SEARCH_ITEM_AFTER_OnLoadCompleted(obj:Dataset, e:DSLoadEventInfo)
{
	ds_SELECT_ITEM_AFTER.enableevent=false; 
   //전체 로우를 삭제한다.
	ds_SELECT_ITEM_AFTER.deleteAll();
	//로우를 추가한다.
	ds_SELECT_ITEM_AFTER.addRow();
	//데이터를 카피한다.
	ds_SELECT_ITEM_AFTER.copyRow(0, ds_SEARCH_ITEM_AFTER, 0);
	ds_SELECT_ITEM_AFTER.enableevent=true;	
}

function ds_SEARCH_ITEM_AFTER_OnRowPosChanged(obj:Dataset, e:DSRowPosChangeEventInfo)
{	
	ds_SELECT_ITEM_AFTER.enableevent=false; 
   //전체 로우를 삭제한다.
	ds_SELECT_ITEM_AFTER.deleteAll();
	//로우를 추가한다.
	ds_SELECT_ITEM_AFTER.addRow();
	//데이터를 카피한다.
	ds_SELECT_ITEM_AFTER.copyRow(0, ds_SEARCH_ITEM_AFTER, e.newrow);
	ds_SELECT_ITEM_AFTER.enableevent=true;	
}

//자재변경 버튼클릭 이벤트
function btnITEM_CHANGE_OnClick(obj:Button, e:ClickEventInfo)
{
	fn_save();
}

//자재소요량 일괄변경 화면 호출
function btn_FSI00060E_OnClick(obj)
{
	var v_result;
	v_result = gfn_dialog("", "U_FSI::FSI00060E.xfdl","");
}
//자재 일괄변경 이력정보 화면 호출 
function btn_FSI00047V_OnClick(obj:Button, e:ClickEventInfo)
{
	var v_result;
	v_result = gfn_dialog("", "U_FSI::FSI00047V.xfdl","");
}

//체크박스의 이벤트를  fn_CheckboxClick 으로 연결
function chk0_onclick(obj:CheckBox,  e:ClickEventInfo) { fn_CheckboxClick(obj); }
function chk1_onclick(obj:CheckBox,  e:ClickEventInfo) { fn_CheckboxClick(obj); }
function chk2_onclick(obj:CheckBox,  e:ClickEventInfo) { fn_CheckboxClick(obj); }
function chk3_onclick(obj:CheckBox,  e:ClickEventInfo) { fn_CheckboxClick(obj); }
function chk4_onclick(obj:CheckBox,  e:ClickEventInfo) { fn_CheckboxClick(obj); }
function chk5_onclick(obj:CheckBox,  e:ClickEventInfo) { fn_CheckboxClick(obj); }
function chk6_onclick(obj:CheckBox,  e:ClickEventInfo) { fn_CheckboxClick(obj); }
function chk7_onclick(obj:CheckBox,  e:ClickEventInfo) { fn_CheckboxClick(obj); }
function chk8_onclick(obj:CheckBox,  e:ClickEventInfo) { fn_CheckboxClick(obj); }
function chk9_onclick(obj:CheckBox,  e:ClickEventInfo) { fn_CheckboxClick(obj); }

function Static13_onclick(obj:Static,  e:ClickEventInfo)
{
	
}
]]></Script>
  </Form>
</FDL>
