<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="..\..\..\default_typedef.xml"/>
  <Form id="MenuGrpMgmt" classname="COMP_GUIDE_13" inheritanceid="" position="absolute 0 0 1252 725" titletext="메뉴 그룹 관리" scrollbars="autoboth" onload="form_onload">
    <Layouts>
      <Layout>
        <Static id="Static06" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 1237 0 1252 710" anchor="top right"/>
        <Static id="Static71" text="h15" class="Guide01_AreaRed" visible="false" position="absolute 0 710 1252 725" anchor="left bottom"/>
        <Div id="div_cmnBtn" anchor="left top right" taborder="1" url="cmn::CmnBtn.xfdl" text="Div00" scrollbars="none" position="absolute 0 0 1237 30" tabstop="false"/>
        <Static id="Static08" class="sta_WFSA_Labelbg" position="absolute 0 30 1237 71" anchor="left top right"/>
        <Static id="Static04" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 0 30 93 40" anchor="left top"/>
        <Static id="Static07" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 0 40 15 61" anchor="left top"/>
        <Static id="Static18" text="메뉴 그룹 리스트" class="sta_WF_Title01" position="absolute 0 84 450 102" anchor="left top"/>
        <Static id="Static19" text="h13" class="Guide01_AreaRed" visible="false" position="absolute 0 71 450 84" anchor="left top"/>
        <Static id="Static20" text="글자기준간격 h05" class="Guide01_AreaRed" visible="false" position="absolute 0 97 450 102" anchor="left top"/>
        <Static id="Static03" text="h05" class="Guide01_AreaRed" visible="false" position="absolute 1179 97 1237 102" anchor="top right"/>
        <Static id="Static17" text="h06" class="Guide01_AreaRed" visible="false" position="absolute 1179 71 1237 77" anchor="top right"/>
        <Static id="Static21" text="w02" class="Guide01_AreaRed" visible="false" position="absolute 1197 77 1199 97" anchor="top right"/>
        <Static id="Static23" text="w02" class="Guide01_AreaRed" visible="false" position="absolute 1217 77 1219 97" anchor="top right"/>
        <Static id="Static10" text="w02" class="Guide01_AreaRed" visible="false" position="absolute 1177 77 1179 97" anchor="top right"/>
        <Static id="Static34" text="메뉴 그룹 마스터" class="sta_WF_Title01" position="absolute 560 84 1010 102" anchor="left top"/>
        <Static id="Static35" text="h13" class="Guide01_AreaRed" visible="false" position="absolute 560 71 1010 84" anchor="left top"/>
        <Static id="Static36" text="글자기준간격 h05" class="Guide01_AreaRed" visible="false" position="absolute 560 97 1010 102" anchor="left top"/>
        <Static id="Static40" text="w10" class="Guide01_AreaRed" visible="false" position="absolute 515 100 525 450"/>
        <Static id="Static05" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 0 61 93 71" anchor="left top"/>
        <Grid id="grd_gropList" taborder="111" binddataset="ds_menuClsfiList" readonly="false" useinputpanel="false" cellsizingtype="none" cellmovingtype="col" autofittype="col" fillareatype="linerow" treeusecheckbox="true" treeinitstatus="expand,null" oncelldblclick="grd_grupList_oncelldblclick" onselectchanged="grd_gropList_onselectchanged" cantreestatuschange="grd_gropList_cantreestatuschange" position="absolute 0 102 468 710" anchor="left top bottom" moveX="0" moveY="0" resizeX="0" resizeY="100" autoenter="select" useselcolor="true">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="295"/>
              </Columns>
              <Rows>
                <Row size="24"/>
              </Rows>
              <Band id="body">
                <Cell displaytype="tree" edittype="tree" text="bind:menuClsfiNm" editlengthunit="utf8" treelevel="bind:treeKey" treecheck="bind:treeChk"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btn_grdTreeLevel" taborder="112" text="1레벨까지" onclick="btn_grdTreeLevel_onclick" class="btn_WF_Function" position="absolute 121 77 192 97"/>
        <Button id="btn_collApse" taborder="113" text="전체닫기" onclick="btn_collApse_onclick" class="btn_WF_Function" position="absolute 194 77 255 97"/>
        <Button id="btn_expand" taborder="114" text="전체열기" onclick="btn_expand_onclick" class="btn_WF_Function" position="absolute 256 77 322 97"/>
        <Grid id="grd_outletMenuGrp" taborder="115" binddataset="ds_outletMenuGrpSub" autoenter="select" useinputpanel="false" cellmovingtype="col" autofittype="col" fillareatype="linerow" treeinitstatus="expand,null" onselectchanged="grd_gropList_onselectchanged" position="absolute 559 102 1240 710" anchor="left top bottom" moveX="0" moveY="0" resizeX="0" resizeY="100">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="295"/>
              </Columns>
              <Rows>
                <Row size="24"/>
              </Rows>
              <Band id="body">
                <Cell displaytype="tree" edittype="tree" text="bind:menuClsfiNm" editlengthunit="utf8" treelevel="bind:treeKey" treecheck="bind:treeChk"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btn_send" taborder="116" text="&gt;&gt;" class="btn_WF_Function" position="absolute 480 245 546 265" onclick="btn_send_onclick"/>
        <Button id="btn_recv" taborder="117" text="&lt;&lt;" class="btn_WF_Function" position="absolute 479 305 545 325" onclick="btn_recv_onclick"/>
        <Static id="Static28" text="사업장" class="sta_WFSA_label" position="absolute 366 40 413 61" anchor="left top"/>
        <Static id="Static11" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 412 40 422 61" anchor="left top"/>
        <Static id="Static26" text="사업부" class="sta_WFSA_label" position="absolute 15 40 62 61" anchor="left top"/>
        <Static id="Static27" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 60 40 70 61" anchor="left top"/>
        <MuSearchComponent id="cbo_mu" titletext="사업부 선택 Component" taborder="118" onkeydown="cbo_mu_onkeydown" text="MuSearchComponent00" class="cmb_WF_Essential" position="absolute 70 40 171 61" bindDataset="" bindMuCdColumn="" appendText="" onItemChangedEvent="fn_muChange"/>
        <TmSearchComponent id="edt_tm" titletext="팀 검색용 Component" taborder="119" text="TmSearchComponent00" class="edt_WF_Essential" position="absolute 229 40 336 61" bindDataset="" bindTmCdColumn="" bindTmNmColumn="" qoBuCd="" qoMuCd="" qoUseYn="" eventAfterTrigger="fn_tmChange" eventBeforeTrigger=""/>
        <UpjangSearchComponent id="edt_upjang" titletext="업장 검색용 Component" taborder="120" text="UpjangSearchComponent00" class="edt_WF_Essential" position="absolute 421 40 544 61" bindDataset="" bindUpjangCodeColumn="" bindUpjangNameColumn="" eventBeforeTrigger="" eventAfterTrigger="fn_upjangChange" roleSetId=""/>
        <Static id="Static29" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 171 40 201 61" anchor="left top"/>
        <Static id="Static30" text="팀" class="sta_WFSA_label" position="absolute 201 40 225 61" anchor="left top"/>
        <Static id="Static31" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 219 40 229 61" anchor="left top"/>
        <Static id="Static32" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 336 40 366 61" anchor="left top"/>
        <Static id="Static33" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 544 40 574 61" anchor="left top"/>
      </Layout>
    </Layouts>
    <Bind/>
    <Objects>
      <Dataset id="ds_menuClsfiList" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false" oncolumnchanged="ds_menuClsfiList_oncolumnchanged">
        <ColumnInfo>
          <Column id="treeKey" type="STRING" size="256"/>
          <Column id="treeChk" type="STRING" size="256"/>
          <Column id="dsplCd" type="STRING" size="256"/>
          <Column id="menuClass" type="STRING" size="256"/>
          <Column id="menuClassNm" type="STRING" size="256"/>
          <Column id="menuClsfi" type="STRING" size="256"/>
          <Column id="menuClsfiName" type="STRING" size="256"/>
          <Column id="menuSclass" type="STRING" size="256"/>
          <Column id="menuClsfiNm" type="STRING" size="256"/>
          <Column id="picPlace" type="STRING" size="256"/>
          <Column id="langae1" type="STRING" size="256"/>
          <Column id="langae2" type="STRING" size="256"/>
          <Column id="langae3" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="menuClass">0000</Col>
            <Col id="menuClsfi">0000</Col>
            <Col id="menuSclass">0000</Col>
            <Col id="menuClsfiNm">아이템 그룹</Col>
            <Col id="treeKey">0</Col>
          </Row>
          <Row>
            <Col id="treeKey">1</Col>
            <Col id="menuClsfiNm">1레벨</Col>
          </Row>
          <Row>
            <Col id="treeKey">1</Col>
            <Col id="menuClsfiNm">1레벨</Col>
          </Row>
          <Row>
            <Col id="treeKey">1</Col>
            <Col id="menuClsfiNm">1레벨</Col>
          </Row>
          <Row>
            <Col id="treeKey">2</Col>
            <Col id="menuClsfiNm">2레벨</Col>
          </Row>
          <Row>
            <Col id="treeKey">2</Col>
            <Col id="menuClsfiNm">2레벨</Col>
          </Row>
          <Row>
            <Col id="treeKey">1</Col>
            <Col id="menuClsfiNm">1레벨</Col>
          </Row>
          <Row>
            <Col id="treeKey">2</Col>
            <Col id="menuClsfiNm">3</Col>
          </Row>
          <Row>
            <Col id="treeKey">3</Col>
            <Col id="menuClsfiNm">2</Col>
          </Row>
          <Row>
            <Col id="treeKey">1</Col>
            <Col id="menuClsfiNm">1</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_cmnAuth" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="srcYn" type="STRING" size="256"/>
          <Column id="insYn" type="STRING" size="256"/>
          <Column id="delYn" type="STRING" size="256"/>
          <Column id="savYn" type="STRING" size="256"/>
          <Column id="prtYn" type="STRING" size="256"/>
          <Column id="exlYn" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="srcYn">Y</Col>
            <Col id="insYn">Y</Col>
            <Col id="delYn">Y</Col>
            <Col id="savYn">Y</Col>
            <Col id="prtYn">Y</Col>
            <Col id="exlYn">Y</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_outletMenuGrp" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="treeKey" type="STRING" size="256"/>
          <Column id="treeChk" type="STRING" size="256"/>
          <Column id="dsplCd" type="STRING" size="256"/>
          <Column id="outletCd" type="STRING" size="256"/>
          <Column id="menuClass" type="STRING" size="256"/>
          <Column id="menuClassNm" type="STRING" size="256"/>
          <Column id="menuClsfi" type="STRING" size="256"/>
          <Column id="menuClsfiName" type="STRING" size="256"/>
          <Column id="menuSclass" type="STRING" size="256"/>
          <Column id="menuClsfiNm" type="STRING" size="256"/>
          <Column id="picPlace" type="STRING" size="256"/>
          <Column id="langae1" type="STRING" size="256"/>
          <Column id="langae2" type="STRING" size="256"/>
          <Column id="langae3" type="STRING" size="256"/>
          <Column id="useYn" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_outletMenuGrpValid" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="outletCd" type="STRING" size="256"/>
          <Column id="menuClass" type="STRING" size="256"/>
          <Column id="menuClsfi" type="STRING" size="256"/>
          <Column id="menuSclass" type="STRING" size="256"/>
          <Column id="menuClsfiNm" type="STRING" size="256"/>
          <Column id="useYn" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_outletMenuGrpSub" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false" oncolumnchanged="ds_outletMenuGrpSub_oncolumnchanged">
        <ColumnInfo>
          <Column id="treeKey" type="STRING" size="256"/>
          <Column id="treeChk" type="STRING" size="256"/>
          <Column id="dsplCd" type="STRING" size="256"/>
          <Column id="outletCd" type="STRING" size="256"/>
          <Column id="menuClass" type="STRING" size="256"/>
          <Column id="menuClassNm" type="STRING" size="256"/>
          <Column id="menuClsfi" type="STRING" size="256"/>
          <Column id="menuClsfiName" type="STRING" size="256"/>
          <Column id="menuSclass" type="STRING" size="256"/>
          <Column id="menuClsfiNm" type="STRING" size="256"/>
          <Column id="picPlace" type="STRING" size="256"/>
          <Column id="langae1" type="STRING" size="256"/>
          <Column id="langae2" type="STRING" size="256"/>
          <Column id="langae3" type="STRING" size="256"/>
          <Column id="useYn" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <InitValue/>
    <Script type="xscript4.0"><![CDATA[/*
  화 면 명 : MenuGrpMgmt
  파 일 명 : MenuGrpMgmt.xfdl
  기    능 : 업장별 메뉴 그룹 관리

    수정일    수정자                  수정내용
  ----------   -------  --------------------------------------------------
  2015.03.17   박대영   최초 생성
*/

/************************************************************************************************
 * 공통 라이브러리 INCLUDE 영역 (필수)
************************************************************************************************/
include "lib::lib_com.xjs";
 

/************************************************************************************************
 * FORM 변수 선언 영역 (필수)
************************************************************************************************/
var fv_sToday = gfn_today();
var RetVal="";
var fv_processCnt=0;
var fv_oldRow=-1;
 
/************************************************************************************************
 * FORM EVENT 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : Form Load (필수)
 *---------------------------------------------------------------------------------------------*/
function form_onload(obj:Form, e:LoadEventInfo)
{	
	// Form Load 시 공통 기능 처리(obj:Form, bCreateEvent:이벤트 생성 여부)
	gfn_formOnLoad(this);
	
	// 초기값 셋팅
	fn_init();
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 초기값 셋팅
 *---------------------------------------------------------------------------------------------*/
function fn_init()
{

	// 업데이트여부를 체크할 DataSet, 여러개 있을 경우 ;로 구분
	v_ds_check = "ds_outletMenuGrp";
	
	// 권한설정
	edt_tm.applyAuthLevel(cbo_mu);
	edt_upjang.applyAuthLevel(edt_tm);
	edt_upjang.setForcedRoleSet("OutletUpjang");
	
	ds_menuClsfiList.clearData();
	ds_outletMenuGrp.clearData();
	  
	 
}
 

/************************************************************************************************
 * 공통기능 FUNCTION 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 조회 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_search()
{
	 
	 //업장 선택은
	if (gfn_nvl(edt_upjang.getUpjangCode(),"") == "") 
	{
		gfn_alert("msg.noselect","영업장");
		return;
	}
	
	 
    // Grid sort 표시 초기화(필수)
    gfn_clearSortMark(grd_gropList);
    
	ds_menuClsfiList.clearData();
	ds_outletMenuGrp.clearData();
	
    var strSvcID    = "selectList";
    var strURL      = "rc/sle/menuGrpMgmt/selectList.xdo";
    var strInDs     = "";
    var strOutDs    = "ds_menuClsfiList=ds_menuClsfiList";
    var strArg      = "outletCd="  + gfn_nvl(edt_upjang.getUpjangCode(),"")
                    + " maskAuth=" + SCAuth.getMaskAuth(this);
    var strCallback = "fn_callBack";
    var bAsync      = true;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
	
	fn_searchList();
	
}
/*----------------------------------------------------------------------------------------------
 * 설명      : fn_search 에서 검색된 내용을 클릭하는 경우 상세 내역을 검색 한다.
 *---------------------------------------------------------------------------------------------*/
function fn_searchList()
{
	 
	 
	var strSvcID    = "searchList";
    var strURL      = "rc/sle/menuGrpMgmt/searchList.xdo";
    var strInDs     = "";
    var strOutDs    = "ds_outletMenuGrp=ds_outletMenuGrp";
    var strArg      = "outletCd="  + gfn_nvl(edt_upjang.getUpjangCode(),"")
                    + " maskAuth=" + SCAuth.getMaskAuth(this);
    var strCallback = "fn_callBack";
    var bAsync      = true;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
	
}
 
/*----------------------------------------------------------------------------------------------
 * 설명      : 신규 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_insert()
{	
	 
    
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 삭제 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_delete()
{
 
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 저장 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_save()
{

	
	if (gfn_dsIsUpdated(ds_outletMenuGrp)==false )
 	{
 		gfn_alert("msg.save.nochange");	// 변경된 내역이 없습니다.
 		return;
 	}
 	
  
	// 저장시 Validation Check	 "rc/sle/itemGrpMgmt/searchList.xdo";
	if (gfn_validCheck(ds_outletMenuGrp, ds_outletMenuGrpValid) == false)	return;
	
    var strSvcID    = "save";
    var strURL      = "rc/sle/menuGrpMgmt/saveData.xdo";
    var strInDs     = "ds_outletMenuGrp=ds_outletMenuGrp:U";
    var strOutDs    = "";
    var strArg      = "";
    var strCallback = "fn_callBack";
    var bAsync      = true;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 출력 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_print()
{
	
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 도움말 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_help()
{
	
}

/************************************************************************************************
 * TRANSACTION 및 CallBack 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 트랜잭션 콜백 함수 (필수)
 *---------------------------------------------------------------------------------------------*/
function fn_callBack(strSvcID, nErrorCode, strErrorMsg)
{
	// 에러시 gfn_callBack에서 메시지 제공, 화면별 특정 에러 발생시에만 사용하세요.
	if (nErrorCode < 0) 
	{
		return;
	}
	
	
    switch(strSvcID)
    {
		// 코드분류 조회
        case "searchList" :
			ds_outletMenuGrpSub.copyData(ds_outletMenuGrp);
			//trace(ds_outletMenuGrpSub.rowcount);
            //trace(ds_list.saveXML());
            //trace("===" + ds_amList.getRowCount());
            break;
        
        // 저장
        case "save" :
			
			//ds_amList.setColumn(ds_amList.rowposition, "amcd", 0);
			gfn_alert("msg.save.success");	// 저장 되었습니다.
			fn_search();
            break;    
       case "delete" :
			gfn_alert("msg.save.success");	// 저장 되었습니다.
			fn_search();
			break;
    }
}


/************************************************************************************************
 * 사용자 FUNCTION 영역 (필수)
************************************************************************************************/




function grd_grupList_oncelldblclick(obj:Grid, e:GridClickEventInfo)
{
	
	var objDs = this[obj.binddataset];

	if (this.treeStatus == 1) 
	{
		this.treeStatus = 0;
		return;
	}

	var childRow = obj.getTreeChildRow(objDs.rowposition, 0, true);

	// 자식 노드가 존재할 경우
	if (childRow >= 0) 
		{
			var gridRow = obj.getTreeRow(objDs.rowposition);
			if (obj.isTreeCollapsedRow(childRow, true)) 
			{
				obj.setTreeStatus(gridRow, true);
			}
			else 
			{
				obj.setTreeStatus(gridRow, false);
			}
		}
		this.treeStatus = 0;
		
}

function grd_gropList_cantreestatuschange(obj:Grid, e:GridTreeStatusEventInfo)
{
	 
	this.treeStatus = 1;
}

function ds_menuClsfi_oncolumnchanged(obj:Dataset, e:DSColChangeEventInfo)
{
	//신규 추가행에 대해서만 처리한다.
	if (obj.getRowType(obj.rowposition) == Dataset.ROWTYPE_INSERT)
	{
		if (e.columnid == "dsplCd")
		{
			//이미 등록된 그룹코드가 존재하는지를 확인한다.
			var iFindRowIdx = obj.findRow("dsplCd", obj.getColumn(e.row, "dsplCd"), 0, obj.rowcount);
			var sMsg = "";
			
			//자기 자신을 제외하고 검색된 행이 존재할 시에는 중복 메시지를 표시한다.
			if (iFindRowIdx != e.row && iFindRowIdx != -1)
			{
				sMsg = "이미 등록된 코드가 존재합니다.\r\r행 번호 : " + (iFindRowIdx+1) + "\r입력 값 : " + obj.getColumn(e.row, "detailCd");
				gfn_alert(sMsg, "", "A");
				obj.setColumn(e.row, "dsplCd", "");
				grd_codeList.setCellPos(grd_codeList.getBindCellIndex("Body", "dsplCd"));
				grd_codeList.setFocus();
				return;	
			}
			
			//정상입력 이면 해당 그룹의 자료는 넣어 준다.
			//실제 값에 세팅 한다.
			var menuSclsfi = ds_menuClsfi.getColumn(e.row , "dsplCd");
			ds_menuClsfi.setColumn(e.row, "menuSclass", menuSclsfi);
		}
	}
}

 
 

function btn_grdTreeLevel_onclick(obj:Button,  e:ClickEventInfo)
{
	fn_SetTree(grd_gropList);
}

// 1 Level 이하 접기
function fn_SetTree(objGrd:Grid)
{

	var objDs = eval(objGrd.binddataset);
	
	if (objDs.rowcount >= 1) 
	{
		for (var i=objDs.rowcount - 1; i>=0; i--)
		{	
			if(objDs.getColumn(i, "treeKey") == '1')
			{
				gf_SetTreeStatus(objGrd, i, false);
			}
		}				
	}
	
	objDs.rowposition = 0;		
}



/*********************************************************************************************
** function name        : gf_SetTreeStatus
** function description : 그리드 트리에서 데이터셋의 row로 트리상태를 Expand/Collapse로 설정하는 함수
** argument             : obj				Grid Object
**                        nRow				연결된 Dataset에서의 Row
**                        bStatus			true - Expand, false - Collapse
** return Type          :
** return description   :
*********************************************************************************************/
function gf_SetTreeStatus(objGrd:Grid, nRow, bStatus)
{
	var objDs = eval(objGrd.binddataset);
	var nGRow = objGrd.getTreeRow(nRow);		// 주어진 Dataset Row에 해당하는 현재 Grid상의 Row를 구하는 Method
	
	if (objGrd.isTreeLeafRow(nRow) == false)	// 주어진 Tree Row가 Child가 없는 Row인지 확인
		objGrd.setTreeStatus(nGRow, bStatus);
	
	objDs.rowposition = nRow;
	
}



/*
 * 트리를 전체 닫는다.
*/
function btn_collApse_onclick(obj:Button,  e:ClickEventInfo)
{
	//Tree 전체 닫기
	this.grd_gropList.enableredraw = false;
	this.grd_gropList.treeinitstatus = "collapse,null";
	this.grd_gropList.enableredraw = true;
}
/*
 * 트리를 전체 닫는다.
*/
function btn_expand_onclick(obj:Button,  e:ClickEventInfo)
{
	//Tree 전체 열기
	this.grd_gropList.enableredraw = false;
	this.grd_gropList.treeinitstatus = "expand,all";
	this.grd_gropList.enableredraw = true;
	
}

function btn_menuClass_onclick(obj:Button,  e:ClickEventInfo)
{
	var arrParam = new Array();
	arrParam[0] = gfn_nvl( "","");					// 대중소 분류 대분류 코드를 검색 해라.
	arrParam[1] = gfn_nvl( "0","");
	arrParam[2] = gfn_nvl( "0","");
	 
	var rtnVal = gfn_dialog("ItemGrpPop"				// dialogId
					   , "X_SLE::ItemGrpPop.xfdl"		// Url
					   , {fv_Contents:arrParam}			// 배열
					   , null, null, null, null, null, false, true, -1);
	//trace(nRowIdx + "===" + rtnVal);
	if (typeof rtnVal != "undefined" && rtnVal != null) 
	{
		if (rtnVal[0] == "OK")
		{
			
			edt_menuClass.menuClassCd = rtnVal[1];
			edt_menuClass.value = rtnVal[2];
			ds_menuPool.setColumn(ds_menuPool.rowposition , "menuClass", rtnVal[1]);
			ds_menuPool.setColumn(ds_menuPool.rowposition , "menuClassNm", rtnVal[2]);
			
		}
	}
}

function btn_menuClsfi_onclick(obj:Button,  e:ClickEventInfo)
{
	var arrParam = new Array();
	arrParam[0] = gfn_nvl( edt_menuClass.menuClassCd,"");					// 대중소 분류 대분류 코드를 검색 해라.
	arrParam[1] = gfn_nvl( "","");
	arrParam[2] = gfn_nvl( "0","");
	
	if (gfn_nvl( edt_menuClass.menuClassCd,"") == "")
	{
		gfn_alert("msg.noselect","대분류");
		return;
	}
	 
	var rtnVal = gfn_dialog("ItemGrpPop"				// dialogId
					   , "X_SLE::ItemGrpPop.xfdl"		// Url
					   , {fv_Contents:arrParam}			// 배열
					   , null, null, null, null, null, false, true, -1);
	//trace(nRowIdx + "===" + rtnVal);
	if (typeof rtnVal != "undefined" && rtnVal != null) 
	{
		if (rtnVal[0] == "OK")
		{
			
			edt_menuClsfi.menuClassCd = rtnVal[1];
			edt_menuClsfi.value = rtnVal[2];
			ds_menuPool.setColumn(ds_menuPool.rowposition , "menuClsfi", rtnVal[1]);
			ds_menuPool.setColumn(ds_menuPool.rowposition , "menuClsfiNm", rtnVal[2]);
		}
	}
}

function btn_menuSclass_onclick(obj:Button,  e:ClickEventInfo)
{
	var arrParam = new Array();
	arrParam[0] = gfn_nvl( edt_menuClass.menuClassCd,"");					// 대중소 분류 대분류 코드를 검색 해라.
	arrParam[1] = gfn_nvl( edt_menuClsfi.menuClassCd,"");
	arrParam[2] = gfn_nvl( "","");
	
	if (gfn_nvl( edt_menuClass.menuClassCd,"") == "")
	{
		gfn_alert("msg.noselect","대분류");
		return;
	}
	if (gfn_nvl( edt_menuClsfi.menuClassCd,"") == "")
	{
		gfn_alert("msg.noselect","중분류");
		return;
	} 
	var rtnVal = gfn_dialog("ItemGrpPop"				// dialogId
					   , "X_SLE::ItemGrpPop.xfdl"		// Url
					   , {fv_Contents:arrParam}			// 배열
					   , null, null, null, null, null, false, true, -1);
	//trace(nRowIdx + "===" + rtnVal);
	if (typeof rtnVal != "undefined" && rtnVal != null) 
	{
		if (rtnVal[0] == "OK")
		{
			
			edt_menuSclass.menuClassCd = rtnVal[1];
			edt_menuSclass.value = rtnVal[2];
			ds_menuPool.setColumn(ds_menuPool.rowposition , "menuSclass", rtnVal[1]);
			ds_menuPool.setColumn(ds_menuPool.rowposition , "menuSclassNm", rtnVal[2]);
			
		}
	}
}
 
function ds_menuClsfiList_oncolumnchanged(obj:Dataset, e:DSColChangeEventInfo)
{
	//체크박스를 누르면 관련된 것을 모두 처리 한다.
	
	//상위를 선택 하면 하위로 모두 선택 하는 것으로 한다.
	//하위가 선택되면 자동으로 상위는 모두 선택 하는 것으로 처리 한다.
	
	//1.현재 선택된 레벨이 0,1,2,3 중 어느 것인가 0은 모두 선택 한다.
	
	var treeKey = ds_menuClsfiList.getColumn(ds_menuClsfiList.rowposition, "treeKey");
	var treeChk = ds_menuClsfiList.getColumn(ds_menuClsfiList.rowposition, "treeChk");
	if (treeKey == "0")
	{
		//최상위를 체크한경우
		for(var i = ds_menuClsfiList.getRowCount()-1 ; i >= 0 ; i--)
		{
			ds_menuClsfiList.setColumn(i, "treeChk", treeChk); 
		}
	}
	else if ( treeKey == "1")
	{
		var treeChk = ds_menuClsfiList.getColumn(ds_menuClsfiList.rowposition, "treeChk");
		var menuClass = ds_menuClsfiList.getColumn(ds_menuClsfiList.rowposition, "menuClass");
		for(var i = ds_menuClsfiList.rowposition ; i <= ds_menuClsfiList.getRowCount()-1 ; i++)
		{
			var menuClassTo = ds_menuClsfiList.getColumn(i, "menuClass");
			if (menuClass == menuClassTo) 
			{ 
				ds_menuClsfiList.setColumn(i, "treeChk", treeChk); 
			}
		}
	}
	else if (treeKey == "2")
	{
		var treeChk = ds_menuClsfiList.getColumn(ds_menuClsfiList.rowposition, "treeChk");
		var menuClass = ds_menuClsfiList.getColumn(ds_menuClsfiList.rowposition, "menuClass");
		var menuClsfi = ds_menuClsfiList.getColumn(ds_menuClsfiList.rowposition, "menuClsfi");
		var topCheckYn=""
		
		
		
		
		for(var i = ds_menuClsfiList.rowposition ; i <= ds_menuClsfiList.getRowCount()-1 ; i++)
		{
			var menuClassTo = ds_menuClsfiList.getColumn(i, "menuClass");
			var menuClsfiTo = ds_menuClsfiList.getColumn(i, "menuClsfi");
			
			if ((menuClass == menuClassTo) && (menuClsfi == menuClsfiTo))
			{ 
				ds_menuClsfiList.setColumn(i, "treeChk", treeChk); 
			}
			
		}
		
		topCheckYn="0"
		for(var i = 0 ; i <= ds_menuClsfiList.getRowCount()-1 ; i++)
		{
			//상위가 선택 되었는가.
			var menuClassTo = ds_menuClsfiList.getColumn(i, "menuClass");
			var menuClsfiTo = ds_menuClsfiList.getColumn(i, "menuClsfi");
			var tempCheck = ds_menuClsfiList.getColumn(i, "treeChk");
			
			if ((menuClass == menuClassTo) && (menuClsfiTo != "00"))
			{ 
				if (tempCheck == "1") 
				{
					topCheckYn="1"	
					break;
				}
			}
		}
		//trace("menuClass:" + menuClass);
		for(var i = 0 ; i <= ds_menuClsfiList.getRowCount()-1 ; i++)
		{
			var menuClassTo = ds_menuClsfiList.getColumn(i, "menuClass");
			var menuClsfiTo = ds_menuClsfiList.getColumn(i, "menuClsfi");
			//trace("menuClassTo:" + menuClassTo + "  menuClsfiTo:" + menuClsfiTo );
			if ((menuClass == menuClassTo) && (menuClsfiTo == "00"))
			{ 
				ds_menuClsfiList.setColumn(i, "treeChk", topCheckYn); 
			}
		}
		
	}
	else if (treeKey="3")
	{
		var treeChk = ds_menuClsfiList.getColumn(ds_menuClsfiList.rowposition, "treeChk");
		var menuClass = ds_menuClsfiList.getColumn(ds_menuClsfiList.rowposition, "menuClass");
		var menuClsfi = ds_menuClsfiList.getColumn(ds_menuClsfiList.rowposition, "menuClsfi");
		var menuSclass = ds_menuClsfiList.getColumn(ds_menuClsfiList.rowposition, "menuSclass");
		var topClassYn=""
		var topClsfiYn=""
		
		
		//상위를 체크 해야 하는지 말아야 하는지를 확인한다. 
		topClsfiYn="0"
		for(var i = 0 ; i <= ds_menuClsfiList.getRowCount()-1 ; i++)
		{
			var menuClassTo = ds_menuClsfiList.getColumn(i, "menuClass");		//대
			var menuClsfiTo = ds_menuClsfiList.getColumn(i, "menuClsfi");		//중
			var menuSclassTo = ds_menuClsfiList.getColumn(i, "menuSclass");		//소
			var tempCheck = ds_menuClsfiList.getColumn(i, "treeChk");
			
			var menuClsfiNm = ds_menuClsfiList.getColumn(i, "menuClsfiNm");
			
			//trace("menuClsfiNm:"+ menuClsfiNm +" menuClass  :" + menuClass   + "  menuClsfi  :" + menuClsfi   + " menuSclass  :" + menuSclass   );
			//  trace("menuClsfiNm:"+ menuClsfiNm +" menuClassTo:" + menuClassTo + "  menuClsfiTo:" + menuClsfiTo + " menuSclassTo:" + menuSclassTo );
			//trace("");
			
			//중분류를 체크 할것인가.
			if ((menuClass == menuClassTo) && ( menuClsfi == menuClsfiTo)  &&  ( menuSclassTo != "00") )
			{ 
				//trace("bbbb " + tempCheck );
				if (tempCheck == "1") 
				{
					topClsfiYn="1"	
					break;
				}
			}
		}
		//trace("topClsfiYn:" + topClsfiYn);
		for(var i = 0 ; i <= ds_menuClsfiList.getRowCount()-1 ; i++)
		{
			var menuClassTo = ds_menuClsfiList.getColumn(i, "menuClass");
			var menuClsfiTo = ds_menuClsfiList.getColumn(i, "menuClsfi");
			var menuSclassTo = ds_menuClsfiList.getColumn(i, "menuSclass");
			//trace("menuClassTo:" + menuClassTo + "  menuClsfiTo:" + menuClsfiTo );
			if ((menuClass == menuClassTo) && (menuClsfi  == menuClsfiTo) && (menuSclassTo == "00")) 
			{ 
				//trace("aaaa673 " + topClsfiYn);
				ds_menuClsfiList.setColumn(i, "treeChk", topClsfiYn); 
				break;
			}
		}
	
		//상분류
		
		 
		topClassYn="0"
		for(var i = 0 ; i <= ds_menuClsfiList.getRowCount()-1 ; i++)
		{
			//상위가 선택 되었는가.
			var menuClassTo = ds_menuClsfiList.getColumn(i, "menuClass");
			var menuClsfiTo = ds_menuClsfiList.getColumn(i, "menuClsfi");
			var tempCheck = ds_menuClsfiList.getColumn(i, "treeChk");
			
			if ((menuClass == menuClassTo) && (menuClsfiTo != "00"))
			{ 
				if (tempCheck == "1") 
				{
					topClassYn="1"	
					break;
				}
			}
		}
		for(var i = 0 ; i <= ds_menuClsfiList.getRowCount()-1 ; i++)
		{
			var menuClassTo = ds_menuClsfiList.getColumn(i, "menuClass");
			var menuClsfiTo = ds_menuClsfiList.getColumn(i, "menuClsfi");
			//trace("menuClassTo:" + menuClassTo + "  menuClsfiTo:" + menuClsfiTo );
			if ((menuClass == menuClassTo) && (menuClsfiTo == "00"))
			{ 
				ds_menuClsfiList.setColumn(i, "treeChk", topClassYn); 
				break;
			}
		}
		
		 
	}
	
	
	
	
	
	
}

//자료저장
function btn_send_onclick(obj:Button,  e:ClickEventInfo)
{
	//업장 선택은
	if (gfn_nvl(edt_upjang.getUpjangCode(),"") == "") 
	{
		gfn_alert("msg.noselect","업장");
		return;
	}
	
	//선택된것이 하나도 없는 경우
	var tempSelect = "";
	for(var i = 0 ; i <= ds_menuClsfiList.getRowCount()-1 ; i++)
	{
		var tempCheck  = ds_menuClsfiList.getColumn(i, "treeChk");
		if (tempCheck == "1") 
		{
			tempSelect = "OK";
		}
	}
	if (tempSelect == "") 
	{
		gfn_alert("msg.err.grid.noselect");
		return;
	}
	
	//선택된 항목을 찾아서 저장 처리 한다.
	for(var i = 0 ; i <= ds_menuClsfiList.getRowCount()-1 ; i++)
	{
		var menuClass  = ds_menuClsfiList.getColumn(i, "menuClass");
		var menuClsfi  = ds_menuClsfiList.getColumn(i, "menuClsfi");
		var menuSclass = ds_menuClsfiList.getColumn(i, "menuSclass");
		var tempCheck  = ds_menuClsfiList.getColumn(i, "treeChk");
		if (tempCheck == "1") 
		{ 
			var tempType = "I";
			for(var j = 0 ; j <= ds_outletMenuGrp.getRowCount()-1 ; j++)
			{
				var menuClassTo  = ds_outletMenuGrp.getColumn(j, "menuClass");
				var menuClsfiTo  = ds_outletMenuGrp.getColumn(j, "menuClsfi");
				var menuSclassTo = ds_outletMenuGrp.getColumn(j, "menuSclass");
				//모두 같으면
				if ((menuClass == menuClassTo) && (menuClsfi == menuClsfiTo) && (menuSclass == menuSclassTo))
				{
					tempType = "U";
					break;
				}
			}
			//추가인가, 수정인가(수정인경우 j 값이 수정할 위치 입니다.
			if (tempType == "I")
			{
				var nRowIdx = ds_outletMenuGrp.addRow();	//행추가
	
				ds_outletMenuGrp.setColumn(nRowIdx, "outletCd",    gfn_nvl(edt_upjang.getUpjangCode(),""));
				ds_outletMenuGrp.setColumn(nRowIdx, "menuClass",   menuClass);
				ds_outletMenuGrp.setColumn(nRowIdx, "menuClsfi",   menuClsfi);
				ds_outletMenuGrp.setColumn(nRowIdx, "menuSclass",  menuSclass);
				ds_outletMenuGrp.setColumn(nRowIdx, "menuClsfiNm", ds_menuClsfiList.getColumn(i, "menuClsfiNm"));
				ds_outletMenuGrp.setColumn(nRowIdx, "picPlace",    ds_menuClsfiList.getColumn(i, "picPlace"));
				ds_outletMenuGrp.setColumn(nRowIdx, "langae1",     ds_menuClsfiList.getColumn(i, "langae1"));
				ds_outletMenuGrp.setColumn(nRowIdx, "langae2",     ds_menuClsfiList.getColumn(i, "langae2"));
				ds_outletMenuGrp.setColumn(nRowIdx, "langae3",     ds_menuClsfiList.getColumn(i, "langae3"));
				ds_outletMenuGrp.setColumn(nRowIdx, "useYn", 1);
			}
			else
			{
				var nRowIdx = j;							//수정할행 위치 넘기기
				ds_outletMenuGrp.setColumn(nRowIdx, "outletCd",    gfn_nvl(edt_upjang.getUpjangCode(),""));
				ds_outletMenuGrp.setColumn(nRowIdx, "menuClass",   menuClass);
				ds_outletMenuGrp.setColumn(nRowIdx, "menuClsfi",   menuClsfi);
				ds_outletMenuGrp.setColumn(nRowIdx, "menuSclass",  menuSclass);
				ds_outletMenuGrp.setColumn(nRowIdx, "menuClsfiNm", ds_menuClsfiList.getColumn(i, "menuClsfiNm"));
				ds_outletMenuGrp.setColumn(nRowIdx, "picPlace",    ds_menuClsfiList.getColumn(i, "picPlace"));
				ds_outletMenuGrp.setColumn(nRowIdx, "langae1",     ds_menuClsfiList.getColumn(i, "langae1"));
				ds_outletMenuGrp.setColumn(nRowIdx, "langae2",     ds_menuClsfiList.getColumn(i, "langae2"));
				ds_outletMenuGrp.setColumn(nRowIdx, "langae3",     ds_menuClsfiList.getColumn(i, "langae3"));
				ds_outletMenuGrp.setColumn(nRowIdx, "useYn", 1);
			}
		}
	}
	//저장
	fn_save(); 
	
}

//오른쪽의 것을 삭제 한다.
function btn_recv_onclick(obj:Button,  e:ClickEventInfo)
{
	//업장 선택은
	if (gfn_nvl(edt_upjang.getUpjangCode(),"") == "") 
	{
		gfn_alert("msg.noselect","영업장");
		return;
	}
	
	//선택된것이 하나도 없는 경우
	var tempSelect = "";
	for(var i = 0 ; i <= ds_outletMenuGrpSub.getRowCount()-1 ; i++)
	{
		var tempCheck  = ds_outletMenuGrpSub.getColumn(i, "treeChk");
		if (tempCheck == "1") 
		{
			tempSelect = "OK";
		}
	}
	if (tempSelect == "") 
	{
		gfn_alert("msg.err.grid.noselect");
		return;
	}
	if (gfn_dsIsUpdated(ds_outletMenuGrpSub)==false )
 	{
 		gfn_alert("msg.save.nochange");	// 변경된 내역이 없습니다.
 		return;
 	}
	
	//테이블복사
	//ds_outletMenuGrp.clearData();
	//ds_outletMenuGrp.copyData(ds_outletMenuGrpSub);

	//선택된 항목을 찾아서 저장 처리 한다.
	var rtVal = gfn_confirm("confirm.before.action");	// 작업을 처리하시겠습니까?
	if (rtVal == true) 
	{	
  
		// 저장시 Validation Check	 "rc/sle/itemGrpMgmt/searchList.xdo";
		if (gfn_validCheck(ds_outletMenuGrpSub, ds_outletMenuGrpValid) == false)	return;
		
		
		trace('outletcd:' +ds_outletMenuGrpSub.getColumn('outletCd',ds_outletMenuGrpSub.rowposition));
		
		var strSvcID    = "delete";
		var strURL      = "rc/sle/menuGrpMgmt/deleteData.xdo";
		var strInDs     = "ds_outletMenuGrpSub=ds_outletMenuGrpSub:U";
		var strOutDs    = "";
		var strArg      = "";
		var strCallback = "fn_callBack";
		var bAsync      = true;
		
		gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
		return;
	}
	
	
}

 

//오른쪽 그리드 선택 Action
function ds_outletMenuGrpSub_oncolumnchanged(obj:Dataset, e:DSColChangeEventInfo)
{
	
	//체크박스를 누르면 관련된 것을 모두 처리 한다.
	
	//상위를 선택 하면 하위로 모두 선택 하는 것으로 한다.
	//하위가 선택되면 자동으로 상위는 모두 선택 하는 것으로 처리 한다.
	
	//1.현재 선택된 레벨이 0,1,2,3 중 어느 것인가 0은 모두 선택 한다.
	//trace('Start');
	
	var treeKey = obj.getColumn(obj.rowposition, "treeKey");
	var treeChk = obj.getColumn(obj.rowposition, "treeChk");
	//trace('treeChk:' + treeChk);
	
	if (treeKey == "0")
	{
		//최상위를 체크한경우
		for(var i = obj.getRowCount()-1 ; i >= 0 ; i--)
		{
			obj.setColumn(i, "treeChk", treeChk); 
		}
	}
	else if ( treeKey == "1")
	{
		var treeChk = obj.getColumn(obj.rowposition, "treeChk");
		var menuClass = obj.getColumn(obj.rowposition, "menuClass");
		for(var i = obj.rowposition ; i <= obj.getRowCount()-1 ; i++)
		{
			var menuClassTo = obj.getColumn(i, "menuClass");
			if (menuClass == menuClassTo) 
			{ 
				obj.setColumn(i, "treeChk", treeChk); 
			}
		}
	}
	else if (treeKey == "2")
	{
		var treeChk = obj.getColumn(obj.rowposition, "treeChk");
		var menuClass = obj.getColumn(obj.rowposition, "menuClass");
		var menuClsfi = obj.getColumn(obj.rowposition, "menuClsfi");
		var topCheckYn=""
		
		for(var i = obj.rowposition ; i <= obj.getRowCount()-1 ; i++)
		{
			var menuClassTo = obj.getColumn(i, "menuClass");
			var menuClsfiTo = obj.getColumn(i, "menuClsfi");
			
			if ((menuClass == menuClassTo) && (menuClsfi == menuClsfiTo))
			{ 
				obj.setColumn(i, "treeChk", treeChk); 
			}
			
		}
		
		topCheckYn="1"
		for(var i = 0 ; i <= obj.getRowCount()-1 ; i++)
		{
			//상위가 선택 되었는가.
			var menuClassTo = obj.getColumn(i, "menuClass");
			var menuClsfiTo = obj.getColumn(i, "menuClsfi");
			var tempCheck = obj.getColumn(i, "treeChk");
			
			if ((menuClass == menuClassTo) && (menuClsfiTo != "0"))
			{ 
				if (tempCheck == "0") 
				{
					topCheckYn="0"	
					break;
				}
			}
		}
		
		//trace("menuClass:" + menuClass);
		for(var i = 0 ; i <= obj.getRowCount()-1 ; i++)
		{
			var menuClassTo = obj.getColumn(i, "menuClass");
			var menuClsfiTo = obj.getColumn(i, "menuClsfi");
			//trace("menuClassTo:" + menuClassTo + "  menuClsfiTo:" + menuClsfiTo );
			if ((menuClass == menuClassTo) && (menuClsfiTo == "0"))
			{ 
				obj.setColumn(i, "treeChk", topCheckYn); 
			}
		}
		
	}
	else if (treeKey="3")
	{
		var treeChk = obj.getColumn(obj.rowposition, "treeChk");
		var menuClass = obj.getColumn(obj.rowposition, "menuClass");
		var menuClsfi = obj.getColumn(obj.rowposition, "menuClsfi");
		var menuSclass = obj.getColumn(obj.rowposition, "menuSclass");
		var topClassYn=""
		var topClsfiYn=""
		
		
		//상위를 체크 해야 하는지 말아야 하는지를 확인한다. 
		topClsfiYn="1"
		for(var i = 0 ; i <= obj.getRowCount()-1 ; i++)
		{
			var menuClassTo  = obj.getColumn(i, "menuClass");		//대
			var menuClsfiTo  = obj.getColumn(i, "menuClsfi");		//중
			var menuSclassTo = obj.getColumn(i, "menuSclass");
			var tempCheck    = obj.getColumn(i, "treeChk");
			
			//var menuClsfiNm = obj.getColumn(i, "menuClsfiNm");
			//trace("menuClsfiNm:"+ menuClsfiNm +" menuClass  :" + menuClass   + "  menuClsfi  :" + menuClsfi   + " menuSclass  :" + menuSclass   );
			//trace("menuClsfiNm:"+ menuClsfiNm +" menuClassTo:" + menuClassTo + "  menuClsfiTo:" + menuClsfiTo + " menuSclassTo:" + menuSclassTo );
			//trace("tempCheck==>" + tempCheck);
			//trace("tempCheck==>" + ds_outletMenuGrpSub.getColumn(i, "treeChk"));
			//중분류를 체크 할것인가.
			if ((menuClass == menuClassTo) && ( menuClsfi == menuClsfiTo)  &&  ( menuSclassTo != "0") )
			{ 
				//trace("bbbb " + tempCheck );
				if (tempCheck == "0") 
				{
					topClsfiYn="0"	
					break;
				}
			}
		}
		
		//trace("topClsfiYn:" + topClsfiYn);
		for(var i = 0 ; i <= obj.getRowCount()-1 ; i++)
		{
			var menuClassTo = obj.getColumn(i, "menuClass");
			var menuClsfiTo = obj.getColumn(i, "menuClsfi");
			var menuSclassTo = obj.getColumn(i, "menuSclass");
			//trace("menuClassTo:" + menuClassTo + "  menuClsfiTo:" + menuClsfiTo );
			if ((menuClass == menuClassTo) && (menuClsfi  == menuClsfiTo) && (menuSclassTo == "0")) 
			{ 
				//trace("aaaa673 " + topClsfiYn);
				obj.setColumn(i, "treeChk", topClsfiYn); 
				break;
			}
		}
	
		//상분류
		
		 
		topClassYn="1"
		for(var i = 0 ; i <= obj.getRowCount()-1 ; i++)
		{
			//상위가 선택 되었는가.
			var menuClassTo = obj.getColumn(i, "menuClass");
			var menuClsfiTo = obj.getColumn(i, "menuClsfi");
			var tempCheck = obj.getColumn(i, "treeChk");
			
			if ((menuClass == menuClassTo) && (menuClsfiTo != "0"))
			{ 
				if (tempCheck == "0") 
				{
					topClassYn="0"	
					break;
				}
			}
		}
		for(var i = 0 ; i <= obj.getRowCount()-1 ; i++)
		{
			var menuClassTo = obj.getColumn(i, "menuClass");
			var menuClsfiTo = obj.getColumn(i, "menuClsfi");
			//trace("menuClassTo:" + menuClassTo + "  menuClsfiTo:" + menuClsfiTo );
			if ((menuClass == menuClassTo) && (menuClsfiTo == "0"))
			{ 
				obj.setColumn(i, "treeChk", topClassYn); 
				break;
			}
		}
		
		 
	}
 
}



 //사업부 변경되는 경우
function fn_muChange(obj, event)
{
	edt_tm.setTmCode("");
	edt_upjang.setUpjangCode("");
	ds_menuClsfiList.clearData();
	ds_outletMenuGrp.clearData();
	ds_outletMenuGrpSub.clearData();
}
//팀(운영부서) 변경되는 경우
function fn_tmChange(obj, data)
{
	edt_upjang.setUpjangCode("");
	ds_menuClsfiList.clearData();
	ds_outletMenuGrp.clearData();
	ds_outletMenuGrpSub.clearData();
}
function fn_upjangChange(obj,data)
{
	ds_menuClsfiList.clearData();
	ds_outletMenuGrp.clearData();
	ds_outletMenuGrpSub.clearData();

}
  
]]></Script>
  </Form>
</FDL>
