<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="..\..\..\default_typedef.xml"/>
  <Form id="ReceiveReg" onload="form_onload" titletext="(수입)가입고 등록" position="absolute 0 0 1252 725" scrollbars="none">
    <Layouts>
      <Layout>
        <Grid autoenter="select" binddataset="ds_list" cellmovingtype="col" cellsizingtype="both" enable="true" id="grd_list" useinputpanel="false" selecttype="row" taborder="6" tabstop="true" usecontextmenu="true" useselcolor="true" visible="true" wheelscrollrow="1" position="absolute 0 63 1237 710" readonly="false" autofittype="none" anchor="all" cellclickbound="control" onexpandup="grd_list_onexpandup">
          <Formats>
            <Format id="Default">
              <Columns>
                <Column size="39"/>
                <Column size="80"/>
                <Column size="108"/>
                <Column size="133"/>
                <Column size="120"/>
                <Column size="120"/>
                <Column size="150"/>
                <Column size="120"/>
                <Column size="66"/>
                <Column size="100"/>
                <Column size="100"/>
                <Column size="70"/>
                <Column size="100"/>
                <Column size="98"/>
                <Column size="100"/>
                <Column size="80"/>
                <Column size="100"/>
              </Columns>
              <Rows>
                <Row size="26" band="head"/>
                <Row size="24"/>
                <Row size="24" band="summ"/>
              </Rows>
              <Band id="head">
                <Cell displaytype="checkbox" text="상태"/>
                <Cell col="1" text="귀속부서"/>
                <Cell col="2" text="P/O No"/>
                <Cell col="3" text="B/L No"/>
                <Cell col="4" text="매입처"/>
                <Cell col="5" text="매출처"/>
                <Cell col="6" style="color: ;" class="grd_WF_Essential" text="품목명"/>
                <Cell col="7" style="color: ;" class="grd_WF_Essential" text="창고명"/>
                <Cell col="8" style="color: ;" class="grd_WF_Essential" text="단위"/>
                <Cell col="9" style="color: ;" class="grd_WF_Essential" text="수량"/>
                <Cell col="10" style="color: ;" class="grd_WF_Essential" text="중량"/>
                <Cell col="11" style="background: ;" text="선적환율"/>
                <Cell col="12" displaytype="text" style="color: ;" class="grd_WF_Essential" text="단가(USD)"/>
                <Cell col="13" text="금액(USD)"/>
                <Cell col="14" style="color: ;" class="grd_WF_Essential" text="단가(KRW)"/>
                <Cell col="15" text="금액(KRW)"/>
                <Cell col="16" style="color: ;" class="grd_WF_Essential" text="품목코드"/>
              </Band>
              <Band id="body">
                <Cell displaytype="checkbox" edittype="checkbox" style="align:center;" text="bind:chk"/>
                <Cell col="1" displaytype="normal" edittype="none" style="align:center;" text="bind:attachDeptNm"/>
                <Cell col="2" style="align:center;" text="bind:poOrderNum"/>
                <Cell col="3" style="align:center;" text="bind:blNum"/>
                <Cell col="4" displaytype="text" style="align: ;" text="bind:splrNm" expandshow="hide"/>
                <Cell col="5" displaytype="text" edittype="none" style="align: ;" text="bind:salsplceNm" expandshow="hide" expandsize="21"/>
                <Cell col="6" displaytype="text" style="align: ;" text="bind:itemNm"/>
                <Cell col="7" displaytype="text" edittype="expand" style="align:left;" text="bind:whNm" expandshow="show" expandsize="21"/>
                <Cell col="8" displaytype="combo" edittype="combo" style="align:center;" text="bind:unit"/>
                <Cell col="9" displaytype="number" edittype="masknumber" text="bind:entryReqQuantity" mask="#,##0.##"/>
                <Cell col="10" displaytype="number" edittype="masknumber" text="bind:entryReqWgt" mask="#,##0.00"/>
                <Cell col="11" displaytype="number" edittype="none" style="align: ;" text="bind:exchangeRate" mask="#,##0.00"/>
                <Cell col="12" displaytype="number" edittype="masknumber" style="align: ;" text="bind:uprice" mask="#,##0.00"/>
                <Cell col="13" displaytype="number" edittype="masknumber" text="bind:entryReqWonwtrAmt" mask="#,##0.00"/>
                <Cell col="14" displaytype="number" edittype="masknumber" text="bind:krwUprice" mask="#,##0"/>
                <Cell col="15" displaytype="number" edittype="masknumber" text="bind:krwWonwtrAmt" mask="#,##0"/>
                <Cell col="16" displaytype="text" edittype="expand" style="align:center;" text="bind:itemCd" expandshow="show" expandsize="21"/>
              </Band>
              <Band id="summary">
                <Cell colspan="2" style="align:center;" text="합계" taborder="undefined"/>
                <Cell col="2"/>
                <Cell col="3"/>
                <Cell col="4"/>
                <Cell col="5"/>
                <Cell col="6"/>
                <Cell col="7"/>
                <Cell col="8"/>
                <Cell col="9" displaytype="number" expr="expr:getSum(&quot;entryReqQuantity&quot;)" mask="#,##0"/>
                <Cell col="10" displaytype="number" expr="expr:getSum(&quot;entryReqWgt&quot;)" mask="#,##0.00"/>
                <Cell col="11" displaytype="number" mask="#,##0.00"/>
                <Cell col="12" displaytype="number" expr="expr:getSum(&quot;uprice&quot;)" mask="#,##0.00"/>
                <Cell col="13" displaytype="number" expr="expr:getSum(&quot;entryReqWonwtrAmt&quot;)" mask="#,##0.00"/>
                <Cell col="14" displaytype="number" expr="expr:getSum(&quot;krwUprice&quot;)" mask="#,##0"/>
                <Cell col="15" displaytype="number" edittype="masknumber" text="expr:getSum(&quot;krwWonwtrAmt&quot;)"/>
                <Cell col="16"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Static id="Static71" text="h15" class="Guide01_AreaRed" visible="false" position="absolute 0 710 1252 725" anchor="left bottom"/>
        <Static id="Static05" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 1237 0 1252 710" anchor="top right"/>
        <Static id="Static16" text="글자기준간격 h05" class="Guide01_AreaRed" visible="false" position="absolute 0 58 1242 63" anchor="left top"/>
        <Static id="Static22" text="가입고 등록" class="sta_WF_Title01" position="absolute 0 45 362 63" anchor="left top"/>
        <Button id="Button01" taborder="4" class="btn_WF_GrdMinus" position="absolute 1219 38 1237 58" anchor="top right" onclick="fn_deleteRow"/>
        <Div id="div_cmnBtn" anchor="left top right" taborder="20" url="cmn::CmnBtn.xfdl" text="Div0" scrollbars="none" position="absolute 0 0 1237 30"/>
        <Button id="btn_blSearch" taborder="2" text="BL찾기" class="btn_WF_Function" position="absolute 1130 38 1197 58" anchor="top right" onclick="btn_blSearch_onclick"/>
        <Static id="Static08" class="sta_WFSA_Labelbg" position="absolute 7 742 1244 783" anchor="left top right" visible="false"/>
        <Static id="Static28" text="입고일" class="sta_WFSA_label" position="absolute 22 752 82 773" anchor="left top" visible="false"/>
        <Static id="Static15" text="h13" class="Guide01_AreaRed" visible="false" position="absolute 7 783 457 796" anchor="left top"/>
        <Static id="Static17" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 68 752 78 773" anchor="left top"/>
        <ObjCalendar id="cal_startTerm" titletext="캘린더" taborder="0" text="ObjCalendar00" scrollbars="none" position="absolute 78 752 176 773" visible="false"/>
        <Static id="Static01" text="~" position="absolute 180 755 198 772" visible="false"/>
        <ObjCalendar id="cal_endTerm" titletext="캘린더" taborder="1" text="ObjCalendar00" scrollbars="none" position="absolute 193 752 292 773" visible="false"/>
        <Button id="Button00" taborder="3" onclick="fn_addRow" class="btn_WF_GrdPlus" position="absolute 1199 38 1217 58" anchor="top right"/>
        <Static id="Static10" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 7 742 22 787" anchor="left top"/>
        <Static id="Static27" text="h06" class="Guide01_AreaRed" visible="false" position="absolute 809 783 1249 789" anchor="top right"/>
        <Static id="Static60" text="h15" class="Guide01_AreaRed" visible="false" position="absolute 0 30 578 45" anchor="left top"/>
        <Button id="btn_whAllReg" taborder="21" text="창고일괄등록" class="btn_WF_Function" position="absolute 1044 38 1128 58" anchor="top right" onclick="btn_whAllReg_onclick"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_list" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false" oncolumnchanged="ds_list_oncolumnchanged">
        <ColumnInfo>
          <Column id="chk" type="INT" size="256"/>
          <Column id="entryNum" type="STRING" size="14"/>
          <Column id="entryItemSeq" type="BIGDECIMAL" size="22"/>
          <Column id="poOrderNum" type="STRING" size="16"/>
          <Column id="itemSeq" type="BIGDECIMAL" size="22"/>
          <Column id="itemCd" type="STRING" size="53"/>
          <Column id="itemNm" type="STRING" size="200"/>
          <Column id="unit" type="STRING" size="50"/>
          <Column id="uprice" type="BIGDECIMAL" size="22"/>
          <Column id="entryReqQuantity" type="BIGDECIMAL" size="22"/>
          <Column id="entryReqWgt" type="BIGDECIMAL" size="22"/>
          <Column id="entryReqWonwtrAmt" type="BIGDECIMAL" size="22"/>
          <Column id="taxPrice" type="BIGDECIMAL" size="22"/>
          <Column id="gvrntaxRate" type="BIGDECIMAL" size="22"/>
          <Column id="whCd" type="STRING" size="50"/>
          <Column id="origin" type="STRING" size="50"/>
          <Column id="chargCost" type="BIGDECIMAL" size="22"/>
          <Column id="ioutCost" type="BIGDECIMAL" size="22"/>
          <Column id="incomeDtrDsctNum" type="STRING" size="20"/>
          <Column id="estNo" type="STRING" size="20"/>
          <Column id="cuser" type="STRING" size="20"/>
          <Column id="cdate" type="DATETIME" size="7"/>
          <Column id="uuser" type="STRING" size="20"/>
          <Column id="udate" type="DATETIME" size="7"/>
          <Column id="hsCd" type="STRING" size="256"/>
          <Column id="whNm" type="STRING" size="256"/>
          <Column id="poQuantity" type="STRING" size="256"/>
          <Column id="entryAccumQuantity" type="STRING" size="256"/>
          <Column id="clAmountUnit" type="STRING" size="256"/>
          <Column id="poItemSeq" type="STRING" size="256"/>
          <Column id="entryQuantity" type="STRING" size="256"/>
          <Column id="entryEndQuantity" type="STRING" size="256"/>
          <Column id="originNationCd" type="STRING" size="256"/>
          <Column id="originNationNm" type="STRING" size="256"/>
          <Column id="attachDept" type="STRING" size="256"/>
          <Column id="exchangeRate" type="STRING" size="256"/>
          <Column id="attachDeptNm" type="STRING" size="256"/>
          <Column id="krwUprice" type="BIGDECIMAL" size="256"/>
          <Column id="salsplceNm" type="STRING" size="256"/>
          <Column id="blNum" type="STRING" size="256"/>
          <Column id="splrNm" type="STRING" size="256"/>
          <Column id="salsplceCd" type="STRING" size="256"/>
          <Column id="splrCd" type="STRING" size="256"/>
          <Column id="saleType" type="STRING" size="256"/>
          <Column id="poType" type="STRING" size="256"/>
          <Column id="deliverNum" type="STRING" size="256"/>
          <Column id="kgConvertRate" type="STRING" size="256"/>
          <Column id="set1" type="STRING" size="256"/>
          <Column id="krwWonwtrAmt" type="BIGDECIMAL" size="256"/>
          <Column id="quantity" type="STRING" size="256"/>
          <Column id="wgt" type="STRING" size="256"/>
          <Column id="tempEntryReqWgt" type="STRING" size="256"/>
          <Column id="tempEntryReqQuantity" type="STRING" size="256"/>
          <Column id="useYn" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_listValid" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false" oncolumnchanged="ds_groupList_oncolumnchanged">
        <ColumnInfo>
          <Column id="itemCd" type="STRING" size="255"/>
          <Column id="itemNm" type="STRING" size="255"/>
          <Column id="whNm" type="STRING" size="256"/>
          <Column id="unit" type="STRING" size="256"/>
          <Column id="exchangeRate" type="STRING" size="256"/>
          <Column id="entryReqQuantity" type="STRING" size="256"/>
          <Column id="uprice" type="STRING" size="256"/>
          <Column id="wonwtrAmt" type="STRING" size="256"/>
          <Column id="entryReqWgt" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="itemCd">title:품목코드,required:true</Col>
            <Col id="itemNm">title:품목명,required:true</Col>
            <Col id="unit">title:단위,required:true</Col>
            <Col id="entryReqQuantity">title:수량,required:true</Col>
            <Col id="uprice">title:단가,required:true</Col>
            <Col id="wonwtrAmt">title:원물금액,required:true</Col>
            <Col id="entryReqWgt">title:중량,required:true</Col>
            <Col id="exchangeRate">title:선적환율,required:true,focus:exchangeRate</Col>
            <Col id="whNm">title:창고코드,required:true</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_search" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="startTerm" type="STRING" size="256"/>
          <Column id="endTerm" type="STRING" size="256"/>
          <Column id="unit" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_temp" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="wonwtrAmt" type="BIGDECIMAL" size="22"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item2" compid="cal_endTerm" propid="text" datasetid="ds_search" columnid="endTerm"/>
    </Bind>
    <Script type="xscript4.0"><![CDATA[/*
  화 면 명 : 가입고등록
  파 일 명 : ReceiveReg.xfdl
  기    능 : Design 및 Script Template 

    수정일    수정자                  수정내용
  ----------   -------  --------------------------------------------------
  2015.04.12   	kksoo	최초 생성
  2017.04.03	kihoon	[CH201704_00035](수입)가입고 등록 시 금액(USD) 차이로 저장오류. 
*/

/************************************************************************************************
 * 공통 라이브러리 INCLUDE 영역 (필수)
************************************************************************************************/
include "lib::lib_com.xjs";
include "lib::FTCommon.xjs";

/************************************************************************************************
 * FORM 변수 선언 영역 (필수)
************************************************************************************************/
var fv_iProcessCnt = 0; //저장에 대한 처리건수를 저장한다.(AuthMgmtController에서 할당함.)
var fv_entryNum;
var fv_set1;	//실단위
var fv_currRow;
var fv_copyFlag = true;
var fv_flag;
var fv_totEntryReqWonwtrAmt =0;

/************************************************************************************************
 * FORM EVENT 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : Form Load (필수)
 *---------------------------------------------------------------------------------------------*/
function form_onload(obj:Form, e:LoadEventInfo)
{	
	// Form Load 시 공통 기능 처리(obj:Form, bCreateEvent:이벤트 생성 여부)
	gfn_formOnLoad(this);
	
	// 초기값 셋팅
	fn_init();
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 초기값 셋팅
 *---------------------------------------------------------------------------------------------*/
function fn_init()
{
	// Grid내의 input field를 자동 선택 제어 함수
	FTCommon.setGridAutoSelect (this, true);
	
	ds_search.addRow();
	
	SCCombo.bind2(this, "ComCode", "grd_list.unit", null, {groupCode:"ITEM_UNIT", useYn:"Y", defVal:"", isLast:true, lastEvent:"fn_combo2LastCallback"});		//단위
	
	// calendar 초기화(해당Form, 값지정, 값변경시 실행할 callBack함수, dataset과 bind, 필수여부)
	var calStartTerm = gfn_addDate(gfn_today(),-7);
	cal_startTerm.fn_initMonthCal(this, calStartTerm, "fn_calendarCallBack", ds_search, "startTerm");	
	cal_endTerm.fn_initMonthCal(this, gfn_today(), "fn_calendarCallBack", ds_search, "endTerm");
}

/*----------------------------------------------------------------------------------------------
 * 설명      : combo last callback
 *---------------------------------------------------------------------------------------------*/
function fn_combo2LastCallback()
{
	//fn_search();
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 조회 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_search()
{
 	// v_ds_check 미사용시 변경사항 체크
 	if (gfn_dsIsUpdated(ds_list)) 
 	{
		// 검색을 진행하면 변경된 데이터가 사라집니다. 계속 진행 하시겠습니까?
 		var retValue = gfn_confirm("confirm.before.search");
 		if (retValue == false) return;
 	}
 	
 	if (gfn_isNull(cal_startTerm.fn_getValue()) || gfn_isNull(cal_endTerm.fn_getValue()))
	{
		gfn_alert("조회일자를 입력하여 주십시오!");
		return;
	}
	if (cal_startTerm.fn_getValue() > cal_endTerm.fn_getValue())
	{
		gfn_alert("시작일이 종료일보다 큽니다.");
		return;
	}
 	
    // Grid sort 표시 초기화(필수)
    gfn_clearSortMark(grd_list);
    
    //코드목록을 초기화한다.
    ds_list.clearData();

    var strSvcID    = "select";
    var strURL      = "ft/fdm/entryMst/selectReceiveRegList.xdo";
    var strInDs     = "ds_search=ds_search:A";
    var strOutDs    = "ds_search=ds_search ds_entryMst=ds_entryMst ds_list=ds_list";
    var strArg      = "";
    var strCallback = "fn_callBack";
    var bAsync      = true;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
}

/************************************************************************************************
 * TRANSACTION 및 CallBack 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 트랜잭션 콜백 함수 (필수)
 *---------------------------------------------------------------------------------------------*/
function fn_callBack(strSvcID, nErrorCode, strErrorMsg)
{
	// 에러시 gfn_callBack에서 메시지 제공, 화면별 특정 에러 발생시에만 사용하세요.
	if (nErrorCode < 0) 
	{
		return;
	}
	
    switch(strSvcID)
    {
		//품의 조회
        case "select" :
            break;
        // 저장
        case "save" :
			if (fv_iProcessCnt > 0) {
				gfn_alert("msg.save.success");	// 저장 되었습니다.
				fv_flag = "UPDATE";
				//fn_search();
			}
            break;
        case "getUnitInfo":
			if ( fv_set1 != "" )
			{
				ds_list.setColumn(fv_currRow, "set1", fv_set1  );
			}
			break;	            
            
    }
}

/*------------------------------------------------------------
	1. Function ID : fn_Close()
	2. 개       요 : 업무프로세스에 따른 입력작업
	3. 기       능 : 입력버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
*/
function fn_close()
{
	return true;
}


/*----------------------------------------------------------------------------------------------
 * 설명      : 저장 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_save()
{
	//v_ds_check 미사용시 변경사항 체크
 	if ( !gfn_dsIsUpdated(ds_list)  )
 	{
 		gfn_alert("msg.save.nochange");	// 변경된 내역이 없습니다.
 		return;	
 	}
	
	if (gfn_validCheck(ds_list, ds_listValid) == false)	return;
	
	
	var totEntryReqWonwtrAmt = 0;
	var chkCnt = 0;
	for ( var i=0; i<ds_list.getRowCount(); i++)
	{
		if ( ds_list.getColumn(i, "chk") == 1 )
		{	
			totEntryReqWonwtrAmt +=toNumber(ds_list.getColumn(i, "entryReqWonwtrAmt"));
		}
	}
	trace("totEntryReqWonwtrAmt:"+totEntryReqWonwtrAmt);
	trace("fv_totEntryReqWonwtrAmt:"+fv_totEntryReqWonwtrAmt);
	
	if ( fv_totEntryReqWonwtrAmt != totEntryReqWonwtrAmt )
	{
		gfn_alert("PO 품목의 원물금액의 합과 가입고할 원물금액이 틀립니다.(" + fv_totEntryReqWonwtrAmt + " / " + totEntryReqWonwtrAmt + ")");
		return;
	}
	return;
	if (!gfn_confirm("confirm.before.save")) return false;
	
    var strSvcID    = "save";
    var strURL      = "ft/fdm/inventoryMgmtDeliver/saveReceiveReg.xdo";
    var strInDs     = "ds_search=ds_search ds_list=ds_list:A";
    var strOutDs    = "";
    var strArg      = "";
    var strCallback = "fn_callBack";
    var bAsync      = true;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);	

}

/*----------------------------------------------------------------------------------------------
 * 설명      : 품목 행추가
 *---------------------------------------------------------------------------------------------*/
function fn_addRow(obj:Button,  e:ClickEventInfo)
{
	fv_copyFlag = false;
	if ( ds_list.getRowCount() ==0 ) return;

	var chkCnt = 0;
	for ( var i=0; i<ds_list.getRowCount(); i++)
	{
		if ( ds_list.getColumn(i, "chk") == 1 )
		{
			chkCnt++;
		}
	}

	//체크된 항목이 하나만 체크 카피
	if(chkCnt != 1)
	{
		gfn_alert("하나만 체크하세요");
		return;
	}
	
	var currRow = ds_list.rowposition;
	var insRow = ds_list.insertRow(ds_list.getRowCount()+1)
	
	ds_list.copyRow(insRow, ds_list, currRow);
		
	ds_list.setColumn(insRow, "itemCd", "" );
	ds_list.setColumn(insRow, "itemNm", "");
	ds_list.setColumn(insRow, "itemSeq", "");
	ds_list.setColumn(insRow, "whCd", "");
	ds_list.setColumn(insRow, "whNm", "");
	ds_list.setColumn(insRow, "uprice", "");
	ds_list.setColumn(insRow, "krwUprice", "");
	ds_list.setColumn(insRow, "entryReqQuantity", "");
	ds_list.setColumn(insRow, "entryReqWgt", "");
	fv_copyFlag = true;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 품목 행삭제
 *---------------------------------------------------------------------------------------------*/
function fn_deleteRow(obj:Button,  e:ClickEventInfo)
{
	
	for(var i = ds_list.getRowCount()-1 ; i >= 0 ; i--)
	{
		if (ds_list.getColumn(i, "chk") == 1)
		{
			if (ds_list.getRowType(i) == Dataset.ROWTYPE_INSERT)
			{
				ds_list.deleteRow(i);
			}
			else
			{
				ds_list.setColumn(i, "useYn", 0);
				bIsProcRow = true;
			}
		}
	}
}

function fn_calendarCallBack() {
}

/*----------------------------------------------------------------------------------------------
 * 설명      : BL찾기 버튼 클릭시
 *---------------------------------------------------------------------------------------------*/
function btn_blSearch_onclick(obj:Button,  e:ClickEventInfo)
{
	var arrParam = new Array();
	
	var  arrRtn = gfn_dialog("BlListPop"				// dialogId                                                                                          
					   , "X_FDM::BlListPop.xfdl"			// 품목찾기 팝업 호출                                                                            
					   , {fv_Contents:arrParam}			// 배열
					   , null, null, null, null, null, false, true, -1);                                                                                          
	fv_copyFlag = false;	
	
	ds_temp.clearData;
	
	if ( arrRtn !=null && arrRtn.rowcount > 0 )                                                                                                                                  
	{               
		var totEntryReqWonwtrAmt = 0;				
		for ( var i=0; i<arrRtn.rowcount; i++ )
		{
			var chkDup = true;	
			for ( var j=0; j<ds_list.getRowCount(); j++ )
			{
				if ( (arrRtn.getColumn(i, "poOrderNum") == ds_list.getColumn(j, "poOrderNum")) && (arrRtn.getColumn(i, "itemCd")== ds_list.getColumn(j, "itemCd"))  && (arrRtn.getColumn(i, "itemSeq")== ds_list.getColumn(j, "itemSeq")))
				{
					gfn_alert("P/O No["+arrRtn.getColumn(i, "poOrderNum")+"] 품목코드["+arrRtn.getColumn(i, "itemCd")+"] 이 중복됩니다.");
					chkDup  = false;
					break;
				}

			}
			if (chkDup)	  //중복된 데이타 빼고 추가
			{
				var insRow = ds_list.insertRow(ds_list.getRowCount()+i);
				ds_list.setColumn(insRow, "chk", arrRtn.getColumn(i, "chk"));
				ds_list.setColumn(insRow, "attachDept", arrRtn.getColumn(i, "attachDept"));
				ds_list.setColumn(insRow, "attachDeptNm", arrRtn.getColumn(i, "attachDeptNm"));
				ds_list.setColumn(insRow, "blNum", arrRtn.getColumn(i, "blNum"));
				ds_list.setColumn(insRow, "salsplceCd", arrRtn.getColumn(i, "salsplceCd"));
				ds_list.setColumn(insRow, "salsplceNm", arrRtn.getColumn(i, "salsplceNm"));
				ds_list.setColumn(insRow, "splrCd", arrRtn.getColumn(i, "splrCd"));
				ds_list.setColumn(insRow, "splrNm", arrRtn.getColumn(i, "splrNm"));
				ds_list.setColumn(insRow, "exchangeRate", arrRtn.getColumn(i, "exchangeRate"));
				ds_list.setColumn(insRow, "krwUprice", arrRtn.getColumn(i, "krwUprice"));
				ds_list.setColumn(insRow, "krwWonwtrAmt", arrRtn.getColumn(i, "krwWonwtrAmt"));
				ds_list.setColumn(insRow, "saleType", arrRtn.getColumn(i, "saleType"));
				ds_list.setColumn(insRow, "poType", arrRtn.getColumn(i, "poType"));
				
				ds_list.setColumn(insRow, "itemCd", arrRtn.getColumn(i, "itemCd"));
				ds_list.setColumn(insRow, "itemSeq", arrRtn.getColumn(i, "itemSeq"));
				ds_list.setColumn(insRow, "itemNm", arrRtn.getColumn(i, "itemNm"));
				ds_list.setColumn(insRow, "whCd", arrRtn.getColumn(i, "whCd"));
				ds_list.setColumn(insRow, "whNm", arrRtn.getColumn(i, "whNm"));
				ds_list.setColumn(insRow, "chargCost", arrRtn.getColumn(i, "chargCost"));					//창고보관비
				ds_list.setColumn(insRow, "ioutCost", arrRtn.getColumn(i, "ioutCost"));						//입출고비
				ds_list.setColumn(insRow, "hsCd", arrRtn.getColumn(i, "hsCd"));								//HS코드
				ds_list.setColumn(insRow, "poQuantity", arrRtn.getColumn(i, "quantity"));					//PO수량	
				ds_list.setColumn(insRow, "entryAccumQuantity", arrRtn.getColumn(i, "entryAccumQuantity"));	//통관누적수량
				ds_list.setColumn(insRow, "entryEndQuantity", arrRtn.getColumn(i, "entryEndQuantity"));		//통관완료수량
				ds_list.setColumn(insRow, "entryQuantity", arrRtn.getColumn(i, "entryQuantity"));			//통관수량
				ds_list.setColumn(insRow, "unit", arrRtn.getColumn(i, "unit"));								//단위
				ds_list.setColumn(insRow, "uprice", arrRtn.getColumn(i, "uprice"));							//단가
				ds_list.setColumn(insRow, "kgConvertRate", arrRtn.getColumn(i, "kgConvertRate"));							//단가
				ds_list.setColumn(insRow, "set1", arrRtn.getColumn(i, "set1"));							//단가

				ds_list.setColumn(insRow, "quantity", arrRtn.getColumn(i, "quantity"));							//단가
				ds_list.setColumn(insRow, "wgt", arrRtn.getColumn(i, "wgt"));							//단가

				
				var entryReqWonwtrAmt = arrRtn.getColumn(i, "entryQuantity") * arrRtn.getColumn(i, "uprice");
				
				//아래 계산시 소숫점이 이상하게 나오는 현상이 있어 ds_temp 데이터셋에 임시로 담은 후 합계를 생성함 2016.01.07
				//totEntryReqWonwtrAmt += toNumber(arrRtn.getColumn(i, "wonwtrAmt")); 
				//ds_temp.insertRow(i);
				var nRow = ds_temp.addRow();
				ds_temp.setColumn(nRow, "wonwtrAmt", arrRtn.getColumn(i, "wonwtrAmt"));	
				
				ds_list.setColumn(insRow, "entryReqWonwtrAmt", arrRtn.getColumn(i, "wonwtrAmt"));	
				ds_list.setColumn(insRow, "entryReqWgt", arrRtn.getColumn(i, "entryWgt"));						//중량
				ds_list.setColumn(insRow, "entryReqQuantity", arrRtn.getColumn(i, "entryQuantity"));			//요청수량
				 
				ds_list.setColumn(insRow, "tempEntryReqWgt", arrRtn.getColumn(i, "entryWgt"));						//중량
				ds_list.setColumn(insRow, "tempEntryReqQuantity", arrRtn.getColumn(i, "entryQuantity"));			//요청수량 
				
				ds_list.setColumn(insRow, "clAmountUnit", arrRtn.getColumn(i, "amountUnit"));				//화폐단위
				ds_list.setColumn(insRow, "poOrderNum", arrRtn.getColumn(i, "poOrderNum"));					//PO NO
				ds_list.setColumn(insRow, "poItemSeq", arrRtn.getColumn(i, "itemSeq"));						//PO ITEM SEQ
				ds_list.setColumn(insRow, "gvrntaxRate", arrRtn.getColumn(i, "gvrntaxRate"));				//관세율
				ds_list.setColumn(insRow, "origin", arrRtn.getColumn(i, "origin"));							//원산지
				ds_list.setColumn(insRow, "incomeDtrDsctNum", arrRtn.getColumn(i, "incomeDtrDsctNum"));		//수입 유통 식별 번호
				ds_list.setColumn(insRow, "estNo", arrRtn.getColumn(i, "estNo"));							//estNo
				ds_list.setColumn(insRow, "originNationCd", arrRtn.getColumn(i, "originNationCd"));			//원산지코드
				ds_list.setColumn(insRow, "originNationNm", arrRtn.getColumn(i, "originNm"));				//원산지코드

				ds_list.setColumn(insRow, "whCd", arrRtn.getColumn(i, "deliverWhCd"));				//창고코드
				ds_list.setColumn(insRow, "whNm", arrRtn.getColumn(i, "deliverWhNm"));				//창고명
			
			}		
		}
		
		totEntryReqWonwtrAmt = ds_temp.getSum("wonwtrAmt");
		fv_totEntryReqWonwtrAmt = totEntryReqWonwtrAmt;
		
	} 	
	trace("totEntryReqWonwtrAmt:"+totEntryReqWonwtrAmt);
	trace("fv_totEntryReqWonwtrAmt:"+fv_totEntryReqWonwtrAmt);
	fv_copyFlag = true;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 품목 그리드 품목 팝업 expand시
 *---------------------------------------------------------------------------------------------*/
function grd_list_onexpandup(obj:Grid, e:GridMouseEventInfo)
{
	if(e.row <= -1) return;
    var sColumn = gfn_getCellColId(obj, e.col);

	//Expand 클릭시
	if (sColumn == "itemCd")
	{
		var arrParam = new Array();
		arrParam[0] = gfn_nvl(ds_list.getColumn(e.row, "itemCd"), "");	// 전송할 파라미터 1
		var  arrRtn = gfn_dialog("ItemSearchPop"				// dialogId
						   , "X_FSI::ItemSearchPop.xfdl"			// 품목찾기 팝업 호출
						   , {fv_Contents:arrParam}			// 배열
						   , null, null, null, null, null, false, true, -1);
		if ( arrRtn instanceof Object )
		{
			ds_list.setColumn(e.row, "itemCd", arrRtn["itemCode"]  );
			ds_list.setColumn(e.row, "itemNm", arrRtn["itemName"]  );	
			ds_list.setColumn(e.row, "kgConvertRate", arrRtn["kgConvertRate"]  );	
		}
	} 
	else if (sColumn == "whNm")	  //창고찾기
	{
		var arrParam = new Array();
		arrParam[0] = gfn_nvl(ds_list.getColumn(e.row, "whCd"), "");		// 전송할 파라미터 1
		arrParam[1] = gfn_nvl(ds_list.getColumn(e.row, "whNm"), "");		// 전송할 파라미터 2
		arrParam[2] = "50";	// 창고
		var  arrRtn = gfn_dialog("ContrtPop"				// dialogId
						   , "X_FSI::ContrtPop.xfdl"		// 매출처 팝업 호출
						   , {fv_Contents:arrParam}			// 배열
						   , null, null, null, null, null, false, true, -1);
		if ( arrRtn instanceof Object )
		{
			ds_list.setColumn(e.row, "whCd", arrRtn["vdCd"]  );
			ds_list.setColumn(e.row, "whNm", arrRtn["vdNmLoc"]  );	
			
		}		
	}
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 그리드 컬럼 변경시
 *---------------------------------------------------------------------------------------------*/
function ds_list_oncolumnchanged(obj:Dataset, e:DSColChangeEventInfo)
{
	if ( !fv_copyFlag ) return;
    fv_currRow = e.row;
	var quantity = toNumber(gfn_nvl(ds_list.getColumn(e.row, "entryReqQuantity")));
	var uprice = toNumber(gfn_nvl(ds_list.getColumn(e.row, "uprice")));
	var wgt = toNumber(gfn_nvl(ds_list.getColumn(e.row, "entryReqWgt")));
	var exchangeRate = toNumber(gfn_nvl(ds_list.getColumn(e.row, "exchangeRate")));
		
	fn_getUnitInfo( gfn_nvl(ds_list.getColumn(e.row, "unit")) );
	var kgConvertRate = gfn_nvl(ds_list.getColumn(e.row, "kgConvertRate"));
	var unit = gfn_nvl(ds_list.getColumn(e.row, "unit"));
	var set1 = ds_list.getColumn(e.row, "set1");
	var krwWonwtrAmt = gfn_nvl(ds_list.getColumn(e.row, "krwWonwtrAmt"));
		

	var poQuantity = gfn_nvl(ds_list.getOrgColumn(e.row, "quantity"));
	var poWgt = gfn_nvl(ds_list.getOrgColumn(e.row, "wgt"));
	//var avgWgt = poWgt/poQuantity;	//평균중량
	//alert(poWgt+"/"+poQuantity+"="+poWgt/poQuantity);		
	//var avgWgt = poWgt/poQuantity;	//평균중량
	
	/*
	var avgQuantity = ds_list.getOrgColumn(e.row, "tempEntryReqQuantity");
	var avgWgt = ds_list.getOrgColumn(e.row, "tempEntryReqWgt");
	*/
	var avgQuantity = ds_list.getColumn(e.row, "tempEntryReqQuantity");
	var avgWgt = ds_list.getColumn(e.row, "tempEntryReqWgt");
	avgWgt = avgWgt/avgQuantity;	//평균중량
		
	if (  e.columnid != "entryReqWgt" )
	{
		//ds_list.setColumn(e.row, "entryReqWgt", toNumber(gfn_nvl(ds_list.getColumn(e.row, "entryReqQuantity"))) * avgWgt );
		ds_list.setColumn(e.row, "entryReqWgt", toNumber(gfn_nvl(ds_list.getColumn(e.row, "entryReqQuantity"))) * kgConvertRate );
	}
	var base;
	//계산 기준 : KG이면 중량 단위가 BOX나 BDL이면 수량	
	if ( unit == 'KG') 
	{
		//ds_list.setColumn(e.row, "entryReqWgt", kgConvertRate * quantity );
		base = ds_list.getColumn(e.row, "entryReqWgt");
	} else
	{
		base = ds_list.getColumn(e.row, "entryReqQuantity");
	}		

	//금액 변경시 단가 변경하려면 아래 로직 필요 + 단가의 소숫점 단위 적용 필요
	//if(e.columnid == "entryReqQuantity" || e.columnid == "entryReqWgt" //|| e.columnid == "uprice" 
	//	|| e.columnid == "unit" || e.columnid == "entryReqWonwtrAmt" || e.columnid == "krwWonwtrAmt"
	//	) 
	
	if(e.columnid == "entryReqQuantity" || e.columnid == "entryReqWgt" //|| e.columnid == "uprice" 
		|| e.columnid == "unit" 
		) 		
	{
		//alert(unit+"//"+kgConvertRate+"//"+quantity+"//"+(kgConvertRate * quantity));
		//alert("set1 :"+set1);
		/*
		예) 100BOX 1,000KG 단가 1.80USD  총금액 180USD
			가입고로 입고박스 조정 50BOX  500KG ---> 단가는 180USD/50BOX = 3.6USD
		예시처럼 총금액은 그대로 두고 단가는 조정되어야 합니		
		*/		
		var entryReqWonwtrAmt = toNumber(ds_list.getColumn(e.row, "entryReqWonwtrAmt"));	  //금액
		var krwUprice = toNumber(ds_list.getColumn(e.row, "krwUprice"));	  //금액
		if ( unit == 'KG') 
		{
			//ds_list.setColumn(fv_currRow, "entryReqWgt", base * kgConvertRate);		//단가(USD)
			ds_list.setColumn(fv_currRow, "uprice", entryReqWonwtrAmt / ds_list.getColumn(fv_currRow, "entryReqWgt"));		//단가(USD)
			//alert(krwWonwtrAmt +"//"+ wgt);
			ds_list.setColumn(fv_currRow, "krwUprice",  ds_list.getColumn(fv_currRow, "krwWonwtrAmt") / ds_list.getColumn(fv_currRow, "entryReqWgt"));	//단가(KRW)

// 			ds_list.setColumn(fv_currRow, "entryReqWgt", quantity * kgConvertRate);		//단가(USD)
// 			ds_list.setColumn(fv_currRow, "uprice", entryReqWonwtrAmt / ds_list.getColumn(fv_currRow, "entryReqWgt"));		//단가(USD)
// 			ds_list.setColumn(fv_currRow, "krwUprice",  ds_list.getColumn(fv_currRow, "krwWonwtrAmt") / ds_list.getColumn(fv_currRow, "entryReqWgt"));	//단가(KRW)
		
		} 
		else
		{
			//alert(entryReqWonwtrAmt+"/"+ ds_list.getColumn(fv_currRow, "entryReqQuantity"));
			ds_list.setColumn(fv_currRow, "uprice", entryReqWonwtrAmt / ds_list.getColumn(fv_currRow, "entryReqQuantity"));		//단가(USD)
			ds_list.setColumn(fv_currRow, "krwUprice", entryReqWonwtrAmt / quantity * exchangeRate);	//단가(KRW)
			ds_list.setColumn(fv_currRow, "krwUprice",  ds_list.getColumn(fv_currRow, "krwWonwtrAmt") / ds_list.getColumn(fv_currRow, "entryReqQuantity"));	//단가(KRW)

// 			ds_list.setColumn(fv_currRow, "uprice", entryReqWonwtrAmt / ds_list.getColumn(fv_currRow, "entryReqQuantity"));		//단가(USD)
// 			ds_list.setColumn(fv_currRow, "krwUprice", entryReqWonwtrAmt / quantity * exchangeRate);	//단가(KRW)
// 			ds_list.setColumn(fv_currRow, "krwUprice",  ds_list.getColumn(fv_currRow, "krwWonwtrAmt") / ds_list.getColumn(fv_currRow, "entryReqQuantity"));	//단가(KRW)
		}
	}
}

/*----------------------------------------------------------------------------------------------
 * 설명      :단위변경시 단위에 해당하는 실단위 가져오기
 *---------------------------------------------------------------------------------------------*/
function fn_getUnitInfo(unit)
{
	ds_search.setColumn(0, "unit", unit);
    var strSvcID    = "getUnitInfo";
    var strURL      = "ft/ftp/getUnitInfo.xdo";
    var strInDs     = "ds_search=ds_search";
    var strOutDs    = "";
    var strArg      = "";
    var strCallback = "fn_callBack";
    var bAsync      = false;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);	
}

/*----------------------------------------------------------------------------------------------
 * 설명      :창고일괄등록 버튼 클릭시
 *---------------------------------------------------------------------------------------------*/
function btn_whAllReg_onclick(obj:Button,  e:ClickEventInfo)
{
	if ( ds_list.rowcount  == 0 ) return;
	
	var arrParam = new Array();
	arrParam[2] = "50";	// 창고
	var  arrRtn = gfn_dialog("ContrtPop"				// dialogId
					   , "X_FSI::ContrtPop.xfdl"		// 매출처 팝업 호출
					   , {fv_Contents:arrParam}			// 배열
					   , null, null, null, null, null, false, true, -1);
	if ( arrRtn instanceof Object )
	{
		
		for ( var i=0; i<ds_list.getRowCount(); i++)
		{
			if ( ds_list.getColumn(i, "chk") == 1 )
			{
				ds_list.setColumn(i, "whCd", arrRtn["vdCd"]  );
				ds_list.setColumn(i, "whNm", arrRtn["vdNmLoc"]  );	
			}
		}
		
	}		
	
}
]]></Script>
  </Form>
</FDL>
