<?xml version="1.0" encoding="utf-8"?>
<Script type="xscript4.0"><![CDATA[/**
 * 영업회계 공통 JS 스크립트
 * @ClassName SMCommon.xjs
 * @Description SMCommon javascript 
 * @Modification-Information
 *    수정일      수정자         수정내용
 *  ----------   ----------   -------------------------------
 *  2015.04.13   JUN          최초 생성
 *
 * @author FC종합전산구축 : JUN
 * @since 2015.04.13.
 * @version 1.0
 * @see 
 * 
 * Copyright (C) 2014 by HANWHA S&C CO.,LTD. All right reserved.
 */

/**
 * 영업유형Combo 조회 - 전체조회
 * @param thisForm - 현재 Form Object
 *        comboId - 조회하고자 하는 대상의 고유 KEY
 *        dsId - 조회하고자 하는 대상의 Dataset
 *		  typeGrpCd - 그룹코드
 * @fn_callBack - qid
 */
function gfn_setSalesTypeCd(thisForm, qid, dsId, typeGrpCd){
    gfn_transaction(thisForm
					,qid
					,"sm/cmn/common/selectTypeCd.xdo"
					,""
					,dsId+"=ds_combo"
					,"typeGrpCd="+wrapQuote(typeGrpCd)
					,"fn_callBack"
					,false);
}

/**
 * 영업유형Combo 조회 - 부서권한 적용
 * @param thisForm - 현재 Form Object
 *        comboId - 조회하고자 하는 대상의 고유 KEY
 *        dsId - 조회하고자 하는 대상의 Dataset
 *		  typeGrpCd - 그룹코드
 *		  muCd - 사업부코드
 *		  tmCd - 팀코드
 *		  ccCd - CC코드
 *		  gubun - 구분(A:전체, S:선택)
 * @fn_callBack - qid
 */
function gfn_setSalesTypeCdByDept(thisForm, qid, dsId, typeGrpCd, muCd, tmCd, ccCd, gubun){

	var params 	= "deptYn=Y"
				+ " typeGrpCd="	+wrapQuote(typeGrpCd)
				+ " muCd="		+wrapQuote(muCd)
				+ " tmCd="		+wrapQuote(tmCd)
				+ " ccCd="		+wrapQuote(ccCd)
				+ " gubun="		+wrapQuote(gubun)
				;
				
    gfn_transaction(thisForm
					,qid
					,"sm/cmn/common/selectTypeCd.xdo"
					,""
					,dsId+"=ds_combo"
					,params
					,"fn_callBack"
					,false);
}

/**
 * 전표유형에 해당하는 시스템코드Combo 조회
 * @param thisForm - 현재 Form Object
 *        comboId - 조회하고자 하는 대상의 고유 KEY
 *        dsId - 조회하고자 하는 대상의 Dataset
 *		  typeGrpCd - 그룹코드
 * @fn_callBack - qid
 */
function gfn_setSysClassBySlipType(thisForm, qid, dsId, slipType){
    gfn_transaction(thisForm
					,qid
					,"sm/cmn/common/selectSysClassBySlipType.xdo"
					,""
					,dsId+"=ds_combo"
					,"slipType="+wrapQuote(slipType)
					,"fn_callBack"
					,false);
}

/**
 * 사업부에 해당하는 시스템코드Combo 조회
 * @param thisForm - 현재 Form Object
 *        comboId - 조회하고자 하는 대상의 고유 KEY
 *        dsId - 조회하고자 하는 대상의 Dataset
 *		  typeGrpCd - 그룹코드
 * @fn_callBack - qid
 */
function gfn_setSysClassByMuCd(thisForm, qid, dsId, muCd){
    gfn_transaction(thisForm
					,qid
					,"sm/cmn/common/selectSysClassByMuCd.xdo"
					,""
					,dsId+"=ds_combo"
					,"muCd="+wrapQuote(muCd)
					,"fn_callBack"
					,false);
}

/**
 * 사업부에 해당하는 전표유형Combo 조회
 * @param thisForm - 현재 Form Object
 *        comboId - 조회하고자 하는 대상의 고유 KEY
 *        dsId - 조회하고자 하는 대상의 Dataset
 *		  typeGrpCd - 그룹코드
 * @fn_callBack - qid
 */
function gfn_setSlipTypeByMuCd(thisForm, qid, dsId, muCd){
    gfn_transaction(thisForm
					,qid
					,"sm/cmn/common/selectSlipTypeByMuCd.xdo"
					,""
					,dsId+"=ds_combo"
					,"muCd="+wrapQuote(muCd)
					,"fn_callBack"
					,false);
}

/**
 * 선수금 대체처리(이관포함)
 * @선행조건 - 필요한 데이터 저장
 * @내용 - gfn_saveAdvanceAltProc() 호출
 *         선수금대체마스터(SLA_ADVANCE_ALT_MST) 테이블 INSERT OR UPDATE
 *         선수금대체디테일(SLA_ADVANCE_ALT_DETAIL) 테이블 INSERT OR UPDATE
 *         선수금마스터(SLA_ADVANCE_MST) 테이블(적용금액 (+) UPDATE)
 * @param thisForm - 현재 Form Object
 *        qid - 조회하고자 하는 대상의 고유 KEY
 *        mDsId - 입력데이터셋1
 *        dDsId - 입력데이터셋2
 * @fn_callBack - qid
 */
function gfn_saveAdvanceAltProc(thisForm, qid, mDsId, dDsId){
	gfn_transaction(thisForm
					,qid
					,"sm/cmn/advanceCommon/setAdvanceAltProc.xdo"
					//,mDsId+"=ds_search:U "+dDsId+"=ds_list:U"
					,"ds_search="+mDsId+":U ds_list="+dDsId+":U"
					,""
					,""
					,"fn_callBack"
					,true);
}


/**
 * 선수금 이관 전 데이타 등록
 * @선행조건 - 필요한 데이터 저장
 * @내용 - gfn_saveAdvanceAltProc() 호출
 *         선수금대체마스터(SLA_ADVANCE_ALT_MST) 테이블 INSERT OR UPDATE
 *         선수금대체디테일(SLA_ADVANCE_ALT_DETAIL) 테이블 INSERT OR UPDATE
 *         선수금마스터(SLA_ADVANCE_MST) 테이블(적용금액 (+) UPDATE)
 * @param thisForm - 현재 Form Object
 *        qid - 조회하고자 하는 대상의 고유 KEY
 *        mDsId - 입력데이터셋1
 *        dDsId - 입력데이터셋2
 * @fn_callBack - qid
 */
function gfn_saveAdvanceAltProcReq(thisForm, qid, mDsId, dDsId){
	gfn_transaction(thisForm
					,qid
					,"sm/cmn/advanceCommon/setAdvanceAltProcReq.xdo"
					//,mDsId+"=ds_search:U "+dDsId+"=ds_list:U"
					,"ds_search="+mDsId+":U ds_list="+dDsId+":U"
					,""
					,""
					,"fn_callBack"
					,true);
}


/**
 * 선수금 대체취소(이관포함)
 * @선행조건 - 필요한 KEY 데이터 저장 (선수금번호, 선수금 대체번호 등)
 * @내용 - gfn_saveAdvanceAltProc() 호출
 *         선수금대체마스터(SLA_ADVANCE_ALT_MST) 테이블 DELETE(RECD_STATUS = 'D')
 *         선수금대체디테일(SLA_ADVANCE_ALT_DETAIL) 테이블 DELETE(RECD_STATUS = 'D')
 *         선수금마스터(SLA_ADVANCE_MST) 테이블(적용금액 (-) UPDATE)
 * @param thisForm - 현재 Form Object
 *        qid - 조회하고자 하는 대상의 고유 KEY
 *        mDsId - 입력데이터셋1
 *        dDsId - 입력데이터셋2
 * @fn_callBack - qid
 */
function gfn_saveAdvanceAltCancel(thisForm, qid, mDsId, dDsId){
	gfn_transaction(thisForm
					,qid
					,"sm/cmn/advanceCommon/setAdvanceAltCancel.xdo"
					//,mDsId+"=ds_search:U "+dDsId+"=ds_list:U"
					,"ds_search="+mDsId+":U ds_list="+dDsId+":U"
					,""
					,""
					,"fn_callBack"
					,true);
}

/**
 * 가수금 대체처리
 * @선행조건 - 필요한 데이터 저장
 * @내용 - gfn_saveSuspenseAltProc() 호출
 *         가수금대체마스터(SLA_SUSPENSE_ALT_MST) 테이블 INSERT OR UPDATE
 *         가수금대체디테일(SLA_SUSPENSE_ALT_DETAIL) 테이블 INSERT OR UPDATE
 *         가수금마스터(SLA_SUSPENSE_MST) 테이블(입금금액 (+) UPDATE)
 * @param thisForm - 현재 Form Object
 *        qid - 조회하고자 하는 대상의 고유 KEY
 *        mDsId - 입력데이터셋1
 *        dDsId - 입력데이터셋2
 * @fn_callBack - qid
 */
function gfn_saveSuspenseAltProc(thisForm, qid, dDsId){
	gfn_transaction(thisForm
					,qid
					,"sm/cmn/suspenseCommon/setSuspenseAltProc.xdo"
					//,dDsId+"=ds_list:U"
					,"ds_list="+dDsId+":U"
					,""
					,""
					,"fn_callBack"
					,true);
}

/**
 * 가수금 대체취소
 * @선행조건 - 필요한 KEY 데이터 저장 (선수금번호, 선수금 대체번호 등)
 * @내용 - gfn_saveSuspenseAltProc() 호출
 *         가수금대체마스터(SLA_SUSPENSE_ALT_MST) 테이블 DELETE(RECD_STATUS = 'D')
 *         가수금대체디테일(SLA_SUSPENSE_ALT_DETAIL) 테이블 DELETE(RECD_STATUS = 'D')
 *         가수금마스터(SLA_SUSPENSE_MST) 테이블(입금금액 (-) UPDATE)
 * @param thisForm - 현재 Form Object
 *        qid - 조회하고자 하는 대상의 고유 KEY
 *        mDsId - 입력데이터셋1
 *        dDsId - 입력데이터셋2
 * @fn_callBack - qid
 */
function gfn_saveSuspenseAltCancel(thisForm, qid, dDsId){
	gfn_transaction(thisForm
					,qid
					,"sm/cmn/suspenseCommon/setSuspenseAltCancel.xdo"
					//,dDsId+"=ds_list:U"
					,"ds_list="+dDsId+":U"
					,""
					,""
					,"fn_callBack"
					,true);
}

/**
 * 마감처리/취소
 * @선행조건 - 	occrDate : 발생일자
 *				sysClass : 시스템구분
 *				upjangCd : 업장코드
 *				closeYn  : 마감여부(처리:Y, 취소:N)
 * @내용 - SP_SLA_SALS_POS_MAGAM_PROC() 호출
 * @param thisForm - 현재 Form Object
 *        qid - 조회하고자 하는 대상의 고유 KEY
 *        dDsId - 입력데이터셋
 * @fn_callBack - qid
 */
function gfn_saveCloseProc(thisForm, qid, dDsId){	//occrDate, sysClass, upjangCd, closeYn){
	gfn_transaction(thisForm
					,qid
					,"sm/cmn/closeCommon/setPosCloseProc.xdo"
					//,dDsId+"=ds_close:U"
					,"ds_close="+dDsId+":U"
					,""
					,""//,"closeYn="+closeYn+" occrDate="+wrapQuote(occrDate)+" sysClass="+wrapQuote(sysClass)+" upjangCd="+wrapQuote(upjangCd)
					,"fn_callBack"
					,true);
}

/**
 * 가수금 잔액 체크
 * @param thisForm - 현재 Form Object
 *        qid - 조회하고자 하는 대상의 고유 KEY
 *        dDsId - 입력데이터셋
 * @fn_callBack - qid
 */
function gfn_getSuspenseAltYn(thisForm, qid, dDsId){
    gfn_transaction(thisForm
					,qid
					,"sm/cmn/suspenseCommon/getSuspenseAltYn.xdo"
					//,dDsId+"=ds_list:A"
					,"ds_list="+dDsId+":A"
					,"ds_chk=ds_chk"
					,""
					,"fn_callBack"
					,false);
}

/**
 * 선수금 잔액 체크
 * @param thisForm - 현재 Form Object
 *        qid - 조회하고자 하는 대상의 고유 KEY
 *        dDsId - 입력데이터셋
 * @fn_callBack - qid
 */
function gfn_getAdvanceAltYn(thisForm, qid, dDsId){
    gfn_transaction(thisForm
					,qid
					,"sm/cmn/advanceCommon/getAdvanceAltYn.xdo"
					//,dDsId+"=ds_list:A"
					,"ds_list="+dDsId+":A"
					,"ds_chk=ds_chk"
					,""
					,"fn_callBack"
					,false);
}					
					
/**
 * 영업현금 잔액 체크
 * @param thisForm - 현재 Form Object
 *        qid - 조회하고자 하는 대상의 고유 KEY
 *        dDsId - 입력데이터셋
 * @fn_callBack - qid
 */
function gfn_getCashAltYn(thisForm, qid, dDsId){
    gfn_transaction(thisForm
					,qid
					,"sm/cmn/common/getCashAltYn.xdo"
					//,dDsId+"=ds_list:A"
					,"ds_list="+dDsId+":A"
					,"ds_chk=ds_chk"
					,""
					,"fn_callBack"
					,false);
}

/**
 * 채권(입금) 잔액 체크
 * @param thisForm - 현재 Form Object
 *        qid - 조회하고자 하는 대상의 고유 KEY
 *        dDsId - 입력데이터셋
 * @fn_callBack - qid
 */
function gfn_getArReceiveYn(thisForm, qid, dDsId){
    gfn_transaction(thisForm
					,qid
					,"sm/cmn/common/getArReceiveYn.xdo"
					//,dDsId+"=ds_list:A"
					,"ds_list="+dDsId+":A"
					,"ds_chk=ds_chk"
					,""
					,"fn_callBack"
					,false);
}
]]></Script>
