<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="../../../default_typedef.xml"/>
  <Form id="s" onload="form_onload" titletext="일별손익실적관리" position="absolute 0 0 1252 725" scrollbars="none" onkeydown="fn_FormKeyDown">
    <Layouts>
      <Layout>
        <Grid autoenter="select" binddataset="ds_Pivot" cellmovingtype="col" cellsizingtype="both" readonly="false" enable="true" id="gd_list" useinputpanel="false" onenterdown="gd_list_OnEnterDown" onheadclick="gd_list_OnHeadClick" taborder="3" tabstop="false" usecontextmenu="true" useselcolor="true" visible="true" wheelscrollrow="1" position="absolute 0 86 1237 710" selecttype="row" anchor="all" oncellclick="gd_list_oncellclick" class="grd_WF_LineNone">
          <Formats>
            <Format id="Default">
              <Columns>
                <Column size="28" band="left"/>
                <Column size="208" band="left"/>
                <Column size="140"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell rowspan="2" style="align:center middle;" class="head_Excel">
                  <Cell displaytype="text" class="head_Excel"/>
                  <Cell row="1"/>
                </Cell>
                <Cell col="1" rowspan="2" displaytype="text" text="계  정"/>
                <Cell col="2" displaytype="text" text="00/00(월)"/>
                <Cell row="1" col="2" displaytype="checkbox" edittype="checkbox" editautoselect="true"/>
              </Band>
              <Band id="body">
                <Cell displaytype="text" style="align:right;" expr="expr:currow + 1"/>
                <Cell col="1" displaytype="text" style="align:left;background:seashell;background2:seashell;" text="bind:MGMT_ACCT_NAME" suppress="1"/>
                <Cell col="2" displaytype="number" edittype="expr:setEditExpr(iif(g_AuthLevel &lt; '14', iif(CLOSE_YN == 'N', iif(INPUT_YN== 'Y','masknumber','none'),'none'), iif(INPUT_YN== 'Y','masknumber','none')))" style="align:right;background:EXPR(iif(g_AuthLevel &lt; '14',iif(CLOSE_YN == 'N', iif(INPUT_YN== 'N', 'lemonchiffon', 'white'), 'aliceblue'), iif(INPUT_YN== 'N', 'lemonchiffon', 'white')));background2:EXPR(iif(g_AuthLevel &lt; '14',iif(CLOSE_YN == 'N', iif(INPUT_YN== 'N', 'lemonchiffon', 'white'), 'aliceblue'), iif(INPUT_YN== 'N', 'lemonchiffon', 'white')));" text="bind:ACT_AMT" mask="#,##0" combocodecol="CD" combodatacol="NM"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Static id="Static06" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 1237 0 1252 710" anchor="top right"/>
        <Static id="Static71" text="h15" class="Guide01_AreaRed" visible="false" position="absolute 0 710 1252 725" anchor="left bottom"/>
        <Div id="div_cmnBtn" anchor="left top right" taborder="20" url="cmn::CmnBtn.xfdl" text="Div00" scrollbars="none" position="absolute 0 0 1237 30"/>
        <Static id="Static08" class="sta_WFSA_Labelbg" position="absolute 0 30 1237 71" anchor="left top right"/>
        <Static id="Static09" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 0 30 93 40"/>
        <Static id="Static05" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 0 61 93 71"/>
        <Static id="Static10" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 0 40 15 61"/>
        <Static id="Static17" text="h15" class="Guide01_AreaRed" visible="false" position="absolute 0 71 450 86"/>
        <Static id="Static14" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 33 40 43 61"/>
        <Static id="Static04" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 213 40 243 61"/>
        <Static id="Static11" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 598 40 608 61"/>
        <TextArea id="ta_Sql" readonly="true" taborder="2" tabstop="false" visible="false" position="absolute 340 0 454 29"/>
        <Static id="Static8" text="사업장" position="absolute 244 40 339 61" class="sta_WFSA_label"/>
        <Static id="st_Sabun" text="팀" userdata="strMAQuery_SABUN" position="absolute 15 40 38 61" class="sta_WFSA_label"/>
        <Edit autoselect="true" id="edt_TM" imemode="native" onkeydown="fn_edBtn_OnKeyDown" readonly="true" taborder="9" position="absolute 43 40 193 61" class="edt_WF_Essential"/>
        <Button id="edtBtn_TM" onclick="edtBtn_TM_OnClick" taborder="10" tabstop="false" position="absolute 192 40 213 61" class="btn_WF_popSearchEssential" text="" image=""/>
        <Edit autoselect="true" id="edt_UPJANG" imemode="native" onkeydown="fn_edBtn_OnKeyDown" readonly="true" taborder="11" position="absolute 299 40 478 61" class="edt_WF_Essential"/>
        <Button id="edtBtn_UPJANG" onclick="edtBtn_UPJANG_OnClick" taborder="12" tabstop="false" position="absolute 477 40 498 61" class="btn_WF_popSearchEssential" text="" image=""/>
        <MaskEdit id="cal_ADJ_DATEQuery" mask="####-##" ontextchanged="cal_ADJ_DATEQuery_OnChanged" oneditclick="g_Date_OnFocus" onsetfocus="g_Date_OnFocus" onkillfocus="g_Month_OnKillFocus" taborder="13" type="string" position="absolute 608 40 686 61" class="msk_WF_Cal"/>
        <Button id="edtBtn_Date" onclick="edtBtn_Date_OnClick" taborder="14" tabstop="false" userdata="cal_ADJ_DATEQuery" position="absolute 685 40 706 61" class="btn_WF_popSearch" text="" image=""/>
        <Static id="st_Name2" text="실적처리월" position="absolute 528 40 606 61" class="sta_WFSA_label"/>
        <Static id="st_MGMT_SABUNQuery" text="담당마케터" userdata="strMAQuery_SABUN" visible="false" position="absolute 244 61 339 82" class="sta_WFSA_label"/>
        <Edit id="edt_MGMT_SABUNQuery" ontextchanged="edt_MGMT_SABUNQuery_OnChanged" onkeydown="edt_MGMT_SABUNQuery_OnKeyDown" readonly="true" taborder="18" visible="false" position="absolute 324 61 478 82"/>
        <Button id="edtBtn_MGMT_SABUNQuery" onclick="edtBtn_MGMT_SABUNQuery_OnClick" taborder="19" tabstop="false" visible="false" position="absolute 477 61 498 82" class="btn_WF_popSearch" text="" image=""/>
        <Static id="Static02" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 498 40 528 61"/>
        <Static id="Static03" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 289 40 299 61"/>
        <Static id="Static07" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 314 62 324 83"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_Cond">
        <ColumnInfo>
          <Column id="INPUT_YM" size="50" type="STRING"/>
          <Column id="DOC_CD" size="50" type="STRING"/>
          <Column id="DOC_GUBUN" size="256" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_List" oncolumnchanged="ds_List_OnColumnChanged">
        <ColumnInfo>
          <Column id="P_MGMT_ACCT_CD" size="256" type="STRING"/>
          <Column id="MGMT_ACCT_CD" size="256" type="STRING"/>
          <Column id="MGMT_ACCT_NAME" size="256" type="STRING"/>
          <Column id="INPUT_YN" size="256" type="STRING"/>
          <Column id="P_DATE" size="256" type="STRING"/>
          <Column id="ACT_AMT" size="22" type="BIGDECIMAL"/>
          <Column id="CONFIRM_YN" size="256" type="STRING"/>
          <Column id="CLOSE_YN" size="256" type="STRING"/>
          <Column id="CP_CONFIRM_YN" size="256" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_Pivot" oncolumnchanged="ds_Pivot_oncolumnchanged"/>
    </Objects>
    <Script type="xscript4.0"><![CDATA[include "U_lib::lib_conversionCom.xjs";
/*
 ******************************************************************************************
 * 시스템구분   : 경영관리/
 * 프로그램명   : MAS40020E.XML
 * 기      능   : 일별손익실적관리
 * 작  성  자   : 김장욱
 * 작성  일자   : 2013-11-29
 * ----------------------------------------------------------------------------------------
 * HISTORY      : 2014-04-01 월추정 로직 추가 by FC기획팀 유영진(CH201404_00004)
                  김장욱 수정
 
 -주문정보
ELECT * FROM FMP_LUNCH A

--마감해제 정보
SELECT * FROM FMP_LUNCH_CLS A

--마감기준
SELECT A.SET1 AS CDAY, A.SET2 AS CDAY_DISP, A.SET3 AS CTIME, A.SET4 AS CTIME_DISP
  FROM SCC_COMMON_CODE A
 WHERE (1=1)
   AND A.USE_YN = 'Y'
   AND A.GROUP_CODE = 'FM0015'
   AND A.CODE = '0010'
   
--관리자
     
SELECT *
  FROM SCC_COMMON_CODE A
 WHERE (1=1)
   AND A.USE_YN = 'Y'
   AND A.GROUP_CODE = 'FM0016'
 ******************************************************************************************
*/
//=========================================================================================
// [ PART 1 ]
// Form에서 Include 할 내용을 정의
//
//=========================================================================================
//@@컨버터에서 주석처리 #include "lib::sc_comon.js"
//@@컨버터에서 주석처리 #include "lib::sc_sql_common.js"
//@@컨버터에서 주석처리 #include "lib::tit_comm_0001.js"
//@@컨버터에서 주석처리 #include "Lib::lib_Date.js";
//@@컨버터에서 주석처리 #include "Lib::lib_Dataset.js";
//@@컨버터에서 주석처리 #include "LIB::lib_comm_0001.js";
//@@컨버터에서 주석처리 #include "LIB::ma_common.js";

//=========================================================================================
// [ PART 2 ]
// Form에서 사용될 전역변수를 선언
//
//=========================================================================================
var fa_Sql;
//=========================================================================================
// [ PART 3 ]
// Form Loading 시 작업 정의
//
//=========================================================================================
function form_onload(obj:Form, e:LoadEventInfo)
{
	gfn_formOnLoad(obj, false);

	//초기화
	fsp_init(this);
	v_ds_check = "ds_List";
	ta_Sql.visible = (application.g_AuthLevel == "999");

//g_AuthLevel = "10";
	
	// 권한에 따른 버튼 활성화 및 디폴트값 설정
	fn_SetAuth("edt_TM", "edtBtn_TM", "edt_UPJANG", "edtBtn_UPJANG");	
	
	// 권한이 팀장이면 팀을 선택가능하게 한다.
    if (g_AuthLevel == "16" || g_AuthLevel == "17"){
		edt_TM.enable = true;
		edtBtn_TM.enable = true;
    }
	
	 // 식재영업1팀(Y28), 식재영업2팀(Y29), 외식식재영업팀(Y93), 유통영업팀(Y91)이면 담당마케터로 변경
	 if(edt_TM.userdata == "Y28" || edt_TM.userdata == "Y29" || edt_TM.userdata == "Y91" || edt_TM.userdata == "Y93"){
		//사업장정보 안보이게
		Static8.visible = false;	
		edt_UPJANG.visible = false;
		edtBtn_UPJANG.visible = false;
		
		edt_UPJANG.value = "";		// 초기화
		edt_UPJANG.userdata = "";	// 초기화
		
		// 담당마케터정보 보이게
		st_MGMT_SABUNQuery.visible = true;
		st_MGMT_SABUNQuery.position.top = 40;
		st_MGMT_SABUNQuery.position.bottom = 61;
		
		edt_MGMT_SABUNQuery.visible = true;
		edt_MGMT_SABUNQuery.position.top = 40;
		edt_MGMT_SABUNQuery.position.bottom = 61;
		edtBtn_MGMT_SABUNQuery.visible = true;
		edtBtn_MGMT_SABUNQuery.position.top = 40;
		edtBtn_MGMT_SABUNQuery.position.bottom = 61;
		
		// 업장이나 영업사원이면
		if(g_AuthLevel < 14){
			edt_MGMT_SABUNQuery.value = g_Name;
			edt_MGMT_SABUNQuery.userdata = g_EmpNo; 
			edtBtn_MGMT_SABUNQuery.enable = false;
			edt_MGMT_SABUNQuery.enable = false;
		}
	 }else{
		//사업장정보 보이게
		Static8.visible = true;	
		edt_UPJANG.visible = true;
		edtBtn_UPJANG.visible = true;
		
		// 담당마케터정보 안보이게
		st_MGMT_SABUNQuery.visible = false;
		edt_MGMT_SABUNQuery.visible = false;
		edtBtn_MGMT_SABUNQuery.visible = false;
		
		edt_MGMT_SABUNQuery.value = "";		// 초기화
		edt_MGMT_SABUNQuery.userdata = "";	// 초기화
	}	

	//me_OrderDate.setFocus();
}

//=========================================================================================
// [ PART 4 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,도움말,form닫기)
//
//=========================================================================================
/*------------------------------------------------------------(60)
	1. Function ID : fn_Search()
	2. 개       요 : 업무프로세스에 따른 조회작업
	3. 기       능 : 검색조건에 해당하는 정보를 조회
	4. 인 수 설 명 : 
------------------------------------------------------------*/
function fn_search()
{
	//필수항목 
	if (!fn_ChkManNull()) return;
	
	// 초기화
	ds_Cond.clearData();
	ds_List.clearData();
	ds_Cond.addRow();
	
	ds_Cond.setColumn(0, "INPUT_YM",  gfn_replace(cal_ADJ_DATEQuery.value, "-", ""));
	// 식재영업1팀(Y28), 식재영업2팀(Y29), 외식식재영업팀(Y93), 유통영업팀(Y91)이면 담당마케터조회
	if(edt_TM.userdata == "Y28" || edt_TM.userdata == "Y29" || edt_TM.userdata == "Y91" || edt_TM.userdata == "Y93"){
		ds_Cond.setColumn(0, "DOC_CD",    edt_MGMT_SABUNQuery.userdata);
	}else{
		ds_Cond.setColumn(0, "DOC_CD",    edt_UPJANG.userdata);
	}
	ds_Cond.setColumn(0, "DOC_GUBUN", "R");

	// 조회
	var strSvcID, strURL, strInDatasets, strOutDatasets, strArgument, strCallbackFunc;
	// 경로 설정
	strSvcID = "MAS40020E_T001";
	strURL   = "U_svc::" + "ma/mas/MAS40020E_T001.jsp";
	
	// 데이터셋 설정
	strInDatasets  = "ds_Cond=ds_Cond";
	strOutDatasets = "ds_List=ds_List";
	
	// 파라메터 설정
	strArgument  = "";
	
	// 콜백함수 지정
	strCallbackFunc = "fn_CallBack";
	//strCallbackFunc = "";
	
	// 서버 호출 
	jsp_transaction(this, strSvcID, strURL, strInDatasets, strOutDatasets, strArgument, strCallbackFunc, false, false, true);
}
// 필수항목 검사
function fn_ChkManNull(){
	// 팀정보 필수체크
	if(gfn_isNull(edt_TM.userdata)){
		g_Message("EE", st_Sabun.text + "은(는) 필수항목입니다.");
		edt_TM.setFocus();
		return false;
	}
	
	// 사업장 또는 담당마케터 정보 필수체크
	// 식재영업1팀(Y28), 식재영업2팀(Y29), 외식식재영업팀(Y93), 유통영업팀(Y91)이면 담당마케터조회
	if(edt_TM.userdata == "Y28" || edt_TM.userdata == "Y29" || edt_TM.userdata == "Y91" || edt_TM.userdata == "Y93"){
		if(gfn_isNull(edt_MGMT_SABUNQuery.userdata)){
			g_Message("EE", st_MGMT_SABUNQuery.text + "은(는) 필수항목입니다.");
			edt_MGMT_SABUNQuery.setFocus();
			return false;
		}
	}else{
		if(gfn_isNull(edt_UPJANG.userdata)){
			g_Message("EE", Static8.text + "은(는) 필수항목입니다.");
			edt_UPJANG.setFocus();
			return false;
		}
	}
	
	// 계획년월 필수체크
	if(gfn_isNull(cal_ADJ_DATEQuery.value)){
		g_Message("EE", st_Name2.text + "은(는) 필수항목입니다.");
		cal_ADJ_DATEQuery.setFocus();
		return false;
	}
	
	return true;
}
/*------------------------------------------------------------
	1. Function ID : fn_Insert()
	2. 개       요 : 업무프로세스에 따른 입력작업
	3. 기       능 : 입력버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
------------------------------------------------------------*/
function fn_insert(){
}

/*------------------------------------------------------------
	1. Function ID : fn_Delete()
	2. 개       요 : 업무프로세스에 따른 입력작업
	3. 기       능 : 입력버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
------------------------------------------------------------*/
function fn_delete(){
}

/*------------------------------------------------------------
	1. Function ID : fn_Save()
	2. 개       요 : 업무프로세스에 따른 입력작업
	3. 기       능 : 입력버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
------------------------------------------------------------*/
function fn_save()
{
// 	if (sRtn != null){
// 		g_Message("EE", sRtn);
// 		return;
// 	}
	if (! g_Confirm("02", '실적등록 하시겠습니까?')) return;
	// 초기화
	ds_Cond.clearData();
	ds_Cond.addRow();
	ds_Cond.setColumn(0, "INPUT_YM",  gfn_replace(cal_ADJ_DATEQuery.value, "-", ""));
	// 식재영업1팀(Y28), 식재영업2팀(Y29), 외식식재영업팀(Y93), 유통영업팀(Y91)이면 담당마케터조회
	if(edt_TM.userdata == "Y28" || edt_TM.userdata == "Y29" || edt_TM.userdata == "Y91" || edt_TM.userdata == "Y93"){
		ds_Cond.setColumn(0, "DOC_CD",    edt_MGMT_SABUNQuery.userdata);
	}else{
		ds_Cond.setColumn(0, "DOC_CD",    edt_UPJANG.userdata);
	}
	ds_Cond.setColumn(0, "DOC_GUBUN", "R");
	
	//
	var strSvcID, strURL, strInDatasets, strOutDatasets, strArgument, strCallbackFunc;
	// 경로 설정
	strSvcID = "MAS40020E_T002";
	strURL   = "U_svc::" + "ma/mas/MAS40020E_T002.jsp";

	// 데이터셋 설정
	//strInDatasets  = "ds_Cond=ds_Cond " + "ds_List=ds_List:U " + "ds_List_ALL=ds_List:A ";
	strInDatasets  = "ds_Cond=ds_Cond ds_List=ds_List:A";
	strOutDatasets = "";
	// 파라메터 설정
	strArgument  = "";
	// 콜백함수 지정
	strCallbackFunc = "fn_CallBack_Save";
	// 서버 호출 
	jsp_transaction(this, strSvcID, strURL, strInDatasets, strOutDatasets, strArgument, strCallbackFunc, false, false, true);
}

/*------------------------------------------------------------
	1. Function ID : fn_Print()
	2. 개       요 : 업무프로세스에 따른 입력작업
	3. 기       능 : 입력버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
------------------------------------------------------------*/
function fn_print()
{
	//gd_listE.ExportExcelEx("단가표");
}

/*------------------------------------------------------------
	1. Function ID : fn_Close()
	2. 개       요 : 업무프로세스에 따른 입력작업
	3. 기       능 : 입력버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
------------------------------------------------------------*/
function fn_Close()
{
	This.close();
}

/*------------------------------------------------------------
	1. Function ID : fn_Help()
	2. 개       요 : 업무프로세스에 따른 입력작업
	3. 기       능 : 입력버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
------------------------------------------------------------*/
function fn_help()
{
}

//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
//
//=========================================================================================
//---------------------
// 조회콜백
//---------------------
function fn_CallBack(errCode, errMsg){
	
	fn_CreatePivotData();
	
	ta_Sql.value = fa_Sql;
	if (errCode == 0){
		if (ds_List.rowcount < 1)
			g_Message("EE", "저장 할 내역이 없습니다.");
	}else{
		g_Message("EE", "조회중 오류가 발생했습니다. 관리자에게 문의하세요." + '\n' + '(' + errMsg + ')' );
	}

}

function fn_CreatePivotData()
{
	//P_DATE, ACT_AMT, MGMT_ACCT_NAME INPUT_YN CLOSE_YN  g_AuthLevel
	//P_DATE,CONFIRM_YN,CLOSE_YN
	
	//중복 제거된 값 얻기 
	var arrLabelCol = fn_getDistinctValueOfDataset(ds_List, "P_DATE");
	var arrLabelRow = fn_getDistinctValueOfDataset(ds_List, "MGMT_ACCT_CD");

	ds_Pivot.clear();
	
	var sLabelRow = "MGMT_ACCT_CD";
	var sLabelRowName = "MGMT_ACCT_NAME";
	//var sAuthLevel = "AUTH_LEVEL";
	var sInputYn = "INPUT_YN";
	var sCloseYn = "CLOSE_YN";
	var sConfirmYn = "CONFIRM_YN";
	var sCpConfirmYn = "CP_CONFIRM_YN";
	var sPDate = "P_DATE";
	
	ds_Pivot.addColumn(sLabelRow, "STRING"); //ROW : CD
	ds_Pivot.addColumn(sLabelRowName, "STRING"); //ROW : NAME
	//ds_Pivot.addColumn(sAuthLevel, "int");
	ds_Pivot.addColumn(sInputYn, "STRING");
	ds_Pivot.addColumn(sCloseYn, "STRING");
	ds_Pivot.addColumn(sConfirmYn, "STRING");
	ds_Pivot.addColumn(sCpConfirmYn, "STRING");
	ds_Pivot.addColumn(sPDate, "STRING");
	
	ds_Pivot.enableevent = false;
	//trace("arrLabelCol.length ==> "+arrLabelCol.length);
	for (var col=0; col<arrLabelCol.length; col++) {
	
		//라벨 (Col) 생성
		var sNewLabelCol = "col"+arrLabelCol[col];
		ds_Pivot.addColumn(sNewLabelCol, "BIGDECIMAL");
				
		//데이터 생성
		for (var row=0; row<arrLabelRow.length; row++) {
			
			//Row 생성
			var nRow = ds_Pivot.findRow(sLabelRow, arrLabelRow[row]);			
			if (nRow < 0) {
				nRow = ds_Pivot.addRow();
			}
			
			//코드를 코드명으로 치환
			var sName = ds_List.lookup("MGMT_ACCT_CD",arrLabelRow[row], "MGMT_ACCT_NAME");
			//var sAuthLevel = ds_List.getColumn(arrLabelRow[row],"AUTH_LEVEL");
			var sPDate = ds_List.getColumn(arrLabelRow[row],"P_DATE");
			var sInputYn = ds_List.getColumn(arrLabelRow[row],"INPUT_YN");
			var sCloseYn = ds_List.getColumn(arrLabelRow[row],"CLOSE_YN");
			var sConfirmYn = ds_List.getColumn(arrLabelRow[row],"CONFIRM_YN");
			var sCpConfirmYn = ds_List.getColumn(arrLabelRow[row],"CP_CONFIRM_YN");
			
			//라벨(Row) 코드,코드명			
			ds_Pivot.setColumn(nRow, sLabelRow, arrLabelRow[row]); //CD
			ds_Pivot.setColumn(nRow, sLabelRowName, sName); //NAME
			//ds_Pivot.setColumn(nRow, "AUTH_LEVEL", sAuthLevel);
			ds_Pivot.setColumn(nRow, "P_DATE", sPDate);
			ds_Pivot.setColumn(nRow, "INPUT_YN", sInputYn);
			ds_Pivot.setColumn(nRow, "CLOSE_YN", sCloseYn);
			ds_Pivot.setColumn(nRow, "CONFIRM_YN", sConfirmYn);
			ds_Pivot.setColumn(nRow, "CP_CONFIRM_YN", sCpConfirmYn);
			
			
			//값
			var sValue = 0;	
			var sValue2 = "";
			var sValue3 = "";
			var sValue4 = "";
			var sValue5 = "";
			var sValue6 = "";
			var nFindRow = ds_List.findRowExpr("P_DATE=='"+arrLabelCol[col]+"' && MGMT_ACCT_CD=='"+arrLabelRow[row]+"'" );			
			if (nFindRow > -1) {
				sValue = ds_List.getColumn(nFindRow, "ACT_AMT");
				//sValue2 = ds_List.getColumn(nFindRow, "AUTH_LEVEL");
				sValue2 = ds_List.getColumn(nFindRow, "INPUT_YN");
				sValue3 = ds_List.getColumn(nFindRow, "CLOSE_YN");
				sValue4 = ds_List.getColumn(nFindRow, "CONFIRM_YN");
				sValue5 = ds_List.getColumn(nFindRow, "CP_CONFIRM_YN");
				sValue6 = ds_List.getColumn(nFindRow, "P_DATE");
			}
			ds_Pivot.setColumn(nRow, sNewLabelCol, sValue);	
			//ds_Pivot.setColumn(nRow, "AUTH_LEVEL", sValue2);	
			ds_Pivot.setColumn(nRow, "INPUT_YN", sValue2);	
			ds_Pivot.setColumn(nRow, "CLOSE_YN", sValue3);	
			ds_Pivot.setColumn(nRow, "CONFIRM_YN", gfn_nvl(sValue4,""));	
			ds_Pivot.setColumn(nRow, "CP_CONFIRM_YN", gfn_nvl(sValue5,""));
			ds_Pivot.setColumn(nRow, "P_DATE", sValue6);	
		}
		
	}
	ds_Pivot.enableevent = true;		
	//초기화
	for (var i=gd_list.getFormatColCount()-1; i>0; i--) {
		gd_list.deleteContentsCol(i);
	}
	
	//그리드 컬럼 생성
	gd_list.setCellProperty("head", 2, "text", arrLabelCol[0]);
	gd_list.setCellProperty("body", 2, "text", "bind:col"+arrLabelCol[0]); //값 바인딩
	//gd_list.setCellProperty("body", 2, "edittype", "none");
	gd_list.setCellProperty("body", 2, "edittype", "expr:(iif(g_AuthLevel < '14', iif(CLOSE_YN == 'N', iif(INPUT_YN== 'Y','masknumber','none'),'none'), iif(INPUT_YN== 'Y','masknumber','none')))");
	
	var sConfirmYnFirst = ds_List.lookup("P_DATE", "2014-01-00 (전년동월)", "CONFIRM_YN");
	if (sConfirmYnFirst == "1") {
		gd_list.setCellProperty("Head", 3, "text", "1");
	} else {
		gd_list.setCellProperty("Head", 3, "text", "0");
	}
	
	var nStartCell = 3;
	var appCol = 0;
	for (var i=1; i<arrLabelCol.length; i++) {
		appCol = gd_list.appendContentsCol();
		
		gd_list.setCellProperty("head", gd_list.getFormatColCount()+i, "displaytype", "checkbox"); //헤드 체크박스
		gd_list.setCellProperty("head", gd_list.getFormatColCount()+i, "editytype", "checkbox"); //헤드 체크박스
		
		var sConfirmYn = ds_List.lookup("P_DATE", arrLabelCol[i], "CONFIRM_YN");
		
		if (sConfirmYn == "1") {
			gd_list.setCellProperty("head", gd_list.getFormatColCount()+i, "text", "1");
		} else {
			gd_list.setCellProperty("head", gd_list.getFormatColCount()+i, "text", "0");
		}
		
		gd_list.setCellProperty("head", nStartCell, "text", arrLabelCol[i]); //헤드 text
		gd_list.setCellProperty("body", nStartCell, "text", "bind:col"+arrLabelCol[i]); //값 바인딩
		gd_list.setCellProperty("body", nStartCell, "align", "right");
		
		//trace("appCol ::"+appCol+" //  nStartCell ::"+nStartCell+" // bind:col+arrLabelCol[i] ::"+"bind:col"+arrLabelCol[i]);
		
		var sDisplayType = gd_list.getCellProperty("body", 2, "displaytype");
		var sEditType = gd_list.getCellProperty("body", 2, "edittype");
		//var sEditFilter = gd_list.getCellProperty("body", 2, "editfilter");
		var sMask = gd_list.getCellProperty("body", 2, "mask");
		var sBackground = gd_list.getCellProperty("body", 2, "background");
		var sBackground2 = gd_list.getCellProperty("body", 2, "background2");
		
	    gd_list.setCellProperty("body", nStartCell, "displaytype", sDisplayType);
	    gd_list.setCellProperty("body", nStartCell, "edittype", sEditType);
	    //gd_list.setCellProperty("body", nStartCell, "editfilter", sEditFilter);
	    gd_list.setCellProperty("body", nStartCell, "mask", sMask);
	    gd_list.setCellProperty("body", nStartCell, "background", sBackground);
	    gd_list.setCellProperty("body", nStartCell, "background2", sBackground2);
		
		if(nStartCell==3||nStartCell==4) {
			gd_list.setFormatColProperty(nStartCell, "size", 130);
			if(nStartCell==4) {
				gd_list.setCellProperty("body", nStartCell, "edittype", 'none');
			}else{
				gd_list.setCellProperty("body", nStartCell, "edittype", "expr:(iif(g_AuthLevel < '14', iif(CLOSE_YN == 'N', iif(INPUT_YN== 'Y','masknumber','none'),'none'), iif(INPUT_YN== 'Y','masknumber','none')))");
			}
		}else {
			gd_list.setFormatColProperty(nStartCell, "size", 100);
			gd_list.setCellProperty("body", nStartCell, "edittype", "expr:(iif(g_AuthLevel < '14', iif(CLOSE_YN == 'N', iif(INPUT_YN== 'Y','masknumber','none'),'none'), iif(INPUT_YN== 'Y','masknumber','none')))");
		}		
			
		nStartCell += 1;		
	}
	
	ds_Pivot.rowposition = 0;
	
	//trace(gd_list.formats);
}


//데이터셋의 데이터에서 중복 제거된 값을 얻는다.
function fn_getDistinctValueOfDataset(objDs, sTargetColumn)
{
	var ExtComm = new ExtCommon();

	//반환값 선언
	var arrRet = [];
	
	objDs.enableevent = false;
	
	//원본 keystring 보관
	var sOrgKeyStr = objDs.keystring.current;
	
	//데이터 정렬
	objDs.keystring = "S:"+sTargetColumn;
	

	var nIdx = 0; //동일한 값들의 첫번째 위치를 담는 변수

	for (var i=0; i<objDs.rowcount; i++) {
		var sValue = objDs.getColumn(nIdx, sTargetColumn);
		var arrRows = ExtComm.findRows(objDs, sTargetColumn, sValue); //해당값을 가진 Row를 배열로 받기
				
		arrRet[arrRet.length] = sValue; //반환값
						
		nIdx = parseInt(arrRows[arrRows.length-1]) + 1;		
		if (nIdx > objDs.rowcount - 1) {
			break;
		}		
	}
		
	objDs.keystring = sOrgKeyStr; //보관된 keystring 복원
			
	objDs.enableevent = true;
	
	return arrRet;
}

//---------------------
// 저장 콜백함수
//---------------------
function fn_CallBack_Save(errCode, errMsg){
ta_Sql.value = fa_Sql;
	if (errCode == 0){
		g_Message("02", "실적등록 되었습니다.");
		
		//trace(ds_List.SaveXML());
		
		fn_search();
	}else{
		g_Message("EE", "실적등록 중 오류가 발생했습니다. 관리자에게 문의하세요." + '\n' + '(' + errMsg + ')' );
	}
}

//function fn_FormKeyDown(obj,objSenderObj,nChar,bShift,bControl,bAlt,nLLParam,nHLParam){
	//fn_form_OnKeyDown(obj,objSenderObj,nChar,bShift,bControl,bAlt,nLLParam,nHLParam);
	//엔터시 조회
	//if ( (nChar == 13) && (objSenderObj == me_OrderDate) ) fn_Search();
//}	

/*
 ******************************************************************************************
 * 함  수  명   : edtBtn_UPJANG_OnClick()
 * 입      력   : 없음
 * 반      환   : 업장코드/코드명
 * 기      능   : 조회조건 팝업
 * 작  성  자   : 
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
function edtBtn_UPJANG_OnClick(obj:Button, e:ClickEventInfo)
{ 
    if( gfn_length(edt_TM.value)== 0 ) {
        g_Message("EE","팀을 먼저 선택하여 주십시오.");
        edt_TM.setFocus();
        return;
    }  
    
        fn_sql_common_setup(strMAQuery_Upjang + " AND DECODE('" + g_AuthLevel + "', '12', LEADER_SABUN, '" + g_EmpNo + "') = '" + g_EmpNo + "'",  
							strMAQuery_UpjangKeyField, 
							strMAQuery_UpjangValueField, 
							strMAQuery_UpjangKeyFieldNM, 
							strMAQuery_UpjangValueFieldNM, 
							"", 
							"",
							" AND NVL(TM_CD,'0') LIKE '%" +gfn_toString(edt_TM.userdata)+ "%'",// AND NVL(LOC_CD,'0') LIKE '%" +ToString(cbo_Loc.Value) + "%'" + " AND NVL(SUB_JOB_CD,'0') LIKE '%" +ToString(cbo_SubJob.Value) + "%'",
							strMAQuery_UpjangCaption,
							strMAQuery_UpjangAllField);

	if (gds_sql_common.getColumn(0, "ret_code") != ""){
		edt_UPJANG.userdata = gds_sql_common.getColumn(0, "ret_code");
		edt_UPJANG.value     = gds_sql_common.getColumn(0, "ret_name");
	}
}


function fn_edBtn_OnKeyDown(obj:Edit, e:KeyEventInfo)
{
	fn_edt_OnKeyDown(obj,e.keycode);
	if (e.keycode == 46) {
	   edt_UPJANG.userdata = "";
       edt_UPJANG.value = "";
     }	
}

//=========================================================================================
// [ PART 6 ]
// component Event 정의 ( User Define function )
// --> component Event의 기요,기능,동작 등 상세내용은 MiPlatform 메뉴얼을 참조하시기 바랍니다.
//=========================================================================================
function me_OrderDate_OnChanged(obj,strText)
{
	fn_ClearData();
}

function fn_ClearData()
{
	ds_List.clearData();
}
//=========================================================================================
// component Event 정의 ( User Define function )
// sheet에서 금액을 수정하였을 경우
//=========================================================================================
/*
데이터 형태
------------------------------------------------
NO 상위계정 계정        계정명
1  PLA00000	PLA00000	A. 매출액
2  PL000000	PLA10000	   1. 상품매출
3  PLA00000	PLA20000	   2. 객실수입
4  PLA20000	PLA20100	      - 관리비수입
5  PLA20000	PLA20200	      - 객실수입	
6  PLA20000	PLA20300	      - (레저영업)	
7  PLA20000	PLA20400	      - 외식사업
------------------------------------------------
로직설명
1. 객실수입수정시 객실수입계정(PLA20200)의 상위계정(PLA20000)을 찾는다.
2. 상위계정(PLA20000)이 같은 것들을 SUM한다.(4,5,6,7번라인 SUM)
3. 상위계정(PLA20000)과 계정(PLA20000)이 같은 라인을 찾아서 거기에 값을 넣는다.(소계역할)(3번라인)
4. 3에서의 라인에 상위계정(PLA00000)을 찾는다.
5. 상위계정(PLA00000)과 계정(PLA00000)이 같은 라인을 제외하고 상위계정이 같은 것들을 SUM한다.(2,3번 라인SUM)
6. 5에서 SUM한 데이터를 상위계정과 계정이 같은 라인에 값을 넣는다.1(번라인)

================================================================
이벤트 특이사항
ds_Pivot_OnColumnChanged를 안쓰고 ds_List_OnColumnChanged이벤트를 
쓴 이유는 파라미터 중 nPivotIndex값이 ds_Pivot_OnColumnChanged에서는 제대로 전달이 안되어
ds_List_OnColumnChanged이벤트를 사용.
(framework 버젼이 옛날꺼라 지원 안함.)
================================================================
*/
function ds_List_OnColumnChanged(obj:Dataset, e:DSColChangeEventInfo)
{
	var strP_DATE;			// 선택한 ROW의 P_DATE
	var strP_MGMT_ACCT_CD;	// 선택한 Row의 상위계정코드
	var strP_MGMT_ACCT_CD2; // 소계의 상위계정코드
	var strMGMT_ACCT_CD;	// 선택한 Row의 계정코드	
	var strINPUT_YN;		// 선택한 Row의 입력가능여부
	var fltACT_AMT;			// 선택한 Row의 실적금액
	var fltSUB_TOT_ACT_AMT = 0;	// 중간 SUM(번호 레벨(1,2,3....)의 SUM)
	
	var strP_MGMT_ACCT_CD;
	var fltSellAmt = 0;		// 매출액
	var fltSellCostAmt = 0;	// 매출원가
	
	var fltTotalAmt = 0; // Row의 한달치 합계
	
//alert("nPivotIndex : nRow " + nPivotIndex + " : " + nRow);	
	
	// 이벤트 잠시 꺼둠
	ds_List.enableevent = false;
	
	strP_DATE         = ds_List.getColumn(e.row, "P_DATE");
	strP_MGMT_ACCT_CD = ds_List.getColumn(e.row, "P_MGMT_ACCT_CD");
	strMGMT_ACCT_CD   = ds_List.getColumn(e.row, "MGMT_ACCT_CD");
	strINPUT_YN       = ds_List.getColumn(e.row, "INPUT_YN");
	fltACT_AMT        = parseFloat(ds_List.getColumn(e.row, "ACT_AMT"));
	
	// 1. 같은 레벨의 금액을 SUM한다. 
	// 위의 데이터 예에서 관리비수입, 객실수업, 레저영업, 외식사업을 합한다.
	for(var i = 0; i < ds_List.rowcount; i++){
		if(strP_DATE == ds_List.getColumn(i, "P_DATE", e.row)){
			//alert(strP_DATE + " / " + ds_List.GetColumn(i, "P_DATE", nPivotIndex));
			if(strP_MGMT_ACCT_CD == ds_List.getColumn(i, "P_MGMT_ACCT_CD", e.row)){
				fltSUB_TOT_ACT_AMT += parseFloat(ds_List.getColumn(i, "ACT_AMT", e.row));
			}
		}
	}
	
	// 2. 1에서 SUM한 금액을 상위레벨의 계정에 보여준다.(소계역할)
	// 위의 데이타 예에서 2. 객실수입에 데이터를 셋팅한다.
	for(var i = 0; i < ds_List.rowcount; i++){
		if(strP_DATE == ds_List.getColumn(i, "P_DATE", e.row)){
			if(strP_MGMT_ACCT_CD == ds_List.getColumn(i, "MGMT_ACCT_CD", e.row)){
				//alert("nPivotIndex : " + nRow);
				ds_List.setColumn(i, "ACT_AMT", fltSUB_TOT_ACT_AMT, e.row);
				
				// 상위계정에서의 최상위 계정코드를 가져온다.
				strP_MGMT_ACCT_CD2 = ds_List.getColumn(i, "P_MGMT_ACCT_CD", e.row);
				break;
			//alert(strP_MGMT_ACCT_CD2);
			}
		}
	}

	fltSUB_TOT_ACT_AMT = 0;
	
	// 1. 상품매출과 2. 객실수입의 합을 구한다.(A.매출액 SUM)
	for(var i = 0; i < ds_List.rowcount; i++){
		if(strP_DATE == ds_List.getColumn(i, "P_DATE", e.row)){
			if(ds_List.getColumn(i, "P_MGMT_ACCT_CD", e.row) <> ds_List.getColumn(i, "MGMT_ACCT_CD", e.row)){
				if(strP_MGMT_ACCT_CD2 == ds_List.getColumn(i, "P_MGMT_ACCT_CD", e.row)){
					fltSUB_TOT_ACT_AMT += parseFloat(ds_List.getColumn(i, "ACT_AMT", e.row));
				}
			}
		}
	}	
	
	// 최상위 계정에 데이터를 넣어준다.
	// 위의 데이터 예로 A.매출액에 데이터를 넣어준다.
	for(var i = 0; i < ds_List.rowcount; i++){
		if(strP_DATE == ds_List.getColumn(i, "P_DATE", e.row)){
			if(strP_MGMT_ACCT_CD2 == ds_List.getColumn(i, "MGMT_ACCT_CD", e.row)){
				ds_List.setColumn(i, "ACT_AMT", fltSUB_TOT_ACT_AMT, e.row);
				break;
			}
		}
	}
		
	// 매출이익 계산
	for(var i = 0; i < ds_List.rowcount; i++){
		if(strP_DATE == ds_List.getColumn(i, "P_DATE", e.row)){
			// 매출액
			if(ds_List.getColumn(i, "MGMT_ACCT_CD", e.row) == "PLA00000"){
				fltSellAmt = parseFloat(ds_List.getColumn(i, "ACT_AMT", e.row));
			}
		
			// 매출원가
			if(ds_List.getColumn(i, "MGMT_ACCT_CD", e.row) == "PLB00000"){
				fltSellCostAmt = parseFloat(ds_List.getColumn(i, "ACT_AMT", e.row));
			}
			
			// 매출이익(매출액 - 매출원가)
			if(ds_List.getColumn(i, "MGMT_ACCT_CD", e.row) == "PLC00000"){
				ds_List.setColumn(i, "ACT_AMT", fltSellAmt - fltSellCostAmt, e.row);
			}
		}
	}
	
	// Row별 합계(계정과목별)를 구한다. 
	// 시작=================================================================
	var a = 0;
	var intTotalRowPos = 0;
	var strMGMT_ACCT_CD2 = "";
	
	strMGMT_ACCT_CD = ds_List.getColumn(e.row, "MGMT_ACCT_CD");
	
	for(var i = 0; i < ds_List.rowcount; i++){
		if(strMGMT_ACCT_CD == ds_List.getColumn(i, "MGMT_ACCT_CD", e.row)){
			a++;
			
			// Row별 합계위치
			if(a == 3){
				intTotalRowPos = i;
			}	
						
			// a > 3의미는 전년동월, 월추정, 합계 이후라는 뜻(결국1일부터 말일까지)
			if(a > 3){
				fltTotalAmt = fltTotalAmt + parseFloat(ds_List.getColumn(i, "ACT_AMT", e.row));
			}
		}
	}	
	
	ds_List.setColumn(intTotalRowPos, "ACT_AMT", fltTotalAmt);
	// 종료==================================================================
	
	// 중간SUM인 계정들의 합계를 구한다.
	// 시작==================================================================
	a = 0;
	fltTotalAmt = 0;
	
	// 1. 입력불가한 계정과목을 배열로 만든다.
	var vntMGMT_ACCT_CD2 = new Array();
	
	vntMGMT_ACCT_CD2[0] = "PLA00000";	// A. 매출액
	vntMGMT_ACCT_CD2[1] = "PLA20000";	//    2. 객실수입
	vntMGMT_ACCT_CD2[2] = "PLA30000";	//    3. 식음료·상품
	vntMGMT_ACCT_CD2[3] = "PLA40000";	//    4. 기타
	vntMGMT_ACCT_CD2[4] = "PLB00000";	// B. 매출원가
	vntMGMT_ACCT_CD2[5] = "PLB20000";	//    2. 재료비
	vntMGMT_ACCT_CD2[6] = "PLB30000";	//    3. 노무비
	vntMGMT_ACCT_CD2[7] = "PLB40000";	//    4. 경비
	vntMGMT_ACCT_CD2[8] = "PLC00000";	// C. 매출이익
	
	// 입력불가 계정과목 하나당 모든데이터 검색.
	for(var i = 0; i < vntMGMT_ACCT_CD2.length; i++){
		for(var j = 0; j < ds_List.rowcount; j++){
			if(vntMGMT_ACCT_CD2[i] == ds_List.getColumn(j, "MGMT_ACCT_CD", e.row)){
				a++;
			
				// Row별 합계위치 (a = 3인 것은 해당월의 합계열(a=1은 전년동월, a=2는 월추정, a=3은 월합계))
				if(a == 3){
					intTotalRowPos = j;
				}	
						
				// a > 3의미는 전년동월, 월추정, 합계 이후라는 뜻(결국1일부터 말일까지)
				if(a > 3){
					fltTotalAmt = fltTotalAmt + parseFloat(ds_List.getColumn(j, "ACT_AMT", e.row));
				}			
			}
		}
		
		ds_List.setColumn(intTotalRowPos, "ACT_AMT", fltTotalAmt);
		
		a = 0;
		fltTotalAmt = 0;
	}
	// 종료==================================================================
		
	// 이벤트 켬
	ds_List.enableevent = true;	
}

//---------------------------------------------------
// 월 선택 이벤트
//---------------------------------------------------
function edtBtn_Date_OnClick(obj:Button, e:ClickEventInfo){
	g_CalButton_OnClick(obj);
}

//---------------------------------------------------
// 팀팝업 이벤트
//---------------------------------------------------
function edtBtn_TM_OnClick(obj:Button, e:ClickEventInfo){
	fn_sql_common_setup(strMAQuery_Team2, 
						strMAQuery_Team2KeyField, 
						strMAQuery_Team2ValueField, 
						strMAQuery_Team2KeyFieldNM, 
						strMAQuery_Team2ValueFieldNM, 
						"", 
						"", 
						"",
						strMAQuery_Team2Caption,
						strMAQuery_Team2AllField);
	if (gds_sql_common.getColumn(0, "ret_code") != ""){
		edt_TM.userdata = gds_sql_common.getColumn(0, "ret_code");
		edt_TM.value     = gds_sql_common.getColumn(0, "ret_name");
		edt_UPJANG.userdata = "";
        edt_UPJANG.value = "";
        
        edt_MGMT_SABUNQuery.userdata = "";
        edt_MGMT_SABUNQuery.value = "";
        
        edt_MGMT_SABUNQuery.userdata = "";
        edt_MGMT_SABUNQuery.value = "";
	 }	
	 // 식재영업1팀(Y28), 식재영업2팀(Y29), 외식식재영업팀(Y93), 유통영업팀(Y91)이면 담당마케터로 변경
	 if(edt_TM.userdata == "Y28" || edt_TM.userdata == "Y29" || edt_TM.userdata == "Y91" || edt_TM.userdata == "Y93"){
		//사업장정보 안보이게
		Static8.visible = false;	
		edt_UPJANG.visible = false;
		edtBtn_UPJANG.visible = false;
		
		edt_UPJANG.value = "";		// 초기화
		edt_UPJANG.userdata = "";	// 초기화
		
		// 담당마케터정보 보이게
		st_MGMT_SABUNQuery.visible = true;
		st_MGMT_SABUNQuery.position.top = 40;
		st_MGMT_SABUNQuery.position.bottom = 61;
		
		edt_MGMT_SABUNQuery.visible = true;
		edt_MGMT_SABUNQuery.position.top = 40;
		edt_MGMT_SABUNQuery.position.bottom = 61;
		edtBtn_MGMT_SABUNQuery.visible = true;
		edtBtn_MGMT_SABUNQuery.position.top = 40;
		edtBtn_MGMT_SABUNQuery.position.bottom = 61;
	 }else{
		//사업장정보 보이게
		Static8.visible = true;	
		edt_UPJANG.visible = true;
		edtBtn_UPJANG.visible = true;
		
		// 담당마케터정보 안보이게
		st_MGMT_SABUNQuery.visible = false;
		edt_MGMT_SABUNQuery.visible = false;
		edtBtn_MGMT_SABUNQuery.visible = false;
		
		edt_MGMT_SABUNQuery.value = "";		// 초기화
		edt_MGMT_SABUNQuery.userdata = "";	// 초기화
	}
}


// 쉬트 헤더 클릭이벤트
function gd_list_OnHeadClick(obj:Grid, e:GridClickEventInfo)
{
	if(e.cell == 0) {
		gfn_exportExcel(obj, this.titletext);
		return;
	}

	return;
	
	var strP_DATE = "", strCONFIRM_YN = "", strCLOSE_YN = "", strCP_CONFIRM_YN = "";
	var a = 0;
	
	var nTopCol = -1;
	nBottomCol = obj.getCellProperty( "head", e.cell, "col");
	for (var i=0; i<obj.getCellCount("head"); i++) {
		var nCol = parseInt(obj.getCellProperty("head", i, "col"));		
		if (nCol == nBottomCol) {
			nTopCol = nCol;
			break;
		}
	}
	
	
	strP_DATE        = obj.getCellProperty("head", nTopCol, "text");
	strCONFIRM_YN    = ds_List.lookup("P_DATE", strP_DATE, "CONFIRM_YN");
	strCLOSE_YN      = ds_List.lookup("P_DATE", strP_DATE, "CLOSE_YN");
	strCP_CONFIRM_YN = ds_List.lookup("P_DATE", strP_DATE, "CP_CONFIRM_YN");
	
	
// 	strP_DATE        = ds_List.getColumn(0, "P_DATE");
// 	strCONFIRM_YN    = ds_List.getColumn(0, "CONFIRM_YN");
// 	strCLOSE_YN      = ds_List.getColumn(0, "CLOSE_YN");
// 	strCP_CONFIRM_YN = ds_List.getColumn(0, "CP_CONFIRM_YN");
	
	/*
	기능 제거
	if(g_AuthLevel < "14"){
		// 확정여부가 Y(1)이고 확정여부(복사본)가 1이면 사용자가 확정한 것
		if(strCONFIRM_YN == 1 && strCP_CONFIRM_YN == 1){
			alert("사용자 확정 건은 수정할 수 없습니다!");
			return;
		}
	}
	*/
		
	if(strCLOSE_YN != "Y"){
			
		ds_List.enableevent = false;
		for(var i=0; i<=ds_List.rowcount; i++){
			if(strP_DATE == ds_List.getColumn(i, "P_DATE")){
				// 이벤트 끔
				//ds_List.enableevent = false;	
				
				if(strCONFIRM_YN == 0){
					ds_List.setColumn(i, "CONFIRM_YN", 1);
				}else{
					ds_List.setColumn(i, "CONFIRM_YN", 0);
				}
	
				// 이벤트 켬
				//ds_List.enableevent = true;	
			}
		}
		ds_List.enableevent = true;
		
		if(strCONFIRM_YN == 0){
			obj.setCellProperty("head", e.cell, "text", "1");
		} else {
			obj.setCellProperty("head", e.cell, "text", "0");
		}
		
	}else{
		gfn_alert("마감되었습니다. 수정할 수 없습니다.");
		return;
	}
	

}

// 담당마케터 팝업
function edtBtn_MGMT_SABUNQuery_OnClick(obj:Button, e:ClickEventInfo){

	var str_Where = "";
	if (obj.name == "edtBtn_MGMT_SABUNQuery"){
		str_Where += "  AND (V.DEPT_ID IN (SELECT CODE FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'MA1002' AND SET1 = 'FICS'))  AND TM_CD = '" + edt_TM.userdata + "' ";
	}
	
	fn_edtBtn_OnClick(obj, str_Where);
}


function edt_MGMT_SABUNQuery_OnKeyDown(obj:Edit, e:KeyEventInfo)
{
	fn_edt_OnKeyDown(obj,e.keycode);	
	//fn_DataSetAllClear();	
}

/*
function fn_Enable(strAuthLevel, strCloseYN, strConfirmYN, strInputYN){
	// 입력사용자이면
	if(strAuthLevel < "14"){
		if(strCloseYN == "N"){
			if(strConfirmYN == "0"){
				if(strInputYN == "Y"){
					return 'number;
				}else{
					return 'none';
				}
			}else{
				return 'none';
			}
		}else{
			return 'none';
		}
	}else{	// 팀장이상이면
		if(strCloseYN == "Y"){
			return 'none';
		}else{
			return 'number';
		}
	}
}
*/

function gd_list_OnEnterDown(obj:Grid, e:GridEditEventInfo)
{
	ds_Pivot.rowposition = ds_Pivot.rowposition+ 1;
}

function fn_FormKeyDown(obj:Form, e:KeyEventInfo)
{
	gfn_formKeyDown(obj, e);
}

function ds_Pivot_oncolumnchanged(obj:Dataset, e:DSColChangeEventInfo)
{
	var sPdate = e.columnid.substr(3,99);
	var sMgmtAcctCd = obj.getColumn(e.row, "MGMT_ACCT_CD");
	var addNum = 0;
	var tmpMgmtAcctCd = "";
	var curMgmtAcctCd = "";
	var curMgmtCd = "";
	var sumAccnt = 0;	// 합계 소계 총합
	var chkCnt = 0;	// 소계중복 반영 안되게 하기위한 count 변수
	
	//trace("P_DATE=='"+sPdate+"' && MGMT_ACCT_CD=='"+sMgmtAcctCd+"'"+" /// e.col ==> "+e.col);
	var nFindRow = ds_List.findRowExpr("P_DATE=='"+sPdate+"' && MGMT_ACCT_CD=='"+sMgmtAcctCd+"'");	
	if (nFindRow > -1) {
		ds_List.setColumn(nFindRow, "ACT_AMT", e.newvalue);
		
		if(e.col == 7 || e.col == 8) {
			// 합계 설정			
			//trace(" addNum ===>> "+addNum+" /// e.oldvalue ==> "+e.oldvalue);			
			tmpMgmtAcctCd = ds_Pivot.getColumn(e.row, "MGMT_ACCT_CD").substr(0, 3);
			for(var i=e.row; i>=0; i--) {
				curMgmtCd = ds_Pivot.getColumn(i, "MGMT_ACCT_CD");
				curMgmtAcctCd = ds_Pivot.getColumn(i, "MGMT_ACCT_CD").substr(0, 3);
				
				if(tmpMgmtAcctCd==curMgmtAcctCd && ds_Pivot.getColumn(i, "INPUT_YN")=="N") {
					
					// 일자별 소계 반영
					//trace("i ===> "+i);					
					if(!gfn_isNull(gfn_trim(ds_Pivot.getColumn(i, "MGMT_ACCT_NAME").substr(0,1)))) {
						//trace(" ds_Pivot.getColumn(i, MGMT_ACCT_NAME) ===>> "+ds_Pivot.getColumn(i, "MGMT_ACCT_NAME"));
						ds_Pivot.setColumn(i, e.col, (toNumber(ds_Pivot.getColumn(i, e.col))-e.oldvalue)+e.newvalue);
						break;
					}else {
						if(chkCnt==0) {
							// 일자별 소계 반영
							ds_Pivot.setColumn(i, e.col, (toNumber(ds_Pivot.getColumn(i, e.col))-e.oldvalue)+e.newvalue);
							chkCnt++;
						}
					}
				}
			}
		}else {
		
			// 합계 설정
			addNum = toNumber(ds_Pivot.getColumn(e.row, "col"+(sPdate).substr(0,8)+"00 [합 계]"));
			addNum = addNum - e.oldvalue;
			ds_Pivot.setColumn(e.row, "col"+(sPdate).substr(0,8)+"00 [합 계]", addNum+e.newvalue);
			
			tmpMgmtAcctCd = ds_Pivot.getColumn(e.row, "MGMT_ACCT_CD").substr(0, 3);
			for(var i=e.row; i>=0; i--) {
				curMgmtCd = ds_Pivot.getColumn(i, "MGMT_ACCT_CD");
				curMgmtAcctCd = ds_Pivot.getColumn(i, "MGMT_ACCT_CD").substr(0, 3);
				
				if(tmpMgmtAcctCd==curMgmtAcctCd && ds_Pivot.getColumn(i, "INPUT_YN")=="N") {
					
					if(!gfn_isNull(gfn_trim(ds_Pivot.getColumn(i, "MGMT_ACCT_NAME").substr(0,1)))) {
						//trace(" ds_Pivot.getColumn(i, MGMT_ACCT_NAME) ===>> "+ds_Pivot.getColumn(i, "MGMT_ACCT_NAME"));
						ds_Pivot.setColumn(i, e.col, (toNumber(ds_Pivot.getColumn(i, e.col))-e.oldvalue)+e.newvalue);
						ds_Pivot.setColumn(i, "col"+(sPdate).substr(0,8)+"00 [합 계]", (toNumber(ds_Pivot.getColumn(i, "col"+(sPdate).substr(0,8)+"00 [합 계]"))-e.oldvalue)+e.newvalue);
						break;
					}else {
						
						if(chkCnt==0) {
							// 일자별 소계 반영
							ds_Pivot.setColumn(i, e.col, (toNumber(ds_Pivot.getColumn(i, e.col))-e.oldvalue)+e.newvalue);
							// 합계 소계 반영
							ds_Pivot.setColumn(i, "col"+(sPdate).substr(0,8)+"00 [합 계]", (toNumber(ds_Pivot.getColumn(i, "col"+(sPdate).substr(0,8)+"00 [합 계]"))-e.oldvalue)+e.newvalue);						
							chkCnt++;
						}
					}
				}
			}			
		}	
	}
	
	//trace(ds_List.saveXML());
}

function gd_list_oncellclick(obj:Grid, e:GridClickEventInfo)
{
	//trace(gd_list.getCellProperty("body",e.cell, "text"));
}
]]></Script>
  </Form>
</FDL>
