<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="..\..\..\default_typedef.xml"/>
  <Form id="FMR00105V" onkeydown="frm_OnKeyDown" onload="form_onload" titletext="레시피보유수량2" position="absolute 0 0 1235 570" scrollbars="none">
    <Layouts>
      <Layout>
        <Grid readonly="true" id="grd_list" position="absolute 10 10 1225 560" anchor="all" wheelscrollrow="1" autofittype="col">
          <Formats>
            <Format id="Default"/>
          </Formats>
        </Grid>
        <Static id="Static07" text="w10" class="Guide01_AreaRed" visible="false" position="absolute 0 15 10 577"/>
        <Static id="Static35" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 10 560 1234 570" anchor="left top"/>
        <Static id="Static01" text="w10" class="Guide01_AreaRed" visible="false" position="absolute 1225 15 1235 580"/>
        <Static id="Static60" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 0 0 1235 10" anchor="left top"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_list">
        <ColumnInfo>
          <Column id="RECIPE_CLASS" type="STRING" size="20"/>
          <Column id="RECIPE_CLASS_NM" type="STRING" size="100"/>
          <Column id="RECIPE_TYPE" type="STRING" size="20"/>
          <Column id="RECIPE_TYPE_NM" type="STRING" size="100"/>
          <Column id="CUISINE_TYPE" type="STRING" size="20"/>
          <Column id="CUISINE_TYPE_NM" type="STRING" size="100"/>
          <Column id="CNT" type="BIGDECIMAL" size="39"/>
          <Column id="GBN" type="BIGDECIMAL" size="39"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript4.0"><![CDATA[/*
 ******************************************************************************************
 * 시스템구분   : 메뉴관리/레시피관리/레시피목록 및 보유수량 조회
 * 프로그램명   : FMR00105V.XML
 * 기      능   : 레시피보유수량2
 * 작  성  자   : 박지영
 * 작성  일자   : 2015-04-06
 * 비      고   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
//=========================================================================================
// [ PART 1 ]
// Form에서 Include 할 내용을 정의
//
//=========================================================================================
include "U_lib::lib_conversionCom.xjs";
//@@컨버터에서 주석처리 #include "lib::sc_comon.js"
//@@컨버터에서 주석처리 #include "LIB::lib_comm_0001.js"
//@@컨버터에서 주석처리 #include "lib::tit_comm_0001.js"		// X-Framework Lib
//@@컨버터에서 주석처리 #include "lib::sc_sql_common.js"		// 공통팝업
//@@컨버터에서 주석처리 #include "lib::fm_common.js"			// FM공통
//=========================================================================================
// [ PART 2 ]
// Form에서 사용될 전역변수를 선언
//
//=========================================================================================
//=========================================================================================
// [ PART 3 ]
// Form Loading 시 작업 정의
//
//=========================================================================================
function form_onload(obj:Form, e:LoadEventInfo)
{
	gfn_formOnLoad(obj, true);

	// X-Framework : Action 정보 생성 
	fsp_init(this);
}

function frm_OnKeyDown(obj:Form, e:KeyEventInfo)
{
	gfn_formKeyDown(obj, e); //(obj,e.fromreferenceobject,e.keycode,e.shiftKey,e.ctrlKey,e.altKey,-1,-1);
}
//=========================================================================================
// [ PART 4 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,도움말,form닫기)
//
//=========================================================================================
/*
 ******************************************************************************************
 * 함  수  명   : fn_Search()
 * 기      능   : [조회버튼] 검색조건에 해당하는 정보를 조회
 ******************************************************************************************
 */
function fn_search()
{
	// 초기화
	//ds_list.ClearData();
	var actionName, cmdName, inData, outData, otherArg, callBackFnc;
	
	actionName		= "FMR00104V_T001";
	cmdName			= "U_svc::" + "fm/fmr/FMR00104V_T001.jsp";
	inData			= "ds_input=ds_input";
	outData			= "ds_list=ds_list";
	callBackFnc		= "fn_afterSearch";
	
	jsp_transaction(this,actionName, cmdName ,inData ,outData,otherArg,callBackFnc,true,false,false);
}

/*
 ******************************************************************************************
 * 함  수  명   : fn_afterSearch()
 * 입      력   : errCode 	= 에러코드
				  errMsg	= 에러메세지
 * 반      환   : 없음
 ******************************************************************************************
 */
function fn_afterSearch(errCode, errMsg)
{
	//피봇
	//trace(ds_list.saveXML());
	fn_crossTab(ds_list,grd_list);
}

/*
 * Function Name : fn_crossTab
 * Description   : 크로스탭 그리드 생성
 * Parameter     : 
 * Return        : 
 * Example       : fn_crossTab();
 */
function fn_crossTab(objDs,objGrid)
{
	//Dataset생성
	var objPivotHeadDs = fn_makeHeadDs(objDs);
	var objPivotBodyDs = fn_makeBodyDs(objDs,objPivotHeadDs);
	
	fn_crossTabGrid(objGrid,objPivotHeadDs,objPivotBodyDs);
}

//Pivot Head Dataset생성
function fn_makeHeadDs(objDs)
{
	var sPivotHeadDs = objDs.name + "_PivotHead";
	var objPivotHeadDs;
	if ( this.isValidObject(sPivotHeadDs) ) {
		objPivotHeadDs = eval(sPivotHeadDs);
	} else {
		objPivotHeadDs = new Dataset();
		objPivotHeadDs.name = sPivotHeadDs;
		this.addChild(objPivotHeadDs.name,objPivotHeadDs);
	}

	objPivotHeadDs.clear();
	objPivotHeadDs.addColumn("PIVOT_CODE","STRING",255);
	objPivotHeadDs.addColumn("PIVOT_TEXT","STRING",255);
	
	objDs.keystring = "S:RECIPE_CLASS";
	var sPreKey 	  = "";
	var sCurrCode 	  = "";
	var sCurrText 	  = "";
	var nRow;
	for ( var i = 0; i < objDs.rowcount; i++ )
	{
		sCurrCode = objDs.getColumn(i,"RECIPE_CLASS");
		sCurrText = objDs.getColumn(i,"RECIPE_CLASS_NM");
		if ( sPreKey != sCurrCode)	//레시피분류
		{
			nRow = objPivotHeadDs.addRow();
			objPivotHeadDs.setColumn(nRow,"PIVOT_CODE",sCurrCode);
			objPivotHeadDs.setColumn(nRow,"PIVOT_TEXT",sCurrText);			
		}
		sPreKey = sCurrCode;
	}
	
	return objPivotHeadDs;
}

//Pivot Dataset생성
function fn_makeBodyDs(objDs,objPivotHeadDs)
{
	var sPivotDs = objDs.name + "_Pivot";
	var objPivotDs;
	if ( this.isValidObject(sPivotDs) ) {
		objPivotDs = eval(sPivotDs);
	} else {
		objPivotDs = new Dataset();
		objPivotDs.name = sPivotDs;
		this.addChild(objPivotDs.name,objPivotDs);
	}
	objPivotDs.clear();
	
	//고정컬럼 추가
	objPivotDs.addColumn("GBN","STRING",255);
	objPivotDs.addColumn("RECIPE_TYPE","STRING",255);
	objPivotDs.addColumn("RECIPE_TYPE_NM","STRING",255);
	objPivotDs.addColumn("CUISINE_TYPE","STRING",255);
	objPivotDs.addColumn("CUISINE_TYPE_NM","STRING",255);
	objPivotDs.addColumn("ROW_SUM","BIGDECIMAL",100);
	
	//Pivot컬럼 추가
	for ( i=0; i<objPivotHeadDs.rowcount; i++) {
		objPivotDs.addColumn("P_"+objPivotHeadDs.getColumn(i,"PIVOT_CODE"),"BIGDECIMAL",100);
	}
	
	//Data생성
	objDs.keystring = "S:GBN+RECIPE_TYPE_NM+CUISINE_TYPE_NM+RECIPE_CLASS_NM";
	var nRowCnt 	= objDs.rowcount;
	var sPreKey 	  = "";
	var sPreGroupKey  = "";
	var sCurrKey 	  = "";
	var sCurrGroupKey = "";
	var nAddRow;
	var nSum = 0;
	for (var j = 0; j < nRowCnt; j++)
	{	
		sCurrGroupKey = objDs.getColumn(j,"GBN")
		              + objDs.getColumn(j,"RECIPE_TYPE")
		              + objDs.getColumn(j,"CUISINE_TYPE")
		              ;
		sCurrKey = objDs.getColumn(j,"RECIPE_CLASS");
		
		if ( sPreGroupKey != sCurrGroupKey)
		{
			nAddRow = objPivotDs.addRow();
			//Group Data
			objPivotDs.setColumn(nAddRow,"GBN",objDs.getColumn(j,"GBN"));
			objPivotDs.setColumn(nAddRow,"RECIPE_TYPE",objDs.getColumn(j,"RECIPE_TYPE"));
			objPivotDs.setColumn(nAddRow,"RECIPE_TYPE_NM",objDs.getColumn(j,"RECIPE_TYPE_NM"));
			objPivotDs.setColumn(nAddRow,"CUISINE_TYPE",objDs.getColumn(j,"CUISINE_TYPE"));
			objPivotDs.setColumn(nAddRow,"CUISINE_TYPE_NM",objDs.getColumn(j,"CUISINE_TYPE_NM"));
			//Pivot Data
			objPivotDs.setColumn(nAddRow,"P_"+objDs.getColumn(j,"RECIPE_CLASS"),objDs.getColumn(j,"CNT"));
			//Summary Data
			nSum = objDs.getCaseSum( "gfn_nvl(GBN) == '" + gfn_nvl(objDs.getColumn(j,"GBN")) + "'"
			                        +" && gfn_nvl(RECIPE_TYPE) == '" + gfn_nvl(objDs.getColumn(j,"RECIPE_TYPE")) + "'"
			                        +" && gfn_nvl(CUISINE_TYPE) == '" + gfn_nvl(objDs.getColumn(j,"CUISINE_TYPE")) + "'"
			                        , "CNT");
			objPivotDs.setColumn(nAddRow,"ROW_SUM",nSum);
		} else {
			//Pivot Data
			objPivotDs.setColumn(nAddRow,"P_"+objDs.getColumn(j,"RECIPE_CLASS"),objDs.getColumn(j,"CNT"));
		}
		sPreGroupKey = sCurrGroupKey;
	}
	
	//Subsum Group
	objPivotDs.keystring = "";
	objPivotDs.keystring = "G:GBN,RECIPE_TYPE_NM";
	objPivotDs.rowposition = 0;
	
	return objPivotDs;
}

//Pivot 그리드포맷생성
function fn_crossTabGrid(objGrid,objPivotHeadDs,objPivotBodyDs)
{
	// GRID 작성
	var Contents_grd_lst	= "";
	var Contents_grd_column = "";
	var Contents_grd_rows   = "";
	var Contents_grd_head   = "";
	var Contents_grd_body   = "";
	var Contents_grd_summ 	= "";
	// 
	// Grid를 작성합니다.
	//
	Contents_grd_lst	 = '<Formats>' + '\n';
	Contents_grd_lst    += '<Format id="Default">' + '\n';

	//
	// Grid columns를 작성합니다.
	//
	Contents_grd_column  = '  <Columns>' + '\n';
	// fix column
	Contents_grd_column	+= '    <Column size="100" band="left"/>' + '\n';	//레시피유형
	Contents_grd_column	+= '    <Column size="100" band="left"/>' + '\n';	//조리법유형
	Contents_grd_column	+= '    <Column size="100" band="left"/>' + '\n';	//합계
	// pivot column
	for ( i=0; i < objPivotHeadDs.rowcount; i++ ) {
		Contents_grd_column	+= '    <Column size="100"/>' + '\n';
	}
	Contents_grd_column += '  </Columns>' + '\n'; 
	
	//
	// Grid rows를 작성합니다.
	//
	Contents_grd_rows  = '  <Rows>' + '\n';
	Contents_grd_rows += '    <Row size="26" band="head" />' + '\n';
	Contents_grd_rows += '    <Row size="24" />' + '\n';
	Contents_grd_rows += '    <Row size="24" band="summ" />' + '\n';
	Contents_grd_rows += '  </Rows>' + '\n';

	//
	// Grid head를 작성합니다.
	//
	Contents_grd_head	 = '  <Band id="head">' + '\n';
	// fix column
	Contents_grd_head	+= '    <Cell col="0" text="레시피유형"/>' + '\n';
	Contents_grd_head	+= '    <Cell col="1" text="조리법유형"/>' + '\n';
	Contents_grd_head	+= '    <Cell col="2" text="합계"/>' + '\n';
	// pivot column
	for ( i=0; i < objPivotHeadDs.rowcount; i++ ) {
		Contents_grd_head	+= '    <Cell col="'+(i+3)+'" text="'+objPivotHeadDs.getColumn(i,"PIVOT_TEXT")+'"/>' + '\n';
	}
	Contents_grd_head	+= '  </Band>' + '\n';

	//
	// Grid body를 작성합니다.
	//
	Contents_grd_body	= '  <Band id="body">' + '\n';
	// fix column
 	Contents_grd_body	+= '    <Cell col="0" displaytype="text" style="align:expr(getRowLevel(currow)>0?&quot;center middle&quot;:&quot;left middle&quot;);background:expr(getRowLevel(currow)==2?&quot;#cef6e5&quot;:&quot;#ffffffff&quot;);background2:expr(getRowLevel(currow)==2?&quot;#cef6e5&quot;:&quot;#ffffffff&quot;);" text="bind:RECIPE_TYPE_NM" subsumtext="expr:getRowLevel(currow)==2?&quot;합&#32;계&quot;:getColumn(currow-1,&quot;RECIPE_TYPE_NM&quot;)" suppress="1"/>' + '\n';
 	Contents_grd_body	+= '    <Cell col="1" displaytype="text" style="align:expr(getRowLevel(currow)>0?&quot;center middle&quot;:&quot;left middle&quot;);background:expr(getRowLevel(currow)==1?&quot;#fddcc9&quot;:getRowLevel(currow)==2?&quot;#cef6e5&quot;:&quot;#ffffffff&quot;);background2:expr(getRowLevel(currow)==1?&quot;#fddcc9&quot;:getRowLevel(currow)==2?&quot;#cef6e5&quot;:&quot;#ffffffff&quot;);" text="bind:CUISINE_TYPE_NM" subsumtext="expr:getRowLevel(currow)==1?&quot;소&#32;계&quot;:&quot;&quot;" suppress="2"/>' + '\n';
 	Contents_grd_body	+= '    <Cell col="2" displaytype="number" style="align:right middle;background:expr(getRowLevel(currow)==1?&quot;#fddcc9&quot;:getRowLevel(currow)==2?&quot;#cef6e5&quot;:&quot;#ffffffff&quot;);background2:expr(getRowLevel(currow)==1?&quot;#fddcc9&quot;:getRowLevel(currow)==2?&quot;#cef6e5&quot;:&quot;#ffffffff&quot;);" text="bind:ROW_SUM"/>' + '\n';
	// pivot column
	var nCol = 0;
	for ( i=0; i < objPivotHeadDs.rowcount; i++ ) {
		Contents_grd_body	+= '    <Cell col="'+(i+3)+'" displaytype="number" style="align:right middle;background:expr(getRowLevel(currow)==1?&quot;#fddcc9&quot;:getRowLevel(currow)==2?&quot;#cef6e5&quot;:&quot;#ffffffff&quot;);background2:expr(getRowLevel(currow)==1?&quot;#fddcc9&quot;:getRowLevel(currow)==2?&quot;#cef6e5&quot;:&quot;#ffffffff&quot;);" text="bind:P_'+objPivotHeadDs.getColumn(i,"PIVOT_CODE")+'"/>' + '\n';
		nCol = i+3;
	}
	Contents_grd_body	+= '  </Band>' + '\n';
	
	//
	// Grid Summary를 작성합니다.
	//
	Contents_grd_summ	= '  <Band id="summary">' + '\n';
	// fix column
	Contents_grd_summ	+= '    <Cell colspan="2" style="align:center middle;" text="총계"/>' + '\n';
	Contents_grd_summ	+= '    <Cell col="2" displaytype="number" style="align:right middle" expr="expr:getSum(&quot;ROW_SUM&quot;)"/>' + '\n';
	// pivot column
	for ( i=0; i < objPivotHeadDs.rowcount; i++ ) {
		Contents_grd_summ	+= '    <Cell col="'+(i+3)+'" displaytype="number" style="align:right middle" expr="expr:getSum(&quot;P_'+objPivotHeadDs.getColumn(i,"PIVOT_CODE")+'&quot;)"/>' + '\n';
	}
	Contents_grd_summ	+= '  </Band>' + '\n';
	
	Contents_grd_lst	+= Contents_grd_column + Contents_grd_rows + Contents_grd_head + Contents_grd_body + Contents_grd_summ + '</Format>' + '\n' + '</Formats>';
//trace(	Contents_grd_lst );
	objGrid.enableredraw = false;	
	objGrid.formats  = Contents_grd_lst;
 	objGrid.formatid = "Default"; 	
	objGrid.nodataimage = gv_noData;	
	objGrid.binddataset = objPivotBodyDs.name;
	objGrid.enableredraw = true;	
	objPivotBodyDs.rowposition = -1;
}

/*
 ******************************************************************************************
 * 함  수  명   : fn_Insert()
 * 기      능   : [입력버튼] 입력 시 처리되는 작업
 * 비      고	: 팝업사용
 ******************************************************************************************
 */
function fn_insert()
{
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_Save()
 * 기      능   : [저장버튼] 저장 시 처리되는 작업
 ******************************************************************************************
 */
function fn_save()
{ 
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_Delete()
 * 기      능   : [삭제버튼] 삭제 시 처리되는 작업
 ******************************************************************************************
 */
function fn_delete()
{
}

/*
 ******************************************************************************************
 * 함  수  명   : fn_Print()
 * 기      능   : [출력버튼] 출력 시 처리되는 작업
 ******************************************************************************************
 */
function fn_print()
{
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_close()
 * 기      능   : [닫기버튼] 화면을 닫을때 처리되는 작업
 ******************************************************************************************
 */
function fn_close()
{
	return true;
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_Excel()
 * 기      능   : [엑셀버튼] 엑셀 변환 시 처리되는 작업
 ******************************************************************************************
 */
function fn_Excel()
{
	gfn_exportExcel(grd_list, this.titletext);
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_Help()
 * 기      능   : [도움말버튼] 도움말
 ******************************************************************************************
 */
function fn_help()
{
	// tit_addSearchActionInfo(this, "fm/fmo:SCC_MENU_SELECT");
	// tit_callService(this, "", "", "ds_cond=ds_cond", "ds_Menu=ds_list", "", "");	
}
//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
//
//=========================================================================================
//=========================================================================================
// [ PART 6 ]
// component Event 정의 ( User Define function )
// --> component Event의 기요,기능,동작 등 상세내용은 MiPlatform 메뉴얼을 참조하시기 바랍니다.
//=========================================================================================


]]></Script>
  </Form>
</FDL>
