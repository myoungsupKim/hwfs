<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="../../../default_typedef.xml"/>
  <Form id="FSM00170V" onload="form_onload" titletext="영양분석" position="absolute 0 0 1000 640" scrollbars="none">
    <Layouts>
      <Layout>
        <Static id="Static08" onclick="Static08_onclick" class="sta_WFSA_Labelbg" position="absolute 10 10 990 51" anchor="left top right"/>
        <Static id="Static03" text="기간" position="absolute 26 19 86 45" class="sta_WFSA_label"/>
        <Combo codecolumn="CORNER_CODE" datacolumn="CORNER_NAME" displayrowcount="10" id="cbo_Corner" index="0" innerdataset="ds_Corner" onkeydown="fn_Common_OnKeyDown" taborder="5" position="absolute 502 20 602 41"/>
        <Static id="Static0" text="코너" position="absolute 461 19 521 45" class="sta_WFSA_label"/>
        <MaskEdit id="me_FromMenuDate" mask="####-##-##" oneditclick="g_Date_OnFocus" onsetfocus="g_Date_OnFocus" onkeydown="fn_Common_OnKeyDown" onkillfocus="g_Date_OnKillFocus" taborder="2" type="string" position="absolute 69 20 148 41"/>
        <Static id="Static1" text="끼니" position="absolute 314 19 374 45" class="sta_WFSA_label"/>
        <Combo codecolumn="MEAL_CODE" datacolumn="MEAL_NAME" displayrowcount="10" id="cbo_Meal" index="0" innerdataset="ds_Meal" onkeydown="fn_Common_OnKeyDown" taborder="4" position="absolute 355 20 431 41"/>
        <Static id="Static2" text="~" position="absolute 172 21 181 42"/>
        <MaskEdit id="me_ToMenuDate" mask="####-##-##" oneditclick="g_Date_OnFocus" onsetfocus="g_Date_OnFocus" onkeydown="fn_Common_OnKeyDown" onkillfocus="g_Date_OnKillFocus" taborder="3" type="string" position="absolute 184 20 263 41"/>
        <Grid autoenter="select" binddataset="ds_List" cellmovingtype="col" cellsizingtype="both" readonly="false" enable="true" id="grd_List" useinputpanel="false" onheadclick="grd_List_OnHeadClick" taborder="0" tabstop="true" usecontextmenu="true" useselcolor="true" visible="true" wheelscrollrow="1" position="absolute 10 64 990 627" selecttype="row" autofittype="col">
          <Formats>
            <Format id="Default">
              <Columns>
                <Column size="30"/>
                <Column size="100"/>
                <Column size="123"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
              </Columns>
              <Rows>
                <Row size="22" band="head"/>
                <Row size="22" band="head"/>
                <Row size="20"/>
                <Row size="22" band="summ"/>
                <Row size="22" band="summ"/>
                <Row size="22" band="summ"/>
                <Row size="22" band="summ"/>
                <Row size="22" band="summ"/>
              </Rows>
              <Band id="head">
                <Cell rowspan="2" displaytype="text" class="head_Excel"/>
                <Cell col="1" rowspan="2" displaytype="text" text="제공일자" wordwrap="word"/>
                <Cell col="2" rowspan="2" displaytype="text" text="식  단"/>
                <Cell col="3" rowspan="2" displaytype="text" text="에너지&#10;(Kcal)"/>
                <Cell col="4" rowspan="2" displaytype="text" text="당질&#10;(g)"/>
                <Cell col="5" rowspan="2" displaytype="text" text="단백질&#10;(g)"/>
                <Cell col="6" rowspan="2" displaytype="text" text="지질&#10;(g)"/>
                <Cell col="7" rowspan="2" displaytype="text" text="비타민A&#10;(R.E)"/>
                <Cell col="8" rowspan="2" displaytype="text" text="비타민B1&#10;(mg)"/>
                <Cell col="9" rowspan="2" displaytype="text" text="비타민B2&#10;(mg)"/>
                <Cell col="10" rowspan="2" displaytype="text" text="비타민C&#10;(mg)"/>
                <Cell col="11" rowspan="2" displaytype="text" text="칼슘&#10;(mg)"/>
                <Cell col="12" rowspan="2" displaytype="text" text="철&#10;(mg)"/>
              </Band>
              <Band id="body">
                <Cell displaytype="text" style="align:center;" expr="expr:currow+1"/>
                <Cell col="1" displaytype="date" style="align:left;" text="bind:MENU_DATE" suppress="1"/>
                <Cell col="2" displaytype="text" style="background:EXPR(decode(expr_GetRowType(rowposition),'logical','#e7e7ffff','default'));align:left;" text="bind:MENU_DESC" expr="expr:decode(GetRowType(ds_List,currow), &quot;logical&quot;, &quot;평  균&quot;, MENU_DESC)" suppress="2"/>
                <Cell col="3" displaytype="number" style="align:right;background:EXPR(decode(expr_GetRowType(rowposition),'logical','#e7e7ffff','default'));" text="bind:CAL" mask="###,##0.00"/>
                <Cell col="4" displaytype="number" style="align:right;background:EXPR(decode(expr_GetRowType(rowposition),'logical','#e7e7ffff','default'));" text="bind:CARBO" mask="###,##0.00"/>
                <Cell col="5" displaytype="number" style="align:right;background:EXPR(decode(expr_GetRowType(rowposition),'logical','#e7e7ffff','default'));" text="bind:PROT" mask="###,##0.00"/>
                <Cell col="6" displaytype="number" style="align:right;background:EXPR(decode(expr_GetRowType(rowposition),'logical','#e7e7ffff','default'));" text="bind:FAT" mask="###,##0.00"/>
                <Cell col="7" displaytype="number" style="align:right;background:EXPR(decode(expr_GetRowType(rowposition),'logical','#e7e7ffff','default'));" text="bind:VITA_A" mask="###,##0.00"/>
                <Cell col="8" displaytype="number" style="align:right;background:EXPR(decode(expr_GetRowType(rowposition),'logical','#e7e7ffff','default'));" text="bind:THIA" mask="###,##0.00"/>
                <Cell col="9" displaytype="number" style="align:right;background:EXPR(decode(expr_GetRowType(rowposition),'logical','#e7e7ffff','default'));" text="bind:RIBO" mask="###,##0.00"/>
                <Cell col="10" displaytype="number" style="align:right;background:EXPR(decode(expr_GetRowType(rowposition),'logical','#e7e7ffff','default'));" text="bind:VITA_C" mask="###,##0.00"/>
                <Cell col="11" displaytype="number" style="align:right;background:EXPR(decode(expr_GetRowType(rowposition),'logical','#e7e7ffff','default'));" text="bind:CA" mask="###,##0.00"/>
                <Cell col="12" displaytype="number" style="align:right;background:EXPR(decode(expr_GetRowType(rowposition),'logical','#e7e7ffff','default'));" text="bind:FE" mask="###,##0.00"/>
              </Band>
              <Band id="summary">
                <Cell colspan="3" displaytype="text" style="align:center;background:EXPR(gfn_sumStyle(1,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(1,&quot;BG&quot;));" text="기간평균"/>
                <Cell col="3" displaytype="number" style="align:right middle;background:EXPR(gfn_sumStyle(1,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(1,&quot;BG&quot;));" expr="expr:fn_clearNaN(Math.round(getAvg(&quot;CAL&quot;),2))" mask="###,##0.00"/>
                <Cell col="4" displaytype="number" style="align:right middle;background:EXPR(gfn_sumStyle(1,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(1,&quot;BG&quot;));" expr="expr:fn_clearNaN(Math.round(getAvg(&quot;CARBO&quot;),2))" mask="###,##0.00"/>
                <Cell col="5" displaytype="number" style="align:right middle;background:EXPR(gfn_sumStyle(1,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(1,&quot;BG&quot;));" expr="expr:fn_clearNaN(Math.round(getAvg(&quot;PROT&quot;),2))" mask="###,##0.00"/>
                <Cell col="6" displaytype="number" style="align:right middle;background:EXPR(gfn_sumStyle(1,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(1,&quot;BG&quot;));" expr="expr:fn_clearNaN(Math.round(getAvg(&quot;FAT&quot;),2))" mask="###,##0.00"/>
                <Cell col="7" displaytype="number" style="align:right middle;background:EXPR(gfn_sumStyle(1,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(1,&quot;BG&quot;));" expr="expr:fn_clearNaN(Math.round(getAvg(&quot;VITA_A&quot;),2))" mask="###,##0.00"/>
                <Cell col="8" displaytype="number" style="align:right middle;background:EXPR(gfn_sumStyle(1,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(1,&quot;BG&quot;));" expr="expr:fn_clearNaN(Math.round(getAvg(&quot;THIA&quot;),2))" mask="###,##0.00"/>
                <Cell col="9" displaytype="number" style="align:right middle;background:EXPR(gfn_sumStyle(1,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(1,&quot;BG&quot;));" expr="expr:fn_clearNaN(Math.round(getAvg(&quot;RIBO&quot;),2))" mask="###,##0.00"/>
                <Cell col="10" displaytype="number" style="align:right middle;background:EXPR(gfn_sumStyle(1,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(1,&quot;BG&quot;));" expr="expr:fn_clearNaN(Math.round(getAvg(&quot;VITA_C&quot;),2))" mask="###,##0.00"/>
                <Cell col="11" displaytype="number" style="align:right middle;background:EXPR(gfn_sumStyle(1,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(1,&quot;BG&quot;));" expr="expr:fn_clearNaN(Math.round(getAvg(&quot;CA&quot;),2))" mask="###,##0.00"/>
                <Cell col="12" displaytype="number" style="align:right middle;background:EXPR(gfn_sumStyle(1,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(1,&quot;BG&quot;));" expr="expr:fn_clearNaN(Math.round(getAvg(&quot;FE&quot;),2))" mask="###,##0.00"/>
                <Cell row="1" colspan="3" style="align:center;background:EXPR(gfn_sumStyle(2,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(2,&quot;BG&quot;));" text="기 준 량"/>
                <Cell row="1" col="3" displaytype="number" style="align:right middle;background:EXPR(gfn_sumStyle(2,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(2,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_SetNutStd(&quot;CAL_QTY&quot;))" mask="#,##0.00"/>
                <Cell row="1" col="4" displaytype="number" style="align:right middle;background:EXPR(gfn_sumStyle(2,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(2,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_SetNutStd(&quot;CARBO_RCMD_QTY&quot;))" mask="#,##0.00"/>
                <Cell row="1" col="5" displaytype="number" style="align:right middle;background:EXPR(gfn_sumStyle(2,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(2,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_SetNutStd(&quot;PROT_QTY&quot;))" mask="#,##0.00"/>
                <Cell row="1" col="6" displaytype="number" style="align:right middle;background:EXPR(gfn_sumStyle(2,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(2,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_SetNutStd(&quot;FAT_RCMD_QTY&quot;))" mask="#,##0.00"/>
                <Cell row="1" col="7" displaytype="number" style="align:right middle;background:EXPR(gfn_sumStyle(2,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(2,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_SetNutStd(&quot;VITA_RCMD_QTY&quot;))" mask="#,##0.00"/>
                <Cell row="1" col="8" displaytype="number" style="align:right middle;background:EXPR(gfn_sumStyle(2,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(2,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_SetNutStd(&quot;THIA_RCMD_QTY&quot;))" mask="#,##0.00"/>
                <Cell row="1" col="9" displaytype="number" style="align:right middle;background:EXPR(gfn_sumStyle(2,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(2,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_SetNutStd(&quot;RIBO_RCMD_QTY&quot;))" mask="#,##0.00"/>
                <Cell row="1" col="10" displaytype="number" style="align:right middle;background:EXPR(gfn_sumStyle(2,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(2,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_SetNutStd(&quot;VITAC_RCMD_QTY&quot;))" mask="#,##0.00"/>
                <Cell row="1" col="11" displaytype="number" style="align:right middle;background:EXPR(gfn_sumStyle(2,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(2,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_SetNutStd(&quot;CA_RCMD_QTY&quot;))" mask="#,##0.00"/>
                <Cell row="1" col="12" displaytype="number" style="align:right middle;background:EXPR(gfn_sumStyle(2,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(2,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_SetNutStd(&quot;FE_RCMD_QTY&quot;))" mask="#,##0.00"/>
                <Cell row="2" colspan="3" displaytype="text" style="align:center;background:EXPR(gfn_sumStyle(3,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(3,&quot;BG&quot;));" text="기준대비 차이량"/>
                <Cell row="2" col="3" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(3,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(3,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_StdDif(&quot;CAL&quot;, &quot;CAL_QTY&quot;))"/>
                <Cell row="2" col="4" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(3,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(3,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_StdDif(&quot;CARBO&quot;, &quot;CARBO_RCMD_QTY&quot;))"/>
                <Cell row="2" col="5" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(3,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(3,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_StdDif(&quot;PROT&quot;, &quot;PROT_QTY&quot;))"/>
                <Cell row="2" col="6" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(3,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(3,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_StdDif(&quot;FAT&quot;, &quot;FAT_RCMD_QTY&quot;))"/>
                <Cell row="2" col="7" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(3,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(3,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_StdDif(&quot;VITA_A&quot;, &quot;VITA_RCMD_QTY&quot;))"/>
                <Cell row="2" col="8" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(3,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(3,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_StdDif(&quot;THIA&quot;, &quot;THIA_RCMD_QTY&quot;))"/>
                <Cell row="2" col="9" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(3,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(3,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_StdDif(&quot;RIBO&quot;, &quot;RIBO_RCMD_QTY&quot;))"/>
                <Cell row="2" col="10" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(3,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(3,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_StdDif(&quot;VITA_C&quot;, &quot;VITAC_RCMD_QTY&quot;))"/>
                <Cell row="2" col="11" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(3,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(3,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_StdDif(&quot;CA&quot;, &quot;CA_RCMD_QTY&quot;))"/>
                <Cell row="2" col="12" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(3,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(3,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_StdDif(&quot;FE&quot;, &quot;FE_RCMD_QTY&quot;))"/>
                <Cell row="3" colspan="3" displaytype="text" style="align:center;background:EXPR(gfn_sumStyle(4,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(4,&quot;BG&quot;));" text="기준대비 섭취비율"/>
                <Cell row="3" col="3" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(4,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(4,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_StdPer(&quot;CAL&quot;, &quot;CAL_QTY&quot;))"/>
                <Cell row="3" col="4" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(4,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(4,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_StdPer(&quot;CARBO&quot;, &quot;CARBO_RCMD_QTY&quot;))"/>
                <Cell row="3" col="5" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(4,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(4,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_StdPer(&quot;PROT&quot;, &quot;PROT_QTY&quot;))"/>
                <Cell row="3" col="6" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(4,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(4,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_StdPer(&quot;FAT&quot;, &quot;FAT_RCMD_QTY&quot;))"/>
                <Cell row="3" col="7" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(4,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(4,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_StdPer(&quot;VITA_A&quot;, &quot;VITA_RCMD_QTY&quot;))"/>
                <Cell row="3" col="8" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(4,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(4,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_StdPer(&quot;THIA&quot;, &quot;THIA_RCMD_QTY&quot;))"/>
                <Cell row="3" col="9" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(4,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(4,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_StdPer(&quot;RIBO&quot;, &quot;RIBO_RCMD_QTY&quot;))"/>
                <Cell row="3" col="10" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(4,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(4,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_StdPer(&quot;VITA_C&quot;, &quot;VITAC_RCMD_QTY&quot;))"/>
                <Cell row="3" col="11" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(4,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(4,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_StdPer(&quot;CA&quot;, &quot;CA_RCMD_QTY&quot;))"/>
                <Cell row="3" col="12" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(4,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(4,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_StdPer(&quot;FE&quot;, &quot;FE_RCMD_QTY&quot;))"/>
                <Cell row="4" colspan="3" displaytype="text" style="align:center;background:EXPR(gfn_sumStyle(1,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(1,&quot;BG&quot;));" text="CPF 비율"/>
                <Cell row="4" col="3" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(1,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(1,&quot;BG&quot;));"/>
                <Cell row="4" col="4" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(1,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(1,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_GetPerCPF(&quot;CARBO&quot;))"/>
                <Cell row="4" col="5" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(1,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(1,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_GetPerCPF(&quot;PROT&quot;))"/>
                <Cell row="4" col="6" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(1,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(1,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_GetPerCPF(&quot;FAT&quot;))"/>
                <Cell row="4" col="7" colspan="6" displaytype="text" style="align:right middle;background:EXPR(gfn_sumStyle(1,&quot;BG&quot;));background2:EXPR(gfn_sumStyle(1,&quot;BG&quot;));" expr="expr:fn_clearNaN(fn_GetCPF())"/>
              </Band>
            </Format>
            <Format id="Default0">
              <Columns>
                <Column size="30"/>
                <Column size="78"/>
                <Column size="158"/>
                <Column size="87"/>
                <Column size="155"/>
                <Column size="85"/>
                <Column size="117"/>
                <Column size="39"/>
                <Column size="85"/>
                <Column size="80"/>
              </Columns>
              <Rows>
                <Row size="22" band="head"/>
                <Row size="20"/>
              </Rows>
              <Band id="head">
                <Cell col="0" displaytype="text" class="head_Excel"/>
                <Cell col="1" displaytype="text" text="레시피코드" wordwrap="word"/>
                <Cell col="2" displaytype="text" text="레시피명"/>
                <Cell col="3" displaytype="text" text="자재코드" wordwrap="word"/>
                <Cell col="4" displaytype="text" text="자재명" wordwrap="word"/>
                <Cell col="5" displaytype="text" text="자재 특성" wordwrap="word"/>
                <Cell col="6" displaytype="text" text="규격" wordwrap="word"/>
                <Cell col="7" displaytype="text" text="단위"/>
                <Cell col="8" displaytype="text" text="1인량 (g)" wordwrap="word"/>
                <Cell col="9" displaytype="text" text="표준원가" wordwrap="word"/>
              </Band>
              <Band id="body">
                <Cell col="0" displaytype="text" expr="expr:currow+1" style="align:center;"/>
                <Cell col="1" text="bind:RECIPE_CD" displaytype="text" suppress="2" style="align:left;"/>
                <Cell col="2" text="bind:RECIPE_NAME" displaytype="text" suppress="3" style="align:left;"/>
                <Cell col="3" text="bind:ITEM_CODE" displaytype="text" style="align:left;"/>
                <Cell col="4" text="bind:ITEM_NAME" displaytype="text" style="align:left;"/>
                <Cell col="5" text="bind:FEATURE_NAME" displaytype="text" style="align:left;"/>
                <Cell col="6" text="bind:ITEM_SIZE" displaytype="text" style="align:left;"/>
                <Cell col="7" text="bind:PO_UOM" displaytype="text" style="align:left;"/>
                <Cell col="8" text="bind:NEED_QTY" displaytype="number" style="align:left;"/>
                <Cell col="9" text="bind:UNIT_COST" displaytype="number" style="align:left;"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btn_Close" onclick="fn_Close" taborder="8" text="닫기" position="absolute 915 19 966 41" class="btn_WF_Custom" image=""/>
        <Button id="btn_Search" onclick="fn_search" taborder="7" text="조회" position="absolute 775 19 826 41" class="btn_WF_Custom" image=""/>
        <CheckBox id="chk_Gubun" taborder="6" text="폐기율 적용 영양소" position="absolute 632 21 763 42" value="true" falsevalue="0" truevalue="1"/>
        <Button id="btn_ToDate" onclick="btn_Date_OnClick" taborder="16" userdata="me_ToMenuDate" position="absolute 262 20 284 41" class="btn_WF_cal" text="" image=""/>
        <Button id="btn_FromDate" onclick="btn_Date_OnClick" taborder="17" userdata="me_FromMenuDate" position="absolute 147 20 169 41" class="btn_WF_cal" text="" image=""/>
        <Button id="btn_Graph" onclick="fn_Graph" taborder="9" text="그래프보기" position="absolute 827 19 914 41" class="btn_WF_Custom" image=""/>
        <Static id="Static09" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 0 0 1000 10"/>
        <Static id="Static10" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 0 0 10 554"/>
        <Static id="Static04" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 990 0 1000 554"/>
        <Static id="Static19" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 0 627 1000 640"/>
        <Static id="Static70" text="W10" visible="false" position="absolute 0 10 1000 20" style="background:#ff000055;align:center middle;"/>
        <Static id="Static72" text="W15" visible="false" position="absolute 10 10 25 51" style="background:#ff000055;align:center middle;"/>
        <Static id="Static15" text="W10" visible="false" position="absolute 59 10 69 51" style="background:#ff000055;align:center middle;"/>
        <Static id="Static17" text="W10" visible="false" position="absolute 284 10 314 51" style="background:#ff000055;align:center middle;"/>
        <Static id="Static18" text="W10" visible="false" position="absolute 345 10 355 51" style="background:#ff000055;align:center middle;"/>
        <Static id="Static05" text="W10" visible="false" position="absolute 0 41 1000 51" style="background:#ff000055;align:center middle;" onclick="Static05_onclick"/>
        <Static id="Static06" text="W10" visible="false" position="absolute 431 10 461 51" style="background:#ff000055;align:center middle;"/>
        <Static id="Static07" text="W10" visible="false" position="absolute 492 10 502 51" style="background:#ff000055;align:center middle;"/>
        <Static id="Static11" text="W10" visible="false" position="absolute 602 10 632 51" style="background:#ff000055;align:center middle;"/>
        <Static id="Static12" text="W10" onclick="Static05_onclick" visible="false" position="absolute 0 51 1000 64" style="background:#ff000055;align:center middle;"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_List" keystring="MENU_DATE"/>
      <Dataset id="ds_Meal"/>
      <Dataset id="ds_Corner"/>
      <Dataset id="ds_Input">
        <ColumnInfo>
          <Column id="UPJANG" size="256" type="BIGDECIMAL"/>
          <Column id="HALL_CD" size="256" type="STRING"/>
          <Column id="FROM_MENU_DATE" size="256" type="STRING"/>
          <Column id="TO_MENU_DATE" size="256" type="STRING"/>
          <Column id="MEAL" size="256" type="STRING"/>
          <Column id="CORNER" size="256" type="STRING"/>
          <Column id="GUBUN" size="256" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_NutStd"/>
    </Objects>
    <Bind>
      <BindItem id="me_FromMenuDate_value" compid="me_FromMenuDate" propid="value" datasetid="ds_Input" columnid="FROM_MENU_DATE"/>
      <BindItem id="me_ToMenuDate_value" compid="me_ToMenuDate" propid="value" datasetid="ds_Input" columnid="TO_MENU_DATE"/>
      <BindItem id="chk_Gubun_value" compid="chk_Gubun" propid="value" datasetid="ds_Input" columnid="GUBUN"/>
    </Bind>
    <Script type="xscript4.0"><![CDATA[include "U_lib::lib_conversionCom.xjs";
/*
 ******************************************************************************************
 * 시스템구분   : 메뉴관리 > 식단관리 > 식단등록
 * 프로그램명   : FSM00170V.XML
 * 기      능   : 영양분석
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-07
 * 비      고   : 
 *		- ds_List				: [Main DS] 영양분석 리스트 데이터셋
 *      - ds_Meal				: [DS] 검색 조건 끼니 콤보 데이터셋
 *      - ds_Corner				: [DS] 검색 조건 코너 콤보 데이터셋
 *      - ds_Input				: [DS] 검색 조건 데이터셋
 *      - ds_NutStd				: [DS] 기준 영양소 데이터셋
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
//=========================================================================================
// [ PART 1 ]
// Form에서 Include 할 내용을 정의
//
//=========================================================================================
//@@컨버터에서 주석처리 #include "LIB::sc_comon.js";			// 시스템공통 함수
//@@컨버터에서 주석처리 #include "LIB::lib_comm_0001.js";
//@@컨버터에서 주석처리 #include "LIB::tit_comm_0001.js";		// X-Framework Lib
//=========================================================================================
// [ PART 2 ]
// Form에서 사용될 전역변수를 선언
//
//=========================================================================================
var f_Upjang, f_HallCd, f_FromMenuDate, f_ToMenuDate;
//=========================================================================================
// [ PART 3 ]
// Form Loading 시 작업 정의
//
//=========================================================================================
function form_onload(obj:Form, e:LoadEventInfo)
{
	gfn_formOnLoad(obj, false);

	// X-Framework : Action 정보 생성 
	fsp_init(this);
	
	// 부모창에서 넘겨주는 Args
	f_Upjang       = fa_UPJANG;			// 업장코드
	f_HallCd       = fa_HALL_CD;		// 식당코드
	f_FromMenuDate = fa_FROM_MENU_DATE;	// 제공일자 시작일
	f_ToMenuDate   = fa_TO_MENU_DATE;	// 제공일자 종료일
	
	// Test Data
	// f_Upjang       = 100751;
	// f_HallCd       = "00101";
	// f_FromMenuDate = "20080301";
	// f_ToMenuDate   = "20080407";
	
	// Default Data Check
	if( gfn_length(gfn_trim(f_Upjang))== 0 || gfn_trim(f_Upjang)== null ) {
		g_Message("EE", "업장코드가 존재하지 않습니다.\n창을 닫습니다.");
		this.close();
	}
	if( gfn_length(gfn_trim(f_HallCd))== 0 || gfn_trim(f_HallCd)== null ) {
		g_Message("EE", "식당코드가 존재하지 않습니다.\n창을 닫습니다.");
		this.close();
	}
	if( gfn_length(gfn_trim(f_FromMenuDate))== 0 || gfn_trim(f_FromMenuDate)== null ) {
		g_Message("EE", "제공일자 시작일이 존재하지 않습니다.\n창을 닫습니다.");
		this.close();
	}
	if( gfn_length(gfn_trim(f_ToMenuDate))== 0 || gfn_trim(f_ToMenuDate)== null ) {
		g_Message("EE", "제공일자 종료일이 존재하지 않습니다.\n창을 닫습니다.");
		this.close();
	}
	
	// Default Data Setting
	ds_Input.clearData();
	ds_Input.addRow();
	ds_Input.setColumn(0, "UPJANG",         f_Upjang      );
	ds_Input.setColumn(0, "HALL_CD",        f_HallCd      );
	ds_Input.setColumn(0, "FROM_MENU_DATE", f_FromMenuDate);
	ds_Input.setColumn(0, "TO_MENU_DATE",   f_ToMenuDate  );
	ds_Input.setColumn(0, "GUBUN",          1          ); // "1" : 폐기율 적용, "0" : 폐기율 미적용

	// 끼니
	fn_SearchMeal();
	
	// 코너
	fn_SearchCorner();
	

	
	// Focus Setting
	me_FromMenuDate.setFocus();
}
//=========================================================================================
// [ PART 4 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,도움말,form닫기)
//
//=========================================================================================
/*
 ******************************************************************************************
 * 함  수  명   : fn_Search()
 * 기      능   : [조회버튼] 검색조건에 해당하는 정보를 조회
 ******************************************************************************************
 */
function fn_search(obj:Button, e:ClickEventInfo)
{
	// 검색조건 체크
	// 제공일자 범위 체크
	var v_FromDate = ds_Input.getColumn(0, "FROM_MENU_DATE");
	if( gfn_length(gfn_trim(v_FromDate))== 0 || gfn_trim(v_FromDate)== null ) {
		ds_Input.setColumn(0, "FROM_MENU_DATE", f_FromMenuDate);
	} else {
		// if( parseInt(v_FromDate) < parseInt(f_FromMenuDate) ) {
			// g_Message("EE", "제공일자 시작일은 ["+ f_FromMenuDate.SubStr(0, 4) + "-" + f_FromMenuDate.SubStr(4, 2) + "-" + f_FromMenuDate.SubStr(6, 2) +"]보다\n작을 수 없습니다.");
			// me_FromMenuDate.SetFocus();
			// return;
		// }
	}
	var v_ToDate = ds_Input.getColumn(0, "TO_MENU_DATE");
	if( gfn_length(gfn_trim(ds_Input.getColumn(0, "TO_MENU_DATE")))== 0 || gfn_trim(ds_Input.getColumn(0, "TO_MENU_DATE"))== null ) {
		ds_Input.setColumn(0, "TO_MENU_DATE", f_ToMenuDate);
	} else {
		// if( parseInt(v_ToDate) > parseInt(f_ToMenuDate) ) {
			// g_Message("EE", "제공일자 종료일은 ["+ f_ToMenuDate.SubStr(0, 4) + "-" + f_ToMenuDate.SubStr(4, 2) + "-" + f_ToMenuDate.SubStr(6, 2) +"]을\n넘길 수 없습니다.");
			// me_ToMenuDate.SetFocus();
			// return;
		// }
	}
	
	ds_Input.setColumn(0, "MEAL",   gfn_trim(cbo_Meal.value));
	ds_Input.setColumn(0, "CORNER", gfn_trim(cbo_Corner.value));
	
	// Result DataSet Clear
	ds_List.clearData();
	
    
    	 // 영양소 기준
	fsp_clear(this);
	ds_NutStd.clearData();
	fsp_addSearch(this,"fs/fsm:FSM00170V_S003");
	http.Sync = true;
	fsp_callService(this,"","","ds_Input=ds_Input","ds_NutStd=ds_NutStd","","fn_callBackNutStd","",true);
	http.Sync = false;
	
	// DataSet & callBack함수 정의 
	var actionName, cmdName, inData, outData, otherArg, callBackFnc;
	inData			= "ds_Input=ds_Input";
	outData			= "ds_List=ds_List";
	otherArg		= "";
	callBackFnc		= "fn_callBackSearch";
	
	
	trace(ds_Input.saveXML());
	
	fsp_clear(this);
	if( ds_Input.getColumn(0, "GUBUN") == 1 ) {
		fsp_addSearch(this, "fs/fsm:FSM00170V_S005");
	} else {
		fsp_addSearch(this, "fs/fsm:FSM00170V_S004");
	}
    fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);		// 서비스 호출
    
    

}
/*
 ******************************************************************************************
 * 함  수  명   : fn_Insert()
 * 기      능   : [등록버튼] 등록 버튼 클릭 시 처리되는 작업
 ******************************************************************************************
 */
function fn_insert()
{
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_Save()
 * 기      능   : [저장버튼] 저장 버튼 클릭 시 처리되는 작업
 ******************************************************************************************
 */
function fn_save()
{
}
/* 
 ******************************************************************************************
 * 함  수  명   : fn_Delete()
 * 기      능   : [삭제버튼] 삭제 시 처리되는 작업
 ******************************************************************************************
 */
function fn_delete(nRow)
{
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_Print()
 * 기      능   : [출력버튼] 출력 시 처리되는 작업
 ******************************************************************************************
 */
function fn_print()
{
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_Close()
 * 기      능   : [닫기버튼] 화면을 닫을때 처리되는 작업
 ******************************************************************************************
 */
function fn_Close(obj:Button, e:ClickEventInfo)
{
	this.close();
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_Help()
 * 기      능   : [도움말버튼] 도움말
 ******************************************************************************************
 */
function fn_help()
{
}
//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
//
//=========================================================================================
/*
 ******************************************************************************************
 * 함  수  명   : fn_callBackMeal(errCode, errMsg)
 * 입      력   : errCode 	= 에러코드
				  errMsg	= 에러메세지
 * 반      환   : 없음
 * 기      능   : 끼니 콤보 리스트 검색 후 콜백 함수
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-03
 ******************************************************************************************
 */
function fn_callBackMeal(errCode, errMsg)
{
	if( errCode != 0 ) {
		return;
	} else {
		cbo_Meal.index = 0;
		//fn_SearchCorner();
	}
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_callBackCorner(errCode, errMsg)
 * 입      력   : errCode 	= 에러코드
				  errMsg	= 에러메세지
 * 반      환   : 없음
 * 기      능   : 코너 콤보 리스트 검색 후 콜백 함수
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-03
 ******************************************************************************************
 */
function fn_callBackCorner(errCode, errMsg)
{
	if( errCode != 0 ) {
		return;
	} else {
	
	   cbo_Corner.index = 0;
	
	}
}

function fn_callBackNutStd(errCode, errMsg)
{
	if( errCode != 0 ) {
		return;
	} else {
	
	 trace(ds_NutStd.saveXML());
	
	}
}

/*
 ******************************************************************************************
 * 함  수  명   : fn_callBackSearch()
 * 입      력   : errCode 	= 에러코드
				  errMsg	= 에러메세지
 * 반      환   : 없음
 * 기      능   : 리스트 조회 후 콜백 함수
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-07
 ******************************************************************************************
 */
function fn_callBackSearch(errCode, errMsg)
{	
	if( errCode != 0 ) {
		return;
	} else {

	}
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_SearchMeal()
 * 입      력   : 없음
 * 반      환   : 없음
 * 기      능   : 제공일, 업장코드, 식당코드를 이용한 끼니 콤보리스 조회
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-04-07
 ******************************************************************************************
 */
function fn_SearchMeal()
{
	// 끼니
	fsp_clear(this);
	ds_Meal.clearData();
	fsp_addSearch(this,"fs/fsm:FSM00170V_S001");
	fsp_callService(this,"","","ds_Input=ds_Input","ds_Meal=ds_Meal","","fn_callBackMeal","",true);
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_SearchCorner()
 * 입      력   : 없음
 * 반      환   : 없음
 * 기      능   : 끼니코드를 이용한 코너 콤보리스트 조회
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-10
 ******************************************************************************************
 */
function fn_SearchCorner()
{
	// 코너
	fsp_clear(this);
	ds_Corner.clearData();
	fsp_addSearch(this,"fs/fsm:FSM00170V_S002");
	fsp_callService(this,"","","ds_Input=ds_Input","ds_Corner=ds_Corner","","fn_callBackCorner","",true);
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_StdDif(strColumnId, strStdColumnId)
 * 입      력   : strColumnId : 영양소 컬럼 아이디
                  strStdColumnId : 영양소 기준 컬럼 아이디
 * 반      환   : 기준대비 차이량
 * 기      능   : 기준대비 차이량 계산
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-07
 ******************************************************************************************
 */
function fn_StdDif(strColumnId, strStdColumnId)
{
	if( ds_List.getRowCount() > 0 && ds_NutStd.getRowCount() > 0 ) {
		if( ds_NutStd.getColumn(0, strStdColumnId) > 0 ) {
			var iDif = numFormat(ds_List.getAvg(strColumnId) - ds_NutStd.getColumn(0, strStdColumnId), 2);
			if( iDif > 0 )
				return "+" + gfn_toString(iDif);
			else
				return gfn_toString(iDif);
		} else {
			return "-";
		}
	} else {
		return "-";
	}
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_StdPer(strColumnId, strStdColumnId)
 * 입      력   : strColumnId : 영양소 컬럼 아이디
                  strStdColumnId : 영양소 기준 컬럼 아이디
 * 반      환   : 기준대비 섭취비율
 * 기      능   : 기준대비 섭취비율 계산
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-07
 ******************************************************************************************
 */
function fn_StdPer(strColumnId, strStdColumnId)
{
	if( ds_List.getRowCount() > 0 && ds_NutStd.getRowCount() > 0 ) {
		var iPer = numFormat((ds_List.getAvg(strColumnId) / ds_NutStd.getColumn(0, strStdColumnId)) * 100, 1);
		return gfn_toString(iPer)+ "%";
	} else {
		return "-";
	}
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_GetPerCPF(strColumnId)
 * 입      력   : strColumnId : 영양소 컬럼 아이디
 * 반      환   : CPF 비율
 * 기      능   : CPF 비율 계산
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-07
 ******************************************************************************************
 */
function fn_GetPerCPF(strColumnId)
{
	// CARBO : 당질
	// PROT : 단백질
	// FAT : 지질
	if( ds_List.getRowCount() > 0 ) {
		var v_temp = 0;
		switch(strColumnId) {
			case "CARBO" :
				v_temp = ds_List.getAvg("CARBO") * 4;
				break;
			case "PROT" :
				v_temp = ds_List.getAvg("PROT") * 4;
				break;
			case "FAT" :
				v_temp = ds_List.getAvg("FAT") * 9;
				break;
			default :
				return "-";
		}
		if( v_temp == 0 )
			return "-";
		else
			return gfn_toString(numFormat((v_temp / ((ds_List.getAvg("CARBO") * 4) + (ds_List.getAvg("PROT") * 4) + (ds_List.getAvg("FAT") * 9))) * 100, 1))+ "%";
	} else {
		return "-";
	}
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_GetCPF()
 * 입      력   : 없음
 * 반      환   : 없음
 * 기      능   : CPF 기준 텍스트 가져오기
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-07
 ******************************************************************************************
 */
function fn_GetCPF()
{
	if( ds_List.getRowCount() > 0 && ds_NutStd.getRowCount() > 0 ) {
		return "CPF 기준 = " + ds_NutStd.getColumn(0, "CPF_C") + " : " + ds_NutStd.getColumn(0, "CPF_P") + " : " + ds_NutStd.getColumn(0, "CPF_F");
	} else {
		return "CPF 기준 = 데이터 없음";
	}
}
/*------------------------------------------------------------
	1. Function    : fn_SetNutStd(strColumnID)
	2. Description : 영양소 기준량 셋팅
	3. Arguments   : 
	4. History     : 2008. 04. 07 - 최초작성
*------------------------------------------------------------*/
function fn_SetNutStd(strColumnID)
{
	if( ds_NutStd.getRowCount() == 1 ) {
		return ds_NutStd.getColumn(0, strColumnID);
	} else {
		return 0;
	}
}
//=========================================================================================
// [ PART 6 ]
// component Event 정의 ( User Define function )
// --> component Event의 기요,기능,동작 등 상세내용은 MiPlatform 메뉴얼을 참조하시기 바랍니다.
//=========================================================================================
/******************************************************************************************
 * 함  수  명   : btn_Date_OnClick(obj,nX,nY)
 * 기      능   : 달력 팝업 호출
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-08
 ******************************************************************************************
 */
function btn_Date_OnClick(obj:Button, e:ClickEventInfo)
{
	var objme = eval(obj.userdata);
	
	var retDate = gfn_dialog("", "U_SCC::SCC_CALENDAR.xfdl","fa_Date="+wrapQuote(objme.value),-1,-1,"Title=false Status=false");

	objme.value  = retDate;
}
/******************************************************************************************
 * 함  수  명   : fn_Graph(obj)
 * 기      능   : 그래프 팝업
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-08
 ******************************************************************************************
 */
function fn_Graph(obj:Button, e:ClickEventInfo)
{
	// 영양소 기준정보 DataSet Check
	if( ds_NutStd.getRowCount() == 0 ) {
		g_Message("EE", "영양소 기준 정보가 존재하지 않습니다.");
		return;
	}
	// 영양분석 리스트 DataSet Check
	if( ds_List.getRowCount() == 0 ) {
		g_Message("EE", "데이터가 존재하지 않습니다.");
		return;
	}
	
	// 그래프 팝업 호출
	gfn_dialog("", "U_FSM::FSM00180V.xfdl","",-1,-1,"Title=true Status=false");
}
/******************************************************************************************
 * 함  수  명   : cbo_Meal_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
 * 기      능   : 끼니 선택시 코너 콤보리스트 조회 -> 현재 미사용
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-10
 ******************************************************************************************
 */
function cbo_Meal_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
{
	ds_Input.setColumn(0, "MEAL", strCode);
	fn_SearchCorner();
}
/*------------------------------------------------------------
	1. Function    : grd_List_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
	2. Description : 엑셀 출력
	3. Arguments   : 
	4. History     : 2008. 04. 07 - 최초작성
*------------------------------------------------------------*/
function grd_List_OnHeadClick(obj:Grid, e:GridClickEventInfo)
{
	if( e.cell == 0 ) {	// Excel Export
		gfn_exportExcel(obj, "Sheet1");
	}
}
/*------------------------------------------------------------
	1. Function    : fn_Common_OnKeyDown(obj,nChar,bShift,bCtrl,bAlt,LLParam,HLParam)
	2. Description : Common Enter Key Event
	3. Arguments   : 
	4. History     : 2008. 04. 07 - 최초작성
*------------------------------------------------------------*/
function fn_Common_OnKeyDown(obj:MaskEdit, e:KeyEventInfo)
{
	switch(obj.name) {
		case "me_FromMenuDate" :
			if( e.keycode == 13 ) {
				me_ToMenuDate.setFocus();
			}
			break;
		case "me_ToMenuDate" :
			if( e.keycode == 13 ) {
				cbo_Meal.setFocus();
				cbo_Meal.dropdown();
			}
			break;
		case "cbo_Meal" :
			if( e.keycode == 13 ) {
				ds_Input.setColumn(0, "MEAL", cbo_Meal.value);
				cbo_Corner.setFocus();
				cbo_Corner.dropdown();
			}
			break;
		case "cbo_Corner" :
			if( e.keycode == 13 ) {
				ds_Input.setColumn(0, "CORNER", cbo_Corner.value);
				chk_Gubun.setFocus();
			}
			break;
		case "chk_Gubun" :
			if( e.keycode == 13 ) {
			}
			break;
		default :
			break;
	}
}
/*------------------------------------------------------------
	1. Function    : me_MenuDate_OnChanged(obj,strText)
	2. Description : 제공일자 변경시 끼니 재검색 -> 현재 미사용
	3. Arguments   : 
	4. History     : 2008. 04. 07 - 최초작성
*------------------------------------------------------------*/
function me_MenuDate_OnChanged(obj,strText)
{
	if( gfn_length(gfn_trim(me_FromMenuDate.value))== 8 && gfn_length(gfn_trim(me_ToMenuDate.value))== 8 ) {
		// fn_SearchMeal();
		// 최초 제공일이 변경될때 마다 업장코드, 식당코드, 제공일자(FROM~TO)를 이용하여
		// 끼니,코너를 재검색하였으나, 최초 팝업에 넘어오는 제공일자 내에 포함되는 끼니,코너코드를 검색해 오기 때문에
		// 또다시 검색할 필요가 없다. -- 2008. 04. 04 (손창덕)
	}
}
 
]]></Script>
  </Form>
</FDL>
