<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="../../../default_typedef.xml"/>
  <Form id="FSR00041E" onload="form_onload" titletext="레시피상세내역" position="absolute 0 0 1237 672" scrollbars="none">
    <Layouts>
      <Layout>
        <MPFileDialog Filter="Image Files(*.jpg,*.gif,*.bmp)|*.jpg;*.gif;*.bmp|" id="FileDialog" taborder="69" position="absolute 1248 40 1272 64"/>
        <MPFileDialog id="FileDialogSave" taborder="70" Type="Save" position="absolute 1272 40 1296 64"/>
        <MPFile id="file" taborder="71" position="absolute 1272 64 1296 88"/>
        <Static id="Static43" class="sta_WFDA_Labelbg" position="absolute 269 78 1227 131" anchor="left top right"/>
        <Static id="Static18" class="sta_WFDA_Labelbg" position="absolute 273 78 1227 105" anchor="left top right"/>
        <Static id="Static38" class="sta_WFDA_Labelbg" position="absolute 270 0 1227 79" anchor="left top right"/>
        <Static id="Static14" class="sta_WFDA_Labelbg" position="absolute 270 26 1227 53" anchor="left top right"/>
        <ImageViewer id="Image0" taborder="72" image="URL('theme://convertImages/img_NoImageBig.png')" stretch="fit" onclick="Image0_OnClick" position="absolute 0 0 125 106" onmouseleave="Image0_OnMouseOut" onloaderror="Image0_OnLoadError"/>
        <Div id="div_Material" anchor="left top right" taborder="26" url="U_FSR::FSR00042E.xfdl" text="Div0" position="absolute 0 372 1228 672" asyncmode="false" scrollbars="none"/>
        <Button id="btn_RecipeElement" taborder="27" text="레시피영양성분" onclick="btn_RecipeElement_OnClick" class="btn_WF_Custom" position="absolute 0 351 111 372"/>
        <Button id="btn_ratio" taborder="28" text="레시피비율일괄변경" onclick="btn_ratio_OnClick" class="btn_WF_Custom" position="absolute 113 351 248 372"/>
        <Radio id="rdo_Detail" taborder="24" columncount="3" rowcount="0" index="0" innerdataset="ds_SubRadio" codecolumn="CD" datacolumn="NM" value="0" onitemchanged="rdo_Detail_OnChanged" position="absolute 102 141 312 162"/>
        <Edit id="ed_ratio" taborder="13" inputtype="number" maxlength="3" visible="false" position="absolute 250 351 321 372" style="align:right;"/>
        <Static id="Static03" text="기&#13;&#10;본&#13;&#10;정&#13;&#10;보" class="sta_WFDA_Label03" position="absolute 130 0 176 79" style="padding:0 0 0 0;align:center middle;"/>
        <Static id="Static04" text="레  시  피  명" class="sta_WFDA_Label01" position="absolute 175 0 271 27"/>
        <Static id="Static06" text="레 시 피 분 류" class="sta_WFDA_Label01" position="absolute 175 26 271 53"/>
        <Static id="Static6" text="주   재  료  군" class="sta_WFDA_Label01" position="absolute 175 52 271 79"/>
        <Edit id="ed_RecipeCD" taborder="14" readonly="true" class="edt_WF_Essential" position="absolute 601 3 671 24" visible="false"/>
        <Edit id="ed_RecipeNM" taborder="0" onkeydown="common_OnKeyDown" enable="false" position="absolute 273 3 521 24" imemode="hangul"/>
        <Button id="btn_RecipePop" taborder="80" text="중복체크" onclick="btn_RecipePop_OnClick" class="btn_WF_Custom" position="absolute 523 3 599 24"/>
        <Static id="Static11" text="레시피유형" class="sta_WFDA_Label01" position="absolute 433 26 521 53"/>
        <Static id="Static17" text="대표영양성분" class="sta_WFDA_Label01" position="absolute 433 52 521 79"/>
        <Static id="Static35" text="조리법유형" class="sta_WFDA_Label01" position="absolute 682 26 815 53"/>
        <Combo id="cbo_RecipeClass" taborder="1" innerdataset="ds_RecipeClass" codecolumn="CODE" datacolumn="CODE_NAME" onitemchanged="common_OnChanged" class="cmb_WF_Essential" position="absolute 273 29 431 50" displayrowcount="20"/>
        <Combo id="cbo_RecipeType" taborder="2" innerdataset="ds_RecipeType" codecolumn="CODE" datacolumn="CODE_NAME" onitemchanged="common_OnChanged" class="cmb_WF_Essential" position="absolute 523 29 680 50" displayrowcount="20"/>
        <Combo id="cbo_CuisineType" taborder="3" innerdataset="ds_CookClass" codecolumn="CODE" datacolumn="CODE_NAME" onitemchanged="common_OnChanged" class="cmb_WF_Essential" position="absolute 817 29 951 50" displayrowcount="20"/>
        <Combo id="Combo5" taborder="4" innerdataset="ds_Material" codecolumn="CODE" datacolumn="CODE_NAME" onitemchanged="common_OnChanged" position="absolute 273 55 431 76" displayrowcount="20"/>
        <Combo id="Combo1" taborder="5" innerdataset="ds_Element" codecolumn="CODE" datacolumn="CODE_NAME" onitemchanged="common_OnChanged" position="absolute 523 55 680 76" displayrowcount="20"/>
        <Static id="Static36" text="개&#10;발&#10;정&#10;보" class="sta_WFDA_Label03" position="absolute 953 0 983 79"/>
        <Static id="Static37" text="사 업 장" class="sta_WFDA_Label01" position="absolute 982 0 1062 27"/>
        <Static id="Static39" text="개 발 자" class="sta_WFDA_Label01" position="absolute 982 26 1062 53"/>
        <Static id="Static40" text="저 장 일" class="sta_WFDA_Label01" position="absolute 982 52 1062 79"/>
        <Edit id="Edit0" taborder="15" position="absolute 1065 3 1224 24" readonly="true" tabstop="false"/>
        <MaskEdit id="MaskEdit00" taborder="17" readonly="true" type="string" mask="@@@@-@@-@@" position="absolute 1065 55 1140 76" tabstop="false"/>
        <Static id="Static41" text="품질 정보" wordwrap="word" class="sta_WFDA_Label03" position="absolute 130 78 176 131"/>
        <Static id="Static42" text="모    양" class="sta_WFDA_Label01" position="absolute 175 78 271 105"/>
        <Static id="Static44" text="질    감" class="sta_WFDA_Label01" position="absolute 175 104 271 131"/>
        <Static id="Static8" text="맛" class="sta_WFDA_Label01" position="absolute 433 78 521 105"/>
        <Static id="Static45" text="색" class="sta_WFDA_Label01" position="absolute 433 104 521 131"/>
        <Combo id="Combo9" taborder="6" innerdataset="ds_FS0008" codecolumn="CODE" datacolumn="CODE_NAME" position="absolute 273 81 431 102" displayrowcount="20"/>
        <Combo id="Combo3" taborder="8" innerdataset="ds_FS0009" codecolumn="CODE" datacolumn="CODE_NAME" position="absolute 523 81 680 102" displayrowcount="20"/>
        <Combo id="Combo4" taborder="7" innerdataset="ds_FS0010" codecolumn="CODE" datacolumn="CODE_NAME" position="absolute 273 107 431 128" displayrowcount="20"/>
        <Combo id="Combo7" taborder="9" innerdataset="ds_FS0007" codecolumn="CODE" datacolumn="CODE_NAME" position="absolute 523 107 680 128" displayrowcount="20"/>
        <Static id="Static46" text="제공 정보" class="sta_WFDA_Label03" position="absolute 682 78 728 131"/>
        <Static id="Static48" text="제 공 온 도" class="sta_WFDA_Label01" position="absolute 727 78 815 105"/>
        <Static id="Static49" text="중심온도체크" class="sta_WFDA_Label01" position="absolute 727 104 815 131"/>
        <Combo id="Combo10" taborder="10" innerdataset="ds_FS0011" codecolumn="CODE" datacolumn="CODE_NAME" position="absolute 817 81 951 102" displayrowcount="20"/>
        <Combo id="cbo_RecipeNM" taborder="11" innerdataset="ds_yn" codecolumn="CD" datacolumn="NM" position="absolute 817 107 951 128" displayrowcount="20"/>
        <Combo id="Combo12" taborder="12" innerdataset="ds_FS0013" codecolumn="CODE" datacolumn="CODE_NAME" position="absolute 1124 107 1224 128" displayrowcount="20"/>
        <CheckBox id="Checkbox2" taborder="21" text="겨울" value="N" truevalue="Y" falsevalue="N" position="absolute 1174 81 1217 102"/>
        <CheckBox id="Checkbox1" taborder="20" text="가을" value="N" truevalue="Y" falsevalue="N" position="absolute 1121 81 1165 102"/>
        <CheckBox id="Checkbox0" taborder="19" text="여름" value="N" truevalue="Y" falsevalue="N" position="absolute 1068 81 1112 102"/>
        <CheckBox id="chk_Dtlyn" taborder="18" text="봄" value="N" truevalue="Y" falsevalue="N" position="absolute 1020 81 1057 102"/>
        <Static id="Static51" text="PHF" class="sta_WFDA_Label01" position="absolute 952 104 1015 131"/>
        <Static id="Static52" text="찬  기" class="sta_WFDA_Label01" position="absolute 1065 104 1121 131"/>
        <Static id="Static2" visible="false" position="absolute 1081 137 1229 155" anchor="top right"/>
        <Static id="Static3" text="원가" class="sta_WFDA_Label01" visible="false" position="absolute 1081 136 1124 157" anchor="top right"/>
        <MaskEdit id="ed_wonga" taborder="23" value="MaskEdit0" enable="false" visible="false" position="absolute 1125 136 1227 157" anchor="top right"/>
        <Button id="btn_ImgInsert" taborder="101" text="첨부" onclick="btn_ImgInsert_OnClick" class="btn_WF_Append" position="absolute 64 110 116 131"/>
        <Button id="btn_ImgDelete" taborder="102" text="삭제" onclick="btn_ImgDelete_OnClick" class="btn_WF_Delete" position="absolute 10 110 62 131"/>
        <Button id="Button0" taborder="103" text="추천계절" onclick="Button0_OnClick" class="btn_WF_Custom" position="absolute 952 82 1015 103"/>
        <Button id="btn_add" taborder="29" text="자재추가" onclick="btn_add_OnClick" class="btn_WF_Custom" position="absolute 1152 351 1227 372" anchor="top right"/>
        <PopupDiv id="pdiv_imgZoom" scrollbars="none" visible="false" position="absolute 557 407 936 672" taborder="30">
          <Layouts>
            <Layout>
              <ImageViewer id="Image0" taborder="0" stretch="fit" onclick="pdiv_imgZoom_Image0_OnClick" position="absolute 3 3 372 258"/>
            </Layout>
          </Layouts>
        </PopupDiv>
        <Static id="st_Ratio" text="(%)" visible="false" position="absolute 323 352 351 373"/>
        <Static id="sta_WF_Title01" text="재료구성" class="sta_WF_Title01" position="absolute 0 144 90 162"/>
        <Static id="Static16" text="글자기준간격 h05" class="Guide01_AreaRed" visible="false" position="absolute 0 157 450 162"/>
        <Static id="Static00" text="글자기준간격 h05" class="Guide01_AreaRed" visible="false" position="absolute 757 157 1207 162"/>
        <Static id="Static15" text="h13" class="Guide01_AreaRed" visible="false" position="absolute 0 131 450 144" anchor="left top"/>
        <Static id="Static07" text="h13" class="Guide01_AreaRed" visible="false" position="absolute 0 373 450 386" anchor="left top"/>
        <Static id="Static10" text="글자기준간격 h05" class="Guide01_AreaRed" visible="false" position="absolute 0 346 1208 351"/>
        <Static id="Static09" text="w10" class="Guide01_AreaRed" visible="false" position="absolute 1227 15 1237 596"/>
        <Static id="Static19" text="*원가는 표준단가(경인센터 평균단가)입니다." position="absolute 387 141 641 163" style="color:blue;"/>
        <Edit id="Edit01" taborder="16" position="absolute 1065 29 1224 50" readonly="true" tabstop="false"/>
        <Edit id="st_Phf" taborder="22" readonly="true" position="absolute 1017 107 1063 128"/>
        <Grid id="grd_jajea" taborder="25" binddataset="ds_ItemList" wheelscrollrow="1" autoenter="select" useinputpanel="false" cellsizingtype="both" onkeydown="grd_jajea_OnKeyDown" onmousemove="grd_jajea_OnMouseOver" oncellclick="grd_jajea_OnCellClick" onheadclick="grd_jajea_OnHeadClick" position="absolute 0 162 1227 346" anchor="left top right" autofittype="col">
          <Formats>
            <Format id="Default">
              <Columns>
                <Column size="30"/>
                <Column size="0"/>
                <Column size="24"/>
                <Column size="100"/>
                <Column size="26"/>
                <Column size="416"/>
                <Column size="163"/>
                <Column size="60"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="135"/>
                <Column size="26"/>
                <Column size="90"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24" band="head"/>
                <Row size="24"/>
                <Row size="24" band="summ"/>
              </Rows>
              <Band id="head">
                <Cell rowspan="2" displaytype="text" class="head_Excel"/>
                <Cell col="1" rowspan="2" displaytype="text" expr="expr:'금\n지'" wordwrap="word"/>
                <Cell col="2" rowspan="2" colspan="3" displaytype="text" text="자재코드"/>
                <Cell col="5" rowspan="2" displaytype="text" text="자재명"/>
                <Cell col="6" rowspan="2" displaytype="text" text="규격"/>
                <Cell col="7" rowspan="2" displaytype="text" expr="expr:'구매\n단위'"/>
                <Cell col="8" rowspan="2" displaytype="text" expr="expr:'1인소요량\n(g)'"/>
                <Cell col="9" rowspan="2" displaytype="text" expr="expr:'1인원가\n(원)'"/>
                <Cell col="10" rowspan="2" colspan="2" displaytype="text" text="커팅규격"/>
                <Cell col="12" rowspan="2" displaytype="text" expr="expr:'에너지\n(kcal)'"/>
              </Band>
              <Band id="body">
                <Cell displaytype="text" style="align:left;" expr="expr:currow+1"/>
                <Cell col="1" displaytype="text" style="align:left;" text="bind:RESTRICT_YN"/>
                <Cell col="2" displaytype="image" style="align: ;" text="URL('theme://images/new/grd_WF_ExpandImageX.png')"/>
                <Cell col="3" displaytype="text" style="align:left;background:EXPR(decode(RESTRICT_YN,'Y','#ffaa9cff',''));background2:EXPR(decode(RESTRICT_YN,'Y','#ffaa9cff',''));" text="bind:ITEM_CODE"/>
                <Cell col="4" displaytype="image" style="align:center middle;" text="expr:getRowType(currow)==2?&quot;URL('theme://Images/new/grd_WF_ExpandImage.png')&quot;:&quot;&quot;"/>
                <Cell col="5" displaytype="text" style="align:left;background:EXPR(decode(RESTRICT_YN,'Y','#ffaa9cff',''));background2:EXPR(decode(RESTRICT_YN,'Y','#ffaa9cff',''));" text="bind:ITEM_NAME"/>
                <Cell col="6" displaytype="text" style="align:left;" text="bind:ITEM_SIZE"/>
                <Cell col="7" displaytype="text" style="align:left;" text="bind:PO_UOM"/>
                <Cell col="8" displaytype="number" edittype="expr:setEditExpr(iif(gfn_length(ITEM_CODE)&gt;0,'number','none'))" editfilter="expr:setfilterExpr(iif(gfn_length(ITEM_CODE)&gt;0,'number','none'))" style="align:right;" text="bind:NEED_QTY" mask="expr:iif(gfn_length(ITEM_CODE)&gt;0,'#,##0.00')"/>
                <Cell col="9" displaytype="number" style="align:right;" text="bind:PERSON_PRICE"/>
                <Cell col="10" displaytype="combo" edittype="combo" style="align:left;" text="bind:CUT_SPEC" combodataset="ds_CutList" combocodecol="DETAIL_CODE" combodatacol="DETAIL_NAME"/>
                <Cell col="11" displaytype="image" edittype="none" style="align:center;" text="URL('theme://Images\new\grd_WF_ExpandImage.png')"/>
                <Cell col="12" displaytype="number" style="align:right;" text="bind:CAL_CALC"/>
              </Band>
              <Band id="summary">
                <Cell colspan="8" displaytype="text" style="align:center;" text="합계"/>
                <Cell col="8" displaytype="number" style="align:right;" expr="expr:getSum('NEED_QTY')"/>
                <Cell col="9" displaytype="number" style="align:right;" expr="expr:getSum('PERSON_PRICE')"/>
                <Cell col="10" displaytype="text" style="align:left;"/>
                <Cell col="11" displaytype="text" style="align:left;"/>
                <Cell col="12" displaytype="number" style="align:right;" expr="expr:getSum('CAL_CALC')"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_SubRadio">
        <ColumnInfo>
          <Column id="CD" size="256" type="STRING"/>
          <Column id="NM" size="256" type="STRING"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD">0</Col>
            <Col id="NM">조리법</Col>
          </Row>
          <Row>
            <Col id="CD">1</Col>
            <Col id="NM">PHF관리</Col>
          </Row>
          <Row>
            <Col id="CD">2</Col>
            <Col id="NM">조리공정</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_tempRecipe"/>
      <Dataset id="ds_tempItem"/>
      <Dataset id="ds_tempCook"/>
      <Dataset id="ds_phf" cancolumnchange="ds_CanColumnChange" oncolumnchanged="ds_phf_OnColumnChanged"/>
      <Dataset id="ds_Valid"/>
      <Dataset id="ds_Recipe" cancolumnchange="ds_CanColumnChange" onload="ds_Recipe_OnLoadCompleted">
        <ColumnInfo>
          <Column id="ATTR01" size="200" type="STRING"/>
          <Column id="ATTR02" size="200" type="STRING"/>
          <Column id="ATTR03" size="200" type="STRING"/>
          <Column id="ATTR04" size="200" type="STRING"/>
          <Column id="ATTR05" size="200" type="STRING"/>
          <Column id="ATTR06" size="22" type="BIGDECIMAL"/>
          <Column id="ATTR07" size="22" type="BIGDECIMAL"/>
          <Column id="ATTR08" size="22" type="BIGDECIMAL"/>
          <Column id="ATTR09" size="22" type="BIGDECIMAL"/>
          <Column id="ATTR10" size="22" type="BIGDECIMAL"/>
          <Column id="AUTUMN_YN" size="1" type="STRING"/>
          <Column id="CDATE" size="7" type="DATE"/>
          <Column id="COOK_OPRN" size="100" type="STRING"/>
          <Column id="COOK_TOOL1" size="20" type="STRING"/>
          <Column id="COOK_TOOL2" size="20" type="STRING"/>
          <Column id="CORE_TEMPER_YN" size="1" type="STRING"/>
          <Column id="COST_RATE" size="22" type="BIGDECIMAL"/>
          <Column id="CUISINE_TYPE" size="20" type="STRING"/>
          <Column id="CUSER" size="9" type="STRING"/>
          <Column id="DISPLAY_METHOD" size="20" type="STRING"/>
          <Column id="GOODS_FEATURE" size="200" type="STRING"/>
          <Column id="MAIN_ITEM_CODE1" size="12" type="STRING"/>
          <Column id="MAIN_ITEM_CODE2" size="12" type="STRING"/>
          <Column id="NM_KOR" size="20" type="STRING"/>
          <Column id="PHF_MGMT1" size="1" type="STRING"/>
          <Column id="PHF_MGMT2" size="1" type="STRING"/>
          <Column id="PHF_MGMT3" size="1" type="STRING"/>
          <Column id="PHF_MGMT4" size="1" type="STRING"/>
          <Column id="PHF_MGMT5" size="1" type="STRING"/>
          <Column id="PHF_MGMT_YN" size="1" type="STRING"/>
          <Column id="PHOTO_PATH" size="200" type="STRING"/>
          <Column id="RECIPE_CD" size="20" type="STRING"/>
          <Column id="RECIPE_CLASS" size="20" type="STRING"/>
          <Column id="RECIPE_COLOR" size="20" type="STRING"/>
          <Column id="RECIPE_FEEL" size="20" type="STRING"/>
          <Column id="RECIPE_NAME" size="50" type="STRING"/>
          <Column id="RECIPE_SHAPE" size="20" type="STRING"/>
          <Column id="RECIPE_TASTE" size="20" type="STRING"/>
          <Column id="RECIPE_TEMPER" size="20" type="STRING"/>
          <Column id="RECIPE_TYPE" size="20" type="STRING"/>
          <Column id="RESP_NUT1" size="20" type="STRING"/>
          <Column id="RESP_NUT2" size="20" type="STRING"/>
          <Column id="SABUN" size="9" type="STRING"/>
          <Column id="SALE_PRICE" size="22" type="BIGDECIMAL"/>
          <Column id="SALE_UOM" size="20" type="STRING"/>
          <Column id="SPRING_YN" size="1" type="STRING"/>
          <Column id="SUMMER_YN" size="1" type="STRING"/>
          <Column id="UDATE" size="7" type="DATE"/>
          <Column id="USE_TOOL" size="20" type="STRING"/>
          <Column id="USE_YN" size="1" type="STRING"/>
          <Column id="UUSER" size="9" type="STRING"/>
          <Column id="VALID_TIME" size="4" type="STRING"/>
          <Column id="WINTER_YN" size="1" type="STRING"/>
          <Column id="PHF" size="256" type="STRING"/>
          <Column id="RTN_REASON" size="256" type="STRING"/>
          <Column id="UPJANGNM" size="256" type="STRING"/>
          <Column id="NEW_RECIPE_SEQ" type="INT" size="39"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_ItemList" oncolumnchanged="ds_ItemList_OnColumnChanged">
        <ColumnInfo>
          <Column id="CAL" size="22" type="BIGDECIMAL"/>
          <Column id="CAL_CALC" size="22" type="BIGDECIMAL"/>
          <Column id="CUT_SPEC" size="20" type="STRING"/>
          <Column id="CUT_SPEC_NAME" size="100" type="STRING"/>
          <Column id="DISUSE_RATE" size="22" type="BIGDECIMAL"/>
          <Column id="EDIBLE_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="GRAM_PRICE" size="22" type="BIGDECIMAL"/>
          <Column id="ITEM_CODE" size="12" type="STRING"/>
          <Column id="ITEM_NAME" size="200" type="STRING"/>
          <Column id="ITEM_SIZE" size="100" type="STRING"/>
          <Column id="FEATURE_NAME" size="0" type="STRING"/>
          <Column id="MARGIN_PRICE" size="22" type="BIGDECIMAL"/>
          <Column id="NEED_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="PERSON_PRICE" size="22" type="BIGDECIMAL"/>
          <Column id="PO_UOM" size="10" type="STRING"/>
          <Column id="RECIPE_CD" size="20" type="STRING"/>
          <Column id="RESTRICT_YN" size="1" type="STRING"/>
          <Column id="ITEM_SEQ" size="256" type="BIGDECIMAL"/>
          <Column id="NEW_RECIPE_SEQ" type="INT" size="39"/>
          <Column id="RESTRICT_START" type="STRING" size="256"/>
          <Column id="RESTRICT_END" type="STRING" size="256"/>
          <Column id="RESTRICT_REASON" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_Rowcnt"/>
      <Dataset id="ds_CheckCnt"/>
      <Dataset id="ds_RecipeSeq"/>
      <Dataset id="ds_CookMethod" cancolumnchange="ds_CanColumnChange">
        <ColumnInfo>
          <Column id="CUISINE_DESC" size="200" type="STRING"/>
          <Column id="CUISINE_SEQ" size="22" type="BIGDECIMAL"/>
          <Column id="NEW_RECIPE_SEQ" type="INT" size="39"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_RecipeCD"/>
      <Dataset id="ds_UpdateImg"/>
      <Dataset id="ds_Valid2"/>
      <Dataset id="ds_yn">
        <ColumnInfo>
          <Column id="CD" size="256" type="STRING"/>
          <Column id="NM" size="256" type="STRING"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CD">Y</Col>
            <Col id="NM">예</Col>
          </Row>
          <Row>
            <Col id="CD">N</Col>
            <Col id="NM">아니요</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="ed_RecipeCD_value" compid="ed_RecipeCD" propid="value" datasetid="ds_Recipe" columnid="RECIPE_CD"/>
      <BindItem id="ed_RecipeNM_value" compid="ed_RecipeNM" propid="value" datasetid="ds_Recipe" columnid="RECIPE_NAME"/>
      <BindItem id="cbo_RecipeClass_value" compid="cbo_RecipeClass" propid="value" datasetid="ds_Recipe" columnid="RECIPE_CLASS"/>
      <BindItem id="cbo_RecipeType_value" compid="cbo_RecipeType" propid="value" datasetid="ds_Recipe" columnid="RECIPE_TYPE"/>
      <BindItem id="Combo2_value" compid="cbo_CuisineType" propid="value" datasetid="ds_Recipe" columnid="CUISINE_TYPE"/>
      <BindItem id="Combo5_value" compid="Combo5" propid="value" datasetid="ds_Recipe" columnid="MAIN_ITEM_CODE1"/>
      <BindItem id="Combo1_value" compid="Combo1" propid="value" datasetid="ds_Recipe" columnid="RESP_NUT1"/>
      <BindItem id="Edit0_value" compid="Edit0" propid="value" datasetid="ds_Recipe" columnid="UPJANGNM"/>
      <BindItem id="MaskEdit00_value" compid="MaskEdit00" propid="value" datasetid="ds_Recipe" columnid="UDATE"/>
      <BindItem id="Combo9_value" compid="Combo9" propid="value" datasetid="ds_Recipe" columnid="RECIPE_SHAPE"/>
      <BindItem id="Combo3_value" compid="Combo3" propid="value" datasetid="ds_Recipe" columnid="RECIPE_TASTE"/>
      <BindItem id="Combo4_value" compid="Combo4" propid="value" datasetid="ds_Recipe" columnid="RECIPE_FEEL"/>
      <BindItem id="Combo7_value" compid="Combo7" propid="value" datasetid="ds_Recipe" columnid="RECIPE_COLOR"/>
      <BindItem id="Combo10_value" compid="Combo10" propid="value" datasetid="ds_Recipe" columnid="RECIPE_TEMPER"/>
      <BindItem id="cbo_RecipeNM_value" compid="cbo_RecipeNM" propid="value" datasetid="ds_Recipe" columnid="CORE_TEMPER_YN"/>
      <BindItem id="Combo12_value" compid="Combo12" propid="value" datasetid="ds_Recipe" columnid="USE_TOOL"/>
      <BindItem id="Checkbox2_value" compid="Checkbox2" propid="value" datasetid="ds_Recipe" columnid="WINTER_YN"/>
      <BindItem id="Checkbox1_value" compid="Checkbox1" propid="value" datasetid="ds_Recipe" columnid="AUTUMN_YN"/>
      <BindItem id="Checkbox0_value" compid="Checkbox0" propid="value" datasetid="ds_Recipe" columnid="SUMMER_YN"/>
      <BindItem id="chk_Dtlyn_value" compid="chk_Dtlyn" propid="value" datasetid="ds_Recipe" columnid="SPRING_YN"/>
      <BindItem id="item0" compid="Edit01" propid="value" datasetid="ds_Recipe" columnid="NM_KOR"/>
      <BindItem id="item1" compid="st_Phf" propid="value" datasetid="ds_Recipe" columnid="PHF"/>
    </Bind>
    <Script type="xscript4.0"><![CDATA[//=========================================================================================
// FSR00013E 참고함.
// 그외사항
//   - 그외 스크립트의 경우 주석(2008-01-16 박지영)
//=========================================================================================
//=========================================================================================
// [ PART 1 ]
// Form에서 Include 할 내용을 정의
//
//=========================================================================================
include "U_lib::lib_conversionCom.xjs";
//@@컨버터에서 주석처리 #include "lib::sc_comon.js"
//@@컨버터에서 주석처리 #include "LIB::lib_comm_0001.js"		//JAVA 코딩시
//@@컨버터에서 주석처리 #include "lib::tit_comm_0001.js"
//=========================================================================================
// [ PART 2 ]
// Form에서 사용될 전역변수를 선언
//
//=========================================================================================
var v_gbn = 1;
var v_RECIPE;
var v_ImgNM="";
//=========================================================================================
// [ PART 3 ]
// Form Loading 시 작업 정의
//
//=========================================================================================
// 화면및 콤보 구성 데이타셋 로드
function form_onload(obj:Form, e:LoadEventInfo)
{
	gfn_formOnLoad(obj, false);

	fsp_init(this);
	Image0.text="이미지가 없습니다.";
/*	http.Sync=true;
	tit_ClearActionInfo(this);
	// 오늘 날짜
	ds_GetDate.ClearData();
	tit_addSearchActionInfo(this,"sc/scc:SCC_TODAY");
	tit_CallService(this,"","","","ds_GetDate=ds_GetDate","","fn_call_back");
	http.Sync=false;
	
	tit_ClearActionInfo(this);
	// 레시피명
	ds_RecipeNM.ClearData();
	tit_addSearchActionInfo(this,"fs/fsr:FSR00010E_S001");
	tit_CallService(this,"","","","ds_RecipeNM=ds_RecipeNM","","fn_call_back");

	tit_ClearActionInfo(this);
	// 레시피분류
	ds_RecipeClass.ClearData();
	tit_addSearchActionInfo(this,"fs/fsr:FSR00010E_S002");
	tit_CallService(this,"","","","ds_RecipeClass=ds_RecipeClass","","fn_call_back");

	tit_ClearActionInfo(this);
	// 레시피유형
	ds_RecipeType.ClearData();
	tit_addSearchActionInfo(this,"fs/fsr:FSR00010E_S003");
	tit_CallService(this,"","","","ds_RecipeType=ds_RecipeType","","fn_call_back");

	tit_ClearActionInfo(this);  
	// 조리법유형
	ds_CookClass.ClearData();
	tit_addSearchActionInfo(this,"fs/fsr:FSR00010E_S004");
	tit_CallService(this,"","","","ds_CookClass=ds_CookClass","","fn_call_back");
	
	tit_ClearActionInfo(this);
	// 주재료군
	ds_Material.ClearData();
	tit_addSearchActionInfo(this,"fs/fsr:FSR00010E_S005");
	tit_CallService(this,"","","","ds_Material=ds_Material","","fn_call_back");	
	

	tit_ClearActionInfo(this);
	// 대표영양성분
	ds_Element.ClearData();
	tit_addSearchActionInfo(this,"fs/fsr:FSR00010E_S006");
	tit_CallService(this,"","","","ds_Element=ds_Element","","fn_call_back");

	tit_ClearActionInfo(this);
	// 커팅규격
	ds_CutList.ClearData();
	tit_addSearchActionInfo(this,"fs/fsr:FSR00010E_S022");
	tit_CallService(this,"","","","ds_CutList=ds_CuttingList","","fn_call_back");
	
	http.Sync=true;		
	// 레시피공통코드
	ds_common.ClearData();
	tit_addSearchActionInfo(this,"fs/fsr:FSR00010E_S008");
	tit_CallService(this,"","","","ds_common=ds_common","","fn_call_back");
	http.Sync=false;
//	--FS0009 맛  FS0007 색 FS0008 모양  FS0010 질감 FS0011 제공온도 FS0013 찬기
	ds_common.Filter("GROUP_CODE='FS0007'");
	ds_FS0007.CopyF("ds_common");
	ds_FS0007.InsertRow(0);
	ds_common.Filter("GROUP_CODE='FS0008'");
	ds_FS0008.CopyF("ds_common");
	ds_FS0008.InsertRow(0);
	ds_common.Filter("GROUP_CODE='FS0009'");
	ds_FS0009.CopyF("ds_common");
	ds_FS0009.InsertRow(0);
	ds_common.Filter("GROUP_CODE='FS0010'");
	ds_FS0010.CopyF("ds_common");
	ds_FS0010.InsertRow(0);
	ds_common.Filter("GROUP_CODE='FS0011'");
	ds_FS0011.CopyF("ds_common");
	ds_FS0011.InsertRow(0);
	ds_common.Filter("GROUP_CODE='FS0013'");
	ds_FS0013.CopyF("ds_common");
	ds_FS0013.InsertRow(0);
*/	

//	테스트용..본화면을 합할때 주석으로 뺄것
	// fn_T0_Search(0,"A0100002");
}


//콜백 프로세스 처리
function fn_call_back(cd,errmsg)
{
	if(cd!=0) 
	{
		return;
	}
	else
	{
	}	
}
function fn_call_back_img(cd,errmsg)
{
	if(cd!=0) 
	{
		return;
	}
	else
	{
		fn_T0_Clear();
	}	
}
//	레시피갖고오기 콜백
function fn_call_back_T0_search(cd,errmsg)
{
	if(cd!=0) 
	{
		return;
	}
	else
	{
		// //신규추가 일경우 인서트 시켜준다 아니면 들어온 데이타 그대로 보여준다
		if(v_gbn==1)
		{
			Copy(ds_tempRecipe,"ds_Recipe");
			ds_Recipe.clearData();
			ds_Recipe.addRow();
			ds_Recipe.copyRow(0,ds_tempRecipe,0);
			Image0.image="URL('theme://convertImages/img_NoImageBig.png')";
			Image0.text="이미지가 없습니다.";
			ds_Recipe.setColumn(0,"PHOTO_PATH","");
			ds_Recipe.setColumn(0,"SPHOTO_PATH","");
			ds_Recipe.setColumn(0,"CDATE","");
			ds_Recipe.setColumn(0,"UDATE","");
			ds_Recipe.setColumn(0,"SABUN","");
			ds_Recipe.setColumn(0,"NM_KOR","");
			if(ds_Recipe.getColumn(0,"RECIPE_CLASS")=="H")
			{
				ds_Recipe.setColumn(0,"RECIPE_CLASS","");
			}
			ed_RecipeNM.readonly=false;
		}
		else
		{
			var v_path="";
			ed_RecipeNM.readonly=true;
			if(grd_List.formatid=="StdRecipe")
			{
				v_path="FSR_STD_RECIPE_MST";
			}
			else
			{
				v_path="FSR_NEW_RECIPE_MST";
			}
			if(gfn_length(gfn_trim(ds_Recipe.getColumn(0,"SPHOTO_PATH")))==0 || gfn_trim(ds_Recipe.getColumn(0,"SPHOTO_PATH"))==null )
			{
				Image0.image="URL('theme://convertImages/img_NoImageBig.png')";
				Image0.text="이미지가 없습니다.";
			}
			else
			{
				//trace(fsp_getServerDir(v_path,ds_Recipe.getColumn(0,"SPHOTO_PATH")));
				//trace(ds_Recipe.getColumn(0,"SPHOTO_PATH"));
				
				if(gfn_length(gfn_trim(fsp_getServerDir(v_path,ds_Recipe.getColumn(0,"SPHOTO_PATH"))))==0 ||
				    gfn_trim(fsp_getServerDir(v_path,ds_Recipe.getColumn(0,"SPHOTO_PATH")))==null )
				{
					trace("1");
					Image0.image="URL('theme://convertImages/img_NoImageBig.png')";
					Image0.text="이미지가 없습니다.";
					
				}
				else
				{
					trace("2"); 
					Image0.text="";
					Image0.image=fsp_getServerDir(v_path,ds_Recipe.getColumn(0,"SPHOTO_PATH"));
				}
			}
			
		}
		fn_filter();
		if(grd_List.formatid=="StdRecipe")
		{		
			if(GetRowType(ds_Recipe,0)=="insert")
			{
				cbo_RecipeClass.enable=true;
			}
			else
			{
				cbo_RecipeClass.enable=false;
				ed_RecipeNM.readonly=true;
			}
		}
		else
		{
				cbo_RecipeClass.enable=true;
				ed_RecipeNM.enable=true;
				ed_RecipeNM.readonly=false;
		}
		
		// 조리공정 셋팅
		if(rdo_Detail.index==2)
		{
			if(ds_Recipe.getRowCount()>0 && gfn_length(cbo_CuisineType.value)>0 )
			{
				var sFileName = cbo_CuisineType.value;
				div_Material.fn_Get_Recipe_Cuisine_Orpn_Image(sFileName);
			}
		}
		
		// 자재 갖고 오기
		fn_Jajea();
	}	
}
function fn_T0_Copy()
{
	if(grd_List.formatid!="StdRecipe")
	{
		//alert(fn_AlertMsg("045"));
		g_Message("EE", fn_AlertMsg("045"));
		return;
	}
	if(ds_Recipe.getRowCount()==0)
	{
		//alert(fn_AlertMsg("046"));		
		g_Message("EE", fn_AlertMsg("046"));
		return;
	}
	if(GetRowType(ds_Recipe,0)=="insert")
	{
		//alert(fn_AlertMsg("046"));		
		g_Message("EE", fn_AlertMsg("046"));
		return;		
	}
	if(GetRowType(ds_Recipe,0)=="update" 	||
		gfn_dsIsUpdated(ds_ItemList)==true		||
		gfn_dsIsUpdated(ds_CookMethod)==true		)
	{
		//alert(fn_AlertMsg("047"));		
		g_Message("EE", fn_AlertMsg("047"));
		return;		
	}
	if(v_gbn==1)	// 신규 입력이면 리턴
	{
		return;
	}
	var v_Idx=cbo_RecipeClass.index;
	gfn_dialog("", "U_FSR::FSR00017P.xfdl", {RECIPE_NAME:ed_RecipeNM.value, RECIPE_CD:ed_RecipeCD.value, OBJ_RECIPE:ds_Recipe, OBJ_ITEMLIST:ds_ItemList, OBJ_COOKMETHOD:ds_CookMethod});
	cbo_RecipeClass.index=v_Idx;
	ds_Recipe.applyChange();
	//ds_Recipe.reset();
}
function fn_T0_Confirm()
{
	if( GetRowType(ds_Recipe,0)=="insert" && ds_Recipe.getRowCount()>0)
	{
		http.Sync=true;
		fn_Before__Direct_confirm_save();
		http.Sync=false;
	}

	// if(grd_List.Format=="StdRecipe")
	// {
		   //   ///    //alert(fn_AlertMsg("022"));
		// g_Message("EE", fn_AlertMsg("022"));
		// return;
	// }
	if(ds_Recipe.getRowCount()==0)
	{
		//alert(fn_AlertMsg("023"));		
		g_Message("EE", fn_AlertMsg("023"));
		return;
	}
	if(ds_ItemList.getRowCount()==0)
	{
		//alert(fn_AlertMsg("023"));		
		g_Message("EE", "자재는 필수 입력입니다.");
		return;
	}
	
	// if(ds_Recipe.GetRowType(0)=="insert")
	// {
		 //  //  // alert(fn_AlertMsg("025"));		
		// g_Message("EE", fn_AlertMsg("025")); 
		// return;		
	// }
	// if(ds_Recipe.GetRowType(0)=="update" 	||
		// ds_ItemList.GetUpdate()==true		||
		// ds_CookMethod.GetUpdate()==true		)
	// {
		// //  //alert(fn_AlertMsg("026"));		
		// g_Message("EE", fn_AlertMsg("026"));
		// return;		
	// }
	// if(v_gbn==1)	// 신규 입력이면 확정하지 않고 리턴
	// {
		// return;
	// }
	if(gfn_length(gfn_trim(ed_RecipeNM.value))==0 || gfn_trim(ed_RecipeNM.value)==null )
	{
		//alert(fn_AlertMsg("009"));
		g_Message("EE", fn_AlertMsg("009"));
		return;
	}
	//if(confirm(fn_AlertMsg("048"))==false)
	if( !g_Confirm("04", fn_AlertMsg("048")) )
	{
		return;
	}
	ds_input.clear();
	ds_input.addColumn("RECIPE_NAME","STRING");
	ds_input.addColumn("RECIPE_CLASS","STRING");
	ds_input.addRow();
	ds_input.setColumn(0,"RECIPE_NAME",gfn_trim(ed_RecipeNM.value));
	ds_input.setColumn(0,"RECIPE_CLASS",gfn_trim(cbo_RecipeClass.value));
	http.Sync=true;
	fsp_clear(this);
	ds_Valid.clearData();
	fsp_addSearch(this,"fs/fsr:FSR00010E_S016");
	fsp_callService(this,"","","ds_input=ds_input","ds_Valid=ds_Valid","","fn_call_back","",true);
	http.Sync=false;
	http.Sync=true;
	fsp_clear(this);
	ds_Valid2.clearData();
	fsp_addSearch(this,"fs/fsr:FSR00010E_S035");
	fsp_callService(this,"","","ds_input=ds_input","ds_Valid2=ds_Valid2","","fn_call_back","",true);
	http.Sync=false;		
	if(ds_Valid.getRowCount()>0)
	{
		//alert(fn_AlertMsg("010"));
		g_Message("EE", fn_AlertMsg("010"));
//		ed_RecipeNM.value="";
		return;
	}
	else
	{
			if(fn_ValidCheck_Conf()==false)
			{
				return false;
			}
			http.Sync=true;
			fsp_clear(this);
			var actionName, cmdName, inData, outData, otherArg, callBackFnc;
			var searchsql,insertSql, updateSql, deleteSql,saveFlagColumn, keySqlName, keyIncrement, callbackSql;
			var insertSql1,insertSql2,insertSql3;
		// 표준레시피 전환로직
			ds_RecipeCD.clearData();  
			otherArg	= "IN_RECIPE_CLASS="+wrapQuote(gfn_trim(cbo_RecipeClass.value));
			otherArg	+=" IN_RECIPE_NAME="+ wrapQuote(gfn_trim(ed_RecipeNM.value));
			if(gfn_length(gfn_trim(ds_Recipe.getColumn(0,"NEW_RECIPE_SEQ")))==0)
			{
				otherArg	+=" NEW_RECIPE_SEQ="+ wrapQuote(gfn_trim(ds_RecipeSeq.getColumn(0,"NEW_RECIPE_SEQ")));
				ds_Recipe.setColumn(0,"NEW_RECIPE_SEQ",gfn_trim(ds_RecipeSeq.getColumn(0,"NEW_RECIPE_SEQ")));
			}
			inData		= "ds_Recipe=ds_Recipe ds_ItemList=ds_ItemList ds_CookMethod=ds_CookMethod";
			outData		= "ds_RecipeCD=ds_RecipeCD";
			callBackFnc	= "";
			searchsql	= "fs/fsr:FSR00010E_S033";
			insertSql 	= "fs/fsr:FSR00010E_I012";
			insertSql1 	= "fs/fsr:FSR00010E_I009";
			insertSql2 	= "fs/fsr:FSR00010E_I010";
			insertSql3 	= "fs/fsr:FSR00010E_I011";
			updateSql	= "fs/fsr:FSR00010E_U008";		
			deleteSql	= "";
			keyIncrement= -1;
			callbackSql	= "";
			//trace("otherArg==>"+otherArg);
			fsp_addSearch(this,searchsql,true);
			if(ds_Valid2.getRowCount()==0)
			{
				//trace("참조 인서트");
				fsp_addMulti(this, insertSql);
				//tit_addSingleActionInfo(this, insertSql);
				//trace("참조 인서트2");
			}
			fsp_addMulti(this, insertSql1);
			fsp_addMulti(this, insertSql2);
			if(ds_CookMethod.getRowCount()>0)
			{						
				fsp_addMulti(this, insertSql3);
			}
			fsp_addMulti(this, updateSql);
			fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc,"",true);			

			http.Sync=false;
			//trace("rowcnt="+ds_RecipeCD.getRowCount()); 
		// 표준레시피 전환이 완료되면 이미지 표준레시피이미지폴더로 복사이동 ..
		//fsp_fileRead 다운로드
		//fsp_fileRead(httpFile, "SCC", ed_serverFileName.value
		//	, saveDialog.FilePath, saveDialog.FileName);
		
	
		/******************************************************
		 *  현재 서버에 이름이 변경되어 저장된 파일명을 원래의 파일명으로 
		  변환 
		 * @param  serverFileName  서버에서 저장되어 있는 파일 이름  
		 * @return  로컬에 저장해야 하는 이름 
		******************************************************/			
		if(gfn_trim(ds_Recipe.getColumn(0,"SPHOTO_PATH"))==null || gfn_length(gfn_trim(ds_Recipe.getColumn(0,"SPHOTO_PATH")))==0)
		{
			//alert(fn_AlertMsg("028"));
			//g_Message("EE", fn_AlertMsg("028"));
			ds_MainRecipeList.deleteRow(ds_MainRecipeList.rowposition);
			fn_T0_Clear();
			return;
		}
		var v_imgfile="";
		//trace("name="+ds_Recipe.GetColumn(0,"SPHOTO_PATH"));
		// v_imgfile= tit_getLocalFileName(ds_Recipe.GetColumn(0,"SPHOTO_PATH"));
		// trace("-------->"+v_imgfile);
		// return;
		v_imgfile=ds_Recipe.getColumn(0,"SPHOTO_PATH");
		/******************************************************
		 *  서버로 파일 다운로드 처리 
		 * @param  httpfileObj  http file 처리 객체  
		 * @param  serverSaveDir  서버에 저장할 디렉토리 별명 
		 * @param  serverFileName  서버에서 전송 받아야 하는 이름  
		 * @param  localFilePath 로컬 경로 
		 * @param  localFileName 로컬 파일명 
		 * @return  서버에 저장된 파일 정보 Array 
					0 - 성공 : S / 실패 : E 
					1 - 서버에 실패한 메시지 
		******************************************************/
		var v_arr;
		var arr;
		var v_TempLocalPath="%UserApp%TobeSoft\\HWFS\\component";// 다운로드 권한 문제로 마이플랫폼 경로폴더 이용
		var v_path="FSR_NEW_RECIPE_MST";
		FileDialogSave.FileName=v_imgfile;
		FileDialogSave.FilePath= AliasToRealPath(v_TempLocalPath);

		http.Sync=true;	
		v_arr=fsp_fileRead(httpFile, v_path, v_imgfile, FileDialogSave.FilePath, FileDialogSave.FileName);
		http.Sync=false;
		//trace("v_arr="+v_arr);//<====fsp_fileRead 성공리턴값에 오류 있음..버그 피해서그냥 사용함..
		// if(v_arr[0]=="S")
		// {
			if(gfn_length(gfn_trim(v_imgfile))==0 || gfn_trim(v_imgfile)==null)
			{
				//trace("v_imgfile=0");
				return;
			}

			// 파일 서버로 전송 
			/******************************************************
			 *  서버로 파일 전송 처리 
			 * @param  httpfileObj  http file 처리 객체  
			 * @param  serverSaveDir  서버에 저장할 디렉토리 별명 
			 * @param  localFilePath 로컬 경로 
			 * @param  localFileName 로컬 파일명 
			 * @param  sendFileName  서버에 전송하고 싶은 이름 
			 * @param  fileProcType  서버에서 기존 파일을 처리하는 타입 정의  
					   D - deleteFileName에 기술된 파일명이 존재할 경우만 파일 삭제 ( 기본 값 )
					   A - 전송하는 파일명으로 해당 파일이 존재할 경우 삭제 후 저장 
						   ( 파일명은 서버에 정의된 되로 타임을 추가해야 할 경우 추가한다. )
						   또한, deleteFileName이 존재할 경우 함께 삭제한다. 
					   U - 전송하는 파일명으로 해당 파일이 존재할 경우 삭제 후 저장 
						   ( 파일명은 무조건 Client를 기준으로 저장한다. )
						   또한, deleteFileName이 존재할 경우 함께 삭제한다. 
					   N - 전송하는 파일명으로 해당 파일이 존재할 경우 저장하지 않는다. 
						   ( 파일명은 무조건 Client를 기준으로 저장한다. )
						   또한, deleteFileName이 존재할 경우 함께 삭제한다. 
			 * @param  deleteFileName 서버에서 삭제해야 하는 파일 명
					   isDelete가 true이면서 해당 파일명이 기술되어 있지 않을 경우 
					   기존 파일을 삭제한다. 
			 * @return  서버에 저장된 파일 정보 Array 
						0 - 성공 : S / 실패 : E 
						1 - 서버에 저장된 실제 경로 
						2 - 서버에 저장된 실제 파일명 
						3 - 서버에 저장된 파일 사이즈 
			******************************************************/
			
			var v_point_index=gfn_indexOf(v_imgfile,".");
			var v_ext=gfn_subStr(v_imgfile,v_point_index);

			v_path="FSR_STD_RECIPE_MST";
			v_savenm=ds_RecipeCD.getColumn(0,"RECIPE_CD")+v_ext;
			//trace("v_savenm="+v_savenm);
			FileDialog.FilePath=AliasToRealPath(v_TempLocalPath);
			FileDialog.FileName=v_imgfile;
			arr = fsp_fileWrite(HttpFile, v_path, FileDialog.FilePath, FileDialog.FileName,v_savenm,"U"); 
			// "027"
			//trace("arr="+arr);
			if( arr[0] == "E" ) {
				//alert(fn_AlertMsg("027"));
				g_Message("EE", fn_AlertMsg("027"));
				return;
			}
			else
			{
				if(file.Delete(AliasToRealPath(v_TempLocalPath)+"\\"+v_imgfile))
				{
					//trace("로컬삭제 성공");
				}
				else
				{
					//trace("로컬삭제 실패");
				}
				ds_UpdateImg.clear();
				ds_UpdateImg.addColumn("SPHOTO_PATH","STRING");
				ds_UpdateImg.addColumn("RECIPE_CD","STRING");
				ds_UpdateImg.addRow();
				ds_UpdateImg.setColumn(0,"SPHOTO_PATH",v_savenm);
				ds_UpdateImg.setColumn(0,"RECIPE_CD",ds_RecipeCD.getColumn(0,"RECIPE_CD"));
				fsp_clear(this);

				fsp_addMulti(this,"fs/fsr:FSR00010E_U009");
				fsp_callService(this,"","","ds_UpdateImg=ds_UpdateImg","","","fn_call_back_img","",true);
			}
			
			
		// }
		// else
		// {
			// trace("실패");
			//alert(v_arr[1]);
			// return;
		// }
		ds_MainRecipeList.deleteRow(ds_MainRecipeList.rowposition);
		fn_T0_Clear();
		return;
	}	
	
}

/*
 ******************************************************************************************
 * 함  수  명   : fn_T0_Delete()
 * 입      력   : 없음
 * 반      환   : 없음
 * 기      능   : 미확적레시피 삭제
 * 작  성  자   : 박지영
 * 작성  일자   : 2008-05-21
 ******************************************************************************************
 */
function fn_T0_Delete()
{
	if(ds_Recipe.getRowCount()==0)
	{
		g_Message("EE", "삭제할 데이터가 없습니다.");
		return;
	}
	
	if (gfn_dsIsUpdated(ds_Recipe)==true || gfn_dsIsUpdated(ds_ItemList)==true || gfn_dsIsUpdated(ds_CookMethod)==true)
	{
		g_Message("EE", "변경된 데이터가 있습니다.\n 저장 후 삭제해주십시오.");
		return;
	}
	
	if (!fn_CheckStatus())
	{
		return;
	}
	
	var strMsg,btp,nRow,nFRow;
	
	nRow 	= ds_Recipe.rowposition;
	
	strMsg = ds_Recipe.getColumn(nRow,"RECIPE_NAME") + "를 삭제하시겠습니까?";
	
	// 삭제확인
	if(!g_Confirm("01",strMsg))
	{
		return false;
	}
	
	btp = fsp_fileDelete(serverSaveDir, ds_Recipe.getColumn(0,"SPHOTO_PATH"),true);
	if (!btp)
	{
		g_Message("EE", "이미지 파일이 없거나 파일 삭제에 실패 하였습니다.");
		return;
	}
	
	Image0.image="URL('theme://convertImages/img_NoImageBig.png')";
	Image0.text="이미지가 없습니다.";
	
	var actionName, cmdName, inData, outData, otherArg, callBackFnc;
	
	inData			= "ds_Recipe=ds_Recipe:U ds_ItemList=ds_ItemList:U ds_CookMethod=ds_CookMethod:U";
	callBackFnc		= "fn_afterDelete";
	
	// Data삭제
	ds_Recipe.deleteRow(nRow);
	ds_ItemList.deleteAll();
	ds_CookMethod.deleteAll();
	ds_phf.clearData();
	
	// 삭제
	fsp_addSave(this, "", "", "fs/fsr:FSR00040E_D001");
	fsp_addSave(this, "", "", "fs/fsr:FSR00010E_D008");
	fsp_addSave(this, "", "", "fs/fsr:FSR00010E_D009");
	
	fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc,false,true,true);	// 서비스 호출
}

/*
 ******************************************************************************************
 * 함  수  명   : fn_afterSave()
 * 입      력   : errCode 	= 에러코드
				  errMsg	= 에러메세지
 * 반      환   : 없음
 * 기      능   : 저장후 실행 함수
 * 작  성  자   : 박지영
 * 작성  일자   : 2007-12-10  
 ******************************************************************************************
 */
function fn_afterDelete(errCode, errMsg)
{
	if(errCode!=0)
	{
		g_Message("EE", "서비스 오류:시스템 관리자에게 문의하십시오");
		return;
	}
	
	g_Message("01","");
}

function fn_T0_Save()
{
	var v_CurDate = gfn_today();	
	//trace("ds_Recipe="+ds_Recipe.GetRowType(0)+" ds_ItemList="+ds_ItemList.GetRowType(0)+"ds_ItemList="+ds_ItemList.GetRowType(0));
	if(ds_Recipe.getRowCount()==0 && ds_Recipe.getDeletedRowCount()==0)
	{
		return;
	}
	if(GetRowType(ds_Recipe,0)=="insert")
	{
		if(fn_ValidCheck()==false)
		{
			//trace("1");
			return;		
		}
	}
	if(GetRowType(ds_Recipe,0)=="update")
	{
		if(fn_ValidCheck()==false)
		{
			//trace("2");
			return;		
		}
	}	
    fsp_clear(this);
    // 서비스셋팅
    var actionName, cmdName, inData, outData, otherArg, callBackFnc;
    var searchsql,insertSql, updateSql, deleteSql,saveFlagColumn, keySqlName, keyIncrement, callbackSql;
	var insertSql1, updateSql1, deleteSql1;
	var insertSql2, updateSql2, deleteSql2;
	var insertSql3, updateSql3, deleteSql3;
	
	fn_CheckStatus();
	
	/*
	if(grd_List.Format=="StdRecipe")	// 확정 레시피 저장 루틴====================================**********
	{
		//TRACE("v_gbn="+v_gbn);
		if(v_gbn==0) // 조회
		{			
			if(ds_Recipe.GetDelRowCount()==0)
			{
				if(ds_ItemList.RowCount()==0)
				{
					//alert(fn_AlertMsg("013"));
					g_Message("EE", fn_AlertMsg("013"));
					return;
				}
				if(ds_ItemList.RowCount()==0)
				{
					//alert(fn_AlertMsg("014"));
					g_Message("EE", fn_AlertMsg("014"));
					return;
				}			
				if(ds_ItemList.SearchRow("length(trim(ITEM_CODE))==0 || trim(ITEM_CODE)==null")!=-1)
				{
					//alert(fn_AlertMsg("015"));
					g_Message("EE", fn_AlertMsg("015"));
					return;
				}
				if(ds_CookMethod.SearchRow("length(trim(CUISINE_DESC))==0 || trim(CUISINE_DESC)==null")!=-1)
				{
					//alert(fn_AlertMsg("016"));
					g_Message("EE", fn_AlertMsg("016"));
					return;
				}						
				for(i=0;i<ds_ItemList.RowCount();i++)
				{
					ds_ItemList.SetColumn(i,"ITEM_SEQ",i+1);
				}
				var v_max=ds_CookMethod.Max("CUISINE_SEQ");
				if( trim(v_max)==null || length(trim(v_max))==0 )
				{
					v_max=0;
				}
				for(i=0;i<ds_CookMethod.RowCount();i++)
				{
					if(ds_CookMethod.GetColumn(i,"CUISINE_SEQ").trim().length()==0
							|| ds_CookMethod.GetColumn(i,"CUISINE_SEQ").trim()==null )
					{
						v_max=v_max+1;
						ds_CookMethod.SetColumn(i,"CUISINE_SEQ",v_max);
					}
					
				}		
				ds_Recipe.SetColumn(0,"UDATE",substr(v_CurDate,0,8));				
				//입력및 업데이트 저장
				inData		= "ds_Recipe=ds_Recipe:U ds_ItemList=ds_ItemList:U ds_CookMethod=ds_CookMethod:U";
				outData		= "";
				callBackFnc	= "fn_Call_ShowMsg";
				insertSql1 	= "";
				insertSql2 	= "fs/fsr:FSR00010E_I002";
				insertSql3 	= "fs/fsr:FSR00010E_I003";
				updateSql1	= "fs/fsr:FSR00010E_U001";
				updateSql2	= "fs/fsr:FSR00010E_U002";
				updateSql3	= "fs/fsr:FSR00010E_U003";			
				deleteSql1	= "";
				deleteSql2	= "fs/fsr:FSR00010E_D002";
				deleteSql3	= "fs/fsr:FSR00010E_D003";
				keyIncrement= -1;
				callbackSql	= "";
				
				tit_addSaveActionInfo(this, insertSql1, updateSql1, deleteSql1,saveFlagColumn, keySqlName, keyIncrement, callbackSql);
				tit_addSaveActionInfo(this, insertSql2, updateSql2, deleteSql2,saveFlagColumn, keySqlName, keyIncrement, callbackSql);
				tit_addSaveActionInfo(this, insertSql3, updateSql3, deleteSql3,saveFlagColumn, keySqlName, keyIncrement, callbackSql);
				
				tit_callService(this, "", "", inData, outData, otherArg, callBackFnc);	
			}
			if (ds_Recipe.GetDelRowCount()>0)
			{
				ds_MainRecipeList.DeleteRow(ds_MainRecipeList.Row);
				v_ImgNM=ds_Recipe.GetDelColumn(0,"SPHOTO_PATH");//=================
				// 사용유무 확인로직
				// 로우 카운트 1이상 이면 삭제 취소
				//  출력 메시지:: 이미 사용중인 레시피입니다. 삭제 할 수 없습니다.
				//TRACE("삭제 TR");
				inData		= "ds_Recipe=ds_Recipe:U";
				outData		= "";
				callBackFnc	= "fn_call_back_imgDel";
				insertSql 	= "";
				updateSql	= "";
				deleteSql1	= "fs/fsr:FSR00010E_D004";
				deleteSql2	= "fs/fsr:FSR00010E_D005";
				deleteSql3	= "fs/fsr:FSR00010E_D006";
				deleteSql4	= "fs/fsr:FSR00010E_D007";
				keyIncrement= -1;
				callbackSql	= "";
				
				tit_addSaveActionInfo(this, insertSql, updateSql, deleteSql1,saveFlagColumn, keySqlName, keyIncrement, callbackSql);
				tit_addSaveActionInfo(this, insertSql, updateSql, deleteSql2,saveFlagColumn, keySqlName, keyIncrement, callbackSql);
				tit_addSaveActionInfo(this, insertSql, updateSql, deleteSql3,saveFlagColumn, keySqlName, keyIncrement, callbackSql);
				tit_addSaveActionInfo(this, insertSql, updateSql, deleteSql4,saveFlagColumn, keySqlName, keyIncrement, callbackSql);
				
				tit_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);
			}
		}
		else		// 신규
		{
			if(ds_Recipe.GetUpdate()==true && ds_ItemList.GetUpdate()==true)
			{
				if(g_Confirm("02","변경된 데이타가 있습니다.\n\n저장하시겠습니까?"))
				{
				}
				else
				{
					return;
				}
				
			}
			for(i=0;i<ds_ItemList.RowCount();i++)
			{
				ds_ItemList.SetColumn(i,"ITEM_SEQ",i+1);
			}
			var v_max=ds_CookMethod.Max("CUISINE_SEQ");
			if( trim(v_max)==null || length(trim(v_max))==0 )
			{
				v_max=0;
			}
			for(i=0;i<ds_CookMethod.RowCount();i++)
			{
				if(ds_CookMethod.GetColumn(i,"CUISINE_SEQ").trim().length()==0
						|| ds_CookMethod.GetColumn(i,"CUISINE_SEQ").trim()==null )
				{
					v_max=v_max+1;
					ds_CookMethod.SetColumn(i,"CUISINE_SEQ",v_max);
				}
				
			}
			ds_RecipeSeq.ClearData();
			inData		= "ds_Recipe=ds_Recipe:U ds_ItemList=ds_ItemList:U ds_CookMethod=ds_CookMethod:U";
			outData		= "ds_RecipeSeq=ds_RecipeSeq";
			callBackFnc	= "fm_sRtn";
			searchsql	= "fs/fsr:FSR00010E_S029";
			insertSql1 	= "fs/fsr:FSR00010E_I004";
			insertSql2 	= "fs/fsr:FSR00010E_I005";
			insertSql3 	= "fs/fsr:FSR00010E_I006";			

			updateSql	= "";		
			deleteSql	= "";
			keyIncrement= -1;
			callbackSql	= "";
			tit_addSearchActionInfo(this,searchsql,true);
			tit_addMultiActionInfo(this, insertSql1);
			tit_addMultiActionInfo(this, insertSql2);
			if(ds_CookMethod.RowCount()>0 )
			{
				tit_addMultiActionInfo(this, insertSql3);
			}
			tit_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);	
		}
	}
	else	// 미확정 레시피 저장 루틴====================================****************
	{*/
		// 미확정 레시피에서 삭제 버튼 사용하지 않습니다.
		// 미확정 레시피에서는 반려 로직 사용합니다.(20071218)	
		if(v_gbn==0) // 조회
		{			
			if(ds_Recipe.getDeletedRowCount()==0)
			{
				if(ds_ItemList.getRowCount()==0)
				{
					//alert(fn_AlertMsg("013"));
					g_Message("EE", fn_AlertMsg("013"));
					return;
				}
				if(ds_ItemList.getRowCount()==0)
				{
					//alert(fn_AlertMsg("014"));
					g_Message("EE", fn_AlertMsg("014"));
					return;
				}			
				if(ds_ItemList.findRowExpr("gfn_length(gfn_trim(ITEM_CODE))==0 || gfn_trim(ITEM_CODE)==null")!=-1)
				{
					//alert(fn_AlertMsg("015"));
					g_Message("EE", fn_AlertMsg("015"));
					return;
				}
				if(ds_CookMethod.findRowExpr("gfn_length(gfn_trim(CUISINE_DESC))==0 || gfn_trim(CUISINE_DESC)==null")!=-1)
				{
					//alert(fn_AlertMsg("016"));
					g_Message("EE", fn_AlertMsg("016"));
					return;
				}
				
				for(i=0;i<ds_ItemList.getRowCount();i++)
				{
					ds_ItemList.setColumn(i,"ITEM_SEQ",i+1);
				}
				var v_max=ds_CookMethod.getMax("CUISINE_SEQ");
				if( gfn_trim(v_max)==null || gfn_length(gfn_trim(v_max))==0 )
				{
					v_max=0;
				}
				for(i=0;i<ds_CookMethod.getRowCount();i++)
				{
					if(gfn_length(gfn_trim(ds_CookMethod.getColumn(i,"CUISINE_SEQ")))==0
							|| gfn_trim(ds_CookMethod.getColumn(i,"CUISINE_SEQ"))==null )
					{
						v_max=v_max+1;
						ds_CookMethod.setColumn(i,"CUISINE_SEQ",v_max);
					}
					
				}		
				ds_Recipe.setColumn(0,"UDATE",gfn_subStr(v_CurDate,0,8));
				//입력및 업데이트 저장
				inData		= "ds_Recipe=ds_Recipe:U ds_ItemList=ds_ItemList:U ds_CookMethod=ds_CookMethod:U";
				outData		= "";
				callBackFnc	= "fn_Call_ShowMsg";
				insertSql1 	= "";
				insertSql2 	= "fs/fsr:FSR00010E_I007";
				insertSql3 	= "fs/fsr:FSR00010E_I008";
				updateSql1	= "fs/fsr:FSR00041E_U001";
				updateSql2	= "fs/fsr:FSR00010E_U006";
				updateSql3	= "fs/fsr:FSR00010E_U007";			
				deleteSql1	= "";
				deleteSql2	= "fs/fsr:FSR00010E_D008";
				deleteSql3	= "fs/fsr:FSR00010E_D009";
				keyIncrement= -1;
				callbackSql	= "";
				
				fsp_addSave(this, insertSql1, updateSql1, deleteSql1,saveFlagColumn, keySqlName, keyIncrement, callbackSql);
				fsp_addSave(this, insertSql2, updateSql2, deleteSql2,saveFlagColumn, keySqlName, keyIncrement, callbackSql);
				fsp_addSave(this, insertSql3, updateSql3, deleteSql3,saveFlagColumn, keySqlName, keyIncrement, callbackSql);
				
				fsp_callService(this, "", "", inData, outData, otherArg, callBackFnc,false,true,true);
			}			
		}
		else		// 신규
		{
			// 저장확인 추가
			if (!g_Confirm("02","저장하시겠습니까?"))
			{
				return;
			}
				
			for(i=0;i<ds_ItemList.getRowCount();i++)
			{
				ds_ItemList.setColumn(i,"ITEM_SEQ",i+1);
			}
			var v_max=ds_CookMethod.getMax("CUISINE_SEQ");
			if( gfn_trim(v_max)==null || gfn_length(gfn_trim(v_max))==0 )
			{
				v_max=0;
			}
			for(i=0;i<ds_CookMethod.getRowCount();i++)
			{
				if(gfn_length(gfn_trim(ds_CookMethod.getColumn(i,"CUISINE_SEQ")))==0
						|| gfn_trim(ds_CookMethod.getColumn(i,"CUISINE_SEQ"))==null )
				{
					v_max=v_max+1;
					ds_CookMethod.setColumn(i,"CUISINE_SEQ",v_max);
				}
				
			}
			ds_RecipeSeq.clearData();
			inData		= "ds_Recipe=ds_Recipe:U ds_ItemList=ds_ItemList:U ds_CookMethod=ds_CookMethod:U";
			outData		= "ds_RecipeSeq=ds_RecipeSeq";
			callBackFnc	= "fn_Call_ShowMsg";
			searchsql	= "fs/fsr:FSR00010E_S029";
			//insertSql1 	= "fs/fsr:FSR00010E_I004";
			insertSql1 	= "fs/fsr:FSR00041E_I001";		// 2008-01-16 박지영
			insertSql2 	= "fs/fsr:FSR00010E_I005";
			insertSql3 	= "fs/fsr:FSR00010E_I006";
			updateSql	= "";		
			deleteSql	= "";
			keyIncrement= -1;
			callbackSql	= "";
			//http.Sync=true;
			fsp_addSearch(this,searchsql,true);
			fsp_addMulti(this, insertSql1,"",keyIncrement,callbackSql);	//(formObj, sqlId, keySqlName, keyIncrement, callbackSql)
			fsp_addMulti(this, insertSql2,"",keyIncrement,callbackSql);
			fsp_addMulti(this, insertSql3,"",keyIncrement,callbackSql);
			fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc,false,true,true);	
			//http.Sync=false;
		}	
	// }
}
function fn_Trans()
{
	var v_CurDate = gfn_today();	
	//trace("ds_Recipe="+ds_Recipe.GetRowType(0)+" ds_ItemList="+ds_ItemList.GetRowType(0)+"ds_ItemList="+ds_ItemList.GetRowType(0));
	if(ds_Recipe.getRowCount()==0 && ds_Recipe.getDeletedRowCount()==0)
	{
		return;
	}
	if(GetRowType(ds_Recipe,0)=="insert")
	{
		if(fn_ValidCheck()==false)
		{
			return;		
		}
	}
	if(GetRowType(ds_Recipe,0)=="update")
	{
		if(fn_ValidCheck()==false)
		{
			return;		
		}
	}	
    fsp_clear(this);
    // 서비스셋팅
    var actionName, cmdName, inData, outData, otherArg, callBackFnc;
    var searchsql,insertSql, updateSql, deleteSql,saveFlagColumn, keySqlName, keyIncrement, callbackSql;
	var insertSql1, updateSql1, deleteSql1;
	var insertSql2, updateSql2, deleteSql2;
	var insertSql3, updateSql3, deleteSql3;
	
	if(grd_List.formatid=="StdRecipe")	// 확정 레시피 저장 루틴====================================**********
	{
		//TRACE("v_gbn="+v_gbn);
		if(v_gbn==0) // 조회
		{			
			if(ds_Recipe.getDeletedRowCount()==0)
			{
				if(ds_ItemList.getRowCount()==0)
				{
					//alert(fn_AlertMsg("013"));
					g_Message("EE", fn_AlertMsg("013"));
					return;
				}
				if(ds_ItemList.getRowCount()==0)
				{
					//alert(fn_AlertMsg("014"));
					g_Message("EE", fn_AlertMsg("014"));
					return;
				}			
				if(ds_ItemList.findRowExpr("gfn_length(gfn_trim(ITEM_CODE))==0 || gfn_trim(ITEM_CODE)==null")!=-1)
				{
					//alert(fn_AlertMsg("015"));
					g_Message("EE", fn_AlertMsg("015"));
					return;
				}
				if(ds_CookMethod.findRowExpr("gfn_length(gfn_trim(CUISINE_DESC))==0 || gfn_trim(CUISINE_DESC)==null")!=-1)
				{
					//alert(fn_AlertMsg("016"));
					g_Message("EE", fn_AlertMsg("016"));
					return;
				}						
				for(i=0;i<ds_ItemList.getRowCount();i++)
				{
					ds_ItemList.setColumn(i,"ITEM_SEQ",i+1);
				}
				var v_max=ds_CookMethod.getMax("CUISINE_SEQ");
				if( gfn_trim(v_max)==null || gfn_length(gfn_trim(v_max))==0 )
				{
					v_max=0;
				}
				for(i=0;i<ds_CookMethod.getRowCount();i++)
				{
					if(gfn_length(gfn_trim(ds_CookMethod.getColumn(i,"CUISINE_SEQ")))==0
							|| gfn_trim(ds_CookMethod.getColumn(i,"CUISINE_SEQ"))==null )
					{
						v_max=v_max+1;
						ds_CookMethod.setColumn(i,"CUISINE_SEQ",v_max);
					}
					
				}		
				ds_Recipe.setColumn(0,"UDATE",gfn_subStr(v_CurDate,0,8));				
				//입력및 업데이트 저장
				inData		= "ds_Recipe=ds_Recipe:U ds_ItemList=ds_ItemList:U ds_CookMethod=ds_CookMethod:U";
				outData		= "";
				callBackFnc	= "fn_Call_ShowMsg";
				insertSql1 	= "";
				insertSql2 	= "fs/fsr:FSR00010E_I002";
				insertSql3 	= "fs/fsr:FSR00010E_I003";
				updateSql1	= "fs/fsr:FSR00010E_U001";
				updateSql2	= "fs/fsr:FSR00010E_U002";
				updateSql3	= "fs/fsr:FSR00010E_U003";			
				deleteSql1	= "";
				deleteSql2	= "fs/fsr:FSR00010E_D002";
				deleteSql3	= "fs/fsr:FSR00010E_D003";
				keyIncrement= -1;
				callbackSql	= "";
				
				fsp_addSave(this, insertSql1, updateSql1, deleteSql1,saveFlagColumn, keySqlName, keyIncrement, callbackSql);
				fsp_addSave(this, insertSql2, updateSql2, deleteSql2,saveFlagColumn, keySqlName, keyIncrement, callbackSql);
				fsp_addSave(this, insertSql3, updateSql3, deleteSql3,saveFlagColumn, keySqlName, keyIncrement, callbackSql);
				
				fsp_callService(this, "", "", inData, outData, otherArg, callBackFnc);	
			}
			if (ds_Recipe.getDeletedRowCount()>0)
			{
				ds_MainRecipeList.deleteRow(ds_MainRecipeList.rowposition);
				v_ImgNM=ds_Recipe.getDeletedColumn(0,"SPHOTO_PATH");//=================
				// 사용유무 확인로직
				// 로우 카운트 1이상 이면 삭제 취소
				//  출력 메시지:: 이미 사용중인 레시피입니다. 삭제 할 수 없습니다.
				//TRACE("삭제 TR");
				inData		= "ds_Recipe=ds_Recipe:U";
				outData		= "";
				callBackFnc	= "fn_call_back_imgDel";
				insertSql 	= "";
				updateSql	= "";
				deleteSql1	= "fs/fsr:FSR00010E_D004";
				deleteSql2	= "fs/fsr:FSR00010E_D005";
				deleteSql3	= "fs/fsr:FSR00010E_D006";
				deleteSql4	= "fs/fsr:FSR00010E_D007";
				keyIncrement= -1;
				callbackSql	= "";
				
				fsp_addSave(this, insertSql, updateSql, deleteSql1,saveFlagColumn, keySqlName, keyIncrement, callbackSql);
				fsp_addSave(this, insertSql, updateSql, deleteSql2,saveFlagColumn, keySqlName, keyIncrement, callbackSql);
				fsp_addSave(this, insertSql, updateSql, deleteSql3,saveFlagColumn, keySqlName, keyIncrement, callbackSql);
				fsp_addSave(this, insertSql, updateSql, deleteSql4,saveFlagColumn, keySqlName, keyIncrement, callbackSql);
				
				fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);
			}
		}
		else		// 신규
		{
			//trace("표준루틴에서 신규저장루틴");
			for(i=0;i<ds_ItemList.getRowCount();i++)
			{
				ds_ItemList.setColumn(i,"ITEM_SEQ",i+1);
			}
			var v_max=ds_CookMethod.getMax("CUISINE_SEQ");
			if( gfn_trim(v_max)==null || gfn_length(gfn_trim(v_max))==0 )
			{
				v_max=0;
			}
			for(i=0;i<ds_CookMethod.getRowCount();i++)
			{
				if(gfn_length(gfn_trim(ds_CookMethod.getColumn(i,"CUISINE_SEQ")))==0
						|| gfn_trim(ds_CookMethod.getColumn(i,"CUISINE_SEQ"))==null )
				{
					v_max=v_max+1;
					ds_CookMethod.setColumn(i,"CUISINE_SEQ",v_max);
				}
				
			}
			ds_RecipeSeq.clearData();
			inData		= "ds_Recipe=ds_Recipe:U ds_ItemList=ds_ItemList:U ds_CookMethod=ds_CookMethod:U";
			outData		= "ds_RecipeSeq=ds_RecipeSeq";
			callBackFnc	= "fm_sRtn";
			searchsql	= "fs/fsr:FSR00010E_S029";
			insertSql1 	= "fs/fsr:FSR00010E_I004";
			insertSql2 	= "fs/fsr:FSR00010E_I005";
			insertSql3 	= "fs/fsr:FSR00010E_I006";
			updateSql	= "";		
			deleteSql	= "";
			keyIncrement= -1;
			callbackSql	= "";
			fsp_addSearch(this,searchsql,true);
			fsp_addMulti(this, insertSql1);
			fsp_addMulti(this, insertSql2);
			if(ds_CookMethod.getRowCount()>0 )
			{
				fsp_addMulti(this, insertSql3);
			} 
			fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);	
		}
	}
	else	// 미확정 레시피 저장 루틴====================================****************
	{
		// 미확정 레시피에서 삭제 버튼 사용하지 않습니다.
		// 미확정 레시피에서는 반려 로직 사용합니다.(20071218)	
		if(v_gbn==0) // 조회
		{			
			if(ds_Recipe.getDeletedRowCount()==0)
			{
				if(ds_ItemList.getRowCount()==0)
				{
					//alert(fn_AlertMsg("013"));
					g_Message("EE", fn_AlertMsg("013"));
					return;
				}
				if(ds_ItemList.getRowCount()==0)
				{
					//alert(fn_AlertMsg("014"));
					g_Message("EE", fn_AlertMsg("014"));
					return;
				}			
				if(ds_ItemList.findRowExpr("gfn_length(gfn_trim(ITEM_CODE))==0 || gfn_trim(ITEM_CODE)==null")!=-1)
				{
					//alert(fn_AlertMsg("015"));
					g_Message("EE", fn_AlertMsg("015"));
					return;
				}
				if(ds_CookMethod.findRowExpr("gfn_length(gfn_trim(CUISINE_DESC))==0 || gfn_trim(CUISINE_DESC)==null")!=-1)
				{
					//alert(fn_AlertMsg("016"));
					g_Message("EE", fn_AlertMsg("016"));
					return;
				}						
				for(i=0;i<ds_ItemList.getRowCount();i++)
				{
					ds_ItemList.setColumn(i,"ITEM_SEQ",i+1);
				}
				var v_max=ds_CookMethod.getMax("CUISINE_SEQ");
				if( gfn_trim(v_max)==null || gfn_length(gfn_trim(v_max))==0 )
				{
					v_max=0;
				}
				for(i=0;i<ds_CookMethod.getRowCount();i++)
				{
					if(gfn_length(gfn_trim(ds_CookMethod.getColumn(i,"CUISINE_SEQ")))==0
							|| gfn_trim(ds_CookMethod.getColumn(i,"CUISINE_SEQ"))==null )
					{
						v_max=v_max+1;
						ds_CookMethod.setColumn(i,"CUISINE_SEQ",v_max);
					}
					
				}		
				ds_Recipe.setColumn(0,"UDATE",gfn_subStr(v_CurDate,0,8));
				//입력및 업데이트 저장
				inData		= "ds_Recipe=ds_Recipe:U ds_ItemList=ds_ItemList:U ds_CookMethod=ds_CookMethod:U";
				outData		= "";
				callBackFnc	= "fn_Call_ShowMsg";
				insertSql1 	= "";
				insertSql2 	= "fs/fsr:FSR00010E_I007";
				insertSql3 	= "fs/fsr:FSR00010E_I008";
				updateSql1	= "fs/fsr:FSR00041E_U001";
				updateSql2	= "fs/fsr:FSR00010E_U006";
				updateSql3	= "fs/fsr:FSR00010E_U007";			
				deleteSql1	= "";
				deleteSql2	= "fs/fsr:FSR00010E_D008";
				deleteSql3	= "fs/fsr:FSR00010E_D009";
				keyIncrement= -1;
				callbackSql	= "";
				
				fsp_addSave(this, insertSql1, updateSql1, deleteSql1,saveFlagColumn, keySqlName, keyIncrement, callbackSql);
				fsp_addSave(this, insertSql2, updateSql2, deleteSql2,saveFlagColumn, keySqlName, keyIncrement, callbackSql);
				fsp_addSave(this, insertSql3, updateSql3, deleteSql3,saveFlagColumn, keySqlName, keyIncrement, callbackSql);
				
				fsp_callService(this, "", "", inData, outData, otherArg, callBackFnc,false,true,true);	
			}			
		}
		else		// 신규
		{
			//trace("신규저장 루틴");
			for(i=0;i<ds_ItemList.getRowCount();i++)
			{
				ds_ItemList.setColumn(i,"ITEM_SEQ",i+1);
			}
			var v_max=ds_CookMethod.getMax("CUISINE_SEQ");
			if( gfn_trim(v_max)==null || gfn_length(gfn_trim(v_max))==0 )
			{
				v_max=0;
			}
			for(i=0;i<ds_CookMethod.getRowCount();i++)
			{
				if(gfn_length(gfn_trim(ds_CookMethod.getColumn(i,"CUISINE_SEQ")))==0
						|| gfn_trim(ds_CookMethod.getColumn(i,"CUISINE_SEQ"))==null )
				{
					v_max=v_max+1;
					ds_CookMethod.setColumn(i,"CUISINE_SEQ",v_max);
				}
				
			}
			ds_RecipeSeq.clearData();
			inData		= "ds_Recipe=ds_Recipe:U ds_ItemList=ds_ItemList:U ds_CookMethod=ds_CookMethod:U";
			outData		= "ds_RecipeSeq=ds_RecipeSeq";
			callBackFnc	= "fn_Call_ShowMsg";
			searchsql	= "fs/fsr:FSR00010E_S029";
			//insertSql1 	= "fs/fsr:FSR00010E_I004";
			insertSql1 	= "fs/fsr:FSR00041E_I001";		// 2008-01-16 박지영
			insertSql2 	= "fs/fsr:FSR00010E_I005";
			insertSql3 	= "fs/fsr:FSR00010E_I006";
			updateSql	= "";		
			deleteSql	= "";
			keyIncrement= -1;
			callbackSql	= "";
			//http.Sync=true;
			fsp_addSearch(this,searchsql,true);
			fsp_addMulti(this, insertSql1);
			fsp_addMulti(this, insertSql2);
			if(ds_CookMethod.getRowCount()>0)
			{
				fsp_addMulti(this, insertSql3);
			}
			fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc,false,true,true);	
			//http.Sync=false;
		}	
	}
}
function fn_Before__Direct_confirm_save()
{
	if(ds_Recipe.getRowCount()==0)
	{
		//alert(fn_AlertMsg("023"));		
		g_Message("EE", fn_AlertMsg("023"));
		return;
	}
	if(ds_ItemList.getRowCount()==0)
	{
		//alert(fn_AlertMsg("023"));		
		g_Message("EE", "자재는 필수 입력입니다.");
		return;
	}

    // 서비스셋팅
    var actionName, cmdName, inData, outData, otherArg, callBackFnc;
    var searchsql,insertSql, updateSql, deleteSql,saveFlagColumn, keySqlName, keyIncrement, callbackSql;
	var insertSql1, updateSql1, deleteSql1;
	var insertSql2, updateSql2, deleteSql2;
	var insertSql3, updateSql3, deleteSql3;

	for(i=0;i<ds_ItemList.getRowCount();i++)
	{
		ds_ItemList.setColumn(i,"ITEM_SEQ",i+1);
	}
	var v_max=ds_CookMethod.getMax("CUISINE_SEQ");
	if( gfn_trim(v_max)==null || gfn_length(gfn_trim(v_max))==0 )
	{
		v_max=0;
	}
	for(i=0;i<ds_CookMethod.getRowCount();i++)
	{
		if(gfn_length(gfn_trim(ds_CookMethod.getColumn(i,"CUISINE_SEQ")))==0
				|| gfn_trim(ds_CookMethod.getColumn(i,"CUISINE_SEQ"))==null )
		{
			v_max=v_max+1;
			ds_CookMethod.setColumn(i,"CUISINE_SEQ",v_max);
		}
		
	}
    fsp_clear(this);	
    
	ds_RecipeSeq.clearData();
	inData		= "ds_Recipe=ds_Recipe:U ds_ItemList=ds_ItemList:U ds_CookMethod=ds_CookMethod:U";
	outData		= "ds_RecipeSeq=ds_RecipeSeq";
	callBackFnc	= "";
	searchsql	= "fs/fsr:FSR00010E_S029";
	insertSql1 	= "fs/fsr:FSR00010E_I004";
	insertSql2 	= "fs/fsr:FSR00010E_I005";
	insertSql3 	= "fs/fsr:FSR00010E_I006";
	updateSql	= "";		
	deleteSql	= "";
	keyIncrement= -1;
	callbackSql	= "";
	http.Sync=true;
	fsp_addSearch(this,searchsql,true);
	fsp_addMulti(this, insertSql1);
	fsp_addMulti(this, insertSql2);
	if(ds_CookMethod.getRowCount()>0)
	{
		fsp_addMulti(this, insertSql3);
	}
	
	fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);	
	http.Sync=false;

}
function fn_Call_ShowMsg(cd,errmsg)
{
	if(cd!=0)
	{
		g_Message("EE","시스템 오류!\n\n전산 담당자에게 문의하세요.");
		return;
	}
	else
	{
		g_Message("02");
		return;
	}
}
function fm_sRtn(cd,errmsg)
{
	if(cd!=0)
	{
		g_Message("EE","시스템 오류!\n\n전산 담당자에게 문의하세요.");
		return;
	}
	else
	{
		
		g_Message("02","데이터가 정상적으로 저장 되었습니다.\n\n미확정 레시피로 이동합니다.");	
		fn_T0_Clear();
	}
}
function fn_T0_Reset()
{
	if(div_Detail.fn_Update_Chk())
	{
		return;
	}
	//fn_ableChk(false);
	ds_RecipeClass.filter("CODE!='H'");
	fn_Phf();
	ed_RecipeNM.enable=true;
	fn_T0_Clear();
	ds_Recipe.clearData();
	ds_Recipe.addRow();
	ds_Recipe.setColumn(0,"PHF_MGMT_YN","N");
	ds_CookMethod.clearData();
	ed_RecipeNM.readonly=false;
	ds_ItemList.clearData();
	for(i=0;i<ds_phf.getRowCount();i++)
	{
		ds_phf.setColumn(i,"PHF","N");
	}
	Image0.image="URL('theme://convertImages/img_NoImageBig.png')";
	Image0.text="이미지가 없습니다.";
	ed_wonga.value="";	
	v_gbn=1;
	if(GetRowType(ds_Recipe,0)=="insert")
	{
		cbo_RecipeClass.enable=true;
	}
	else
	{
		cbo_RecipeClass.enable=false;
	}
	
	ed_RecipeNM.setFocus();							// 2008-01-16 박지영
}
function fn_call_back_imgDel(cd,errmsg)
{
	if(cd!=0)
	{
		v_ImgNM="";
	}
	else
	{
		//trace("======>");
		//trace(gfn_dsIsUpdated(ds_Recipe)+"/"+gfn_dsIsUpdated(ds_ItemList)+"/"+gfn_dsIsUpdated(ds_CookMethod)+"/"+gfn_dsIsUpdated(ds_phf));;
		ds_ItemList.applyChange();
		ds_CookMethod.applyChange();
		ds_ItemList.reset();
		ds_CookMethod.reset();
		g_Message("02");
		var v_path="";
		if(grd_List.formatid=="StdRecipe")
		{
			v_path="FSR_STD_RECIPE_MST";
		}
		else
		{
			return;
		}
		if(gfn_length(gfn_trim(v_ImgNM))>0)
		{
			var v_rtn=fsp_fileDelete(v_path, v_ImgNM,true);
			if(v_rtn==false)
			{
				//alert(fn_AlertMsg("017"));			
				g_Message("EE", fn_AlertMsg("017"));
				return;
			}
			else
			{
				Image0.image="URL('theme://convertImages/img_NoImageBig.png')";
				Image0.text="이미지가 없습니다.";
			}
		}		
	}
}
// 자재갖고오기 콜백
function fn_call_back_T0_jajea(cd,errmsg)
{
	if(cd!=0) 
	{
		return;
	}
	else
	{
		// //신규추가 일경우 인서트 시켜준다 아니면 들어온 데이타 그대로 보여준다
		if(v_gbn==1)
		{
			Copy(ds_tempItem,"ds_ItemList");
			ds_ItemList.clearData();
			if(grd_List.formatid=="StdRecipe")
			{
				for(i=0;i<ds_tempItem.getRowCount();i++)
				{
					ds_ItemList.addRow();
					ds_ItemList.copyRow(i,ds_tempItem,i);
					ds_ItemList.setColumn(i,"RECIPE_CD","");
				}
			}
			else
			{
				for(i=0;i<ds_tempItem.getRowCount();i++)
				{
					ds_ItemList.addRow();
					ds_ItemList.copyRow(i,ds_tempItem,i);
					ds_ItemList.setColumn(i,"NEW_RECIPE_SEQ","");
				}				
			}
			
		}
		//ds_ItemList.AddRow();
		ed_wonga.value=ds_ItemList.getSum("PERSON_PRICE");
		//조리법갖고오기
		fn_Jory();
	}	
}
// 조리법갖고오기 콜백
function fn_call_back_T0_jory(cd,errmsg)
{
	if(cd!=0) 
	{
		return;
	}
	else
	{
		// //신규추가 일경우 인서트 시켜준다 아니면 들어온 데이타 그대로 보여준다
		if(v_gbn==1)
		{
			Copy(ds_tempCook,"ds_CookMethod");
			ds_CookMethod.clearData();
			if(grd_List.formatid=="StdRecipe")
			{			
				for(i=0;i<ds_tempCook.getRowCount();i++)
				{
					ds_CookMethod.addRow();
					ds_CookMethod.copyRow(i,ds_tempCook,i);
				}
				ds_Recipe.setColumn(0,"RECIPE_CD","");//가장 마지막 조리법 처리후 레시피코드 리셋
			}
			else
			{
				for(i=0;i<ds_tempCook.getRowCount();i++)
				{
					ds_CookMethod.addRow();
					ds_CookMethod.copyRow(i,ds_tempCook,i);
				}
				ds_Recipe.setColumn(0,"NEW_RECIPE_SEQ","");//가장 마지막 조리법 처리후 미확정레시피순번 리셋				
			}
		}
	}	
}
// phf가져오기 콜백
function fn_call_back_T0_phf(cd,errmsg)
{
	if(cd!=0) 
	{
		return;
	}
	else
	{
	}	
}
// 레시피코드로 참조자료 조회
function fn_T0_Search(gbn,RECIPE)
{
    if( gfn_length(gfn_trim(RECIPE))==0 || gfn_trim(RECIPE)==null )
    {
		// 이루틴은 무조건 레시피 명이 들어와야 합니다.
		return;
    }
	v_ImgNM="";
	// if(ds_Recipe.GetUpdate()		==true ||
		// ds_ItemList.GetUpdate()		==true ||
		// ds_CookMethod.GetUpdate()	==true ||
		// ds_phf.GetUpdate()			==true	)
	// {
		// if(g_Confirm("02","변경된 데이타가 있습니다.\n\n저장하시겠습니까?"))
		// {
			// fn_T0_Save();
			// return;
		// }
	// }
	if(grd_List.formatid=="StdRecipe")
	{
		v_gbn=gbn;
		v_RECIPE=RECIPE;
		ds_cond.clearData();
		ds_cond.addRow();
		ds_cond.setColumn(0,"RECIPE_NAME",RECIPE);
		ds_cond.setColumn(0,"RECIPE_CD",ds_MainRecipeList.getColumn(ds_MainRecipeList.rowposition,"RECIPE_CD"));
		fsp_clear(this);
		ds_Recipe.clearData();
		fsp_addSearch(this,"fs/fsr:FSR00010E_S014");
		fsp_callService(this,"","","ds_cond=ds_cond","ds_Recipe=ds_Recipe","","fn_call_back_T0_search","",true);
	}
	else
	{
		v_gbn=gbn;
		v_RECIPE=RECIPE;
		ds_cond.clearData();
		ds_cond.addRow();
		ds_cond.setColumn(0,"RECIPE_NAME",RECIPE);
		ds_cond.setColumn(0,"NEW_RECIPE_SEQ",parseInt(ds_MainRecipeList.getColumn(ds_MainRecipeList.rowposition,"NEW_RECIPE_SEQ")));
		fsp_clear(this);
		ds_Recipe.clearData();
		fsp_addSearch(this,"fs/fsr:FSR00010E_S030");
		fsp_callService(this,"","","ds_cond=ds_cond","ds_Recipe=ds_Recipe","","fn_call_back_T0_search","",true);
		
	}
}
//	레시피자재참조자료 조회
function fn_Jajea()
{
	if(grd_List.formatid=="StdRecipe")
	{
		fsp_clear(this);
		ds_ItemList.clearData();
		fsp_addSearch(this,"fs/fsr:FSR00010E_S010");
		fsp_callService(this,"","","ds_cond=ds_cond","ds_ItemList=ds_ItemList","","fn_call_back_T0_jajea","",true);	
	}
	else
	{
		fsp_clear(this);
		ds_ItemList.clearData();
		fsp_addSearch(this,"fs/fsr:FSR00010E_S031");
		fsp_callService(this,"","","ds_cond=ds_cond","ds_ItemList=ds_ItemList","","fn_call_back_T0_jajea","",true);	
	}

}
//	레시피조리법 참조자료조회
function fn_Jory()
{
	if(grd_List.formatid=="StdRecipe")
	{
		fsp_clear(this);
		ds_CookMethod.clearData();
		fsp_addSearch(this,"fs/fsr:FSR00010E_S011");
		fsp_callService(this,"","","ds_cond=ds_cond","ds_CookMethod=ds_CookMethod","","fn_call_back_T0_jory","",true);	
	}
	else
	{
		fsp_clear(this);
		ds_CookMethod.clearData();
		fsp_addSearch(this,"fs/fsr:FSR00010E_S032");
		fsp_callService(this,"","","ds_cond=ds_cond","ds_CookMethod=ds_CookMethod","","fn_call_back_T0_jory","",true);			
	}
	fn_Phf();
}
function fn_Phf()
{
	fsp_clear(this);
	ds_phf.clearData();
	//trace("------------------> "+common_btn.rdo_RecipeGbn.Index);
	// 2008-05-16 박지영
	// if(common_btn.rdo_RecipeGbn.Index==0)
	// {
	// tit_addSearchActionInfo(this,"fs/fsr:FSR00010E_S015");
	// }
	// else
	// {
	fsp_addSearch(this,"fs/fsr:FSR00010E_S037");
	// }
	fsp_callService(this,"","","ds_cond=ds_cond","ds_phf=ds_phf","","fn_call_back_T0_phf","",true);
}
function rdo_Detail_OnChanged(obj:Radio, e:ItemChangeEventInfo)
{
	// 2008-05-16 박지영
	switch(e.postindex)
	{
		case 0:
			div_Material.url="U_FSR::FSR00042E.xfdl";
			div_Material.position.height = 300;
			parent.div_Detail.resetScroll();
			break;
		case 1:
			div_Material.url="U_FSR::FSR00043E.xfdl";
			div_Material.position.height = 300;
			parent.div_Detail.resetScroll();
			break;
		case 2:
			div_Material.url="U_FSR::FSR00044E.xfdl";
			div_Material.position.height = 800;
			parent.div_Detail.resetScroll();
			
			var sFileName = cbo_CuisineType.value;
			div_Material.fn_Get_Recipe_Cuisine_Orpn_Image(sFileName);
			break;
        default :
            break;
	}		
}

function btn_ratio_OnClick(obj:Button, e:ClickEventInfo)
{
	if(ds_Recipe.getRowCount()==0)
	{
		return;
	}
	if(ds_Recipe.getColumn(0,"RECIPE_CLASS")=="H" )
	{
		g_Message("EE","HMR은 조회만 가능합니다.");
		return ;
	}	
	var v_NQ=0;
	if(ed_ratio.visible==true)
	{
		//화면에서 가리고 반영하기
		ed_ratio.visible=false;
		st_Ratio.visible=false;
		if(gfn_length(gfn_trim(ed_ratio.value))==0 || gfn_trim(ed_ratio.value)==null )
		{
			return;
		}
		for(i=0;i<ds_ItemList.getRowCount();i++)
		{
			v_NQ=Math.round((toNumber(ds_ItemList.getColumn(i,"NEED_QTY"))*toNumber(ed_ratio.value))/100,2);
			ds_ItemList.setColumn(i,"NEED_QTY",v_NQ);
		}
		ed_ratio.value="";
	}
	else
	{
		ed_ratio.visible=true;
		st_Ratio.visible=true;
	}
	
	ed_ratio.setFocus();
}
// PHF관리 ds_recipe에 반영하기
function ds_phf_OnColumnChanged(obj:Dataset, e:DSColChangeEventInfo)
{
	switch(e.row)
	{
		case 0:
			if(e.columnid=="PHF")
			{
				ds_Recipe.setColumn(0,"PHF_MGMT1",e.newvalue);
			}
			break;
		case 1:
			if(e.columnid=="PHF")
			{
				ds_Recipe.setColumn(0,"PHF_MGMT2",e.newvalue);
			}
			break;
		case 2:
			if(e.columnid=="PHF")
			{			
				ds_Recipe.setColumn(0,"PHF_MGMT3",e.newvalue);
			}
			break;
		case 3:
			if(e.columnid=="PHF")
			{			
				ds_Recipe.setColumn(0,"PHF_MGMT4",e.newvalue);
			}
			break;
		case 4:
			if(e.columnid=="PHF")
			{		
				ds_Recipe.setColumn(0,"PHF_MGMT5",e.newvalue);
			}
			break;
        default :
            break;
	}
	var v_1=ds_Recipe.getColumn(0,"PHF_MGMT1");
	var v_2=ds_Recipe.getColumn(0,"PHF_MGMT2");
	var v_3=ds_Recipe.getColumn(0,"PHF_MGMT3");
	var v_4=ds_Recipe.getColumn(0,"PHF_MGMT4");
	var v_5=ds_Recipe.getColumn(0,"PHF_MGMT5");
	
	if( v_1=='Y' && v_2=='N')
	{
		ds_Recipe.setColumn(0,"PHF","Y");
	}
	else
	{
		if(v_1=='Y' || v_2=='N')
		{
			if(v_3=='Y' || v_4=='Y' || v_5=='Y')
			{
				ds_Recipe.setColumn(0,"PHF","Y");
			}
			else
			{
				ds_Recipe.setColumn(0,"PHF","N");
			}
		}
		else
		{
			ds_Recipe.setColumn(0,"PHF","N");
		}
	}
	
}

function btn_RecipePop_OnClick(obj:Button, e:ClickEventInfo)
{
 // 신규추가만 확인 fsr_std_recipe_mst에 존재하는지만 확인하고 신규추가 입력은 막지 않습니다.
 // 단 표준레시피로 확정 이동시 표준레시피에 존해하면 이동확정불가
	if(ds_Recipe.getRowCount()==0)
	{
		return;
	}
	//trace("초기화 v_gbn="+v_gbn);
	if(v_gbn==0)
	{
		return;
	}
	if(gfn_length(cbo_RecipeClass.value)==0)
	{
		//alert(fn_AlertMsg("044"));
		g_Message("EE", fn_AlertMsg("044"));
		return;
	}
	if(gfn_length(gfn_trim(ed_RecipeNM.value))==0 || gfn_trim(ed_RecipeNM.value)==null )
	{
		//alert(fn_AlertMsg("009"));
		g_Message("EE", fn_AlertMsg("009"));
		return;
	}
	ds_input.clear();
	ds_input.addColumn("RECIPE_NAME","STRING");
	ds_input.addColumn("RECIPE_CLASS","STRING");
	ds_input.addRow();
	ds_input.setColumn(0,"RECIPE_NAME",gfn_trim(ed_RecipeNM.value));
	ds_input.setColumn(0,"RECIPE_CLASS",gfn_trim(cbo_RecipeClass.value));
	http.Sync=true;
	fsp_clear(this);
	ds_Valid.clearData();
	fsp_addSearch(this,"fs/fsr:FSR00010E_S016");
	fsp_callService(this,"","","ds_input=ds_input","ds_Valid=ds_Valid","","fn_call_back","",true);
	http.Sync=false;
		
	if(ds_Valid.getRowCount()>0)
	{
		//alert(fn_AlertMsg("010"));
		g_Message("EE", fn_AlertMsg("010"));
		ed_RecipeNM.value="";				// 2008-05-16 박지영
		btn_RecipePop.userdata = "";		// 2008-05-16 박지영
		return;
	}
	else
	{
		//alert(fn_AlertMsg("011"));
		g_Message("EE", fn_AlertMsg("011"));	
		btn_RecipePop.userdata = "ok";		// 2008-05-16 박지영
		return;
	}
} 
function ds_ItemList_OnColumnChanged(obj:Dataset, e:DSColChangeEventInfo)
{
	var v_EQ=0;	// EDIBLE_QTY		가식부량 1인소요량*폐기율==>NEED_QTY*(100-disuse_rate)
	var v_PP=0; // PERSON_PRICE 	인원가	자재g당단가*1인소요량==>GRAM_PRICE*NEED_QTY
	var v_CC=0; // CAL_CALC			에너지    100g:기본에너지=가식부량:계산할에너지==>CAL_CALC=(CAL*EDIBLE_QTY)/100

	switch(e.columnid)
	{
		// case "PERSON_PRICE":	
			// ed_wonga.value=ds_ItemList.Sum("PERSON_PRICE");
			// break;
		// case "EDIBLE_QTY":
			// v_CC=round((ds_ItemList.GetColumn(ds_ItemList.row,"CAL")*ds_ItemList.GetColumn(ds_ItemList.row,"NEED_QTY")*((100-ds_ItemList.GetColumn(ds_ItemList.row,"DISUSE_RATE"))/100))/100,2);
			// ds_ItemList.SetColumn(ds_ItemList.row,"CAL_CALC",v_CC);			
			// break;
		// case "NEED_QTY":	// 1인소요량
			// v_PP=round(ds_ItemList.GetColumn(ds_ItemList.row,"GRAM_PRICE")*ds_ItemList.GetColumn(ds_ItemList.row,"NEED_QTY"),2);
			// ds_ItemList.SetColumn(ds_ItemList.row,"PERSON_PRICE",v_PP);
			// v_EQ=round(ds_ItemList.GetColumn(ds_ItemList.row,"NEED_QTY")*((100-ds_ItemList.GetColumn(ds_ItemList.row,"DISUSE_RATE"))/100),2);
			// ds_ItemList.SetColumn(ds_ItemList.row,"EDIBLE_QTY",v_EQ);			
			// break;
		case "PERSON_PRICE":	
			ed_wonga.value=ds_ItemList.getSum("PERSON_PRICE");
			break;
		case "EDIBLE_QTY":
			v_CC=Math.round((ds_ItemList.getColumn(e.row,"CAL")*ds_ItemList.getColumn(e.row,"NEED_QTY")*((100-ds_ItemList.getColumn(e.row,"DISUSE_RATE"))/100))/100,2);
			ds_ItemList.setColumn(e.row,"CAL_CALC",v_CC);			
			break;
		case "NEED_QTY":	// 1인소요량
			v_PP=Math.round(ds_ItemList.getColumn(e.row,"GRAM_PRICE")*ds_ItemList.getColumn(e.row,"NEED_QTY"),0);
			ds_ItemList.setColumn(e.row,"PERSON_PRICE",v_PP);
			//OnColumnChanged에서 setColumn시 이벤트 발생안함으로 같이 변경해준다.
			ed_wonga.value=ds_ItemList.getSum("PERSON_PRICE");
			
			v_EQ=Math.round(ds_ItemList.getColumn(e.row,"NEED_QTY")*((100-ds_ItemList.getColumn(e.row,"DISUSE_RATE"))/100),2);
			ds_ItemList.setColumn(e.row,"EDIBLE_QTY",v_EQ);			
			//OnColumnChanged에서 setColumn시 이벤트 발생안함으로 같이 변경해준다.
			v_CC=Math.round((ds_ItemList.getColumn(e.row,"CAL")*ds_ItemList.getColumn(e.row,"NEED_QTY")*((100-ds_ItemList.getColumn(e.row,"DISUSE_RATE"))/100))/100,2);
			ds_ItemList.setColumn(e.row,"CAL_CALC",v_CC);	
			break;		
        default :
            break;
	}
}

function btn_CustPop_OnClick(obj)
{
	if(ds_Recipe.getRowCount()==0)
	{
		return;
	}
// 사원조회
	var arg	 = {NM_KOR:gfn_trim(Edit0.value)};
	var v_rtn=gfn_dialog("", "U_FSR::FSR00018P.xfdl",arg);
	var v_result=gfn_split(v_rtn,";");// 0 사번 1 성명 2 영문명 3 주민번호
	
	if( gfn_length(gfn_trim(v_rtn))==0 || gfn_trim(v_rtn)==null )
	{
		return;
	}
	
	ds_Recipe.setColumn(0,"SABUN",v_result[0]);
	ds_Recipe.setColumn(0,"NM_KOR",v_result[1]);	
}

function grd_jajea_OnCellClick(obj:Grid, e:GridClickEventInfo)
{
	fn_grd_jajea_OnCellClick(obj, e.row, e.cell);
}

function fn_grd_jajea_OnCellClick(obj, nRow, nCell)
{
	if(ds_Recipe.getColumn(0,"RECIPE_CLASS")=="H" )
	{
		return;
	}
	var ActionVal="";
	var v_rtn="";
	var v_result="";
	ds_ItemList.rowposition=nRow;
	switch(nCell)
	{
		case 2:
			ds_ItemList.deleteRow(ds_ItemList.rowposition);
			break;
		case 4:
			if(GetRowType(ds_ItemList,nRow)!="insert")
			{
				return;
			}
			v_rtn=gfn_dialog("", "U_FSR::FSR00014P.xfdl",{fstrPriceGbn:'N'});
			if(gfn_length(gfn_trim(v_rtn))==0 || gfn_trim(v_rtn)==null )
			{
				return;
			}
			// 0 자재코드 ,1 자재명, 2 규격, 3 단위 ,4 금지, 5 100g에너지, 6 폐기율, 7 g당단가, 8 자재특성 9 1인소요량 12 금지시작 13 금지종료 14 금지사유
			v_result=gfn_split(v_rtn,";");
			if(ds_ItemList.findRow("ITEM_CODE",v_result[0])!=-1)
			{
				//alert(fn_AlertMsg("012"));
				g_Message("EE", fn_AlertMsg("012"));
				return;
			}
			ds_ItemList.setColumn(nRow,"ITEM_CODE",gfn_trim(v_result[0]));	
			ds_ItemList.setColumn(nRow,"ITEM_NAME",gfn_trim(v_result[1]));	
			ds_ItemList.setColumn(nRow,"ITEM_SIZE",gfn_trim(v_result[2]));	
			ds_ItemList.setColumn(nRow,"PO_UOM",gfn_trim(v_result[3]));	
			ds_ItemList.setColumn(nRow,"RESTRICT_YN",gfn_trim(v_result[4]));			
			ds_ItemList.setColumn(nRow,"CAL",gfn_trim(v_result[5]));	
			ds_ItemList.setColumn(nRow,"DISUSE_RATE",gfn_trim(v_result[6]));	
			ds_ItemList.setColumn(nRow,"GRAM_PRICE",gfn_trim(v_result[7]));	
			//ds_ItemList.setColumn(nRow,"FEATURE_NAME",gfn_trim(v_result[8]));	
			ds_ItemList.setColumn(nRow,"NEED_QTY",gfn_trim(v_result[9]));
			ds_ItemList.setColumn(nRow,"RESTRICT_START",gfn_trim(v_result[12]));
			ds_ItemList.setColumn(nRow,"RESTRICT_END",gfn_trim(v_result[13]));
			ds_ItemList.setColumn(nRow,"RESTRICT_REASON",gfn_trim(v_result[14]));
			
			//trace(v_result[4]);
			break;
		case 11:
			v_rtn=gfn_dialog("", "U_FSR::FSR00015P.xfdl","");
			if(gfn_length(gfn_trim(v_rtn))==0 || gfn_trim(v_rtn)==null )
			{
				return;
			}			
			v_result=gfn_split(v_rtn,";");	// 0 그룹코드 1 그룹명 2 상세코드 3 상세코드명
			ds_ItemList.setColumn(nRow,"CUT_SPEC",gfn_trim(v_result[2]));
			ds_ItemList.setColumn(nRow,"CUT_SPEC_NAME",gfn_trim(v_result[3]));
			break;
        default :
            break;
			
	}	
}

function grd_jajea_OnKeyDown(obj:Grid, e:KeyEventInfo)
{
	if(e.keycode==13 && grd_jajea.getCellPos()!=9)
	{
		fn_addItem();
	}
	else if(e.keycode==13 && grd_jajea.getCellPos()==9)
	{
		grd_jajea.moveToNextCell();
	}
}
function fn_addItem()
{
	if(ds_Recipe.getColumn(0,"RECIPE_CLASS")=="H" )
	{
		g_Message("EE","HMR은 조회만 가능합니다.");
		return false;
	}
	if(ds_Recipe.getRowCount()==0)
	{
		return;
	}
	if(grd_List.formatid=="StdRecipe")
	{
		if(ds_ItemList.findRowExpr("gfn_length(gfn_trim(ITEM_CODE))==0 || gfn_trim(ITEM_CODE)==null")!=-1)
		{
			return;
		}
		ds_ItemList.addRow();
		ds_ItemList.setColumn(ds_ItemList.rowposition,"RECIPE_CD",ds_Recipe.getColumn(0,"RECIPE_CD"));
		ds_ItemList.setColumn(ds_ItemList.rowposition,"NEED_QTY",1);// 이베트 처리 문제로 1세팅
		// ds_ItemList.SetColumn(ds_ItemList.row,"PHOTO_PATH",ds_Recipe.GetColumn(0,"PHOTO_PATH"));
		// ds_ItemList.SetColumn(ds_ItemList.row,"SPHOTO_PATH",ds_Recipe.GetColumn(0,"SPHOTO_PATH"));
	}
	else
	{
		if(ds_ItemList.findRowExpr("gfn_length(gfn_trim(ITEM_CODE))==0 || gfn_trim(ITEM_CODE)==null")!=-1)
		{
			return;
		}
		ds_ItemList.addRow();
		ds_ItemList.setColumn(ds_ItemList.rowposition,"NEW_RECIPE_SEQ",ds_Recipe.getColumn(0,"NEW_RECIPE_SEQ"));
		//ds_ItemList.SetColumn(ds_ItemList.row,"NEED_QTY",1);// 이베트 처리 문제로 1세팅
		// ds_ItemList.SetColumn(ds_ItemList.row,"PHOTO_PATH",ds_Recipe.GetColumn(0,"PHOTO_PATH"));
		// ds_ItemList.SetColumn(ds_ItemList.row,"SPHOTO_PATH",ds_Recipe.GetColumn(0,"SPHOTO_PATH"));			
	}
	
	/* 자재추가시 자동 자재추가 팝업 호출 */
	fn_grd_jajea_OnCellClick(grd_jajea, ds_ItemList.rowposition, 4);
}
function btn_RecipeElement_OnClick(obj:Button, e:ClickEventInfo)
{
	if(ds_Recipe.getRowCount()==0)
	{
		return;
	}
	var v_arg = {IN_RECIPE_CD:ds_Recipe.getColumn(0,"NEW_RECIPE_SEQ"), gbn:'1' };
	gfn_dialog("", "U_FSR::FSR00012P.xfdl",v_arg);
}

function ds_Recipe_OnLoadCompleted(obj:Dataset, e:DSLoadEventInfo)
{
	if(v_gbn==1)// 0 조회 일대 1 신규추가 일때
	{
		ds_phf.setColumn(0,"PHF_MGMT1", ds_Recipe.getColumn(0,"PHF_MGMT1"));
		ds_phf.setColumn(0,"PHF_MGMT2", ds_Recipe.getColumn(0,"PHF_MGMT2"));
		ds_phf.setColumn(0,"PHF_MGMT3", ds_Recipe.getColumn(0,"PHF_MGMT3"));
		ds_phf.setColumn(0,"PHF_MGMT4", ds_Recipe.getColumn(0,"PHF_MGMT4"));
		ds_phf.setColumn(0,"PHF_MGMT5", ds_Recipe.getColumn(0,"PHF_MGMT5"));
		ds_phf.applyChange();
		ds_phf.reset();
	}

}

function fn_filter()
{
	var strCode1=ds_Recipe.getColumn(0,"RECIPE_CLASS");
	var strCode2=ds_Recipe.getColumn(0,"RECIPE_TYPE");
	switch(gfn_trim(strCode1))
	{
		case "H":
			ds_RecipeType.filter("SET1=='YN' || SET1=='Y'");
			break;
		case "":
			ds_RecipeType.filter("");
			break;
		default:
			ds_RecipeType.filter("SET1=='YN' || SET1=='N'"); 
			break;
	}
	switch(gfn_trim(strCode2))
	{
		case "":
			ds_CookClass.filter("");
			break;
		default:
			ds_CookClass.filter("gfn_length(SET1)==0 || SET1=='"+strCode2+"'");
			break;
	}
}
function common_OnChanged(obj:Combo, e:ItemChangeEventInfo)
{
	if(gfn_length(gfn_trim(e.postvalue))==0)		// 2008-01-16 박지영
	{
		obj.index=e.preindex;
	}
	
	if(obj.name=="cbo_CuisineType")
	{
		if(gfn_length(cbo_RecipeType.value)==0)
		{
			obj.index=e.preindex;
		}
		
// 		var sFileName = cbo_CuisineType.value;
// 		div_Material.fn_Get_Recipe_Cuisine_Orpn_Image(sFileName);
	}
	if(obj.name=="cbo_RecipeType")
	{
		if(gfn_length(cbo_RecipeType.value)==0)
		{
			ds_CookClass.filter(""); // ds_RecipeType.UnFilter();
		}
		else
		{
			ds_CookClass.filter("gfn_length(SET1)==0 || SET1=='"+e.postvalue+"'");
		}
	}
}
/******************************************************
 *  서버로 파일 삭제 처리 
 * @param  serverSaveDir  서버에 저장할 디렉토리 별명 
 * @param  serverFileName 서버의 파일명 
 * @param  isNeedRtn 처리 결과 (TRUE : 삭제 결과 확인시  FALSE:확인불필요
 * @return  필요시 처리 성공 여부 : true / 그외 false 
 ******************************************************/
function btn_ImgDelete_OnClick(obj:Button, e:ClickEventInfo)
{
	var v_path="";
	if(ds_Recipe.getRowCount()==0)
	{
		return;
	}
	if(gfn_dsIsUpdated(ds_Recipe)==true || gfn_dsIsUpdated(ds_ItemList)==true || gfn_dsIsUpdated(ds_CookMethod)==true)
	{
		g_Message("02",fn_AlertMsg("047"));
		return;
	}
	if (!fn_CheckStatus())
	{
		return;
	}
	if(grd_List.formatid=="StdRecipe")
	{
		v_path="FSR_STD_RECIPE_MST";
	}
	else
	{
		v_path="FSR_NEW_RECIPE_MST";
	}
	// if(length(trim(ds_Recipe.GetColumn(0,"RECIPE_CD")))>0)
	// {
		if(g_Confirm("01",fn_AlertMsg("050"))==false)
		{
			return;
		}
	//	trace(ds_Recipe.GetColumn(0,"SPHOTO_PATH"));
		if(fsp_fileDelete(v_path, ds_Recipe.getColumn(0,"SPHOTO_PATH"),true))
		{
			ds_Recipe.setColumn(0,"SPHOTO_PATH","");
			ds_Recipe.setColumn(0,"PHOTO_PATH","");
			Image0.image="URL('theme://convertImages/img_NoImageBig.png')";
			Image0.text="이미지가 없습니다.";
			fn_T0_Save();
		}
		else
		{
			if(gfn_trim(ds_Recipe.getColumn(0,"SPHOTO_PATH"))==null || gfn_length(gfn_trim(ds_Recipe.getColumn(0,"SPHOTO_PATH")))==0)
			{
				return;
			}
			else
			{
				//alert(fn_AlertMsg("017"));			
				g_Message("EE", fn_AlertMsg("017"));
			}
			return;
		}
	//}

}
/******************************************************
 *  서버로 파일 전송 처리 
 * @param  httpfileObj  http file 처리 객체  
 * @param  serverSaveDir  서버에 저장할 디렉토리 별명 
 * @param  localFilePath 로컬 경로 
 * @param  localFileName 로컬 파일명 
 * @param  sendFileName  서버에 전송하고 싶은 이름 
 * @param  fileProcType  서버에서 기존 파일을 처리하는 타입 정의  
           D - deleteFileName에 기술된 파일명이 존재할 경우만 파일 삭제 ( 기본 값 )
           A - 전송하는 파일명으로 해당 파일이 존재할 경우 삭제 후 저장 
               ( 파일명은 서버에 정의된 되로 타임을 추가해야 할 경우 추가한다. )
               또한, deleteFileName이 존재할 경우 함께 삭제한다. 
           U - 전송하는 파일명으로 해당 파일이 존재할 경우 삭제 후 저장 
               ( 파일명은 무조건 Client를 기준으로 저장한다. )
               또한, deleteFileName이 존재할 경우 함께 삭제한다. 
           N - 전송하는 파일명으로 해당 파일이 존재할 경우 저장하지 않는다. 
               ( 파일명은 무조건 Client를 기준으로 저장한다. )
               또한, deleteFileName이 존재할 경우 함께 삭제한다. 
 * @param  deleteFileName 서버에서 삭제해야 하는 파일 명
           isDelete가 true이면서 해당 파일명이 기술되어 있지 않을 경우 
           기존 파일을 삭제한다. 
 * @return  서버에 저장된 파일 정보 Array 
            0 - 성공 : S / 실패 : E 
            1 - 서버에 저장된 실제 경로 
            2 - 서버에 저장된 실제 파일명 
            3 - 서버에 저장된 파일 사이즈 
******************************************************/
function btn_ImgInsert_OnClick(obj:Button, e:ClickEventInfo)
{
	if(ds_Recipe.getRowCount()==0)
	{
		return;
	}
	if(gfn_dsIsUpdated(ds_Recipe)==true || gfn_dsIsUpdated(ds_ItemList)==true || gfn_dsIsUpdated(ds_CookMethod)==true)
	{
		g_Message("02",fn_AlertMsg("047"));
		return;
	}
	if(gfn_length(gfn_trim(ds_Recipe.getColumn(0,"SPHOTO_PATH")))>0)
	{
		g_Message("EE","이미지 정보를 삭제 하고 첨부하세요.");
		return;
	}
	if (!fn_CheckStatus())
	{
		return;
	}
	if(FileDialog.Open()==false)
	{
		return;
	}
	var v_filename=FileDialog.FileName;
	var v_filepath=FileDialog.FilePath;
	if(gfn_length(gfn_trim(v_filename))==0 || gfn_trim(v_filename)==null)
	{
		return;
	}
	//trace(v_filename);
	//trace(indexOf(v_filename,"."));
	var v_point_index=gfn_indexOf(v_filename,".");
	var v_ext=gfn_subStr(v_filename,v_point_index);
	//trace(v_ext);
	var v_path="";
	var v_savenm="";
	if(grd_List.formatid=="StdRecipe")
	{
		v_path="FSR_STD_RECIPE_MST";
		v_savenm=ds_Recipe.getColumn(0,"RECIPE_CD")+v_ext;
	}
	else
	{
		v_path="FSR_NEW_RECIPE_MST";
		v_savenm=ds_Recipe.getColumn(0,"NEW_RECIPE_SEQ")+v_ext;
	}
	// 파일 서버로 전송 
	var arr = fsp_fileWrite(HttpFile, v_path, v_filepath, v_filename,v_savenm,"U");  
//	var arr = fsp_fileWrite(HttpFile, "FSR_STD_RECIPE_MST", v_filepath, v_filename,"A0100001"+v_ext,"U");  
//	alert(arr );
	// 처리 결과 확인하기 
    if( arr[0] == "E" ) {
		//alert(fn_AlertMsg("018"));
		g_Message("EE", fn_AlertMsg("018"));
		return;
    }
	else
	{
		ds_Recipe.setColumn(0,"PHOTO_PATH",v_filename);
		ds_Recipe.setColumn(0,"SPHOTO_PATH",arr[2]);
		fn_T0_Save();
		/******************************************************
		 *  서버에서 실제 이미지 경로 가져오기 
		 * @param  serverSaveDir  서버에 저장할 디렉토리 별명 
		 * @param  fileName  보여줄 파일명 ( 옵션 )
		 * @return  서버 전제 url 경로
		 ******************************************************/
		 Image0.text="";
		 Image0.image=fsp_getServerDir(v_path,arr[2]);
	}
}
// 표준및 미확정 레세피 라디오 변경시 데이타셋 클리어
function fn_T0_Clear()
{
	// if(ds_Recipe.GetUpdate()		==true ||
		// ds_ItemList.GetUpdate()		==true ||
		// ds_CookMethod.GetUpdate()	==true ||
		// ds_phf.GetUpdate()			==true	)
	// {
		// if(g_Confirm("02","변경된 데이타가 있습니다.\n\n저장하시겠습니까?"))
		// {
			// fn_T0_Save();
		// }
	// } 
	ds_Recipe.clearData();
	ds_ItemList.clearData();
	ds_CookMethod.clearData();
	Image0.image="URL('theme://convertImages/img_NoImageBig.png')";
	Image0.text="이미지가 없습니다.";
	ed_wonga.value="";
}
/* 지원하지 않는 이벤트입니다.*/
function Image0_OnLoadError(obj,nErrorCode,strErrorMsg)
{
	Image0.text="이미지 로드에\n\n실패했습니다.";
}
function fn_ValidCheck()
{
	/*
	if(grd_List.Format=="StdRecipe" && ds_Recipe.GetRowType(0)!="insert")
	{
		// 표준레시피 저장시 데이터 체크 
		if(ds_Recipe.GetColumn(0,"RECIPE_CD").trim().length()==0 || 
					ds_Recipe.GetColumn(0,"RECIPE_CD").trim()==null)
		{
			//alert(fn_AlertMsg("031"));
			g_Message("EE", fn_AlertMsg("031"));
			return false;
		}
		if(ds_Recipe.GetColumn(0,"RECIPE_NAME").trim().length()==0 || 
					ds_Recipe.GetColumn(0,"RECIPE_NAME").trim()==null)
		{
			//alert(fn_AlertMsg("031"));
			g_Message("EE", fn_AlertMsg("031"));
			return false;
		}
		if(ds_Recipe.GetColumn(0,"RECIPE_NAME").trim().length()==0 || 
					ds_Recipe.GetColumn(0,"RECIPE_NAME").trim()==null)
		{
			//alert(fn_AlertMsg("030"));
			g_Message("EE", fn_AlertMsg("030"));
			return false;
		}
		if(ds_Recipe.GetColumn(0,"RECIPE_CLASS").trim().length()==0 || 
					ds_Recipe.GetColumn(0,"RECIPE_CLASS").trim()==null)
		{
			//alert(fn_AlertMsg("032"));
			g_Message("EE", fn_AlertMsg("032"));
			return false;
		}		
		if(ds_Recipe.GetColumn(0,"RECIPE_TYPE").trim().length()==0 || 
					ds_Recipe.GetColumn(0,"RECIPE_TYPE").trim()==null)
		{
			//alert(fn_AlertMsg("033"));
			g_Message("EE", fn_AlertMsg("033"));
			return false;
		}
		if(ds_Recipe.GetColumn(0,"CUISINE_TYPE").trim().length()==0 || 
					ds_Recipe.GetColumn(0,"CUISINE_TYPE").trim()==null)
		{
			//alert(fn_AlertMsg("034"));
			g_Message("EE", fn_AlertMsg("034"));
			return false;
		}
		// 제외
		// if(ds_Recipe.GetColumn(0,"MAIN_ITEM_CODE1").trim().length()==0 || 
					// ds_Recipe.GetColumn(0,"MAIN_ITEM_CODE1").trim()==null)
		// {
			 //  //   alert(fn_AlertMsg("035"));
			// g_Message("EE", fn_AlertMsg("035"));
			// return false;
		// }
		// if(ds_Recipe.GetColumn(0,"RECIPE_SHAPE").trim().length()==0 || 
					// ds_Recipe.GetColumn(0,"RECIPE_SHAPE").trim()==null)
		// {
			 //  //  //alert(fn_AlertMsg("036"));
			// g_Message("EE", fn_AlertMsg("036"));
			// return false;
		// }
		// if(ds_Recipe.GetColumn(0,"RECIPE_TASTE").trim().length()==0 || 
					// ds_Recipe.GetColumn(0,"RECIPE_TASTE").trim()==null)
		// {
			 //  //  //  ///alert(fn_AlertMsg("037"));
			// g_Message("EE", fn_AlertMsg("037"));
			// return false;
		// }
		// if(ds_Recipe.GetColumn(0,"RECIPE_COLOR").trim().length()==0 || 
					// ds_Recipe.GetColumn(0,"RECIPE_COLOR").trim()==null)
		// {
			 //  //  //  //  //alert(fn_AlertMsg("038"));
			// g_Message("EE", fn_AlertMsg("038"));
			// return false;
		// }
		if(ds_Recipe.GetColumn(0,"RECIPE_TEMPER").trim().length()==0 || 
					ds_Recipe.GetColumn(0,"RECIPE_TEMPER").trim()==null)
		{
			//alert(fn_AlertMsg("039"));
			g_Message("EE", fn_AlertMsg("039"));
			return false;
		}
		if(ds_Recipe.GetColumn(0,"CORE_TEMPER_YN").trim().length()==0 || 
					ds_Recipe.GetColumn(0,"CORE_TEMPER_YN").trim()==null)
		{
			//alert(fn_AlertMsg("040"));
			g_Message("EE", fn_AlertMsg("040"));
			return false;
		}
		// if(ds_Recipe.GetColumn(0,"PHF_MGMT_YN").trim().length()==0 || 
					// ds_Recipe.GetColumn(0,"PHF_MGMT_YN").trim()==null)
		// {
			//  //  //  //  // alert(fn_AlertMsg("041"));
			// g_Message("EE", fn_AlertMsg("041"));
			// return false;
		// }
		
		if(ds_ItemList.RowCount()==0)
		{
			//alert(fn_AlertMsg("042"));
			g_Message("EE", fn_AlertMsg("042"));
			return false;
		}
		if( ds_ItemList.SearchRow("length(trim(ITEM_CODE))==0")!=-1 )
		{
			//alert(fn_AlertMsg("043"));
			g_Message("EE", fn_AlertMsg("043"));
			return false;
		}		
		
		if(ds_CookMethod.RowCount()>0 && ds_CookMethod.SearchRow("length(trim(CUISINE_DESC))==0")!=-1 )
		{
			//alert(fn_AlertMsg("014"));
			g_Message("EE", fn_AlertMsg("014"));
			return false;
		}		
	}
	else
	{
	*/
		// 미확정레시피 저장시 데이터 체크 
		if(gfn_length(gfn_trim(ds_Recipe.getColumn(0,"RECIPE_NAME")))==0 || 
					gfn_trim(ds_Recipe.getColumn(0,"RECIPE_NAME"))==null)
		{
			//alert(fn_AlertMsg("031"));
			g_Message("EE","레시피명을 확인해주세요.");
			return false;
		}
		// 2008-01-16 박지영 - 레시피명체크
		if (GetRowType(ds_Recipe,ds_Recipe.rowposition)== "insert" && btn_RecipePop.userdata != "ok")
		{
			g_Message("EE","레시피명을 확인해주세요.");
			btn_RecipePop.setFocus();
			return false;
		}
		
		// 2008-01-16 박지영 - 레시피분류
		if(gfn_length(gfn_trim(ds_Recipe.getColumn(0,"RECIPE_CLASS")))==0 || 
					gfn_trim(ds_Recipe.getColumn(0,"RECIPE_CLASS"))==null)
		{
			g_Message("EE","레시피분류를 입력하세요.");
			cbo_RecipeClass.setFocus();
			return false;
		}

		// 2008-01-16 박지영 - 레시피유형
		if(gfn_length(gfn_trim(ds_Recipe.getColumn(0,"RECIPE_TYPE")))==0 || 
					gfn_trim(ds_Recipe.getColumn(0,"RECIPE_TYPE"))==null)
		{
			g_Message("EE","레시피유형를 입력하세요.");
			cbo_RecipeType.setFocus();
			return false;
		}

		// 2008-01-16 박지영 - 조리법유형
		if(gfn_length(gfn_trim(ds_Recipe.getColumn(0,"CUISINE_TYPE")))==0 || 
					gfn_trim(ds_Recipe.getColumn(0,"CUISINE_TYPE"))==null)
		{
			g_Message("EE","조리법유형를 입력하세요.");
			cbo_CuisineType.setFocus();
			return false;
		}
		
		if(ds_ItemList.getRowCount()==0)
		{
			//alert(fn_AlertMsg("042"));
			g_Message("EE", fn_AlertMsg("042"));
			return false;
		}
		if( ds_ItemList.findRowExpr("gfn_length(gfn_trim(ITEM_CODE))==0")!=-1 )
		{
			//alert(fn_AlertMsg("043"));
			g_Message("EE", fn_AlertMsg("043"));
			return false;
		}		
		if(ds_CookMethod.getRowCount()==0)	// 2008-01-16 박지영
		{
			g_Message("EE","조리법을 입력해주십시오.");
			return false;
		}		
		if(ds_CookMethod.getRowCount()>0 && ds_CookMethod.findRowExpr("gfn_length(gfn_trim(CUISINE_DESC))==0")!=-1 )
		{
			//alert(fn_AlertMsg("014"));
			g_Message("EE", fn_AlertMsg("014"));
			return false;
		}
	//}
	return true;
}
function fn_ValidCheck_Conf()
{
	// 미확정레시피 표준레시피로 확정시 데이터 체크 
	if(gfn_length(gfn_trim(ds_Recipe.getColumn(0,"RECIPE_NAME")))==0 || 
				gfn_trim(ds_Recipe.getColumn(0,"RECIPE_NAME"))==null)
	{
		//alert(fn_AlertMsg("031"));
		g_Message("EE", fn_AlertMsg("031"));
		return false;
	}
	if(gfn_length(gfn_trim(ds_Recipe.getColumn(0,"RECIPE_NAME")))==0 || 
				gfn_trim(ds_Recipe.getColumn(0,"RECIPE_NAME"))==null)
	{
		//alert(fn_AlertMsg("030"));
		g_Message("EE", fn_AlertMsg("030"));
		return false;
	}
	if(gfn_length(gfn_trim(ds_Recipe.getColumn(0,"RECIPE_CLASS")))==0 || 
				gfn_trim(ds_Recipe.getColumn(0,"RECIPE_CLASS"))==null)
	{
		//alert(fn_AlertMsg("032"));
		g_Message("EE", fn_AlertMsg("032"));
		return false;
	}		
	if(gfn_length(gfn_trim(ds_Recipe.getColumn(0,"RECIPE_TYPE")))==0 || 
				gfn_trim(ds_Recipe.getColumn(0,"RECIPE_TYPE"))==null)
	{
		//alert(fn_AlertMsg("033"));
		g_Message("EE", fn_AlertMsg("033"));
		return false;
	}
	if(gfn_length(gfn_trim(ds_Recipe.getColumn(0,"CUISINE_TYPE")))==0 || 
				gfn_trim(ds_Recipe.getColumn(0,"CUISINE_TYPE"))==null)
	{
		//alert(fn_AlertMsg("034"));
		g_Message("EE", fn_AlertMsg("034"));
		return false;
	}
	// if(ds_Recipe.GetColumn(0,"MAIN_ITEM_CODE1").trim().length()==0 || 
				// ds_Recipe.GetColumn(0,"MAIN_ITEM_CODE1").trim()==null)
	// {
		//  //  //  //  //alert(fn_AlertMsg("035"));
		// g_Message("EE", fn_AlertMsg("035"));
		// return false;
	// }
	// if(ds_Recipe.GetColumn(0,"RECIPE_SHAPE").trim().length()==0 || 
				// ds_Recipe.GetColumn(0,"RECIPE_SHAPE").trim()==null)
	// {
		 //  //  //alert(fn_AlertMsg("036"));
		// g_Message("EE", fn_AlertMsg("036"));
		// return false;
	// }
	// if(ds_Recipe.GetColumn(0,"RECIPE_TASTE").trim().length()==0 || 
				// ds_Recipe.GetColumn(0,"RECIPE_TASTE").trim()==null)
	// {
		 //  //  //  //alert(fn_AlertMsg("037"));
		// g_Message("EE", fn_AlertMsg("037"));
		// return false;
	// }
	// if(ds_Recipe.GetColumn(0,"RECIPE_COLOR").trim().length()==0 || 
				// ds_Recipe.GetColumn(0,"RECIPE_COLOR").trim()==null)
	// {
		 //  //  //  //alert(fn_AlertMsg("038"));
		// g_Message("EE", fn_AlertMsg("038"));
		// return false;
	// }
	if(gfn_length(gfn_trim(ds_Recipe.getColumn(0,"RECIPE_TEMPER")))==0 || 
				gfn_trim(ds_Recipe.getColumn(0,"RECIPE_TEMPER"))==null)
	{
		//alert(fn_AlertMsg("039"));
		g_Message("EE", fn_AlertMsg("039"));
		return false;
	}
	if(gfn_length(gfn_trim(ds_Recipe.getColumn(0,"CORE_TEMPER_YN")))==0 || 
				gfn_trim(ds_Recipe.getColumn(0,"CORE_TEMPER_YN"))==null)
	{
		//alert(fn_AlertMsg("040"));
		g_Message("EE", fn_AlertMsg("040"));
		return false;
	}
	// if(ds_Recipe.GetColumn(0,"PHF_MGMT_YN").trim().length()==0 || 
				// ds_Recipe.GetColumn(0,"PHF_MGMT_YN").trim()==null)
	// {
		  //  //  // //alert(fn_AlertMsg("041"));
		// g_Message("EE", fn_AlertMsg("041"));
		// return false;
	// }
	
	if(ds_ItemList.getRowCount()==0)
	{
		//alert(fn_AlertMsg("042"));
		g_Message("EE", fn_AlertMsg("042"));
		return false;
	}
	if( ds_ItemList.findRowExpr("gfn_length(gfn_trim(ITEM_CODE))==0")!=-1 )
	{
		//alert(fn_AlertMsg("043"));
		g_Message("EE", fn_AlertMsg("043"));
		return false;
	}		
	
	if(ds_CookMethod.getRowCount()>0 && ds_CookMethod.findRowExpr("gfn_length(gfn_trim(CUISINE_DESC))==0")!=-1 )
	{
		//alert(fn_AlertMsg("014"));
		g_Message("EE", fn_AlertMsg("014"));
		return false;
	}
	return true;
}
function grd_jajea_OnHeadClick(obj:Grid, e:GridClickEventInfo)
{
	//TRACE(nCell);
	switch(e.cell)
	{
		case 0:
			gfn_exportExcel(grd_jajea, "sheet1");
			break;
		case 2:
			if(obj.userdata==true)
			{
				obj.userdata=false;
			}
			else
			{
				obj.userdata=true;
			}
			Sort(eval(obj.binddataset),"ITEM_CODE",obj.userdata);
			break;
		case 10:
			if(obj.userdata==true)
			{
				obj.userdata=false;
			}
			else
			{
				obj.userdata=true;
			}
			Sort(eval(obj.binddataset),"CUT_SPEC",obj.userdata);
			break;
		default:
			gfn_gridSort(obj, e); //(eval(obj.binddataset), obj, e.cell);
			break;
	}
}


function ds_ItemList_CanColumnChange(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	if(ds_Recipe.getColumn(0,"RECIPE_CLASS")=="H" )
	{
		//trace("3<======");
		g_Message("EE","HMR은 조회만 가능합니다.");
		return false;
	}	
	if(strColumnID=="NEED_QTY")
	{
		if(toNumber(varNewValue) <= 0 )
		{
			g_Message("EE","0보다 큰값을 입력하세요.");
			return false;
		}
	}
}

function Button0_OnClick(obj:Button, e:ClickEventInfo)
{
	if(GetRowType(ds_Recipe,0)!="insert" && ds_Recipe.getColumn(0,"RECIPE_CLASS")=="H")
	{
		return;
	}
	
	if(chk_Dtlyn.value=="Y" || Checkbox0.value=="Y" || Checkbox1.value=="Y" || Checkbox2.value=="Y")
	{
		chk_Dtlyn.value="N";
		Checkbox0.value="N";
		Checkbox1.value="N";
		Checkbox2.value="N";
	}
	else
	{
		chk_Dtlyn.value="Y";
		Checkbox0.value="Y";
		Checkbox1.value="Y";
		Checkbox2.value="Y";
	
	} 
}

function ds_CookMethod_CanColumnChange(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	if(ds_Recipe.getColumn(0,"RECIPE_CLASS")=="H" )
	{
		//trace("1<======");
		g_Message("EE","HMR은 조회만 가능합니다.");
		return false;
	}
}

function ds_Recipe_CanColumnChange(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	if(v_gbn==0)  // strColumnID=="RECIPE_CLASS" && 
	{
		if(ds_Recipe.getColumn(0,"RECIPE_CLASS")=="H" )
		{
			//trace("2<======");
			g_Message("EE","HMR은 조회만 가능합니다.");
			return false;
		}
	}
}

function ds_Recipe_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	if(strColumnID=="PHF_MGMT_YN")
	{
		if(varNewValue=="N")
		{
			for(i=0;i<5;i++)
			{
				ds_phf.setColumn(i,"PHF","N");
			}
		}
	}
}
function fn_Update_Chk()
{
	if(gfn_dsIsUpdated(ds_Recipe)==true ||
		gfn_dsIsUpdated(ds_ItemList)==true ||
		gfn_dsIsUpdated(ds_CookMethod)==true ||
		gfn_dsIsUpdated(ds_phf)==true	)
	{
		//trace(gfn_dsIsUpdated(ds_Recipe)+"/"+gfn_dsIsUpdated(ds_ItemList)+"/"+gfn_dsIsUpdated(ds_CookMethod)+"/"+gfn_dsIsUpdated(ds_phf));
		if(g_Confirm("02","변경된 데이타가 있습니다.\n\n저장하시겠습니까?"))
		{
			fn_Trans();
			return true;
		}
		else
		{
			return false;
		}
	}
	else
	{
		return false;
	}
}

function common_OnKeyDown(obj, e:KeyEventInfo)
{
	if(e.keycode==13)
	{
		switch(obj.name)
		{
			case "Edit0":				
				btn_CustPop.click();
				break;
			default :
				break;
		}
		var strObj=GetNextComponent(null);
		strObj.setFocus();
	}

}

function Image0_OnClick(obj:ImageViewer, e:ClickEventInfo)
{
	pdiv_imgZoom.Image0.image=Image0.image;
	var nX = system.clientToScreenX(Image0,Image0.position.width); // Popup Button의 화면상의 X좌표 얻어오기
	var nY = system.clientToScreenY(Image0,50);	// Popup Button의 화면상의 Y좌표 얻어오기	
	
	pdiv_imgZoom.trackPopup(nX, nY+3);
}

function pdiv_imgZoom_Image0_OnClick(obj:ImageViewer, e:ClickEventInfo)
{
	pdiv_imgZoom.closePopup();
}
function Image0_OnMouseOut(obj:ImageViewer, e:MouseEventInfo)
{
	pdiv_imgZoom.closePopup();	
}
function btn_add_OnClick(obj:Button, e:ClickEventInfo)
{
	fn_addItem();
}

function ds_CookMethod_OnRowPosChanged(obj,nOldRow,nRow)
{
	// if(ds_CookMethod.GetUpdate()==true)
	// {
		// for(i=0;i<ds_CookMethod.RowCount();i++)
		// {
			// if(ds_CookMethod.GetRowType(i)=="insert")
			// {
				// ds_CookMethod.DeleteRow(i);
				// return;
			// }
		// }
	// }
}

function grd_jajea_OnMouseOver(obj:Grid, e:GridMouseEventInfo)
{
	//trace(nRow + " " + nCell);
	if(e.row>=0)
	{
		if(ds_ItemList.getColumn(e.row,"RESTRICT_YN")=="Y")
		{
			grd_jajea.tooltiptext = "-금지기간 : " + ds_ItemList.getColumn(e.row,"RESTRICT_START")+"~"+ds_ItemList.getColumn(e.row,"RESTRICT_END")
									+"\n-금지사유 : " +ds_ItemList.getColumn(e.row,"RESTRICT_REASON");
		}
		else
		{
			grd_jajea.tooltiptext = "";
		}
	}
	else
	{
		if (e.cell == 7)
		{
			grd_jajea.tooltiptext = "원가는 표준단가로 계산되었습니다.\n사업장원가와는 차이가 날 수 있습니다.";
		}
		else
		{
			grd_jajea.tooltiptext = "";
		}
	}
}



//=========================================================================================
// 추가한 함수
//=========================================================================================
/*
 ******************************************************************************************
 * 함  수  명   : fn_AlertMsg(cd)
 * 기      능   : 윤대리님 Master쪽 소스 추가
 * 작  성  자   : 윤상혁
 * 작성  일자   : 2008-01-16  
 ******************************************************************************************
 */
function fn_AlertMsg(cd)
{
	var v_Msg="";
	switch(cd)
	{
		case "001":
			v_Msg= "버튼이 정의 되어 있지않습니다.";
			break;
		case "002":
			v_Msg="서비스 오류:시스템 관리자에게 문의하십시오.";
			break;
		case "003":
			v_Msg="조회된 데이타가 없습니다.";
			break;														
		case "004":
			v_Msg="변경된 데이타가 있습니다.\n\n저장하시겠습니까?";
			break;
		case "005":
			v_Msg="데이타를 입력중입니다.";
			break;
		case "006":
			v_Msg="데이타를 입력중입니다.\n\n저장하신후 탭을 옮기세요.";
			break;
		case "007":
			v_Msg="비어 있는 데이타를 먼저 입력하세요.";
			break;
		case "008":
			v_Msg="레시피분류를 먼저 선택하세요.";
			break;	
		case "009":
			v_Msg="레시피명을 입력하세요.";
			break;	
		case "010":
			v_Msg="표준레시피에 등록된 레시피명입니다.";
			break;	
		case "011":
			v_Msg="등록가능합니다.";
			break;
		case "012":
			v_Msg="이미 등록된 자재입니다.";
			break;
		case "013":
			v_Msg="자재를 입력하셔야 합니다.";
			break;																	
		case "014":
			v_Msg="조리법을 입력하셔야 합니다.";
			break;
		case "015":
			v_Msg="자재코드는 필수 입력입니다.";
			break;
		case "016":
			v_Msg="조리법이 비어있는 라인이 있습니다.비어있는 라인을 입력하세요.";
			break;			
		case "017":
			v_Msg="이미지 파일이 없거나 파일 삭제에 실패 하였습니다.";
			break;
		case "018":
			v_Msg="파일 업로드에 실패 하였습니다.";
			break;
		case "019":
			v_Msg="다른곳에서 사용중인 레시피입니다.\n\n삭제 할 수 없습니다.";
			break;
		case "020":
			v_Msg="반려 하시겠습니까?";
			break;
		case "021":
			v_Msg="미확정 레시피에서는 삭제 할 수 없습니다.\n\n반려를 이용하세요.";
			break;
		case "022":
			v_Msg="표준 레시피에서 사용가능한 버튼이 아닙니다.";
			break;
		case "023":
			v_Msg="표준 레시피로 전환할 레코드를 선택하세요.";
			break;
		case "024":
			v_Msg="반려시 반려사유를 입력하셔야 합니다.";
			break;
		case "025":
			v_Msg="신규 입력중인 데이타 입니다.\n\n표준레시피 확정대상이 아닙니다.";
			break;
		case "026":
			v_Msg="변경된 데이타가 있습니다.\n\n저장후 표준레시피로 확정하세요.";
			break;			
		case "027":
			v_Msg="표준레시피로 레시피이미지 전송이 실패하였습니다.";
			break;
		case "028":
			v_Msg="등록된 이미지가 없습니다.";
			break;
		case "029":
			v_Msg="선택하신 데이터를 삭제하시겠습니까?";
			break;
		case "030":
			v_Msg="레시피명을 입력하세요.";
			break;
		case "031":
			v_Msg="레시피코드가 없습니다.\n\n시스템관리자에게 문의하십시오.";
			break;
		case "032":
			v_Msg="레시피분류를 입력하세요.";
			break;
		case "033":
			v_Msg="레시피유형을 입력하세요.";
			break;
		case "034":
			v_Msg="조리법유형을 입력하세요.";
			break;
		case "035":
			v_Msg="주재료군을 입력하세요.";
			break;
		case "036":
			v_Msg="모양을 입력하세요.";
			break;
		case "037":
			v_Msg="맛을 입력하세요.";
			break;
		case "038":
			v_Msg="색을 입력하세요.";
			break;
		case "039":
			v_Msg="제공온도를 선택하세요.";
			break;
		case "040":
			v_Msg="중심온도 체크를 선택하세요.";
			break;
		case "041":
			v_Msg="PHF관리를 입력하세요.";
			break;
		case "042":
			v_Msg="자재를 입력하세요.";
			break;
		case "043":
			v_Msg="자재코드를 입력하세요.";
			break;
		case "044":
			v_Msg="레시피 분류를 먼저 입력하신후 검색하세요.";
			break;
		case "045":
			v_Msg="미확정 레시피에서 사용할 수 없습니다.";
			break;
		case "046":
			v_Msg="복사할 표준레시피를 선택하세요.";
			break;
		case "047":
			v_Msg="변경된 데이타가 있습니다.\n\n저장후 진행하세요.";
			break;
		case "048":
			v_Msg="표준레시피로 확정하시겠습니까?\n\n표준레시피로 확정하시기 전에 필수 입력값을 확인하세요.\n\n필수 입력값이 없으면 표준레시피로 확정되지 않습니다.";
			break;
		case "049":
			v_Msg="복사가 완료되었습니다.";
			break;
/*			
		case "":
			v_Msg="";
			break;
*/			
		default:
			break;			
	}
	return v_Msg;
}

/*
 ******************************************************************************************
 * 함  수  명   : ds_CanColumnChange(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
 * 기      능   : insert인 경우만 수정가능
 * 작  성  자   : 박지영
 * 작성  일자   : 2008-01-16  
 ******************************************************************************************
 */
function ds_CanColumnChange(obj:Dataset, e:DSColChangeEventInfo)
{
}

/*
 ******************************************************************************************
 * 함  수  명   : grd_List_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
 * 기      능   : 그리드헤드 더블클릭시 Sort
 * 작  성  자   : 박지영
 * 작성  일자   : 2007-12-18  
 ******************************************************************************************
 */
function grd_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{
	gfn_gridSort(obj, e); //(eval(obj.Binddataset), obj, nCell);
}

/*
 ******************************************************************************************
 * 함  수  명   : fn_afterSave()
 * 입      력   : errCode 	= 에러코드
				  errMsg	= 에러메세지
 * 반      환   : 없음
 * 기      능   : 저장후 폼셋팅
 * 작  성  자   : 박지영
 * 작성  일자   : 2007-12-18  
 ******************************************************************************************
 */
function fn_afterSave(errCode, errMsg)
{
	//fn_formSetting();
}

function grd_jajea_OnHeadClick(obj:Grid, e:GridClickEventInfo)
{
	//TRACE(nCell);
	switch(e.cell)
	{
		case 0:
			gfn_exportExcel(grd_jajea, "sheet1");
			break;
		case 2:
			if(obj.userdata==true)
			{
				obj.userdata=false;
			}
			else
			{
				obj.userdata=true;
			}
			Sort(eval(obj.binddataset),"ITEM_CODE",obj.userdata);
			break;
		case 10:
			if(obj.userdata==true)
			{
				obj.userdata=false;
			}
			else
			{
				obj.userdata=true;
			}
			Sort(eval(obj.binddataset),"CUT_SPEC",obj.userdata);
			break;
		default:
			gfn_gridSort(obj, e); //(eval(obj.binddataset), obj, e.cell);
			break;
	}
}]]></Script>
  </Form>
</FDL>
