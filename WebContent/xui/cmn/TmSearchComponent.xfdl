<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="TmSearchComponent" classname="TmSearchComponent" inheritanceid="" position="absolute 0 0 196 21" titletext="팀 검색용 Component" bindDataset="" bindTmCdColumn="" bindTmNmColumn="" qoBuCd="" qoMuCd="" qoUseYn="" onload="TmSearchComponent_onload" eventAfterTrigger="" eventBeforeTrigger="">
    <Layouts>
      <Layout>
        <Edit id="edt_tmNm" taborder="0" readonly="true" onkeydown="edt_tmNm_onkeydown" position="absolute 0 0 176 21" anchor="left top right" tmCd="" autoselect="true"/>
        <Button id="btn_search" taborder="1" onclick="btn_search_onclick" class="btn_WF_popSearch" position="absolute 175 0 196 21" anchor="top right"/>
        <Edit id="edt_tmCd" taborder="2" readonly="true" onkeydown="edt_tmNm_onkeydown" position="absolute 2 24 178 45" anchor="left top right" tmCd="" visible="false"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_teamControl" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="tmCd" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript4.0"><![CDATA[/*
  화 면 명 : 팀 검색용 컴포넌트
  파 일 명 : TmSearchComponent.xfdl
  기    능 : 팀 검색 Composite 콤포넌트

    수정일     수정자                  수정내용
  ----------   -------  --------------------------------------------------
  2015.03.10   김재섭   최초 생성
*/

/************************************************************************************************
 * 공통 라이브러리 INCLUDE 영역 (필수)
************************************************************************************************/
include "lib::lib_com.xjs";


var isRole = false;
var isDoNotEvent = false;
var oMuComponent = null;
var isAllMu = false;
var isApplyAuth = true; //전체에 대한 권한을 적용할 지를 판단한다.

var isTeamControl = false;

var f_Tm_Cd = g_Tm_Cd;
var f_Tm_Nm = g_Tm_Nm;
/*----------------------------------------------------------------------------------------------
 * 설명      : 전체에 대한 권한을 적용여부를 결정한다.(true(적용-기본값), false(적용안함)
 *---------------------------------------------------------------------------------------------*/
function setApplyAuth(val) {
	isApplyAuth = val;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 초기설정한다.
 *---------------------------------------------------------------------------------------------*/
function TmSearchComponent_onload(obj:Form, e:LoadEventInfo)
{
	
	if (!gfn_isNull(this.class) && this.class == "edt_WF_Essential")
	{
		edt_tmNm.class = this.class;
		btn_search.class = "btn_WF_popSearchEssential";
	}
	
	if (!gfn_isNull(obj.isTeamControl) && obj.isTeamControl == "Y") {
		isTeamControl = true;
	}
	
	fn_teamControlSearch();
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 예외처리를 위한 TM 코드를 조회한다.
 *---------------------------------------------------------------------------------------------*/
function fn_teamControlSearch() {
    var strSvcID    = "selectTeamControl";
    var strURL      = "sc/cmn/tmSearch/selectTeamControl.xdo";
    var strInDs     = "";
    var strOutDs    = "ds_teamControl=ds_teamControl";
    var strArg      = "";
    var strCallback = "";
    var bAsync      = false;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);

	fn_setBindItem();
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 바인딩 정보를 처리한다.
 *---------------------------------------------------------------------------------------------*/
function fn_setBindItem()
{
	if (!gfn_isNull(this.bindDataset))
	{
		if (!gfn_isNull(this.bindTmNmColumn))
		{
			var bindItem0 = new BindItem("tmSearchBindItem0", "edt_tmNm", "value", this.bindDataset, this.bindTmNmColumn);
			this.addChild(bindItem0.name, bindItem0);
			bindItem0.bind();
		}
		
		if (!gfn_isNull(this.bindTmCdColumn))
		{
			//var bindItem1 = new BindItem("userSearchBindItem1", "edt_tmNm", "tmCd", this.bindDataset, this.bindTmCdColumn);
			var bindItem1 = new BindItem("userSearchBindItem1", "edt_tmCd", "value", this.bindDataset, this.bindTmCdColumn);
			this.addChild(bindItem1.name, bindItem1);
			bindItem1.bind();
		}
	}
	
	if (isTeamControl) {
		if (gv_PtCd != "NO_PT") {
			f_Tm_Cd = gv_PtCd;
			f_Tm_Nm = gv_PtNm;
		}
	}
	
	setTmCode(f_Tm_Cd);
	setTmName(f_Tm_Nm);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 팀코드을 가져온다.
 *---------------------------------------------------------------------------------------------*/
function getTmCode()
{
	//return edt_tmNm.tmCd;
	return edt_tmCd.value;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 팀코드을 설정한다.
 *---------------------------------------------------------------------------------------------*/
function setTmCode(val)
{
	edt_tmNm.tmCd = val;
	edt_tmCd.value = val;
	
	if (val == "")
	{
		setTmName("");
	}
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 팀명을 가져온다.
 *---------------------------------------------------------------------------------------------*/
function getTmName()
{
	return edt_tmNm.value;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 팀명을 설정한다.
 *---------------------------------------------------------------------------------------------*/
function setTmName(val)
{
	edt_tmNm.value = val;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : Auth Level을 적용한다.
 *---------------------------------------------------------------------------------------------*/
function applyAuthLevel(o)
{
	isRole = true;
	isApplyAuth = false;
	oMuComponent = o;
	
	//권한을 체크하여 기능을 제어한다.(관리자(99), 관리자(999), BU권한자(80), MU권한자(70)
// 	if (SCAuth.isAuthLevel("99") || SCAuth.isAuthLevel("999") || SCAuth.isAuthLevel("80") || SCAuth.isAuthLevel("70"))
// 	{
// 		isDoNotEvent = false;
// 	}
// 	else
// 	{
// // 		var findRow = ds_teamControl.findRow("tmCd", g_Tm_Cd);
// // 		
// // 		if (findRow > -1) {
// // 			isDoNotEvent = false;
// // 		}
// // 		else {
// // 			isDoNotEvent = true;
// // 		}
// 		isDoNotEvent = true;
// 	}
	
	setTmCode(f_Tm_Cd);
	setTmName(f_Tm_Nm);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : MU의 Object를 반환한다.
 *---------------------------------------------------------------------------------------------*/
function getMuComponent()
{
	return oMuComponent;
}

function setIsAllMu(val)
{
	isAllMu = val;
}
/*----------------------------------------------------------------------------------------------
 * 설명      : 
 *---------------------------------------------------------------------------------------------*/
/************************************************************************************************
 * 각 COMPONENT 별 EVENT 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 버튼에 대한 이벤트
 *---------------------------------------------------------------------------------------------*/
function btn_search_onclick(obj:Button,  e:ClickEventInfo)
{
	var tmCd = "";
	//권한에 따라서 기능을 맞는다.
	if (isRole) {

		if (SCAuth.isAuthLevel("99") || SCAuth.isAuthLevel("999") || SCAuth.isAuthLevel("80") || SCAuth.isAuthLevel("70"))
		{
			tmCd = "";
			isDoNotEvent = false;
		}
		else if(SCAuth.isAuthLevel("17"))
		{
			
			//var findRow = ds_teamControl.findRow("tmCd", f_Tm_Cd);	
			tmCd = f_Tm_Cd;
			isDoNotEvent = false;
		}
		else
		{
			var findRow = ds_teamControl.findRow("tmCd", f_Tm_Cd);
			
			if (isTeamControl && (SCAuth.isAuthLevel("14") || SCAuth.isAuthLevel("16") || SCAuth.isAuthLevel("19")) && findRow > -1) {
				tmCd = f_Tm_Cd;
				isDoNotEvent = false;
			}
			else {
				tmCd = "";
				isDoNotEvent = true;
			}
		}
	
		if (isDoNotEvent) return;
	}

	//[[Before Event를 정의한다.
	if (!gfn_isNull(this.eventBeforeTrigger))
	{
		var beforeEvent = eval("parent."+this.eventBeforeTrigger);
		var rtn = beforeEvent(this);
		
		if (!rtn) return;
	}
	//Before Event를 정의한다.]]
	
	if (isRole)
	{
		if (!gfn_isNull(oMuComponent.getMuCode()))
		{
			this.qoMuCd = oMuComponent.getMuCode();
		}
		else
		{
			this.qoMuCd = "";
		}
	}
	else {
		if (isApplyAuth) {
			//권한을 체크하여 기능을 제어한다.(관리자(99), 관리자(999), BU권한자(80), MU권한자(70)
			//if (SCAuth.isAuthLevel("99") || SCAuth.isAuthLevel("999") || SCAuth.isAuthLevel("80") || SCAuth.isAuthLevel("70"))
			if (SCAuth.isAuthLevel("99") || SCAuth.isAuthLevel("999") || SCAuth.isAuthLevel("80")) {
				this.qoMuCd = "";
				tmCd = "";
				isAllMu = false;
			}
			else if (SCAuth.isAuthLevel("70")) {
				this.qoMuCd = g_Mu_Cd;
				tmCd = "";
				isAllMu = false;
			}
		    else if (SCAuth.isAuthLevel("17"))
		    {
				//var findRow = ds_teamControl.findRow("tmCd", f_Tm_Cd);
				this.qoMuCd = g_Mu_Cd;	
			    tmCd = f_Tm_Cd;
			    isAllMu = false;
		    }
			else {
			
				var findRow = ds_teamControl.findRow("tmCd", f_Tm_Cd);
			
				if (isTeamControl && (SCAuth.isAuthLevel("14") || SCAuth.isAuthLevel("16")  || SCAuth.isAuthLevel("19")) && findRow > -1) {
					this.qoMuCd = g_Mu_Cd;
					tmCd = f_Tm_Cd;
					isAllMu = false;
				}
				else {
					tmCd = "";
					return;
				}
			}
		}
	}
	
	//[[팝업창을 호출한다.
	var strId       = "TmSearch";
	if(SCAuth.isAuthLevel("17"))
	  var strURL      = "cmn::TmBonbuSearchPop.xfdl";
	else
	  var strURL      = "cmn::TmSearchPop.xfdl";
	  
	var objArgument = {
		P_BU_CD : this.qoBuCd,
		P_MU_CD : this.qoMuCd,
		P_TM_CD : tmCd,
		P_USE_YN: this.qoUseYn,
		P_ALL_MU : isAllMu
	};
	var nWidth      = 513;
	var nHeight     = 495;
	var strStyle    = "";
	var nLeft       = -1;
	var nTop        = -1;
	var isModeless  = false;
	var bShowTitle  = true;
	var strAlign    = "-1";

	// 리턴값을 배열로 받을 경우	
	var arrRtn = gfn_dialog(strId, strURL, objArgument, nWidth, nHeight, strStyle, nLeft, nTop, isModeless, bShowTitle, strAlign);
	
	if (arrRtn instanceof Object)
	{
		setTmCode(arrRtn.tmCd);
		setTmName(arrRtn.tmNm);
		
		if (isRole) {
			oMuComponent.setMuCode(arrRtn.muCd);
		}
		
		//[[After Event를 정의한다.
		if (!gfn_isNull(this.eventAfterTrigger))
		{
			var afterEvent = eval("parent."+this.eventAfterTrigger);
			afterEvent(this, arrRtn);
		}
		//After Event를 정의한다.]]
	}
	//팝업창을 호출한다.]]
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 
 *---------------------------------------------------------------------------------------------*/
function edt_tmNm_onkeydown(obj:Edit, e:KeyEventInfo)
{
	var findRow = ds_teamControl.findRow("tmCd", g_Tm_Cd);
	//권한에 따라서 기능을 맞는다.

	if (isRole) {
 		
		if (SCAuth.isAuthLevel("99") || SCAuth.isAuthLevel("999") || SCAuth.isAuthLevel("80") || SCAuth.isAuthLevel("70") || SCAuth.isAuthLevel("17") || SCAuth.isAuthLevel("19"))
		{
			isDoNotEvent = false;
		}
		else
		{
			if (isTeamControl && (SCAuth.isAuthLevel("14") || SCAuth.isAuthLevel("16"))  && findRow > -1) {
				isDoNotEvent = false;
			}
			else {
				isDoNotEvent = true;
			}
		}

		if (isDoNotEvent) return;
	}
	
	// Enter 키
	if(e.keycode == 13)
	{
        if (gfn_isNull(obj.tmCd))
        {
			btn_search.click();
		}
	}
	
	// Del 키
	else if(e.keycode == 46) 
	{
	
		//trace("1");
		
		if (isApplyAuth) {
			//권한을 체크하여 기능을 제어한다.(관리자(99), 관리자(999), BU권한자(80), MU권한자(70), 소팀장(14), 팀장(16)
			if (SCAuth.isAuthLevel("99") || SCAuth.isAuthLevel("999") || SCAuth.isAuthLevel("80") || SCAuth.isAuthLevel("70")) {

				//trace("2");
			}
			else {
				//trace("3");
				if (findRow == -1) {
					//trace("4");
					return;
				}
			}
		}
		
		if (isTeamControl && (SCAuth.isAuthLevel("14") || SCAuth.isAuthLevel("16")) && findRow > -1) {
			//trace("5");
			setTmCode(f_Tm_Cd);
			setTmName(f_Tm_Nm);
		}
		// 본부장일 경우 팀컴포넌트의 Del키를 적용하지 않는다.
		else if( SCAuth.isAuthLevel("17")|| SCAuth.isAuthLevel("19")){
			//trace("7-1");
			setTmCode(getTmCode());
			setTmName(getTmName());	
			
		}
		else {
			//trace("6");
			setTmCode("");
			setTmName("");
		}
		
		//[[After Event를 정의한다.
		if (!gfn_isNull(this.eventAfterTrigger) && !SCAuth.isAuthLevel("19"))
		{
			//trace("7");
			var arrRtn = {tmCd:"", tmNm:""};
			if( SCAuth.isAuthLevel("17")) arrRtn = {tmCd:getTmCode(), tmNm:getTmName()}; //본부장일 경우 Del Key 불가
			
			//trace(arrRtn.tmCd); //trace(arrRtn.tmNm);
			
			var afterEvent = eval("parent."+this.eventAfterTrigger);
			afterEvent(this, arrRtn);
		}
		//After Event를 정의한다.]]
	}
}
]]></Script>
  </Form>
</FDL>
