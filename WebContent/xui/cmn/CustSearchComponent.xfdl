<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="CustSearchComponent" classname="UpjangSearchComponent" inheritanceid="" position="absolute 0 0 196 21" titletext="거래처 검색용 Component" bindDataset="" eventBeforeTrigger="" eventAfterTrigger="" onload="CustSearchComponent_onload" bindCustCodeColumn="" bindCustNameColumn="" roleSetId="">
    <Layouts>
      <Layout>
        <Edit id="edt_custName" taborder="0" readonly="true" position="absolute 0 0 176 21" anchor="left top right" tmCd="" onkeydown="edt_custName_onkeydown"/>
        <Button id="btn_search" taborder="3" class="btn_WF_popSearch" position="absolute 175 0 196 21" anchor="top right" onclick="btn_search_onclick" tabstop="false"/>
        <Edit id="edt_custCode" taborder="2" readonly="true" onkeydown="edt_upjangNm_onkeydown" position="absolute 0 29 176 50" anchor="left top right" tmCd="" visible="false"/>
      </Layout>
    </Layouts>
    <Script type="xscript4.0"><![CDATA[/*
  화 면 명 : 거래처 검색용 컴포넌트
  파 일 명 : CustSearchComponent.xfdl
  기    능 : 거래처 검색 Composite 콤포넌트

    수정일     수정자                  수정내용
  ----------   -------  --------------------------------------------------
  2015.03.10   김재섭   최초 생성
*/

/************************************************************************************************
 * 공통 라이브러리 INCLUDE 영역 (필수)
************************************************************************************************/
include "lib::lib_com.xjs";

var dataSet = new Dataset();
var fv_title = "거래처 검색";
var fv_labelCode = "거래처 코드";
var fv_labelName = "거래처 명";
var isReadonly = false;

/*----------------------------------------------------------------------------------------------
 * 설명      : 초기설정한다.
 *---------------------------------------------------------------------------------------------*/
function CustSearchComponent_onload(obj:Form, e:LoadEventInfo)
{
	
	if (!gfn_isNull(this.class) && this.class == "edt_WF_Essential")
	{
		edt_custName.class = this.class;
		btn_search.class = "btn_WF_popSearchEssential";
	}
	
	//내부용도로 사용되는 업장 검색용 DATASET 이름을 정의한다.
 	this.custSearchDatasetName = "ds_" + this.name;
 	dataSet.id = this.custSearchDatasetName;
 	dataSet.name = this.custSearchDatasetName;
 	dataSet.addRow();
	dataSet.addColumn("qid", "STRING", "1000");
	dataSet.addColumn("custGubun", "STRING", "100");
	dataSet.addColumn("upjang", "STRING", "10");
	//[[기본은 매출(002) 거래처만 설정한다.
	dataSet.setColumn(dataSet.rowposition, "qid", "StCust");
	dataSet.setColumn(dataSet.rowposition, "custGubun", "002,003");
	dataSet.setColumn(dataSet.rowposition, "upjang", "");
	//기본은 매출(002) 거래처만 설정한다.]]
	fn_setBindItem();
}

/** ****************************************************************************************
 * @class 검색용 DATASET을 만든다.
 * @param obj - Event Dataset
 * @param e - Event 발생정보
 * @return 
 ******************************************************************************************* */
// function fn_createDataset()
// {
// }

function setClass(val) {
	if (gfn_isNull(val)) {
		edt_custName.class = "";
		btn_search.class = "btn_WF_popSearch";
	}
	else {
		edt_custName.class = val;
		btn_search.class = "btn_WF_popSearchEssential";
	}
}
/*----------------------------------------------------------------------------------------------
 * 설명      : 바인딩 정보를 처리한다.
 *---------------------------------------------------------------------------------------------*/
function fn_setBindItem()
{
	if (!gfn_isNull(this.bindDataset))
	{
		if (!gfn_isNull(this.bindCustNameColumn))
		{
			var bindItem0 = new BindItem("custSearchBindItem0", "edt_custName", "value", this.bindDataset, this.bindCustNameColumn);
			this.addChild(bindItem0.name, bindItem0);
			bindItem0.bind();
		}
		
		if (!gfn_isNull(this.bindCustCodeColumn))
		{
			//var bindItem1 = new BindItem("upjangSearchBindItem1", "edt_upjangNm", "upjangCode", this.bindDataset, this.bindUpjangCodeColumn);
			var bindItem1 = new BindItem("custSearchBindItem1", "edt_custCode", "value", this.bindDataset, this.bindCustCodeColumn);
			this.addChild(bindItem1.name, bindItem1);
			bindItem1.bind();
		}
	}
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 거래처코드를 가져온다.
 *---------------------------------------------------------------------------------------------*/
function getCustCode()
{
	//return edt_upjangNm.upjangCode;
	return edt_custCode.value;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 거래처코드 설정한다.
 *---------------------------------------------------------------------------------------------*/
function setCustCode(val)
{
	edt_custName.custCode = val;
	edt_custCode.value = val;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 거래처명을 가져온다.
 *---------------------------------------------------------------------------------------------*/
function getCustName()
{
	return edt_custName.value;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 거래처명을 설정한다.
 *---------------------------------------------------------------------------------------------*/
function setCustName(val)
{
	edt_custName.value = val;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 거래처 구분(001:매입, 002:매출, 003:매입/매출)을 설정한다.
 *---------------------------------------------------------------------------------------------*/
function setCustGubun(val)
{
	dataSet.setColumn(dataSet.rowposition, "custGubun", val);
}

function setReadonly(val)
{
	isReadonly = val;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 조회하고자 하는 대상을 정의한다.
 *---------------------------------------------------------------------------------------------*/
function setQid(val)
{
	dataSet.setColumn(dataSet.rowposition, "qid", val);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : SCO UPJANG CUST에 대하여 사용한다.
 *---------------------------------------------------------------------------------------------*/
function setUpjang(val)
{
	dataSet.setColumn(dataSet.rowposition, "upjang", val);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 
 *---------------------------------------------------------------------------------------------*/
function setTitle(val)
{
	fv_title = val;
}

function setLabelCode(val)
{
	fv_labelCode = val;
}

function setLabelName(val)
{
	fv_labelName = val;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 팀(부서)를 설정한다.
 *---------------------------------------------------------------------------------------------*/
function setTmCode(val)
{
	dataSet.addColumn("tmCd", "STRING", "100");
	dataSet.setColumn(dataSet.rowposition, "tmCd", val);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 팀(부서)를 설정한다.
 *---------------------------------------------------------------------------------------------*/
function setCcCode(val)
{
	dataSet.addColumn("ccCd", "STRING", "100");
	dataSet.setColumn(dataSet.rowposition, "ccCd", val);
}

function focus() {
	edt_custName.setFocus();
}
/************************************************************************************************
 * 각 COMPONENT 별 EVENT 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 버튼에 대한 이벤트
 *---------------------------------------------------------------------------------------------*/
function btn_search_onclick(obj:Button,  e:ClickEventInfo)
{
	//[[Before Event를 정의한다.
	if (!gfn_isNull(this.eventBeforeTrigger))
	{
		var beforeEvent = eval("parent."+this.eventBeforeTrigger);
		var rtn = beforeEvent(this);
		
		if (!rtn) return;
	}
	//Before Event를 정의한다.]]
	
	//[[팝업창을 호출한다.
	var strId       = "CustSearch";
	var strURL      = "cmn::CustSearchPop.xfdl";
	var objArgument = {
		P_DATASET    : dataSet,
		P_TITLE      : fv_title,
		P_LABEL_CODE : fv_labelCode,
		P_LABEL_NAME : fv_labelName,
		P_ROLESET_ID : this.roleSetId
	};
	var nWidth      = 513;
	var nHeight     = 495;
	var strStyle    = "";
	var nLeft       = -1;
	var nTop        = -1;
	var isModeless  = false;
	var bShowTitle  = true;
	var strAlign    = "-1";

	// 리턴값을 배열로 받을 경우	
	var arrRtn = gfn_dialog(strId, strURL, objArgument, nWidth, nHeight, strStyle, nLeft, nTop, isModeless, bShowTitle, strAlign);
	
	if (arrRtn instanceof Object)
	{
 		setCustCode(arrRtn.custCode);
 		setCustName(arrRtn.custName);
		//[[After Event를 정의한다.
		if (!gfn_isNull(this.eventAfterTrigger))
		{
			var afterEvent = eval("parent."+this.eventAfterTrigger);
			afterEvent(this, arrRtn);
		}
		//After Event를 정의한다.]]
	}
	//팝업창을 호출한다.]]
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 
 *---------------------------------------------------------------------------------------------*/
function edt_custName_onkeydown(obj:Edit, e:KeyEventInfo)
{
	if (isReadonly) return;
	// Enter 키
	if(e.keycode == 13) 
	{
        if (gfn_isNull(edt_custCode.value))
        {
			btn_search.click();
			//edt_custName.setFocus();
		}
	}
	// Del 키
	else if(e.keycode == 46) 
	{		
		setCustCode("");
		setCustName("");
		
	}
}
]]></Script>
  </Form>
</FDL>
