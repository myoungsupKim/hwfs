<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="ObjAtchFile" classname="cmpAtchFile" inheritanceid="" position="absolute 0 0 679 125" titletext="Attach File Object" scrollbars="none">
    <Layouts>
      <Layout>
        <Static id="stc_Desc" text="첨부파일" visible="true" position="absolute 0 17 110 34" class="sta_WF_Title01"/>
        <Static id="stc_Bar" class="sta_WFDA_TopLine" position="absolute 0 10 500 12" anchor="left top right" visible="false"/>
        <Static id="stc_Form" class="sta_WFDA_Bg" position="absolute 110 12 499 38" anchor="left top right" visible="false"/>
        <Grid id="grd_file" taborder="1" binddataset="ds_file" useinputpanel="false" cellsizingtype="col" cellmovingtype="col" autofittype="col" position="absolute 0 35 679 125" style="cursor:auto;" anchor="all" oncellclick="grd_file_oncellclick" selecttype="row" autoenter="select" onheadclick="grd_file_onheadclick">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="26"/>
                <Column size="34"/>
                <Column size="220"/>
                <Column size="235"/>
                <Column size="43"/>
              </Columns>
              <Rows>
                <Row size="26" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell displaytype="checkbox" edittype="checkbox" text="expr:0"/>
                <Cell col="1" text="No"/>
                <Cell col="2" text="파일명"/>
                <Cell col="3" text="설명"/>
                <Cell col="4" text="Size"/>
              </Band>
              <Band id="body">
                <Cell displaytype="checkbox" edittype="checkbox" text="bind:chk"/>
                <Cell col="1" expr="currow+1"/>
                <Cell col="2" style="align:left;color:#0054feff;color2:#0054feff;font:돋움,9,underline;cursor:EXPR(atchFileMg&gt;0?'hand':'default');" text="bind:orgnlFileNm"/>
                <Cell col="3" displaytype="normal" edittype="normal" style="align:left;" text="bind:fileDesc" editlimit="200" editautoselect="true"/>
                <Cell col="4" displaytype="number" style="align:right;" text="bind:fileSize"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btn_addFile" taborder="0" text="파일추가" onclick="btn_addFile_onclick" position="absolute 480 10 545 30" class="btn_WF_Function" anchor="top right"/>
        <Button id="btn_delFile" taborder="1" text="파일삭제" onclick="btn_delFile_onclick" position="absolute 547 10 612 30" class="btn_WF_Function" anchor="top right"/>
        <Button id="btn_multiDown" taborder="1" text="다운로드" onclick="btn_multiDown_onclick" position="absolute 614 10 679 30" class="btn_WF_Function" anchor="top right"/>
        <Static id="Static33" text="h17" class="Guide01_AreaRed" visible="false" position="absolute 0 0 77 17" anchor="left top"/>
        <Static id="Static34" text="블릿기준간격 h05" class="Guide01_AreaRed" visible="false" position="absolute 0 30 77 35" anchor="left top"/>
        <Static id="Static03" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 77 0 679 10"/>
        <Static id="Static00" text="h05" class="Guide01_AreaRed" visible="false" position="absolute 425 30 679 35"/>
        <Static id="Static20" text="W102" visible="false" position="absolute 545 10 547 30" anchor="top right" style="background:#ff000055;align:center middle;"/>
        <Static id="Static04" text="W102" visible="false" position="absolute 478 10 480 30" anchor="top right" style="background:#ff000055;align:center middle;"/>
        <Static id="Static05" text="W102" visible="false" position="absolute 612 10 614 30" anchor="top right" style="background:#ff000055;align:center middle;"/>
        <FileUpload id="fileUpload" taborder="2" retry="0" index="0" position="absolute 696 12 794 32" onload="fileUpload_onload" visible="false" anchor="top right" async="false" onerror="fileUpload_onerror"/>
      </Layout>
    </Layouts>
    <Objects>
      <FileDialog id="fileDialog" filter="All(*.*)|*.*|" filterindex="0" defaultextention="false"/>
      <HttpObject id="httpObject" timeout="30000" retry="10" asyncflag="false" onload="HttpObject_onload" onstatus="HttpObject_onstatus"/>
      <Dataset id="ds_uploadresult" preload="true" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep">
        <ColumnInfo>
          <Column id="refSeq" type="STRING" size="32"/>
          <Column id="appendSeq" type="STRING" size="32"/>
          <Column id="orgnlFileNm" type="STRING" size="32"/>
          <Column id="saveFileNm" type="STRING" size="32"/>
          <Column id="relPath" type="STRING" size="32"/>
          <Column id="fileSize" type="STRING" size="32"/>
          <Column id="fileExt" type="STRING" size="16"/>
          <Column id="encYn" type="STRING" size="16"/>
          <Column id="FileDesc" type="STRING" size="32"/>
          <Column id="fileUploadNm" type="STRING" size="32"/>
          <Column id="chk" type="INT" size="1"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_uploadFile" preload="true" firefirstcount="0" firenextcount="0" useclientlayout="true" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep">
        <ColumnInfo>
          <Column id="refSeq" type="STRING" size="256"/>
          <Column id="appendSeq" type="STRING" size="256"/>
          <Column id="orgnlPath" type="STRING" size="256"/>
          <Column id="orgnlFileNm" type="STRING" size="256"/>
          <Column id="saveFileNm" type="STRING" size="256"/>
          <Column id="relPath" type="STRING" size="256"/>
          <Column id="fileSize" type="STRING" size="256"/>
          <Column id="fileExt" type="STRING" size="256"/>
          <Column id="encYn" type="STRING" size="256"/>
          <Column id="fileDesc" type="STRING" size="256"/>
          <Column id="fileUploadNm" type="STRING" size="256"/>
          <Column id="chk" type="INT" size="1"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind/>
    <Script type="xscript4.0"><![CDATA[/*

  파일명 : ObjAtchFile.xfdl
  설  명 : Attach File Object

  수정일       수정자   수정내용
  ----------   -------  --------------------------------------------------
  2015.02.02   김윤기   최초 생성
  2015.03.17   kksoo     저장소위치 설정 추가
  2015.04.29   kksoo     오류처리 추가
*/

/************************************************************************************************
 * 공통 라이브러리 INCLUDE 영역 (필수)
************************************************************************************************/
include "lib::lib_com.xjs";


/************************************************************************************************
 * FORM 변수 선언 영역
************************************************************************************************/
var v_ArrFiles          = new Array();  // FileDialog 선택을 통한 File Array
var v_bIsWebDown        = false;        // WebBrowser Link를 통한 Download 방식여부
var v_bSaveTran         = false;        // Save Transaction 수행결과
var v_refSeq;                           // 첨부파일ID
var v_sSrvcNm;                          // 서비스명
var v_bEnableRollback   = true;         // 실패시 롤백 여부
var v_bSuccessUpload    = false;        // 업로드 성공 여부
var v_sFilterFlag;                      // File Dialog 선택창에서 보여줄 확장자 문자열
var v_bSingleFile       = false;        // File Dialog 에서 파일 선택을 하나만 가능하게 할 것인지 여부
var v_ChkGrdAttList     = new Array();  // 그리드 체크박스 배열
var v_bSortNum          = false;        // 순번 정렬 방법
var v_bReadOnly         = false;        // 읽기 전용 여부
var v_bViewKB           = false;        // 파일 사이즈를 보여주는 단위를 KB로 지정 여부
var v_sCallbackDef;                     // Dataset의 onrowposchanged 이벤트시 callback으로 사용
var v_sFileNameSize     = 100;          // Local파일명의 길이 (default는 100 Byte)
var v_bWebRepoYn        = false;        // 첨부파일 저장소를 webapp아래로 할지 여부

var sFileDS               = null;    // File DataSet
var COL_NO                = "순번";
var COL_ATCH_FILE_NM      = "파일명";
var COL_ATCH_FILE_DC      = "설명";
var COL_ATCH_FILE_MG_BYTE = "파일크기(byte)";
var COL_ATCH_FILE_MG_KB   = "파일크기(KB)";

var maxFileSize = 10 * 1024 * 1024; // 첨부파일 사이즈 제한(default : 10 MB), -1일때는 파일용량 체크 안함

/************************************************************************************************
 * FORM EVENT 영역
************************************************************************************************/


/************************************************************************************************
 * FORM 공통 FUNCTION 영역
************************************************************************************************/

/*----------------------------------------------------------------------------------------------
 * 설명      : 첨부파일 제한사이즈 셋팅
 *---------------------------------------------------------------------------------------------*/
function setMaxFileSize(aMaxFileSize) 
{
	if(aMaxFileSize != -1) 
	{
		maxFileSize = aMaxFileSize * 1024 * 1024;
	}
	else {
		maxFileSize = aMaxFileSize;	
	}
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 첨부파일 다운로드 Web방식 지정(생략시 httpobject 방식으로 저장)
 *---------------------------------------------------------------------------------------------*/
function setWebDown(bWebDown) 
{
    v_bIsWebDown = bWebDown;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 파일 확장자 지정하기
 *             v_sExt - 확장자의 종류 : XLS, DOC, PPT, IMAGE (지정하지 않을 경우 All(*)로 선택됨)
 *---------------------------------------------------------------------------------------------*/
function setExtention(v_sExt) 
{
    v_sFilterFlag = v_sExt;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 단일 첨부파일 지정하기
 *---------------------------------------------------------------------------------------------*/
function setSingleFile(v_bData) 
{
    if (!gfn_isNull(v_bData)) {
        v_bSingleFile = v_bData;
    }
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 첨부파일 저장소를 webapp아래로 할지 여부 (보안과 관련이 없는 경우만 사용)
 *---------------------------------------------------------------------------------------------*/
function setWebRepoYn(v_bData) 
{
    if (!gfn_isNull(v_bData)) {
        v_bWebRepoYn = v_bData;
    }
}


/*----------------------------------------------------------------------------------------------
 * 설명      : 버튼 inVisible 속성 제어
 *---------------------------------------------------------------------------------------------*/
function setVisibleButton(v_bInput) 
{
    if(!v_bInput) 
    {
        stc_Desc.visible      = false;
        btn_addFile.visible   = false;
        btn_delFile.visible   = false;
        btn_multiDown.visible = false;
        
        grd_file.position.top = 10 ;
    } 
    else {
        stc_Desc.visible      = true;
        btn_addFile.visible   = true;
        btn_delFile.visible   = true;
        btn_multiDown.visible = true;
        grd_file.position.top = 35 ;
    }
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 버튼 invisible 처리하고 첨부파일 설명 readonly로 처리
 *---------------------------------------------------------------------------------------------*/
function setReadOnly(v_bInput) 
{
    if(v_bInput) 
    {
        btn_addFile.visible   = false;
        btn_delFile.visible   = false;
    } 
    else {
        btn_addFile.visible   = true;
        btn_delFile.visible   = true;
    }
}


/*----------------------------------------------------------------------------------------------
 * 설명   : 컬럼 제거하는 함수
 * param   : 컬럼id 배열
 *         : 예) "no, atchFileDc"  (',' 로 구분할 것)
 *         : 컬럼 ID ( no, orgnlFileNm, fileDesc, fileSize )
 *---------------------------------------------------------------------------------------------*/
function setInvisibleColumn(v_sArray) 
{
    var v_arrColumnName = v_sArray.split(",");
    for (var inx=0; inx < v_arrColumnName.length; inx++) {
        switch(v_arrColumnName[inx].trim()) {
            case "no" :
                var v_nColIndex = fn_findColIndex(COL_NO);
                if (!gfn_isNull(v_nColIndex)) {
                    grd_file.deleteContentsCol(v_nColIndex);
                }
                break;
            case "orgnlFileNm" :
                var v_nColIndex = fn_findColIndex(COL_ATCH_FILE_NM);
                if (!gfn_isNull(v_nColIndex)) {
                    grd_file.deleteContentsCol(v_nColIndex);
                }
                break;
            case "fileDesc" :
                var v_nColIndex = fn_findColIndex(COL_ATCH_FILE_DC);
                if (!gfn_isNull(v_nColIndex)) {
                    grd_file.deleteContentsCol(v_nColIndex);
                }
                break;
            case "fileSize" :
                var v_nColIndex = fn_findColIndex(COL_ATCH_FILE_MG_BYTE);
                if (!gfn_isNull(v_nColIndex)) {
                    grd_file.deleteContentsCol(v_nColIndex);
                } else {
                    v_nColIndex = fn_findColIndex(COL_ATCH_FILE_MG_KB);
                    if (!gfn_isNull(v_nColIndex)) {
                        grd_file.deleteContentsCol(v_nColIndex);
                    }
                }
                break;
        }
    }
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 파일 Size를 KB로 처리
 *---------------------------------------------------------------------------------------------*/
function viewKB(v_bInput) 
{
    if (!gfn_isNull(v_bInput) && v_bInput) {
        var v_nColIndex = fn_findColIndex(COL_ATCH_FILE_MG_BYTE);
        if (gfn_isNull(v_nColIndex)) {
            return;
        }
        this.grd_file.setCellProperty( "Head", v_nColIndex, "text", COL_ATCH_FILE_MG_KB);
        this.grd_file.setCellProperty( "Body", v_nColIndex, "text", "expr:Math.round(fileSize/1024)");
    }
}

/*----------------------------------------------------------------------------------------------
 * 설명      : Web방식으로 Download 유무
 *---------------------------------------------------------------------------------------------*/
function getWebDown() 
{
    return v_bIsWebDown;
}


/*----------------------------------------------------------------------------------------------
 * 설명   : 외부에서 초기화시
 *---------------------------------------------------------------------------------------------*/
function fn_setClear() 
{
    eval(sFileDS).clearData();
    v_ArrFiles = new Array();
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 첨부파일정보 데이타셋 지정
 *---------------------------------------------------------------------------------------------*/
function setDataset(argFileDs) 
{
	sFileDS = argFileDs
	grd_file.binddataset = sFileDS;
    
//     // chk 칼럼 생성
//     var bColChk = eval(sFileDS).getColumnInfo("chk");
//     if(gfn_isNull(bColChk)) {
//         eval(sFileDS).addColumn('chk', 'INT', 1);
//     }
//     // orgnlPath 칼럼(Local File 위치) 생성
//     bColChk = eval(sFileDS).getColumnInfo("orgnlPath");
//     if(gfn_isNull(bColChk)) {
//         eval(sFileDS).addColumn('orgnlPath', 'STRING', 256);
//     }
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 첨부파일정보 데이타셋 가져오기
 *---------------------------------------------------------------------------------------------*/
function getDataset() 
{
    return eval(sFileDS);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 첨부파일 유무 체크
 *---------------------------------------------------------------------------------------------*/
function isAtchFile() {
    var v_IsAtchFileCount = eval(sFileDS).getRowCount();
    
    if (v_IsAtchFileCount > 0) {
        return true;
    } else {
        return false;
    }
}

/*----------------------------------------------------------------------------------------------
 * 설명   : 파일 업로드
 *---------------------------------------------------------------------------------------------*/
function fn_uploadFile() 
{   
trace("fn_uploadFile start");
    var v_sUrl = "svc::sc/cmn/uploadFile.do?" + gfn_getGlobalVariableUrl();	//공통변수 추가 by kksoo
	var nRow;
trace(v_sUrl);
	
    this.setWaitCursor(true);
        
    // FileUpload 사용 첨부파일 전체 업로드 : (FileUpload)_callback에서 Dataset 사용하기 위해
	for(var i=0; i<eval(sFileDS).getRowCount(); i++) 
	{
		
		//trace("i : " + i + " / getRowType : " + eval(sFileDS).getRowType(i) + " / fileUpload.getItemCount : " + fileUpload.getItemCount());
        if(eval(sFileDS).getRowType(i) == 2) 
        {
			fileUpload.appendItem();
			nRow = ds_uploadFile.addRow();
			ds_uploadFile.copyRow(nRow,eval(sFileDS),i);
        }
	}

	fileUpload.innerdataset = "ds_uploadFile";
	fileUpload.filecolumn   = "orgnlPath";	

	v_bSuccessUpload = false;
    fileUpload.upload(v_sUrl);	//sync 처리이며, 이벤트에서 결과를 설정함

/*  
    // httpObject 사용 첨부파일 전체 업로드    
    var v_nRow;	    
    v_bSuccessUpload = httpObject.upload(v_sUrl, FileDialog.LOAD, v_ArrFiles, false);
	if (v_bSuccessUpload) 
	{
		v_bSuccess = true;	
	} 
	else {
		v_bSuccess = false;
	}

	// 첨부파일 1건별 업로드(httpObject)
    for (var i = 0; i < v_ArrFiles.length; i++) 
    {
        v_nRow = eval(sFileDS).findRow("atchFileNm", v_ArrFiles[i].filename);
        if (v_nRow > -1) {
            if (eval(sFileDS).getColumn(v_nRow, 'commit') != 1) 
            {
                v_bSuccessUpload = httpObject.upload(v_sUrl, FileDialog.LOAD, v_ArrFiles[i], false);
                if (v_bSuccessUpload) 
                {
                    v_bSuccess = true;
                } 
                else {
                    v_bSuccess = false;
                    break;
                }
            }
        }
    }
*/
    
    this.setWaitCursor(false);
	
	if (v_bSuccessUpload) return 0; else return -1;
    //return v_bSuccessUpload;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 컬럼 인덱스 찾기
 *---------------------------------------------------------------------------------------------*/
function fn_findColIndex(v_sColName) 
{
    for (var inx=0; inx < grd_file.getFormatColCount(); inx++) 
    {
        if (this.grd_file.getCellProperty( "Head", inx, "text") == v_sColName) {
            return inx;
        }
    }
    return "";
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 첨부파일ID를 dataset에 지정
 *---------------------------------------------------------------------------------------------*/
function fn_setRefSeq() 
{
	for (var inx=0; inx < eval(sFileDS).rowcount; inx++) 
	{
       eval(sFileDS).setColumn(inx, 'refSeq', v_refSeq);
    }
}

/*----------------------------------------------------------------------------------------------
 * 설명      : eval(sFileDS) 데이터셋의 ROWTYPE이 INSERT, UPDATE 갯수 return
 *---------------------------------------------------------------------------------------------*/
function fn_countDs(sStatus) 
{
    var nCnt = 0;
    
    if(sStatus == 'delete')
    {
		var v_nDeleteCount = eval(sFileDS).getDeletedRowCount();
		return v_nDeleteCount;
	}

    for (var inx=0; inx < eval(sFileDS).rowcount; inx++) 
    {
        if(sStatus == "insert" && eval(sFileDS).getRowType(inx) == Dataset.ROWTYPE_INSERT) nCnt++;
        if(sStatus == "update" && eval(sFileDS).getRowType(inx) == Dataset.ROWTYPE_UPDATE) nCnt++;
    }
    return nCnt;
}

/*----------------------------------------------------------------------------------------------
 * 설명   : 파일 Row 추가
 *---------------------------------------------------------------------------------------------*/
function fn_addFileRow(v_objVirtualFile) 
{
    var v_sFileName, v_nFileSize, v_sFilePath, v_sExt;
    var bSuccess = v_objVirtualFile.open(VirtualFile.openAppend | VirtualFile.openBinary);
    if(bSuccess == false) {
        gfn_alert("파일이 열려 있습니다. 닫은 후 첨부하세요.");
        v_objVirtualFile.close();
        return false;
    }
    
    //file명을 포함한 전체 경로 가져오기
    v_sFilePath = v_objVirtualFile.fullpath;
    v_sFileName = v_objVirtualFile.filename;

    v_sExt = v_sFilePath.substring(v_sFilePath.lastIndexOf( "." ) + 1, v_sFilePath.length );
    v_nFileSize = v_objVirtualFile.getFileSize();
    v_objVirtualFile.close();

	// maxFileSize가 -1일때는 파일용량 체크 안함
    if(maxFileSize != -1 && maxFileSize < v_nFileSize)
    {
		gfn_alert("msg.err.filesize", gfn_numFormat(maxFileSize));	// 첨부 파일의 용량은 최고 $1 MB까지 입니다.
		return false;
    }
	var nNum = eval(sFileDS).getMax("appendSeq");
	if(gfn_isNull(nNum))
	{
		nNum = 1;
	}
	else {
		nNum = toNumber(nNum) + 1;
	}

	if(gfn_isNull(v_refSeq))
	{
		eval(sFileDS).getColumn(0, 'refSeq');
	}
	
    var v_nRow = eval(sFileDS).addRow();
    eval(sFileDS).setColumn(v_nRow, "refSeq", 		v_refSeq);   	 // 첨부파일번호
    eval(sFileDS).setColumn(v_nRow, "appendSeq", 	nNum);   		 // 첨부파일순번
    eval(sFileDS).setColumn(v_nRow, "orgnlPath", 	v_sFilePath);    // 첨부파일경로명
    eval(sFileDS).setColumn(v_nRow, "orgnlFileNm",  v_sFileName);    // 첨부파일명
    eval(sFileDS).setColumn(v_nRow, "fileSize",     v_nFileSize);    // 첨부파일크기
    eval(sFileDS).setColumn(v_nRow, "fileExt",   	v_sExt);         // 첨부파일확장자
    
    return true;
}

/*----------------------------------------------------------------------------------------------
 * 설명   : 파일 Row 삭제
 *---------------------------------------------------------------------------------------------*/
function fn_delFileRow(nRow) 
{
	eval(sFileDS).deleteRow(nRow);
}

/*----------------------------------------------------------------------------------------------
 * 설명   : 첨부파일 보기
 *---------------------------------------------------------------------------------------------*/
function fn_fileView(nRow)
{
	var refSeq     = eval(sFileDS).getColumn(nRow, "refSeq");
	var appendSeq  = eval(sFileDS).getColumn(nRow, "appendSeq");
	var saveFileNm = eval(sFileDS).getColumn(nRow, "orgnlFileNm");
	
	gfn_downloadFile(refSeq, appendSeq, saveFileNm, v_bIsWebDown, v_bWebRepoYn);
}

/*----------------------------------------------------------------------------------------------
 * 설명   : 첨부파일 다운로드
 *---------------------------------------------------------------------------------------------*/
function fn_fileDownload(nRow)
{
    var FileDialog_Common = new FileDialog();
    FileDialog_Common.defaultextention = true;
    
    // 내문서 밑 hwfs 폴더에 파일 생성
    var vFileDown = new VirtualFile;	
	vFileDown.createDirectory("hwfs");
			
    //파일 저장 위치 지정
    var v_FileDownDir = FileDialog_Common.open("파일 저장", FileDialog.SELFOLDER, "%MyDocument%hwfs");
    
    if (gfn_isNull(v_FileDownDir)) {
        gfn_alert("msg.err.nofilepath");	// 경로가 지정되지 않았습니다.
        return false;
    }

	var refSeq     = eval(sFileDS).getColumn(nRow, "refSeq");
	var appendSeq  = eval(sFileDS).getColumn(nRow, "appendSeq");
	var saveFileNm = eval(sFileDS).getColumn(nRow, "saveFileNm");
	var v_nCheckCnt = 1;
	
	var v_dsSendDataSet = new Dataset();    
    eval(sFileDS).filter("refSeq==" + refSeq + "&& appendSeq==" + appendSeq);
    v_dsSendDataSet.copyData(eval(sFileDS), true);
    eval(sFileDS).filter("");
    trace(v_bWebRepoYn);
    gfn_dialog("fileDownload", "cmn::FileMultiDownProgress.xfdl", {av_oDataSet:v_dsSendDataSet, av_nCheckCnt:v_nCheckCnt, av_sFileDownDir:v_FileDownDir, av_bWebRepoYn:v_bWebRepoYn});
 }
    
/************************************************************************************************
 * 각 COMPONENT 별 EVENT 영역
************************************************************************************************/

/*----------------------------------------------------------------------------------------------
 * 설명   : 파일 추가
 *---------------------------------------------------------------------------------------------*/
function btn_addFile_onclick(obj:Button,  e:ClickEventInfo) 
{
    if (v_bSingleFile) {
        if (eval(sFileDS).getRowCount() > 0) {
            gfn_alert("msg.err.filecount","1");	// 첨부 파일은 $1개 이상 등록 할 수 없습니다.
            return;
        }
    }
    
    var v_sFilter = gfn_getExtFilterString(v_sFilterFlag);
    var v_objFileDialog = new FileDialog();
    v_objFileDialog.defaultextention = true;
    v_objFileDialog.filter = v_sFilter;
    
    if (v_bSingleFile) 
    {
        var v_objVirtualFile = v_objFileDialog.open("파일 추가", FileDialog.LOAD);
		if(gfn_isNull(v_objVirtualFile)) return;
		
		var strFileName = v_objVirtualFile.filename;	// 파일명
		
		if (!fn_fileNameFilter(strFileName))
		{
			return false;
		}
		
		var strFileExt  = strFileName.substring(strFileName.lastIndexOf('.')+1, strFileName.length).toLowerCase(); //확장자, 일괄 소문자로 변경       
				
		if (fv_UPLOAD_PROHIBITED_FILE_EXTENTION.indexOf(strFileExt) >= 0) {
			gfn_alert("msg.err.noExtentionFile", fv_UPLOAD_PROHIBITED_FILE_EXTENTION);	// 첨부할 수 없는 형식의 파일입니다.
			return false;
		}  
		      
        if(fn_addFileRow(v_objVirtualFile)) {
            v_ArrFiles[0] = v_objVirtualFile;
        }
    } else {
        var v_arrFileList = v_objFileDialog.open("파일 추가", FileDialog.MULTILOAD);

		// 값이 없으면 true , 값이 있으면 false		
		if ( gfn_isNull( v_arrFileList ) ){	return false; }
		
			// 값이 존재하면
			var v_arrIdx      = v_ArrFiles.length;
			for (var i = 0; i < v_arrFileList.length; i++) {
				var v_nRow = eval(sFileDS).findRow("orgnlFileNm", v_arrFileList[i].filename);
				
				var strFileName = v_arrFileList[i].filename;	// 파일명
				
				if (!fn_fileNameFilter(strFileName))
				{
					return false;
				}
				
				var strFileExt = strFileName.substring(strFileName.lastIndexOf('.')+1, strFileName.length).toLowerCase(); //확장자, 일괄 소문자로 변경       
						
				if (fv_UPLOAD_PROHIBITED_FILE_EXTENTION.indexOf(strFileExt) >= 0) {
					gfn_alert("msg.err.noExtentionFile", fv_UPLOAD_PROHIBITED_FILE_EXTENTION);	// 첨부할 수 없는 형식의 파일입니다.@[.js .jsp .asp .xml .exe .php .css .py .bat .cmd .sql]
					return false;
				}

				if (gfn_lengthByte(v_arrFileList[i].filename) > v_sFileNameSize) {
					gfn_alert("msg.err.filenamelength");	// 파일명 길이가 너무 깁니다. 파일명은 100Byte보다 작어야 합니다.
					return false;
				}
				if (v_nRow > -1) {
					gfn_alert("msg.err.dupfilename", v_arrFileList[i].filename);	// 중복되는 파일명( $1)이 있습니다.
				} else {
					if(fn_addFileRow(v_arrFileList[i])) {            // 파일 정보 Row 생성
						v_ArrFiles[v_arrIdx] = v_arrFileList[i];    // 파일 배열 생성
						v_arrIdx++;
					}
				}
			}
    }
}

function fn_fileNameFilter(fileName)
{
	var filterChar = /(;)/;
	var rtn = !filterChar.test(fileName);
	
	if (!rtn)
	{
		gfn_alert("특수문자(;)가 포함된 파일은 업로드할 수 없습니다.");
		return rtn;
	}
	
	filterChar = /(&)/;
	rtn = !filterChar.test(fileName);
	
	if (!rtn)
	{
		gfn_alert("특수문자(&)가 포함된 파일은 업로드할 수 없습니다.");
		return rtn;
	}
	
	filterChar = /(')/;
	rtn = !filterChar.test(fileName);
	
	if (!rtn)
	{
		gfn_alert("특수문자(')가 포함된 파일은 업로드할 수 없습니다.");
		return rtn;
	}
		
	return rtn;
}

/*----------------------------------------------------------------------------------------------
 * 설명   : 파일삭제 버튼 클릭 시
 *---------------------------------------------------------------------------------------------*/
function btn_delFile_onclick(obj:Button,  e:ClickEventInfo) 
{
    if ( eval(sFileDS).findRow("chk", 1) < 0 ) 
    {
        gfn_alert("msg.err.notselectfile");	// 선택된 파일이 없습니다.
        return;
    }
    for ( var i=eval(sFileDS).rowcount-1; i >= 0; i--) 
    {
        if(eval(sFileDS).getColumn(i, "chk") == 1) 
        {
            eval(sFileDS).deleteRow(i);
        }
    }
}

/*----------------------------------------------------------------------------------------------
 * 설명   : 다운로드 버튼 클릭 시
 *---------------------------------------------------------------------------------------------*/
function btn_multiDown_onclick(obj:Button,  e:ClickEventInfo) 
{
    var v_nCheckCnt = eval(sFileDS).getCaseCount("chk==1");
    
    if (v_nCheckCnt <= 0) {
        gfn_alert("msg.err.notselectfile");	// 선택된 파일이 없습니다.
        return false;
    }
    
    var FileDialog_Common = new FileDialog();
    FileDialog_Common.defaultextention = true;
    
    // 내문서 밑 hwfs 폴더에 파일 생성
    var vFileDown = new VirtualFile;	
	vFileDown.createDirectory("hwfs");
			
    //파일 저장 위치 지정
    var v_FileDownDir = FileDialog_Common.open("파일 저장", FileDialog.SELFOLDER, "%MyDocument%hwfs");
    
    if (gfn_isNull(v_FileDownDir)) {
        gfn_alert("msg.err.nofilepath");	// 경로가 지정되지 않았습니다.
        return false;
    }

    var v_dsSendDataSet = new Dataset();
    
    eval(sFileDS).filter("chk==1");
    v_dsSendDataSet.copyData(eval(sFileDS), true);
    eval(sFileDS).filter("");
    
    gfn_dialog("fileDownload", "cmn::FileMultiDownProgress.xfdl", {av_oDataSet:v_dsSendDataSet, av_nCheckCnt:v_nCheckCnt, av_sFileDownDir:v_FileDownDir, av_bWebRepoYn:v_bWebRepoYn});
}

/*----------------------------------------------------------------------------------------------
 * 설명   : 첨부파일 그리드 헤드 클릭 시
 *---------------------------------------------------------------------------------------------*/
function grd_file_onheadclick(obj:Grid, e:GridClickEventInfo) {
    if (e.cell == 0) {
        gfn_setGridCheckAll(obj, e);
    } else {
        gfn_gridSort(obj, e);
    }
}

/*----------------------------------------------------------------------------------------------
 * 설명   : 첨부파일 리스트 그리드 클릭 시 파일 Download
 *---------------------------------------------------------------------------------------------*/
function grd_file_oncellclick(obj:Grid, e:GridClickEventInfo) 
{
    var v_nColFileNameIndex = fn_findColIndex(COL_ATCH_FILE_NM);

    if (!gfn_isNull(v_nColFileNameIndex)) {
        if (e.cell == v_nColFileNameIndex) {
            v_openFileName = eval(sFileDS).getColumn(e.row, "orgnlPath");
            
            if (eval(sFileDS).getRowType(eval(sFileDS).rowposition) == Dataset.ROWTYPE_INSERT) {
                var v_isOpen = gfn_confirm("업로드 되지 않은 파일입니다. 파일을 여시겠습니까?");
                if (v_isOpen) {
                    system.execBrowser(v_openFileName);
                    return;
                } else {
                    return;
                }
            }
            
            // 첨부파일 보기
           	fn_fileView(e.row);
            return;
        }
    }

    var v_nColFileDescIndex = fn_findColIndex(COL_ATCH_FILE_DC);
    if (!gfn_isNull(v_nColFileDescIndex)) {
        if (e.cell == v_nColFileNameIndex) {
            if (v_bReadOnly) {
                this.grd_file.setCellPos(1);
            } else {
                this.grd_file.setCellPos(3);
                this.grd_file.showEditor(true);
            }
            return;
        }
    }
}

/*----------------------------------------------------------------------------------------------
 * 설명   : 첨부파일 upload 성공후
 *---------------------------------------------------------------------------------------------*/
function fileUpload_onload(obj:FileUpload,  e:FileUploadLoadEventInfo)
{

	//alert(e.datasets[0].saveXML());
	
	//업로드 성공 후 받은 데이터셋에서 해당 파일의 파일명을 데이터셋에 저장.
	ds_uploadresult.assign(e.datasets[0]);
	
	fileUpload.innerdataset = "";
	ds_uploadFile.clearData();
	
	for(var i=0; i<ds_uploadresult.rowcount; i++)
	{
        var nRow = eval(sFileDS).findRow("orgnlFileNm", ds_uploadresult.getColumn(i,"orgnlFileNm"));        
        if ( nRow != -1 )
        {
            eval(sFileDS).setColumn(nRow,"fileUploadNm",ds_uploadresult.getColumn(i,"fileUploadNm"));
        }		
	}
	
	v_bSuccessUpload = true;	//업로드 성공
}

/*----------------------------------------------------------------------------------------------
 * 설명   : 첨부파일 upload 오류 발생 시
 *---------------------------------------------------------------------------------------------*/
function fileUpload_onerror(obj:FileUpload,  e:FileUploadErrorEventInfo)
{
	v_bSuccessUpload = false;	//업로드 실패
	gfn_alert (e.errormsg); //서버에서 전송한 오류 메시지
}

/*----------------------------------------------------------------------------------------------
 * 설명   : 첨부파일 upload 성공후
 *---------------------------------------------------------------------------------------------*/
function HttpObject_onload(obj:HttpObject, e:HttpObjLoadEventInfo) {
    if (e.errorcode == 0) {
        v_bSuccessUpload = true;
    }

//     trace("e.errorcode : " + e.errorcode);
//     trace("e.errormsg : " + e.errormsg);
//     trace("e.eventid : " + e.eventid);
//     trace("e.fromobject : " + e.fromobject);
//     trace("e.fromreferenceobject : " + e.fromreferenceobject);
    var arrAllFileInfo = e.errormsg.split("||");
    
    for ( var i=0; i<arrAllFileInfo.length; i++ ) {
        var arrFileInfo = arrAllFileInfo[i].split("^");
        
//         var strAtchFileNm      = arrFileInfo[0];
//         var strAtchFileStreNm  = arrFileInfo[1];
//         var strAtchFileExt     = arrFileInfo[2];
//         var strAtchFileCoursNm = arrFileInfo[3];
//         
//         var nRow = eval(sFileDS).findRow("orgnlFileNm", strAtchFileNm);	
//         
//         if ( nRow != -1 )
//         {
//             eval(sFileDS).setColumn(nRow, "atchFileStreNm",  strAtchFileStreNm);
//             eval(sFileDS).setColumn(nRow, "atchFileCoursNm", strAtchFileCoursNm);
//         }
    }
}

function HttpObject_onstatus(obj:HttpObject, e:HttpObjStatusEventInfo) {
    
}
]]></Script>
  </Form>
</FDL>
