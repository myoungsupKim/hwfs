<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="ft.ftr.nonArrivinventoryDAO">
	<desc>도매유통수불현황 조회 HQML Query</desc>

	<!-- 도매유통수불현황 조회 목록을 조회한다. -->
	<statement name="selectList" type="select"><![CDATA[SELECT PO_ORDER_NUM,
       PO_PROPOSAL_NUM,
       PO_TYPE,
       SALE_TYPE,
       SALE_TYPE_NM,
       PO_PROGRESS_STATUS,
       PO_PROGRESS_STATUS_NM,
       PO_ORDER_STATUS,
       PO_ORDER_STATUS_NM,
       ATTACH_DEPT,
       ATTACH_DEPT_NM,
       BL_NUM,
       SLIP_STATUS,
       SLIP_STATUS_NM,
       SIGN_INSTANCE_ID,
       SIGN_PROGRESS_STATUS,
       SIGN_PROGRESS_STATUS_N,
       TOT_QUANTITY,
       TOT_WGT,
       PAY_AMT_KRW,
       DIV_ACCUM_BAL_AMT,
       DIV_ACCUM_BAL_AMT2,
       DIV_ACCUM_BAL_AMT3,
       PAY_AMT_KRW + DIV_ACCUM_BAL_AMT
       + DIV_ACCUM_BAL_AMT2 + DIV_ACCUM_BAL_AMT3 AS TOT_AMT,
       SLIP_AMT,
       DIV_AMT,
       DELIVER_AMT,
       NONARRIV_ALT_YN
FROM   (SELECT PO_ORDER_NUM,
               MAX(PO_PROPOSAL_NUM)         AS PO_PROPOSAL_NUM,
               MAX(PO_TYPE)                 AS PO_TYPE,
               MAX(SALE_TYPE)               AS SALE_TYPE,
               MAX(SALE_TYPE_NM)            AS SALE_TYPE_NM,
               MAX(PO_PROGRESS_STATUS)      AS PO_PROGRESS_STATUS,
               MAX(PO_PROGRESS_STATUS_NM)   AS PO_PROGRESS_STATUS_NM,
               MAX(PO_ORDER_STATUS)         AS PO_ORDER_STATUS,
               MAX(PO_ORDER_STATUS_NM)      AS PO_ORDER_STATUS_NM,
               MAX(ATTACH_DEPT)             AS ATTACH_DEPT,
               MAX(ATTACH_DEPT_NM)          AS ATTACH_DEPT_NM,
               MAX(BL_NUM)                  AS BL_NUM,
               MAX(SLIP_STATUS)             AS SLIP_STATUS,
               MAX(SLIP_STATUS_NM)          AS SLIP_STATUS_NM,
               MAX(SIGN_INSTANCE_ID)        AS SIGN_INSTANCE_ID,
               MAX(SIGN_PROGRESS_STATUS)    AS SIGN_PROGRESS_STATUS,
               MAX(SIGN_PROGRESS_STATUS_NM) AS SIGN_PROGRESS_STATUS_N,
               MAX(TOT_QUANTITY)            AS TOT_QUANTITY,
               MAX(TOT_WGT)                 AS TOT_WGT,
               MAX(PAY_AMT_KRW)             AS PAY_AMT_KRW,
               MAX(DIV_ACCUM_BAL_AMT)       AS DIV_ACCUM_BAL_AMT,
               MAX(DIV_ACCUM_BAL_AMT2)      AS DIV_ACCUM_BAL_AMT2,
               MAX(DIV_ACCUM_BAL_AMT3)      AS DIV_ACCUM_BAL_AMT3,
               MAX(SLIP_AMT)                AS SLIP_AMT,
               SUM(CASE
                     WHEN ALT_SLIP_DATE IS NOT NULL THEN
                       CASE
                         WHEN :baseYmd < ALT_SLIP_DATE THEN 0
                         --조회일자비교
                         ELSE NVL(DIV_AMT, 0)
                       END
                     ELSE 0
                   END)                     AS DIV_AMT,
               SUM(CASE
                     WHEN ALT_SLIP_DATE IS NOT NULL THEN
                       CASE
                         WHEN :baseYmd < ALT_SLIP_DATE THEN 0
                         --조회일자비교
                         ELSE NVL(WONWTR_AMT, 0)
                       END
                     ELSE 0
                   END)                     AS WONWTR_AMT,
               SUM(CASE
                     WHEN ALT_SLIP_DATE IS NOT NULL THEN
                       CASE
                         WHEN :baseYmd < ALT_SLIP_DATE THEN 0
                         --조회일자비교
                         ELSE NVL(DELIVER_AMT, 0)
                       END
                     ELSE 0
                   END)                     AS DELIVER_AMT,
               MIN(CASE
                     WHEN ALT_SLIP_DATE IS NOT NULL THEN
                       CASE
                         WHEN :baseYmd < ALT_SLIP_DATE THEN 'N'
                         --조회일자비교
                         ELSE NVL(NONARRIV_ALT_YN, 'N')
                       END
                     ELSE 'N'
                   END)                     AS NONARRIV_ALT_YN
        FROM   (SELECT T1.PO_PROPOSAL_NUM,
                       T1.PO_TYPE,
                       T1.PO_ORDER_NUM,
                       T1.PO_ORDER_DATE,
                       T1.SALE_TYPE,
                       T1.SALE_TYPE_NM,
                       T1.PO_PROGRESS_STATUS,
                       T1.PO_PROGRESS_STATUS_NM,
                       T1.PO_ORDER_STATUS,
                       T1.PO_ORDER_STATUS_NM,
                       T1.ATTACH_DEPT,
                       T1.ATTACH_DEPT_NM,
                       T1.BL_NUM,
                       T1.SLIP_STATUS,
                       T1.SLIP_STATUS_NM,
                       T1.SIGN_INSTANCE_ID,
                       T1.SIGN_PROGRESS_STATUS,
                       T1.SIGN_PROGRESS_STATUS_NM,
                       T1.TOT_QUANTITY,
                       T1.TOT_WGT,
                       T1.PAY_AMT_KRW,
                       T1.DIV_ACCUM_BAL_AMT,
                       T1.DIV_ACCUM_BAL_AMT2,
                       T1.DIV_ACCUM_BAL_AMT3,
                       T1.SLIP_AMT,
                       T3.ALT_SLIP_DATE,
                       T3.DIV_AMT,
                       T3.NONARRIV_ALT_YN,
                       T3.WONWTR_AMT,
                       T3.DELIVER_AMT
                FROM   (SELECT T1.PO_PROPOSAL_NUM,
                               T1.PO_TYPE,
                               T2.PO_ORDER_NUM,
                               T2.PO_ORDER_DATE,
                               T2.SALE_TYPE,
                               SCC_CODE_NM('SALE_TYPE', T2.SALE_TYPE)
                               AS
                               SALE_TYPE_NM
                                       ,
                               T2.PO_PROGRESS_STATUS,
                               SCC_CODE_NM('PO_PROGRESS_STATUS',
                               T2.PO_PROGRESS_STATUS)
                               AS
                               PO_PROGRESS_STATUS_NM,
                               T2.PO_ORDER_STATUS,
                               SCC_CODE_NM('PO_ORDER_STATUS',
                               T2.PO_ORDER_STATUS)
                               AS
                                       PO_ORDER_STATUS_NM,
                               T2.ATTACH_DEPT,
                               (SELECT CODE_NAME
                                FROM   SCC_COMMON_CODE
                                WHERE  GROUP_CODE = 'ATTACH_DEPT'
                                       AND CODE = T2.ATTACH_DEPT)
                               AS
                                       ATTACH_DEPT_NM,/* 귀속부서명 */
                               T2.BL_NUM,
                               T6.SLIP_STATUS,
                               SCC_CODE_NM('SLIP_STATUS', T6.SLIP_STATUS)
                               AS
                                       SLIP_STATUS_NM,
                               CASE
                                 WHEN T6.SLIP_STATUS IN ( 'R', 'C' ) THEN NULL
                                 --역분개, 임시전표취소 
                                 ELSE T4.SIGN_INSTANCE_ID
                               END
                               AS
                                       SIGN_INSTANCE_ID,
                               CASE
                                 WHEN T6.SLIP_STATUS IN ( 'R', 'C' ) THEN NULL
                                 --역분개, 임시전표취소 
                                 ELSE NVL(
                               SCC_SIGN_STATUS_FUN(T4.SIGN_INSTANCE_ID), '')
                               END
                               AS
                                       SIGN_PROGRESS_STATUS,
                               CASE
                                 WHEN T6.SLIP_STATUS IN ( 'R', 'C' ) THEN NULL
                                 --역분개, 임시전표취소 
                                 ELSE
                                   CASE SCC_SIGN_STATUS_FUN(T4.SIGN_INSTANCE_ID)
                                     WHEN 'COMPLETE' THEN
                                     SCC_CODE_NM('PO_PROPOSAL_STATUS',
                                     '30')
                                     WHEN 'REJECT' THEN
                                     SCC_CODE_NM('PO_PROPOSAL_STATUS', '40')
                                     WHEN 'CANCEL' THEN
                                     SCC_CODE_NM('PO_PROPOSAL_STATUS', '50')
                                     WHEN 'DRAFT' THEN
                                     SCC_CODE_NM('PO_PROPOSAL_STATUS'
                                     , '20')
                                     ELSE SCC_CODE_NM('PO_PROPOSAL_STATUS',
                                          T6.SLIP_STATUS)
                                   END
                               END
                               AS
                                       SIGN_PROGRESS_STATUS_NM,
                               T7.TOT_QUANTITY
                               AS
                               TOT_QUANTITY
                                       ,
                               T7.TOT_WGT
                                       AS TOT_WGT,
                               T7.WONWTR_AMT_KRW
                               AS
                               PAY_AMT_KRW,
                               (SELECT NVL(SUM(NVL(COMM_AMT, 0) - NVL(
                                               DIV_ACCUM_AMT, 0)
                                           ), 0)
                                FROM   PO_ORDER_OTHER_AMT OAMT
                                WHERE  PO_ORDER_NUM = T2.PO_ORDER_NUM
                                       AND NOT EXISTS (SELECT 'X'
                                                       FROM   SCC_COMMON_CODE
                                                       WHERE
                                               GROUP_CODE = 'COMM_CLASS'
                                               AND
                                                      CODE = OAMT.COMM_CLASS
                                                              AND ATTR03 = 'Y'))
                               AS
                                       DIV_ACCUM_BAL_AMT,
                               (SELECT ( NVL(SUM(NVL(COMM_AMT, 0) - NVL(
                                                 DIV_ACCUM_AMT,
                                                                    0)), 0)
                                       ) * -1
                                FROM   PO_ORDER_OTHER_AMT OAMT
                                WHERE  PO_ORDER_NUM = T2.PO_ORDER_NUM
                                       AND EXISTS (SELECT 'X'
                                                   FROM   SCC_COMMON_CODE
                                                   WHERE
                                           GROUP_CODE = 'COMM_CLASS'
                                           AND CODE = OAMT.COMM_CLASS
                                           AND ATTR03 = 'Y'))
                               AS
                                       DIV_ACCUM_BAL_AMT2,
                               (SELECT ( NVL(SUM(NVL(COMM_AMT, 0) - NVL(
                                                 DIV_ACCUM_AMT,
                                                                    0)), 0)
                                       ) * -1
                                FROM   PO_ORDER_OTHER_AMT OAMT
                                WHERE  PO_ORDER_NUM = T2.PO_ORDER_NUM
                                       AND EXISTS (SELECT 'X'
                                                   FROM   SCC_COMMON_CODE
                                                   WHERE
                                           GROUP_CODE = 'COMM_CLASS'
                                           AND CODE = OAMT.COMM_CLASS
                                           AND ATTR04 = 'Y'))
                               AS
                                       DIV_ACCUM_BAL_AMT3,
                               (SELECT SLIP_CURRENCY_AMT
                                FROM   SAP_IF.SAP_IFC_SLIP_DTL
                                WHERE  SLIP_NUM = T6.SLIP_NUM
                                       AND DR_CR_CLASS = 1)
                               AS
                               SLIP_AMT
                        FROM   PO_PROPOSAL_MST T1,
                               PO_ORDER_MST T2,
                               PO_ORDER_PAY_COND T3,
                               GDSPAYM_MST T4,
                               SAP_IF.SAP_IFC_SLIP_STATUS T5,
                               FT_SAP_INTERFACE T6,
                               (SELECT PO_ORDER_NUM,
                                       SUM(QUANTITY)       TOT_QUANTITY,
                                       SUM(WGT)            TOT_WGT,
                                       SUM(WONWTR_AMT)     TOT_WONWTR_AMT,
                                       SUM(WONWTR_AMT_KRW) AS WONWTR_AMT_KRW
                                FROM   PO_ORDER_ITEM_DETAIL
                                GROUP  BY PO_ORDER_NUM) T7
                        WHERE  T1.PO_PROPOSAL_NUM = T2.PO_PROPOSAL_NUM
                               AND T1.PO_TYPE = '10' /* 구매형태:수입 */
                               AND T2.PO_ORDER_STATUS = 'C' /* 상태:확정 */
                               AND T2.SALE_TYPE <> '40'
                               /* 판매유형 수수료 제외 */
                               AND T2.PO_ORDER_DATE <= :baseYmd
                               /* 조회기준일자 */
                            <#if attachDept?has_content>
                               AND T2.ATTACH_DEPT = :attachDept     /* 귀속부서 */
                            </#if>
                            <#if poOrderNum?has_content>
                               AND T2.PO_ORDER_NUM LIKE '%'||:poOrderNum||'%'    /*P/O No*/
                            </#if>
                            <#if blNum?has_content>
                               AND T2.BL_NUM LIKE '%'||:blNum||'%'
                            </#if>
                               AND T2.PO_ORDER_NUM = T3.PO_ORDER_NUM
                               AND T3.PO_ORDER_NUM = T4.PO_ORDER_NUM(+)
                               AND T3.PAY_COND_SEQ = T4.SEQ(+)
                               AND T4.SLIP_NUM = T5.SLIP_NUM(+)
                               AND T4.SLIP_NUM = T6.SLIP_NUM(+)
                               AND T2.PO_ORDER_NUM = T7.PO_ORDER_NUM(+)) T1,
                       (SELECT T1.PO_ORDER_NUM,
                               MAX(T2.ALT_SLIP_DATE)             AS
                               ALT_SLIP_DATE,
                               NVL(SUM(T2.DIV_AMT), 0)           AS DIV_AMT,
                               NVL(MAX(T2.NONARRIV_ALT_YN), 'N') AS
                               NONARRIV_ALT_YN,
                               NVL(SUM(ROUND(CASE
                                               WHEN T1.PO_TYPE = '10' THEN
                                                 --수입(KRW) 
                                                 CASE
                                                   WHEN T1.DELIVER_STATUS = '10'
                                                 THEN
                                                 --가입고건이면 수입면허의 원물대 가져오기 
                                                 (SELECT T.ENTRY_REQ_WONWTR_AMT
                                                  FROM   ENTRY_ITEM_DETAIL T
                                                  WHERE  T1.PO_ORDER_NUM =
                                                         T.PO_ORDER_NUM
                                                         AND T1.ITEM_CD =
                                                             T.ITEM_CD
                                                         AND T1.ITEM_SEQ =
                                                             T.ITEM_SEQ)
                                                 *
                                                 T1.LSHIP_EXCHANGE_RATE
                                                   ELSE ROUND(T1.DELIVER_AMT)
                                                 END
                                               ELSE T1.DELIVER_AMT
                                             END)), 0)           WONWTR_AMT,
                               --원물대 금액 
                               NVL(SUM(CASE
                                         WHEN T1.PO_TYPE = '10' THEN
                                       --수입(KRW) 
                                       ROUND(( T1.DELIVER_AMT + NVL(T2.DIV_AMT,
                                               0) ))
                                         ELSE T1.DELIVER_AMT
                                       END), 0)                  DELIVER_AMT
                        FROM   INVENTORY_MGMT_DELIVER T1,
                               (SELECT A.DELIVER_NUM,
                                       MAX(A.ALT_SLIP_DATE)             AS
                                       ALT_SLIP_DATE,
                                       SUM(A.DIV_AMT)                   AS
                                       DIV_AMT,
                                       NVL(MAX(A.NONARRIV_ALT_YN), 'N') AS
                                       NONARRIV_ALT_YN
                                FROM   DELIVERITEM_OTHER_AMT_DIV A,
                                       SAP_IF.SAP_IFC_SLIP_STATUS B,
                                       FT_SAP_INTERFACE C
                                WHERE  A.ALT_FISCAL_SLIP_NUM = B.SLIP_NUM
                                       AND A.ALT_FISCAL_SLIP_NUM = C.SLIP_NUM
                                       AND B.SLIP_STATUS IN (
                                           'A', 'J', 'P', 'V', 'X' )
                                --전표요청, 전표생성, 전표확정, 임시전표, 강제전표 
                                GROUP  BY A.DELIVER_NUM) T2
                        WHERE  T1.DELIVER_STATUS = '20'
                               AND T1.DELIVER_NUM = T2.DELIVER_NUM
                        GROUP  BY T1.PO_ORDER_NUM) T3
                WHERE  T1.PO_ORDER_NUM = T3.PO_ORDER_NUM(+)) MASTER
        WHERE  1 = 1
        GROUP  BY PO_ORDER_NUM)
WHERE  1 = 1
       AND NOT( PAY_AMT_KRW = WONWTR_AMT
                AND WONWTR_AMT = ( DELIVER_AMT - DIV_AMT )
                AND NONARRIV_ALT_YN = 'Y' )
       AND NONARRIV_ALT_YN = 'N'
       AND PAY_AMT_KRW + DIV_ACCUM_BAL_AMT + DIV_ACCUM_BAL_AMT2 + DIV_ACCUM_BAL_AMT3 <> 0]]></statement>

	<statement name="selectHist"><![CDATA[SELECT PO_ORDER_NUM,
       PO_PROPOSAL_NUM,
       PO_TYPE,
       SALE_TYPE,
       SALE_TYPE_NM,
       PO_PROGRESS_STATUS,
       PO_PROGRESS_STATUS_NM,
       PO_ORDER_STATUS,
       PO_ORDER_STATUS_NM,
       ATTACH_DEPT,
       ATTACH_DEPT_NM,
       BL_NUM,
       SLIP_STATUS,
       SLIP_STATUS_NM,
       SIGN_INSTANCE_ID,
       SIGN_PROGRESS_STATUS,
       SIGN_PROGRESS_STATUS_N,
       TOT_QUANTITY,
       TOT_WGT,
       PAY_AMT_KRW,
       DIV_ACCUM_BAL_AMT,
       DIV_ACCUM_BAL_AMT2,
       DIV_ACCUM_BAL_AMT3,
       PAY_AMT_KRW + DIV_ACCUM_BAL_AMT
       + DIV_ACCUM_BAL_AMT2 + DIV_ACCUM_BAL_AMT3 AS TOT_AMT,
       SLIP_AMT,
       DIV_AMT,
       DELIVER_AMT,
       NONARRIV_ALT_YN
FROM   (SELECT PO_ORDER_NUM,
               MAX(PO_PROPOSAL_NUM)         AS PO_PROPOSAL_NUM,
               MAX(PO_TYPE)                 AS PO_TYPE,
               MAX(SALE_TYPE)               AS SALE_TYPE,
               MAX(SALE_TYPE_NM)            AS SALE_TYPE_NM,
               MAX(PO_PROGRESS_STATUS)      AS PO_PROGRESS_STATUS,
               MAX(PO_PROGRESS_STATUS_NM)   AS PO_PROGRESS_STATUS_NM,
               MAX(PO_ORDER_STATUS)         AS PO_ORDER_STATUS,
               MAX(PO_ORDER_STATUS_NM)      AS PO_ORDER_STATUS_NM,
               MAX(ATTACH_DEPT)             AS ATTACH_DEPT,
               MAX(ATTACH_DEPT_NM)          AS ATTACH_DEPT_NM,
               MAX(BL_NUM)                  AS BL_NUM,
               MAX(SLIP_STATUS)             AS SLIP_STATUS,
               MAX(SLIP_STATUS_NM)          AS SLIP_STATUS_NM,
               MAX(SIGN_INSTANCE_ID)        AS SIGN_INSTANCE_ID,
               MAX(SIGN_PROGRESS_STATUS)    AS SIGN_PROGRESS_STATUS,
               MAX(SIGN_PROGRESS_STATUS_NM) AS SIGN_PROGRESS_STATUS_N,
               MAX(TOT_QUANTITY)            AS TOT_QUANTITY,
               MAX(TOT_WGT)                 AS TOT_WGT,
               MAX(PAY_AMT_KRW)             AS PAY_AMT_KRW,
               MAX(DIV_ACCUM_BAL_AMT)       AS DIV_ACCUM_BAL_AMT,
               MAX(DIV_ACCUM_BAL_AMT2)      AS DIV_ACCUM_BAL_AMT2,
               MAX(DIV_ACCUM_BAL_AMT3)      AS DIV_ACCUM_BAL_AMT3,
               MAX(SLIP_AMT)                AS SLIP_AMT,
               SUM(CASE
                     WHEN ALT_SLIP_DATE IS NOT NULL THEN
                       CASE
                         WHEN :baseYmd < ALT_SLIP_DATE THEN 0
                         --조회일자비교
                         ELSE NVL(DIV_AMT, 0)
                       END
                     ELSE 0
                   END)                     AS DIV_AMT,
               SUM(CASE
                     WHEN ALT_SLIP_DATE IS NOT NULL THEN
                       CASE
                         WHEN :baseYmd < ALT_SLIP_DATE THEN 0
                         --조회일자비교
                         ELSE NVL(WONWTR_AMT, 0)
                       END
                     ELSE 0
                   END)                     AS WONWTR_AMT,
               SUM(CASE
                     WHEN ALT_SLIP_DATE IS NOT NULL THEN
                       CASE
                         WHEN :baseYmd < ALT_SLIP_DATE THEN 0
                         --조회일자비교
                         ELSE NVL(DELIVER_AMT, 0)
                       END
                     ELSE 0
                   END)                     AS DELIVER_AMT,
               MIN(CASE
                     WHEN ALT_SLIP_DATE IS NOT NULL THEN
                       CASE
                         WHEN :baseYmd < ALT_SLIP_DATE THEN 'N'
                         --조회일자비교
                         ELSE NVL(NONARRIV_ALT_YN, 'N')
                       END
                     ELSE 'N'
                   END)                     AS NONARRIV_ALT_YN
        FROM   (SELECT T1.PO_PROPOSAL_NUM,
                       T1.PO_TYPE,
                       T1.PO_ORDER_NUM,
                       T1.PO_ORDER_DATE,
                       T1.SALE_TYPE,
                       T1.SALE_TYPE_NM,
                       T1.PO_PROGRESS_STATUS,
                       T1.PO_PROGRESS_STATUS_NM,
                       T1.PO_ORDER_STATUS,
                       T1.PO_ORDER_STATUS_NM,
                       T1.ATTACH_DEPT,
                       T1.ATTACH_DEPT_NM,
                       T1.BL_NUM,
                       T1.SLIP_STATUS,
                       T1.SLIP_STATUS_NM,
                       T1.SIGN_INSTANCE_ID,
                       T1.SIGN_PROGRESS_STATUS,
                       T1.SIGN_PROGRESS_STATUS_NM,
                       T1.TOT_QUANTITY,
                       T1.TOT_WGT,
                       T1.PAY_AMT_KRW,
                       T1.DIV_ACCUM_BAL_AMT,
                       T1.DIV_ACCUM_BAL_AMT2,
                       T1.DIV_ACCUM_BAL_AMT3,
                       T1.SLIP_AMT,
                       T3.ALT_SLIP_DATE,
                       T3.DIV_AMT,
                       T3.NONARRIV_ALT_YN,
                       T3.WONWTR_AMT,
                       T3.DELIVER_AMT
                FROM   (SELECT T1.PO_PROPOSAL_NUM,
                               T1.PO_TYPE,
                               T2.PO_ORDER_NUM,
                               T2.PO_ORDER_DATE,
                               T2.SALE_TYPE,
                               SCC_CODE_NM('SALE_TYPE', T2.SALE_TYPE)
                               AS
                               SALE_TYPE_NM
                                       ,
                               T2.PO_PROGRESS_STATUS,
                               SCC_CODE_NM('PO_PROGRESS_STATUS',
                               T2.PO_PROGRESS_STATUS)
                               AS
                               PO_PROGRESS_STATUS_NM,
                               T2.PO_ORDER_STATUS,
                               SCC_CODE_NM('PO_ORDER_STATUS',
                               T2.PO_ORDER_STATUS)
                               AS
                                       PO_ORDER_STATUS_NM,
                               T2.ATTACH_DEPT,
                               (SELECT CODE_NAME
                                FROM   SCC_COMMON_CODE
                                WHERE  GROUP_CODE = 'ATTACH_DEPT'
                                       AND CODE = T2.ATTACH_DEPT)
                               AS
                                       ATTACH_DEPT_NM,/* 귀속부서명 */
                               T2.BL_NUM,
                               T6.SLIP_STATUS,
                               SCC_CODE_NM('SLIP_STATUS', T6.SLIP_STATUS)
                               AS
                                       SLIP_STATUS_NM,
                               CASE
                                 WHEN T6.SLIP_STATUS IN ( 'R', 'C' ) THEN NULL
                                 --역분개, 임시전표취소 
                                 ELSE T4.SIGN_INSTANCE_ID
                               END
                               AS
                                       SIGN_INSTANCE_ID,
                               CASE
                                 WHEN T6.SLIP_STATUS IN ( 'R', 'C' ) THEN NULL
                                 --역분개, 임시전표취소 
                                 ELSE NVL(
                               SCC_SIGN_STATUS_FUN(T4.SIGN_INSTANCE_ID), '')
                               END
                               AS
                                       SIGN_PROGRESS_STATUS,
                               CASE
                                 WHEN T6.SLIP_STATUS IN ( 'R', 'C' ) THEN NULL
                                 --역분개, 임시전표취소 
                                 ELSE
                                   CASE SCC_SIGN_STATUS_FUN(T4.SIGN_INSTANCE_ID)
                                     WHEN 'COMPLETE' THEN
                                     SCC_CODE_NM('PO_PROPOSAL_STATUS',
                                     '30')
                                     WHEN 'REJECT' THEN
                                     SCC_CODE_NM('PO_PROPOSAL_STATUS', '40')
                                     WHEN 'CANCEL' THEN
                                     SCC_CODE_NM('PO_PROPOSAL_STATUS', '50')
                                     WHEN 'DRAFT' THEN
                                     SCC_CODE_NM('PO_PROPOSAL_STATUS'
                                     , '20')
                                     ELSE SCC_CODE_NM('PO_PROPOSAL_STATUS',
                                          T6.SLIP_STATUS)
                                   END
                               END
                               AS
                                       SIGN_PROGRESS_STATUS_NM,
                               T7.TOT_QUANTITY
                               AS
                               TOT_QUANTITY
                                       ,
                               T7.TOT_WGT
                                       AS TOT_WGT,
                               T7.WONWTR_AMT_KRW
                               AS
                               PAY_AMT_KRW,
                               (SELECT NVL(SUM(NVL(COMM_AMT, 0) - NVL(
                                               DIV_ACCUM_AMT, 0)
                                           ), 0)
                                FROM   PO_ORDER_OTHER_AMT OAMT
                                WHERE  PO_ORDER_NUM = T2.PO_ORDER_NUM
                                       AND NOT EXISTS (SELECT 'X'
                                                       FROM   SCC_COMMON_CODE
                                                       WHERE
                                               GROUP_CODE = 'COMM_CLASS'
                                               AND
                                                      CODE = OAMT.COMM_CLASS
                                                              AND ATTR03 = 'Y'))
                               AS
                                       DIV_ACCUM_BAL_AMT,
                               (SELECT ( NVL(SUM(NVL(COMM_AMT, 0) - NVL(
                                                 DIV_ACCUM_AMT,
                                                                    0)), 0)
                                       ) * -1
                                FROM   PO_ORDER_OTHER_AMT OAMT
                                WHERE  PO_ORDER_NUM = T2.PO_ORDER_NUM
                                       AND EXISTS (SELECT 'X'
                                                   FROM   SCC_COMMON_CODE
                                                   WHERE
                                           GROUP_CODE = 'COMM_CLASS'
                                           AND CODE = OAMT.COMM_CLASS
                                           AND ATTR03 = 'Y'))
                               AS
                                       DIV_ACCUM_BAL_AMT2,
                               (SELECT ( NVL(SUM(NVL(COMM_AMT, 0) - NVL(
                                                 DIV_ACCUM_AMT,
                                                                    0)), 0)
                                       ) * -1
                                FROM   PO_ORDER_OTHER_AMT OAMT
                                WHERE  PO_ORDER_NUM = T2.PO_ORDER_NUM
                                       AND EXISTS (SELECT 'X'
                                                   FROM   SCC_COMMON_CODE
                                                   WHERE
                                           GROUP_CODE = 'COMM_CLASS'
                                           AND CODE = OAMT.COMM_CLASS
                                           AND ATTR04 = 'Y'))
                               AS
                                       DIV_ACCUM_BAL_AMT3,
                               (SELECT SLIP_CURRENCY_AMT
                                FROM   SAP_IF.SAP_IFC_SLIP_DTL
                                WHERE  SLIP_NUM = T6.SLIP_NUM
                                       AND DR_CR_CLASS = 1)
                               AS
                               SLIP_AMT
                        FROM   PO_PROPOSAL_MST T1,
                               PO_ORDER_MST T2,
                               PO_ORDER_PAY_COND T3,
                               GDSPAYM_MST T4,
                               SAP_IF.SAP_IFC_SLIP_STATUS T5,
                               FT_SAP_INTERFACE T6,
                               (SELECT PO_ORDER_NUM,
                                       SUM(QUANTITY)       TOT_QUANTITY,
                                       SUM(WGT)            TOT_WGT,
                                       SUM(WONWTR_AMT)     TOT_WONWTR_AMT,
                                       SUM(WONWTR_AMT_KRW) AS WONWTR_AMT_KRW
                                FROM   PO_ORDER_ITEM_DETAIL
                                GROUP  BY PO_ORDER_NUM) T7
                        WHERE  T1.PO_PROPOSAL_NUM = T2.PO_PROPOSAL_NUM
                               AND T1.PO_TYPE = '10' /* 구매형태:수입 */
                               AND T2.PO_ORDER_STATUS = 'C' /* 상태:확정 */
                               AND T2.SALE_TYPE <> '40'
                               /* 판매유형 수수료 제외 */
                               AND T2.PO_ORDER_DATE <= :baseYmd
                               /* 조회기준일자 */
                            <#if attachDept?has_content>
                               AND T2.ATTACH_DEPT = :attachDept     /* 귀속부서 */
                            </#if>
                            <#if poOrderNum?has_content>
                               AND T2.PO_ORDER_NUM LIKE '%'||:poOrderNum||'%'    /*P/O No*/
                            </#if>
                            <#if blNum?has_content>
                               AND T2.BL_NUM LIKE '%'||:blNum||'%'
                            </#if>
                               AND T2.PO_ORDER_NUM = T3.PO_ORDER_NUM
                               AND T3.PO_ORDER_NUM = T4.PO_ORDER_NUM(+)
                               AND T3.PAY_COND_SEQ = T4.SEQ(+)
                               AND T4.SLIP_NUM = T5.SLIP_NUM(+)
                               AND T4.SLIP_NUM = T6.SLIP_NUM(+)
                               AND T2.PO_ORDER_NUM = T7.PO_ORDER_NUM(+)) T1,
                       (SELECT T1.PO_ORDER_NUM,
                               MAX(T2.ALT_SLIP_DATE)             AS
                               ALT_SLIP_DATE,
                               NVL(SUM(T2.DIV_AMT), 0)           AS DIV_AMT,
                               NVL(MAX(T2.NONARRIV_ALT_YN), 'N') AS
                               NONARRIV_ALT_YN,
                               NVL(SUM(ROUND(CASE
                                               WHEN T1.PO_TYPE = '10' THEN
                                                 --수입(KRW) 
                                                 CASE
                                                   WHEN T1.DELIVER_STATUS = '10'
                                                 THEN
                                                 --가입고건이면 수입면허의 원물대 가져오기 
                                                 (SELECT T.ENTRY_REQ_WONWTR_AMT
                                                  FROM   ENTRY_ITEM_DETAIL T
                                                  WHERE  T1.PO_ORDER_NUM =
                                                         T.PO_ORDER_NUM
                                                         AND T1.ITEM_CD =
                                                             T.ITEM_CD
                                                         AND T1.ITEM_SEQ =
                                                             T.ITEM_SEQ)
                                                 *
                                                 T1.LSHIP_EXCHANGE_RATE
                                                   ELSE ROUND(T1.DELIVER_AMT)
                                                 END
                                               ELSE T1.DELIVER_AMT
                                             END)), 0)           WONWTR_AMT,
                               --원물대 금액 
                               NVL(SUM(CASE
                                         WHEN T1.PO_TYPE = '10' THEN
                                       --수입(KRW) 
                                       ROUND(( T1.DELIVER_AMT + NVL(T2.DIV_AMT,
                                               0) ))
                                         ELSE T1.DELIVER_AMT
                                       END), 0)                  DELIVER_AMT
                        FROM   INVENTORY_MGMT_DELIVER T1,
                               (SELECT A.DELIVER_NUM,
                                       MAX(A.ALT_SLIP_DATE)             AS
                                       ALT_SLIP_DATE,
                                       SUM(A.DIV_AMT)                   AS
                                       DIV_AMT,
                                       NVL(MAX(A.NONARRIV_ALT_YN), 'N') AS
                                       NONARRIV_ALT_YN
                                FROM   DELIVERITEM_OTHER_AMT_DIV A,
                                       SAP_IF.SAP_IFC_SLIP_STATUS B,
                                       FT_SAP_INTERFACE C
                                WHERE  A.ALT_FISCAL_SLIP_NUM = B.SLIP_NUM
                                       AND A.ALT_FISCAL_SLIP_NUM = C.SLIP_NUM
                                       AND B.SLIP_STATUS IN (
                                           'A', 'J', 'P', 'V', 'X' )
                                --전표요청, 전표생성, 전표확정, 임시전표, 강제전표 
                                GROUP  BY A.DELIVER_NUM) T2
                        WHERE  T1.DELIVER_STATUS = '20'
                               AND T1.DELIVER_NUM = T2.DELIVER_NUM
                        GROUP  BY T1.PO_ORDER_NUM) T3
                WHERE  T1.PO_ORDER_NUM = T3.PO_ORDER_NUM(+)) MASTER
        WHERE  1 = 1
        GROUP  BY PO_ORDER_NUM)
WHERE  1 = 1
       AND NOT( PAY_AMT_KRW = WONWTR_AMT
                AND WONWTR_AMT = ( DELIVER_AMT - DIV_AMT )
                AND NONARRIV_ALT_YN = 'Y' )
       AND NONARRIV_ALT_YN = 'N'
       AND PAY_AMT_KRW + DIV_ACCUM_BAL_AMT + DIV_ACCUM_BAL_AMT2 + DIV_ACCUM_BAL_AMT3 <> 0]]></statement>
</hqml>
