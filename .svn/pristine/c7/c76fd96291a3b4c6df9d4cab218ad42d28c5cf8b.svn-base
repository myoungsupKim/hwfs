<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
		
	<description>
	<![CDATA[
		트랜잭션 관련 설정이 포함되어 있는 파일입니다.
	]]>
	</description>
  
	<!-- 통합영업 TxManager START -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
		
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<aop:config>
		<!-- 기존 설정 막음 by kksoo 
		<aop:advisor pointcut="execution(* #{HoneEnv['hone.service.basePackage']}..*Service.*(..))" advice-ref="txAdvice" />
		 -->
		 
		<!-- service.*Impl로 변경 및 tx 제외 설정 by kksoo -->
		<aop:advisor pointcut="execution(* #{HoneEnv['hone.service.basePackage']}..service.*Impl.*(..))
		    			  and !execution(* #{HoneEnv['hone.service.basePackage']}..service.LoginServiceImpl.get*(..))" advice-ref="txAdvice" />
	</aop:config>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- Method 단위로 트랜잭션propagation 설정하도록 구성 by kksoo -->
			<tx:method name="select*" propagation="NOT_SUPPORTED"   read-only="true" />
			<tx:method name="*NewTx"  propagation="REQUIRES_NEW" 	rollback-for="Exception"/>
			<tx:method name="*LongTx" propagation="REQUIRED"     	rollback-for="Exception" timeout="3600"/>
			<tx:method name="*"       rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	<!-- 통합영업 TxManager END -->

	<!-- 리조트FO TxManager START -->
	<bean id="transactionManagerResortfo" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="resortfoDataSource" />
	
	<tx:annotation-driven transaction-manager="transactionManagerResortfo" />
	<!-- 리조트FO TxManager END -->

	<!-- 이연fnc TxManager START -->
	<bean id="transactionManagerYfnc" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="yfncDataSource" />
	
	<tx:annotation-driven transaction-manager="transactionManagerYfnc" />
	<!-- 이연fnc TxManager END -->
	
	<!-- LocalFood TxManager START -->
	<bean id="transactionManagerLocalFood" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="localFoodDataSource" />
	
	<tx:annotation-driven transaction-manager="transactionManagerLocalFood" />
	<!-- LocalFood TxManager END -->

	<!-- 식재앱 TxManager START -->
	<bean id="transactionManagerfdapp" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="fdappDataSource" />
	
	<tx:annotation-driven transaction-manager="transactionManagerfdapp" />
	<!-- 식재앱 TxManager END -->
	
	<bean id="transactionManagerSIS" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="sisDataSource" />

	<tx:annotation-driven transaction-manager="transactionManagerSIS" />
	
	<!-- Jennifer TxManager START -->
	<!-- 
	<bean id="transactionManagerJennifer" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="jenniferDataSource" />
	<tx:annotation-driven transaction-manager="transactionManagerJennifer" />
	 -->
	<!-- Jennifer TxManager END -->
</beans>