<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="../../../default_typedef.xml"/>
  <Form id="FSM00021P" onload="form_onload" titletext="영양평가" position="absolute 0 0 990 640" scrollbars="none">
    <Layouts>
      <Layout>
        <Static id="Static02" position="absolute 15 40 975 81" class="sta_WFSA_Labelbg"/>
        <Static id="Static03" text="기간" position="absolute 30 48 90 74" class="sta_WFSA_label"/>
        <Combo codecolumn="CORNER_CODE" datacolumn="CORNER_NAME" displayrowcount="10" id="cbo_Corner" index="0" innerdataset="ds_Corner" onkeydown="fn_Common_OnKeyDown" taborder="4" position="absolute 367 50 467 71"/>
        <Static id="Static0" text="코너" position="absolute 326 48 386 74" class="sta_WFSA_label"/>
        <Static id="Static2" text="~" position="absolute 178 59 187 64"/>
        <Grid autoenter="select" binddataset="ds_List" cellmovingtype="col" cellsizingtype="both" readonly="false" enable="true" id="grd_List" useinputpanel="false" onheadclick="grd_List_OnHeadClick" taborder="0" tabstop="true" usecontextmenu="true" useselcolor="true" visible="true" wheelscrollrow="1" position="absolute 14 112 975 625" selecttype="row" autofittype="col">
          <Formats>
            <Format id="Default">
              <Columns>
                <Column size="30"/>
                <Column size="100"/>
                <Column size="123"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
              </Columns>
              <Rows>
                <Row size="22" band="head"/>
                <Row size="22" band="head"/>
                <Row size="24"/>
                <Row size="22" band="summary"/>
                <Row size="22" band="summary"/>
                <Row size="22" band="summary"/>
                <Row size="22" band="summary"/>
              </Rows>
              <Band id="head">
                <Cell rowspan="2" displaytype="text" class="head_Excel"/>
                <Cell col="1" rowspan="2" displaytype="text" text="제공일자" wordwrap="word"/>
                <Cell col="2" rowspan="2" displaytype="text" text="식  단"/>
                <Cell col="3" rowspan="2" displaytype="text" text="에너지&#10;(Kcal)"/>
                <Cell col="4" rowspan="2" displaytype="text" text="나트륨&#10;(mg)"/>
                <Cell col="5" rowspan="2" displaytype="text" text="당질&#10;(g)"/>
                <Cell col="6" rowspan="2" displaytype="text" text="단백질&#10;(g)"/>
                <Cell col="7" rowspan="2" displaytype="text" text="지질&#10;(g)"/>
                <Cell col="8" rowspan="2" displaytype="text" text="비타민A&#10;(R.E)"/>
                <Cell col="9" rowspan="2" displaytype="text" text="비타민B1&#10;(mg)"/>
                <Cell col="10" rowspan="2" displaytype="text" text="비타민B2&#10;(mg)"/>
                <Cell col="11" rowspan="2" displaytype="text" text="비타민C&#10;(mg)"/>
                <Cell col="12" rowspan="2" displaytype="text" text="칼슘&#10;(mg)"/>
                <Cell col="13" rowspan="2" displaytype="text" text="철&#10;(mg)"/>
              </Band>
              <Band id="body">
                <Cell displaytype="text" style="align:center;background:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));background2:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));" expr="expr:currow+1"/>
                <Cell col="1" displaytype="text" style="align:left;background:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));background2:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));" text="bind:MENU_DATE" mask="expr:iif(gfn_length(MENU_DATE) &gt; 0, &quot;@@@@-@@-@@&quot;,&quot;&quot;)" suppress="1"/>
                <Cell col="2" displaytype="text" style="align:left;background:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));background2:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));" text="bind:MENU_DESC" expr="expr:decode(GetRowType(ds_List,currow), &quot;logical&quot;, &quot;평  균&quot;, MENU_DESC)" suppress="2"/>
                <Cell col="3" displaytype="number" style="align:right;background:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));background2:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));" text="bind:CAL" mask="###,##0.00"/>
                <Cell col="4" displaytype="number" style="align:right;background:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));background2:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));" text="bind:NA" mask="###,##0.00"/>
                <Cell col="5" displaytype="number" style="align:right;background:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));background2:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));" text="bind:CARBO" mask="###,##0.00"/>
                <Cell col="6" displaytype="number" style="align:right;background:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));background2:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));" text="bind:PROT" mask="###,##0.00"/>
                <Cell col="7" displaytype="number" style="align:right;background:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));background2:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));" text="bind:FAT" mask="###,##0.00"/>
                <Cell col="8" displaytype="number" style="align:right;background:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));background2:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));" text="bind:VITA_A" mask="###,##0.00"/>
                <Cell col="9" displaytype="number" style="align:right;background:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));background2:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));" text="bind:THIA" mask="###,##0.00"/>
                <Cell col="10" displaytype="number" style="align:right;background:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));background2:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));" text="bind:RIBO" mask="###,##0.00"/>
                <Cell col="11" displaytype="number" style="align:right;background:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));background2:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));" text="bind:VITA_C" mask="###,##0.00"/>
                <Cell col="12" displaytype="number" style="align:right;background:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));background2:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));" text="bind:CA" mask="###,##0.00"/>
                <Cell col="13" displaytype="number" style="align:right;background:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));background2:EXPR(decode(gfn_GetRowType(ds_list,currow),'logical','#e7e7ffff','#ffffffff'));" text="bind:FE" mask="###,##0.00"/>
              </Band>
              <Band id="summary">
                <Cell rowspan="2" colspan="3" style="align:left;background:#566572ff;background2:#566572ff;color:white;color2:white;"/>
                <Cell col="3" rowspan="2" style="align:center;background:#566572ff;background2:#566572ff;color:white;color2:white;" expr="expr:'에너지\n(Kcal)'"/>
                <Cell col="4" rowspan="2" style="align:center;background:#566572ff;background2:#566572ff;color:white;color2:white;" expr="expr:'나트륨\n(mg)'"/>
                <Cell col="5" rowspan="2" style="align:center;background:#566572ff;background2:#566572ff;color:white;color2:white;" expr="expr:'당질\n(g)'"/>
                <Cell col="6" rowspan="2" style="align:center;background:#566572ff;background2:#566572ff;color:white;color2:white;" expr="expr:'단백질\n(g)'"/>
                <Cell col="7" rowspan="2" style="align:center;background:#566572ff;background2:#566572ff;color:white;color2:white;" expr="expr:'지질\n(g)'"/>
                <Cell col="8" rowspan="2" style="align:center;background:#566572ff;background2:#566572ff;color:white;color2:white;" expr="expr:'비타민A\n(R.E)'"/>
                <Cell col="9" rowspan="2" style="align:center;background:#566572ff;background2:#566572ff;color:white;color2:white;" expr="expr:'비타민B1\n(mg)'"/>
                <Cell col="10" rowspan="2" style="align:center;background:#566572ff;background2:#566572ff;color:white;color2:white;" expr="expr:'비타민B2\n(mg)'"/>
                <Cell col="11" rowspan="2" style="align:center;background:#566572ff;background2:#566572ff;color:white;color2:white;" expr="expr:'비타민C\n(mg)'"/>
                <Cell col="12" rowspan="2" style="align:center;background:#566572ff;background2:#566572ff;color:white;color2:white;" expr="expr:'칼슘\n(mg)'"/>
                <Cell col="13" rowspan="2" style="align:center;background:#566572ff;background2:#566572ff;color:white;color2:white;" expr="expr:'철\n(mg)'"/>
                <Cell row="2" colspan="3" displaytype="text" style="align:center;background:EXPR(gfn_sumStyle(1,'BG'));background2:EXPR(gfn_sumStyle(1,'BG'));" text="기간평균"/>
                <Cell row="2" col="3" displaytype="number" style="background:EXPR(gfn_sumStyle(1,'BG'));background2:EXPR(gfn_sumStyle(1,'BG'));" expr="expr:fn_getAVG(&quot;CAL&quot;);" mask="###,##0.00"/>
                <Cell row="2" col="4" displaytype="number" style="background:EXPR(gfn_sumStyle(1,'BG'));background2:EXPR(gfn_sumStyle(1,'BG'));" expr="expr:fn_getAVG(&quot;CAL&quot;);" mask="###,##0.00"/>
                <Cell row="2" col="5" displaytype="number" style="background:EXPR(gfn_sumStyle(1,'BG'));background2:EXPR(gfn_sumStyle(1,'BG'));" expr="expr:fn_getAVG(&quot;CARBO&quot;)" mask="###,##0.00"/>
                <Cell row="2" col="6" displaytype="number" style="background:EXPR(gfn_sumStyle(1,'BG'));background2:EXPR(gfn_sumStyle(1,'BG'));" expr="expr:fn_getAVG(&quot;PROT&quot;)" mask="###,##0.00"/>
                <Cell row="2" col="7" displaytype="number" style="background:EXPR(gfn_sumStyle(1,'BG'));background2:EXPR(gfn_sumStyle(1,'BG'));" expr="expr:fn_getAVG(&quot;FAT&quot;)" mask="###,##0.00"/>
                <Cell row="2" col="8" displaytype="number" style="background:EXPR(gfn_sumStyle(1,'BG'));background2:EXPR(gfn_sumStyle(1,'BG'));" expr="expr:fn_getAVG(&quot;VITA_A&quot;)" mask="###,##0.00"/>
                <Cell row="2" col="9" displaytype="number" style="background:EXPR(gfn_sumStyle(1,'BG'));background2:EXPR(gfn_sumStyle(1,'BG'));" expr="expr:fn_getAVG(&quot;THIA&quot;)" mask="###,##0.00"/>
                <Cell row="2" col="10" displaytype="number" style="background:EXPR(gfn_sumStyle(1,'BG'));background2:EXPR(gfn_sumStyle(1,'BG'));" expr="expr:fn_getAVG(&quot;RIBO&quot;)" mask="###,##0.00"/>
                <Cell row="2" col="11" displaytype="number" style="background:EXPR(gfn_sumStyle(1,'BG'));background2:EXPR(gfn_sumStyle(1,'BG'));" expr="expr:fn_getAVG(&quot;VITA_C&quot;)" mask="###,##0.00"/>
                <Cell row="2" col="12" displaytype="number" style="background:EXPR(gfn_sumStyle(1,'BG'));background2:EXPR(gfn_sumStyle(1,'BG'));" expr="expr:fn_getAVG(&quot;CA&quot;)" mask="###,##0.00"/>
                <Cell row="2" col="13" displaytype="number" style="background:EXPR(gfn_sumStyle(1,'BG'));background2:EXPR(gfn_sumStyle(1,'BG'));" expr="expr:fn_getAVG(&quot;FE&quot;)" mask="###,##0.00"/>
                <Cell row="3" colspan="3" displaytype="text" style="align:center;background:EXPR(gfn_sumStyle(2,'BG'));background2:EXPR(gfn_sumStyle(2,'BG'));" text="CPF 비율"/>
                <Cell row="3" col="3" displaytype="text" style="background:EXPR(gfn_sumStyle(2,'BG'));background2:EXPR(gfn_sumStyle(2,'BG'));"/>
                <Cell row="3" col="4" displaytype="text" style="background:EXPR(gfn_sumStyle(2,'BG'));background2:EXPR(gfn_sumStyle(2,'BG'));"/>
                <Cell row="3" col="5" displaytype="text" style="background:EXPR(gfn_sumStyle(2,'BG'));background2:EXPR(gfn_sumStyle(2,'BG'));" expr="expr:fn_GetPerCPF(&quot;CARBO&quot;)"/>
                <Cell row="3" col="6" displaytype="text" style="background:EXPR(gfn_sumStyle(2,'BG'));background2:EXPR(gfn_sumStyle(2,'BG'));" expr="expr:fn_GetPerCPF(&quot;PROT&quot;)"/>
                <Cell row="3" col="7" displaytype="text" style="background:EXPR(gfn_sumStyle(2,'BG'));background2:EXPR(gfn_sumStyle(2,'BG'));" expr="expr:fn_GetPerCPF(&quot;FAT&quot;)"/>
                <Cell row="3" col="8" colspan="6" displaytype="text" style="background:EXPR(gfn_sumStyle(2,'BG'));background2:EXPR(gfn_sumStyle(2,'BG'));"/>
              </Band>
            </Format>
            <Format id="Default0">
              <Columns>
                <Column size="30"/>
                <Column size="78"/>
                <Column size="158"/>
                <Column size="87"/>
                <Column size="155"/>
                <Column size="85"/>
                <Column size="117"/>
                <Column size="39"/>
                <Column size="85"/>
                <Column size="80"/>
              </Columns>
              <Rows>
                <Row size="22" band="head"/>
                <Row size="20"/>
              </Rows>
              <Band id="head">
                <Cell displaytype="text" class="head_Excel"/>
                <Cell col="1" displaytype="text" text="레시피코드" wordwrap="word"/>
                <Cell col="2" displaytype="text" text="레시피명"/>
                <Cell col="3" displaytype="text" text="자재코드" wordwrap="word"/>
                <Cell col="4" displaytype="text" text="자재명" wordwrap="word"/>
                <Cell col="5" displaytype="text" text="자재 특성" wordwrap="word"/>
                <Cell col="6" displaytype="text" text="규격" wordwrap="word"/>
                <Cell col="7" displaytype="text" text="단위"/>
                <Cell col="8" displaytype="text" text="1인량 (g)" wordwrap="word"/>
                <Cell col="9" displaytype="text" text="표준원가" wordwrap="word"/>
              </Band>
              <Band id="body">
                <Cell displaytype="text" style="align:center;" expr="expr:currow+1"/>
                <Cell col="1" displaytype="text" style="align:left;" text="bind:RECIPE_CD" suppress="2"/>
                <Cell col="2" displaytype="text" style="align:left;" text="bind:RECIPE_NAME" suppress="3"/>
                <Cell col="3" displaytype="text" style="align:left;" text="bind:ITEM_CODE"/>
                <Cell col="4" displaytype="text" style="align:left;" text="bind:ITEM_NAME"/>
                <Cell col="5" displaytype="text" style="align:left;" text="bind:FEATURE_NAME"/>
                <Cell col="6" displaytype="text" style="align:left;" text="bind:ITEM_SIZE"/>
                <Cell col="7" displaytype="text" style="align:left;" text="bind:PO_UOM"/>
                <Cell col="8" displaytype="number" style="align:left;" text="bind:NEED_QTY"/>
                <Cell col="9" displaytype="number" style="align:left;" text="bind:UNIT_COST"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Static id="Static23" text="W15" visible="false" position="absolute 15 50 30 71" style="background:#ff000055;align:center middle;"/>
        <Static id="Static20" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 294 50 324 71"/>
        <Static id="Static24" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 357 50 367 71"/>
        <Static id="Static15" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 0 0 990 10"/>
        <Static id="Static07" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 0 0 15 640"/>
        <Static id="Static22" text="h05" class="Guide01_AreaRed" visible="false" position="absolute 728 35 975 40"/>
        <Static id="Static12" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 975 0 990 640"/>
        <Static id="Static01" text="h06" onclick="Static12_onclick" class="Guide01_AreaRed" visible="false" position="absolute 814 81 975 87" anchor="top right"/>
        <Static id="Static11" text="h05" class="Guide01_AreaRed" visible="false" position="absolute 814 107 975 112"/>
        <Static id="Static09" text="h13" class="Guide01_AreaRed" visible="false" position="absolute 15 81 215 94"/>
        <Static id="sta_WF_TitleLev01" text="조회결과" class="sta_WF_Title01" position="absolute 15 94 110 112"/>
        <Static id="Static10" text="h05" class="Guide01_AreaRed" visible="false" position="absolute 15 107 215 112"/>
        <Static id="Static04" text="h15" class="Guide01_AreaRed" visible="false" position="absolute 0 625 990 640" onclick="Static04_onclick"/>
        <ObjCalendar id="me_FromMenuDate" anchor="left top" titletext="캘린더" taborder="14" scrollbars="none" position="absolute 72 50 175 71"/>
        <Static id="Static05" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 62 50 72 71"/>
        <ObjCalendar id="me_ToMenuDate" anchor="left top" titletext="캘린더" taborder="15" scrollbars="none" position="absolute 191 50 294 71"/>
        <Button id="btn_close" taborder="16" text="닫기" onclick="fn_Close" class="btn_WF_CRUD" position="absolute 930 10 975 35" anchor="top right"/>
        <Static id="Static06" text="W102" visible="false" position="absolute 928 10 930 35" anchor="top right" style="background:#ff000055;align:center middle;"/>
        <Button id="btn_search" taborder="17" text="조회" onclick="fn_search" class="btn_WF_searchCm" position2="absolute r:62 w:59 t:10 h:25" positiontype="position2"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_List" keystring="MENU_DATE"/>
      <Dataset id="ds_Corner"/>
      <Dataset id="ds_Input">
        <ColumnInfo>
          <Column id="FROM_MENU_DATE" size="256" type="STRING"/>
          <Column id="TO_MENU_DATE" size="256" type="STRING"/>
          <Column id="MEAL" size="256" type="STRING"/>
          <Column id="CORNER" size="256" type="STRING"/>
          <Column id="MENU_TYPE" size="256" type="STRING"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="cbo_Corner" propid="value" datasetid="ds_Input" columnid="CORNER"/>
    </Bind>
    <Script type="xscript4.0"><![CDATA[ include "U_lib::lib_conversionCom.xjs";
/*
 ******************************************************************************************
 * 시스템구분   : 메뉴관리 > 식단관리 > 기간표준식단 관리
 * 프로그램명   : FSM00021P.XML
 * 기      능   : 영양분석
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-18
 * 비      고   : 
 *		- ds_List				: [Main DS] 영양평가 리스트 데이터셋
 *      - ds_Corner				: [DS] 검색 조건 코너 콤보 데이터셋
 *      - ds_Input				: [DS] 검색 조건 데이터셋
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
//=========================================================================================
// [ PART 1 ]
// Form에서 Include 할 내용을 정의
//
//=========================================================================================
//@@컨버터에서 주석처리 #include "LIB::sc_comon.js";			// 시스템공통 함수
//@@컨버터에서 주석처리 #include "LIB::lib_comm_0001.js";
//@@컨버터에서 주석처리 #include "LIB::tit_comm_0001.js";		// X-Framework Lib
//=========================================================================================
// [ PART 2 ]
// Form에서 사용될 전역변수를 선언
//
//=========================================================================================
//var f_FROM_MENU_DATE, f_TO_MENU_DATE, f_MEAL, f_MENU_TYPE;
//=========================================================================================
// [ PART 3 ]
// Form Loading 시 작업 정의
//
//=========================================================================================
function form_onload(obj:Form, e:LoadEventInfo)
{
	gfn_formOnLoad(this);

	// X-Framework : Action 정보 생성 
	fsp_init(this);
	
    //trace('fa_FROM_MENU_DATE => ' + fa_FROM_MENU_DATE + ' fa_TO_MENU_DATE => ' + fa_TO_MENU_DATE + ' fa_MEAL => ' + fa_MEAL + ' fa_MENU_TYPE => ' + fa_MENU_TYPE);			// 식단유형
	
	// 부모창에서 넘겨주는 Args
	f_FROM_MENU_DATE = fa_FROM_MENU_DATE;	// 제공일자 시작일
	f_TO_MENU_DATE   = fa_TO_MENU_DATE;		// 제공일자 종료일
	f_MEAL           = fa_MEAL;				// 끼니코드
	f_MENU_TYPE      = fa_MENU_TYPE;			// 식단유형
	
	// Test Data
	// f_FROM_MENU_DATE = "20071101";
	// f_TO_MENU_DATE   = "20071130";
	// f_MEAL           = "001";
	// f_MENU_TYPE      = "001";
	
	// Default Data Check
	if( gfn_length(gfn_trim(f_FROM_MENU_DATE))== 0 || gfn_trim(f_FROM_MENU_DATE)== null ) {
		g_Message("EE", "제공일자 시작일이 존재하지 않습니다.\n창을 닫습니다.");
		this.close();
	}
	if( gfn_length(gfn_trim(f_TO_MENU_DATE))== 0 || gfn_trim(f_TO_MENU_DATE)== null ) {
		g_Message("EE", "제공일자 종료일이 존재하지 않습니다.\n창을 닫습니다.");
		this.close();
	}
	if( gfn_length(gfn_trim(f_MEAL))== 0 || gfn_trim(f_MEAL)== null ) {
		g_Message("EE", "끼니코드가 존재하지 않습니다.\n창을 닫습니다.");
		this.close();
	}
	
		// 코너

	// Default Data Setting
	ds_Input.clearData();
	ds_Input.addRow();
	ds_Input.setColumn(0, "FROM_MENU_DATE", f_FROM_MENU_DATE);
	ds_Input.setColumn(0, "TO_MENU_DATE",   f_TO_MENU_DATE  );
	ds_Input.setColumn(0, "MEAL",           f_MEAL          );
	ds_Input.setColumn(0, "MENU_TYPE",      f_MENU_TYPE     ); 
	
	me_FromMenuDate.fn_initMonthCal(this, "", "", ds_Input, "FROM_MENU_DATE", "Y");
	me_ToMenuDate.fn_initMonthCal(this, "", "", ds_Input, "TO_MENU_DATE", "Y");
	
	fsp_clear(this);
	ds_Corner.clearData();
	fsp_addSearch(this,"fs/fsm:FSM00021P_S001");
	fsp_callService(this,"","","ds_Input=ds_Input","ds_Corner=ds_Corner","","fn_CallBackCorner","",true); 

	// Focus Setting
	me_FromMenuDate.setFocus();
}
//=========================================================================================
// [ PART 4 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,도움말,form닫기)
//
//=========================================================================================
/*
 ******************************************************************************************
 * 함  수  명   : fn_Search()
 * 기      능   : [조회버튼] 검색조건에 해당하는 정보를 조회
 ******************************************************************************************
 */
function fn_search(obj:Button, e:ClickEventInfo)
{
	// 검색조건 체크
	// 제공일자 범위 체크
	var v_FromDate = ds_Input.getColumn(0, "FROM_MENU_DATE");
	if( gfn_length(gfn_trim(v_FromDate))== 0 || gfn_trim(v_FromDate)== null ) {
		ds_Input.setColumn(0, "FROM_MENU_DATE", f_FROM_MENU_DATE);
	} else {
		if( parseInt(v_FromDate) < parseInt(f_FROM_MENU_DATE) ) {
			g_Message("EE", "제공일자 시작일은 ["+ gfn_subStr(f_FROM_MENU_DATE,0, 4)+ "-" + gfn_subStr(f_FROM_MENU_DATE,4, 2)+ "-" + gfn_subStr(f_FROM_MENU_DATE,6, 2)+"]보다\n작을 수 없습니다.");
			me_FromMenuDate.setFocus();
			return;
		}
	}
	var v_ToDate = ds_Input.getColumn(0, "TO_MENU_DATE");
	if( gfn_length(gfn_trim(ds_Input.getColumn(0, "TO_MENU_DATE")))== 0 || gfn_trim(ds_Input.getColumn(0, "TO_MENU_DATE"))== null ) {
		ds_Input.setColumn(0, "TO_MENU_DATE", f_TO_MENU_DATE);
	} else {
		if( parseInt(v_ToDate) > parseInt(f_TO_MENU_DATE) ) {
			g_Message("EE", "제공일자 종료일은 ["+ gfn_subStr(f_TO_MENU_DATE,0, 4)+ "-" + gfn_subStr(f_TO_MENU_DATE,4, 2)+ "-" + gfn_subStr(f_TO_MENU_DATE,6, 2)+"]을\n넘길 수 없습니다.");
			me_ToMenuDate.setFocus();
			return;
		}
	}

	// 검색조건 코너 Setting
	ds_Input.setColumn(0, "CORNER", gfn_trim(cbo_Corner.value));
	
	// Result DataSet Clear
	ds_List.clearData();
	
	// DataSet & callBack함수 정의 
	var actionName, cmdName, inData, outData, otherArg, callBackFnc;
	inData			= "ds_Input=ds_Input";
	outData			= "ds_List=ds_List";
	otherArg		= "";
	callBackFnc		= "fn_CallBackSearch"; 
	
	
    //trace(ds_Input.saveXML());
	
	fsp_clear(this);
	fsp_addSearch(this, "fs/fsm:FSM00021P_S002");
    fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);		// 서비스 호출
}

/*
 ******************************************************************************************
 * 함  수  명   : fn_Insert()
 * 기      능   : [등록버튼] 등록 버튼 클릭 시 처리되는 작업
 ******************************************************************************************
 */
function fn_insert()
{
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_Save()
 * 기      능   : [저장버튼] 저장 버튼 클릭 시 처리되는 작업
 ******************************************************************************************
 */
function fn_save()
{
}
/* 
 ******************************************************************************************
 * 함  수  명   : fn_Delete()
 * 기      능   : [삭제버튼] 삭제 시 처리되는 작업
 ******************************************************************************************
 */
function fn_delete(nRow)
{
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_Print()
 * 기      능   : [출력버튼] 출력 시 처리되는 작업
 ******************************************************************************************
 */
function fn_print()
{
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_Close()
 * 기      능   : [닫기버튼] 화면을 닫을때 처리되는 작업
 ******************************************************************************************
 */
function fn_Close(obj:Button, e:ClickEventInfo)
{
	this.close();
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_Help()
 * 기      능   : [도움말버튼] 도움말
 ******************************************************************************************
 */
function fn_help()
{
}
//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
//
//=========================================================================================
/*
 ******************************************************************************************
 * 함  수  명   : fn_CallBackCorner(errCode, errMsg)
 * 입      력   : errCode 	= 에러코드
				  errMsg	= 에러메세지
 * 반      환   : 없음
 * 기      능   : 코너 콤보 리스트 검색 후 콜백 함수
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-03
 ******************************************************************************************
 */
function fn_CallBackCorner(errCode, errMsg)
{
	if( errCode != 0 ) {
		return;
	} else {
	
	   cbo_Corner.index = 0;
	}
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_CallBackSearch()
 * 입      력   : errCode 	= 에러코드
				  errMsg	= 에러메세지
 * 반      환   : 없음
 * 기      능   : 리스트 조회 후 콜백 함수
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-07
 ******************************************************************************************
 */
function fn_CallBackSearch(errCode, errMsg)
{	
	if( errCode != 0 ) {
		return;
	} else {
	
	
//  var nCAL    = 0;
// 		var nCARBO  = 0;
// 		var nPROT   = 0;
// 		var nFAT    = 0;
// 		var nVITA_A = 0;
// 		var nTHIA   = 0;
// 		var nRIBO   = 0;
// 		var nVITA_C = 0;
// 		var nCA     = 0;
// 		var nFE     = 0;
// 
// 		var tCAL    = 0;
// 		var tCARBO  = 0;
// 		var tPROT   = 0;
// 		var tFAT    = 0;
// 		var tVITA_A = 0;
// 		var tTHIA   = 0;
// 		var tRIBO   = 0;
// 		var tVITA_C = 0;
// 		var tCA     = 0;
// 		var tFE     = 0;
// 		
// 		var aCAL    = 0;
// 		var aCARBO  = 0;
// 		var aPROT   = 0;
// 		var aFAT    = 0;
// 		var aVITA_A = 0;
// 		var aTHIA   = 0;
// 		var aRIBO   = 0;
// 		var aVITA_C = 0;
// 		var aCA     = 0;
// 		var aFE     = 0;
// 		
// 		var nRC = 0;
// 	
// 		for(var i=0;i<ds_List.rowcount;i++) {
// 		
// 		    if(GetRowType(ds_List,i) == 'logical') {
// 				nCAL    = 0;
// 				nCARBO  = 0;
// 				nPROT   = 0;
// 				nFAT    = 0;
// 				nVITA_A = 0;
// 				nTHIA   = 0;
// 				nRIBO   = 0;
// 				nVITA_C = 0;
// 				nCA     = 0;
// 				nFE     = 0;
// 		    } else {
// 		    
// 		        nRC = nRC + 1;
// 		    
// 				nCAL    = ds_List.getColumn(i,"CAL");
// 				nCARBO  = ds_List.getColumn(i,"CARBO");
// 				nPROT   = ds_List.getColumn(i,"PROT");
// 				nFAT    = ds_List.getColumn(i,"FAT");
// 				nVITA_A = ds_List.getColumn(i,"VITA_A");
// 				nTHIA   = ds_List.getColumn(i,"THIA");
// 				nRIBO   = ds_List.getColumn(i,"RIBO");
// 				nVITA_C = ds_List.getColumn(i,"VITA_C");
// 				nCA     = ds_List.getColumn(i,"CA");
// 				nFE     = ds_List.getColumn(i,"FE");
// 		    }
// 		    
// 				tCAL    = tCAL    + nCAL   ;
// 				tCARBO  = tCARBO  + nCARBO ;
// 				tPROT   = tPROT   + nPROT  ;
// 				tFAT    = tFAT    + nFAT   ;
// 				tVITA_A = tVITA_A + nVITA_A;
// 				tTHIA   = tTHIA   + nTHIA  ;
// 				tRIBO   = tRIBO   + nRIBO  ;
// 				tVITA_C = tVITA_C + nVITA_C;
// 				tCA     = tCA     + nCA    ;
// 				tFE     = tFE     + nFE    ;
// 		} 
// 		
// 		    aCAL    = Math.round(tCAL    / nRC,2);
// 			aCARBO  = Math.round(tCARBO  / nRC,2);
// 			aPROT   = Math.round(tPROT   / nRC,2);
// 			aFAT    = Math.round(tFAT    / nRC,2);
// 			aVITA_A = Math.round(tVITA_A / nRC,2);
// 			aTHIA   = Math.round(tTHIA   / nRC,2);
// 			aRIBO   = Math.round(tRIBO   / nRC,2);
// 			aVITA_C = Math.round(tVITA_C / nRC,2);
// 			aCA     = Math.round(tCA     / nRC,2);
// 			aFE     = Math.round(tFE     / nRC,2);	
// 			
// 			trace(aCAL);
	
	}
	
	
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_GetPerCPF(strColumnId)
 * 입      력   : strColumnId : 영양소 컬럼 아이디
 * 반      환   : CPF 비율
 * 기      능   : CPF 비율 계산
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-07
 ******************************************************************************************
 */
function fn_GetPerCPF(strColumnId)
{
	// CARBO : 당질
	// PROT : 단백질
	// FAT : 지질
	
	var nCol = 0;

	var tCol = 0;

	var aCARBO = 0;
	var aPROT  = 0;
	var aFAT   = 0;

	var nRC = 0;
	
	var sRet = '';
		
	if( ds_List.getRowCount() > 0 ) {
	
	    if(strColumnId == "CARBO" || strColumnId == "PROT" || strColumnId == "FAT") {
	
			var v_temp = 0;
		    nCol = 0;
		    tCol = 0;
		    nRC  = 0;
	
			for(var i=0;i<ds_List.rowcount;i++) {
		
				if(GetRowType(ds_List,i) == 'logical') {
					nCol    = 0;
				} else {
				
					nRC = nRC + 1;
				
					nCol    = ds_List.getColumn(i,"CARBO"); 
				}
				
					tCol    = tCol + nCol   ; 
			}
			
			 aCARBO =   tCol / nRC;
		    
		    nCol = 0;
		    tCol = 0;
		    nRC  = 0;
		    
		    for(var i=0;i<ds_List.rowcount;i++) {
		
				if(GetRowType(ds_List,i) == 'logical') {
					nCol    = 0;
				} else {
				
					nRC = nRC + 1;
				
					nCol    = ds_List.getColumn(i,"PROT"); 
				}
				
					tCol    = tCol + nCol   ; 
			}
			
			aPROT =   tCol / nRC;
			
			nCol = 0;
		    tCol = 0;
		    nRC  = 0;
		    
			for(var i=0;i<ds_List.rowcount;i++) {
		
				if(GetRowType(ds_List,i) == 'logical') {
					nCol    = 0;
				} else {
				
					nRC = nRC + 1;
				
					nCol    = ds_List.getColumn(i,"FAT"); 
				}
				
					tCol    = tCol + nCol   ; 
			}
			
			 aFAT =  tCol / nRC;
		
		
			switch(strColumnId) {
				case "CARBO" :
					v_temp = aCARBO * 4;
					break;
				case "PROT" :
					v_temp = aPROT * 4;
					break;
				case "FAT" :
					v_temp = aFAT * 9;
					break;
				default :
					return "-";
			}
			
			
		if( v_temp == 0 ) return "-";
		else  {
			sRet = gfn_toString( numFormat((v_temp / ((aCARBO * 4) + (aPROT * 4) + (aFAT * 9))) * 100, 2) )+ "%";
			
			//trace('sRet => ' + sRet);
			
			return sRet; }
	   }
	} else {
		return "-";
	}
}
//=========================================================================================
// [ PART 6 ]
// component Event 정의 ( User Define function )
// --> component Event의 기요,기능,동작 등 상세내용은 MiPlatform 메뉴얼을 참조하시기 바랍니다.
//=========================================================================================
/******************************************************************************************
 * 함  수  명   : btn_Date_OnClick(obj,nX,nY)
 * 기      능   : 달력 팝업 호출
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-08
 ******************************************************************************************
 */
function btn_Date_OnClick(obj:Button, e:ClickEventInfo)
{
	var objme = eval(obj.userdata);
	var retDate = gfn_dialog("", "U_SCC::SCC_CALENDAR.xfdl","fa_Date="+wrapQuote(objme.value),-1,-1,"Title=false Status=false");
	objme.value  = retDate;
}
/*------------------------------------------------------------
	1. Function    : grd_List_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
	2. Description : 엑셀 출력
	3. Arguments   : 
	4. History     : 2008. 04. 07 - 최초작성
*------------------------------------------------------------*/
function grd_List_OnHeadClick(obj:Grid, e:GridClickEventInfo)
{
	if( e.cell == 0 ) {	// Excel Export
		gfn_exportExcel(obj, "Sheet1");
	}
}
/*------------------------------------------------------------
	1. Function    : fn_Common_OnKeyDown(obj,nChar,bShift,bCtrl,bAlt,LLParam,HLParam)
	2. Description : Common Enter Key Event
	3. Arguments   : 
	4. History     : 2008. 04. 07 - 최초작성
*------------------------------------------------------------*/
function fn_Common_OnKeyDown(obj:MaskEdit, e:KeyEventInfo)
{
	switch(obj.name) {
		case "me_FromMenuDate" :
			if( e.keycode == 13 ) {
				me_ToMenuDate.setFocus();
			}
			break;
		case "me_ToMenuDate" :
			if( e.keycode == 13 ) {
				cbo_Corner.setFocus();
				cbo_Corner.dropdown();
			}
			break;
		case "cbo_Corner" :
			if( e.keycode == 13 ) {
				btn_Search.setFocus();
			}
			break;
		default :
			break;
	}
}

 
function fn_getAVG(sCol) {
	var nCol = 0;

	var tCol = 0;

	var aCol = 0;

	var nRC = 0;
	
	for(var i=0;i<ds_List.rowcount;i++) {
	
		if(GetRowType(ds_List,i) == 'logical') {
			nCol    = 0;
		} else {
		
			nRC = nRC + 1;
		
			nCol    = ds_List.getColumn(i,sCol); 
		}
		
			tCol    = tCol + nCol   ; 
	} 
	
    aCol = fn_clearNaN(Math.round(tCol / nRC,2)); 
		
    return aCol;
	
} ]]></Script>
  </Form>
</FDL>
