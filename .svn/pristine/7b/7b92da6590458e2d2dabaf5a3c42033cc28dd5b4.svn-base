<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="../../../default_typedef.xml"/>
  <Form id="FSM00051E" onload="form_onload" titletext="식수예측" position="absolute 0 0 1235 540" scrollbars="none">
    <Layouts>
      <Layout>
        <Static id="sta_detail05" class="sta_WFDA_Labelbg" position="absolute 10 12 299 39" onclick="sta_detail05_onclick" anchor="left top"/>
        <Div id="Div_pop" scrollbars="autoboth" taborder="2" text="Div0" visible="false" position="absolute 368 920 618 1020" class="sta_WFSA_Labelbg">
          <Layouts>
            <Layout>
              <Grid enable="true" id="Grid0" useinputpanel="false" taborder="1" tabstop="true" usecontextmenu="true" useselcolor="true" visible="true" wheelscrollrow="1" position="absolute 6 6 240 90" readonly="true" selecttype="row">
                <Formats>
                  <Format id="Default">
                    <Columns>
                      <Column size="230"/>
                    </Columns>
                    <Rows>
                      <Row size="18"/>
                    </Rows>
                    <Band id="body">
                      <Cell col="0" displaytype="text" style="align:left;"/>
                    </Band>
                  </Format>
                </Formats>
              </Grid>
            </Layout>
          </Layouts>
        </Div>
        <Grid enable="true" id="Grid0" useinputpanel="false" taborder="3" tabstop="true" usecontextmenu="true" useselcolor="true" visible="false" wheelscrollrow="1" position="absolute 0 928 364 1158" readonly="true" selecttype="row">
          <Formats>
            <Format id="Default">
              <Columns>
                <Column size="80"/>
                <Column size="80"/>
                <Column size="80"/>
                <Column size="80"/>
                <Column size="80"/>
                <Column size="80"/>
                <Column size="80"/>
              </Columns>
              <Rows>
                <Row size="18" band="head"/>
                <Row size="18"/>
              </Rows>
              <Band id="head">
                <Cell col="0" displaytype="text"/>
                <Cell col="1" displaytype="text"/>
                <Cell col="2" displaytype="text"/>
                <Cell col="3" displaytype="text"/>
                <Cell col="4" displaytype="text"/>
                <Cell col="5" displaytype="text"/>
                <Cell col="6" displaytype="text"/>
              </Band>
              <Band id="body">
                <Cell col="0" text="bind:fday" displaytype="text" style="align:left;"/>
                <Cell col="1" text="bind:wcd" displaytype="text" style="align:left;"/>
                <Cell col="2" text="bind:wcd" displaytype="text" style="align:left;"/>
                <Cell col="3" text="bind:we" displaytype="text" style="align:left;"/>
                <Cell col="4" text="bind:we_color" displaytype="text" style="align:left;"/>
                <Cell col="5" text="bind:wimg" displaytype="image" style="align:left;"/>
                <Cell col="6" text="bind:wnm" displaytype="text" style="align:left;"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Grid enable="true" id="Grid1" useinputpanel="false" taborder="4" tabstop="true" usecontextmenu="true" useselcolor="true" visible="false" wheelscrollrow="1" position="absolute 624 928 1009 1168" readonly="true" selecttype="row">
          <Formats>
            <Format id="Default">
              <Columns>
                <Column size="75" band="left"/>
                <Column size="15"/>
                <Column size="100"/>
                <Column size="36"/>
                <Column size="15"/>
                <Column size="100"/>
                <Column size="36"/>
                <Column size="15"/>
                <Column size="100"/>
                <Column size="36"/>
                <Column size="15"/>
                <Column size="100"/>
                <Column size="36"/>
                <Column size="15"/>
                <Column size="100"/>
                <Column size="36"/>
                <Column size="15"/>
                <Column size="100"/>
                <Column size="36"/>
                <Column size="15"/>
                <Column size="100"/>
                <Column size="36"/>
              </Columns>
              <Rows>
                <Row size="18" band="head"/>
                <Row size="18" band="head"/>
                <Row size="18"/>
                <Row size="18" band="summ"/>
              </Rows>
              <Band id="head">
                <Cell displaytype="text" text="일자"/>
                <Cell col="1" colspan="2" displaytype="text" text="12/31(월)"/>
                <Cell col="3" rowspan="2" displaytype="text"/>
                <Cell col="4" colspan="2" displaytype="text" text="1/1(화)"/>
                <Cell col="6" rowspan="2" displaytype="text"/>
                <Cell col="7" colspan="2" displaytype="text" text="1/2(수)"/>
                <Cell col="9" rowspan="2" displaytype="text"/>
                <Cell col="10" colspan="2" displaytype="text" text="1/3(목)"/>
                <Cell col="12" rowspan="2" displaytype="text"/>
                <Cell col="13" colspan="2" displaytype="text" text="1/4(금)"/>
                <Cell col="15" rowspan="2" displaytype="text"/>
                <Cell col="16" colspan="2" displaytype="text" text="1/5(토)"/>
                <Cell col="18" rowspan="2" displaytype="text"/>
                <Cell col="19" colspan="2" displaytype="text" text="1/6(일)"/>
                <Cell col="21" rowspan="2" displaytype="text"/>
                <Cell row="1" displaytype="text" text="일정"/>
                <Cell row="1" col="1" colspan="2" displaytype="text"/>
                <Cell row="1" col="4" colspan="2" displaytype="text"/>
                <Cell row="1" col="7" colspan="2" displaytype="text"/>
                <Cell row="1" col="10" colspan="2" displaytype="text"/>
                <Cell row="1" col="13" colspan="2" displaytype="text"/>
                <Cell row="1" col="16" colspan="2" displaytype="text"/>
                <Cell row="1" col="19" colspan="2" displaytype="text"/>
              </Band>
              <Band id="body">
                <Cell displaytype="text" style="align:center middle;background:EXPR(iif(toNumber(toNumber(sgbn_no)/2) == parseInt(toNumber(sgbn_no)/2), 'white', '#F6FCFC'));" expr="expr:iif(gfn_length(cgbn_nm)==0, sgbn_nm+cgbn, sgbn_nm+cgbn+'('+cgbn_nm+')')" suppress="1"/>
                <Cell col="1" colspan="3" displaytype="number" edittype="expr:setEditExpr(iif(real_meal_qty_1231 &gt; 0 || order_yn_1231 == 'Y' || curr_date &gt; fday_1231, 'none', 'integer'))" editfilter="expr:setfilterExpr(iif(real_meal_qty_1231 &gt; 0 || order_yn_1231 == 'Y' || curr_date &gt; fday_1231, 'none', 'integer'))" style="background:EXPR(iif(toNumber(toNumber(sgbn_no)/2) == parseInt(toNumber(sgbn_no)/2), 'white', '#F6FCFC'));align:left;" text="bind:expect_meal_qty_1231"/>
                <Cell col="4" colspan="3" displaytype="number" edittype="expr:setEditExpr(iif(real_meal_qty_0101 &gt; 0 || order_yn_0101 == 'Y' || curr_date &gt; fday_1231, 'none', 'integer'))" editfilter="expr:setfilterExpr(iif(real_meal_qty_0101 &gt; 0 || order_yn_0101 == 'Y' || curr_date &gt; fday_1231, 'none', 'integer'))" style="background:EXPR(iif(toNumber(toNumber(sgbn_no)/2) == parseInt(toNumber(sgbn_no)/2), 'white', '#F6FCFC'));align:left;" text="bind:expect_meal_qty_0101"/>
                <Cell col="7" colspan="3" displaytype="number" edittype="expr:setEditExpr(iif(real_meal_qty_0102 &gt; 0 || order_yn_0102 == 'Y' || curr_date &gt; fday_1231, 'none', 'integer'))" editfilter="expr:setfilterExpr(iif(real_meal_qty_0102 &gt; 0 || order_yn_0102 == 'Y' || curr_date &gt; fday_1231, 'none', 'integer'))" style="background:EXPR(iif(toNumber(toNumber(sgbn_no)/2) == parseInt(toNumber(sgbn_no)/2), 'white', '#F6FCFC'));align:left;" text="bind:expect_meal_qty_0102"/>
                <Cell col="10" colspan="3" displaytype="number" edittype="expr:setEditExpr(iif(real_meal_qty_0103 &gt; 0 || order_yn_0103 == 'Y' || curr_date &gt; fday_1231, 'none', 'integer'))" editfilter="expr:setfilterExpr(iif(real_meal_qty_0103 &gt; 0 || order_yn_0103 == 'Y' || curr_date &gt; fday_1231, 'none', 'integer'))" style="background:EXPR(iif(toNumber(toNumber(sgbn_no)/2) == parseInt(toNumber(sgbn_no)/2), 'white', '#F6FCFC'));align:left;" text="bind:expect_meal_qty_0103"/>
                <Cell col="13" colspan="3" displaytype="number" edittype="expr:setEditExpr(iif(real_meal_qty_0104 &gt; 0 || order_yn_0104 == 'Y' || curr_date &gt; fday_1231, 'none', 'integer'))" editfilter="expr:setfilterExpr(iif(real_meal_qty_0104 &gt; 0 || order_yn_0104 == 'Y' || curr_date &gt; fday_1231, 'none', 'integer'))" style="background:EXPR(iif(toNumber(toNumber(sgbn_no)/2) == parseInt(toNumber(sgbn_no)/2), 'white', '#F6FCFC'));align:left;" text="bind:expect_meal_qty_0104"/>
                <Cell col="16" colspan="3" displaytype="number" edittype="expr:setEditExpr(iif(real_meal_qty_0105 &gt; 0 || order_yn_0105 == 'Y' || curr_date &gt; fday_1231, 'none', 'integer'))" editfilter="expr:setfilterExpr(iif(real_meal_qty_0105 &gt; 0 || order_yn_0105 == 'Y' || curr_date &gt; fday_1231, 'none', 'integer'))" style="background:EXPR(iif(toNumber(toNumber(sgbn_no)/2) == parseInt(toNumber(sgbn_no)/2), 'white', '#F6FCFC'));align:left;" text="bind:expect_meal_qty_0105"/>
                <Cell col="19" colspan="3" displaytype="number" edittype="expr:setEditExpr(iif(real_meal_qty_0106 &gt; 0 || order_yn_0106 == 'Y' || curr_date &gt; fday_1231, 'none', 'integer'))" editfilter="expr:setfilterExpr(iif(real_meal_qty_0106 &gt; 0 || order_yn_0106 == 'Y' || curr_date &gt; fday_1231, 'none', 'integer'))" style="background:EXPR(iif(toNumber(toNumber(sgbn_no)/2) == parseInt(toNumber(sgbn_no)/2), 'white', '#F6FCFC'));align:left;" text="bind:expect_meal_qty_0106"/>
              </Band>
              <Band id="summary">
                <Cell style="align:center;"/>
                <Cell col="1" colspan="3" style="align:right;" expr="expr:getSum('')"/>
                <Cell col="4" colspan="3" style="align:right;" mask="#,###"/>
                <Cell col="7" colspan="3" style="align:right;"/>
                <Cell col="10" colspan="3" style="align:right;"/>
                <Cell col="13" colspan="3" style="align:right;"/>
                <Cell col="16" colspan="3" style="align:right;"/>
                <Cell col="19" colspan="3" style="align:right;"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <MaskEdit id="me_sikrate" mask="###.0" taborder="9" position="absolute 163 15 268 35" anchor="left top" ontextchanged="me_sikrate_OnChanged"/>
        <Grid autofittype="col" binddataset="ds_view" enable="true" fillareatype="none" id="Grid00" useinputpanel="false" autofitminwidth="100" taborder="13" tabstop="true" usecontextmenu="true" useselcolor="false" visible="true" wheelscrollrow="1" position="absolute 10 342 1225 530" readonly="true" selecttype="row" anchor="all">
          <Formats>
            <Format id="Default">
              <Columns>
                <Column size="60" band="left"/>
                <Column size="60"/>
                <Column size="100"/>
                <Column size="50"/>
                <Column size="530"/>
                <Column size="100"/>
              </Columns>
              <Rows>
                <Row size="22" band="head"/>
                <Row size="20"/>
                <Row size="22" band="summ"/>
              </Rows>
              <Band id="head">
                <Cell displaytype="text" text="일자"/>
                <Cell col="1" displaytype="text" text="날씨"/>
                <Cell col="2" displaytype="text" text="일정"/>
                <Cell col="3" displaytype="text" text="실식수"/>
                <Cell col="4" displaytype="text" text="제공식단"/>
                <Cell col="5" displaytype="text" text="식단특성"/>
              </Band>
              <Band id="body">
                <Cell displaytype="text" style="align:center;" text="bind:DAYS"/>
                <Cell col="1" displaytype="text" style="align:center;" text="bind:WDESC"/>
                <Cell col="2" displaytype="text" style="align:left;" text="bind:SCHEDULE"/>
                <Cell col="3" displaytype="text" style="align:right;" text="bind:REAL_MEAL_QTY"/>
                <Cell col="4" displaytype="text" style="align:left;" text="bind:SIKDAN"/>
                <Cell col="5" displaytype="text" style="align:left;" text="bind:MENU_FEATURE"/>
              </Band>
              <Band id="summary">
                <Cell displaytype="text" style="align:center;" text="평균"/>
                <Cell col="1" displaytype="text" style="align:left;"/>
                <Cell col="2" displaytype="text" style="align:left;"/>
                <Cell col="3" displaytype="number" style="align:right;" expr="expr:fn_clearNaN(Math.round(getAvg(&quot;REAL_MEAL_QTY&quot;),0))"/>
                <Cell col="4" displaytype="text" style="align:left;"/>
                <Cell col="5" displaytype="text" style="align:left;"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <TextArea id="TextArea0" taborder="1" value="TextArea0" visible="false" position="absolute 120 848 880 919"/>
        <Static id="Static15" text="h13" class="Guide01_AreaRed" visible="false" position="absolute 0 10 1235 23"/>
        <Static id="Static16" text="글자기준간격 h05" class="Guide01_AreaRed" visible="false" position="absolute 0 36 1235 41" onclick="Static16_onclick"/>
        <Static id="Static02" text="h13" class="Guide01_AreaRed" visible="false" position="absolute 1225 0 1235 719" onclick="Static02_onclick"/>
        <Static id="Static01" text="식당 목표식재료율(주간)" position="absolute 10 12 160 39" class="sta_WFDA_Label01" anchor="left top"/>
        <Static id="Static03" text="%" position="absolute 273 17 290 37" anchor="left top"/>
        <Static id="Static22" text="4주간 실식수" class="sta_WF_Title01" position="absolute 10 323 450 341" anchor="left top"/>
        <Static id="Static04" text="h13" class="Guide01_AreaRed" visible="false" position="absolute 0 310 1235 323"/>
        <Static id="Static05" text="글자기준간격 h05" onclick="Static16_onclick" class="Guide01_AreaRed" visible="false" position="absolute 0 337 1235 342"/>
        <Static id="Static00" text="글자기준간격 h05" onclick="Static16_onclick" class="Guide01_AreaRed" visible="false" position="absolute 0 528 1235 540"/>
        <Static id="Static06" text="h13" onclick="Static02_onclick" class="Guide01_AreaRed" visible="false" position="absolute 0 0 10 719"/>
        <Button id="btn_save" onclick="btn_save_OnClick" taborder="10" text="저장" position="absolute 1174 15 1225 37" class="btn_WF_Custom" image="" anchor="top right"/>
        <Button id="btn_copy" onclick="btn_copy_OnClick" taborder="16" text="전주예상식수복사" position="absolute 1061 15 1172 37" class="btn_WF_Custom" image="" anchor="top right"/>
        <Static id="Static10" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 1210 15 1225 36"/>
        <Grid id="grd_lst" taborder="17" wheelscrollrow="1" autoenter="select" useinputpanel="false" selecttype="cell" cellsizingtype="both" autofittype="col" useselcolor="false" onmousemove="grd_lst_OnMouseOver" onselectchanged="grd_lst_OnCellPosChanged" position="absolute 10 41 1225 309" anchor="left top right" onmouseleave="grd_lst_OnMouseOut">
          <Formats>
            <Format id="default"/>
          </Formats>
        </Grid>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="DS_menu1" cancolumnchange="DS_menu1_CanColumnChange">
        <ColumnInfo>
          <Column id="column0" size="256" type="STRING"/>
          <Column id="column1" size="256" type="STRING"/>
          <Column id="column2" size="256" type="STRING"/>
          <Column id="column3" size="256" type="STRING"/>
          <Column id="column4" size="256" type="STRING"/>
          <Column id="column5" size="256" type="STRING"/>
          <Column id="column6" size="256" type="STRING"/>
          <Column id="column7" size="256" type="STRING"/>
          <Column id="column8" size="256" type="STRING"/>
          <Column id="column9" size="256" type="STRING"/>
          <Column id="column10" size="256" type="STRING"/>
          <Column id="column11" size="256" type="STRING"/>
          <Column id="column12" size="256" type="STRING"/>
          <Column id="column13" size="256" type="STRING"/>
          <Column id="column14" size="256" type="STRING"/>
          <Column id="column15" size="256" type="STRING"/>
          <Column id="column16" size="256" type="STRING"/>
          <Column id="column17" size="256" type="STRING"/>
          <Column id="column18" size="256" type="STRING"/>
          <Column id="column19" size="256" type="STRING"/>
          <Column id="column20" size="256" type="STRING"/>
          <Column id="column21" size="256" type="STRING"/>
          <Column id="column22" size="256" type="STRING"/>
          <Column id="column23" size="256" type="STRING"/>
          <Column id="column24" size="256" type="STRING"/>
          <Column id="column25" size="256" type="STRING"/>
          <Column id="column26" size="256" type="STRING"/>
          <Column id="column27" size="256" type="STRING"/>
          <Column id="column28" size="256" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="DS_head1">
        <ColumnInfo>
          <Column id="fday" size="256" type="STRING"/>
          <Column id="we" size="256" type="STRING"/>
          <Column id="we_color" size="256" type="STRING"/>
          <Column id="wcd" size="256" type="STRING"/>
          <Column id="wnm" size="256" type="STRING"/>
          <Column id="wimg" size="256" type="STRING"/>
          <Column id="rem" size="256" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="DS_body1">
        <ColumnInfo>
          <Column id="fday" size="256" type="STRING"/>
          <Column id="sgbn" size="256" type="STRING"/>
          <Column id="sgbn_nm" size="256" type="STRING"/>
          <Column id="cgbn" size="256" type="STRING"/>
          <Column id="cgbn_nm" size="256" type="STRING"/>
          <Column id="cgbn_cd" size="256" type="STRING"/>
          <Column id="dup_sta" size="256" type="STRING"/>
          <Column id="dup_color" size="256" type="STRING"/>
          <Column id="sseq" size="256" type="STRING"/>
          <Column id="sd_cd" size="256" type="STRING"/>
          <Column id="sd_nm" size="256" type="STRING"/>
          <Column id="sd_won" size="256" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="DS_body_f1"/>
      <Dataset id="DS_body_c1"/>
      <Dataset id="DS_sgbn1">
        <ColumnInfo>
          <Column id="sgbn" size="256" type="STRING"/>
          <Column id="sgbn_nm" size="256" type="STRING"/>
          <Column id="cgbn" size="256" type="STRING"/>
          <Column id="cgbn_nm" size="256" type="STRING"/>
          <Column id="cgbn_cd" size="256" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_view">
        <ColumnInfo>
          <Column id="DAYS" size="256" type="STRING"/>
          <Column id="WDESC" size="256" type="STRING"/>
          <Column id="REAL_MEAL_QTY" size="256" type="STRING"/>
          <Column id="SIKDAN" size="256" type="STRING"/>
          <Column id="MENU_FEATURE" size="256" type="STRING"/>
          <Column id="SCHEDULE" size="256" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_sikrate">
        <ColumnInfo>
          <Column id="UPJANG" size="256" type="STRING"/>
          <Column id="HALL_CD" size="256" type="STRING"/>
          <Column id="MENU_DATE" size="256" type="STRING"/>
          <Column id="GOAL_COST_RATE" size="256" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_sikck"/>
    </Objects>
    <Bind>
      <BindItem id="item5" compid="sta_detail05" propid="text" datasetid="ds_view" columnid="D_1"/>
      <BindItem id="item0" compid="me_sikrate" propid="value" datasetid="ds_sikrate" columnid="GOAL_COST_RATE"/>
    </Bind>
    <Script type="xscript4.0"><![CDATA[include "U_lib::lib_conversionCom.xjs";
/**
====================================================================================================(100)
 1. 시    스    템	: 	메뉴관리>식단관리>식단등록
 2. 서브    시스템 	:   식수예측
 3. 프로그램  개요 	: 	
 4. 작    성    자 	:  	
 5. 작    성    일 	: 	
====================================================================================================
 * HISTORY    : 1)2009-05-08 CSR#(27103) 박은규 요청자:이명희(건강관리센터)
 *              식당목표식재료율을 필수 입력값(0이상의 값)으로 변경
                2)박은규 2012-11-05 CSR#(CH201210_00143) 요청자:박현정(FS기획팀)
                  -3일~ 는 무조건 예상식수 수정가능
====================================================================================================
**/
//===========================================================================================(90)
// [ PART 1 ]
// Form에서 Include 할 내용을 정의
//
//******************************************************************************************
//@@컨버터에서 주석처리 #include "lib::sc_comon.js";

//******************************************************************************************
// [ PART 2 ]
// Form에서 사용될 전역변수를 선언
//
//******************************************************************************************
//var	il_cnt	= 0;	// 기간에 해당되는 일수를 산정
//var def_cha	= 2;	// 차감 col pointer

//******************************************************************************************
// [ PART 3 ]
// Form Loading 시 작업 정의
//
//******************************************************************************************
function form_onload(obj:Form, e:LoadEventInfo)
{
	gfn_formOnLoad(obj, false);

	// X-Framework : Action 정보 생성 
	fsp_init(this);

}

//******************************************************************************************
// [ PART 4 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,도움말,form닫기)
//
//******************************************************************************************

/*------------------------------------------------------------(60)
	1. Function ID : fn_Search()
	2. 개       요 : 업무프로세스에 따른 조회작업
	3. 기       능 : 검색조건에 해당하는 정보를 조회
	4. 인 수 설 명 : 
*/
function fn_search()
{
	if (fn_Search_chk() == false) {
		return false;
	}
	
	
	trace('search 1');
	 
	fn_week_create(); 
	
	// 주간식당목표 식재료율 LOAD
	fn_sikrateSearch();
		
	// Data Loading ...
	// Grid Head : 주간 일정 [Local Data를 DataSet으로 전환--> 향후 서비스로 대체]
	//ext_ExcelImportByName("E:\\02_Project\\08_Hanhwa\\webapps\\FS\\HWFS_DATA\\DS_head1.xls", "DS_head", "DS_head1", 1);
	fn_Sel_DS_head1();
	if (DS_head1.getRowCount() == 0) {
		g_Message("EE",	"주간일정 정보가 없습니다.");
		return true;
	}
	// DS_sgbn1 : 식구분 [Local Data를 DataSet으로 전환--> 향후 서비스로 대체]
	//ext_ExcelImportByName("E:\\02_Project\\08_Hanhwa\\webapps\\FS\\HWFS_DATA\\DS_sgbn1.xls", "DS_sgbn", "DS_sgbn1", 1);
	fn_Sel_DS_sgbn1();
	if (DS_sgbn1.getRowCount() == 0) {
		g_Message("EE",	"식,끼니 정보가 없습니다.");
		return true;
	}

	// Grid Body : 주간식단표 [Local Data를 DataSet으로 전환--> 향후 서비스로 대체]
	//ext_ExcelImportByName("E:\\02_Project\\08_Hanhwa\\webapps\\FS\\HWFS_DATA\\DS_body1.xls", "DS_body", "DS_body1", 1);
	fn_Sel_DS_body1();
	
	//alert("DS loading OK !!");
	// 작업용 DataSet 마련 - Grid용 DataSet 작성 작업용 (Filter 용)
	//DS_body_f1.Clear();
	//DS_body_f1.Copy("DS_body1");
	
	// Grid에 사용할 DataSet을 작성합니다.
	
	
	
	// Grid Format을 작성합니다.
	grd_lst.enableredraw = false;
	fn_make_DS_menu1();
	grd_lst.binddataset = "";
	fn_make_grdlst();
	grd_lst.binddataset = "DS_menu1";
	grd_lst.enableredraw = true;
	
	grd_lst.setCellPos(1);
	grd_lst.setFocus();
	
	// 전주예측복사 button 작동
	fn_ds_sikck_search();

	if (ds_sikck.getRowCount() > 0) {
		btn_copy.visible = false;
	}
	else {
		btn_copy.visible = true;
	}

	//return true;
}

/*------------------------------------------------------------
	1. Function ID : fn_Insert()
	2. 개       요 : 업무프로세스에 따른 입력작업
	3. 기       능 : 입력버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
*/
function fn_insert()
{
}

/*------------------------------------------------------------
	1. Function ID : fn_Save()
	2. 개       요 : 업무프로세스에 따른 정보 저장작업
	3. 기       능 : 저장버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
*/
function fn_save()
{
}

/*------------------------------------------------------------
	1. Function ID : fn_Delete()
	2. 개       요 : 업무프로세스에 따른 정보 삭제작업
	3. 기       능 : 삭제버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
*/
function fn_delete()
{
}

/*------------------------------------------------------------
	1. Function ID : fn_Print()
	2. 개       요 : 업무프로세스에 따른 선별된 정보를 출력지로 인쇄
	3. 기       능 : 인쇄버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
*/
function fn_print()
{
}

//******************************************************************************************
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
//
//******************************************************************************************
/*
 ******************************************************************************************
	1. Function ID : fn_ds_sikck_search()
	2. 개       요 : 주간 식수예측 현황 읽어오기
	3. 기       능 : 제공일에 해당하는 주의 식수예측을 load
	4. 인 수 설 명 : 
 ******************************************************************************************
 */
function fn_ds_sikck_search()
{
	// 초기화
	ds_sikck.clearData();
	
	// 조회
	var actionName, cmdName, inData, outData, otherArg, callBackFnc;
	
	inData			= "ds_input=ds_input";
	outData			= "ds_sikck=ds_sikck";
	callBackFnc		= "fn_afterSearch_sikck";
	
	fsp_clear(this); 
    fsp_addSearch(this, "fs/fsm:FSM00051E_S006");									// 조회 
	http.Sync = true;
    fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);		// 서비스 호출 
	http.Sync = false;

}

function fn_afterSearch_sikck(errCode, errMsg)
{
	if(errCode!=0)
	{
		return;
	} else { 
	
	    trace('ds_sikck =======> ');
	//    trace(ds_sikck.saveXML());
	
	}
}

/*
 ******************************************************************************************
	1. Function ID : fn_sikrateSearch()
	2. 개       요 : 주간식당목표 식재료율을 load
	3. 기       능 : 제공일에 해당하는 주의 주간식당목표 식재료율을 load
	4. 인 수 설 명 : 
 ******************************************************************************************
 */
function fn_sikrateSearch()
{
	// 초기화
	ds_sikrate.clearData();
	
	// 조회
	var actionName, cmdName, inData, outData, otherArg, callBackFnc;
	
	inData			= "ds_input=ds_input";
	outData			= "ds_sikrate=ds_sikrate";
	callBackFnc		= "fn_afterSearch_sikrate";
	
	
	//trace(ds_input.saveXML());
	
	fsp_clear(this); 
    fsp_addSearch(this, "fs/fsm:FSM00051E_S002");									// 조회 
	http.Sync = true;
    fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);		// 서비스 호출 
	http.Sync = false;

}

function fn_afterSearch_sikrate(errCode, errMsg)
{
	if(errCode!=0)
	{
		return;
	} else { 
	
	//    trace('ds_sikrate =======> ');
	//    trace(ds_sikrate.saveXML());
	
	    tab_Main.tab00.me_sikrate.value = ds_sikrate.getMax("GOAL_COST_RATE");
	    tab_Main.tab01.me_sikrate.value = ds_sikrate.getMax("GOAL_COST_RATE");
	   
	
	}
}

/*
 ******************************************************************************************
	1. Function ID : fn_Sel_DS_head()
	2. 개       요 : 식단표의 Head 구성요소를 작성한다.
	3. 기       능 : 제공일에 해당하는 주의 기준 Head Data를 작성한다.
	4. 인 수 설 명 : 
 ******************************************************************************************
 */
function fn_Sel_DS_head1()
{
	// 초기화
	DS_head1.clearData();
	
	// 조회
	var actionName, cmdName, inData, outData, otherArg, callBackFnc;
	
	inData			= "ds_input=ds_input";
	outData			= "DS_head1=DS_head";
	callBackFnc		= "fn_afterSearch_head1";
	
	fsp_clear(this); 
    fsp_addSearch(this, "fs/fsm:FSM00052E_S002");									// 조회 
	http.Sync = true;
    fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);		// 서비스 호출 
	http.Sync = false;

}

function fn_afterSearch_head1(errCode, errMsg)
{
	if(errCode!=0)
	{
		return;
	} else { 
	
	//    trace('DS_head1 =======> ');
	//    trace(DS_head1.saveXML());
	
	}
}


/*
 ******************************************************************************************
	1. Function ID : fn_Sel_DS_sgbn()
	2. 개       요 : 식단표의 좌측 기준정보(식,끼니)를 작성한다.
	3. 기       능 : 제공일에 해당하는 주의 좌측 기준정보(식,끼니)를 작성한다.
	4. 인 수 설 명 : 
 ******************************************************************************************
 */
function fn_Sel_DS_sgbn1()
{
	// 초기화
	DS_sgbn1.clearData();
	
	// 조회
	var actionName, cmdName, inData, outData, otherArg, callBackFnc;
	
	inData			= "ds_input=ds_input";
	outData			= "DS_sgbn1=DS_sgbn";
	callBackFnc		= "fn_afterSearch_sgbn1";
	
	fsp_clear(this); 
    fsp_addSearch(this, "fs/fsm:FSM00052E_S001");									// 조회 
	http.Sync = true;
    fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);		// 서비스 호출 
	http.Sync = false;

}

function fn_afterSearch_sgbn1(errCode, errMsg)
{
	if(errCode!=0)
	{
		return;
	} else { 
	
	//    trace('DS_sgbn1 =======> ');
	//    trace(DS_sgbn1.saveXML());
	
	}
}

/*
 ******************************************************************************************
	1. Function ID : fn_Sel_DS_body()
	2. 개       요 : 메뉴정보를 불러온다.
	3. 기       능 : 제공일에 해당하는 주의 메뉴정보를 불러온다.
	4. 인 수 설 명 : 
 ******************************************************************************************
 */
function fn_Sel_DS_body1()
{
	// 초기화
	DS_body1.clearData();
	
	// 조회
	var actionName, cmdName, inData, outData, otherArg, callBackFnc;
	
	inData			= "ds_input=ds_input";
	outData			= "DS_body1=DS_body1 DS_body_f1=DS_body1";
	callBackFnc		= "fn_afterSearch_body1";
	
	fsp_clear(this); 
    fsp_addSearch(this, "fs/fsm:FSM00051E_S003");									// 조회 
	http.Sync = true;
    fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);		// 서비스 호출 
	http.Sync = false;
	
	// 주간식단목표 식재료율을 setting한다.
	//me_sikrate_OnChanged("","");
}

function fn_afterSearch_body1(errCode, errMsg)
{
	if(errCode!=0)
	{
		return;
	} else { 
	
	//    trace('DS_body1 =======> ');
	//    trace(DS_body1.saveXML());
	    DS_body_f1.clear();
	    DS_body_f1.copyData(DS_body1);
	
	}
}


/*
 ******************************************************************************************
	1. Function ID : fn_ds_view_Search()
	2. 개       요 : 4주간 실식수 현황을 조회
	3. 기       능 : 설정된 일자/식/끼니에 대한 4주전 실식수 현황을 조회한다.
	4. 인 수 설 명 : 
 ******************************************************************************************
 */
function fn_ds_view_Search(nCell)
{
	// 초기화
	ds_view.clearData();
	
	// 조회
	var actionName, cmdName, inData, outData, otherArg, callBackFnc;
	
	//inData			= "ds_input=ds_input";
	//otherArg		= "UPJANG="+quote("100751");
	//otherArg		+= " HALL_CD="+quote("00101");
	//otherArg		+= " MEAL="+quote("001"); 
	//otherArg		+= " CORNER="+quote("001");
	//otherArg		+= " SEL_DATE="+quote("20071127");
	outData			= "ds_view=ds_view";
	otherArg		= "UPJANG="+wrapQuote(ds_input.getColumn(0,"UPJANG"));
	otherArg		+= " HALL_CD="+wrapQuote(ds_input.getColumn(0,"HALL_CD"));
	otherArg		+= " MEAL="+wrapQuote(DS_menu1.getColumn(DS_menu1.rowposition, "SGBN"));
	otherArg		+= " CORNER="+wrapQuote(DS_menu1.getColumn(DS_menu1.rowposition, "CGBN_CD"));
	otherArg		+= " SEL_DATE="+wrapQuote(DS_head1.getColumn(nCell-1, "FDAY"));
	callBackFnc		= "fn_afterSearch_view";

	fsp_clear(this); 
    fsp_addSearch(this, "fs/fsm:FSM00051E_S001");									// 조회 
	http.Sync = true;
    fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);		// 서비스 호출 
	http.Sync = false;

}

function fn_afterSearch_view(errCode, errMsg)
{
	if(errCode!=0)
	{
		return;
	} else { 
	
	//    trace('ds_view =======> ');
	   //  trace(ds_view.saveXML());
	
	}
}

/*------------------------------------------------------------
	1. Function ID : fn_make_DS_menu1()
	2. 개       요 : Grid body에 해당하는 DataSet을 작성
	3. 기       능 : Grid body Format에 맞게 DS_menu1 DataSet의 Format을 작성하고 DataSet Format에 맞게
	                 Data를 Loading 시킨다.
	4. 인 수 설 명 : 
*/
// function fn_make_DS_menu1()
// {
// 	DS_menu1.enableevent = false;
// 	
// 	var	Contents_ds = "";
// 	
// 	// DataSet format을 작성합니다.
// 	Contents_ds = '
// 	<Contents>
// 			<colinfo id="sgbn" 			size="256" type="STRING"/>
// 			<colinfo id="sgbn_nm" 		size="256" type="STRING"/>
// 			<colinfo id="cgbn" 			size="256" type="STRING"/>
// 			<colinfo id="cgbn_nm" 		size="256" type="STRING"/>
// 			<colinfo id="cgbn_cd" 		size="256" type="STRING"/>
// 			<colinfo id="sgbn_no" 		size="256" type="STRING"/>
// 			<colinfo id="curr_date"		size="256" type="STRING"/>';
// 
// 	//G_debug("DS_head");
// 	for(var ii = 0; ii < il_cnt; ii++)
// 	{
// 		Contents_ds	+= '
// 			<colinfo id="fday_'				+gfn_mid(DS_head1.getColumn(ii, "FDAY"),4,4)+'"	size="256" type="STRING"/>
// 			<colinfo id="sale_price_'		+gfn_mid(DS_head1.getColumn(ii, "FDAY"),4,4)+'"	size="256" type="STRING"/>
// 			<colinfo id="expect_meal_qty_'	+gfn_mid(DS_head1.getColumn(ii, "FDAY"),4,4)+'"	size="256" type="STRING"/>
// 			<colinfo id="sseq_'				+gfn_mid(DS_head1.getColumn(ii, "FDAY"),4,4)+'"	size="256" type="STRING"/>
// 			<colinfo id="real_meal_qty_'	+gfn_mid(DS_head1.getColumn(ii, "FDAY"),4,4)+'"	size="256" type="STRING"/>
// 			<colinfo id="recipe_yn_'		+gfn_mid(DS_head1.getColumn(ii, "FDAY"),4,4)+'"	size="256" type="STRING"/>
// 			<colinfo id="order_yn_'			+gfn_mid(DS_head1.getColumn(ii, "FDAY"),4,4)+'"	size="256" type="STRING"/>
// 			<colinfo id="goal_cost_rate_'	+gfn_mid(DS_head1.getColumn(ii, "FDAY"),4,4)+'"	size="256" type="STRING"/>';
// 	}
// 
// 	Contents_ds += '
// 	</Contents>';
// 
// 	/* Contents은 지원되지 않는 속성입니다.*/ DS_menu1.Contents = Contents_ds;
// 	//TextArea0.Text   = Contents_ds;
// 	//G_debug("DS_sgbn1");
// 	//alert(DS_menu1.RowCount());
// 	
// 	// Data를 작성합니다. [ DS_body -> DS_menu Create ]
// 	var	cnt_ds_total = 0;
// 
// 	for(var ii = 0; ii < DS_sgbn1.getRowCount(); ii++) {
// 	
// 		DS_body_f1.filter("");
// 
// 		var	fil_cond = "";
// 		var	max_row	 = 0;
// 		
// 		fil_cond	+= "sgbn=='"+DS_sgbn1.getColumn(ii, "sgbn")+"'&&cgbn=='"+DS_sgbn1.getColumn(ii, "cgbn")+"'&&cgbn_cd=='"+DS_sgbn1.getColumn(ii, "cgbn_cd")+"'";
// 
// 		DS_body_f1.filter(fil_cond);
// 		//Trace(DS_body_f1.SaveXML());
// 		
// 		DS_body_c1.clear();
// 		CopyF(DS_body_c1,"DS_body_f1");
// 
// 		DS_body_c1.filter("sseq<>'99'");
// 		max_row = toNumber(DS_body_c1.getMax("sseq"));
// 		max_row = max_row;
// 		//Trace(DS_body_c1.SaveXML());
// 		// DS_body_c1.UnFilter();
// 
// 		// DS_menu DataSet에 Row를 생성
// 		for(var jj = 0; jj < max_row; jj++) {
// 			DS_menu1.addRow();
// 		}
// 		
// 		//alert(DS_menu.RowCount());
// 		if (DS_body_c1.getRowCount() == 0) {
// 			var set_row = cnt_ds_total;
// 			
// 			DS_menu1.setColumn(set_row, "sgbn", 		DS_sgbn1.getColumn(ii, "sgbn"));
// 			DS_menu1.setColumn(set_row, "sgbn_nm", 		DS_sgbn1.getColumn(ii, "sgbn_nm"));
// 			DS_menu1.setColumn(set_row, "cgbn", 		DS_sgbn1.getColumn(ii, "cgbn"));
// 			DS_menu1.setColumn(set_row, "cgbn_nm", 		DS_sgbn1.getColumn(ii, "cgbn_nm"));
// 			DS_menu1.setColumn(set_row, "cgbn_cd", 		DS_sgbn1.getColumn(ii, "cgbn_cd"));
// 			DS_menu1.setColumn(set_row, "sgbn_no", 		(ii+1));
// 			DS_menu1.setColumn(set_row, "curr_date", 	curr_date);
// 		}
// 		else {
// 			// 생성된 Row에 Data를 setup 한다
// 			for(var kk = 0; kk < DS_body_c1.getRowCount(); kk++) {
// 			
// 				var set_row = cnt_ds_total + toNumber(DS_body_c1.getColumn(kk, "sseq")) - 1;
// 				
// 				DS_menu1.setColumn(set_row, "sgbn", 		DS_body_c1.getColumn(kk, "sgbn"));
// 				DS_menu1.setColumn(set_row, "sgbn_nm", 		DS_body_c1.getColumn(kk, "sgbn_nm"));
// 				DS_menu1.setColumn(set_row, "cgbn", 		DS_body_c1.getColumn(kk, "cgbn"));
// 				DS_menu1.setColumn(set_row, "cgbn_nm", 		DS_body_c1.getColumn(kk, "cgbn_nm"));
// 				DS_menu1.setColumn(set_row, "cgbn_cd", 		DS_body_c1.getColumn(kk, "cgbn_cd"));
// 				DS_menu1.setColumn(set_row, "sgbn_no", 		(ii+1));
// 				DS_menu1.setColumn(set_row, "curr_date", 	DS_body_c1.getColumn(kk, "curr_date"));
// 				//
// 				var set_col = gfn_mid(DS_body_c1.getColumn(kk, "fday"),4,4);
// 				DS_menu1.setColumn(set_row, "fday_"				+set_col, 	DS_body_c1.getColumn(kk, "fday"));
// 				DS_menu1.setColumn(set_row, "sale_price_"		+set_col, 	DS_body_c1.getColumn(kk, "sale_price"));
// 				DS_menu1.setColumn(set_row, "expect_meal_qty_"	+set_col, 	DS_body_c1.getColumn(kk, "expect_meal_qty"));
// 				DS_menu1.setColumn(set_row, "sseq_"				+set_col, 	DS_body_c1.getColumn(kk, "sseq"));
// 				DS_menu1.setColumn(set_row, "real_meal_qty_"	+set_col, 	DS_body_c1.getColumn(kk, "real_meal_qty"));
// 				DS_menu1.setColumn(set_row, "recipe_yn_"		+set_col, 	DS_body_c1.getColumn(kk, "recipe_yn"));
// 				DS_menu1.setColumn(set_row, "order_yn_"			+set_col, 	DS_body_c1.getColumn(kk, "order_yn"));
// 				DS_menu1.setColumn(set_row, "goal_cost_rate_"	+set_col, 	DS_body_c1.getColumn(kk, "goal_cost_rate"));
// 			}
// 		}
// 		
// 		// DS_menu Row 위치를 산정하기 위한 누적값
// 		cnt_ds_total = cnt_ds_total + max_row;
// 		
// 	}
// 	//
// 	DS_menu1.rowposition = 0;
// 	DS_menu1.applyChange();
// 	DS_menu1.enableevent = true;
// 	
// 	//G_debug("DS_menu1");
// }
// 
// /*------------------------------------------------------------
// 	1. Function ID : fn_make_grdlst()
// 	2. 개       요 : 조건에 맞는 Grid Format을 작성
// 	3. 기       능 : 검색조건 기간이 유동적으로 구성되므로 조건에 해당하는 정보를 화면으로
// 	                 출력하기 위해 Grid를 재구성한다.
// 	4. 인 수 설 명 : 
// */
// function fn_make_grdlst()
// {
// //alert(il_cnt);
// 	var Contents_grd_lst	= "";
// // 
// // Grid를 작성합니다.
// //
// 	Contents_grd_lst	= '
// <contents>
// 	<format id="Default">
// 		<columns>
// 			<col fix="left" width="139"/>';
// 	// Grid columns를 작성합니다.
// 	for(var ii = 0; ii < il_cnt; ii++)
// 	{
// 		Contents_grd_lst	+= '
// 				<col width="1"/>
// 				<col width="80"/>
// 				<col width="36"/>';
// 	}
// 	
// 	Contents_grd_lst	+= '
// 			</columns>';
// 
// 	// Grid head를 작성합니다.
// 	Contents_grd_lst	+= '
// 		<head>
// 			<cell bkcolor="#DCE8FC" col="0" display="text" text="일자"/>
// 			<cell bkcolor="#DCE8FC" col="0" display="text" row="1" text="일정"/>';
// 
// 	var	v_col1 = -2;
// 	var	v_col2 = 0;
// 	var	v_day  = "";
// 
// 	for(var ii = 0; ii < il_cnt; ii++)
// 	{
// 		v_col1 	= v_col1 + 3;
// 		v_col2 	= v_col2 + 3;
// 		
// 		v_day	= toNumber(gfn_mid(DS_head1.getColumn(ii, "fday"),4,2)) + "/" + toNumber(gfn_mid(DS_head1.getColumn(ii, "fday"),6,2))
// 				+ "(" + DS_head1.getColumn(ii, "we") + ")" ;
// 				//+ " " + DS_head1.GetColumn(ii, "wnm");
// 		
// 		Contents_grd_lst	+= '
// 				<cell bkcolor="#DCE8FC" color="'+DS_head1.getColumn(ii, "we_color")+'" col="'+v_col1+'" colspan="2" display="text" text="'+v_day+'"/>';
// 		Contents_grd_lst	+= '
// 				<cell bkcolor="#DCE8FC" bkimageid="'+DS_head1.getColumn(ii, "wimg")+'" col="'+v_col2+'" display="text" rowspan="2"/>';
// 		if (gfn_length(DS_head1.getColumn(ii, "rem"))> 8) {
// 		Contents_grd_lst	+= '
// 				<cell bkcolor="#DCE8FC" col="'+v_col1+'" colspan="2" display="text" row="1" text="'+gfn_mid(DS_head1.getColumn(ii, "rem"),0,8)+".."+'"/>';
// 		}
// 		else {
// 		Contents_grd_lst	+= '
// 				<cell bkcolor="#DCE8FC" col="'+v_col1+'" colspan="2" display="text" row="1" text="'+DS_head1.getColumn(ii, "rem")+'"/>';
// 		}
// 	}
// 	
// 	Contents_grd_lst	+= '
// 		</head>
// 		<body>
// 			<cell align="center" align="center" Valign="Center" bkcolor="expr:iif(toNumber(toNumber(sgbn_no)/2)&#32;==&#32;toInteger(toNumber(sgbn_no)/2),&#32;&apos;white&apos;,&#32;&apos;#F6FCFC&apos;)" col="0" display="text" font="굴림,9,Bold" expr="iif(length(cgbn_nm)==0,&#32;sgbn_nm+cgbn,&#32;sgbn_nm+cgbn+&apos;(&apos;+cgbn_nm+&apos;)&apos;)" suppress="1" SuppressAlign="Middle"/>';
// 		
// 	// Grid body를 작성합니다.
// 	var	v_col3 = 0;
// 	var	v_seq  = "";
// 
// 	for(var ii = 0; ii < il_cnt; ii++)
// 	{
// 		v_col3 = (ii * 3) + 1;
// 		v_seq  = gfn_mid(DS_head1.getColumn(ii, "fday"),4,4);
// 
// //============================================================================================
// //(2012-11-05 수정) 시작
// // 박은규 2012-11-05 CSR#(CH201210_00143) 요청자:박현정(FS기획팀)
// // -3일~ 는 무조건 예상식수 수정가능
// //============================================================================================
// //		Contents_grd_lst	+= '
// //				<cell colid="expect_meal_qty_'+v_seq+'" col="'+v_col3+'" colspan="3" display="number" edit="integer" bkcolor="expr:iif(toNumber(toNumber(sgbn_no)/2)&#32;==&#32;toInteger(toNumber(sgbn_no)/2),&#32;&apos;white&apos;,&#32;&apos;#F6FCFC&apos;)" edit="expr:iif(real_meal_qty_'+v_seq+'&#32;&gt;&#32;0&#32;||&#32;order_yn_'+v_seq+'&#32;=&#32;&apos;Y&apos;&#32;||&#32;curr_date&#32;&gt;&#32;fday_'+v_seq+',&#32;&apos;none&apos;,&#32;&apos;integer&apos;)"/>';
// 		Contents_grd_lst	+= '
// 				<cell colid="expect_meal_qty_'+v_seq+'" col="'+v_col3+'" colspan="3" display="number" edit="integer" bkcolor="expr:iif(toNumber(toNumber(sgbn_no)/2)&#32;==&#32;toInteger(toNumber(sgbn_no)/2),&#32;&apos;white&apos;,&#32;&apos;#F6FCFC&apos;)" edit="expr:iif(addDate(curr_date,-3)&#32;&gt;&#32;fday_'+v_seq+',&#32;&apos;none&apos;,&#32;&apos;integer&apos;)"/>';
// //============================================================================================
// //(2012-11-05 수정) 끝
// //============================================================================================
// // edit="expr:iif(real_meal_qty_'+v_seq+'&&#32;&gt;&#32;0&#32;||&#32;order_yn_'+v_seq+'&&#32;==&#32;&apos;Y&apos;&#32;||&#32;curr_date&#32;&gt;&#32;fday_1231,&#32;&apos;none&apos;,&#32;&apos;integer&apos;)"
// // edit="expr:iif(real_meal_qty_'+v_seq+'&#32;&gt;&#32;0&#32;||&#32;order_yn_'+v_seq+'&#32;==&#32;&quot;Y&quot;&#32;||&#32;curr_date&#32;&gt;&#32;fday_'+v_seq+',&#32;&quot;none&quot;,&#32;&quot;integer&quot;)"
// 	}
// 			//	<cell colid="expect_meal_qty_'+v_seq+'" col="'+v_col3+'" colspan="3" display="number" edit="integer" bkcolor="expr:iif(toNumber(toNumber(sgbn_no)/2)&#32;==&#32;toInteger(toNumber(sgbn_no)/2),&#32;&apos;white&apos;,&#32;&apos;#F6FCFC&apos;)" edit="expr:iif(real_meal_qty_'+v_seq+'&#32;&gt;&#32;0&#32;||&#32;order_yn_'+v_seq+'&#32;=&#32;&apos;Y&apos;&#32;||&#32;curr_date&#32;&gt;&#32;fday_'+v_seq+',&#32;&apos;none&apos;,&#32;&apos;integer&apos;)"/>';
// 
// 	Contents_grd_lst	+= '
// 		</body>
// 	';
// 
// 	// Grid Summary를 작성합니다.
// 		Contents_grd_lst	+= '
// 		<summary>
// 			<cell align="center" bkcolor="user1" col="0" display="text" color="#993300" font="굴림,9,Bold" text="합계"/>';
// 
// 	v_col3 = 0;
// 	v_seq  = "";
// 	
// 	for(var ii = 0; ii < il_cnt; ii++)
// 	{
// 		v_col3 = (ii * 3) + 1;
// 		v_seq  = gfn_mid(DS_head1.getColumn(ii, "fday"),4,4);
// 		var v_expect_meal_qty	= toNumber(DS_menu1.getSum("expect_meal_qty_"+v_seq));
// 				
// 		Contents_grd_lst	+= '
// 			<cell align="right" bkcolor="user1" col="'+v_col3+'" colspan="3" display="text" color="#993300" font="굴림,9,Bold" text="'+v_expect_meal_qty+'"/>';
// 	}
// 
// 	Contents_grd_lst	+= '
// 		</summary>
// 	</format>
// </contents>
// 	';
// 	// Grid End
// 	
// 	grd_lst.formats = Contents_grd_lst;
// 	TextArea0.value = grd_lst.formats;
// }

function fn_make_DS_menu1()
{
	DS_menu1.enableevent = false; 	
	DS_menu1.clear();  
	
	DS_menu1.addColumn('SGBN'   , 'STRING', 256);
	DS_menu1.addColumn('SGBN_NM', 'STRING', 256);
	DS_menu1.addColumn('CGBN'   , 'STRING', 256);
	DS_menu1.addColumn('CGBN_NM', 'STRING', 256);
	DS_menu1.addColumn('CGBN_CD', 'STRING', 256);
	DS_menu1.addColumn('SGBN_NO', 'STRING', 256);
	DS_menu1.addColumn('CURR_DATE', 'STRING', 256);	
	DS_menu1.addColumn('TOT_GBN', 'STRING', 256);
	DS_menu1.addColumn('SSEQ'   , 'STRING', 256);
	
	for(var ii = 0; ii < il_cnt; ii++)
	{
		DS_menu1.addColumn('FDAY_'             + gfn_subStr(DS_head1.getColumn(ii, "FDAY"),4,4), 'STRING', 256);
		DS_menu1.addColumn('SALE_PRICE_'       + gfn_subStr(DS_head1.getColumn(ii, "FDAY"),4,4), 'STRING', 256);
		DS_menu1.addColumn('EXPECT_MEAL_QTY_'  + gfn_subStr(DS_head1.getColumn(ii, "FDAY"),4,4), 'STRING', 256);
		DS_menu1.addColumn('SSEQ_'             + gfn_subStr(DS_head1.getColumn(ii, "FDAY"),4,4), 'STRING', 256);
		DS_menu1.addColumn('REAL_MEAL_QTY_'    + gfn_subStr(DS_head1.getColumn(ii, "FDAY"),4,4), 'BIGDECIMAL', 256);
		DS_menu1.addColumn('RECIPE_YN_'        + gfn_subStr(DS_head1.getColumn(ii, "FDAY"),4,4), 'STRING', 256);
		DS_menu1.addColumn('ORDER_YN_'         + gfn_subStr(DS_head1.getColumn(ii, "FDAY"),4,4), 'STRING', 256);
		DS_menu1.addColumn('GOAL_COST_RATE_'   + gfn_subStr(DS_head1.getColumn(ii, "FDAY"),4,4), 'BIGDECIMAL', 256);
	}
 
	// Data를 작성합니다. [ DS_body -> DS_menu Create ]
	var	cnt_ds_total = 0;

	for(var ii = 0; ii < DS_sgbn1.getRowCount(); ii++) {
	
		DS_body_f1.filter("");

		var	fil_cond = "";
		var	max_row	 = 0;
		
		fil_cond	+= "SGBN=='"+DS_sgbn1.getColumn(ii, "SGBN")+"'&&CGBN=='"+DS_sgbn1.getColumn(ii, "CGBN")+"'&&CGBN_CD=='"+DS_sgbn1.getColumn(ii, "CGBN_CD")+"'";

		DS_body_f1.filter(fil_cond);
		
		DS_body_c1.clear();
		CopyF(DS_body_c1,"DS_body_f1");

        DS_body_c1.keystring = 'G:+FDAY+SGBN+CGBN+CGBN_CD'; 

		DS_body_c1.filter("SSEQ<>'99'");
		var max_row = toNumber(DS_body_c1.getMax("SSEQ"));

		// DS_menu DataSet에 Row를 생성
		for(var jj = 0; jj < max_row; jj++) {
			DS_menu1.addRow();
		}
		
		if (DS_body_c1.getRowCount() == 0) {
			var set_row = cnt_ds_total;
			
			DS_menu1.setColumn(set_row, "SGBN", 		DS_sgbn1.getColumn(ii, "SGBN"));
			DS_menu1.setColumn(set_row, "SGBN_NM", 		DS_sgbn1.getColumn(ii, "SGBN_NM"));
			DS_menu1.setColumn(set_row, "CGBN", 		DS_sgbn1.getColumn(ii, "CGBN"));
			DS_menu1.setColumn(set_row, "CGBN_NM", 		DS_sgbn1.getColumn(ii, "CGBN_NM"));
			DS_menu1.setColumn(set_row, "CGBN_CD", 		DS_sgbn1.getColumn(ii, "CGBN_CD"));
			DS_menu1.setColumn(set_row, "SGBN_NO", 		(ii+1));
			DS_menu1.setColumn(set_row, "CURR_DATE", 	curr_date);
		}
		else {
			// 생성된 Row에 Data를 setup 한다
			for(var kk = 0; kk < DS_body_c1.getRowCount(); kk++) {
			
				var set_row = cnt_ds_total + toNumber(DS_body_c1.getColumn(kk, "SSEQ")) - 1;
				
				
				if (GetRowType(DS_body_c1,kk)== "logical") { 
					set_row = cnt_ds_total + max_row - 1;
					DS_menu1.setColumn(set_row, "TOT_GBN", "99");
					DS_menu1.setColumn(set_row, "SSEQ",    "99"); 
										
				    DS_menu1.setColumn(set_row, "SGBN", 		DS_body_c1.getColumn(kk-1, "SGBN"));
					DS_menu1.setColumn(set_row, "SGBN_NM", 		DS_body_c1.getColumn(kk-1, "SGBN_NM"));
					DS_menu1.setColumn(set_row, "CGBN", 		DS_body_c1.getColumn(kk-1, "CGBN"));
					DS_menu1.setColumn(set_row, "CGBN_NM", 		DS_body_c1.getColumn(kk-1, "CGBN_NM"));
					DS_menu1.setColumn(set_row, "CGBN_CD", 		DS_body_c1.getColumn(kk-1, "CGBN_CD"));
					DS_menu1.setColumn(set_row, "SGBN_NO", 		(ii+1));
					DS_menu1.setColumn(set_row, "CURR_DATE", 	DS_body_c1.getColumn(kk-1, "CURR_DATE")); 			
										
				}
				else {
					DS_menu1.setColumn(set_row, "TOT_GBN", 	"");
				 	
					DS_menu1.setColumn(set_row, "SGBN", 		DS_body_c1.getColumn(kk, "SGBN"));
					DS_menu1.setColumn(set_row, "SGBN_NM", 		DS_body_c1.getColumn(kk, "SGBN_NM"));
					DS_menu1.setColumn(set_row, "CGBN", 		DS_body_c1.getColumn(kk, "CGBN"));
					DS_menu1.setColumn(set_row, "CGBN_NM", 		DS_body_c1.getColumn(kk, "CGBN_NM"));
					DS_menu1.setColumn(set_row, "CGBN_CD", 		DS_body_c1.getColumn(kk, "CGBN_CD"));
					DS_menu1.setColumn(set_row, "SGBN_NO", 		(ii+1));
					DS_menu1.setColumn(set_row, "CURR_DATE", 	DS_body_c1.getColumn(kk, "CURR_DATE")); 
				}
				//
				var set_col = gfn_subStr(DS_body_c1.getColumn(kk, "FDAY"),4,4);
				
				if (GetRowType(DS_body_c1,kk)== "logical") {
				
				   var set_col = gfn_subStr(DS_body_c1.getColumn(kk-1, "FDAY"),4,4); 
 
			       if(DS_body_c1.getColumn(kk-1, "FDAY") != "") { 
				
						var	v_case			  = "FDAY=='"+DS_body_c1.getColumn(kk-1, "FDAY")+"' && SGBN=='"+DS_body_c1.getColumn(kk-1, "SGBN")+"' && CGBN=='"+DS_body_c1.getColumn(kk-1, "CGBN")+"' && CGBN_CD=='"+DS_body_c1.getColumn(kk-1, "CGBN_CD")+"'";
						var	v_sale_price 	  = DS_body_c1.getCaseSum(v_case, "SALE_PRICE");						
						var	v_expect_meal_qty = DS_body_c1.getCaseSum(v_case, "EXPECT_MEAL_QTY");
						var	v_real_meal_qty   = DS_body_c1.getCaseSum(v_case, "REAL_MEAL_QTY");
						
						var	v_meal_price 	= DS_body_c1.getCaseAvg(v_case, "MEAL_PRICE");
						var	v_sale_price 	= DS_body_c1.getCaseAvg(v_case, "SALE_PRICE");
						var	v_cost_rate 	= DS_body_c1.getCaseAvg(v_case, "RECIPE_COST_RATE");
 
						
						DS_menu1.setColumn(set_row, "FDAY_"				+set_col, 	DS_body_c1.getColumn(kk-1, "FDAY"));
						DS_menu1.setColumn(set_row, "SALE_PRICE_"		+set_col, 	v_sale_price);
						DS_menu1.setColumn(set_row, "EXPECT_MEAL_QTY_"	+set_col, 	v_expect_meal_qty);
						DS_menu1.setColumn(set_row, "SSEQ_"				+set_col, 	DS_body_c1.getColumn(kk-1, "SSEQ"));
						DS_menu1.setColumn(set_row, "REAL_MEAL_QTY_"	+set_col, 	v_real_meal_qty);
						DS_menu1.setColumn(set_row, "RECIPE_YN_"		+set_col, 	DS_body_c1.getColumn(kk-1, "RECIPE_YN"));
						DS_menu1.setColumn(set_row, "ORDER_YN_"			+set_col, 	DS_body_c1.getColumn(kk-1, "ORDER_YN"));
						DS_menu1.setColumn(set_row, "GOAL_COST_RATE_"	+set_col, 	DS_body_c1.getColumn(kk-1, "GOAL_COST_RATE"));				
						
						
					}
				}
				else {
					if(gfn_length(set_col) > 0) {
					
					DS_menu1.setColumn(set_row, "FDAY_"				+set_col, 	DS_body_c1.getColumn(kk, "FDAY"));
					DS_menu1.setColumn(set_row, "SALE_PRICE_"		+set_col, 	DS_body_c1.getColumn(kk, "SALE_PRICE"));
					DS_menu1.setColumn(set_row, "EXPECT_MEAL_QTY_"	+set_col, 	DS_body_c1.getColumn(kk, "EXPECT_MEAL_QTY"));
					DS_menu1.setColumn(set_row, "SSEQ_"				+set_col, 	DS_body_c1.getColumn(kk, "SSEQ"));
					DS_menu1.setColumn(set_row, "REAL_MEAL_QTY_"	+set_col, 	DS_body_c1.getColumn(kk, "REAL_MEAL_QTY"));
					DS_menu1.setColumn(set_row, "RECIPE_YN_"		+set_col, 	DS_body_c1.getColumn(kk, "RECIPE_YN"));
					DS_menu1.setColumn(set_row, "ORDER_YN_"			+set_col, 	DS_body_c1.getColumn(kk, "ORDER_YN"));
					DS_menu1.setColumn(set_row, "GOAL_COST_RATE_"	+set_col, 	DS_body_c1.getColumn(kk, "GOAL_COST_RATE"));
					}
				}
 
			}
		}
		// DS_menu Row 위치를 산정하기 위한 누적값
		cnt_ds_total = cnt_ds_total + max_row;
	}
	//
	if(DS_menu1.rowcount > 0) { 
		DS_menu1.filter("TOT_GBN=='99'");
		//Copy(DS_menu2,DS_menu1);
		DS_menu1.filter("");
	}
	
	//trace('DS_menu1.saveXML() ====> ');
	//trace(DS_menu1.saveXML());
		
	DS_menu1.rowposition = 0;
	DS_menu1.applyChange();
	DS_menu1.enableevent = true; 
}

/*------------------------------------------------------------
	1. Function ID : fn_make_grdlst()
	2. 개       요 : 조건에 맞는 Grid Format을 작성
	3. 기       능 : 검색조건 기간이 유동적으로 구성되므로 조건에 해당하는 정보를 화면으로
	                 출력하기 위해 Grid를 재구성한다.
	4. 인 수 설 명 : 
*/
function fn_make_grdlst()
{
	// GRID 작성
	var Contents_grd_lst	 = "";
	var Contents_grd_column  = "";
	var Contents_grd_rows    = "";
	var Contents_grd_head    = "";
	var Contents_grd_body    = "";
	var Contents_grd_body1    = "";
	var Contents_grd_summary = "";
	// 
	// Grid를 작성합니다.
	//
	Contents_grd_lst	 = '<Formats>' + '\n';
	Contents_grd_lst    += '<Format id="default">' + '\n';
	
	// Grid columns를 작성합니다.
	Contents_grd_column  = ' <Columns>' + '\n';
	Contents_grd_column	+= ' <Column size="110" band="left" />' + '\n';
	for(var ii = 0; ii < il_cnt; ii++)
	{
		Contents_grd_column	+= ' <Column size="0" />' + '\n';
		Contents_grd_column	+= ' <Column size="87" />' + '\n';
		Contents_grd_column	+= ' <Column size="34"  />' + '\n';
	}
	Contents_grd_column += ' </Columns>' + '\n'; 

	// Grid rows를 작성합니다.
	Contents_grd_rows  = ' <Rows>' + '\n';
  	Contents_grd_rows += ' <Row size="48" band="head" />' + '\n';
  	Contents_grd_rows += ' <Row size="24" />'             + '\n';
  	Contents_grd_rows += ' <Row size="24" band="summ"  />' + '\n';
	Contents_grd_rows += ' </Rows>' + '\n';
	
	// Grid head를 작성합니다.
	Contents_grd_head	 = '  <Band id="head">' + '\n';
	Contents_grd_head	+= '   <cell col="0" style="" displaytype="text" text="끼니(코너명)"  /> ' + '\n';

	var	v_col1 = -1;
	var	v_col2 = 0;
	var	v_day  = "";
	var v_wImg = "";

	for(var ii = 0; ii < il_cnt; ii++)
	{
		v_col1 	= v_col1 + 3;
		v_col2 	= v_col2 + 3;
		
		v_day	= toNumber(gfn_subStr(DS_head1.getColumn(ii, "FDAY"),4,2)) + "/" + toNumber(gfn_subStr(DS_head1.getColumn(ii, "FDAY"),6,2))
				+ "(" + DS_head1.getColumn(ii, "WE") + ")" ;
		if ( gfn_isNull(DS_head1.getColumn(ii,"WIMG")) ) {
			v_wImg = "";
		} else {
			v_wImg = "URL(&apos;theme://convertImages/" + DS_head1.getColumn(ii,"WIMG") + ".png&apos;)";
		}
		
		Contents_grd_head	+= '    <cell col="'+ v_col1 + '" style="color:' + DS_head1.getColumn(ii, "WE_COLOR") + ';" displaytype="text" text="'+v_day+'" />' + '\n';
		Contents_grd_head	+= '    <cell col="'+ v_col2 + '" style="" displaytype="image" text="'+v_wImg+'" />' + '\n';
	}	
	Contents_grd_head	+= '  </Band>' + '\n';
 
  	// Grid body를 작성합니다.
  	Contents_grd_body	= '  <Band id="body">' + '\n';
    Contents_grd_body	+= ' <cell align="center" style="font:굴림,8,bold;" display="text" text="expr:gfn_length(CGBN_NM)==0?SGBN_NM+CGBN:SGBN_NM+CGBN+&apos;(&apos;+CGBN_NM+&apos;)&apos;" suppress="1" suppressalign="middle"/>' + '\n';

	var	v_col3 = 0;
	var	v_seq  = "";
	
	for(var ii = 0; ii < il_cnt; ii++)
	{
		v_col3 = (ii * 3) + 1;
		v_seq  = gfn_subStr(DS_head1.getColumn(ii, "FDAY"),4,4);
		
		Contents_grd_body	+= '  <cell col="'+ v_col3 + '" colspan="3" displaytype="number" editautoselect="true" edittype="expr:iif(REAL_MEAL_QTY_'+v_seq+'&#32;&gt;&#32;0&#32;||&#32;ORDER_YN_'+v_seq+'&#32;==&#32;&apos;Y&apos;&#32;||&#32;CURR_DATE&#32;&gt;&#32;FDAY_'+v_seq+',&#32;&apos;none&apos;,&#32;&apos;masknumber&apos;)" mask="#,##0" style="align:right;" text="bind:EXPECT_MEAL_QTY_' + v_seq + '" />' + '\n';
		//Contents_grd_body	+= '  <cell col="'+ v_col3 + '" colspan="3" displaytype="number" editautoselect="true" edittype="masknumber" mask="#,##0" style="align:right;" text="bind:EXPECT_MEAL_QTY_' + v_seq + '" />' + '\n';
		
		//Contents_grd_body	+= '  <cell col="'+ v_col3 + '" colspan="3" >' + '\n';
		//Contents_grd_body	+= '   <cell col="0" />' + '\n';
		//Contents_grd_body	+= '   <cell col="1" />' + '\n';
		//Contents_grd_body	+= '   <cell col="2" displaytype="number" edittype="expr:iif(REAL_MEAL_QTY_'+v_seq+'&#32;&gt;&#32;0&#32;||&#32;ORDER_YN_'+v_seq+'&#32;==&#32;&apos;Y&apos;&#32;||&#32;CURR_DATE&#32;&gt;&#32;FDAY_'+v_seq+',&#32;&apos;none&apos;,&#32;&apos;masknumber&apos;)" mask="#,##0" editautoselect="true" style="align:right;" text="bind:EXPECT_MEAL_QTY_' + v_seq + '" />' + '\n';
		//Contents_grd_body	+= '   <cell col="2" displaytype="number" edittype="masknumber" mask="#,##0" editautoselect="true" style="align:right;" text="bind:EXPECT_MEAL_QTY_' + v_seq + '" />' + '\n';
		//Contents_grd_body	+= '  </cell>' + '\n'; 
	}
	Contents_grd_body	+= '  </Band>' + '\n'; 
	
	// Grid Summary를 작성합니다.
	
    Contents_grd_summary =  ' <Band id="summary">' + '\n';
    Contents_grd_summary += ' <Cell displaytype="text" style="align:center;" text="합계"/>' + '\n'; 

 	v_col3 	= 0;
	v_seq  	= ""; 
	
	for(var ii = 0; ii < il_cnt; ii++)
	{
		v_col3 = (ii * 3) + 1;
		v_seq  = gfn_subStr(DS_head1.getColumn(ii, "FDAY"),4,4);
		var v_sale_price       = 0; 
		var v_expect_meal_qty  = 0;
		var v_real_meal_qty    = 0;
		
		for(var jj = 0; jj < DS_menu1.rowcount; jj++) {
			if ( DS_menu1.getColumn(jj, "TOT_GBN") == "99") { 
				v_sale_price      += fn_clearNaN(toNumber(DS_menu1.getColumn(jj, "SALE_PRICE_"+v_seq)));	 
				v_expect_meal_qty += fn_clearNaN(toNumber(DS_menu1.getColumn(jj, "EXPECT_MEAL_QTY_"+v_seq)));
				v_real_meal_qty	  += fn_clearNaN(toNumber(DS_menu1.getColumn(jj, "REAL_MEAL_QTY_"+v_seq))); 
			}
		} 	
 
// 		var v_cnt	= fn_clearNaN(toNumber(DS_menu.getCaseCount("tot_gbn=='99' && sd_won_"+v_seq+">0"),0));
// 		
// 		if (v_cnt > 0) { 
        Contents_grd_summary += ' <Cell col="' + v_col3 + '" colspan="3" displaytype="number" mask="#,###" style="align:right middle;" text="' + fn_clearNaN(v_expect_meal_qty)+'"/>' + '\n';
 
	} 

    Contents_grd_summary += ' </Band>' + '\n';   

 	Contents_grd_lst	+= Contents_grd_column + Contents_grd_rows + Contents_grd_head + Contents_grd_body + Contents_grd_summary + '</Format>' + '\n' + '</Formats>';

   //trace(Contents_grd_lst);

     grd_lst.formats  = Contents_grd_lst;
 	 grd_lst.formatid = "default"; 
 	 grd_lst.autoenter = "select";
	 grd_lst.nodataimage = gv_noData;
	 grd_lst.autofittype = "col";
	 grd_lst.selecttype  = "cell";
     grd_lst.readonly  = "false";
}

/*
 ******************************************************************************************
 * 함  수  명   : fn_dsUpdateSearch()
 * 입      력   : 
 * 반      환   : 없음
 * 기      능   : dataset의 변경유무를 검토하여 저장할 것인지를 검증한다.
 * 작  성  자   : 
 * 작성  일자   : 2007-12-20 
 ******************************************************************************************
 */
function fn_dsUpdateSearch()
{
	if (gfn_dsIsUpdated(DS_menu1)== true) { // DS_menu1 데이타셋에 변경정보가 존재할 경우 저장 처리

		var cRtn = g_Confirm("02",	"저장되지 않은 정보가 있습니다.\n\n데이터를 저장하시겠습니까?");

		if (cRtn == true) {                   // 확인버튼 클릭시 처리

			if (btn_save_OnClick() == true) { // 식수예측 정보 저장 -> 메세지 처리(성공적으로 저장)
				g_Message("04", "");
				return true;
			}
			else {             // 메세지 처리 -> 저장시 오류
				g_Message("EE", "데이타 저장 작업시 오류발생!!"); 
				return false;
			}
		}
		
		else {                            // 최소버튼 클릭시
			g_Message("EE", "데이타 저장 작업을 취소하였습니다.");
			return false;
		}
	}

}

//******************************************************************************************
// [ PART 6 ]
// component Event 정의 ( User Define function )
// --> component Event의 기요,기능,동작 등 상세내용은 MiPlatform 메뉴얼을 참조하시기 바랍니다.
//******************************************************************************************

function Button1_OnClick(obj)
{
	//DS_menu1.AddRow();
	gfn_exportExcel(grd_lst, "식단표");
	//alert(DS_menu1.row);
	
}

function grd_lst_OnMouseOver(obj:Grid, e:GridMouseEventInfo)
{
	
	//----------------------------------
	// Tooltip 설명 처리부
	//----------------------------------
	// Head 부 처리
	var	srow 	= 0.0;
	var	int_srow= 0;
	var	v_seq  	= "";

	if (e.row == -1 && e.cell > 3) {
		srow = toNumber((e.cell-1)/3);
		int_srow = parseInt(srow);
		//alert("/"+srow+"/"+int_srow+"/");
		//alert(length(DS_head1.GetColumn((int_srow-1), "rem")));
		
		if (gfn_length(DS_head1.getColumn((int_srow-1), "REM"))> 8 && int_srow == srow) {
			grd_lst.tooltiptext = "☞ 일정 : "+DS_head1.getColumn((int_srow-1), "REM")+" ";
			return;
		}
		else { grd_lst.tooltiptext = ""; }
	}
	else { grd_lst.tooltiptext = ""; }
	// Body 부 처리
	//grd_lst.ToolTipText = "nRow :"+nRow+"\nnCell :"+nCell+"\nnPosX :"+nPosX+"\nnPosY :"+nPosY;
	v_seq  = gfn_subStr(DS_head1.getColumn((e.cell-1), "FDAY"),4,4);
	//alert(v_seq); 
	
	if (e.row == -1 && e.cell > 0 && gfn_length(DS_menu1.getColumn(e.row, "DUP_STA_"+v_seq))> 0) {
		if (e.clientX > 740) {
			Div_pop.position.left = e.clientX-(Div_pop.position.width);
			Div_pop.position.top  = e.clientY+30;
			// 화면에 보여질 정보를 처리한다.
			Div_pop.visible = true;
		}
		else {
			Div_pop.position.left = e.clientX+15;
			Div_pop.position.top  = e.clientY+30;
			// 화면에 보여질 정보를 처리한다.
			Div_pop.visible = true;
		}
	}
	else {
		Div_pop.visible = false;
	}
		//alert("nRow :"+nRow);
		//alert("nCell :"+nCell);
	
}

function grd_lst_OnMouseOut(obj:Grid, e:MouseEventInfo)
{
	Div_pop.visible = false;
}

// 컬럼 이동시 4주간 실식수 현황을 조회한다.
function grd_lst_OnCellPosChanged(obj:Grid, e:GridSelectEventInfo)
{

	if (e.cell > 0) {
		// 4주간 실식수 현황을 조회한다.
		fn_ds_view_Search(e.cell);
		grd_lst.setFocus();
	}			
}

// 레시피가 존재하면 식수인원을 zero로 수정할 수 없습니다.
function DS_menu1_CanColumnChange(obj:Dataset, e:DSColChangeEventInfo)
{	
	var	v_recipe_yn = "RECIPE_YN_"+gfn_subStr(e.columnid,gfn_length(e.columnid)-4,4);
	var v_fday      = "FDAY_"     +gfn_subStr(e.columnid,gfn_length(e.columnid)-4,4);
	var v_order_yn  = "ORDER_YN_" +gfn_subStr(e.columnid,gfn_length(e.columnid)-4,4);

	
	if (obj.getColumn(e.row, v_fday) < "20080701") {
		g_message("EE","2008년 7월 1일 이전 식수예측값은 변경 불가합니다.");
		return false;
	}

	//Del키로 예측수량을 삭제한 경우 0으로 인식
	if (obj.getColumn(e.row, v_recipe_yn) == "Y" && ((e.newvalue == 0) || (gfn_length(e.newvalue)<= 0)))
	{
		g_Message("EE",	"레시피 정보 존재시 예상식수를 [0]으로 \n\n수정 불가합니다. 레시피 삭제 후 처리하세요.");
		//obj.SetColumn(nRow, strColumnID, varOldValue);
		return false;
	}
	
	if (obj.getColumn(e.row, v_order_yn) == "Y") {
		g_Message("EE",	"식자재가 발주되었습니다.\n\n예상식수를 삭제할수 없습니다.");
		//obj.SetColumn(nRow, strColumnID, varOldValue);
		return false;
	}
	
	return true;
}


// 예측식수현황을 저장한다.
function btn_save_OnClick(obj:Button, e:ClickEventInfo)
{
//============================================================================================
//(2009-05-08 추가) 시작
//2009-05-08 CSR#(27103) 박은규 요청자:이명희(건강관리센터)
//식당목표식재료율을 필수 입력값(0이상의 값)으로 변경
//============================================================================================
	if ((gfn_length(gfn_trim(me_sikrate.value))<= 0) || (toNumber(me_sikrate.value) <= 0))
	{
		g_Message("EE",	"[식당 목표식재료율(주간)]을 입력하세요!");
		me_sikrate.setFocus();
		return;
	}
//============================================================================================
//(2009-05-08 추가) 끝
//============================================================================================

	var chkFlag = false;

	// 정보 저장을 위한 check 및 생성 삭제대상을 작성한다.
	for(var ii = 0; ii < DS_menu1.getRowCount(); ii++) {
		for(var kk = 0; kk < DS_head1.getRowCount(); kk++) {
			var set_col		= gfn_subStr(DS_head1.getColumn(kk, "FDAY"),4,4);
			var fil_cond	= "FDAY=='"+DS_head1.getColumn(kk, "FDAY")+"'&&SGBN=='"+DS_menu1.getColumn(ii, "SGBN")+"'&&CGBN=='"+DS_menu1.getColumn(ii, "CGBN")+"'&&CGBN_CD=='"+DS_menu1.getColumn(ii, "CGBN_CD")+"'";
			var n_row		= DS_body1.findRowExpr(fil_cond);
			
			if (DS_menu1.getColumn(ii, "EXPECT_MEAL_QTY_"+set_col) == 0 ) {
				DS_body1.deleteRow(n_row);
			}
			//Del키로 예측수량을 삭제한 경우 0으로 인식
			else if (gfn_length(DS_menu1.getColumn(ii, "EXPECT_MEAL_QTY_"+set_col))<= 0 ) {
				DS_body1.deleteRow(n_row);
			}
			else {
				DS_body1.setColumn(n_row, "EXPECT_MEAL_QTY", DS_menu1.getColumn(ii, "EXPECT_MEAL_QTY_"+set_col));
				DS_body1.setColumn(n_row, "GOAL_COST_RATE", DS_menu1.getColumn(ii, "GOAL_COST_RATE_"+set_col));
			}
		}
	}
	
	for (i=DS_body1.rowcount; i >= 0 ; i--) {
		if ( DS_body1.getColumn(i, "FDAY") < "20080701" ) {
			DS_body1.deleteRow(i);
		}
	}

	if (DS_menu1.rowcount <= 0) {
		parent.fn_search();
		return;
	}
	
	
	// g_debug("DS_menu1");
	ds_input.setColumn(0, "EMP_NO", g_EmpNo);
	// 식재료율을 저장한다.
	// ----------------------------
    // 서비스셋팅
    var actionName, cmdName, inData, outData, otherArg, callBackFnc;
    var selectSqlId, notFoundSql, foundSql, saveFlagColumn, keySqlName, keyIncrement, callbackSql;
    var	insertSql, updateSql, deleteSql;

	inData		= "ds_sikrate=ds_sikrate:A ds_input=ds_input";
	outData		= "";
	callBackFnc	= "fn_afterSearch_sikrate";
	selectSqlId = "fs/fsm:FSM00051E_S005";		// 데이타있는지 체크 sql
	notFoundSql	= "fs/fsm:FSM00051E_I002";		// insert sql
	foundSql	= "fs/fsm:FSM00051E_U002";		// update sql	
	callbackSql	= "";							// callback sql(재조회)
	
	fsp_clear(this);
	fsp_addSelectExecute(this, selectSqlId, notFoundSql, foundSql);					// 저장
	// tit_addSearchActionInfo(this, callbackSql);												// CallBack조회 
	// tit_addSaveActionInfo(formObj, insertSql, updateSql, deleteSql,saveFlagColumn, keySqlName, keyIncrement, callbackSql)
    
	http.Sync = true;
	fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);		// 서비스 호출 
	http.Sync = false;
	
	// 주간식단목표 식수를 저장한다.
	// ----------------------------
    // 서비스셋팅
    var actionName, cmdName, inData, outData, otherArg, callBackFnc;
    var selectSqlId, notFoundSql, foundSql, saveFlagColumn, keySqlName, keyIncrement, callbackSql;
    var	insertSql, updateSql, deleteSql;

	inData		= "DS_body1=DS_body1:A ds_input=ds_input";
	outData		= "";
	callBackFnc	= "fn_afterSearch_body1";
	selectSqlId = "fs/fsm:FSM00051E_S004";		// 데이타있는지 체크 sql
	notFoundSql	= "fs/fsm:FSM00051E_I001";		// insert sql
	foundSql	= "fs/fsm:FSM00051E_U001";		// update sql	
	callbackSql	= "";							// callback sql(재조회)
	
	insertSql	= "";							// insertSql
	updateSql	= "";							// updateSql
	//deleteSql	= "";							// deleteSql
	deleteSql	= "fs/fsm:FSM00051E_D001";		// deleteSql 임시로 명희씨랑 애기중 (2008.06.09)
	
	fsp_clear(this);
	fsp_addSelectExecute(this, selectSqlId, notFoundSql, foundSql);					// 저장
	fsp_addSave(this, insertSql, updateSql, deleteSql, saveFlagColumn, keySqlName, keyIncrement, callbackSql);
	// tit_addSearchActionInfo(this, callbackSql);												// CallBack조회 
	// tit_addSaveActionInfo(formObj, insertSql, updateSql, deleteSql,saveFlagColumn, keySqlName, keyIncrement, callbackSql)
    
	http.Sync = true;
	fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);		// 서비스 호출 
	http.Sync = false;
	//
	DS_menu1.applyChange();
	
	fn_Sel_DS_body1();
	
	fn_search();
	
	return true;
	// 정보를 읽는다.

}

function btn_copy_OnClick(obj:Button, e:ClickEventInfo)
{
	ds_input.setColumn(0, "EMP_NO", g_EmpNo);
	// ----------------------------
    fsp_clear(this);
    
    var actionName, cmdName, inData, outData, otherArg, callBackFnc;
    var sqlId, keySqlName, keyIncrement, callbackSql;
  			
	inData		= "ds_input=ds_input";
	outData		= "";
	callBackFnc	= "fn_afterSearch_copy";
	
	sqlId 		= "fs/fsm:FSM00051E_I010";
	keySqlName	= "";
	keyIncrement= -1;
	callbackSql	= "";
	// tit_addMultiActionInfo(formObj, sqlId, keySqlName, keyIncrement, callbackSql)			
	
	fsp_addMulti(this, sqlId);
	
	http.Sync=true;
	fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc,"",true);	
	http.Sync=false;	
	// ----------------------------
	// 복사된 정보를 읽는다.
	fn_search();
}

function fn_afterSearch_copy(errCode, errMsg)
{
	if(errCode!=0)
	{
		return;
	} else { 
	
	    trace('copy =======> '); 
	
	}
}
  
function me_sikrate_ontextchanged(obj:MaskEdit,  e:TextChangedEventInfo)
{
// 주간식단목표 식재료율이 변경되면 ...
//function me_sikrate_OnChanged(obj:MaskEdit, e:TextChangedEventInfo)
//{
	//alert(length(toString(strText)));
	if (gfn_length(gfn_toString(e.posttext))> 0) {
		// 변경된 주간식단목표 식재료율을 setting 한다.
		DS_menu1.enableevent = false;
		for(var ii = 0; ii < DS_menu1.getRowCount(); ii++) {
			for(var kk = 0; kk < DS_head1.getRowCount(); kk++) {
				var set_col	= gfn_subStr(DS_head1.getColumn(kk, "FDAY"),4,4);
				DS_menu1.setColumn(ii, "GOAL_COST_RATE_"+set_col, me_sikrate.value);
			}
		}
		DS_menu1.enableevent = true;
		
		// 변경된 주간식단목표 식재료율을 setting 한다. 2008-01-07 추가됨
		for(var ii = 0; ii < ds_sikrate.getRowCount(); ii++) {
			ds_sikrate.setColumn(ii, "GOAL_COST_RATE", me_sikrate.value);
		}
		
		tab_Main.tab01.me_sikrate.value = tab_Main.tab00.me_sikrate.value;
	}
	else {	
		// 주간식단목표 식재료율 setting
		// me_sikrate.Value = DS_body1.Max("GOAL_COST_RATE");                 // 변경전 2008-01-07
		// tab_Main.tab01.me_sikrate.Value = DS_body1.Max("GOAL_COST_RATE");  // 변경전 2008-01-07
		tab_Main.tab00.me_sikrate.value = ds_sikrate.getMax("GOAL_COST_RATE");
		tab_Main.tab01.me_sikrate.value = ds_sikrate.getMax("GOAL_COST_RATE");
	}
	// g_debug("DS_menu1");
	// g_debug("ds_sikrate");
//}
	
}
 

]]></Script>
  </Form>
</FDL>
