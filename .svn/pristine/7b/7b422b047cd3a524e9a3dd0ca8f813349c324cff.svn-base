<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="fs.fse.eventProcessInfoMgntDAO">
    <desc>이벤트 진행정보 관리 HQML Query</desc>

    <!-- 이벤트 분류 목록을 조회한다. -->
    <statement name="selectCboList" type="select">
    /*+ com.hwfs.fs.fse.dao.eventProcessInfoMgntDAO.selectCboList */
    <![CDATA[
            SELECT  MU_CD
                  , LCLASS_CD
                  , MCLASS_CD
                  , MCLASS_NM
                  , LEV
                  , USE_YN
              FROM  FS_MCLASS
             WHERE  LCLASS_CD = 'E01'
             AND USE_YN = 'Y'
          ORDER BY  MU_CD, LCLASS_CD, MCLASS_CD
        ]]>
    </statement>

    <!-- 기물 목록을 조회한다. -->
    <statement name="selectLclass" type="select">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.selectLclass */
    <![CDATA[
            SELECT  MU_CD
                  , LCLASS_CD
                  , LCLASS_NM
                  , LEV
                  , USE_YN
              FROM  FS_LCLASS
             WHERE  SUBSTR(LCLASS_CD, 0, 1) = 'M'
             AND USE_YN = 'Y'
        ]]>
    </statement>

    <!-- 종류 목록을 조회한다. -->
    <statement name="selectMclass" type="select">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.selectMclass */
    <![CDATA[
            SELECT  MU_CD
                  , LCLASS_CD
                  , MCLASS_CD
                  , MCLASS_NM
                  , LEV
                  , USE_YN
              FROM  FS_MCLASS
             WHERE  SUBSTR(LCLASS_CD, 0, 1) = 'M'
             AND USE_YN = 'Y'
        ]]>
    </statement>

    <!-- 기기 목록을 조회한다. -->
    <statement name="selectSclass" type="select">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.selectSclass */
    <![CDATA[
            SELECT  MU_CD
                  , LCLASS_CD
                  , MCLASS_CD
                  , SCLASS_CD
                  , SCLASS_NM
                  , LEV
                  , USE_YN
              FROM  FS_SCLASS
             WHERE  SUBSTR(LCLASS_CD, 0, 1) = 'M'
             AND USE_YN = 'Y'
        ]]>
    </statement>

    <!-- 이벤트 Theme 목록을 조회한다. -->
    <statement name="selectThemeList" type="select">
    /*+ com.hwfs.fs.fse.dao.eventProcessInfoMgntDAO.selectThemeList */
    <![CDATA[
            SELECT  A.MCLASS_CD
                  , A.MCLASS_NM
                  , B.SCLASS_CD
                  , B.SCLASS_NM
              FROM  FS_MCLASS A, FS_SCLASS B
             WHERE  A.MU_CD     = B.MU_CD
               AND  A.LCLASS_CD = B.LCLASS_CD
               AND  A.MCLASS_CD = B.MCLASS_CD
               AND  A.LCLASS_CD = 'E01'
               AND A.USE_YN = 'Y'
               AND B.USE_YN = 'Y'
              <#if mclassCd?has_content>
               AND  A.MCLASS_CD = :mclassCd
              </#if>
        ]]>
    </statement>

    <!-- 이벤트 신청 목록을 조회한다. -->
    <statement name="selectGrdList" type="select">
    /*+ com.hwfs.fs.fse.dao.eventProcessInfoMgntDAO.selectGrdList */
    <![CDATA[
            SELECT  D.MU_CD        AS MU_CD
                  , D.MU_NM        AS MU_NM
                  , D.TM_CD        AS TM_CD
                  , D.TM_NM        AS TM_NM
                  , D.UPJANG       AS UPJANG_CD
                  , D.UPJANGNM     AS UPJANG_NM
                --, A.USE_YN       AS USE_YN_A
                --, B.USE_YN       AS USE_YN_B
                  , A.LCLASS_CD    AS LCLASS_CD
                  , A.MCLASS_CD    AS MCLASS_CD
                  , A.MCLASS_NM    AS MCLASS_NM
                  , B.SCLASS_CD    AS SCLASS_CD
                  , B.SCLASS_NM    AS SCLASS_NM
                  , C.EVNT_ID      AS EVNT_ID
                  , C.EVNT_TITLE   AS EVNT_TITLE
                  , C.SIGN_STATUS  AS SIGN_STATUS
                  , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'EVENT_SIGN_STATUS' AND CODE = C.SIGN_STATUS) AS SIGN_STATUS_NM
                  , C.CUSER        AS CUSER
                --, (SELECT NM_KOR FROM HR_PERSONAL WHERE SABUN = C.CUSER AND ROWNUM = 1)  AS CUSER_NM
                  , NVL(J.NM_KOR,  I.NM_KOR)  AS CUSER_NM
              FROM  FS_MCLASS A, FS_SCLASS B, FSE_EVNT_REQUEST C, SCO_UPJANG_MST_V D
                  , SCC_USERINFO I, HR_PERSONAL J
             WHERE  A.LCLASS_CD         = B.LCLASS_CD
               AND  A.MCLASS_CD         = B.MCLASS_CD
               AND  B.LCLASS_CD         = C.LCLASS_CD
               AND  B.MCLASS_CD         = C.MCLASS_CD
               AND  B.SCLASS_CD         = C.SCLASS_CD
               AND  A.USE_YN            = 'Y'
               AND  B.USE_YN            = 'Y'
               AND  C.REQUEST_UPJANG_CD = D.UPJANG
               AND  C.CUSER             = I.SABUN(+)
               AND  I.SABUN             = J.SABUN(+)
               AND  I.USE_YN            = 'Y'
             <#if muCd?has_content>
               AND  D.MU_CD     = :muCd
             </#if>
             <#if tmCd?has_content>
               AND  D.TM_CD     = :tmCd
             </#if>
             <#if upjangCd?has_content>
               AND  D.UPJANG    = :upjangCd
             </#if>
             <#if eventCd?has_content>
               AND  C.EVNT_ID   = :eventCd
             </#if>
             <#if eventNm?has_content>
               AND  C.EVNT_TITLE  LIKE '%' || :eventNm || '%' 
             </#if>
          ORDER BY  A.MCLASS_CD, B.SCLASS_CD
        ]]>
    </statement>

    <!-- 이벤트 master 정보을 조회한다. -->
    <statement name="selectEventMst" type="select">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.selectEventMst */
    <![CDATA[
            SELECT  A.LCLASS_CD         AS LCLASS_CD           /* 대분류_코드      */
                  , A.MCLASS_CD         AS MCLASS_CD           /* 중분류_코드      */
                  , A.MCLASS_NM         AS MCLASS_NM           /* 중분류_명        */
                  , B.SCLASS_CD         AS SCLASS_CD           /* 소분류_코드      */
                  , B.SCLASS_NM         AS SCLASS_NM           /* 소분류_명        */
                  , C.FILE_ID           AS FILE_ID_MST         /* 첨부파일ID_MST   */
                --, A.USE_YN            AS USE_YN_A            /* 사용여부_MCLASS  */
                --, B.USE_YN            AS USE_YN_B            /* 사용여부_SCLASS  */
                --, C.PROPS_TERM_SDATE  AS PROPS_TERM_SDATE    /* 추진_기간_시작일 */
                --, C.PROPS_TERM_EDATE  AS PROPS_TERM_EDATE    /* 추진_기간_종료일 */
                  , SUBSTR(C.PROPS_TERM_SDATE,0,6)   AS PROPS_TERM_SDATE    /* 추진_기간_시작일 */
                  , SUBSTR(C.PROPS_TERM_EDATE,0,6)   AS PROPS_TERM_EDATE    /* 추진_기간_종료일 */
                  , C.EVNT_TITLE        AS EVNT_TITLE          /* 이벤트_제목      */
                  , C.OFFER_MENU        AS OFFER_MENU          /* 제공_식단        */
                  , C.CNPT_EXPL         AS CNPT_EXPL           /* 개념_설명        */
                  , ''                  AS REQUEST_UPJANG_CD
                  , ''                  AS EVNT_ID
                  , ''                  AS PROGRESS_DATE
                  , ''                  AS FILE_ID
                  , ''                  AS SIGN_PRCG_NM
                  , ''                  AS SIGN_PRCG_SABUN
                  , ''                  AS SIGN_STATUS
                  , ''                  AS SIGN_STATUS_NM
                  , ''                  AS RTN_REASON
                  , ''                  AS CNTC_NUM
                  , ''                  AS ZIP_CODE
                  , ''                  AS TRSF_ADDR
                  , ''                  AS TRSF_MTOD1
                  , ''                  AS TRSF_MTOD2
				  , (SELECT ADDR_KEY FROM SCO_UPJANG_MST_V WHERE UPJANG = :upjangCd)  AS ADDR_KEY
                  , (SELECT SCC_ADDR_FUN(ADDR_KEY, :loginPersMask, :maskAuth) ADDR_INFO   FROM SCO_UPJANG_MST_V WHERE UPJANG = :upjangCd) AS ADDR_INFO
                  , (SELECT SCC_CRYPTO.MASKAUTH_FUN(UPJANG_TEL_ENC, 9, :loginPersMask, :maskAuth)  FROM SCO_UPJANG_MST_V WHERE UPJANG = :upjangCd) AS CNTC_NUM_ENC
                  , SCC_TELNO_SPLIT_FUN((SELECT SCC_CRYPTO.MASKAUTH_FUN(UPJANG_TEL_ENC, 9, :loginPersMask, :maskAuth)  FROM SCO_UPJANG_MST_V WHERE UPJANG = :upjangCd),1) AS CNTC_NUM1
                  , SCC_TELNO_SPLIT_FUN((SELECT SCC_CRYPTO.MASKAUTH_FUN(UPJANG_TEL_ENC, 9, :loginPersMask, :maskAuth)  FROM SCO_UPJANG_MST_V WHERE UPJANG = :upjangCd),2) AS CNTC_NUM2
                  , SCC_TELNO_SPLIT_FUN((SELECT SCC_CRYPTO.MASKAUTH_FUN(UPJANG_TEL_ENC, 9, :loginPersMask, :maskAuth)  FROM SCO_UPJANG_MST_V WHERE UPJANG = :upjangCd),3) AS CNTC_NUM3
                  , ''                  AS TRSF_ADDR_ENC
                  , C.CUSER             AS CUSER
                --, (SELECT NM_KOR FROM HR_PERSONAL WHERE SABUN = C.CUSER AND ROWNUM = 1)  AS CUSER_NM
                  , NVL(J.NM_KOR,  I.NM_KOR)  AS CUSER_NM
              FROM  FS_MCLASS A, FS_SCLASS B, FSE_EVNT_MASTER C
                  , SCC_USERINFO I, HR_PERSONAL J
             WHERE  A.MU_CD       = B.MU_CD
               AND  A.LCLASS_CD   = B.LCLASS_CD
               AND  A.MCLASS_CD   = B.MCLASS_CD
               AND  B.LCLASS_CD   = C.MGRP_CD
               AND  B.MCLASS_CD   = C.MCLASS_CD
               AND  B.SCLASS_CD   = C.SCLASS_CD
               AND  A.USE_YN      = 'Y'
               AND  B.USE_YN      = 'Y'
               AND  C.SIGN_STATUS = '002'
               AND  C.CUSER       = I.SABUN(+)
               AND  I.SABUN       = J.SABUN(+)
               AND  I.USE_YN      = 'Y'
             <#if mstLclassCd?has_content>
               AND  A.LCLASS_CD   = :mstLclassCd
             </#if>
             <#if mstMclassCd?has_content>
               AND  A.MCLASS_CD   = :mstMclassCd
             </#if>
             <#if mstSclassCd?has_content>
               AND  B.SCLASS_CD   = :mstSclassCd
             </#if>
             <#if mstEventCd?has_content>
               AND  C.SEQ         = :mstEventCd
             </#if>
        ]]>
    </statement>

    <!-- 이벤트 진행정보 master 목록을 조회한다. -->
    <statement name="selectMstProgress" type="select">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.selectMstProgress */
    <![CDATA[
            SELECT  ''   AS EVNT_ID
                  , ''   AS REQUEST_UPJANG_CD
                  , ''   AS SEQ
                  , PROGRESS_PRCDR_CD
                  , PROGRESS_PRCDR_CONTENTS
              FROM  FSE_EVNT_PRCDR_MASTER
             WHERE  1 = 1
             <#if mstLclassCd?has_content>
               AND  MGRP_CD   = :mstLclassCd
             </#if>
             <#if mstMclassCd?has_content>
               AND  MCLASS_CD = :mstMclassCd
             </#if>
             <#if mstSclassCd?has_content>
               AND  SCLASS_CD = :mstSclassCd
             </#if>
             <#if mstEventCd?has_content>
               AND  SEQ       = :mstEventCd
             </#if>
          ORDER BY  PROGRESS_PRCDR_CD
        ]]>
    </statement>

    <!-- 이벤트 신청 정보을 조회한다. -->
    <statement name="selectEventReq" type="select">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.selectEventReq */
    <![CDATA[
            SELECT  REQUEST_UPJANG_CD                    AS REQUEST_UPJANG_CD
                  , EVNT_ID                              AS EVNT_ID
                  , LCLASS_CD                            AS LCLASS_CD
                  , MCLASS_CD                            AS MCLASS_CD
                  , MCLASS_NM                            AS MCLASS_NM
                  , SCLASS_CD                            AS SCLASS_CD
                  , SCLASS_NM                            AS SCLASS_NM
                  , FILE_ID_MST                          AS FILE_ID_MST  /* 첨부파일ID_MST */
                  , PROPS_TERM_SDATE                     AS PROPS_TERM_SDATE
                  , PROPS_TERM_EDATE                     AS PROPS_TERM_EDATE
                  , EVNT_TITLE                           AS EVNT_TITLE
                  , OFFER_MENU                           AS OFFER_MENU
                  , CNPT_EXPL                            AS CNPT_EXPL
                  , PROGRESS_DATE                        AS PROGRESS_DATE
                  , SIGN_PRCG_SABUN                      AS SIGN_PRCG_SABUN
                  , (SELECT NM_KOR FROM HR_PERSONAL WHERE SABUN = SIGN_PRCG_SABUN) AS SIGN_PRCG_NM
                  , SIGN_STATUS                          AS SIGN_STATUS
                  , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'EVENT_SIGN_STATUS' AND CODE = SIGN_STATUS) AS SIGN_STATUS_NM
                  , RTN_REASON                           AS RTN_REASON
                  , ADDR_KEY                             AS ADDR_KEY
                  , ADDR_INFO                            AS ADDR_INFO
                  , TRSF_MTOD1                           AS TRSF_MTOD1
                  , TRSF_MTOD2                           AS TRSF_MTOD2
                  , CNTC_NUM_ENC                         AS CNTC_NUM_ENC
                  , SCC_TELNO_SPLIT_FUN(CNTC_NUM_ENC, 1) AS CNTC_NUM1
                  , SCC_TELNO_SPLIT_FUN(CNTC_NUM_ENC, 2) AS CNTC_NUM2
                  , SCC_TELNO_SPLIT_FUN(CNTC_NUM_ENC, 3) AS CNTC_NUM3
                  , FILE_ID                              AS FILE_ID
                  , CUSER                                AS CUSER
                  , CUSER_NM                             AS CUSER_NM
              FROM  (SELECT  A.LCLASS_CD                      AS LCLASS_CD
                           , A.MCLASS_CD                      AS MCLASS_CD
                           , A.MCLASS_NM                      AS MCLASS_NM
                           , B.SCLASS_CD                      AS SCLASS_CD
                           , B.SCLASS_NM                      AS SCLASS_NM
                         --, A.USE_YN                         AS USE_YN_A
                         --, B.USE_YN                         AS USE_YN_B
                           , C.REQUEST_UPJANG_CD              AS REQUEST_UPJANG_CD
                           , C.EVNT_ID                        AS EVNT_ID
                           , ''                               AS FILE_ID_MST
                           , SUBSTR(C.PROPS_TERM_SDATE,0,6)   AS PROPS_TERM_SDATE
                           , SUBSTR(C.PROPS_TERM_EDATE,0,6)   AS PROPS_TERM_EDATE
                         --, C.PROPS_TERM_SDATE               AS PROPS_TERM_SDATE
                         --, C.PROPS_TERM_EDATE               AS PROPS_TERM_EDATE
                           , C.EVNT_TITLE                     AS EVNT_TITLE
                           , C.OFFER_MENU                     AS OFFER_MENU
                           , C.CNPT_EXPL                      AS CNPT_EXPL
                           , C.PROGRESS_DATE                  AS PROGRESS_DATE
                           , C.SIGN_PRCG_SABUN                AS SIGN_PRCG_SABUN
                           , C.SIGN_STATUS                    AS SIGN_STATUS
                           , C.RTN_REASON                     AS RTN_REASON
                           , C.ADDR_KEY                       AS ADDR_KEY 
                           , SCC_ADDR_FUN(C.ADDR_KEY, :loginPersMask, :maskAuth) AS ADDR_INFO
                           , C.TRSF_MTOD1                     AS TRSF_MTOD1
                           , C.TRSF_MTOD2                     AS TRSF_MTOD2
                           , SCC_CRYPTO.MASKAUTH_FUN(C.CNTC_NUM_ENC, 9, :loginPersMask, :maskAuth)  AS CNTC_NUM_ENC  
                           , C.FILE_ID                        AS FILE_ID
                           , C.CUSER                          AS CUSER
                         --, (SELECT NM_KOR FROM HR_PERSONAL WHERE SABUN = C.CUSER AND ROWNUM = 1)  AS CUSER_NM
                           , NVL(J.NM_KOR,  I.NM_KOR)         AS CUSER_NM
                       FROM  FS_MCLASS A, FS_SCLASS B, FSE_EVNT_REQUEST C
                           , SCC_USERINFO I, HR_PERSONAL J
                      WHERE  A.LCLASS_CD = B.LCLASS_CD
                        AND  A.MCLASS_CD = B.MCLASS_CD
                        AND  B.LCLASS_CD = C.LCLASS_CD
                        AND  B.MCLASS_CD = C.MCLASS_CD
                        AND  B.SCLASS_CD = C.SCLASS_CD
                        AND  A.USE_YN    = 'Y'
                        AND  B.USE_YN    = 'Y'
                        AND  C.CUSER     = I.SABUN(+)
                        AND  I.SABUN     = J.SABUN(+)
                        AND  I.USE_YN    = 'Y'
                        AND  C.EVNT_ID   = :evntId
                    )
         ORDER  BY  MCLASS_NM, SCLASS_NM, EVNT_TITLE
        ]]>
    </statement>

    <!-- 이벤트 진행정보 관리 목록을 조회한다. -->
    <statement name="selectProgress" type="select">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.selectProgress */
    <![CDATA[
            SELECT  EVNT_ID
                  , REQUEST_UPJANG_CD
                  , SEQ
                  , PROGRESS_PRCDR_CD
                  , PROGRESS_PRCDR_CONTENTS
              FROM  FSE_EVNT_PRCDR
             WHERE  EVNT_ID = :evntId
             ORDER  BY  1, 2, 4 DESC
        ]]>
    </statement>

    <!-- 이벤트 기기 정보 목록을 조회한다. -->
    <statement name="selectInforeg" type="select">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.selectInforeg */
    <![CDATA[
            SELECT  A.LCLASS_CD
                  , A.MCLASS_CD
                  , A.MCLASS_NM
                  , B.SCLASS_CD
                  , B.SCLASS_NM
                  , C.REQUEST_UPJANG_CD
                  , C.EVNT_ID
                  , C.SEQ
                  , C.REQUEST_QUANTITY
                  , C.USE_DATE_SDATE
                  , C.USE_DATE_EDATE
                  , C.RMA_DATE
                  , (( SELECT NVL(SUM(QTY_DELIVERED), 0) FROM FSM_UTENSIL_MASTER
                        WHERE LCLASS_CD = A.LCLASS_CD AND MCLASS_CD = A.MCLASS_CD
                          AND SCLASS_CD = B.SCLASS_CD AND USE_YN = 'Y')
                     - (NVL((SELECT NVL(SUM(REQUEST_QUANTITY), 0) FROM FSM_UTENSIL_REQUEST
                              WHERE LCLASS_CD = A.LCLASS_CD AND MCLASS_CD = A.MCLASS_CD AND SCLASS_CD = B.SCLASS_CD
                                AND USE_DATE_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND RMA_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                                AND UPJANG_CHG_YN IS NULL AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NULL ), 0)
                     + NVL((SELECT NVL(SUM(REQUEST_QUANTITY), 0) FROM FSM_UTENSIL_REQUEST
                             WHERE LCLASS_CD = A.LCLASS_CD AND MCLASS_CD=A.MCLASS_CD AND SCLASS_CD = B.SCLASS_CD
                               AND USE_DATE_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND RMA_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                               AND UPJANG_CHG_YN IS NULL AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NOT NULL AND SECOND_SIGN_STATUS = '002'), 0)
                     + NVL((SELECT NVL(SUM(MNGMV_QUANTITY), 0) FROM FSM_UTENSIL_REQUEST
                             WHERE LCLASS_CD = A.LCLASS_CD AND MCLASS_CD = A.MCLASS_CD AND SCLASS_CD = B.SCLASS_CD
                               AND MNGMV_DAYS_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND MNGMV_DAYS_EDATE >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                               AND UPJANG_CHG_YN = 1 AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NULL),0)
                     + NVL((SELECT NVL(SUM(MNGMV_QUANTITY), 0) FROM FSM_UTENSIL_REQUEST
                             WHERE LCLASS_CD = A.LCLASS_CD AND MCLASS_CD = A.MCLASS_CD AND SCLASS_CD = B.SCLASS_CD
                               AND MNGMV_DAYS_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND MNGMV_DAYS_EDATE >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                               AND UPJANG_CHG_YN = 1  AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NOT NULL AND SECOND_SIGN_STATUS = '002'), 0))
                     - (SELECT NVL(SUM(QUANTITY), 0) FROM FSM_UTENSIL_AS_HISTORY
                         WHERE CLASS = '001' AND LCLASS_CD = A.LCLASS_CD AND MCLASS_CD = A.MCLASS_CD AND SCLASS_CD = B.SCLASS_CD
                           AND REQUEST_DATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND END_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
                     - (SELECT NVL(SUM(QUANTITY), 0) FROM FSM_UTENSIL_AS_HISTORY
                         WHERE CLASS = '002' AND LCLASS_CD = A.LCLASS_CD AND MCLASS_CD = A.MCLASS_CD AND SCLASS_CD = B.SCLASS_CD
                           AND END_DATE < TO_CHAR(SYSDATE, 'YYYYMMDD'))
                     - (SELECT NVL(SUM(REQUEST_QUANTITY), 0) FROM FSC_CATERINGUTENSIL_REG
                         WHERE MACHINE_CLASS_CD = A.LCLASS_CD AND  MACHINE_KIND_CD = A.MCLASS_CD AND MACHINE_CD = B.SCLASS_CD
                           AND APPRV_YN = 'Y' AND LEND_TERM_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND TO_CHAR(RMA_DATE, 'YYYYMMDD') >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
                     - (SELECT NVL(SUM(REQUEST_QUANTITY), 0) FROM FSE_EVNT_INFOREG E, FSE_EVNT_REQUEST F
                         WHERE E.EVNT_ID(+) = F.EVNT_ID AND E.LCLASS_CD = A.LCLASS_CD AND E.MCLASS_CD = A.MCLASS_CD AND E.SCLASS_CD = B.SCLASS_CD
                           --AND F.SIGN_STATUS = '002' AND E.USE_DATE_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND E.RMA_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
                           AND E.RMA_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
                    ) AS RESIDUAL_QTY
                  , C.CDATE
              FROM  FS_MCLASS A, FS_SCLASS B, FSE_EVNT_INFOREG C
             WHERE  A.USE_YN    = 'Y'
               AND  A.LCLASS_CD = B.LCLASS_CD
               AND  A.MCLASS_CD = B.MCLASS_CD
               AND  B.LCLASS_CD = C.LCLASS_CD
               AND  B.MCLASS_CD = C.MCLASS_CD
               AND  B.SCLASS_CD = C.SCLASS_CD
               AND  C.EVNT_ID   = :evntId
        ]]>
    </statement>

    <!-- 이벤트 사업장 기기 정보 목록을 조회한다. -->
    <statement name="selectUpjangutensil" type="select">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.selectUpjangutensil */
    <![CDATA[
            SELECT  EVNT_ID         AS EVNT_ID
                  , SEQ             AS SEQ
                  , UTENSILNM       AS UTENSILNM
                  , VENDORNM        AS VENDORNM
                  , REQUEST_DATE    AS REQUEST_DATE
                  , REMARK          AS REMARK
              FROM  FSE_EVNT_UPJANGUTENSIL
             WHERE  EVNT_ID   = :evntId
        ]]>
    </statement>

    <!-- 기기 재고수량을 조회한다. -->
    <statement name="selectInventoryQty" type="select">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.selectInventoryQty */
    <![CDATA[
            SELECT  A.LCLASS_CD
                  , A.MCLASS_CD
                  , B.SCLASS_CD
                  , (( SELECT NVL(SUM(QTY_DELIVERED), 0) FROM FSM_UTENSIL_MASTER
                        WHERE LCLASS_CD = A.LCLASS_CD AND MCLASS_CD = A.MCLASS_CD
                          AND SCLASS_CD = B.SCLASS_CD AND USE_YN = 'Y')
                     - (NVL((SELECT NVL(SUM(REQUEST_QUANTITY), 0) FROM FSM_UTENSIL_REQUEST
                              WHERE LCLASS_CD = A.LCLASS_CD AND MCLASS_CD = A.MCLASS_CD AND SCLASS_CD = B.SCLASS_CD
                                AND USE_DATE_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND RMA_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                                AND UPJANG_CHG_YN IS NULL AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NULL ), 0)
                     + NVL((SELECT NVL(SUM(REQUEST_QUANTITY), 0) FROM FSM_UTENSIL_REQUEST
                             WHERE LCLASS_CD = A.LCLASS_CD AND MCLASS_CD=A.MCLASS_CD AND SCLASS_CD = B.SCLASS_CD
                               AND USE_DATE_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND RMA_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                               AND UPJANG_CHG_YN IS NULL AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NOT NULL AND SECOND_SIGN_STATUS = '002'), 0)
                     + NVL((SELECT NVL(SUM(MNGMV_QUANTITY), 0) FROM FSM_UTENSIL_REQUEST
                             WHERE LCLASS_CD = A.LCLASS_CD AND MCLASS_CD = A.MCLASS_CD AND SCLASS_CD = B.SCLASS_CD
                               AND MNGMV_DAYS_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND MNGMV_DAYS_EDATE >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                               AND UPJANG_CHG_YN = 1 AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NULL),0)
                     + NVL((SELECT NVL(SUM(MNGMV_QUANTITY), 0) FROM FSM_UTENSIL_REQUEST
                             WHERE LCLASS_CD = A.LCLASS_CD AND MCLASS_CD = A.MCLASS_CD AND SCLASS_CD = B.SCLASS_CD
                               AND MNGMV_DAYS_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND MNGMV_DAYS_EDATE >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                               AND UPJANG_CHG_YN = 1  AND FIRST_SIGN_STATUS = '002' AND SECOND_SIGN_PRCG_SABUN IS NOT NULL AND SECOND_SIGN_STATUS = '002'), 0))
                     - (SELECT NVL(SUM(QUANTITY), 0) FROM FSM_UTENSIL_AS_HISTORY
                         WHERE CLASS = '001' AND LCLASS_CD = A.LCLASS_CD AND MCLASS_CD = A.MCLASS_CD AND SCLASS_CD = B.SCLASS_CD
                           AND REQUEST_DATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND END_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
                     - (SELECT NVL(SUM(QUANTITY), 0) FROM FSM_UTENSIL_AS_HISTORY
                         WHERE CLASS = '002' AND LCLASS_CD = A.LCLASS_CD AND MCLASS_CD = A.MCLASS_CD AND SCLASS_CD = B.SCLASS_CD
                           AND END_DATE < TO_CHAR(SYSDATE, 'YYYYMMDD'))
                     - (SELECT NVL(SUM(REQUEST_QUANTITY), 0) FROM FSC_CATERINGUTENSIL_REG
                         WHERE MACHINE_CLASS_CD = A.LCLASS_CD AND  MACHINE_KIND_CD = A.MCLASS_CD AND MACHINE_CD = B.SCLASS_CD
                           AND APPRV_YN = 'Y' AND LEND_TERM_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND TO_CHAR(RMA_DATE, 'YYYYMMDD') >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
                     - (SELECT NVL(SUM(REQUEST_QUANTITY), 0) FROM FSE_EVNT_INFOREG E, FSE_EVNT_REQUEST F
                         WHERE E.EVNT_ID(+) = F.EVNT_ID AND E.LCLASS_CD = A.LCLASS_CD AND E.MCLASS_CD = A.MCLASS_CD AND E.SCLASS_CD = B.SCLASS_CD
                           --AND F.SIGN_STATUS = '002' AND E.USE_DATE_SDATE <= TO_CHAR(SYSDATE, 'YYYYMMDD') AND E.RMA_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
                           AND E.RMA_DATE >= TO_CHAR(SYSDATE, 'YYYYMMDD'))
                    ) AS RESIDUAL_QTY
              FROM  FS_MCLASS A, FS_SCLASS B
             WHERE  A.USE_YN    = 'Y'
               AND  A.LCLASS_CD = B.LCLASS_CD
               AND  A.MCLASS_CD = B.MCLASS_CD
               AND  A.LCLASS_CD = :lclassCd
               AND  A.MCLASS_CD = :mclassCd
               AND  B.SCLASS_CD = :sclassCd
        ]]>
    </statement>

    <!-- 코드 정보를 조회한다. -->
    <statement name="selectInforegCode" type="select">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.selectInforegCode */
    <![CDATA[
            SELECT  A.LCLASS_CD AS CODE1
                  , A.LCLASS_NM AS CODE_NAME1
                  , B.MCLASS_CD AS CODE2
                  , B.MCLASS_NM AS CODE_NAME2
                  , C.SCLASS_CD AS CODE3
                  , C.SCLASS_NM AS CODE_NAME3
              FROM  FS_LCLASS A
                  , FS_MCLASS B
                  , FS_SCLASS C
             WHERE  A.MU_CD     = B.MU_CD
               AND  A.LCLASS_CD = B.LCLASS_CD
               AND  B.LCLASS_CD = C.LCLASS_CD
               AND  B.MCLASS_CD = C.MCLASS_CD
               AND  SUBSTR(A.LCLASS_CD, 0, 1) = 'M'
               AND  A.MU_CD     = :funeralHallCd
               AND  A.USE_YN    = 'Y'
               AND  B.USE_YN    = 'Y'
               AND  C.USE_YN    = 'Y'
             <#if code?has_content>
               AND  A.LCLASS_CD = :code
             </#if>
             <#if codeName?has_content>
               AND  A.LCLASS_NM LIKE '%' || :codeName || '%'
             </#if>
          ORDER BY  A.LCLASS_CD, B.MCLASS_CD, C.SCLASS_CD
        ]]>
    </statement>

    <!-- 서버 사진을 조회한다. -->
    <statement name="selectImgList" type="select">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.selectImgList */
    <![CDATA[
            SELECT  0                            AS CHK
                  , RGST_SEQ                     AS RGST_SEQ
                  , UPJANG                       AS UPJANG
                  , RGST_DATE                    AS RGST_DATE
                  , GUBUN                        AS GUBUN
                  , FILE_NM                      AS FILE_NM
                  , REL_PATH                     AS REL_PATH
                  , REL_PATH || '/' || FILE_NM   AS PRE_VIEW
                  , FILE_SIZE                    AS FILE_SIZE
                  , BIGO                         AS BIGO
              FROM  SCZ_PHOTO_IMGSEND
             WHERE  RGST_DATE = :rgstDate
               AND  GUBUN     = :gubun
          ORDER BY  CDATE DESC
        ]]>
    </statement>

    <statement name="selectEvntId">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.selectEvntId */
    <![CDATA[
            SELECT FSE_EVNT_REQUEST_S.NEXTVAL EVNT_ID FROM DUAL
            ]]>
    </statement>

    <!-- 이벤트 신청 목록(을)를 등록한다. -->
    <statement name="insertForm" type="insert">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.insertForm */
    <![CDATA[
            INSERT INTO FSE_EVNT_REQUEST (
                      REQUEST_UPJANG_CD
                    , EVNT_ID
                    , LCLASS_CD
                    , MCLASS_CD
                    , SCLASS_CD
                    , PROPS_TERM_SDATE
                    , PROPS_TERM_EDATE
                    , EVNT_TITLE
                    , OFFER_MENU
                    , CNPT_EXPL
                    , PROGRESS_DATE
                    , SIGN_PRCG_SABUN
                    , SIGN_STATUS
                    , ADDR_KEY
                    , TRSF_MTOD1
                    , TRSF_MTOD2
                    , CNTC_NUM_ENC
                    , FILE_ID
                    , CUSER
                    , CDATE
            ) VALUES (
                      :requestUpjangCd
                    , :evntId
                    , :lclassCd
                    , :mclassCd
                    , :sclassCd
                    , <#if propsTermSdate?has_content> :propsTermSdate <#else> null </#if>
                    , <#if propsTermEdate?has_content> :propsTermEdate <#else> null </#if>
                    , <#if evntTitle?has_content> :evntTitle <#else> null </#if>
                    , <#if offerMenu?has_content> :offerMenu <#else> null </#if>
                    , <#if cnptExpl?has_content> :cnptExpl <#else> null </#if>
                    , <#if progressDate?has_content> :progressDate <#else> null </#if>
                    , <#if signPrcgSabun?has_content> :signPrcgSabun <#else> null </#if>
                    , <#if signStatus?has_content> :signStatus <#else> null </#if>
                    , <#if addrKey?has_content> :addrKey <#else> null </#if>
                    , <#if trsfMtod1?has_content> :trsfMtod1 <#else> null </#if>
                    , <#if trsfMtod2?has_content> :trsfMtod2 <#else> null </#if>
                    , <#if cntcNumEnc?has_content> SCC_CRYPTO.ENC_FUN(:cntcNumEnc) <#else> null </#if>
                    , :fileIdMst
                    , :loginSabun
                    , SYSDATE
            )
        ]]>
    </statement>

    <!-- 이벤트 진행절차(을)를 등록한다. -->
    <statement name="insertPrcdr" type="insert">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.insertForm */
    <![CDATA[
            INSERT INTO FSE_EVNT_PRCDR (
                      EVNT_ID
                    , REQUEST_UPJANG_CD
                    , SEQ
                    , PROGRESS_PRCDR_CD
                    , PROGRESS_PRCDR_CONTENTS
                    , CUSER
                    , CDATE
            ) VALUES (
                      :evntId
                    , :requestUpjangCd
                    , (SELECT NVL(MAX(SEQ), 0) + 1 FROM FSE_EVNT_PRCDR WHERE EVNT_ID = :evntId)
                    , <#if progressPrcdrCd?has_content> :progressPrcdrCd <#else> null </#if>
                    , <#if progressPrcdrContents?has_content> :progressPrcdrContents <#else> null </#if>
                    , :loginSabun
                    , SYSDATE
            )
        ]]>
    </statement>

    <!-- 이벤트 기기정보(을)를 등록한다. -->
    <statement name="insertInforeg" type="insert">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.insertInforeg */
    <![CDATA[
            INSERT INTO FSE_EVNT_INFOREG (
                      REQUEST_UPJANG_CD
                    , EVNT_ID
                    , SEQ
                    , LCLASS_CD
                    , MCLASS_CD
                    , SCLASS_CD
                    , REQUEST_QUANTITY
                    , USE_DATE_SDATE
                    , USE_DATE_EDATE
                    , RMA_DATE
                    , CUSER
                    , CDATE
            ) VALUES (
                      :requestUpjangCd
                    , :evntId
                    , (SELECT NVL(MAX(SEQ), 0) + 1 FROM FSE_EVNT_INFOREG WHERE EVNT_ID = :evntId)
                    , :lclassCd
                    , :mclassCd
                    , :sclassCd
                    , :requestQuantity
                    , :useDateSdate
                    , :useDateEdate
                    , :rmaDate
                    , :loginSabun
                    , SYSDATE
            )
        ]]>
    </statement>

    <!-- 이벤트 사업장 기기정보(을)를 등록한다. -->
    <statement name="insertUpjangutensil" type="insert">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.insertUpjangutensil */
    <![CDATA[
            INSERT INTO FSE_EVNT_UPJANGUTENSIL (
                      EVNT_ID
                    , SEQ
                    , UTENSILNM
                    , VENDORNM
                    , REQUEST_DATE
                    , REMARK
                    , CUSER
                    , CDATE
            ) VALUES (
                      :evntId
                    , (SELECT NVL(MAX(SEQ), 0) + 1 FROM FSE_EVNT_UPJANGUTENSIL WHERE EVNT_ID = :evntId)
                    , :utensilnm
                    , :vendornm
                    , :requestDate
                    , :remark
                    , :loginSabun
                    , SYSDATE
            )
        ]]>
    </statement>

    <!-- 이벤트 신청 정보(을)를 수정한다. -->
    <statement name="updateForm">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.updateForm */
    <![CDATA[
            UPDATE FSE_EVNT_REQUEST
               SET LCLASS_CD             = :lclassCd               														/* 대분류                     */
                 , MCLASS_CD             = :mclassCd               														/* 중분류                     */
                 , SCLASS_CD             = :sclassCd               														/* 소분류                     */
                 , PROPS_TERM_SDATE      = <#if propsTermSdate?has_content> :propsTermSdate <#else> null </#if>         /* 추진시기 시작일자          */
                 , PROPS_TERM_EDATE      = <#if propsTermEdate?has_content> :propsTermEdate <#else> null </#if>         /* 추진시기 종료일자          */
                 , EVNT_TITLE            = <#if evntTitle?has_content> :evntTitle <#else> null </#if>              		/* 이벤트 제목 기술           */
                 , OFFER_MENU            = <#if offerMenu?has_content> :offerMenu <#else> null </#if>              		/* 제공메뉴 기술              */
                 , CNPT_EXPL             = <#if cnptExpl?has_content> :cnptExpl <#else> null </#if>               		/* 컨셉 설명 기술             */
                 , PROGRESS_DATE         = <#if progressDate?has_content> :progressDate <#else> null </#if>           	/* 진행일자                   */
                 , SIGN_PRCG_SABUN       = <#if signPrcgSabun?has_content> :signPrcgSabun <#else> null </#if>          	/* 결재 담당자 사번           */
                 , SIGN_STATUS           = <#if signStatus?has_content> :signStatus <#else> null </#if>             	/* 결재상태                   */
                 , TRSF_MTOD1            = <#if trsfMtod1?has_content> :trsfMtod1 <#else> null </#if>              		/* 배송_방법1                 */
                 , TRSF_MTOD2            = <#if trsfMtod2?has_content> :trsfMtod2 <#else> null </#if>              		/* 배송_방법2                 */
                 , ADDR_KEY              = <#if addrKey?has_content> :addrKey <#else> null </#if>                		/* 우편번호                   */
                 , CNTC_NUM_ENC          = <#if cntcNumEnc?has_content> SCC_CRYPTO.ENC_FUN(:cntcNumEnc) <#else> null </#if>       /* 연락_번호_암호화           */
                 , FILE_ID               = <#if fileId?has_content> :fileId <#else> null </#if>                 /* 첨부파일 ID                */
                 , UUSER                 = :loginSabun             /* 수정자 사번                */
                 , UDATE                 = SYSDATE                 /* 수정일시                   */
            WHERE  REQUEST_UPJANG_CD = :requestUpjangCd       /* 신청 업장코드 */
              AND  EVNT_ID           = :evntId                /* 이벤트ID      */
        ]]>
    </statement>

    <!-- 이벤트 진행 정보(을)를 수정한다. -->
    <statement name="updatePrcdr">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.updatePrcdr */
    <![CDATA[
            UPDATE FSE_EVNT_PRCDR
               SET PROGRESS_PRCDR_CD        = <#if progressPrcdrCd?has_content> :progressPrcdrCd <#else> null </#if>          /* 진행_절차_코드             */
                 , PROGRESS_PRCDR_CONTENTS  = <#if progressPrcdrContents?has_content> :progressPrcdrContents <#else> null </#if>    /* 진행_절차_내용             */
                 , UUSER                    = :loginSabun               /* 수정자 사번                */
                 , UDATE                    = SYSDATE                   /* 수정일시                   */
            WHERE  REQUEST_UPJANG_CD = :requestUpjangCd       /* 신청 업장코드  */
              AND  EVNT_ID           = :evntId                /* 이벤트ID       */
              AND  SEQ               = :seq                   /* 순번           */
        ]]>
    </statement>

    <!-- 이벤트 기기 정보(을)를 수정한다. -->
    <statement name="updateInforeg">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.updateInforeg */
    <![CDATA[
            UPDATE FSE_EVNT_INFOREG
               SET LCLASS_CD             = :lclassCd               /* 대분류                     */
                 , MCLASS_CD             = :mclassCd               /* 중분류                     */
                 , SCLASS_CD             = :sclassCd               /* 소분류                     */
                 , REQUEST_QUANTITY      = :requestQuantity        /* 신청_수량                  */
                 , USE_DATE_SDATE        = :useDateSdate           /* 사용일_시작일              */
                 , USE_DATE_EDATE        = :useDateEdate           /* 사용일_종료일              */
                 , RMA_DATE              = :rmaDate                /* 반납_일자                  */
                 , UUSER                 = :loginSabun             /* 수정자 사번                */
                 , UDATE                 = SYSDATE                 /* 수정일시                   */
            WHERE  REQUEST_UPJANG_CD = :requestUpjangCd       /* 신청 업장코드  */
              AND  EVNT_ID           = :evntId                /* 이벤트ID       */
              AND  SEQ               = :seq                   /* 순번           */
        ]]>
    </statement>

    <!-- 이벤트 업장 기기 정보(을)를 수정한다. -->
    <statement name="updateUpjangutensil">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.updateUpjangutensil */
    <![CDATA[
            UPDATE FSE_EVNT_UPJANGUTENSIL
               SET UTENSILNM             = :utensilnm              /* 기기명                     */
                 , VENDORNM              = :vendornm               /* 업체정보                   */
                 , REQUEST_DATE          = :requestDate            /* 소분류                     */
                 , REMARK                = :remark                 /* 신청일자                   */
                 , UUSER                 = :loginSabun             /* 수정자 사번                */
                 , UDATE                 = SYSDATE                 /* 수정일시                   */
            WHERE  EVNT_ID           = :evntId                /* 이벤트ID       */
              AND  SEQ               = :seq                   /* 순번           */
        ]]>
    </statement>

    <!-- 이벤트 신청 정보(을)를 삭제한다. -->
    <statement name="deleteForm">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.deleteForm */
    <![CDATA[
            DELETE FROM  FSE_EVNT_REQUEST
             WHERE  REQUEST_UPJANG_CD = :requestUpjangCd       /* 신청 업장코드  */
               AND  EVNT_ID           = :evntId                /* 이벤트ID       */
        ]]>
    </statement>

    <!-- 이벤트 진행 정보(을)를 삭제한다. -->
    <statement name="deletePrcdr">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.deletePrcdr */
    <![CDATA[
            DELETE FROM  FSE_EVNT_PRCDR
             WHERE  REQUEST_UPJANG_CD = :requestUpjangCd       /* 신청 업장코드  */
               AND  EVNT_ID           = :evntId                /* 이벤트ID       */
               AND  SEQ               = :seq                   /* 순번           */
        ]]>
    </statement>

    <!-- 이벤트 기기 정보(을)를 삭제한다. -->
    <statement name="deleteInforeg">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.deleteInforeg */
    <![CDATA[
            DELETE FROM  FSE_EVNT_INFOREG
             WHERE  REQUEST_UPJANG_CD = :requestUpjangCd       /* 신청 업장코드  */
               AND  EVNT_ID           = :evntId                /* 이벤트ID       */
               AND  SEQ               = :seq                   /* 순번           */
        ]]>
    </statement>

    <!-- 이벤트 업장 기기 정보(을)를 삭제한다. -->
    <statement name="deleteUpjangutensil">
    /*+ com.hwfs.fs.fse.dao.EventProcessInfoMgntDAO.deleteUpjangutensil */
    <![CDATA[
            DELETE FROM  FSE_EVNT_UPJANGUTENSIL
             WHERE  REQUEST_UPJANG_CD = :requestUpjangCd       /* 신청 업장코드  */
               AND  EVNT_ID           = :evntId                /* 이벤트ID       */
               AND  SEQ               = :seq                   /* 순번           */
        ]]>
    </statement>

</hqml>
