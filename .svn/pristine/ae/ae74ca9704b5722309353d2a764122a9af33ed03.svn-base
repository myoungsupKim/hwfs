<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.5">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="file2Dataset" classname="file2Dataset" inheritanceid="" position="absolute 0 0 651 499" titletext="이미지를 Blob으로 처리하는 예" onload="form_onload">
    <Layouts>
      <Layout>
        <Button id="Button01" taborder="2" text="dataset ---&gt; file" position="absolute 493 195 640 224" onclick="Button01_onclick"/>
        <Grid id="grd_list" taborder="6" position="absolute 1 38 485 315" binddataset="ds_list" oncellclick="grd_list_oncellclick">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="339"/>
                <Column size="40"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="blob"/>
                <Cell col="1" text="추가"/>
              </Band>
              <Band id="body">
                <Cell displaytype="image" text="bind:blob"/>
                <Cell col="1" displaytype="button" edittype="button" text="추가"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Div id="div_cmnBtn" anchor="left top right" taborder="7" tabstop="false" url="cmn::CmnBtn.xfdl" text="Div00" scrollbars="none" position="absolute 0 0 647 30"/>
        <ImageViewer id="ImageViewer00" taborder="8" stretch="fixaspectratio" class="img_WF_NoImage" position="absolute 493 40 631 167" anchor="top right"/>
        <Static id="Static00" text="- 이미지 파일을 파일첨부 형태가 아닌 BLOB으로 처리하는 예" position="absolute 5 325 489 354" style="linespace:4;"/>
        <Static id="Static01" text="- 단순한 이미지를 업무 데이터와 함께 BLOB으로 처리할 수 있다.&#13;&#10;- 데이터셋에 BLOB 칼럼을 추가하고 이미지와 연결시킨다.&#13;&#10;- 데이터셋의 BLOB데이터는 업무 데이터와 함께 서버로 전송되고, 서버에서는 byte[] 데이터를 blob 칼럼에 저장한다.&#13;&#10;- 업무 테이블에 blob형 칼럼을 정의한다." position="absolute 4 333 488 450" style="linespace:4;"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_list" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep">
        <ColumnInfo>
          <Column id="blob" type="BLOB" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_cmnAuth" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="srcYn" type="STRING" size="256"/>
          <Column id="insYn" type="STRING" size="256"/>
          <Column id="delYn" type="STRING" size="256"/>
          <Column id="savYn" type="STRING" size="256"/>
          <Column id="prtYn" type="STRING" size="256"/>
          <Column id="exlYn" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="srcYn">Y</Col>
            <Col id="insYn">Y</Col>
            <Col id="delYn">1</Col>
            <Col id="savYn">1</Col>
            <Col id="prtYn">1</Col>
            <Col id="exlYn">1</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item1" compid="ImageViewer00" propid="image" datasetid="ds_list" columnid="blob"/>
    </Bind>
    <Script type="xscript4.0"><![CDATA[/*
  화 면 명 : GuideImageBlob
  파 일 명 : GuideImageBlob.xfdl
  기    능 : Image 파일을 blob으로 처리하는 샘플 

    수정일    수정자                  수정내용
  ----------   -------  --------------------------------------------------
  2015.03.10   kksoo     최초 생성
*/

/************************************************************************************************
 * 공통 라이브러리 INCLUDE 영역 (필수)
************************************************************************************************/
include "lib::lib_com.xjs";

var ls_RealFilePath = system.convertRealPath("%MYDOCUMENT%\\tobesoft.jpg"); 

/************************************************************************************************
 * FORM 변수 선언 영역 (필수)
************************************************************************************************/
var fv_processCnt = 0;	//처리건수

/************************************************************************************************
 * FORM EVENT 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : Form Load (필수)
 *---------------------------------------------------------------------------------------------*/
function form_onload(obj:Form, e:LoadEventInfo)
{	
	// Form Load 시 공통 기능 처리(obj:Form, bCreateEvent:이벤트 생성 여부)
	gfn_formOnLoad(this);
	
	// 초기값 셋팅
	fn_init();
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 초기값 셋팅
 *---------------------------------------------------------------------------------------------*/
function fn_init()
{
	v_ds_check = "ds_list";
	
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 화면 닫기 전 변경 유무 체크 (필수-Frame에서 창 닫힐때 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_close()
{	
	// v_ds_check 사용시 변경사항 체크
	if(gfn_length(v_ds_check) != 0)
	{	
		// v_ds_check 설정기준 변경사항 체크
		if (gfn_isDataChange() == true) 
		{		
			// 변경된 데이터가 있습니다. 현재 화면을 닫겠습니까?
			if (!gfn_confirm("confirm.before.movepage")) return false;
		}
	}
    
	// 조회프로그램에도 Return true; 기술해 주세요!
	return true;
}


/************************************************************************************************
 * 공통기능 FUNCTION 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 조회 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_search()
{
	//기존 조회와 동일하므로 생략
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 신규 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_insert()
{	
	var nRow = ds_list.addRow();
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 삭제 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_delete()
{
	//기존 삭제와 동일하므로 생략
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 저장 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_save()
{
// 	// v_ds_check 미사용시 변경사항 체크
 	if (gfn_dsIsUpdated(ds_list) == false) 
 	{
 		gfn_alert("msg.save.nochange");	// 변경된 내역이 없습니다.
 		return;
 	}
	
	// 저장시 Validation Check	
	//if (gfn_validCheck(grd_list, ds_listValid) == false)	return;
	
    var strSvcID    = "save";
    var strURL      = "guide/sample/saveBlobSample.xdo";
    var strInDs     = "ds_input=ds_list:U";
    var strOutDs    = "";
    var strArg      = "";
    var strCallback = "fn_callBack";
    var bAsync      = true;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 도움말 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_help()
{
	
}

/************************************************************************************************
 * TRANSACTION 및 CallBack 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 트랜잭션 콜백 함수 (필수)
 *---------------------------------------------------------------------------------------------*/
function fn_callBack(strSvcID, nErrorCode, strErrorMsg)
{
	// 에러시 gfn_callBack에서 메시지 제공, 화면별 특정 에러 발생시에만 사용하세요.
	if (nErrorCode < 0) 
	{
		return;
	}
	
    switch(strSvcID)
    {
		// 코드분류 조회
        case "search" :
            //trace(ds_list.saveXML());
            break;
        
        // 저장
        case "save" :
			//trace("처리건수 : " + fv_processCnt);
			gfn_alert("msg.save.success");	// 저장 되었습니다.
            break;  
        
        //삭제
        case "delete" :
			//trace("처리건수 : " + fv_processCnt);
			gfn_alert("msg.delete.success"); //삭제 되었습니다.
			break;
    }
}

/************************************************************************************************
 * 사용자 FUNCTION 영역 (필수)
************************************************************************************************/

function attachImage(nRow)
{
	var fd  = new FileDialog;
	
	var vFile = fd.open("FileOpen", FileDialog.LOAD);
	
	var rtn = vFile.open(VirtualFile.openRead | VirtualFile.openBinary);
	vFile.seek(0,VirtualFile.seekBegin);
	var bData = new Buffer(vFile.read(vFile.getFileSize()));
	
	ds_list.setColumn(nRow,"blob",bData.data);

	vFile.close(); 	
	
}

function Button01_onclick(obj:Button,  e:ClickEventInfo)
{
	var a = ds_list.getColumn(0 ,"blob");
	
	var bufObj = new Buffer(a);
	trace(bufObj.data);
	var vfile = new VirtualFile(ls_RealFilePath , VirtualFile.openWrite | VirtualFile.openBinary);
	var rtn = vfile.write(bufObj.data);	
	trace(rtn);
	vfile.close();	
}



function grd_list_oncellclick(obj:Grid, e:GridClickEventInfo)
{
	if (e.col <> 1) return;
	attachImage (e.row);
}
]]></Script>
  </Form>
</FDL>
