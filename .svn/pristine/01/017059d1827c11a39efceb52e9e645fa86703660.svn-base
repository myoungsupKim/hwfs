<?xml version="1.0" encoding="euc-kr"?>
<query>
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
<![CDATA[
  SELECT
-- 메인조회 [ DS_body ]
       A.MENU_DATE AS FDAY      --메뉴일자
      ,A.MEAL AS SGBN       --
      ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0023' AND CODE = A.MEAL) SGBN_NM
      ,A.CORNER AS CGBN_CD, A.CORNER_DESC AS CGBN_NM
      ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0022' AND CODE = A.CORNER) CGBN
--      ,A.PHF AS DUP_STA
--      ,DECODE(A.PHF,'Y','RED','') DUP_COLOR
      ,A.PHF
      ,'' DUP_STA
      ,'' DUP_COLOR
      ,ROW_NUMBER() OVER(PARTITION BY MENU_DATE, MEAL, CORNER ORDER BY MEAL, CORNER, RECIPE_SEQ, CUISINE_TYPE ASC) SSEQ
      ,A.RECIPE_CD AS SD_CD
      ,A.RECIPE_NAME AS SD_NM
      ,NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0) SD_WON
      ,A.MEAL_UPRICE AS MEAL_PRICE
      ,CASE WHEN A.CAFE_YN = 'Y' THEN DECODE(A.SALE_PRICE2,0,0,ROUND(NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0)/A.SALE_PRICE2*100,1))||'%'
                                 ELSE DECODE(A.SALE_PRICE, 0,0,ROUND(NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0)/A.SALE_PRICE *100,1))||'%'
       END AS RECIPE_COST_RATE
      ,A.SALE_PRICE
      ,A.SALE_PRICE2
      ,A.EXPECT_SALE_QTY
      ,A.EXPECT_MEAL_QTY
      ,A.MAIN_ITEM_CODE1
      ,A.CUISINE_TYPE
      ,NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0) * A.EXPECT_SALE_QTY AS EXPECT_WON_AMT
      ,A.SALE_PRICE2 * A.EXPECT_SALE_QTY AS EXPECT_SALE_AMT
  FROM
       (
        SELECT A.UPJANG, A.MENU_DATE, A.MEAL, A.CORNER, D.CORNER_DESC,
               B.RECIPE_CD, B.RECIPE_NAME, B.RECIPE_SEQ, B.CUISINE_TYPE, C.ITEM_CODE, C.NEED_QTY,
               NVL(D.MEAL_UPRICE,0) MEAL_UPRICE, PHF, A.SALE_PRICE, B.MAIN_ITEM_CODE1, A.EXPECT_MEAL_QTY,
               B.SALE_PRICE AS SALE_PRICE2, B.EXPECT_SALE_QTY, E.CATER_YN, E.CAFE_YN
          FROM
               FSM_REAL_MENU_MST A
              ,FSM_REAL_RECIPE_MST B
              ,FSM_REAL_RECIPE_ITEM C
              ,FSA_HALL_DTL D
              ,FSA_HALL_MST E
         WHERE A.UPJANG = B.UPJANG
           AND A.MENU_CD = B.MENU_CD
           AND B.UPJANG = C.UPJANG
           AND B.MENU_CD = C.MENU_CD
           AND B.RECIPE_CD = C.RECIPE_CD
           AND A.UPJANG = E.UPJANG
           AND A.HALL_CD = E.HALL_CD
           AND A.UPJANG = D.UPJANG
           AND A.HALL_CD = D.HALL_CD
           AND A.MEAL = D.MEAL
           AND A.CORNER = D.CORNER
           AND A.MEAL IS NOT NULL
           AND A.CORNER IS NOT NULL
           AND A.UPJANG = #UPJANG# -- [업장코드]
           AND A.HALL_CD = #HALL_CD# -- [식당코드]
           AND A.MENU_DATE = TO_CHAR(TO_DATE(#MENU_SDATE#,'YYYYMMDD')+0,'YYYYMMDD')
       ) A,
       (
        SELECT /*+ ORDERED USE_NL(B E F C A D) INDEX(C)*/
              A.ITEM_CODE,
              D.ITEM_NAME,
              D.ITEM_SIZE,
              D.PO_UOM,
              A.CUSTCD,
              DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) AS ITEM_PRICE,
              KG_CONVERT_RATE,
              ROUND((DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) )/KG_CONVERT_RATE/1000,2) AS G_ITEM_PRICE,
              F.UPJANG
         FROM HLDC_ST_UPJANG B,
              HLDC_PO_SUBINVENTORY E,
              HLDC_PO_UPJANG_CENTER F,
              HLDC_PO_CONTRACT_F A,
              HLDC_PO_ITEM_MST D
        WHERE A.ITEM_CODE = D.ITEM_CODE
          AND A.CENTER_CODE = F.CENTER_CODE
          AND A.USE_YN = 'Y'
          AND A.CONTRACT_PRICE > 0
          AND A.UPJANG = B.AP_UNITPRICE_UPJANG
          AND B.UPJANG = E.UPJANG
          AND B.AP_UNITPRICE_UPJANG = F.UPJANG
          AND B.UPJANG = #UPJANG#  --[업장코드]
          AND E.SUBINV_CODE = #SUBINV_CODE#  --[창고코드] FSM_REAL_MENU_MST.SUBINV_CODE 사용(우선적용), FSA_HALL_MST.SUBINV_CODE 사용
          AND TO_CHAR(TO_DATE(#MENU_SDATE#,'YYYYMMDD')+0,'YYYYMMDD') BETWEEN A.CONTRACT_START AND NVL(A.CONTRACT_END,'99999999')  --[메뉴일자]
        ) B
 WHERE A.ITEM_CODE = B.ITEM_CODE(+)
   AND A.UPJANG = B.UPJANG(+)
 GROUP BY A.MENU_DATE
         ,A.RECIPE_SEQ
         ,A.CUISINE_TYPE
         ,A.MEAL
         ,A.CORNER
         ,A.CORNER_DESC
         ,A.RECIPE_CD
         ,A.RECIPE_NAME
         ,A.MEAL_UPRICE
         ,A.PHF
         ,A.SALE_PRICE
         ,A.SALE_PRICE2
         ,A.EXPECT_MEAL_QTY
         ,A.EXPECT_SALE_QTY
         ,A.CAFE_YN
         ,A.MAIN_ITEM_CODE1
UNION ALL
  SELECT
-- 메인조회 [ DS_body ]
       A.MENU_DATE AS FDAY      --메뉴일자
      ,A.MEAL AS SGBN       --
      ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0023' AND CODE = A.MEAL) SGBN_NM
      ,A.CORNER AS CGBN_CD, A.CORNER_DESC AS CGBN_NM
      ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0022' AND CODE = A.CORNER) CGBN
--      ,A.PHF AS DUP_STA
--      ,DECODE(A.PHF,'Y','RED','') DUP_COLOR
      ,A.PHF
      ,'' DUP_STA
      ,'' DUP_COLOR
      ,ROW_NUMBER() OVER(PARTITION BY MENU_DATE, MEAL, CORNER ORDER BY MEAL, CORNER, RECIPE_SEQ, CUISINE_TYPE ASC) SSEQ
      ,A.RECIPE_CD AS SD_CD
      ,A.RECIPE_NAME AS SD_NM
      ,NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0) SD_WON
      ,A.MEAL_UPRICE AS MEAL_PRICE
      ,CASE WHEN A.CAFE_YN = 'Y' THEN DECODE(A.SALE_PRICE2,0,0,ROUND(NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0)/A.SALE_PRICE2*100,1))||'%'
                                 ELSE DECODE(A.SALE_PRICE, 0,0,ROUND(NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0)/A.SALE_PRICE *100,1))||'%'
       END AS RECIPE_COST_RATE
      ,A.SALE_PRICE
      ,A.SALE_PRICE2
      ,A.EXPECT_SALE_QTY
      ,A.EXPECT_MEAL_QTY
      ,A.MAIN_ITEM_CODE1
      ,A.CUISINE_TYPE
	  ,NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0) * A.EXPECT_SALE_QTY AS EXPECT_WON_AMT
      ,A.SALE_PRICE2 * A.EXPECT_SALE_QTY AS EXPECT_SALE_AMT
  FROM
       (
        SELECT A.UPJANG, A.MENU_DATE, A.MEAL, A.CORNER, D.CORNER_DESC,
               B.RECIPE_CD, B.RECIPE_NAME, B.RECIPE_SEQ, B.CUISINE_TYPE, C.ITEM_CODE, C.NEED_QTY,
               NVL(D.MEAL_UPRICE,0) MEAL_UPRICE, PHF, A.SALE_PRICE, B.MAIN_ITEM_CODE1, A.EXPECT_MEAL_QTY,
               B.SALE_PRICE AS SALE_PRICE2, B.EXPECT_SALE_QTY, E.CATER_YN, E.CAFE_YN
          FROM
               FSM_REAL_MENU_MST A
              ,FSM_REAL_RECIPE_MST B
              ,FSM_REAL_RECIPE_ITEM C
              ,FSA_HALL_DTL D
              ,FSA_HALL_MST E
         WHERE A.UPJANG = B.UPJANG
           AND A.MENU_CD = B.MENU_CD
           AND B.UPJANG = C.UPJANG
           AND B.MENU_CD = C.MENU_CD
           AND B.RECIPE_CD = C.RECIPE_CD
           AND A.UPJANG = E.UPJANG
           AND A.HALL_CD = E.HALL_CD
           AND A.UPJANG = D.UPJANG
           AND A.HALL_CD = D.HALL_CD
           AND A.MEAL = D.MEAL
           AND A.CORNER = D.CORNER
           AND A.MEAL IS NOT NULL
           AND A.CORNER IS NOT NULL
           AND A.UPJANG = #UPJANG# -- [업장코드]
           AND A.HALL_CD = #HALL_CD# -- [식당코드]
           AND A.MENU_DATE = TO_CHAR(TO_DATE(#MENU_SDATE#,'YYYYMMDD')+1,'YYYYMMDD')
       ) A,
       (
        SELECT /*+ ORDERED USE_NL(B E F C A D) INDEX(C)*/
              A.ITEM_CODE,
              D.ITEM_NAME,
              D.ITEM_SIZE,
              D.PO_UOM,
              A.CUSTCD,
              DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) AS ITEM_PRICE,
              KG_CONVERT_RATE,
              ROUND((DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) )/KG_CONVERT_RATE/1000,2) AS G_ITEM_PRICE,
              F.UPJANG
         FROM HLDC_ST_UPJANG B,
              HLDC_PO_SUBINVENTORY E,
              HLDC_PO_UPJANG_CENTER F,
              HLDC_PO_CONTRACT_F A,
              HLDC_PO_ITEM_MST D
        WHERE A.ITEM_CODE = D.ITEM_CODE
          AND A.CENTER_CODE = F.CENTER_CODE
          AND A.USE_YN = 'Y'
          AND A.CONTRACT_PRICE > 0
          AND A.UPJANG = B.AP_UNITPRICE_UPJANG
          AND B.UPJANG = E.UPJANG
          AND B.AP_UNITPRICE_UPJANG = F.UPJANG
          AND B.UPJANG = #UPJANG#  --[업장코드]
          AND E.SUBINV_CODE = #SUBINV_CODE#  --[창고코드] FSM_REAL_MENU_MST.SUBINV_CODE 사용(우선적용), FSA_HALL_MST.SUBINV_CODE 사용
          AND TO_CHAR(TO_DATE(#MENU_SDATE#,'YYYYMMDD')+1,'YYYYMMDD') BETWEEN A.CONTRACT_START AND NVL(A.CONTRACT_END,'99999999')  --[메뉴일자]
        ) B
 WHERE A.ITEM_CODE = B.ITEM_CODE(+)
   AND A.UPJANG = B.UPJANG(+)
 GROUP BY A.MENU_DATE
         ,A.RECIPE_SEQ
         ,A.CUISINE_TYPE
         ,A.MEAL
         ,A.CORNER
         ,A.CORNER_DESC
         ,A.RECIPE_CD
         ,A.RECIPE_NAME
         ,A.MEAL_UPRICE
         ,A.PHF
         ,A.SALE_PRICE
         ,A.SALE_PRICE2
         ,A.EXPECT_MEAL_QTY
         ,A.EXPECT_SALE_QTY
         ,A.CAFE_YN
         ,A.MAIN_ITEM_CODE1
 UNION ALL
  SELECT
-- 메인조회 [ DS_body ]
       A.MENU_DATE AS FDAY      --메뉴일자
      ,A.MEAL AS SGBN       --
      ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0023' AND CODE = A.MEAL) SGBN_NM
      ,A.CORNER AS CGBN_CD, A.CORNER_DESC AS CGBN_NM
      ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0022' AND CODE = A.CORNER) CGBN
--      ,A.PHF AS DUP_STA
--      ,DECODE(A.PHF,'Y','RED','') DUP_COLOR
      ,A.PHF
      ,'' DUP_STA
      ,'' DUP_COLOR
      ,ROW_NUMBER() OVER(PARTITION BY MENU_DATE, MEAL, CORNER ORDER BY MEAL, CORNER, RECIPE_SEQ, CUISINE_TYPE ASC) SSEQ
      ,A.RECIPE_CD AS SD_CD
      ,A.RECIPE_NAME AS SD_NM
      ,NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0) SD_WON
      ,A.MEAL_UPRICE AS MEAL_PRICE
      ,CASE WHEN A.CAFE_YN = 'Y' THEN DECODE(A.SALE_PRICE2,0,0,ROUND(NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0)/A.SALE_PRICE2*100,1))||'%'
                                 ELSE DECODE(A.SALE_PRICE, 0,0,ROUND(NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0)/A.SALE_PRICE *100,1))||'%'
       END AS RECIPE_COST_RATE
      ,A.SALE_PRICE
      ,A.SALE_PRICE2
      ,A.EXPECT_SALE_QTY
      ,A.EXPECT_MEAL_QTY
      ,A.MAIN_ITEM_CODE1
      ,A.CUISINE_TYPE
	  ,NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0) * A.EXPECT_SALE_QTY AS EXPECT_WON_AMT
      ,A.SALE_PRICE2 * A.EXPECT_SALE_QTY AS EXPECT_SALE_AMT
  FROM
       (
        SELECT A.UPJANG, A.MENU_DATE, A.MEAL, A.CORNER, D.CORNER_DESC,
               B.RECIPE_CD, B.RECIPE_NAME, B.RECIPE_SEQ, B.CUISINE_TYPE, C.ITEM_CODE, C.NEED_QTY,
               NVL(D.MEAL_UPRICE,0) MEAL_UPRICE, PHF, A.SALE_PRICE, B.MAIN_ITEM_CODE1, A.EXPECT_MEAL_QTY,
               B.SALE_PRICE AS SALE_PRICE2, B.EXPECT_SALE_QTY, E.CATER_YN, E.CAFE_YN
          FROM
               FSM_REAL_MENU_MST A
              ,FSM_REAL_RECIPE_MST B
              ,FSM_REAL_RECIPE_ITEM C
              ,FSA_HALL_DTL D
              ,FSA_HALL_MST E
         WHERE A.UPJANG = B.UPJANG
           AND A.MENU_CD = B.MENU_CD
           AND B.UPJANG = C.UPJANG
           AND B.MENU_CD = C.MENU_CD
           AND B.RECIPE_CD = C.RECIPE_CD
           AND A.UPJANG = E.UPJANG
           AND A.HALL_CD = E.HALL_CD
           AND A.UPJANG = D.UPJANG
           AND A.HALL_CD = D.HALL_CD
           AND A.MEAL = D.MEAL
           AND A.CORNER = D.CORNER
           AND A.MEAL IS NOT NULL
           AND A.CORNER IS NOT NULL
           AND A.UPJANG = #UPJANG# -- [업장코드]
           AND A.HALL_CD = #HALL_CD# -- [식당코드]
           AND A.MENU_DATE = TO_CHAR(TO_DATE(#MENU_SDATE#,'YYYYMMDD')+2,'YYYYMMDD')
       ) A,
       (
        SELECT /*+ ORDERED USE_NL(B E F C A D) INDEX(C)*/
              A.ITEM_CODE,
              D.ITEM_NAME,
              D.ITEM_SIZE,
              D.PO_UOM,
              A.CUSTCD,
              DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) AS ITEM_PRICE,
              KG_CONVERT_RATE,
              ROUND((DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) )/KG_CONVERT_RATE/1000,2) AS G_ITEM_PRICE,
              F.UPJANG
         FROM HLDC_ST_UPJANG B,
              HLDC_PO_SUBINVENTORY E,
              HLDC_PO_UPJANG_CENTER F,
              HLDC_PO_CONTRACT_F A,
              HLDC_PO_ITEM_MST D
        WHERE A.ITEM_CODE = D.ITEM_CODE
          AND A.CENTER_CODE = F.CENTER_CODE
          AND A.USE_YN = 'Y'
          AND A.CONTRACT_PRICE > 0
          AND A.UPJANG = B.AP_UNITPRICE_UPJANG
          AND B.UPJANG = E.UPJANG
          AND B.AP_UNITPRICE_UPJANG = F.UPJANG
          AND B.UPJANG = #UPJANG#  --[업장코드]
          AND E.SUBINV_CODE = #SUBINV_CODE#  --[창고코드] FSM_REAL_MENU_MST.SUBINV_CODE 사용(우선적용), FSA_HALL_MST.SUBINV_CODE 사용
          AND TO_CHAR(TO_DATE(#MENU_SDATE#,'YYYYMMDD')+2,'YYYYMMDD') BETWEEN A.CONTRACT_START AND NVL(A.CONTRACT_END,'99999999')  --[메뉴일자]
        ) B
 WHERE A.ITEM_CODE = B.ITEM_CODE(+)
   AND A.UPJANG = B.UPJANG(+)
 GROUP BY A.MENU_DATE
         ,A.RECIPE_SEQ
         ,A.CUISINE_TYPE
         ,A.MEAL
         ,A.CORNER
         ,A.CORNER_DESC
         ,A.RECIPE_CD
         ,A.RECIPE_NAME
         ,A.MEAL_UPRICE
         ,A.PHF
         ,A.SALE_PRICE
         ,A.SALE_PRICE2
         ,A.EXPECT_MEAL_QTY
         ,A.EXPECT_SALE_QTY
         ,A.CAFE_YN
         ,A.MAIN_ITEM_CODE1
UNION ALL
  SELECT
-- 메인조회 [ DS_body ]
       A.MENU_DATE AS FDAY      --메뉴일자
      ,A.MEAL AS SGBN       --
      ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0023' AND CODE = A.MEAL) SGBN_NM
      ,A.CORNER AS CGBN_CD, A.CORNER_DESC AS CGBN_NM
      ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0022' AND CODE = A.CORNER) CGBN
--      ,A.PHF AS DUP_STA
--      ,DECODE(A.PHF,'Y','RED','') DUP_COLOR
      ,A.PHF
      ,'' DUP_STA
      ,'' DUP_COLOR
      ,ROW_NUMBER() OVER(PARTITION BY MENU_DATE, MEAL, CORNER ORDER BY MEAL, CORNER, RECIPE_SEQ, CUISINE_TYPE ASC) SSEQ
      ,A.RECIPE_CD AS SD_CD
      ,A.RECIPE_NAME AS SD_NM
      ,NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0) SD_WON
      ,A.MEAL_UPRICE AS MEAL_PRICE
      ,CASE WHEN A.CAFE_YN = 'Y' THEN DECODE(A.SALE_PRICE2,0,0,ROUND(NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0)/A.SALE_PRICE2*100,1))||'%'
                                 ELSE DECODE(A.SALE_PRICE, 0,0,ROUND(NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0)/A.SALE_PRICE *100,1))||'%'
       END AS RECIPE_COST_RATE
      ,A.SALE_PRICE
      ,A.SALE_PRICE2
      ,A.EXPECT_SALE_QTY
      ,A.EXPECT_MEAL_QTY
      ,A.MAIN_ITEM_CODE1
      ,A.CUISINE_TYPE
	  ,NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0) * A.EXPECT_SALE_QTY AS EXPECT_WON_AMT
      ,A.SALE_PRICE2 * A.EXPECT_SALE_QTY AS EXPECT_SALE_AMT
  FROM
       (
        SELECT A.UPJANG, A.MENU_DATE, A.MEAL, A.CORNER, D.CORNER_DESC,
               B.RECIPE_CD, B.RECIPE_NAME, B.RECIPE_SEQ, B.CUISINE_TYPE, C.ITEM_CODE, C.NEED_QTY,
               NVL(D.MEAL_UPRICE,0) MEAL_UPRICE, PHF, A.SALE_PRICE, B.MAIN_ITEM_CODE1, A.EXPECT_MEAL_QTY,
               B.SALE_PRICE AS SALE_PRICE2, B.EXPECT_SALE_QTY, E.CATER_YN, E.CAFE_YN
          FROM
               FSM_REAL_MENU_MST A
              ,FSM_REAL_RECIPE_MST B
              ,FSM_REAL_RECIPE_ITEM C
              ,FSA_HALL_DTL D
              ,FSA_HALL_MST E
         WHERE A.UPJANG = B.UPJANG
           AND A.MENU_CD = B.MENU_CD
           AND B.UPJANG = C.UPJANG
           AND B.MENU_CD = C.MENU_CD
           AND B.RECIPE_CD = C.RECIPE_CD
           AND A.UPJANG = E.UPJANG
           AND A.HALL_CD = E.HALL_CD
           AND A.UPJANG = D.UPJANG
           AND A.HALL_CD = D.HALL_CD
           AND A.MEAL = D.MEAL
           AND A.CORNER = D.CORNER
           AND A.MEAL IS NOT NULL
           AND A.CORNER IS NOT NULL
           AND A.UPJANG = #UPJANG# -- [업장코드]
           AND A.HALL_CD = #HALL_CD# -- [식당코드]
           AND A.MENU_DATE = TO_CHAR(TO_DATE(#MENU_SDATE#,'YYYYMMDD')+3,'YYYYMMDD')
       ) A,
       (
        SELECT /*+ ORDERED USE_NL(B E F C A D) INDEX(C)*/
              A.ITEM_CODE,
              D.ITEM_NAME,
              D.ITEM_SIZE,
              D.PO_UOM,
              A.CUSTCD,
              DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) AS ITEM_PRICE,
              KG_CONVERT_RATE,
              ROUND((DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) )/KG_CONVERT_RATE/1000,2) AS G_ITEM_PRICE,
              F.UPJANG
         FROM HLDC_ST_UPJANG B,
              HLDC_PO_SUBINVENTORY E,
              HLDC_PO_UPJANG_CENTER F,
              HLDC_PO_CONTRACT_F A,
              HLDC_PO_ITEM_MST D
        WHERE A.ITEM_CODE = D.ITEM_CODE
          AND A.CENTER_CODE = F.CENTER_CODE
          AND A.USE_YN = 'Y'
          AND A.CONTRACT_PRICE > 0
          AND A.UPJANG = B.AP_UNITPRICE_UPJANG
          AND B.UPJANG = E.UPJANG
          AND B.AP_UNITPRICE_UPJANG = F.UPJANG
          AND B.UPJANG = #UPJANG#  --[업장코드]
          AND E.SUBINV_CODE = #SUBINV_CODE#  --[창고코드] FSM_REAL_MENU_MST.SUBINV_CODE 사용(우선적용), FSA_HALL_MST.SUBINV_CODE 사용
          AND TO_CHAR(TO_DATE(#MENU_SDATE#,'YYYYMMDD')+3,'YYYYMMDD') BETWEEN A.CONTRACT_START AND NVL(A.CONTRACT_END,'99999999')  --[메뉴일자]
        ) B
 WHERE A.ITEM_CODE = B.ITEM_CODE(+)
   AND A.UPJANG = B.UPJANG(+)
 GROUP BY A.MENU_DATE
         ,A.RECIPE_SEQ
         ,A.CUISINE_TYPE
         ,A.MEAL
         ,A.CORNER
         ,A.CORNER_DESC
         ,A.RECIPE_CD
         ,A.RECIPE_NAME
         ,A.MEAL_UPRICE
         ,A.PHF
         ,A.SALE_PRICE
         ,A.SALE_PRICE2
         ,A.EXPECT_MEAL_QTY
         ,A.EXPECT_SALE_QTY
         ,A.CAFE_YN
         ,A.MAIN_ITEM_CODE1
UNION ALL
  SELECT
-- 메인조회 [ DS_body ]
       A.MENU_DATE AS FDAY      --메뉴일자
      ,A.MEAL AS SGBN       --
      ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0023' AND CODE = A.MEAL) SGBN_NM
      ,A.CORNER AS CGBN_CD, A.CORNER_DESC AS CGBN_NM
      ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0022' AND CODE = A.CORNER) CGBN
--      ,A.PHF AS DUP_STA
--      ,DECODE(A.PHF,'Y','RED','') DUP_COLOR
      ,A.PHF
      ,'' DUP_STA
      ,'' DUP_COLOR
      ,ROW_NUMBER() OVER(PARTITION BY MENU_DATE, MEAL, CORNER ORDER BY MEAL, CORNER, RECIPE_SEQ, CUISINE_TYPE ASC) SSEQ
      ,A.RECIPE_CD AS SD_CD
      ,A.RECIPE_NAME AS SD_NM
      ,NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0) SD_WON
      ,A.MEAL_UPRICE AS MEAL_PRICE
      ,CASE WHEN A.CAFE_YN = 'Y' THEN DECODE(A.SALE_PRICE2,0,0,ROUND(NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0)/A.SALE_PRICE2*100,1))||'%'
                                 ELSE DECODE(A.SALE_PRICE, 0,0,ROUND(NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0)/A.SALE_PRICE *100,1))||'%'
       END AS RECIPE_COST_RATE
      ,A.SALE_PRICE
      ,A.SALE_PRICE2
      ,A.EXPECT_SALE_QTY
      ,A.EXPECT_MEAL_QTY
      ,A.MAIN_ITEM_CODE1
      ,A.CUISINE_TYPE
	  ,NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0) * A.EXPECT_SALE_QTY AS EXPECT_WON_AMT
      ,A.SALE_PRICE2 * A.EXPECT_SALE_QTY AS EXPECT_SALE_AMT
  FROM
       (
        SELECT A.UPJANG, A.MENU_DATE, A.MEAL, A.CORNER, D.CORNER_DESC,
               B.RECIPE_CD, B.RECIPE_NAME, B.RECIPE_SEQ, B.CUISINE_TYPE, C.ITEM_CODE, C.NEED_QTY,
               NVL(D.MEAL_UPRICE,0) MEAL_UPRICE, PHF, A.SALE_PRICE, B.MAIN_ITEM_CODE1, A.EXPECT_MEAL_QTY,
               B.SALE_PRICE AS SALE_PRICE2, B.EXPECT_SALE_QTY, E.CATER_YN, E.CAFE_YN
          FROM
               FSM_REAL_MENU_MST A
              ,FSM_REAL_RECIPE_MST B
              ,FSM_REAL_RECIPE_ITEM C
              ,FSA_HALL_DTL D
              ,FSA_HALL_MST E
         WHERE A.UPJANG = B.UPJANG
           AND A.MENU_CD = B.MENU_CD
           AND B.UPJANG = C.UPJANG
           AND B.MENU_CD = C.MENU_CD
           AND B.RECIPE_CD = C.RECIPE_CD
           AND A.UPJANG = E.UPJANG
           AND A.HALL_CD = E.HALL_CD
           AND A.UPJANG = D.UPJANG
           AND A.HALL_CD = D.HALL_CD
           AND A.MEAL = D.MEAL
           AND A.CORNER = D.CORNER
           AND A.MEAL IS NOT NULL
           AND A.CORNER IS NOT NULL
           AND A.UPJANG = #UPJANG# -- [업장코드]
           AND A.HALL_CD = #HALL_CD# -- [식당코드]
           AND A.MENU_DATE = TO_CHAR(TO_DATE(#MENU_SDATE#,'YYYYMMDD')+4,'YYYYMMDD')
       ) A,
       (
        SELECT /*+ ORDERED USE_NL(B E F C A D) INDEX(C)*/
              A.ITEM_CODE,
              D.ITEM_NAME,
              D.ITEM_SIZE,
              D.PO_UOM,
              A.CUSTCD,
              DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) AS ITEM_PRICE,
              KG_CONVERT_RATE,
              ROUND((DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) )/KG_CONVERT_RATE/1000,2) AS G_ITEM_PRICE,
              F.UPJANG
         FROM HLDC_ST_UPJANG B,
              HLDC_PO_SUBINVENTORY E,
              HLDC_PO_UPJANG_CENTER F,
              HLDC_PO_CONTRACT_F A,
              HLDC_PO_ITEM_MST D
        WHERE A.ITEM_CODE = D.ITEM_CODE
          AND A.CENTER_CODE = F.CENTER_CODE
          AND A.USE_YN = 'Y'
          AND A.CONTRACT_PRICE > 0
          AND A.UPJANG = B.AP_UNITPRICE_UPJANG
          AND B.UPJANG = E.UPJANG
          AND B.AP_UNITPRICE_UPJANG = F.UPJANG
          AND B.UPJANG = #UPJANG#  --[업장코드]
          AND E.SUBINV_CODE = #SUBINV_CODE#  --[창고코드] FSM_REAL_MENU_MST.SUBINV_CODE 사용(우선적용), FSA_HALL_MST.SUBINV_CODE 사용
          AND TO_CHAR(TO_DATE(#MENU_SDATE#,'YYYYMMDD')+4,'YYYYMMDD') BETWEEN A.CONTRACT_START AND NVL(A.CONTRACT_END,'99999999')  --[메뉴일자]
        ) B
 WHERE A.ITEM_CODE = B.ITEM_CODE(+)
   AND A.UPJANG = B.UPJANG(+)
 GROUP BY A.MENU_DATE
         ,A.RECIPE_SEQ
         ,A.CUISINE_TYPE
         ,A.MEAL
         ,A.CORNER
         ,A.CORNER_DESC
         ,A.RECIPE_CD
         ,A.RECIPE_NAME
         ,A.MEAL_UPRICE
         ,A.PHF
         ,A.SALE_PRICE
         ,A.SALE_PRICE2
         ,A.EXPECT_MEAL_QTY
         ,A.EXPECT_SALE_QTY
         ,A.CAFE_YN
         ,A.MAIN_ITEM_CODE1
UNION ALL
  SELECT
-- 메인조회 [ DS_body ]
       A.MENU_DATE AS FDAY      --메뉴일자
      ,A.MEAL AS SGBN       --
      ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0023' AND CODE = A.MEAL) SGBN_NM
      ,A.CORNER AS CGBN_CD, A.CORNER_DESC AS CGBN_NM
      ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0022' AND CODE = A.CORNER) CGBN
--      ,A.PHF AS DUP_STA
--      ,DECODE(A.PHF,'Y','RED','') DUP_COLOR
      ,A.PHF
      ,'' DUP_STA
      ,'' DUP_COLOR
      ,ROW_NUMBER() OVER(PARTITION BY MENU_DATE, MEAL, CORNER ORDER BY MEAL, CORNER, RECIPE_SEQ, CUISINE_TYPE ASC) SSEQ
      ,A.RECIPE_CD AS SD_CD
      ,A.RECIPE_NAME AS SD_NM
      ,NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0) SD_WON
      ,A.MEAL_UPRICE AS MEAL_PRICE
      ,CASE WHEN A.CAFE_YN = 'Y' THEN DECODE(A.SALE_PRICE2,0,0,ROUND(NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0)/A.SALE_PRICE2*100,1))||'%'
                                 ELSE DECODE(A.SALE_PRICE, 0,0,ROUND(NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0)/A.SALE_PRICE *100,1))||'%'
       END AS RECIPE_COST_RATE
      ,A.SALE_PRICE
      ,A.SALE_PRICE2
      ,A.EXPECT_SALE_QTY
      ,A.EXPECT_MEAL_QTY
      ,A.MAIN_ITEM_CODE1
      ,A.CUISINE_TYPE
	  ,NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0) * A.EXPECT_SALE_QTY AS EXPECT_WON_AMT
      ,A.SALE_PRICE2 * A.EXPECT_SALE_QTY AS EXPECT_SALE_AMT
  FROM
       (
        SELECT A.UPJANG, A.MENU_DATE, A.MEAL, A.CORNER, D.CORNER_DESC,
               B.RECIPE_CD, B.RECIPE_NAME, B.RECIPE_SEQ, B.CUISINE_TYPE, C.ITEM_CODE, C.NEED_QTY,
               NVL(D.MEAL_UPRICE,0) MEAL_UPRICE, PHF, A.SALE_PRICE, B.MAIN_ITEM_CODE1, A.EXPECT_MEAL_QTY,
               B.SALE_PRICE AS SALE_PRICE2, B.EXPECT_SALE_QTY, E.CATER_YN, E.CAFE_YN
          FROM
               FSM_REAL_MENU_MST A
              ,FSM_REAL_RECIPE_MST B
              ,FSM_REAL_RECIPE_ITEM C
              ,FSA_HALL_DTL D
              ,FSA_HALL_MST E
         WHERE A.UPJANG = B.UPJANG
           AND A.MENU_CD = B.MENU_CD
           AND B.UPJANG = C.UPJANG
           AND B.MENU_CD = C.MENU_CD
           AND B.RECIPE_CD = C.RECIPE_CD
           AND A.UPJANG = E.UPJANG
           AND A.HALL_CD = E.HALL_CD
           AND A.UPJANG = D.UPJANG
           AND A.HALL_CD = D.HALL_CD
           AND A.MEAL = D.MEAL
           AND A.CORNER = D.CORNER
           AND A.MEAL IS NOT NULL
           AND A.CORNER IS NOT NULL
           AND A.UPJANG = #UPJANG# -- [업장코드]
           AND A.HALL_CD = #HALL_CD# -- [식당코드]
           AND A.MENU_DATE = TO_CHAR(TO_DATE(#MENU_SDATE#,'YYYYMMDD')+5,'YYYYMMDD')
       ) A,
       (
        SELECT /*+ ORDERED USE_NL(B E F C A D) INDEX(C)*/
              A.ITEM_CODE,
              D.ITEM_NAME,
              D.ITEM_SIZE,
              D.PO_UOM,
              A.CUSTCD,
              DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) AS ITEM_PRICE,
              KG_CONVERT_RATE,
              ROUND((DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) )/KG_CONVERT_RATE/1000,2) AS G_ITEM_PRICE,
              F.UPJANG
         FROM HLDC_ST_UPJANG B,
              HLDC_PO_SUBINVENTORY E,
              HLDC_PO_UPJANG_CENTER F,
              HLDC_PO_CONTRACT_F A,
              HLDC_PO_ITEM_MST D
        WHERE A.ITEM_CODE = D.ITEM_CODE
          AND A.CENTER_CODE = F.CENTER_CODE
          AND A.USE_YN = 'Y'
          AND A.CONTRACT_PRICE > 0
          AND A.UPJANG = B.AP_UNITPRICE_UPJANG
          AND B.UPJANG = E.UPJANG
          AND B.AP_UNITPRICE_UPJANG = F.UPJANG
          AND B.UPJANG = #UPJANG#  --[업장코드]
          AND E.SUBINV_CODE = #SUBINV_CODE#  --[창고코드] FSM_REAL_MENU_MST.SUBINV_CODE 사용(우선적용), FSA_HALL_MST.SUBINV_CODE 사용
          AND TO_CHAR(TO_DATE(#MENU_SDATE#,'YYYYMMDD')+5,'YYYYMMDD') BETWEEN A.CONTRACT_START AND NVL(A.CONTRACT_END,'99999999')  --[메뉴일자]
        ) B
 WHERE A.ITEM_CODE = B.ITEM_CODE(+)
   AND A.UPJANG = B.UPJANG(+)
 GROUP BY A.MENU_DATE
         ,A.RECIPE_SEQ
         ,A.CUISINE_TYPE
         ,A.MEAL
         ,A.CORNER
         ,A.CORNER_DESC
         ,A.RECIPE_CD
         ,A.RECIPE_NAME
         ,A.MEAL_UPRICE
         ,A.PHF
         ,A.SALE_PRICE
         ,A.SALE_PRICE2
         ,A.EXPECT_MEAL_QTY
         ,A.EXPECT_SALE_QTY
         ,A.CAFE_YN
         ,A.MAIN_ITEM_CODE1
UNION ALL
  SELECT
-- 메인조회 [ DS_body ]
       A.MENU_DATE AS FDAY      --메뉴일자
      ,A.MEAL AS SGBN       --
      ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0023' AND CODE = A.MEAL) SGBN_NM
      ,A.CORNER AS CGBN_CD, A.CORNER_DESC AS CGBN_NM
      ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0022' AND CODE = A.CORNER) CGBN
--      ,A.PHF AS DUP_STA
--      ,DECODE(A.PHF,'Y','RED','') DUP_COLOR
      ,A.PHF
      ,'' DUP_STA
      ,'' DUP_COLOR
      ,ROW_NUMBER() OVER(PARTITION BY MENU_DATE, MEAL, CORNER ORDER BY MEAL, CORNER, RECIPE_SEQ, CUISINE_TYPE ASC) SSEQ
      ,A.RECIPE_CD AS SD_CD
      ,A.RECIPE_NAME AS SD_NM
      ,NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0) SD_WON
      ,A.MEAL_UPRICE AS MEAL_PRICE
      ,CASE WHEN A.CAFE_YN = 'Y' THEN DECODE(A.SALE_PRICE2,0,0,ROUND(NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0)/A.SALE_PRICE2*100,1))||'%'
                                 ELSE DECODE(A.SALE_PRICE, 0,0,ROUND(NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0)/A.SALE_PRICE *100,1))||'%'
       END AS RECIPE_COST_RATE
      ,A.SALE_PRICE
      ,A.SALE_PRICE2
      ,A.EXPECT_SALE_QTY
      ,A.EXPECT_MEAL_QTY
      ,A.MAIN_ITEM_CODE1
      ,A.CUISINE_TYPE
	  ,NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0) * A.EXPECT_SALE_QTY AS EXPECT_WON_AMT
      ,A.SALE_PRICE2 * A.EXPECT_SALE_QTY AS EXPECT_SALE_AMT
  FROM
       (
        SELECT A.UPJANG, A.MENU_DATE, A.MEAL, A.CORNER, D.CORNER_DESC,
               B.RECIPE_CD, B.RECIPE_NAME, B.RECIPE_SEQ, B.CUISINE_TYPE, C.ITEM_CODE, C.NEED_QTY,
               NVL(D.MEAL_UPRICE,0) MEAL_UPRICE, PHF, A.SALE_PRICE, B.MAIN_ITEM_CODE1, A.EXPECT_MEAL_QTY,
               B.SALE_PRICE AS SALE_PRICE2, B.EXPECT_SALE_QTY, E.CATER_YN, E.CAFE_YN
          FROM
               FSM_REAL_MENU_MST A
              ,FSM_REAL_RECIPE_MST B
              ,FSM_REAL_RECIPE_ITEM C
              ,FSA_HALL_DTL D
              ,FSA_HALL_MST E
         WHERE A.UPJANG = B.UPJANG
           AND A.MENU_CD = B.MENU_CD
           AND B.UPJANG = C.UPJANG
           AND B.MENU_CD = C.MENU_CD
           AND B.RECIPE_CD = C.RECIPE_CD
           AND A.UPJANG = E.UPJANG
           AND A.HALL_CD = E.HALL_CD
           AND A.UPJANG = D.UPJANG
           AND A.HALL_CD = D.HALL_CD
           AND A.MEAL = D.MEAL
           AND A.CORNER = D.CORNER
           AND A.MEAL IS NOT NULL
           AND A.CORNER IS NOT NULL
           AND A.UPJANG = #UPJANG# -- [업장코드]
           AND A.HALL_CD = #HALL_CD# -- [식당코드]
           AND A.MENU_DATE = TO_CHAR(TO_DATE(#MENU_SDATE#,'YYYYMMDD')+6,'YYYYMMDD')
       ) A,
       (
        SELECT /*+ ORDERED USE_NL(B E F C A D) INDEX(C)*/
              A.ITEM_CODE,
              D.ITEM_NAME,
              D.ITEM_SIZE,
              D.PO_UOM,
              A.CUSTCD,
              DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) AS ITEM_PRICE,
              KG_CONVERT_RATE,
              ROUND((DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) )/KG_CONVERT_RATE/1000,2) AS G_ITEM_PRICE,
              F.UPJANG
         FROM HLDC_ST_UPJANG B,
              HLDC_PO_SUBINVENTORY E,
              HLDC_PO_UPJANG_CENTER F,
              HLDC_PO_CONTRACT_F A,
              HLDC_PO_ITEM_MST D
        WHERE A.ITEM_CODE = D.ITEM_CODE
          AND A.CENTER_CODE = F.CENTER_CODE
          AND A.USE_YN = 'Y'
          AND A.CONTRACT_PRICE > 0
          AND A.UPJANG = B.AP_UNITPRICE_UPJANG
          AND B.UPJANG = E.UPJANG
          AND B.AP_UNITPRICE_UPJANG = F.UPJANG
          AND B.UPJANG = #UPJANG#  --[업장코드]
          AND E.SUBINV_CODE = #SUBINV_CODE#  --[창고코드] FSM_REAL_MENU_MST.SUBINV_CODE 사용(우선적용), FSA_HALL_MST.SUBINV_CODE 사용
          AND TO_CHAR(TO_DATE(#MENU_SDATE#,'YYYYMMDD')+6,'YYYYMMDD') BETWEEN A.CONTRACT_START AND NVL(A.CONTRACT_END,'99999999')  --[메뉴일자]
        ) B
 WHERE A.ITEM_CODE = B.ITEM_CODE(+)
   AND A.UPJANG = B.UPJANG(+)
 GROUP BY A.MENU_DATE
         ,A.RECIPE_SEQ
         ,A.CUISINE_TYPE
         ,A.MEAL
         ,A.CORNER
         ,A.CORNER_DESC
         ,A.RECIPE_CD
         ,A.RECIPE_NAME
         ,A.MEAL_UPRICE
         ,A.PHF
         ,A.SALE_PRICE
         ,A.SALE_PRICE2
         ,A.EXPECT_MEAL_QTY
         ,A.EXPECT_SALE_QTY
         ,A.CAFE_YN
         ,A.MAIN_ITEM_CODE1
   	]]></statement>
	<input default-name="ds_input">
		<col name="UPJANG" size="255" type="VARCHAR" description="" /> 
		<col name="HALL_CD" size="255" type="VARCHAR" description="" /> 
		<col name="MENU_SDATE" size="255" type="VARCHAR" description="" /> 
		<col name="SUBINV_CODE" size="255" type="VARCHAR" description="" /> 
	</input>
	<output default-name="DS_body">
		<col name="FDAY" size="8" type="VARCHAR" description="" /> 
		<col name="SGBN" size="20" type="VARCHAR" description="" /> 
		<col name="SGBN_NM" size="100" type="VARCHAR" description="" /> 
		<col name="CGBN_CD" size="20" type="VARCHAR" description="" /> 
		<col name="CGBN_NM" size="50" type="VARCHAR" description="" /> 
		<col name="CGBN" size="100" type="VARCHAR" description="" /> 
		<col name="DUP_STA" size="1" type="VARCHAR" description="" /> 
		<col name="DUP_COLOR" size="3" type="VARCHAR" description="" /> 
		<col name="SSEQ" size="22" type="NUMERIC" description="" /> 
		<col name="SD_CD" size="20" type="VARCHAR" description="" /> 
		<col name="SD_NM" size="50" type="VARCHAR" description="" /> 
		<col name="SD_WON" size="22" type="NUMERIC" description="" /> 
		<col name="WONGA" size="22" type="NUMERIC" description="" /> 
	</output>
</query>