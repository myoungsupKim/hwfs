<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="sm.sar.receiveMgntDAO">
	<desc>입금관리 HQML Query</desc>

	<!-- 입금관리 목록을 조회한다. -->
	<statement name="selectList" type="select"><![CDATA[
		SELECT X.RECEIVE_NUM
		     ,X.RECEIVE_DATE
		     ,X.RECEIVE_OCCUR_CLASS
		     ,X.RECEIVE_OCCUR_CLASS_NM
		     ,X.RECEIVE_TYPE_CD
		     ,X.RECEIVE_TYPE_CD_NM
		     ,X.SYS_CLASS
		     ,X.MU_CD
		     ,X.MU_NM
		     ,X.CC_CD
		     ,X.CC_NM
		     ,X.CUST_CD
		     ,X.CUST_NM
		     ,X.RECEIVE_AMT
		     ,X.DEDUC_AMT
		     ,X.AR_WITHDRAW_AMT
		     ,X.ADVANCE_OCCUR
		     ,X.ADVANCE_ALT
		     ,X.REF_NUM
		     ,X.BATCH_ID
		     ,X.REMARK
		     ,X.INQUERY_START_DATE
		     ,X.INQUERY_END_DATE
		     ,X.INQUERY_MU_CD
		     ,X.INQUERY_TM_CD
		     ,X.INQUERY_CC_CD
		     ,X.INQUERY_CUST_CD
		     ,X.INQUERY_AR_TYPE_CD
		     ,X.INQUERY_AR_NUM
		     ,X.RECD_STATUS
		     ,X.TRANS_CUST_CD
		     ,X.TRANS_CC_CD
             ,(SELECT CUST.CUSTNM FROM ST_CUST CUST WHERE X.TRANS_CUST_CD = CUST.CUSTCD) TRANS_CUST_NM
             ,(SELECT DISTINCT CC.CC_NM FROM SCC_CC CC WHERE X.TRANS_CC_CD = CC.CC_CD) TRANS_CC_NM		
             ,X.ALT_NUM  
             ,MIN(X.OCCUR_DATE) MIN_OCCUR_DATE	
             ,MAX(X.OCCUR_DATE) MAX_OCCUR_DATE  
		FROM (
			SELECT A.RECEIVE_NUM,
			       A.RECEIVE_DATE,
			       A.RECEIVE_OCCUR_CLASS,
			       SCC_COMMON_CODE_NAME_FUN('RECEIVE_OCCUR_CLASS',A.RECEIVE_OCCUR_CLASS) RECEIVE_OCCUR_CLASS_NM,
			       A.RECEIVE_TYPE_CD,
			       (SELECT TP.TYPE_NM FROM SLA_TYPE_CD_MST TP WHERE TP.TYPE_GRP_CD = '002' AND TP.TYPE_CD = A.RECEIVE_TYPE_CD) RECEIVE_TYPE_CD_NM,
			       A.SYS_CLASS,
			       A.MU_CD,
			       (SELECT DISTINCT MU_NM FROM   HLDC_SC_DEPT_V WHERE MU_CD = A.MU_CD)  AS MU_NM,
			       A.CC_CD,
			       (SELECT  CC_NM FROM SCC_CC WHERE CC_CD = A.CC_CD) AS CC_NM,
			       A.CUST_CD,
			       (SELECT CUSTNM FROM ST_CUST WHERE  CUSTCD=A.CUST_CD) AS CUST_NM,
			       A.RECEIVE_AMT,
			       A.DEDUC_AMT,
			       A.AR_WITHDRAW_AMT,
			       A.ADVANCE_OCCUR,
			       A.ADVANCE_ALT,
			       A.REF_NUM,
			       A.BATCH_ID,
			       A.REMARK,
			       A.INQUERY_START_DATE,
			       A.INQUERY_END_DATE,
			       A.INQUERY_MU_CD,
			       A.INQUERY_TM_CD,
			       A.INQUERY_CC_CD,
			       A.INQUERY_CUST_CD,
			       A.INQUERY_AR_TYPE_CD,
			       A.INQUERY_AR_NUM,
			       A.RECD_STATUS,
                   (SELECT DISTINCT CUST_CD FROM SLA_AR_MST MST WHERE MST.RECD_STATUS = 'L' AND MST.REF_NUM = A.RECEIVE_NUM) TRANS_CUST_CD ,                -- 분할거래처코드
                   (SELECT  DISTINCT CC_CD FROM SLA_AR_MST MST WHERE   MST.RECD_STATUS = 'L' AND MST.REF_NUM = A.RECEIVE_NUM) TRANS_CC_CD,
                   (SELECT DISTINCT ALT_NUM FROM SLA_ADVANCE_ALT_DETAIL D WHERE D.RECEIVE_NUM = A.RECEIVE_NUM AND D.RECD_STATUS='L') AS ALT_NUM,				--상계처리시 선수금대체번호
                   B.OCCUR_DATE		       
			FROM   SLA_AR_RECEIVE_MST A 
            		,SLA_AR_RECEIVE_DETAIL B
			WHERE  A.RECEIVE_NUM = B.RECEIVE_NUM 
			AND A.RECD_STATUS='L'
			<#if receiveNum?has_content>		AND    A.RECEIVE_NUM = :receiveNum</#if>
			<#if receiveDate?has_content>		AND    A.RECEIVE_DATE = :receiveDate</#if>
			<#if receiveOccurClass?has_content>	AND    A.RECEIVE_OCCUR_CLASS = :receiveOccurClass</#if>
			<#if receiveTypeCd?has_content>		AND    A.RECEIVE_TYPE_CD = :receiveTypeCd</#if>
			<#if muCd?has_content>				AND    A.MU_CD = :muCd</#if>
			<#if ccCd?has_content>				AND    A.CC_CD = :ccCd</#if>
			<#if tmCd?has_content>
				AND     A.CC_CD IN (
				                SELECT  A.CC_CD
				                FROM    SCC_CC A
				                        ,HLDC_SC_DEPT_V B
				                WHERE   B.CC_CD = A.CC_CD
				                AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
				                AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
				                AND     B.TM_CD = :tmCd
				                )
	        </#if>
			<#if custCd?has_content>			AND    A.CUST_CD = :custCd</#if>
			<#if receiveDateFr?has_content>		AND    A.RECEIVE_DATE >= :receiveDateFr</#if>
			<#if receiveDateTo?has_content>		AND    A.RECEIVE_DATE <= :receiveDateTo</#if>
			--<#if batchId?has_content>			AND    A.BATCH_ID = :batchId</#if>
			<#if batchId='RECEIVE'>
				 --입금관리에서는 채권이관 보이지 않도록 처리
			     AND RECEIVE_OCCUR_CLASS NOT IN ('RO03','RO04')
			<#else>   
				--채권 이관 화면에서 이관내역만 보이도록 수정 20190619 김호석
          		 AND RECEIVE_OCCUR_CLASS IN ('RO03','RO04')
			     AND    A.BATCH_ID = :batchId
			</#if>
			
			) X
		WHERE 1=1
		<#if transCustCd?has_content>			AND    X.TRANS_CC_CD = :transCustCd</#if>
        GROUP BY X.RECEIVE_NUM
		     ,X.RECEIVE_DATE
		     ,X.RECEIVE_OCCUR_CLASS
		     ,X.RECEIVE_OCCUR_CLASS_NM
		     ,X.RECEIVE_TYPE_CD
		     ,X.RECEIVE_TYPE_CD_NM
		     ,X.SYS_CLASS
		     ,X.MU_CD
		     ,X.MU_NM
		     ,X.CC_CD
		     ,X.CC_NM
		     ,X.CUST_CD
		     ,X.CUST_NM
		     ,X.RECEIVE_AMT
		     ,X.DEDUC_AMT
		     ,X.AR_WITHDRAW_AMT
		     ,X.ADVANCE_OCCUR
		     ,X.ADVANCE_ALT
		     ,X.REF_NUM
		     ,X.BATCH_ID
		     ,X.REMARK
		     ,X.INQUERY_START_DATE
		     ,X.INQUERY_END_DATE
		     ,X.INQUERY_MU_CD
		     ,X.INQUERY_TM_CD
		     ,X.INQUERY_CC_CD
		     ,X.INQUERY_CUST_CD
		     ,X.INQUERY_AR_TYPE_CD
		     ,X.INQUERY_AR_NUM
		     ,X.RECD_STATUS
		     ,X.TRANS_CUST_CD
		     ,X.TRANS_CC_CD
             ,X.ALT_NUM  
		ORDER bY RECEIVE_NUM DESC			
			
		]]></statement>
		
	<!-- 상계처리 목록을 조회한다. -->
	<statement name="selectBTList01" type="select"><![CDATA[
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.selectBTList01 */
		
		SELECT X.RECEIVE_NUM
		     ,X.RECEIVE_DATE
		     ,X.RECEIVE_OCCUR_CLASS
		     ,X.RECEIVE_OCCUR_CLASS_NM
		     ,X.RECEIVE_TYPE_CD
		     ,X.RECEIVE_TYPE_CD_NM
		     ,X.SYS_CLASS
		     ,X.MU_CD
		     ,X.MU_NM
		     ,X.CC_CD
		     ,X.CC_NM
		     ,X.CUST_CD
		     ,X.CUST_NM
		     ,X.RECEIVE_AMT
		     ,X.DEDUC_AMT
		     ,X.AR_WITHDRAW_AMT
             ,(SELECT SUM(DECODE(SIGN(Y.RECEIVE_AMT),-1,Y.RECEIVE_AMT,0)) FROM SLA_AR_RECEIVE_DETAIL Y WHERE Y.RECEIVE_NUM = X.RECEIVE_NUM) AS M_AMT
		     ,X.ADVANCE_OCCUR
		     ,X.ADVANCE_ALT
		     ,X.REF_NUM
		     ,X.BATCH_ID
		     ,X.REMARK
		     ,X.INQUERY_START_DATE
		     ,X.INQUERY_END_DATE
		     ,X.INQUERY_MU_CD
		     ,X.INQUERY_TM_CD
		     ,X.INQUERY_CC_CD
		     ,X.INQUERY_CUST_CD
		     ,X.INQUERY_AR_TYPE_CD
		     ,X.INQUERY_AR_NUM
		     ,X.RECD_STATUS
		     ,X.TRANS_CUST_CD
		     ,X.TRANS_CC_CD
             ,(SELECT CUST.CUSTNM FROM ST_CUST CUST WHERE X.TRANS_CUST_CD = CUST.CUSTCD) TRANS_CUST_NM
             ,(SELECT DISTINCT CC.CC_NM FROM SCC_CC CC WHERE X.TRANS_CC_CD = CC.CC_CD) TRANS_CC_NM		
             ,X.ALT_NUM  
             ,MIN(X.OCCUR_DATE) MIN_OCCUR_DATE	
             ,MAX(X.OCCUR_DATE) MAX_OCCUR_DATE
             ,TO_CHAR(MAX(X.CDATE),'YYYY-MM-DD HH24:MI:SS') AS CDATE
             ,X.JOURNALZ_NUM
		FROM (
			SELECT A.RECEIVE_NUM,
			       A.RECEIVE_DATE,
			       A.RECEIVE_OCCUR_CLASS,
			       SCC_COMMON_CODE_NAME_FUN('RECEIVE_OCCUR_CLASS',A.RECEIVE_OCCUR_CLASS) RECEIVE_OCCUR_CLASS_NM,
			       A.RECEIVE_TYPE_CD,
			       (SELECT TP.TYPE_NM FROM SLA_TYPE_CD_MST TP WHERE TP.TYPE_GRP_CD = '002' AND TP.TYPE_CD = A.RECEIVE_TYPE_CD) RECEIVE_TYPE_CD_NM,
			       A.SYS_CLASS,
			       A.MU_CD,
			       (SELECT DISTINCT MU_NM FROM   HLDC_SC_DEPT_V WHERE MU_CD = A.MU_CD)  AS MU_NM,
			       A.CC_CD,
			       (SELECT  CC_NM FROM SCC_CC WHERE CC_CD = A.CC_CD) AS CC_NM,
			       A.CUST_CD,
			       (SELECT CUSTNM FROM ST_CUST WHERE  CUSTCD=A.CUST_CD) AS CUST_NM,
			       A.RECEIVE_AMT,
			       A.DEDUC_AMT,
			       A.AR_WITHDRAW_AMT,
			       A.ADVANCE_OCCUR,
			       A.ADVANCE_ALT,
			       A.REF_NUM,
			       A.BATCH_ID,
			       A.REMARK,
			       A.INQUERY_START_DATE,
			       A.INQUERY_END_DATE,
			       A.INQUERY_MU_CD,
			       A.INQUERY_TM_CD,
			       A.INQUERY_CC_CD,
			       A.INQUERY_CUST_CD,
			       A.INQUERY_AR_TYPE_CD,
			       A.INQUERY_AR_NUM,
			       A.RECD_STATUS,
                   (SELECT DISTINCT CUST_CD FROM SLA_AR_MST MST WHERE MST.RECD_STATUS = 'L' AND MST.REF_NUM = A.RECEIVE_NUM) TRANS_CUST_CD ,                -- 분할거래처코드
                   (SELECT  DISTINCT CC_CD FROM SLA_AR_MST MST WHERE   MST.RECD_STATUS = 'L' AND MST.REF_NUM = A.RECEIVE_NUM) TRANS_CC_CD,
                   (SELECT DISTINCT ALT_NUM FROM SLA_ADVANCE_ALT_DETAIL D WHERE D.RECEIVE_NUM = A.RECEIVE_NUM AND D.RECD_STATUS='L') AS ALT_NUM,				--상계처리시 선수금대체번호
                   B.OCCUR_DATE,		
                   A.CDATE,
                   B.JOURNALZ_NUM                      
			FROM   SLA_AR_RECEIVE_MST A 
            		,SLA_AR_RECEIVE_DETAIL B
			WHERE  A.RECEIVE_NUM = B.RECEIVE_NUM 
			AND A.RECD_STATUS='L'
			<#if receiveNum?has_content>		AND    A.RECEIVE_NUM = :receiveNum</#if>
			<#if receiveDate?has_content>		AND    A.RECEIVE_DATE = :receiveDate</#if>
			<#if receiveOccurClass?has_content>	AND    A.RECEIVE_OCCUR_CLASS = :receiveOccurClass</#if>
			<#if receiveTypeCd?has_content>		AND    A.RECEIVE_TYPE_CD = :receiveTypeCd</#if>
			<#if muCd?has_content>				AND    A.MU_CD = :muCd</#if>
			<#if ccCd?has_content>				AND    A.CC_CD = :ccCd</#if>
			<#if tmCd?has_content>
				AND     A.CC_CD IN (
				                SELECT  A.CC_CD
				                FROM    SCC_CC A
				                        ,HLDC_SC_DEPT_V B
				                WHERE   B.CC_CD = A.CC_CD
				                AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
				                AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
				                AND     B.TM_CD IN (SELECT TM_CD FROM TABLE(HLDC_SC_DEPT_V_FUN(:tmCd)))
				                )
	        </#if>
			<#if custCd?has_content>			AND    A.CUST_CD = :custCd</#if>			
			<#if month?has_content>		AND    A.RECEIVE_DATE BETWEEN :month || '01' AND :month || '31' 
			
			</#if>
			AND A.CUSER = 'SYSTEM-ST1' --배치처리 구분
			) X
		WHERE 1=1
		<#if transCustCd?has_content>			AND    X.TRANS_CC_CD = :transCustCd</#if>
        GROUP BY X.RECEIVE_NUM
		     ,X.RECEIVE_DATE
		     ,X.RECEIVE_OCCUR_CLASS
		     ,X.RECEIVE_OCCUR_CLASS_NM
		     ,X.RECEIVE_TYPE_CD
		     ,X.RECEIVE_TYPE_CD_NM
		     ,X.SYS_CLASS
		     ,X.MU_CD
		     ,X.MU_NM
		     ,X.CC_CD
		     ,X.CC_NM
		     ,X.CUST_CD
		     ,X.CUST_NM
		     ,X.RECEIVE_AMT
		     ,X.DEDUC_AMT
		     ,X.AR_WITHDRAW_AMT
		     ,X.ADVANCE_OCCUR
		     ,X.ADVANCE_ALT
		     ,X.REF_NUM
		     ,X.BATCH_ID
		     ,X.REMARK
		     ,X.INQUERY_START_DATE
		     ,X.INQUERY_END_DATE
		     ,X.INQUERY_MU_CD
		     ,X.INQUERY_TM_CD
		     ,X.INQUERY_CC_CD
		     ,X.INQUERY_CUST_CD
		     ,X.INQUERY_AR_TYPE_CD
		     ,X.INQUERY_AR_NUM
		     ,X.RECD_STATUS
		     ,X.TRANS_CUST_CD
		     ,X.TRANS_CC_CD
             ,X.ALT_NUM  
             ,X.JOURNALZ_NUM
		ORDER bY X.CC_CD,RECEIVE_NUM DESC			
			
		]]></statement>
		
		<!-- 상계처리 목록을 조회한다. -->
	<statement name="selectBTList02" type="select"><![CDATA[
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.selectBTList02 */
		
		SELECT X.RECEIVE_NUM
		     ,X.RECEIVE_DATE
		     ,X.RECEIVE_OCCUR_CLASS
		     ,X.RECEIVE_OCCUR_CLASS_NM
		     ,X.RECEIVE_TYPE_CD
		     ,X.RECEIVE_TYPE_CD_NM
		     ,X.SYS_CLASS
		     ,X.MU_CD
		     ,X.MU_NM
		     ,X.CC_CD
		     ,X.CC_NM
		     ,X.CUST_CD
		     ,X.CUST_NM
		     ,X.RECEIVE_AMT
		     ,X.DEDUC_AMT
		     ,X.AR_WITHDRAW_AMT
             ,(SELECT SUM(DECODE(SIGN(Y.RECEIVE_AMT),-1,Y.RECEIVE_AMT,0)) FROM SLA_AR_RECEIVE_DETAIL Y WHERE Y.RECEIVE_NUM = X.RECEIVE_NUM) AS M_AMT
		     ,X.ADVANCE_OCCUR
		     ,X.ADVANCE_ALT
		     ,X.REF_NUM
		     ,X.BATCH_ID
		     ,X.REMARK
		     ,X.INQUERY_START_DATE
		     ,X.INQUERY_END_DATE
		     ,X.INQUERY_MU_CD
		     ,X.INQUERY_TM_CD
		     ,X.INQUERY_CC_CD
		     ,X.INQUERY_CUST_CD
		     ,X.INQUERY_AR_TYPE_CD
		     ,X.INQUERY_AR_NUM
		     ,X.RECD_STATUS
		     ,X.TRANS_CUST_CD
		     ,X.TRANS_CC_CD
             ,(SELECT CUST.CUSTNM FROM ST_CUST CUST WHERE X.TRANS_CUST_CD = CUST.CUSTCD) TRANS_CUST_NM
             ,(SELECT DISTINCT CC.CC_NM FROM SCC_CC CC WHERE X.TRANS_CC_CD = CC.CC_CD) TRANS_CC_NM		
             ,X.ALT_NUM  
             ,MIN(X.OCCUR_DATE) MIN_OCCUR_DATE	
             ,MAX(X.OCCUR_DATE) MAX_OCCUR_DATE
             ,TO_CHAR(MAX(X.CDATE),'YYYY-MM-DD HH24:MI:SS') AS CDATE
             ,X.JOURNALZ_NUM
		FROM (
			SELECT A.RECEIVE_NUM,
			       A.RECEIVE_DATE,
			       A.RECEIVE_OCCUR_CLASS,
			       SCC_COMMON_CODE_NAME_FUN('RECEIVE_OCCUR_CLASS',A.RECEIVE_OCCUR_CLASS) RECEIVE_OCCUR_CLASS_NM,
			       A.RECEIVE_TYPE_CD,
			       (SELECT TP.TYPE_NM FROM SLA_TYPE_CD_MST TP WHERE TP.TYPE_GRP_CD = '002' AND TP.TYPE_CD = A.RECEIVE_TYPE_CD) RECEIVE_TYPE_CD_NM,
			       A.SYS_CLASS,
			       A.MU_CD,
			       (SELECT DISTINCT MU_NM FROM   HLDC_SC_DEPT_V WHERE MU_CD = A.MU_CD)  AS MU_NM,
			       A.CC_CD,
			       (SELECT  CC_NM FROM SCC_CC WHERE CC_CD = A.CC_CD) AS CC_NM,
			       A.CUST_CD,
			       (SELECT CUSTNM FROM ST_CUST WHERE  CUSTCD=A.CUST_CD) AS CUST_NM,
			       A.RECEIVE_AMT,
			       A.DEDUC_AMT,
			       A.AR_WITHDRAW_AMT,
			       A.ADVANCE_OCCUR,
			       A.ADVANCE_ALT,
			       A.REF_NUM,
			       A.BATCH_ID,
			       A.REMARK,
			       A.INQUERY_START_DATE,
			       A.INQUERY_END_DATE,
			       A.INQUERY_MU_CD,
			       A.INQUERY_TM_CD,
			       A.INQUERY_CC_CD,
			       A.INQUERY_CUST_CD,
			       A.INQUERY_AR_TYPE_CD,
			       A.INQUERY_AR_NUM,
			       A.RECD_STATUS,
                   (SELECT DISTINCT CUST_CD FROM SLA_AR_MST MST WHERE MST.RECD_STATUS = 'L' AND MST.REF_NUM = A.RECEIVE_NUM) TRANS_CUST_CD ,                -- 분할거래처코드
                   (SELECT  DISTINCT CC_CD FROM SLA_AR_MST MST WHERE   MST.RECD_STATUS = 'L' AND MST.REF_NUM = A.RECEIVE_NUM) TRANS_CC_CD,
                   (SELECT DISTINCT ALT_NUM FROM SLA_ADVANCE_ALT_DETAIL D WHERE D.RECEIVE_NUM = A.RECEIVE_NUM AND D.RECD_STATUS='L') AS ALT_NUM,				--상계처리시 선수금대체번호
                   B.OCCUR_DATE,		
                   A.CDATE,
                   B.JOURNALZ_NUM                      
			FROM   SLA_AR_RECEIVE_MST A 
            		,SLA_AR_RECEIVE_DETAIL B
			WHERE  A.RECEIVE_NUM = B.RECEIVE_NUM 
			AND A.RECD_STATUS='L'
			<#if receiveNum?has_content>		AND    A.RECEIVE_NUM = :receiveNum</#if>
			<#if receiveDate?has_content>		AND    A.RECEIVE_DATE = :receiveDate</#if>
			<#if receiveOccurClass?has_content>	AND    A.RECEIVE_OCCUR_CLASS = :receiveOccurClass</#if>
			<#if receiveTypeCd?has_content>		AND    A.RECEIVE_TYPE_CD = :receiveTypeCd</#if>
			<#if muCd?has_content>				AND    A.MU_CD = :muCd</#if>
			<#if ccCd?has_content>				AND    A.CC_CD = :ccCd</#if>
			<#if tmCd?has_content>
				AND     A.CC_CD IN (
				                SELECT  A.CC_CD
				                FROM    SCC_CC A
				                        ,HLDC_SC_DEPT_V B
				                WHERE   B.CC_CD = A.CC_CD
				                AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
				                AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
				                AND     B.TM_CD IN (SELECT TM_CD FROM TABLE(HLDC_SC_DEPT_V_FUN(:tmCd)))
				                )
	        </#if>
			<#if custCd?has_content>			AND    A.CUST_CD = :custCd</#if>			
			<#if month?has_content>		AND    A.RECEIVE_DATE BETWEEN :month || '01' AND :month || '31' 
			
			</#if>
			AND A.CUSER = 'SYSTEM-ST2' --배치처리 구분
			) X
		WHERE 1=1
		<#if transCustCd?has_content>			AND    X.TRANS_CC_CD = :transCustCd</#if>
        GROUP BY X.RECEIVE_NUM
		     ,X.RECEIVE_DATE
		     ,X.RECEIVE_OCCUR_CLASS
		     ,X.RECEIVE_OCCUR_CLASS_NM
		     ,X.RECEIVE_TYPE_CD
		     ,X.RECEIVE_TYPE_CD_NM
		     ,X.SYS_CLASS
		     ,X.MU_CD
		     ,X.MU_NM
		     ,X.CC_CD
		     ,X.CC_NM
		     ,X.CUST_CD
		     ,X.CUST_NM
		     ,X.RECEIVE_AMT
		     ,X.DEDUC_AMT
		     ,X.AR_WITHDRAW_AMT
		     ,X.ADVANCE_OCCUR
		     ,X.ADVANCE_ALT
		     ,X.REF_NUM
		     ,X.BATCH_ID
		     ,X.REMARK
		     ,X.INQUERY_START_DATE
		     ,X.INQUERY_END_DATE
		     ,X.INQUERY_MU_CD
		     ,X.INQUERY_TM_CD
		     ,X.INQUERY_CC_CD
		     ,X.INQUERY_CUST_CD
		     ,X.INQUERY_AR_TYPE_CD
		     ,X.INQUERY_AR_NUM
		     ,X.RECD_STATUS
		     ,X.TRANS_CUST_CD
		     ,X.TRANS_CC_CD
             ,X.ALT_NUM  
             ,X.JOURNALZ_NUM
		ORDER bY X.CC_CD,RECEIVE_NUM DESC			
			
		]]></statement>
		
	<statement name="selectJcnt" type="select"><![CDATA[
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.selectJcnt */
		
		--SELECT DECODE(COUNT(*),0,'N','Y') AS J_YN
		SELECT 
			CASE WHEN NVL(SUM(DECODE(JOURNALZ_NUM,NULL,0,1)),0) = 0 THEN 'N' ELSE 'Y' END J_YN,
			DECODE(COUNT(*),0,'N','Y') AS P_YN
		FROM (
			SELECT B.JOURNALZ_NUM                      
			FROM   SLA_AR_RECEIVE_MST A 
            		,SLA_AR_RECEIVE_DETAIL B
			WHERE  A.RECEIVE_NUM = B.RECEIVE_NUM 
			AND A.RECD_STATUS='L'
			<#if receiveNum?has_content>		AND    A.RECEIVE_NUM = :receiveNum</#if>
			<#if receiveDate?has_content>		AND    A.RECEIVE_DATE = :receiveDate</#if>
			<#if receiveOccurClass?has_content>	AND    A.RECEIVE_OCCUR_CLASS = :receiveOccurClass</#if>
			<#if receiveTypeCd?has_content>		AND    A.RECEIVE_TYPE_CD = :receiveTypeCd</#if>
			<#if muCd?has_content>				AND    A.MU_CD = :muCd</#if>
			<#if ccCd?has_content>				AND    A.CC_CD = :ccCd</#if>
			<#if tmCd?has_content>
				AND     A.CC_CD IN (
				                SELECT  A.CC_CD
				                FROM    SCC_CC A
				                        ,HLDC_SC_DEPT_V B
				                WHERE   B.CC_CD = A.CC_CD
				                AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
				                AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
				                AND     B.TM_CD IN (SELECT TM_CD FROM TABLE(HLDC_SC_DEPT_V_FUN(:tmCd)))
				                )
	        </#if>
			<#if custCd?has_content>			AND    A.CUST_CD = :custCd</#if>			
			<#if month?has_content>		AND    A.RECEIVE_DATE BETWEEN :month || '01' AND :month || '31' 
			
			</#if>
			AND A.CUSER = 'SYSTEM-ST1' --배치처리 구분
			) X
			
		]]></statement>
		
	<statement name="selectJcnt2" type="select"><![CDATA[
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.selectJcnt2 */
		
		--SELECT DECODE(COUNT(*),0,'N','Y') AS J_YN
		SELECT 
			CASE WHEN NVL(SUM(DECODE(JOURNALZ_NUM,NULL,0,1)),0) = 0 THEN 'N' ELSE 'Y' END J_YN,
			DECODE(COUNT(*),0,'N','Y') AS P_YN
		FROM (
			SELECT B.JOURNALZ_NUM                      
			FROM   SLA_AR_RECEIVE_MST A 
            		,SLA_AR_RECEIVE_DETAIL B
			WHERE  A.RECEIVE_NUM = B.RECEIVE_NUM 
			AND A.RECD_STATUS='L'
			<#if receiveNum?has_content>		AND    A.RECEIVE_NUM = :receiveNum</#if>
			<#if receiveDate?has_content>		AND    A.RECEIVE_DATE = :receiveDate</#if>
			<#if receiveOccurClass?has_content>	AND    A.RECEIVE_OCCUR_CLASS = :receiveOccurClass</#if>
			<#if receiveTypeCd?has_content>		AND    A.RECEIVE_TYPE_CD = :receiveTypeCd</#if>
			<#if muCd?has_content>				AND    A.MU_CD = :muCd</#if>
			<#if ccCd?has_content>				AND    A.CC_CD = :ccCd</#if>
			<#if tmCd?has_content>
				AND     A.CC_CD IN (
				                SELECT  A.CC_CD
				                FROM    SCC_CC A
				                        ,HLDC_SC_DEPT_V B
				                WHERE   B.CC_CD = A.CC_CD
				                AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
				                AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
				                AND     B.TM_CD IN (SELECT TM_CD FROM TABLE(HLDC_SC_DEPT_V_FUN(:tmCd)))
				                )
	        </#if>
			<#if custCd?has_content>			AND    A.CUST_CD = :custCd</#if>			
			<#if month?has_content>		AND    A.RECEIVE_DATE BETWEEN :month || '01' AND :month || '31' 
			
			</#if>
			AND A.CUSER = 'SYSTEM-ST2' --배치처리 구분
			) X
			
		]]></statement>
		
		<!-- 입금관리상세 목록을 조회한다. 20190509 김호석 -->
	<statement name="selectDetailList1" type="select"><![CDATA[
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.selectDetailList1 */
							
			SELECT
			
			    ARM.RECEIVE_NUM
			  , AM.UPJANG_CD
			  , U.UPJANGNM AS UPJANG_NM
			  , SV.TM_NM
			  , AM.CC_CD
			  , SV.CC_NM
			  , AM.CUST_CD
			  , C.SAP_CUST_CD
			  , C.CUSTNM AS CUST_NM
			  , ARD.AR_NUM
              , CASE WHEN (ARD.RECEIVE_DATE IS NOT NULL AND LENGTH(ARD.RECEIVE_DATE) = 8) THEN 
          	  			SUBSTR(ARD.RECEIVE_DATE,0,4) || '-' || SUBSTR(ARD.RECEIVE_DATE,5,2) || '-' || SUBSTR(ARD.RECEIVE_DATE,7,2)
          			ELSE 
	       			ARD.RECEIVE_DATE
	       		END RECEIVE_DATE
			  , ARD.AR_AMT
			  , ARD.RECEIVE_AMT
			  , ARM.CUSER
			  , CASE WHEN SU.NM_KOR IS NULL THEN CASE WHEN AD.CUSER = 'SYSTEM' THEN '시스템' ELSE
				CASE WHEN AD.CUSER = 'SYSTEM-BT' THEN '시스템(배치)' ELSE '' END END  ELSE SU.NM_KOR END CNAME
			  , AD.ADVANCE_NUM
			  , AD.APPLY_AMT
			  , AD.REMARK
			
			FROM SLA_AR_RECEIVE_MST ARM
			    , SLA_AR_RECEIVE_DETAIL ARD
			    , SLA_AR_MST AM
			    , SLA_ADVANCE_ALT_DETAIL AD  --선수금 대체상세  
			  	, SCC_USERINFO SU               --사용자정보
				, ST_CUSTV C                    --거래처
				, HLDC_SC_DEPT_V SV
			    , ST_UPJANGV U
			
				WHERE 1=1
					AND ARM.RECD_STATUS = 'L'
					AND ARM.RECEIVE_TYPE_CD IN ('B10','B11','B19') --입금유형 선수금(선매출), 계약이행 예치금 유형만, 선수금(사업장)
					AND ARM.RECEIVE_NUM = AD.RECEIVE_NUM
			      	AND ARM.RECEIVE_NUM = ARD.RECEIVE_NUM
			      	AND ARD.AR_NUM = AM.AR_NUM
			        AND AM.UPJANG_CD = TO_CHAR(U.UPJANG)
			        AND ARM.RECD_STATUS = 'L'
			        AND ARD.RECD_STATUS = 'L'
			        AND AM.RECD_STATUS = 'L'
			        AND AD.RECD_STATUS = 'L'
			      	<#if muCd?has_content> AND ARM.MU_CD = :muCd </#if>			      	
                    <#if tmCd?has_content> AND AM.CC_CD IN ( SELECT  A.CC_CD
				                FROM    SCC_CC A
				                        ,HLDC_SC_DEPT_V B
				                WHERE   B.CC_CD = A.CC_CD
				                AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
				                AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
				                AND     B.TM_CD = :tmCd                
                			) </#if> 
			        <#if ccCd?has_content> AND AM.CC_CD   = :ccCd </#if>
			        <#if custCd?has_content> AND AM.CUST_CD = :custCd  </#if>	
			      	AND ARM.RECEIVE_DATE BETWEEN :receiveDateFr and :receiveDateTo	
					AND ARM.CUSER = SU.SABUN(+)
					AND AM.CUST_CD = C.CUSTCD
					AND AM.CC_CD = SV.CC_CD
			        AND AD.APPLY_AMT != 0
			
			ORDER BY ARM.RECEIVE_NUM,ARD.AR_NUM, AD.ADVANCE_NUM
		
		]]></statement>
		
			<!-- 입금관리상세 목록을 조회한다. 20190509 김호석 -->
	<statement name="selectDetailList2" type="select"><![CDATA[
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.selectDetailList2 */
							
			  SELECT

				    ARM.RECEIVE_NUM
				  , AM.UPJANG_CD
				  , U.UPJANGNM AS UPJANG_NM
				  , SV.TM_NM
				  , AM.CC_CD
				  , SV.CC_NM
				  , AM.CUST_CD
				  , C.SAP_CUST_CD
				  , C.CUSTNM AS CUST_NM
				  , ARD.AR_NUM
				  , ARD.RECEIVE_DATE
				  , ARD.AR_AMT
				  , ARD.RECEIVE_AMT
				  , ARM.CUSER
				  , CASE WHEN SU.NM_KOR IS NULL THEN CASE WHEN ARM.CUSER = 'SYSTEM' THEN '시스템' ELSE
					CASE WHEN ARM.CUSER = 'SYSTEM-BT' THEN '시스템(배치)' ELSE '' END END  ELSE SU.NM_KOR END CNAME
				  , SD.SAP_SUSPENSE_NUM
				  , SD.RECEIVE_AMT AS APPLY_AMT
	        	  , SD.RECEIVE_GUEST_NM
				  , ARM.REMARK

			FROM SLA_AR_RECEIVE_MST ARM
			    , SLA_AR_RECEIVE_DETAIL ARD
			    , SLA_AR_MST AM
			    , (SELECT DISTINCT RECEIVE_NUM, IMNO_ALT_NUM FROM SLA_AR_RECEIVE_WAY WHERE RECD_STATUS = 'L') AW
          		, SLA_SAP_SUSPENSE_ALT_DETAIL SD
			  	, SCC_USERINFO SU
				, ST_CUSTV C                    --거래처
				, HLDC_SC_DEPT_V SV
			    , ST_UPJANGV U

				WHERE 1=1
					AND ARM.RECD_STATUS = 'L'
					AND ARM.RECEIVE_TYPE_CD IN ('B02','B13')
					AND ARM.RECEIVE_NUM = AW.RECEIVE_NUM
		            AND AW.IMNO_ALT_NUM = SD.ALT_NUM
		            AND SD.RECD_STATUS = 'L'
				    AND ARM.RECEIVE_NUM = ARD.RECEIVE_NUM
				    AND ARD.AR_NUM = AM.AR_NUM
				    AND AM.UPJANG_CD = TO_CHAR(U.UPJANG)
				    AND ARM.RECD_STATUS = 'L'
				    AND ARD.RECD_STATUS = 'L'
				    AND AM.RECD_STATUS = 'L'
				    <#if muCd?has_content> AND ARM.MU_CD = :muCd </#if>			      	
                    <#if tmCd?has_content> AND AM.CC_CD IN ( SELECT  A.CC_CD
				                FROM    SCC_CC A
				                        ,HLDC_SC_DEPT_V B
				                WHERE   B.CC_CD = A.CC_CD
				                AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
				                AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
				                AND     B.TM_CD = :tmCd                
                			) </#if> 
			        <#if ccCd?has_content> AND AM.CC_CD   = :ccCd </#if>
			        <#if custCd?has_content> AND AM.CUST_CD = :custCd  </#if>	
			      	AND ARM.RECEIVE_DATE BETWEEN :receiveDateFr and :receiveDateTo	
					AND ARM.CUSER = SU.SABUN(+)
					AND AM.CUST_CD = C.CUSTCD
					AND AM.CC_CD = SV.CC_CD

			ORDER BY ARM.RECEIVE_NUM,SD.SAP_SUSPENSE_NUM,AM.AR_NUM
			
		]]></statement>
		
			<!-- 입금관리상세 목록을 조회한다. 20190509 김호석 -->
	<statement name="selectDetailList3" type="select"><![CDATA[
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.selectDetailList3 */
							
				SELECT A.RECEIVE_NUM
		              , AM.UPJANG_CD
					  , U.UPJANGNM AS UPJANG_NM
					  , SV.TM_NM
					  , AM.CC_CD
					  , SV.CC_NM
					  , AM.CUST_CD
					  , C.SAP_CUST_CD
					  , C.CUSTNM AS CUST_NM
		              , AM.AR_NUM
		              , CASE WHEN (B.RECEIVE_DATE IS NOT NULL AND LENGTH(B.RECEIVE_DATE) = 8) THEN 
	           	  			SUBSTR(B.RECEIVE_DATE,0,4) || '-' || SUBSTR(B.RECEIVE_DATE,5,2) || '-' || SUBSTR(B.RECEIVE_DATE,7,2)
	           			ELSE 
			       			B.RECEIVE_DATE
			       		END RECEIVE_DATE
		              , AM.AR_AMT
		              , B.RECEIVE_AMT
		              , A.REMARK
		              , A.CUSER
 					  , CASE WHEN SU.NM_KOR IS NULL THEN CASE WHEN A.CUSER = 'SYSTEM' THEN '시스템' ELSE
					    CASE WHEN A.CUSER = 'SYSTEM-BT' THEN '시스템(배치)' ELSE '' END END  ELSE SU.NM_KOR END CNAME
                      , SB.BUYCPNY_NM

			  FROM    SLA_AR_RECEIVE_MST A
            		, SLA_AR_RECEIVE_DETAIL B
	                , SLA_AR_RECEIVE_WAY C
				    , SLA_AR_MST AM
				  	, SCC_USERINFO SU               --사용자정보
					, ST_CUSTV C                    --거래처
					, HLDC_SC_DEPT_V SV
				    , ST_UPJANGV U
	          		, SLA_BUY_CPNY_MGMT SB
			WHERE  A.RECEIVE_NUM = B.RECEIVE_NUM
		        AND A.RECEIVE_NUM = C.RECEIVE_NUM
				AND A.RECD_STATUS='L'
		        AND A.CUSER = SU.SABUN
		        AND A.CUST_CD = C.CUSTCD
		        AND B.AR_NUM = AM.AR_NUM
		        AND AM.UPJANG_CD = U.UPJANG
		        AND AM.CC_CD = SV.CC_CD
		        AND C.RECEIVE_BANKCD = SB.BUYCPNY_CD
				AND    A.RECEIVE_TYPE_CD = 'B15'
				<#if muCd?has_content> AND AM.MU_CD = :muCd </#if>			      	
                <#if tmCd?has_content> AND AM.CC_CD IN ( SELECT  A.CC_CD
				                FROM    SCC_CC A
				                        ,HLDC_SC_DEPT_V B
				                WHERE   B.CC_CD = A.CC_CD
				                AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
				                AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
				                AND     B.TM_CD = :tmCd                
                			) </#if> 
		        <#if ccCd?has_content> AND AM.CC_CD   = :ccCd </#if>
		        <#if custCd?has_content> AND AM.CUST_CD = :custCd  </#if>	
			   	AND A.RECEIVE_DATE BETWEEN :receiveDateFr and :receiveDateTo	
		        
			ORDER BY A.RECEIVE_NUM,AM.AR_NUM
		
		]]></statement>

	<!-- 입금관리(을)를 등록한다. -->
	<statement name="insert" type="insert">
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.insert */
		<![CDATA[
		INSERT INTO TABLE_NAME 
		(
		       COLUMN_NAME1,
			   COLUMN_NAME2,
		       CUSER,
		       CDATE
		)
		VALUES
		(
		       :columnName1,
			   <#if columnName2?has_content> :columnName2, <#else> null, </#if>
		       :loginSabun,
		       SYSDATE
		)
		]]>
	</statement>

	<!-- 입금관리(을)를 수정한다. -->
	<statement name="update" type="update">
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.update */
		<![CDATA[
		UPDATE TABLE_NAME 
		SET    COLUMN_NAME1 = :columnName1,
		       COLUMN_NAME2 = :columnName2,
		       UUSER = :loginSabun,
		       UDATE = SYSDATE
		WHERE  COLUMN_NAME = :columnName
		]]>
	</statement>

	<!-- 입금관리(을)를 삭제한다. -->
	<statement name="delete" type="delete">
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.delete */
		<![CDATA[
		DELETE 
		FROM   TABLE_NAME 
		WHERE  COLUMN_NAME = :columnName
		]]>
	</statement>
	
	<!-- 마이너스 상계(을)를 삭제한다.(채권 입금 지불)  -->
	<statement name="batchDelete1" type="delete">
		<![CDATA[
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.batchDelete1 */
		
		--DELETE FROM SLA_AR_RECEIVE_WAY
		UPDATE SLA_AR_RECEIVE_WAY
			SET RECD_STATUS = 'D',
				UUSER = 'SYSTEM-ST1',
				UDATE = SYSDATE			
			WHERE 1=1
				AND RECEIVE_NUM IN (
				SELECT RECEIVE_NUM
					FROM SLA_AR_RECEIVE_MST
					 	WHERE 1=1 
							AND RECEIVE_DATE BETWEEN :month || '01' AND :month || '31'
							AND CUSER = 'SYSTEM-ST1'
							<#if tmCd?has_content> 
					       		AND CC_CD IN (SELECT CC_CD FROM HLDC_SC_DEPT WHERE TM_CD IN (SELECT TM_CD FROM TABLE(HLDC_SC_DEPT_V_FUN2(:tmCd))))
					       	</#if> 
					       	<#if ccCd?has_content> 
					         	AND CC_CD = :ccCd
					        </#if>
					           	<#if custCd?has_content> 
					         	AND CUST_CD = :custCd
					        </#if>
				)
				
		]]>
	</statement>
	
	<!-- 마이너스 상계(을)를 삭제한다.(채권 입금 상세)  -->
	<statement name="batchDelete2" type="delete">
		<![CDATA[
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.batchDelete2 */
		
		--DELETE FROM SLA_AR_RECEIVE_DETAIL 
		UPDATE SLA_AR_RECEIVE_DETAIL
			SET RECD_STATUS = 'D',
				UUSER = 'SYSTEM-ST1',
				UDATE = SYSDATE
			WHERE 1=1
				AND RECEIVE_DATE BETWEEN :month || '01' AND :month || '31'
				AND CUSER = 'SYSTEM-ST1'
				<#if tmCd?has_content> 
		       		AND CC_CD IN (SELECT CC_CD FROM HLDC_SC_DEPT WHERE TM_CD IN (SELECT TM_CD FROM TABLE(HLDC_SC_DEPT_V_FUN2(:tmCd))))
		       	</#if> 
		       	<#if ccCd?has_content> 
		         	AND CC_CD = :ccCd
		        </#if>
		           	<#if custCd?has_content> 
		         	AND CUST_CD = :custCd
		        </#if>
				
		]]>
	</statement>
	
	<!-- 마이너스 상계(을)를 삭제한다.(채권 입금 마스터)  -->
	<statement name="batchDelete3" type="delete">
		<![CDATA[
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.batchDelete3 */
		
		--DELETE FROM SLA_AR_RECEIVE_MST 
		UPDATE SLA_AR_RECEIVE_MST
			SET RECD_STATUS = 'D',
				UUSER = 'SYSTEM-ST1',
				UDATE = SYSDATE
			WHERE 1=1
				AND RECEIVE_DATE BETWEEN :month || '01' AND :month || '31'
				AND CUSER = 'SYSTEM-ST1'
				<#if tmCd?has_content> 
		       		AND CC_CD IN (SELECT CC_CD FROM HLDC_SC_DEPT WHERE TM_CD IN (SELECT TM_CD FROM TABLE(HLDC_SC_DEPT_V_FUN2(:tmCd))))
		       	</#if> 
		       	<#if ccCd?has_content> 
		         	AND CC_CD = :ccCd
		        </#if>
		           	<#if custCd?has_content> 
		         	AND CUST_CD = :custCd
		        </#if>
				
		]]>
	</statement>
	
	
	<!-- 마이너스 상계(을)를 삭제한다.(채권 마스터)  -->
	<statement name="batchUpdate" type="update">
		<![CDATA[
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.batchUpdate */
		UPDATE SLA_AR_MST A  
		SET   WITHDRAW_AMT = NVL((SELECT SUM(RECEIVE_AMT)
	                                                      FROM SLA_AR_RECEIVE_DETAIL AD
	                                                     WHERE AD.AR_NUM = A.AR_NUM
	                                                       AND AD.RECD_STATUS='L'
	                                                       AND AD.CUSER != 'SYSTEM-ST1'), 0) ,	                           
		       UUSER = 'SYSTEM-ST1',
		       UDATE = SYSDATE
		WHERE A.RECD_STATUS = 'L'
	    AND  A.OCCUR_DATE BETWEEN :month || '01' AND :month || '31'
	    AND  A.MU_CD     = '2004'
		<#if tmCd?has_content> 
       		AND A.CC_CD IN (SELECT CC_CD FROM HLDC_SC_DEPT WHERE TM_CD IN (SELECT TM_CD FROM TABLE(HLDC_SC_DEPT_V_FUN2(:tmCd))))
       	</#if> 
       	<#if ccCd?has_content> 
         	AND A.CC_CD = :ccCd
        </#if>
           	<#if custCd?has_content> 
         	AND A.CUST_CD = :custCd
        </#if>
	    --AND  A.CC_CD NOT IN (SELECT CC_CD FROM HLDC_SC_DEPT WHERE TM_CD = 'CFG')   
	    AND  A.AR_NUM IN (SELECT AR.AR_NUM FROM SLA_AR_RECEIVE_DETAIL AR 
	    					WHERE AR.RECEIVE_DATE BETWEEN :month || '01' AND :month || '31'
								AND AR.CUSER = 'SYSTEM-ST1')
		
		]]>
	</statement>
	
	<statement name="chkClose" type="select"><![CDATA[
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.chkClose */
		 SELECT 
		  	SUM(DECODE(Z.TYPE01,'Y',1,0)) AS A_CNT,  --영업마감
		 	SUM(DECODE(Z.TYPE02,'Y',1,0)) AS B_CNT,   --회계마감
		 	SUM(DECODE(Z.TYPE01,'Y',1,0)) + SUM(DECODE(Z.TYPE02,'Y',1,0)) AS T_CNT   --영업마감+회계마감
		 	--'0' AS T_CNT --임시로 마감체크해제
		 FROM (
		 SELECT
		      NVL(A.TYPE01, 'N') AS TYPE01
		     , NVL(A.TYPE02, 'N') AS TYPE02		          
		  FROM ( SELECT A.MU_CD AS MU_CD 
		              , A.MU_NM AS MU_NM
		              , A.TM_CD AS TM_CD
		              , A.TM_NM AS TM_NM
		              , A.CC_CD AS CC_CD
		              , A.CC_NM AS CC_NM
		              , C.TYPE01 AS TYPE01
		              , D.TYPE01 AS TYPE02
		              , C.CLOSE_MONTH AS CLOSE_MONTH
		              , C.CUSER AS CUSER
		              , C.UUSER AS UUSER
		           FROM HLDC_SC_DEPT_V A
		              , SCC_CC B
		              , MAS_CLOSE_MONTH_MGMT C
		              , MAS_FI_CLOSE_MONTH_MGMT D
		              
		          WHERE A.CC_CD = B.CC_CD
		            AND A.CC_CD = C.CC_CD(+)
		            AND B.CC_CD = D.CC_CD(+)
		            AND A.MU_CD = '2004'		      	
                	<#if tmCd?has_content> 
                		AND A.CC_CD IN (SELECT CC_CD FROM HLDC_SC_DEPT WHERE TM_CD IN (SELECT TM_CD FROM TABLE(HLDC_SC_DEPT_V_FUN2(:tmCd))))
                	</#if> 
                	<#if ccCd?has_content> 
		            	AND A.CC_CD = :ccCd
		            </#if> 
		            AND A.CC_CD NOT IN (SELECT CC_CD FROM SCC_CC WHERE ORG_LEVEL_CD10 LIKE '%Z')
		            AND C.CLOSE_MONTH(+) = :month
		            AND D.CLOSE_MONTH(+) = :month
		       ) A
		) Z       
	
		]]>
	</statement>
	
	<!-- 플러스채권 대체(을)를 삭제한다.(채권 입금 지불)  -->
	<statement name="batchDelete5" type="delete">
		<![CDATA[
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.batchDelete5 */
		
		--DELETE FROM SLA_AR_RECEIVE_WAY 
		UPDATE SLA_AR_RECEIVE_WAY
			SET RECD_STATUS = 'D',
				UUSER = 'SYSTEM-ST2',
				UDATE = SYSDATE
			WHERE 1=1
				AND RECEIVE_NUM IN (
				SELECT RECEIVE_NUM
					FROM SLA_AR_RECEIVE_MST
					 	WHERE 1=1 
							AND RECEIVE_DATE BETWEEN :month || '01' AND :month || '31'
								AND CUSER = 'SYSTEM-ST2'
								<#if tmCd?has_content> 
			                		AND CC_CD IN (SELECT CC_CD FROM HLDC_SC_DEPT WHERE TM_CD IN (SELECT TM_CD FROM TABLE(HLDC_SC_DEPT_V_FUN2(:tmCd))))
			                	</#if> 
			                	<#if ccCd?has_content> 
					            	AND CC_CD = :ccCd
					            </#if>
			                	<#if custCd?has_content> 
					            	AND CUST_CD = :custCd
					            </#if>
				)
				
		]]>
	</statement>
	
	<!-- 플러스채권 대체(을)를 삭제한다.(채권 입금 상세)  -->
	<statement name="batchDelete6" type="delete">
		<![CDATA[
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.batchDelete6 */
		
		--DELETE FROM SLA_AR_RECEIVE_DETAIL 
		UPDATE SLA_AR_RECEIVE_DETAIL
			SET RECD_STATUS = 'D',
				UUSER = 'SYSTEM-ST2',
				UDATE = SYSDATE
			WHERE 1=1
				AND RECEIVE_DATE BETWEEN :month || '01' AND :month || '31'
				AND CUSER = 'SYSTEM-ST2'
				<#if tmCd?has_content> 
               		AND CC_CD IN (SELECT CC_CD FROM HLDC_SC_DEPT WHERE TM_CD IN (SELECT TM_CD FROM TABLE(HLDC_SC_DEPT_V_FUN2(:tmCd))))
               	</#if> 
               	<#if ccCd?has_content> 
	            	AND CC_CD = :ccCd
	            </#if>
               	<#if custCd?has_content> 
	            	AND CUST_CD = :custCd
	            </#if>
				
		]]>
	</statement>
	
	<!-- 플러스채권 대체(을)를 삭제한다.(채권 입금 마스터)  -->
	<statement name="batchDelete7" type="delete">
		<![CDATA[
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.batchDelete7 */
		
		--DELETE FROM SLA_AR_RECEIVE_MST 
		UPDATE SLA_AR_RECEIVE_MST
			SET RECD_STATUS = 'D',
				UUSER = 'SYSTEM-ST2',
				UDATE = SYSDATE
			WHERE 1=1
				AND RECEIVE_DATE BETWEEN :month || '01' AND :month || '31'
				AND CUSER = 'SYSTEM-ST2'
				<#if tmCd?has_content> 
	              		AND CC_CD IN (SELECT CC_CD FROM HLDC_SC_DEPT WHERE TM_CD IN (SELECT TM_CD FROM TABLE(HLDC_SC_DEPT_V_FUN2(:tmCd))))
	              	</#if> 
	              	<#if ccCd?has_content> 
	            	AND CC_CD = :ccCd
	            </#if>
	              	<#if custCd?has_content> 
	            	AND CUST_CD = :custCd
	            </#if>
				
		]]>
	</statement>
	
	<!-- 플러스채권 대체(을)를 삭제한다.(선수금대체 상세)  -->
	<statement name="batchDelete8" type="delete">
		<![CDATA[
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.batchDelete8 */
		
		--DELETE FROM SLA_ADVANCE_ALT_DETAIL  
		UPDATE SLA_ADVANCE_ALT_DETAIL
			SET RECD_STATUS = 'D',
				UUSER = 'SYSTEM-ST2',
				UDATE = SYSDATE
			WHERE 1=1
				AND ALT_DATE BETWEEN :month || '01' AND :month || '31'
				AND CUSER = 'SYSTEM-ST2'
				<#if tmCd?has_content> 
               		AND CC_CD IN (SELECT CC_CD FROM HLDC_SC_DEPT WHERE TM_CD IN (SELECT TM_CD FROM TABLE(HLDC_SC_DEPT_V_FUN2(:tmCd))))
               	</#if> 
               	<#if ccCd?has_content> 
	            	AND CC_CD = :ccCd
	            </#if>
               	<#if custCd?has_content> 
	            	AND CUST_CD = :custCd
	            </#if>
				
		]]>
	</statement>
	
	<!-- 플러스채권 대체(을)를 삭제한다.(선수금대체 마스터)  -->
	<statement name="batchDelete9" type="delete">
		<![CDATA[
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.batchDelete9 */
		
		--DELETE FROM SLA_ADVANCE_ALT_MST 
		UPDATE SLA_ADVANCE_ALT_MST
			SET RECD_STATUS = 'D',
				UUSER = 'SYSTEM-ST2',
				UDATE = SYSDATE
			WHERE 1=1
				AND ALT_DATE BETWEEN :month || '01' AND :month || '31'
				AND CUSER = 'SYSTEM-ST2'
				<#if tmCd?has_content> 
	              		AND CC_CD IN (SELECT CC_CD FROM HLDC_SC_DEPT WHERE TM_CD IN (SELECT TM_CD FROM TABLE(HLDC_SC_DEPT_V_FUN2(:tmCd))))
	              	</#if> 
	              	<#if ccCd?has_content> 
	            	AND CC_CD = :ccCd
	            </#if>
	              	<#if custCd?has_content> 
	            	AND CUST_CD = :custCd
	            </#if>
				
		]]>
	</statement>
	
	<!-- 플러스채권 대체(을)를 삭제한다.(채권 마스터)  -->
	<statement name="batchUpdate2" type="update">
		<![CDATA[
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.batchUpdate2 */
		UPDATE SLA_AR_MST A  
		SET   WITHDRAW_AMT = NVL((SELECT SUM(RECEIVE_AMT)
                                      FROM SLA_AR_RECEIVE_DETAIL AD
                                     WHERE AD.AR_NUM = A.AR_NUM
                                       AND AD.RECD_STATUS='L'
                                       AND AD.CUSER != 'SYSTEM-ST2'), 0) ,	                           
		       UUSER = 'SYSTEM-ST2',
		       UDATE = SYSDATE
		WHERE A.RECD_STATUS = 'L'
	    --AND  A.OCCUR_DATE BETWEEN :month || '01' AND :month || '31'
	    AND  A.MU_CD     = '2004'
		<#if tmCd?has_content> 
       		AND A.CC_CD IN (SELECT CC_CD FROM HLDC_SC_DEPT WHERE TM_CD IN (SELECT TM_CD FROM TABLE(HLDC_SC_DEPT_V_FUN2(:tmCd))))
       	</#if> 
       	<#if ccCd?has_content> 
         	AND A.CC_CD = :ccCd
        </#if>
           	<#if custCd?has_content> 
         	AND A.CUST_CD = :custCd
        </#if>
	    --AND  A.CC_CD NOT IN (SELECT CC_CD FROM HLDC_SC_DEPT WHERE TM_CD = 'CFG')   
	    AND  A.AR_NUM IN (SELECT AR.AR_NUM FROM SLA_AR_RECEIVE_DETAIL AR 
	    					WHERE AR.RECEIVE_DATE BETWEEN :month || '01' AND :month || '31'
								AND AR.CUSER = 'SYSTEM-ST2')
		
		]]>
	</statement>
	
	<!-- 플러스채권 대체(을)를 삭제한다.(선수금 마스터)  -->
	<statement name="batchUpdate3" type="update">
		<![CDATA[
		/*+ com.hwfs.sm.sar.dao.ReceiveMgntDAO.batchUpdate3 */
		UPDATE SLA_ADVANCE_MST A  
		SET   APPLY_AMT =  NVL((SELECT  NVL(SUM(DD.APPLY_AMT),0)
				                FROM    SLA_ADVANCE_ALT_DETAIL DD
				                WHERE   DD.RECD_STATUS = 'L'
				                AND     DD.ADVANCE_NUM = A.ADVANCE_NUM
				                AND     DD.CUSER != 'SYSTEM-ST2'
				            ),0) ,	                           
		       UUSER = 'SYSTEM-ST2',
		       UDATE = SYSDATE
		WHERE A.RECD_STATUS = 'L'
	    --AND  A.OCCUR_DATE BETWEEN :month || '01' AND :month || '31'
	    AND  A.MU_CD     = '2004'
		<#if tmCd?has_content> 
       		AND A.CC_CD IN (SELECT CC_CD FROM HLDC_SC_DEPT WHERE TM_CD IN (SELECT TM_CD FROM TABLE(HLDC_SC_DEPT_V_FUN2(:tmCd))))
       	</#if> 
       	<#if ccCd?has_content> 
         	AND A.CC_CD = :ccCd
        </#if>
           	<#if custCd?has_content> 
         	AND A.CUST_CD = :custCd
        </#if>
	    --AND  A.CC_CD NOT IN (SELECT CC_CD FROM HLDC_SC_DEPT WHERE TM_CD = 'CFG')   
	    AND  A.ADVANCE_NUM IN (SELECT AD.ADVANCE_NUM FROM SLA_ADVANCE_ALT_DETAIL AD 
	    					WHERE AD.ALT_DATE BETWEEN :month || '01' AND :month || '31'
								AND AD.CUSER = 'SYSTEM-ST2')
		
		]]>
	</statement>

</hqml>
