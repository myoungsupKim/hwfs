<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="rc.rcg.couponCreateDAO">
	<desc>쿠폰 생성 관리 HQML Query</desc>

	<!-- 쿠폰 생성 관리 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.rc.rcg.dao.CouponCreateDAO.selectList */
		<![CDATA[
		SELECT A.COUPON_KIND_CD
		     , A.COUPON_KIND_NM
		     , B.DELIVER_DATE
		     , B.DELIVER_SEQ
		     , B.COUPON_NUM_FR
		     , B.COUPON_NUM_TO
		     , B.PUBLISH_DATE
		     , B.COUPON_PROC_USER
		     , (SELECT NM_KOR FROM  HR_PERSONAL A, SCC_CC B WHERE  B.CC_CD = A.CC_CD AND SABUN = B.COUPON_PROC_USER) AS COUPON_PROC_USER_NM
		     , B.COUPON_CREATION_YN
		     , B.COUPON_CREATION_DATE 
		     , A.COUPON_KIND_GRP_CD
		     , GFN_SCC_CODENAME_FUN('POS_TYPE_CD', A.COUPON_KIND_GRP_CD) AS COUPON_KIND_GRP_NM
		     , NVL(B.PUBLISH_CLASS, DECODE(A.FOC_CLASS, '1','11','22')) AS PUBLISH_CLASS
		     , A.COUPON_TYPE
		     , GFN_SCC_CODENAME_FUN('COUPON_TYPE', A.COUPON_TYPE) AS COUPON_TYPE_NM
		     , A.COUPONNUM_CREATION_CLASS
		     , GFN_SCC_CODENAME_FUN('COUPONNUM_CREATION_CLASS', A.COUPONNUM_CREATION_CLASS) AS COUPONNUM_CREATION_CLASS_NM
		     , A.VAT_CD
		     , GFN_SCC_CODENAME_FUN('VAT_CD', A.VAT_CD) AS VAT_CD_NM
		     , NVL(B.CC_CD, A.CC_CD) AS CC_CD
		     , (SELECT  CC_NM FROM SCC_CC WHERE CC_CD = NVL(B.CC_CD, A.CC_CD)) AS CC_NM
		     , B.MU_CD
		     , B.COUPON_PUBLISH_PCNT
		     , B.PUBLISH_REASON
		     , B.RECD_STATUS
		     , B.CUSER
		     , B.UUSER
		     , TO_NUMBER(SUBSTR(COUPON_NUM_TO,-7)) AS MAX_COUPON_NUM_SEQ
		     , (SELECT COUNT(*) FROM SLA_COUPON_NUM_MST WHERE COUPON_STATUS <> '1' AND COUPON_NUM BETWEEN B.COUPON_NUM_FR AND B.COUPON_NUM_TO AND COUPON_KIND_CD = B.COUPON_KIND_CD ) DEL_CNT
		  FROM SLA_COUPON_KIND_MST A
		     , SLA_COUPON_PUBLISH_MGMT B 
		WHERE 1=1 
		  AND A.COUPON_KIND_CD=B.COUPON_KIND_CD
		  AND A.RECD_STATUS = 'L'
		  AND B.RECD_STATUS = 'L'
		<#if couponKindCd?has_content>	AND    A.COUPON_KIND_CD = :couponKindCd	</#if>
		<#if couponProcUser?has_content>AND    B.COUPON_PROC_USER = :couponProcUser</#if>
		<#if couponCreationYn?has_content>AND    B.COUPON_CREATION_YN = :couponCreationYn</#if>
		<#if couponCreationDateFr?has_content>AND    TO_CHAR(COUPON_CREATION_DATE, 'YYYYMMDD') >= :couponCreationDateFr</#if>
		<#if couponCreationDateTo?has_content>AND    TO_CHAR(COUPON_CREATION_DATE, 'YYYYMMDD') <= :couponCreationDateTo</#if>
		ORDER BY B.COUPON_CREATION_DATE ASC
		]]>
	</statement>

	<!-- 쿠폰 생성 관리(을)를 등록한다. -->
	<statement name="insert" type="insert">
		/*+ com.hwfs.rc.rcg.dao.CouponCreateDAO.insert */
		<![CDATA[
		INSERT INTO SLA_COUPON_PUBLISH_MGMT 
		(
			DELIVER_DATE
			, DELIVER_SEQ
			, COUPON_KIND_CD
			, MU_CD
			, CC_CD
			, PUBLISH_CLASS
			, COUPON_NUM_FR
			, COUPON_NUM_TO
			, COUPON_PUBLISH_PCNT
			, COUPON_PROC_USER
			, COUPON_KIND_GRP_CD
			, PUBLISH_DATE
			, PUBLISH_REASON
			, COUPON_CREATION_YN
			, COUPON_CREATION_DATE
			, RECD_STATUS
			, CUSER
			, CDATE
			, UUSER
			, UDATE
		)
		VALUES
		(
			     :deliverDate
		       , (SELECT NVL(MAX(DELIVER_SEQ),0)+1 FROM SLA_COUPON_PUBLISH_MGMT WHERE DELIVER_DATE=:deliverDate AND COUPON_KIND_CD=:couponKindCd)--:deliverSeq
		       , :couponKindCd
			   , <#if muCd?has_content> :muCd <#else> null </#if>
			   , <#if ccCd?has_content> :ccCd <#else> null </#if>
			   , <#if publishClass?has_content> :publishClass <#else> null </#if>
			   , <#if couponNumFr?has_content> :couponNumFr <#else> null </#if>
			   , <#if couponNumTo?has_content> :couponNumTo <#else> null </#if>
			   , <#if couponPublishPcnt?has_content> :couponPublishPcnt <#else> null </#if>
		       , :couponProcUser
		       , :couponKindGrpCd
			   , <#if publishDate?has_content> :publishDate <#else> null </#if>
		       , :publishReason
			   , <#if couponCreationYn?has_content> :couponCreationYn <#else> 'N' </#if>
			   , <#if couponCreationDate?has_content> :couponCreationDate <#else> null </#if>
			   , <#if recdStatus?has_content> :recdStatus <#else> 'L' </#if>
		       , :loginSabun
		       , SYSDATE
		       , :loginSabun
		       , SYSDATE
		)
		]]>
	</statement>
	
	<!-- 쿠폰 생성 관리(을)를 수정한다. -->
	<statement name="update" type="update">
		/*+ com.hwfs.rc.rcg.dao.CouponCreateDAO.update */
		<![CDATA[
		UPDATE SLA_COUPON_PUBLISH_MGMT 
		SET    PUBLISH_DATE = :publishDate
		    , PUBLISH_REASON = :publishReason
		    , MU_CD = :muCd
		    , CC_CD = :ccCd
		    , COUPON_PROC_USER = :couponProcUser
			, PUBLISH_CLASS = <#if publishClass?has_content> :publishClass <#else> null </#if>
			, COUPON_NUM_FR = <#if couponNumFr?has_content> :couponNumFr <#else> null </#if>
			, COUPON_NUM_TO = <#if couponNumTo?has_content> :couponNumTo <#else> null </#if>
			, COUPON_PUBLISH_PCNT = <#if couponPublishPcnt?has_content> :couponPublishPcnt <#else> null </#if>
			, COUPON_CREATION_YN = :couponCreationYn
			, COUPON_CREATION_DATE = <#if couponCreationYn == "Y"> SYSDATE <#else> null </#if>
		    , UUSER = :loginSabun
		    , UDATE = SYSDATE
		WHERE  COUPON_KIND_CD = :couponKindCd
			AND DELIVER_DATE = :deliverDate
			AND DELIVER_SEQ = :deliverSeq
		]]>
	</statement>



	<!-- 쿠폰 생성 관리(을)를 삭제한다. -->
	<statement name="delete" type="update">
		/*+ com.hwfs.rc.rcg.dao.CouponCreateDAO.delete */
		<![CDATA[
		UPDATE SLA_COUPON_PUBLISH_MGMT
		SET RECD_STATUS = 'D' /*	상태 D : 삭제 	*/
		WHERE  COUPON_KIND_CD = :couponKindCd
			AND DELIVER_DATE = :deliverDate
			AND DELIVER_SEQ = :deliverSeq
		]]>
	</statement>

	<!-- 쿠폰 생성 관리(을)를 사용된 쿠폰 카운트를 확인한다. -->
	<statement name="delCnt" type="select">
		/*+ com.hwfs.rc.rcg.dao.CouponCreateDAO.delCnt */
		<![CDATA[
		SELECT (SELECT COUNT(*) FROM SLA_COUPON_NUM_MST WHERE COUPON_STATUS <> '1' AND COUPON_NUM BETWEEN B.COUPON_NUM_FR AND B.COUPON_NUM_TO AND COUPON_KIND_CD = B.COUPON_KIND_CD ) DEL_CNT
		  FROM SLA_COUPON_KIND_MST A
		     , SLA_COUPON_PUBLISH_MGMT B 
		WHERE 1=1 
		  AND A.COUPON_KIND_CD=B.COUPON_KIND_CD
		  AND A.RECD_STATUS = 'L'
          AND B.COUPON_KIND_CD = :couponKindCd
		  AND B.DELIVER_DATE = :deliverDate
		  AND B.DELIVER_SEQ = :deliverSeq
		ORDER BY B.COUPON_CREATION_DATE ASC
		]]>
	</statement>

	<!-- 쿠폰 생성 관리(을)를 삭제후 쿠폰을 폐기처리 한다. -->
	<statement name="couponStatusUpdate" type="update">
		/*+ com.hwfs.rc.rcg.dao.CouponCreateDAO.couponStatusUpdate */
		<![CDATA[
	          UPDATE SLA_COUPON_NUM_MST
          SET COUPON_STATUS = '8'
          ,DISUSE_STATUS = '1'
          WHERE COUPON_NUM IN (SELECT B.COUPON_NUM FROM SLA_COUPON_PUBLISH_MGMT A , SLA_COUPON_NUM_MST B
                                WHERE A.COUPON_KIND_CD = B.COUPON_KIND_CD
                                AND A.COUPON_KIND_CD = :couponKindCd
                                AND A.DELIVER_DATE = :deliverDate
                                AND A.DELIVER_SEQ = :deliverSeq
                                AND B.COUPON_NUM BETWEEN A.COUPON_NUM_FR AND A.COUPON_NUM_TO
                                AND B.COUPON_STATUS = '1'
                                )	 
		]]>
	</statement>
	
	
	<!-- 쿠폰 생성 관리(을)를 번호를 생성 한다. -->
	<statement name="create" type="insert">
		/*+ com.hwfs.rc.rcg.dao.CouponCreateDAO.create */
		<![CDATA[
		INSERT INTO SLA_COUPON_NUM_MST
		(
		 COUPON_NUM,
		 COUPON_KIND_CD,
		 COUPON_AMT,
		 COUPON_NUM_SEQ,
		 START_DATE,
		 END_DATE,
		 MU_CD,
		 CC_CD,
		 ACCT_CD,
		 SUPPLY_AMT,
		 VAT_INCLUDE_YN,
		 VAT_CD,
		 VAT_AMT,
		 NEWHGHT_UPJANG,
		 SELF_BU_CLASS_CD,
		 SALS_VAT_ACCT,
		 ADVANCE,
		 FOC_CLASS,
		 COUPON_TYPE,
		 DISCNT_CLASS,
		 DISCNT_TYPE,
		 DISCNT_RATE,
		 DISCNT_AMT,
		 COUPON_CLASS,
		 COUPON_STATUS,
		 DISUSE_STATUS,
		 REF_NUM,
		 PUBLISH_DATE,
		 DPLY_DATE,
		 SALE_DATE,
		 USE_DATE,
		 USE_AMT,
		 REFUND_DATE,
		 SALS_UPJANG_CD,
		 ACCT_TYPE,
		 COUPON_NUM_OF_TIMES,
		 USE_NUM_OF_TIMES,
		 INSIDE_USE_YN,
		 PACKAGE_DESC,
		 COUPON_PROC_NUM,
		 ADVANCE_NUM,
		 COUPON_DISUSE_BEFORE_STATUS,
		 COUPON_SAL_AGED,
		 USE_YN,
		 CUSER,
		 CDATE,
		 UUSER,
		 UDATE
		) 
        SELECT
			 SUBSTR(COUPON_NUM_FR,1,6) || SUBSTR('0000000' || TO_CHAR(COUPON_RANDOM), -7)
        	 , A.COUPON_KIND_CD
             , A.COUPON_AMT
             , COUPON_RANDOM
             , B.PUBLISH_DATE
             , TO_CHAR(ADD_MONTHS(TO_DATE(B.PUBLISH_DATE, 'YYYYMMDD'), A.VALID_MTS), 'YYYYMMDD')-1 AS END_DATE
             , B.MU_CD
             , B.CC_CD
             , A.ADVANCE_ACCT AS ACCT_CD									--선수금 계정코드
             , DECODE(A.VAT_CD, '10', ROUND(A.COUPON_AMT / 1.1), '20' , ROUND(A.COUPON_AMT / 1.1), A.COUPON_AMT) AS SUPPLY_AMT 	-- 공급가액
             , A.VAT_INCLUDE_YN
             , A.VAT_CD
             , DECODE(A.VAT_CD, '10', ROUND(A.COUPON_AMT - A.COUPON_AMT / 1.1), '20', ROUND(A.COUPON_AMT - A.COUPON_AMT / 1.1), 0) AS VAT_AMT 	-- 부가세금액
             , (SELECT DISTINCT VAT_UPJANG FROM ST_UPJANG WHERE CC_CD = B.CC_CD) AS NEWHGHT_UPJANG -- 신고 사업장				확인
             , NULL AS SELF_BU_CLASS_CD 	-- 자사구분코드				사용안함
             , A.SALS_VAT_ACCT
             , 0  AS ADVANCE	--선수금액
             , A.FOC_CLASS
             , A.COUPON_TYPE
             , A.DISCNT_CLASS
             , A.DISCNT_TYPE
             , A.DISCNT_RATE
             , A.DISCNT_AMT
             , NVL(A.COUPON_CLASS,'1') AS COUPON_CLASS
             , '1' AS COUPON_STATUS
             , NULL AS DISUSE_STATUS
             , '' AS REF_NUM			--참조번호
             , B.PUBLISH_DATE			-- 발행일자
             , NULL AS DPLY_DATE	--배포일자
             , NULL AS SALE_DATE	--판매일자
             , NULL AS USE_DATE		--사용일자
             , 0 AS USE_AMT				--사용금액
             , NULL AS REFUND_DATE	--환불일
             , NULL AS SALS_UPJANG_CD	-- 매출업장코드
             , NULL AS ACCT_TYPE		--계정유형
             , 0 AS COUPON_NUM_OF_TIMES --쿠폰횟수
             , 0 AS USE_NUM_OF_TIMES	--사용횟수
             , A.INSIDE_USE_YN		--내부사용여부
             , A.PACKAGE_DESC		-- 패키지 내역
             , NULL AS COUPON_PROC_NUM  --쿠폰처리번호
             , NULL AS ADVANCE_NUM		--선수금 번호
             , NULL AS COUPON_DISUSE_BEFORE_STATUS 	--쿠폰 페기전상태
             , NULL AS COUPON_SAL_AGED		--쿠폰 판매경로
             , 'Y' AS USE_YN				--사용여부
             , :loginSabun AS CUSER
             , SYSDATE
             , :loginSabun AS UUSER
             , SYSDATE
		  FROM SLA_COUPON_KIND_MST A
		     , SLA_COUPON_PUBLISH_MGMT B
             , (SELECT LEVEL + TO_NUMBER(SUBSTR(:couponNumFr,-7))-1 COUPON_RANDOM FROM dual
				CONNECT  BY LEVEL < :couponPublishPcnt+1) C
		WHERE 1=1
		  AND A.COUPON_KIND_CD=B.COUPON_KIND_CD
          AND A.COUPON_KIND_CD = :couponKindCd AND DELIVER_DATE = :deliverDate AND DELIVER_SEQ = :deliverSeq
		]]>
	</statement>
	
	
	<!-- 쿠폰 미생성된 중복 번호를 체크 한다. -->
	<statement name="selectCouponNumCount" type="select">
		/*+ com.hwfs.rc.rcg.dao.CouponCreateDAO.selectCouponNumCount */
		<![CDATA[
 			SELECT 
		         COUNT(*) AS CREATION_COUNT
		    FROM SLA_COUPON_PUBLISH_MGMT 
		    WHERE SUBSTR(COUPON_NUM_FR,1,6) = (SELECT CODE FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'COUPON_PUBLISH_CODE' AND ROWNUM=1 AND USE_YN='Y') || SUBSTR(TO_CHAR(SYSDATE,'YYYY'),3,2) || :publishClass
            AND COUPON_CREATION_YN = 'N'
            AND RECD_STATUS = 'L'
            <#if deliverSeq?has_content>
	            AND COUPON_KIND_CD != :couponKindCd
				AND DELIVER_DATE != :deliverDate
				AND DELIVER_SEQ != :deliverSeq
            </#if>
		]]>
	</statement>	

	<!-- 쿠폰 번호를 조회 한다. -->
	<statement name="selectCouponNum" type="select">
		/*+ com.hwfs.rc.rcg.dao.CouponCreateDAO.selectCouponNum */
		<![CDATA[
		SELECT 
			((SELECT CODE FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'COUPON_PUBLISH_CODE' AND ROWNUM=1 AND USE_YN='Y') || SUBSTR(TO_CHAR(SYSDATE,'YYYY'),3,2) || :publishClass) || SUBSTR('0000000' || TO_CHAR(MAX_COUPON_NUM_SEQ + 1), -7) AS COUPON_NUM_FR
			, ((SELECT CODE FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'COUPON_PUBLISH_CODE' AND ROWNUM=1 AND USE_YN='Y') || SUBSTR(TO_CHAR(SYSDATE,'YYYY'),3,2) || :publishClass) || SUBSTR('0000000' || TO_CHAR(MAX_COUPON_NUM_SEQ + :couponPublishPcnt), -7) AS COUPON_NUM_TO
			, (MAX_COUPON_NUM_SEQ + :couponPublishPcnt) AS MAX_COUPON_NUM_SEQ
		FROM 
		   ( SELECT 
		         TO_NUMBER(NVL(MAX(REPLACE(COUPON_NUM, (SELECT CODE FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'COUPON_PUBLISH_CODE' AND ROWNUM=1 AND USE_YN='Y') || SUBSTR(TO_CHAR(SYSDATE,'YYYY'),3,2) || :publishClass)),0)) AS MAX_COUPON_NUM_SEQ
		    FROM SLA_COUPON_NUM_MST 
		    WHERE SUBSTR(COUPON_NUM,1,6) = (SELECT CODE FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'COUPON_PUBLISH_CODE' AND ROWNUM=1 AND USE_YN='Y') || SUBSTR(TO_CHAR(SYSDATE,'YYYY'),3,2) || :publishClass)
		]]>
	</statement>	
	
	<!-- 쿠폰 번호가 중복인지 조회 한다. -->
	<statement name="selectCouponCnt" type="select">
		<![CDATA[
		/*+ com.hwfs.rc.rcg.dao.CouponCreateDAO.selectCouponCnt */
		
		SELECT 
			count(*) as cnt
		FROM SLA_COUPON_NUM_MST
		    WHERE COUPON_NUM BETWEEN :couponNumFr AND :couponNumTo
		]]>
	</statement>	
	
</hqml>
