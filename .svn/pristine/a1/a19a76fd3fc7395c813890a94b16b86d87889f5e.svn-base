<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="rc.bms.fncDiaryListDAO">
	<desc>Function Diary</desc>

	<!-- DATA를 조회한다. -->
	<statement name="selectMonthStartEndDay" type="select">
	/*+ com.hwfs.rc.bms.fncDiaryListDAO.selectMonthStartEndDay */
	
		<![CDATA[
		   SELECT TO_CHAR(TO_DATE(TO_CHAR(TRUNC(TO_DATE(:monthly,'YYYY-MM-DD'),'MONTH'),'YYYYMMDD'), 'YYYYMMDD'), 'YYYYMMDD') MON_START_DT
		        ,TO_CHAR(TO_DATE(TO_CHAR(TRUNC(ADD_MONTHS(TO_DATE(:monthly,'YYYY-MM-DD'),1),'MONTH'),'YYYYMMDD'), 'YYYYMMDD')-1, 'YYYYMMDD') MON_END_DT
		        
		  FROM  DUAL
		
		]]>
	</statement>
 
	<statement name="selectList" type="select">
	/*+ com.hwfs.rc.bms.fncDiaryListDAO.selectList */
	
		<![CDATA[
		   
		WITH  TTB_BANQ AS (SELECT BANQ.CATERCHF_NM AS BANQ_NM, BANQ.OUTLET_CD,  BANQ.CATERCHF_CD AS MENU_CD FROM BMS_CATERCHF_MST BANQ WHERE BANQ.CLASS_CD  ='10' 
							<#if outletCd?has_content >     AND BANQ.OUTLET_CD  = :outletCd  </#if>)         --연회룸예약현황
			, TTB_LAST AS (
            	 SELECT MENU.OUTLET_CD, MENU.MENU_CD, MDAY.CDAY AS DIARY_DATE, TO_CHAR(SUBSTR(MDAY.CDAY,7,2)) AS DIARY_DAY  , COUNT(MAST.RESERV_NUM) AS CNT
				 FROM   BMS_RESERV_MST MAST
                 INNER JOIN BMS_RESERV_MENU  MENU ON MENU.FNB_CLASS = 'R'  AND MENU.RESERV_NUM = MAST.RESERV_NUM    AND  MENU.USE_YN ='Y'  --연회룸예약현황
                 INNER JOIN (SELECT TO_CHAR(TO_DATE(:dateTo, 'YYYYMMDD') - ROWNUM + 1, 'YYYYMMDD') AS CDAY
                                  FROM DUAL A
                                  CONNECT BY LEVEL <= TO_DATE(:dateTo, 'YYYYMMDD') - TO_DATE(:dateFr, 'YYYYMMDD') + 1
                                ) MDAY ON MDAY.CDAY BETWEEN MENU.STR_DATE AND MENU.END_DATE
                 
					 INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
			                       FROM   SLE_OUTLET_MST MST
			                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
			                                     <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
			                                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
			          			 ) OUTLET ON OUTLET.OUTLET_CD =  MAST.OUTLET_CD 
				     
                     INNER JOIN BMS_AM_MST      SMGR ON SMGR.AM_CD = MAST.AM_CD
				     INNER JOIN SCC_COMMON_CODE CODE ON CODE.GROUP_CODE = 'BMS_0005' AND CODE.CODE = MAST.RESERV_CD	    --행사형태
				     INNER JOIN SCC_COMMON_CODE SANG ON SANG.GROUP_CODE = 'BMS_0001' AND SANG.CODE = MAST.RESERV_STATUS	--예약상태
				     INNER JOIN SCC_COMMON_CODE KIND ON KIND.GROUP_CODE = 'BMS_0002' AND KIND.CODE = MAST.KIND_CD       --예약종류
                     INNER JOIN SCC_COMMON_CODE STIM ON STIM.GROUP_CODE = 'BMS_0015' AND STIM.CODE = MENU.STR_TIME      --시작시간
					 INNER JOIN SCC_COMMON_CODE ETIM ON ETIM.GROUP_CODE = 'BMS_0015' AND ETIM.CODE = MENU.END_TIME      --종료시간
 					
				WHERE MAST.USE_YN = 'Y'
                AND (   ( MAST.STR_DATE BETWEEN :dateFr       AND :dateTo        OR MAST.END_DATE BETWEEN  :dateFr      AND   :dateTo )
                     OR (  :dateFr      BETWEEN MAST.STR_DATE AND MAST.END_DATE  OR :dateTo       BETWEEN MAST.STR_DATE AND MAST.END_DATE ))
                     
				<#if amCd?has_content >         AND MAST.AM_CD      = :amCd      </#if>  --am
				<#if kindCd?has_content >       AND MAST.KIND_CD    = :kindCd    </#if>  --예약종류 (1:연회,2:외딩,3:케이터링)
				<#if outletCd?has_content >     AND MAST.OUTLET_CD  = :outletCd  </#if>  --사업장 
				<#if reservStatus?has_content > AND :reservStatus   LIKE '%' || MAST.RESERV_STATUS || '%' </#if> --예약상태(1:예약,2:확정,3:종료,4:취소)            
                 GROUP BY MENU.OUTLET_CD, MENU.MENU_CD,MDAY.CDAY 
			)  
			SELECT  TT.OUTLET_CD, TT.MENU_CD, TT.BANQ_NM
			        ,NVL(MAX(DECODE(DIARY_DAY,'01',CNT)), NULL) AS "DT01"
			        ,NVL(MAX(DECODE(DIARY_DAY,'02',CNT)), NULL) AS "DT02"
                    ,NVL(MAX(DECODE(DIARY_DAY,'03',CNT)), NULL) AS "DT03"
                    ,NVL(MAX(DECODE(DIARY_DAY,'04',CNT)), NULL) AS "DT04"
                    ,NVL(MAX(DECODE(DIARY_DAY,'05',CNT)), NULL) AS "DT05"
                    ,NVL(MAX(DECODE(DIARY_DAY,'06',CNT)), NULL) AS "DT06"
                    ,NVL(MAX(DECODE(DIARY_DAY,'07',CNT)), NULL) AS "DT07"
                    ,NVL(MAX(DECODE(DIARY_DAY,'08',CNT)), NULL) AS "DT08"
                    ,NVL(MAX(DECODE(DIARY_DAY,'09',CNT)), NULL) AS "DT09"
                    ,NVL(MAX(DECODE(DIARY_DAY,'10',CNT)), NULL) AS "DT10"
                    ,NVL(MAX(DECODE(DIARY_DAY,'11',CNT)), NULL) AS "DT11"
                    ,NVL(MAX(DECODE(DIARY_DAY,'12',CNT)), NULL) AS "DT12"
                    ,NVL(MAX(DECODE(DIARY_DAY,'13',CNT)), NULL) AS "DT13"
                    ,NVL(MAX(DECODE(DIARY_DAY,'14',CNT)), NULL) AS "DT14"
                    ,NVL(MAX(DECODE(DIARY_DAY,'15',CNT)), NULL) AS "DT15"
                    ,NVL(MAX(DECODE(DIARY_DAY,'16',CNT)), NULL) AS "DT16"
                    ,NVL(MAX(DECODE(DIARY_DAY,'17',CNT)), NULL) AS "DT17"
                    ,NVL(MAX(DECODE(DIARY_DAY,'18',CNT)), NULL) AS "DT18"
                    ,NVL(MAX(DECODE(DIARY_DAY,'19',CNT)), NULL) AS "DT19"
                    ,NVL(MAX(DECODE(DIARY_DAY,'20',CNT)), NULL) AS "DT20"
                    ,NVL(MAX(DECODE(DIARY_DAY,'21',CNT)), NULL) AS "DT21"
                    ,NVL(MAX(DECODE(DIARY_DAY,'22',CNT)), NULL) AS "DT22"
                    ,NVL(MAX(DECODE(DIARY_DAY,'23',CNT)), NULL) AS "DT23"
                    ,NVL(MAX(DECODE(DIARY_DAY,'24',CNT)), NULL) AS "DT24"
                    ,NVL(MAX(DECODE(DIARY_DAY,'25',CNT)), NULL) AS "DT25"
                    ,NVL(MAX(DECODE(DIARY_DAY,'26',CNT)), NULL) AS "DT26"
                    ,NVL(MAX(DECODE(DIARY_DAY,'27',CNT)), NULL) AS "DT27"
                    ,NVL(MAX(DECODE(DIARY_DAY,'28',CNT)), NULL) AS "DT28"
                    ,NVL(MAX(DECODE(DIARY_DAY,'29',CNT)), NULL) AS "DT29"
                    ,NVL(MAX(DECODE(DIARY_DAY,'30',CNT)), NULL) AS "DT30"
                    ,NVL(MAX(DECODE(DIARY_DAY,'31',CNT)), NULL) AS "DT31"
			FROM     TTB_LAST  TL 
			        ,TTB_BANQ  TT
			WHERE    TT.OUTLET_CD = TL.OUTLET_CD(+)
              AND    TT.MENU_CD = TL.MENU_CD(+)
			GROUP BY TT.OUTLET_CD, TT.MENU_CD, TT.BANQ_NM
			ORDER BY TT.OUTLET_CD, TT.MENU_CD, TT.BANQ_NM
            
         
		   
			 
		
		]]>
	</statement>
 
</hqml>
		