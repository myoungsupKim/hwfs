<?xml version="1.0" encoding="euc-kr"?>
<query>
	<type>select</type>
	<description><![CDATA[--레시피검색및 등록(기간표준)
식단구성레시피조]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
<![CDATA[
SELECT A.TERM_MENU_CD,
       B.RECIPE_CD,
       B.DISH_INFO,
       B.RECIPE_SEQ,
       (SELECT RECIPE_NAME FROM FMR_STD_RECIPE_MST WHERE RECIPE_CD=B.RECIPE_CD) RECIPE_NAME,
--       (SELECT RECIPE_COLOR FROM FMR_STD_RECIPE_MST WHERE RECIPE_CD=B.RECIPE_CD) RECIPE_COLOR_CODE,
       (SELECT SET1 FROM SCC_COMMON_CODE WHERE GROUP_CODE='FS0007' AND CODE=(SELECT RECIPE_COLOR
                                                                                    FROM FMR_STD_RECIPE_MST
                                                                                    WHERE RECIPE_CD=B.RECIPE_CD) 
	   ) RECIPE_COLOR,
       SUM(ROUND(C.NEED_QTY * (NVL(D.MARGIN_PRICE,0) / E.KG_CONVERT_RATE / 1000))) RECIPE_COST,				--1인원가
       --개별 자재별 영양가
       SUM(NVL(ROUND((F.CAL     * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0))	CAL,    	--"열량",
       SUM(NVL(ROUND((F.WATER   * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0))	WATER,  	--"수분",
       SUM(NVL(ROUND((F.PROT    * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0))	PROT,   	--"단백질",
       SUM(NVL(ROUND((F.FAT     * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0))	FAT,    	--"지질",
       SUM(NVL(ROUND((F.CARBO   * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0))	CARBO,  	--"당질",
       SUM(NVL(ROUND((F.FIBER   * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0))	FIBER,  	--"섬유",
       SUM(NVL(ROUND((F.ASH     * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0))	ASH,    	--"회분",
       SUM(NVL(ROUND((F.CA      * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0))	CA,     	--"칼슘",
       SUM(NVL(ROUND((F.P       * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0))	P,      	--"인",
       SUM(NVL(ROUND((F.FE      * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0))	FE,     	--"철",
       SUM(NVL(ROUND((F.NA      * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0))	NA,     	--"나트륨",
       SUM(NVL(ROUND((F.K       * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0))	K,      	--"칼륨",
       SUM(NVL(ROUND((F.VITA_A  * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0))	VITA_A, 	--"비타민A",
       SUM(NVL(ROUND((F.RETIN   * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0))	RETIN,  	--"레티놀",
       SUM(NVL(ROUND((F.B_CAROT * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0))	B_CAROT,	--"B_카르틴",
       SUM(NVL(ROUND((F.THIA    * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0))	THIA,   	--"비타민B1",
       SUM(NVL(ROUND((F.RIBO    * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0))	RIBO,   	--"비타민B2",
       SUM(NVL(ROUND((F.NIACIN  * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0))	NIACIN, 	--"나이아신",
       SUM(NVL(ROUND((F.VITA_C  * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0))	VITA_C, 	--"비타민C",
       SUM(NVL(ROUND((F.CHOLE   * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0))	CHOLE      	--"콜레스테롤"
FROM   FMM_TERM_MENU_MST A,
       FMM_TERM_MENU_RECIPE B,
       --FMR_STD_RECIPE_ITEM C,
       FMM_TERM_MENU_RECIPE_ITEM C,	   	--  추천식단레시피_상세 테이블 추가
       FMI_STD_PRICE       D,
       (
       SELECT ITEM_CODE,
              ITEM_NAME,
              ITEM_SIZE,
              PO_UOM,
              KG_CONVERT_RATE,
              ORIGIN_NAT
         FROM HLDC_PO_ITEM_MST
        WHERE ITEM_CLASS1 = 'F'
       ) E,
       FSI_ITEM_NUT F,
	   /*
       (
       SELECT ITEM_CODE,
                (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0033' AND CODE = ITEM_FEATURE) AS FEATURE_NAME
       FROM FSI_ITEM_FEATURE
       WHERE (ITEM_CODE, CDATE) IN
                                (
                                 SELECT ITEM_CODE, MAX(CDATE) AS CDATE
                                 FROM FSI_ITEM_FEATURE
                                 WHERE (1=1)
                                 AND  (CENTER_CODE, CUSTCD, ITEM_CODE, APPLY_DATE) IN
                                                                                   (
                                                                                    SELECT CENTER_CODE, CUSTCD, ITEM_CODE, MAX(APPLY_DATE) AS APPLY_DATE
                                                                                    FROM  FSI_ITEM_FEATURE
                                                                                    WHERE  CENTER_CODE  = '300001'
                                                                                    AND TO_CHAR(SYSDATE,'YYYYMMDD')  BETWEEN APPLY_DATE AND TO_CHAR(ADD_MONTHS(TO_DATE(APPLY_DATE,'YYYYMMDD'),1)-1,'YYYYMMDD') 
                                                                                    GROUP BY CENTER_CODE, CUSTCD, ITEM_CODE
                                                                                    )
                                 GROUP BY ITEM_CODE
                                 )
       ) G,
	   */
       FMR_STD_RECIPE_MST H
WHERE  A.TERM_MENU_CD=B.TERM_MENU_CD
AND     A.TERM_MENU_CD=C.TERM_MENU_CD
AND    A.MENU_CLASS=#MENU_CLASS#
AND    A.COST_TYPE=#COST_TYPE#
AND    A.MENU_TYPE=#MENU_TYPE#
AND    A.MEAL=#MEAL#
AND    A.CORNER=#CORNER#
AND    A.MENU_DATE=#MENU_DATE#
AND    B.RECIPE_CD=C.RECIPE_CD
AND    C.ITEM_CODE=D.ITEM_CODE(+)
AND    C.ITEM_CODE=E.ITEM_CODE(+)
AND    C.ITEM_CODE=F.ITEM_CODE(+)
--AND    C.ITEM_CODE=G.ITEM_CODE(+)
AND    B.RECIPE_CD=H.RECIPE_CD
GROUP BY A.TERM_MENU_CD,B.RECIPE_CD,B.DISH_INFO,B.RECIPE_SEQ
ORDER BY B.RECIPE_CD	]]></statement>
	<input default-name="ds_Menu">
	</input>
	<output default-name="ds_Menu">
	</output>
</query>
