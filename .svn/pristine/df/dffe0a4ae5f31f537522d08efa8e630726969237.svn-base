<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>

SELECT NVL((SELECT NM_KOR FROM HR_PERSONAL@FCUS_TO_HLDC WHERE SABUN = A.PART_SALES_SABUN),' 담당자없음') AS PART_SALES_SABUNNM,
       A.MAIN_UPJANG,
       (SELECT UPJANGNM_DISP FROM FMS_UPJANG@FCUS_TO_FSUS WHERE UPJANG = A.MAIN_UPJANG) MAIN_UPJANGNM,
       V.UPJANG,
       (SELECT UPJANGNM FROM SCO_UPJANG_MST_V@FCUS_TO_FSUS WHERE UPJANG = V.UPJANG) UPJANGNM,      
       SUBSTR(V.BOND_DATE,1,4)||'-'||SUBSTR(V.BOND_DATE,5,2)||'-'||SUBSTR(V.BOND_DATE,7,2) BOND_DATE,
       V.ADDDATE_TIME,
       V.RCP_AMT1,
       V.RCP_AMT1 RCP_AMT1FORSUM,
       V.GUBUN,
       V.ACCTNM,
       V.VIRACTNUM,       
       A.MAIN_UPJANG||'-'||V.UPJANG PL_CD,
       '1' PL_UP_CD,
       '0' BL_SHOW,
       3 LEVEL_NO,
       '+' BL_PLUS
  FROM (  
        SELECT /*+ LEADING(C V1) USE_HASH(V1) */ C.UPJANG,
               C.RECEIPT_DATE                  BOND_DATE,
               C.AMOUNT RCP_AMT1,
               DECODE(C.AUTO_GUBUN, 'N', '수기입금', 'Y', '가상계좌입금') GUBUN,
               (SELECT ACCTNM6 FROM ST_ACCOUNT@FCUS_TO_HLDC WHERE ACCTCD = C.ACCTCD) ACCTNM,
               V1.VIRACTNUM,
          	   DECODE(C.AUTO_GUBUN, 'N', TO_CHAR(C.CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS'), 'Y', SUBSTR(V1.ADDDATE, 1, 4)||'-'||SUBSTR(V1.ADDDATE, 5, 2)||'-'||SUBSTR(V1.ADDDATE, 7, 2)||' '|| SUBSTR(V1.ADDTIME, 1, 2)||':'||SUBSTR(V1.ADDTIME, 3, 2)||':'||SUBSTR(V1.ADDTIME, 5, 2) ) ADDDATE_TIME
          FROM FM_RECEIPT@FCUS_TO_HLDC C,
               TR_VIR_ACCOUNT_TR_LIST@FCUS_TO_HLDC V1
        WHERE  (C.RECEIPT_DATE  BETWEEN #TRX_DATEFR# AND #TRX_DATETO#)        
        AND    (C.DCGUBUN       = '2')
        AND    (C.ACCTCD        IN ('1110411', '2110441')) --외상,선수만.. 잡이익은 제외
        AND    V1.ADDDATE(+)||'-'||V1.MOACCNT(+)||'-'||V1.TRNNUMBER(+) = C.TRNUMBER) V,
        FMS_UPJANG@FCUS_TO_FSUS A
WHERE (V.UPJANG = A.UPJANG)
<isNotNull col="MAIN_UPJANG">
AND   (A.MAIN_UPJANG          = #MAIN_UPJANG#)
</isNotNull>
<isNotNull col="PART_SALES_SABUN">
AND   (A.PART_SALES_SABUN     = #PART_SALES_SABUN#)
</isNotNull>
<isNotNull col="DEPT_ID">
AND   (A.DEPT_ID              = #DEPT_ID#)
</isNotNull>    
<isNotNull col="JOB">    
AND   (A.BIZ_GROUP     = #JOB#)
</isNotNull>   
<isNotNull col="SUB_JOB">    
AND   (A.BIZ_DETAIL    = #SUB_JOB#)
</isNotNull>      
         
</statement>
	<input default-name="ds_cond">
		<col name="DEPT_ID" size="255" type="NUMERIC" description="" /> 
		<col name="MAIN_UPJANG" size="6" type="NUMERIC" description="업장코드" /> 
		<col name="UPJANG" size="6" type="NUMERIC" description="업장코드" /> 
		<col name="TRX_DATEFR" size="255" type="VARCHAR" description="" /> 
		<col name="TRX_DATETO" size="255" type="VARCHAR" description="" /> 
		<col name="JOB" size="255" type="VARCHAR" description="" /> 
		<col name="SUB_JOB" size="255" type="VARCHAR" description="" /> 
	</input>
	<output default-name="ds_list">      


	</output>
</query>