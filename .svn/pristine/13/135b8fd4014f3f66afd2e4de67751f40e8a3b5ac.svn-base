<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[식단작성수 조회]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
SELECT A.UPJANG
     , A.TM_NM AS TM_NAME
     , A.UPJANGNM
       --기간내 운영일
     ,(SELECT COUNT(*) FROM MAF_OP_CALENDAR Z WHERE Z.OP_DATE BETWEEN #FROM_MENU_DATE# AND #TO_MENU_DATE# AND Z.TM_CD = A.TM_CD AND Z.UPJANG = A.UPJANG AND Z.OP_YN = 'Y') AS OP_CNT
     , REG_CNT         --식단등록일
     , MENU_DATE       --제공일
     , A.HALL_MENU     --설정식단
     , REG_MENU        --등록식단
     , EXPECT_MEAL_QTY --예상식수
     , COOK_MEAL_QTY   --조리식수
     , REAL_MEAL_QTY   --실식수
	 , EXPECT_QTY_TERM --예상오차
	 , COOK_QTY_TERM   --조리오차
  FROM (
        SELECT T1.UPJANG
             , T1.TM_CD
             , T1.TM_NAME
             , T1.UPJANGNM
             , T2.REG_CNT         --식단등록일
             , TO_CHAR(TO_DATE(T1.MENU_DATE, 'RRRR-MM-DD'),'YYYY.MM.DD') || '(' || TO_CHAR(TO_DATE(T1.MENU_DATE, 'RRRR-MM-DD'),'dy','NLS_DATE_LANGUAGE=KOREAN') || ')' AS MENU_DATE --제공일
             --, (SELECT COUNT(USE_YN) FROM FSA_HALL_DTL WHERE UPJANG = T1.UPJANG AND USE_YN = 'Y') AS HALL_MENU --설정식단
             , T1.REG_MENU        --등록식단
             , T1.EXPECT_MEAL_QTY --예상식수
             , T1.COOK_MEAL_QTY   --조리식수
             , T1.REAL_MEAL_QTY   --실식수
        	 , (T1.REAL_MEAL_QTY - T1.EXPECT_MEAL_QTY) AS EXPECT_QTY_TERM --예상오차
        	 , (T1.REAL_MEAL_QTY - T1.COOK_MEAL_QTY) AS COOK_QTY_TERM     --조리오차
          FROM (SELECT UPJANG, TM_CD, TM_NAME, UPJANGNM,
                       SUM(REG_MENU) AS REG_MENU, MENU_DATE,
                       SUM(EXPECT_MEAL_QTY) AS EXPECT_MEAL_QTY
                     , SUM(COOK_MEAL_QTY) AS COOK_MEAL_QTY
                     , SUM(REAL_MEAL_QTY) AS REAL_MEAL_QTY
                  FROM (SELECT A.UPJANG, A.MENU_CD, A.TM_CD, A.TM_NAME, A.UPJANGNM, A.MENU_DATE, DECODE(COUNT(B.RECIPE_CD),0,0,1) AS REG_MENU, A.EXPECT_MEAL_QTY, A.COOK_MEAL_QTY, A.REAL_MEAL_QTY
                          FROM (SELECT A.UPJANG, B.MENU_CD, A.TM_CD, A.TM_NAME, A.UPJANGNM, B.MENU_DATE
                                     , NVL(B.EXPECT_MEAL_QTY,0) AS EXPECT_MEAL_QTY
                                     , NVL(B.COOK_MEAL_QTY,0) AS COOK_MEAL_QTY
                                     , NVL(B.REAL_MEAL_QTY,0) AS REAL_MEAL_QTY
                                  FROM MAC_UPJANG_V A, FSM_REAL_MENU_MST B
                                 WHERE 1 = 1
                          <isNotNull col="TM_CD">
                           AND A.TM_CD = #TM_CD# --선택 검색조건(부서코드)
                          </isNotNull>
                          <isNotNull col="UPJANG">
                           AND A.UPJANG = #UPJANG# --선택 검색조건(업장코드)
                          </isNotNull>
                                   AND A.UPJANG = B.UPJANG
                                   AND B.MENU_DATE BETWEEN #FROM_MENU_DATE# AND #TO_MENU_DATE# --필수 검색조건(제공일)
                               ) A, FSM_REAL_RECIPE_MST B
                         WHERE A.UPJANG = B.UPJANG -- MENU_MST에만 존재하고 RECIPE가 없을 경우 제외
                           AND A.MENU_CD = B.MENU_CD
                         GROUP BY A.UPJANG, A.MENU_CD, A.TM_CD, A.TM_NAME, A.UPJANGNM, A.MENU_DATE, A.EXPECT_MEAL_QTY, A.COOK_MEAL_QTY, A.REAL_MEAL_QTY)
                 GROUP BY UPJANG, TM_CD, TM_NAME, UPJANGNM, MENU_DATE) T1,
               (SELECT UPJANG, TM_CD, TM_NAME, UPJANGNM, SUM(REG_CNT) AS REG_CNT
        	      FROM (SELECT T.UPJANG, T.TM_CD, T.TM_NAME, T.UPJANGNM,
                               1 AS REG_CNT,
                               SUM(T.REG_MENU) AS REG_MENU, T.MENU_DATE,
                               SUM(T.EXPECT_MEAL_QTY) AS EXPECT_MEAL_QTY
                             , SUM(T.COOK_MEAL_QTY) AS COOK_MEAL_QTY
                             , SUM(T.REAL_MEAL_QTY) AS REAL_MEAL_QTY
                          FROM (SELECT A.UPJANG, A.MENU_CD, A.TM_CD, A.TM_NAME, A.UPJANGNM, A.MENU_DATE, DECODE(COUNT(B.RECIPE_CD),0,0,1) AS REG_MENU, A.EXPECT_MEAL_QTY, A.COOK_MEAL_QTY, A.REAL_MEAL_QTY
                                  FROM (SELECT A.UPJANG, B.MENU_CD, A.TM_CD, A.TM_NAME, A.UPJANGNM, B.MENU_DATE
                                             , NVL(B.EXPECT_MEAL_QTY,0) AS EXPECT_MEAL_QTY
                                             , NVL(B.COOK_MEAL_QTY,0) AS COOK_MEAL_QTY
                                             , NVL(B.REAL_MEAL_QTY,0) AS REAL_MEAL_QTY
                                          FROM MAC_UPJANG_V A, FSM_REAL_MENU_MST B
                                         WHERE 1 = 1
                          <isNotNull col="TM_CD">
                           AND A.TM_CD = #TM_CD# --선택 검색조건(부서코드)
                          </isNotNull>
                          <isNotNull col="UPJANG">
                           AND A.UPJANG = #UPJANG# --선택 검색조건(업장코드)
                          </isNotNull>
                                           AND A.UPJANG = B.UPJANG
                                           AND B.MENU_DATE BETWEEN #FROM_MENU_DATE# AND #TO_MENU_DATE# --필수 검색조건(제공일)
                                       ) A, FSM_REAL_RECIPE_MST B
                                 WHERE A.UPJANG = B.UPJANG -- MENU_MST에만 존재하고 RECIPE가 없을 경우 제외
                                   AND A.MENU_CD = B.MENU_CD
                                 GROUP BY A.UPJANG, A.MENU_CD, A.TM_CD, A.TM_NAME, A.UPJANGNM, A.MENU_DATE, A.EXPECT_MEAL_QTY, A.COOK_MEAL_QTY, A.REAL_MEAL_QTY) T
                         GROUP BY UPJANG, TM_CD, TM_NAME, UPJANGNM, MENU_DATE)
                 GROUP BY UPJANG, TM_CD, TM_NAME, UPJANGNM) T2
         WHERE T1.UPJANG = T2.UPJANG
           AND T1.TM_CD = T2.TM_CD
       ) B
     , (
        SELECT B.TM_CD, B.TM_NM, A.UPJANG, B.UPJANGNM, COUNT(*) HALL_MENU
          FROM FSA_HALL_DTL A
             , SCO_UPJANG_MST_V B
         WHERE A.UPJANG = B.UPJANG
           AND B.CLOSE_DATE IS NULL
           AND A.USE_YN = 'Y'
<isNotNull col="TM_CD">
           AND B.TM_CD = #TM_CD# --선택 검색조건(부서코드)
</isNotNull>
<isNotNull col="UPJANG">
           AND B.UPJANG = #UPJANG# --선택 검색조건(업장코드)
</isNotNull>
         GROUP BY B.TM_CD, B.TM_NM, A.UPJANG, B.UPJANGNM
       ) A
 WHERE A.UPJANG = B.UPJANG (+)
   AND A.TM_CD = B.TM_CD (+)
 ORDER BY A.TM_NM, A.UPJANGNM, B.MENU_DATE	</statement>
	<input default-name="ds_Input">
	</input>
	<output default-name="ds_List1">
	</output>
</query>