<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="fs.fse.eventInfoMasterDAO">
	<desc>마스터등록 HQML Query</desc>

    <!-- 마감현황 목록을 조회한다. -->
    <statement name="selectListCal" type="select">
        /*+ com.hwfs.fs.fse.dao.EventInfoMasterDAO.selectListCal */
        <![CDATA[
            SELECT   DECODE(NVL(A.DAY0,''),'','',A.DAY0||'    ') DAY0
                    ,DECODE(NVL(A.DAY1,''),'','',A.DAY1||'    ') DAY1
                    ,DECODE(NVL(A.DAY2,''),'','',A.DAY2||'    ') DAY2
                    ,DECODE(NVL(A.DAY3,''),'','',A.DAY3||'    ') DAY3
                    ,DECODE(NVL(A.DAY4,''),'','',A.DAY4||'    ') DAY4
                    ,DECODE(NVL(A.DAY5,''),'','',A.DAY5||'    ') DAY5
                    ,DECODE(NVL(A.DAY6,''),'','',A.DAY6||'    ') DAY6
                    ,DECODE(NVL(A.DAY0,''),'','',FSE_GET_EVNTNM_FUN(:sclassCd,:seq,:schYYMM||LPAD(A.DAY0,2,'0'))) NOTE0
                    ,DECODE(NVL(A.DAY1,''),'','',FSE_GET_EVNTNM_FUN(:sclassCd,:seq,:schYYMM||LPAD(A.DAY1,2,'0'))) NOTE1
                    ,DECODE(NVL(A.DAY2,''),'','',FSE_GET_EVNTNM_FUN(:sclassCd,:seq,:schYYMM||LPAD(A.DAY2,2,'0'))) NOTE2
                    ,DECODE(NVL(A.DAY3,''),'','',FSE_GET_EVNTNM_FUN(:sclassCd,:seq,:schYYMM||LPAD(A.DAY3,2,'0'))) NOTE3
                    ,DECODE(NVL(A.DAY4,''),'','',FSE_GET_EVNTNM_FUN(:sclassCd,:seq,:schYYMM||LPAD(A.DAY4,2,'0'))) NOTE4
                    ,DECODE(NVL(A.DAY5,''),'','',FSE_GET_EVNTNM_FUN(:sclassCd,:seq,:schYYMM||LPAD(A.DAY5,2,'0'))) NOTE5
                    ,DECODE(NVL(A.DAY6,''),'','',FSE_GET_EVNTNM_FUN(:sclassCd,:seq,:schYYMM||LPAD(A.DAY6,2,'0'))) NOTE6
                    ,DECODE(NVL(A.DAY0,''),'','',:schYYMM||LPAD(A.DAY0,2,'0')) DATE0
                    ,DECODE(NVL(A.DAY1,''),'','',:schYYMM||LPAD(A.DAY1,2,'0')) DATE1
                    ,DECODE(NVL(A.DAY2,''),'','',:schYYMM||LPAD(A.DAY2,2,'0')) DATE2
                    ,DECODE(NVL(A.DAY3,''),'','',:schYYMM||LPAD(A.DAY3,2,'0')) DATE3
                    ,DECODE(NVL(A.DAY4,''),'','',:schYYMM||LPAD(A.DAY4,2,'0')) DATE4
                    ,DECODE(NVL(A.DAY5,''),'','',:schYYMM||LPAD(A.DAY5,2,'0')) DATE5
                    ,DECODE(NVL(A.DAY6,''),'','',:schYYMM||LPAD(A.DAY6,2,'0')) DATE6
            FROM    (
                    SELECT   MIN(DECODE(TO_CHAR(YM + LEVEL - 1, 'D'), '1', LEVEL)) DAY0 
                            ,MIN(DECODE(TO_CHAR(YM + LEVEL - 1, 'D'), '2', LEVEL)) DAY1
                            ,MIN(DECODE(TO_CHAR(YM + LEVEL - 1, 'D'), '3', LEVEL)) DAY2
                            ,MIN(DECODE(TO_CHAR(YM + LEVEL - 1, 'D'), '4', LEVEL)) DAY3
                            ,MIN(DECODE(TO_CHAR(YM + LEVEL - 1, 'D'), '5', LEVEL)) DAY4
                            ,MIN(DECODE(TO_CHAR(YM + LEVEL - 1, 'D'), '6', LEVEL)) DAY5
                            ,MIN(DECODE(TO_CHAR(YM + LEVEL - 1, 'D'), '7', LEVEL)) DAY6
                    FROM    (
                            SELECT TO_DATE(:schYYMM,'YYYYMM') YM FROM DUAL
                            )
                    CONNECT BY LEVEL <= LAST_DAY (YM) - YM + 1
                    GROUP BY TRUNC (YM + LEVEL, 'IW')
                    ORDER BY 7
                    ) A
        ]]>
    </statement>

	<!-- 대코드 목록을 조회한다. -->
	<statement name="selectComboLclass" type="select">
		/*+ com.hwfs.fs.fse.dao.EventInfoMasterDAO.selectComboLclass */
		<![CDATA[
		SELECT
		     LCLASS_CD
		    ,LCLASS_NM
		FROM FS_LCLASS
		WHERE USE_YN = 'Y'
		AND SUBSTR(LCLASS_CD,0,1) = 'M'
		<#if muCd?has_content>
		AND MU_CD = :muCd
		</#if>
		ORDER BY LCLASS_CD ASC
		]]>
	</statement>

	<!-- 중코드 목록을 조회한다. -->
	<statement name="selectComboMclass" type="select"><![CDATA[
		SELECT
		     MCLASS_CD
		    ,MCLASS_NM
		    ,LCLASS_CD
		FROM FS_MCLASS 
		WHERE  USE_YN = 'Y'
		AND SUBSTR(LCLASS_CD,0,1) = 'M'
		<#if muCd?has_content>
		AND MU_CD = :muCd
		</#if>
		<#if lclassCd?has_content>
		--AND LCLASS_CD = :lclassCd
		</#if>
		ORDER BY LCLASS_CD, MCLASS_CD ASC
		]]></statement>

	<!-- 소코드 목록을 조회한다. -->
	<statement name="selectComboSclass" type="select"><![CDATA[
		SELECT
		     SCLASS_CD
		    ,SCLASS_NM
		    ,MCLASS_CD
		FROM FS_SCLASS   
		WHERE USE_YN = 'Y'
		AND SUBSTR(LCLASS_CD,0,1) = 'M'
		<#if muCd?has_content>
		AND MU_CD = :muCd
		</#if>
		<#if lclassCd?has_content>
		--AND LCLASS_CD = :lclassCd
		</#if>
		<#if mclassCd?has_content>
		--AND MCLASS_CD = :mclassCd
		</#if>
		ORDER BY LCLASS_CD, MCLASS_CD, SCLASS_CD ASC
		]]></statement>

	<!-- 코드 삭제전 케터링과 이벤트에 코드가 사용되고 있는지  조회한다. -->
	<statement name="selectCodeUse" type="select">
		/*+ com.hwfs.fs.fse.dao.EventInfoMasterDAO.selectCodeUse */
		<![CDATA[
		SELECT
		     (SELECT COUNT(*) AS MACHINE_CNT FROM FSM_UTENSIL_MASTER WHERE 1=1 
                <#if lclassCd?has_content> AND LCLASS_CD = :lclassCd </#if> 
		    	<#if mclassCd?has_content> AND MCLASS_CD = :mclassCd </#if> 
		    	<#if sclassCd?has_content> AND SCLASS_CD = :sclassCd </#if>
              		) AS MACHINE_MASTER_CNT
            ,(SELECT COUNT(*) AS MACHINE_CNT FROM FSM_UTENSIL_REQUEST WHERE 1=1 
                <#if lclassCd?has_content> AND LCLASS_CD = :lclassCd </#if> 
		    	<#if mclassCd?has_content> AND MCLASS_CD = :mclassCd </#if> 
		    	<#if sclassCd?has_content> AND SCLASS_CD = :sclassCd </#if>
                AND RMA_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')) AS MACHINE_REQ_CNT
            ,(SELECT COUNT(*) AS MACHINE_CNT FROM FSM_UTENSIL_AS_HISTORY WHERE 1=1 
                <#if lclassCd?has_content> AND LCLASS_CD = :lclassCd </#if> 
		    	<#if mclassCd?has_content> AND MCLASS_CD = :mclassCd </#if> 
		    	<#if sclassCd?has_content> AND SCLASS_CD = :sclassCd </#if>
                  	) AS MACHINE_ASDISUSE_CNT
		    ,(SELECT  COUNT(*) FROM FSC_CATERINGUTENSIL_REG WHERE 1=1 
		    	<#if lclassCd?has_content> AND MACHINE_CLASS_CD  = :lclassCd </#if> 
		    	<#if mclassCd?has_content> AND MACHINE_KIND_CD = :mclassCd </#if> 
		    	<#if sclassCd?has_content> AND MACHINE_CD = :sclassCd </#if> 
		    	AND RMA_DATE  >= TO_DATE(SYSDATE,'YYYY-MM-DD'))  AS CATERING_CNT
		    ,(SELECT COUNT(*) FROM FSE_EVNT_INFOREG WHERE 1=1
		    	<#if lclassCd?has_content> AND LCLASS_CD = :lclassCd </#if> 
		    	<#if mclassCd?has_content> AND MCLASS_CD = :mclassCd </#if> 
		    	<#if sclassCd?has_content> AND SCLASS_CD = :sclassCd </#if> 
		    	AND RMA_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')) AS EVENT_CNT
		FROM DUAL   
		]]>
	</statement>

	<!-- 기기/기물 목록을 조회한다. -->
	<statement name="selectMachineMst" type="select"><![CDATA[
 		SELECT LEVEL AS LEV
              ,CODE
              ,NAME
              ,PARENT_CD
              ,LCLASS_CD
              ,LCLASS_NM
              ,MCLASS_CD
              ,MCLASS_NM
              ,SCLASS_CD
              ,SCLASS_NM
              ,DELIVERED_QTY AS RESIDUAL_QTY
              ,DELIVERED_QTY
              ,RESIDUAL_QTY AS ORIGINAL_QTY
              ,USEYN
              ,SEQ
        FROM
            (
             	SELECT
	                   LCLASS_CD AS CODE
	                  ,LCLASS_NM AS NAME
	                  ,'' AS PARENT_CD
	                  ,LCLASS_CD
	                  ,LCLASS_NM
	                  ,'' AS MCLASS_CD
	                  ,'' AS MCLASS_NM
	                  ,'' AS SCLASS_CD
	                  ,'' AS SCLASS_NM
	                  ,NULL AS RESIDUAL_QTY
	                  ,NULL AS DELIVERED_QTY
                      ,'C1' AS USEYN
                     ,NULL AS SEQ
                FROM FS_LCLASS    
                WHERE USE_YN = 'Y'
                <#if muCd?has_content>
				AND MU_CD = :muCd
				</#if>
                UNION ALL
                SELECT 
                     A.MCLASS_CD AS CODE
                    ,A.MCLASS_NM AS NAME
                    ,B.LCLASS_CD AS PARENT_CD
                    ,B.LCLASS_CD AS LCLASS_CD
                    ,B.LCLASS_NM AS LCLASS_NM
                    ,A.MCLASS_CD
                    ,A.MCLASS_NM
                    ,'' AS SCLASS_CD
                    ,'' AS SCLASS_NM
                    ,NULL AS RESIDUAL_QTY
                    ,NULL AS DELIVERED_QTY
                    ,'C2' AS USEYN
                    ,NULL AS SEQ
                FROM FS_MCLASS A  
                   , FS_LCLASS B
                WHERE A.LCLASS_CD = B.LCLASS_CD
                AND A.USE_YN = 'Y'
                <#if muCd?has_content>
				AND B.MU_CD = :muCd
				</#if>
                UNION ALL
                SELECT
                     A.SCLASS_CD AS CODE
                    ,A.SCLASS_NM AS NAME
                    ,B.MCLASS_CD AS PARENT_CD
                    ,C.LCLASS_CD
                    ,C.LCLASS_NM
                    ,B.MCLASS_CD
                    ,B.MCLASS_NM
                    ,A.SCLASS_CD
                    ,A.SCLASS_NM
                    ,D.QTY_DELIVERED AS RESIDUAL_QTY                       --사용중
                    ,D.UTENSILNM AS DELIVERED_QTY
                    ,D.USE_YN AS USEYN
                    ,D.SEQ AS SEQ
		        FROM FS_SCLASS A
		            ,FS_MCLASS B  
		            ,FS_LCLASS C
                    ,FSM_UTENSIL_MASTER D
		        WHERE A.USE_YN = 'Y'
		        AND A.LCLASS_CD = B.LCLASS_CD
		        AND A.LCLASS_CD = C.LCLASS_CD
		        AND B.LCLASS_CD = C.LCLASS_CD  
		        AND A.MCLASS_CD = B.MCLASS_CD  
		        AND A.LCLASS_CD = D.LCLASS_CD(+)  
		        AND A.MCLASS_CD = D.MCLASS_CD(+)  
		        AND A.SCLASS_CD = D.SCLASS_CD(+)  
		        <#if muCd?has_content>
				AND C.MU_CD = :muCd
				</#if>
                ORDER BY LCLASS_CD,MCLASS_CD,SCLASS_CD ASC, SEQ DESC
                ) T
        WHERE SUBSTR(LCLASS_CD,0,1) = 'M'
		<#if useYn?has_content>
          AND USEYN NOT IN (DECODE(:useYn,'N','Y','N'))
		</#if>
		<#if searchParam?has_content>
		AND(LCLASS_NM LIKE '%' || :searchParam || '%'
	        OR MCLASS_NM LIKE '%' || :searchParam || '%'
	        OR SCLASS_NM LIKE '%' || :searchParam || '%')
		</#if>
        START WITH T.CODE = T.LCLASS_CD 
        CONNECT BY PRIOR T.CODE = T.PARENT_CD		
		]]></statement>

	<!-- 기기/기물 목록을 조회한다. -->
	<statement name="selectMachineMstOLD" type="selectOLD"><![CDATA[
 		SELECT LEVEL AS LEV
              ,CODE
              ,NAME
              ,PARENT_CD
              ,LCLASS_CD
              ,LCLASS_NM
              ,MCLASS_CD
              ,MCLASS_NM
              ,SCLASS_CD
              ,SCLASS_NM
              ,RESIDUAL_QTY
              ,DELIVERED_QTY
              ,RESIDUAL_QTY AS ORIGINAL_QTY
        FROM
            (
             	SELECT
	                   LCLASS_CD AS CODE
	                  ,LCLASS_NM AS NAME
	                  ,'' AS PARENT_CD
	                  ,LCLASS_CD
	                  ,LCLASS_NM
	                  ,'' AS MCLASS_CD
	                  ,'' AS MCLASS_NM
	                  ,'' AS SCLASS_CD
	                  ,'' AS SCLASS_NM
	                  ,NULL AS RESIDUAL_QTY
	                  ,NULL AS DELIVERED_QTY
                FROM FS_LCLASS    
                WHERE USE_YN = 'Y'
                <#if muCd?has_content>
				AND MU_CD = :muCd
				</#if>
                UNION ALL
                SELECT 
                     A.MCLASS_CD AS CODE
                    ,A.MCLASS_NM AS NAME
                    ,B.LCLASS_CD AS PARENT_CD
                    ,B.LCLASS_CD AS LCLASS_CD
                    ,B.LCLASS_NM AS LCLASS_NM
                    ,A.MCLASS_CD
                    ,A.MCLASS_NM
                    ,'' AS SCLASS_CD
                    ,'' AS SCLASS_NM
                    ,NULL AS RESIDUAL_QTY
                    ,NULL AS DELIVERED_QTY
                FROM FS_MCLASS A  
                   , FS_LCLASS B
                WHERE A.LCLASS_CD = B.LCLASS_CD
                AND A.USE_YN = 'Y'
                <#if muCd?has_content>
				AND B.MU_CD = :muCd
				</#if>
                UNION ALL
                SELECT
                     A.SCLASS_CD AS CODE
                    ,A.SCLASS_NM AS NAME
                    ,B.MCLASS_CD AS PARENT_CD
                    ,C.LCLASS_CD
                    ,C.LCLASS_NM
                    ,B.MCLASS_CD
                    ,B.MCLASS_NM
                    ,A.SCLASS_CD
                    ,A.SCLASS_NM
                    , (SELECT NVL(COUNT(*),0) FROM FSM_UTENSIL_MASTER 
                       WHERE LCLASS_CD = A.LCLASS_CD
                       AND MCLASS_CD = A.MCLASS_CD
                       AND SCLASS_CD = A.SCLASS_CD
                       --AND USE_YN = 'Y'
                       ) AS RESIDUAL_QTY
                       --총 입고 수량
                       ,(SELECT NVL(SUM(QTY_DELIVERED),0) FROM FSM_UTENSIL_MASTER 
                       WHERE LCLASS_CD = A.LCLASS_CD
                       AND MCLASS_CD = A.MCLASS_CD
                       AND SCLASS_CD = A.SCLASS_CD
                       AND USE_YN = 'Y') AS DELIVERED_QTY
		        FROM FS_SCLASS A
		            ,FS_MCLASS B  
		            ,FS_LCLASS C
		        WHERE A.USE_YN = 'Y'
		        AND A.LCLASS_CD = B.LCLASS_CD
		        AND A.LCLASS_CD = C.LCLASS_CD
		        AND B.LCLASS_CD = C.LCLASS_CD  
		        AND A.MCLASS_CD = B.MCLASS_CD  
		        <#if muCd?has_content>
				AND C.MU_CD = :muCd
				</#if>
                ) T
        WHERE SUBSTR(LCLASS_CD,0,1) = 'M'
		<#if searchParam?has_content>
		AND(LCLASS_NM LIKE '%' || :searchParam || '%'
	        OR MCLASS_NM LIKE '%' || :searchParam || '%'
	        OR SCLASS_NM LIKE '%' || :searchParam || '%')
		</#if>
        START WITH T.CODE = T.LCLASS_CD 
        CONNECT BY PRIOR T.CODE = T.PARENT_CD
		
		]]></statement>

	<statement name="selectList" type="select">
		/*+ com.hwfs.fs.fse.dao.EventInfoMasterDAO.selectList */
		<![CDATA[
		 SELECT 
		       T1.LCLASS_CD,
		       T2.LCLASS_NM,
		       T1.MCLASS_CD,
		       T3.MCLASS_NM,
		       T1.SCLASS_CD,
		       T4.SCLASS_NM,
		       T1.QTY_DELIVERED,
		       T1.DELIVERPLCENM,
		       T1.UTENSILNM,
		       T1.SAP_ID,
		       T1.USE_YN,
		       T1.MGMT_DEPT_CD,
		       (SELECT MU_NM FROM HLDC_SC_MU WHERE MU_CD = T1.MGMT_DEPT_CD) AS MGMT_DEPT_NM,
		       T1.CUSER AS CUSER_ID,
		       (SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = T1.CUSER) AS CUSER_NM,
		       T1.CDATE,
		       T1.REMARK,
		       T1.SEQ,
		       (SELECT SUM(QTY_DELIVERED) 
			    FROM   FSM_UTENSIL_MASTER 
			    WHERE  1=1
			    <#if lclassCd?has_content> AND    LCLASS_CD = :lclassCd </#if>
			    <#if mclassCd?has_content> AND    MCLASS_CD = :mclassCd </#if>
			    <#if sclassCd?has_content> AND    SCLASS_CD = :sclassCd </#if>) AS SUM_QTY_DELIVERED
		FROM   FSM_UTENSIL_MASTER T1,
		       FS_LCLASS T2,
		       FS_MCLASS T3,
		       FS_SCLASS T4
		WHERE T1.LCLASS_CD = T2.LCLASS_CD
        AND   T1.LCLASS_CD = T3.LCLASS_CD
        AND   T1.LCLASS_CD = T4.LCLASS_CD
        AND   T1.MCLASS_CD = T3.MCLASS_CD
        AND   T1.MCLASS_CD = T4.MCLASS_CD
        AND   T1.SCLASS_CD = T4.SCLASS_CD
        --AND   T1.USE_YN = 'Y'
        AND   T2.USE_YN = 'Y'
        AND   T3.USE_YN = 'Y'
        AND   T4.USE_YN = 'Y'        
		<#if lclassCd?has_content>
		AND    T1.LCLASS_CD = :lclassCd
		</#if>
		<#if mclassCd?has_content>
		AND    T1.MCLASS_CD = :mclassCd
		</#if>
		<#if sclassCd?has_content>
		AND    T1.SCLASS_CD = :sclassCd
		</#if>
		ORDER BY T1.LCLASS_CD, T1.MCLASS_CD, T1.SCLASS_CD ASC , T1.SEQ DESC
		]]>
	</statement>



	<!--/////////////////////////////////////Save///////////////////////////////////  -->


	<!--기기/기물 목록 중코드(을)를 등록한다. -->
	<statement name="insertMachineMstMclass" type="insert">
		/*+ com.hwfs.fs.fse.dao.EventInfoMasterDAO.insertMachineMstMclass
		*/
		<![CDATA[
		INSERT INTO FS_MCLASS
        (MU_CD
        ,LCLASS_CD
        ,MCLASS_CD
        ,MCLASS_NM
        ,LEV
        ,USE_YN
        ,CUSER
        ,CDATE
        )
        VALUES
        (:muCd
        ,:lclassCd
        ,:lclassCd || (SELECT LPAD(NVL(SUBSTR(MAX(MCLASS_CD),4)+1, 0)+1 ,'2','0') FROM FS_MCLASS WHERE SUBSTR(LCLASS_CD,0,1) = 'M' AND LCLASS_CD = :lclassCd)
        ,<#if name?has_content> :name <#else> null </#if>
        ,'2'
        ,'Y'
        ,:loginSabun
        ,SYSDATE)
		]]>
	</statement>

	<!-- 기기/기물 목록 중코드(을)를 수정한다. -->
	<statement name="updateMachineMstMclass" type="update">
		/*+ com.hwfs.fs.fse.dao.EventInfoMasterDAO.updateMachineMstMclass
		*/
		<![CDATA[
		UPDATE FS_MCLASS
        SET  MCLASS_NM = <#if name?has_content> :name <#else> null </#if>
            ,UUSER = :loginSabun
            ,UDATE = SYSDATE 
        WHERE 1=1 
        <#if lclassCd?has_content>
        AND LCLASS_CD = :lclassCd
		</#if>
		<#if mclassCd?has_content>
		AND MCLASS_CD = :mclassCd
		</#if>
		]]>
	</statement>

	<!-- 기기/기물 목록 중코드(을)를 삭제한다. -->
	<statement name="deleteMachineMstMclass" type="delete">
		/*+ com.hwfs.fs.fse.dao.EventInfoMasterDAO.deleteMachineMstMclass
		*/
		<![CDATA[
		UPDATE FS_MCLASS
        SET  USE_YN = 'N'
            ,UUSER = :loginSabun
            ,UDATE = SYSDATE 
        WHERE 1=1 
        <#if lclassCd?has_content>
        AND LCLASS_CD = :lclassCd
		</#if>
		<#if mclassCd?has_content>
		AND MCLASS_CD = :mclassCd
		</#if> 
		]]>
	</statement>


	<!--기기/기물 목록 소코드(을)를 등록한다. -->
	<statement name="insertMachineMstSclass" type="insert">
		/*+ com.hwfs.fs.fse.dao.EventInfoMasterDAO.insertMachineMstSclass
		*/
		<![CDATA[
		INSERT INTO FS_SCLASS
        (LCLASS_CD
        ,MCLASS_CD
        ,SCLASS_CD
        ,SCLASS_NM
        ,LEV
        ,USE_YN
        ,MU_CD
        ,CUSER
        ,CDATE)
        VALUES
        (:lclassCd
        ,:mclassCd
        ,:mclassCd || (SELECT LPAD(NVL(MAX(SUBSTR(SCLASS_CD,6)),0)+1,'3','0') FROM FS_SCLASS WHERE SUBSTR(LCLASS_CD,0,1) = 'M' AND LCLASS_CD = :lclassCd AND MCLASS_CD = :mclassCd) 
        ,<#if name?has_content> :name <#else> null </#if>
        ,'3'
        ,'Y'
        ,:muCd
        ,:loginSabun
        ,SYSDATE)
		]]>
	</statement>

	<!-- 기기/기물 목록 소코드(을)를 수정한다. -->
	<statement name="updateMachineMstSclass" type="update">
		/*+ com.hwfs.fs.fse.dao.EventInfoMasterDAO.updateMachineMstSclass
		*/
		<![CDATA[
		UPDATE FS_SCLASS
		SET SCLASS_NM = <#if name?has_content> :name <#else> null </#if>
	       ,UUSER = :loginSabun
	       ,UDATE = SYSDATE
		WHERE 1=1 
		<#if lclassCd?has_content>
		AND LCLASS_CD = :lclassCd
		</#if>
		<#if mclassCd?has_content>
		AND MCLASS_CD = :mclassCd
		</#if>
		<#if sclassCd?has_content>
		AND SCLASS_CD = :sclassCd
		</#if>
		]]>
	</statement>

	<!-- 기기/기물 목록 소코드(을)를 삭제한다. -->
	<statement name="deleteMachineMstSclass" type="delete">
		/*+ com.hwfs.fs.fse.dao.EventInfoMasterDAO.deleteMachineMstSclass
		*/
		<![CDATA[
		UPDATE FS_SCLASS
		SET USE_YN = 'N'
	       ,UUSER = :loginSabun
	       ,UDATE = SYSDATE
		WHERE 1=1 
		<#if lclassCd?has_content>
		AND LCLASS_CD = :lclassCd
		</#if>
		<#if mclassCd?has_content>
		AND MCLASS_CD = :mclassCd
		</#if>
		<#if sclassCd?has_content>
		AND SCLASS_CD = :sclassCd
		</#if>
		]]>
	</statement>



	<!--기기/기물 등록(을)를 등록한다. -->
	<statement name="insertGrd" type="insert">
		/*+ com.hwfs.fs.fse.dao.EventInfoMasterDAO.insert */
		<![CDATA[
		INSERT INTO FSM_UTENSIL_MASTER
		(LCLASS_CD
		,MCLASS_CD
		,SCLASS_CD
		,SEQ
		,QTY_DELIVERED
		,DELIVERPLCENM
		,UTENSILNM
		,SAP_ID
		,USE_YN
		,MGMT_DEPT_CD
		,REMARK
		,CUSER
		,CDATE
		)
		VALUES
		(<#if lclassCd?has_content> :lclassCd <#else> null </#if>
		,<#if mclassCd?has_content> :mclassCd <#else> null </#if>
		,<#if sclassCd?has_content> :sclassCd <#else> null </#if>
		,FSM_UTENSIL_MASTER_S.NEXTVAL
		,<#if qtyDelivered?has_content> :qtyDelivered <#else> null </#if>
		,<#if deliverplcenm?has_content> :deliverplcenm <#else> null </#if>
		,<#if utensilnm?has_content> :utensilnm <#else> null </#if>
		,<#if sapId?has_content> :sapId <#else> null </#if>
		,<#if useYn?has_content> :useYn <#else> null </#if>
		,<#if mgmtDeptCd?has_content> :mgmtDeptCd <#else> null </#if>
		,<#if remark?has_content> :remark <#else> null </#if>
		,:loginSabun
		,SYSDATE
		)
		]]>
	</statement>

	<!-- 기기/기물 등록(을)를 수정한다. -->
	<statement name="updateGrd" type="update">
		/*+ com.hwfs.fs.fse.dao.EventInfoMasterDAO.update */
		<![CDATA[
		UPDATE FSM_UTENSIL_MASTER 
		SET  QTY_DELIVERED = <#if qtyDelivered?has_content> :qtyDelivered <#else> null </#if>
	        ,DELIVERPLCENM = <#if deliverplcenm?has_content> :deliverplcenm <#else> null </#if>
	        ,UTENSILNM = <#if utensilnm?has_content> :utensilnm <#else> null </#if>
	        ,SAP_ID = <#if sapId?has_content> :sapId <#else> null </#if>
	        ,USE_YN = <#if useYn?has_content> :useYn <#else> null </#if>
	        ,MGMT_DEPT_CD = <#if mgmtDeptCd?has_content> :mgmtDeptCd <#else> :muCd </#if>
	        ,REMARK = <#if remark?has_content> :remark <#else> null </#if> 
	        ,UUSER = :loginSabun
	        ,UDATE = SYSDATE
		WHERE 1=1 
		<#if lclassCd?has_content>      
		AND LCLASS_CD =  :lclassCd
		</#if> 
		<#if mclassCd?has_content>      
		AND MCLASS_CD =  :mclassCd
		</#if> 
		<#if sclassCd?has_content>      
		AND SCLASS_CD =  :sclassCd
		</#if> 
		<#if seq?has_content>      
		AND SEQ =  :seq
		</#if> 
		]]>
	</statement>

	<!-- 기기/기물 등록(을)를 삭제한다. -->
	<statement name="deleteGrd" type="delete">
		/*+ com.hwfs.fs.fse.dao.EventInfoMasterDAO.deleteGrd */
		<![CDATA[
		DELETE FSM_UTENSIL_MASTER
		WHERE 1=1 
		<#if lclassCd?has_content>      
		AND LCLASS_CD =  :lclassCd
		</#if> 
		<#if mclassCd?has_content>      
		AND MCLASS_CD =  :mclassCd
		</#if> 
		<#if sclassCd?has_content>
		AND SCLASS_CD =  :sclassCd
		</#if> 
		<#if seq?has_content>      
		AND SEQ =  :seq
		</#if> 
		]]>
	</statement>


	<statement name="selectMachineMstCnt"><![CDATA[
 		SELECT RESIDUAL_QTY
        FROM
            (
             	SELECT
	                   LCLASS_CD AS CODE
	                  ,LCLASS_NM AS NAME
	                  ,'' AS PARENT_CD
	                  ,LCLASS_CD
	                  ,LCLASS_NM
	                  ,'' AS MCLASS_CD
	                  ,'' AS MCLASS_NM
	                  ,'' AS SCLASS_CD
	                  ,'' AS SCLASS_NM
	                  ,NULL AS RESIDUAL_QTY
	                  ,NULL AS DELIVERED_QTY
                FROM FS_LCLASS    
                WHERE USE_YN = 'Y'
                <#if muCd?has_content>
				AND MU_CD = :muCd
				</#if>
                UNION ALL
                SELECT 
                     A.MCLASS_CD AS CODE
                    ,A.MCLASS_NM AS NAME
                    ,B.LCLASS_CD AS PARENT_CD
                    ,B.LCLASS_CD AS LCLASS_CD
                    ,B.LCLASS_NM AS LCLASS_NM
                    ,A.MCLASS_CD
                    ,A.MCLASS_NM
                    ,'' AS SCLASS_CD
                    ,'' AS SCLASS_NM
                    ,NULL AS RESIDUAL_QTY
                    ,NULL AS DELIVERED_QTY
                FROM FS_MCLASS A  
                   , FS_LCLASS B
                WHERE A.LCLASS_CD = B.LCLASS_CD
                AND A.USE_YN = 'Y'
                <#if muCd?has_content>
				AND B.MU_CD = :muCd
				</#if>
                UNION ALL
                SELECT
                     A.SCLASS_CD AS CODE
                    ,A.SCLASS_NM AS NAME
                    ,B.MCLASS_CD AS PARENT_CD
                    ,C.LCLASS_CD
                    ,C.LCLASS_NM
                    ,B.MCLASS_CD
                    ,B.MCLASS_NM
                    ,A.SCLASS_CD
                    ,A.SCLASS_NM
                    , (( SELECT NVL(SUM(QTY_DELIVERED),0) FROM FSM_UTENSIL_MASTER 
                       WHERE LCLASS_CD = A.LCLASS_CD
                       AND MCLASS_CD = A.MCLASS_CD
                       AND SCLASS_CD = A.SCLASS_CD
                       AND USE_YN = 'Y')
                       -(
                       NVL((SELECT  SUM(REQUEST_QUANTITY) 
                            FROM FSM_UTENSIL_REQUEST 
                            WHERE LCLASS_CD=A.LCLASS_CD 
                            AND MCLASS_CD=A.MCLASS_CD 
                            AND SCLASS_CD=A.SCLASS_CD
                            --AND USE_DATE_SDATE  <= TO_CHAR(SYSDATE,'YYYYMMDD') 
                            AND RMA_DATE  >= TO_CHAR(SYSDATE,'YYYYMMDD') 
                            --AND NVL(UPJANG_CHG_YN, 0) = 0
                            AND FIRST_SIGN_STATUS != '003' 
                            AND SECOND_SIGN_PRCG_SABUN IS NULL ),0)+
                       NVL((SELECT  SUM(REQUEST_QUANTITY) 
                            FROM FSM_UTENSIL_REQUEST 
                            WHERE LCLASS_CD=A.LCLASS_CD 
                            AND MCLASS_CD=A.MCLASS_CD 
                            AND SCLASS_CD=A.SCLASS_CD
                            --AND USE_DATE_SDATE  <= TO_CHAR(SYSDATE,'YYYYMMDD') 
                            AND RMA_DATE  >= TO_CHAR(SYSDATE,'YYYYMMDD') 
                            --AND NVL(UPJANG_CHG_YN, 0) = 0
                            AND FIRST_SIGN_STATUS != '003' 
                            AND SECOND_SIGN_PRCG_SABUN IS NOT NULL 
                            AND SECOND_SIGN_STATUS != '003'
                            ),0)+
                       NVL((SELECT NVL(SUM(MNGMV_QUANTITY),0) 
                            FROM FSM_UTENSIL_REQUEST 
                            WHERE  LCLASS_CD=A.LCLASS_CD 
                            AND MCLASS_CD=A.MCLASS_CD 
                            AND SCLASS_CD=A.SCLASS_CD 
                            AND MNGMV_DAYS_SDATE < TO_CHAR(SYSDATE,'YYYYMMDD') 
                            AND MNGMV_DAYS_EDATE  >= TO_CHAR(SYSDATE,'YYYYMMDD') 
                            AND NVL(UPJANG_CHG_YN, 0) = 1 
                            AND FIRST_SIGN_STATUS != '003' 
                            AND SECOND_SIGN_PRCG_SABUN IS NULL),0)+    
                       NVL((SELECT NVL(SUM(MNGMV_QUANTITY),0) 
                            FROM FSM_UTENSIL_REQUEST 
                            WHERE  LCLASS_CD=A.LCLASS_CD 
                            AND MCLASS_CD=A.MCLASS_CD 
                            AND SCLASS_CD=A.SCLASS_CD 
                            AND MNGMV_DAYS_SDATE < TO_CHAR(SYSDATE,'YYYYMMDD') 
                            AND MNGMV_DAYS_EDATE  >= TO_CHAR(SYSDATE,'YYYYMMDD') 
                            AND NVL(UPJANG_CHG_YN, 0) = 1  
                            AND FIRST_SIGN_STATUS != '003' 
                            AND SECOND_SIGN_PRCG_SABUN IS NOT NULL 
                            AND SECOND_SIGN_STATUS != '003'
                            ),0)
                       )
                       -(SELECT NVL(SUM(QUANTITY),0) FROM FSM_UTENSIL_AS_HISTORY
	                   WHERE CLASS = '001'
	                   AND LCLASS_CD = A.LCLASS_CD
                       AND MCLASS_CD = A.MCLASS_CD
                       AND SCLASS_CD = A.SCLASS_CD   
	                   AND REQUEST_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
	                   AND END_DATE >= TO_CHAR(SYSDATE,'YYYYMMDD'))
	                   -(SELECT NVL(SUM(QUANTITY),0) FROM FSM_UTENSIL_AS_HISTORY
	                   WHERE CLASS = '002'
	                   AND LCLASS_CD = A.LCLASS_CD
                       AND MCLASS_CD = A.MCLASS_CD
                       AND SCLASS_CD = A.SCLASS_CD   
	                   AND END_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD'))
                       -(SELECT NVL(SUM(REQUEST_QUANTITY),0) FROM FSC_CATERINGUTENSIL_REG
                       WHERE MACHINE_CLASS_CD = A.LCLASS_CD
                       AND  MACHINE_KIND_CD = A.MCLASS_CD
                       AND MACHINE_CD = A.SCLASS_CD   
                       AND APPRV_YN = 'Y'
                       AND LEND_TERM_SDATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                       AND TO_CHAR(RMA_DATE,'YYYYMMDD') >= TO_CHAR(SYSDATE,'YYYYMMDD'))
                       -(SELECT NVL(SUM(X1.REQUEST_QUANTITY),0) 
                       FROM FSE_EVNT_INFOREG X1 
                           ,FSE_EVNT_REQUEST X2
                       WHERE X1.REQUEST_UPJANG_CD=X2.REQUEST_UPJANG_CD
                       AND X1.EVNT_ID=X2.EVNT_ID
                       AND X1.LCLASS_CD = A.LCLASS_CD
                       AND X1.MCLASS_CD = A.MCLASS_CD
                       AND X1.SCLASS_CD = A.SCLASS_CD   
                       AND X2.SIGN_STATUS != '003'
                       --AND X1.USE_DATE_SDATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                       AND X1.RMA_DATE >= TO_CHAR(SYSDATE,'YYYYMMDD'))
                       ) AS RESIDUAL_QTY
                       --총 입고 수량
                       ,(SELECT NVL(SUM(QTY_DELIVERED),0) FROM FSM_UTENSIL_MASTER 
                       WHERE LCLASS_CD = A.LCLASS_CD
                       AND MCLASS_CD = A.MCLASS_CD
                       AND SCLASS_CD = A.SCLASS_CD
                       AND USE_YN = 'Y') AS DELIVERED_QTY
		        FROM FS_SCLASS A
		            ,FS_MCLASS B  
		            ,FS_LCLASS C
		        WHERE A.USE_YN = 'Y'
		        AND A.LCLASS_CD = B.LCLASS_CD
		        AND A.LCLASS_CD = C.LCLASS_CD
		        AND B.LCLASS_CD = C.LCLASS_CD  
		        AND A.MCLASS_CD = B.MCLASS_CD  
		        <#if muCd?has_content>
				AND C.MU_CD = :muCd
				</#if>
                ) T
        WHERE SUBSTR(LCLASS_CD,0,1) = 'M'
		AND LCLASS_CD  = :lclassCd
	    AND MCLASS_CD  = :mclassCd
	    AND SCLASS_CD  = :sclassCd

		
		]]></statement>
</hqml>
