<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
    <type>select</type>
    <description><![CDATA[협력업체 업체별부적합발생내역조회]]></description>
    <reload>true</reload>
    <monitoring>true</monitoring>
    <result-count>1</result-count>
    <statement>
SELECT A.UPJANG     /* 업장코드 */
     , A.UPJANG_NM  /* 업장명 */
     , SCC_CODE_NM('ACCEPT_CLASS', A.ACCEPT_CLASS) AS ACCEPT_CLASS_NM   /* 업장구분 */
     , A.ORG_NM     /* 업체 조직명 */
     , B.ACCEPTDD   /* 접수일자 */
     , B.SPECM_CD   /* 검체코드 */
     , B.SPECM_NM   /* 검체명 */
     , B.MFGWON     /* 제조원 */
     , B.DTR_VENDOR /* 유통업체 */
     , CASE WHEN (SELECT X.MGRP_NM FROM LCM_SPECM_TYPE_MGRP X WHERE X.SPECM_TYPE = B.SPECM_TYPE AND X.MGRP_CD = B.MGRP_CD) IS NULL THEN
                ''
            ELSE
               ((SELECT X.MGRP_NM FROM LCM_SPECM_TYPE_MGRP X WHERE X.SPECM_TYPE = B.SPECM_TYPE AND X.MGRP_CD = B.MGRP_CD) || ' / ' ||
                (SELECT X.MCALSS_NM FROM LCM_SPECM_TYPE_MCALSS X WHERE X.SPECM_TYPE = B.SPECM_TYPE AND X.MCALSS_CD = B.MCALSS_CD) || ' / ' ||
                (SELECT X.SCLASS_NM FROM LCM_SPECM_TYPE_SCLASS X WHERE X.SPECM_TYPE = B.SPECM_TYPE AND X.SCLASS_CD = B.SCLASS_CD))
       END AS SPECM_TYPE_NM                /* 검체 유형명 ( 대분류명 / 중분류명 / 소분류명 ) */
     , B.STAND  /* 규격 */
     , D.INSPT_FLD_NM || '/' || D.NOT_FIT_CLSFI_NM AS NOT_FIT_CLSFI_NM    /* 검사분야 / 부적합분류 */
     , (
         SELECT COUNT(1)
           FROM LTM_TEST_DIARY Z
              , LCM_TEST_ARTICLE TA
          WHERE Z.REQ_NUM = B.REQ_NUM
            AND Z.ACCEPT_NUM = B.ACCEPT_NUM
            AND Z.ARTICLE_CD = TA.ARTICLE_CD
            AND Z.LAST_DECISION IN ('102', '103')
       ) AS NOT_FIT_CNT
     , (
         SELECT LISTAGG(TA.ARTICLE_NM, ',') WITHIN GROUP(ORDER BY TA.ARTICLE_NM)
           FROM LTM_TEST_DIARY SI
              , LCM_TEST_ARTICLE TA
          WHERE SI.REQ_NUM = B.REQ_NUM
            AND SI.ACCEPT_NUM = B.ACCEPT_NUM
            AND SI.ARTICLE_CD = TA.ARTICLE_CD
            AND SI.LAST_DECISION IN ('102', '103')
       ) AS NOT_FIT_DESC
     , (
         SELECT SEND_INFO
           FROM LRM_MATERIAL_INFO
          WHERE A.REQ_NUM = REQ_NUM
            AND B.ACCEPT_NUM = ACCEPT_NUM
       ) AS MATERIAL_SEND_INFO  /* 시험결과 자재 전송 내역 */
  FROM LRM_TEST_REQ_ACCEPT A
     , LRM_SPECM_INFO B
     , (
        SELECT NF.REQ_NUM
             , NF.ACCEPT_NUM
             , NF.INSPT_FLD_NM
             , NF.LAST_DECISION_NM
             , NF.NOT_FIT_CLSFI_NM
          FROM (
                 SELECT /*+ INDEX_FFS(Y) */
                        Y.REQ_NUM
                      , Y.ACCEPT_NUM
                      , P.INSPT_FLD
                      , SCC_CODE_NM('INSPT_FLD', P.INSPT_FLD) AS INSPT_FLD_NM
                      , Y.LAST_DECISION
                      , SCC_CODE_NM('LAST_DECISION', Y.LAST_DECISION) AS LAST_DECISION_NM
                      , P.ARTICLE_NM
                      , P.NOT_FIT_CLSFI
                      , SCC_CODE_NM('NOT_FIT_CLSFI', P.NOT_FIT_CLSFI) AS NOT_FIT_CLSFI_NM
                      , ROW_NUMBER() OVER(PARTITION BY Y.REQ_NUM, Y.ACCEPT_NUM ORDER BY Y.REQ_NUM, Y.ACCEPT_NUM, P.NOT_FIT_CLSFI DESC) AS RN
                   FROM LTM_TEST_DIARY Y
                      , LCM_TEST_ARTICLE P
                  WHERE 1 = 1
                    AND Y.ARTICLE_CD = P.ARTICLE_CD
                    AND Y.LAST_DECISION &lt;&gt; '101'
               ) NF
         WHERE NF.RN = 1
       ) D
     , (
        SELECT PD.REQ_NUM
             , PD.PROC_USER
             , PD.PROCDD
             , PD.PROC_REASON
             , PD.PROC_CLASS
             , PD.SEQ
          FROM (
                SELECT Y.REQ_NUM
                     , Y.PROC_USER
                     , Y.PROCDD
                     , Y.PROC_REASON
                     , Y.PROC_CLASS
                     , Y.SEQ
                     , ROW_NUMBER() OVER (PARTITION BY Y.REQ_NUM ORDER BY Y.REQ_NUM, Y.SEQ DESC) AS RN
                  FROM LRM_PROC_DESC Y
               ) PD
         WHERE RN = 1
       ) U
 WHERE 1 = 1
   AND A.REQ_NUM = B.REQ_NUM
   AND A.REQ_NUM = U.REQ_NUM(+)
   AND U.PROC_CLASS &gt;= '200'
   AND B.REQ_NUM = D.REQ_NUM
   AND B.ACCEPT_NUM = D.ACCEPT_NUM
<isNotNull col="UPJANG">
   AND A.UPJANG = #UPJANG#
</isNotNull>
<isNotNull col="ACCEPT_CLASS">
   AND A.ACCEPT_CLASS = #ACCEPT_CLASS#
</isNotNull>
<isNotNull col="SPECM_TYPE">
   AND B.SPECM_TYPE = #SPECM_TYPE#
</isNotNull>
<isNotNull col="FOOD_TYPE_MCALSS">
   AND B.MCALSS_CD = #FOOD_TYPE_MCALSS#
</isNotNull>
<isNotNull col="START_YYMM">
   AND B.ACCEPTDD &gt;= #START_YYMM# || '01' AND B.ACCEPTDD &lt;= #END_YYMM# || '31'
</isNotNull>
 ORDER BY A.UPJANG_NM, B.ACCEPTDD, B.SPECM_CD
    </statement>
    <input default-name="ds_cond">
    </input>
    <output default-name="ds_list">
    </output>
</query>