<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[변경전상품조회->본사용 상품정보 조회]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
 SELECT 
       B.ITEM_CODE
	 , B.ITEM_NAME
	 , B.ITEM_SIZE
	 , B.PO_UOM
	 , CASE WHEN D.OP_PRICE IS NOT NULL OR D.OP_RATE IS NOT NULL              
            THEN DECODE(SIGN(NVL(D.OP_PRICE,0) ),0, SCC_CEIL(A.SALE_PRICE + (A.SALE_PRICE * NVL(D.OP_RATE,0) / 100),D.CEIL_VAL), D.OP_PRICE) 
            WHEN E.OP_PRICE IS NOT NULL OR E.OP_RATE IS NOT NULL              
            THEN DECODE(SIGN(NVL(E.OP_PRICE,0) ),0, SCC_CEIL(A.SALE_PRICE + (A.SALE_PRICE * NVL(E.OP_RATE,0) / 100),E.CEIL_VAL), E.OP_PRICE) 
            ELSE A.SALE_PRICE END AS UNIT_PRICE
     , B.KG_CONVERT_RATE
	 , CASE WHEN D.OP_PRICE IS NOT NULL OR D.OP_RATE IS NOT NULL              
            THEN ROUND(DECODE(SIGN(NVL(D.OP_PRICE,0) ),0, SCC_CEIL(A.SALE_PRICE + (A.SALE_PRICE * NVL(D.OP_RATE,0) / 100),D.CEIL_VAL), D.OP_PRICE) / B.KG_CONVERT_RATE / 1000, 2) 
            WHEN E.OP_PRICE IS NOT NULL OR E.OP_RATE IS NOT NULL              
            THEN ROUND(DECODE(SIGN(NVL(E.OP_PRICE,0) ),0, SCC_CEIL(A.SALE_PRICE + (A.SALE_PRICE * NVL(E.OP_RATE,0) / 100),E.CEIL_VAL), E.OP_PRICE) / B.KG_CONVERT_RATE / 1000, 2) 
       ELSE ROUND(A.SALE_PRICE / B.KG_CONVERT_RATE / 1000, 2) END AS G_UNIT_PRICE
     , B.ORIGIN_TYPE       
  FROM (         
        SELECT ITEM_CODE, OP_RATE, OP_PRICE, CEIL_VAL 
          FROM FMU_OP_RATE 
         WHERE UPJANG = #UPJANG#
           AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND EDATE 
           AND USE_YN = 'Y' 
           AND ITEM_TYPE = 'M' 
        ) D 
     , (         
        SELECT ITEM_CODE, OP_RATE, OP_PRICE, CEIL_VAL 
          FROM FMU_OP_RATE 
         WHERE UPJANG = #UPJANG#
           AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN SDATE AND EDATE 
           AND USE_YN = 'Y' 
           AND ITEM_TYPE = 'C' 
        ) E 
     , FMS_ITEM_V B
     , (
		SELECT DISTINCT M.UPJANG, M.ITEM_CODE
		  FROM FMM_UPJANG_RECIPE_MST C, FMM_UPJANG_RECIPE_ITEM M
		 WHERE C.UPJANG = M.UPJANG
		   AND C.RECIPE_CD = M.RECIPE_CD
		   AND C.UPJANG = #UPJANG#
		   <isNotNull col="ds_recipeClass.CODE">
		   AND C.RECIPE_CLASS IN (#ds_recipeClass.CODE$#)
		   </isNotNull>		   
		 GROUP BY M.UPJANG, M.ITEM_CODE
      ) C
    , (
          SELECT #UPJANG# AS UPJANG
               , TO_CHAR(SYSDATE,'YYYYMMDD') AS NEED_DATE
               , A.ITEM_CODE, A.SALE_PRICE, A.CENTER_CODE
            FROM HLDC_PO_CONTRACT_FSALE A, HLDC_ST_UPJANG B
           WHERE A.UPJANG = B.AP_UNITPRICE_UPJANG
             AND B.UPJANG = #UPJANG#
             AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN A.CONTRACT_START AND NVL(A.CONTRACT_END, '99999999')  
<isEqual col="chkZero" value="N">
          AND A.SALE_PRICE > 0
</isEqual>
          AND A.USE_YN = 'Y'
       -----------
        UNION ALL
       -----------
       SELECT #UPJANG# AS UPJANG,
              TO_CHAR(SYSDATE,'YYYYMMDD') AS NEED_DATE ,
              A.ITEM_CODE,
              A.SALE_PRICE,
              0 CENTER_CODE
         FROM FMP_OTCUST_PRICE_AVA_V A ,
              (
              SELECT UPJANG,
                     ITEM_CODE,
                     MAX(SDATE) AS SDATE
                FROM FMP_OTCUST_PRICE_AVA_V
               WHERE UPJANG =
                     (
                     SELECT OTCUST_PRICE_UPJANG
                       FROM FMS_UPJANG
                      WHERE UPJANG = #UPJANG#
                     )
                 AND SDATE &lt;= TO_CHAR(SYSDATE,'YYYYMMDD')
               GROUP BY UPJANG,
                     ITEM_CODE
              ) B
        WHERE A.UPJANG = B.UPJANG
          AND A.SDATE = B.SDATE
          AND A.ITEM_CODE = B.ITEM_CODE
<isEqual col="chkZero" value="N">
          AND A.SALE_PRICE > 0
</isEqual>
          AND A.USE_YN = 'Y'
       ) A
 WHERE C.ITEM_CODE = B.ITEM_CODE
   AND B.ITEM_CODE = D.ITEM_CODE(+)
   AND B.ITEM_CLASS4 = E.ITEM_CODE(+)
   AND C.UPJANG    = A.UPJANG
   AND C.ITEM_CODE = A.ITEM_CODE
<isNotNull col="ITEM_CLASS2">
   AND B.ITEM_CLASS2 = #ITEM_CLASS2#
</isNotNull>
<isNotNull col="ITEM_CLASS3">
   AND B.ITEM_CLASS3 = #ITEM_CLASS3#
</isNotNull>
<isNotNull col="ITEM_CLASS4">
   AND B.ITEM_CLASS4 = #ITEM_CLASS4#
</isNotNull>
<isNotNull col="ITEM_NAME">
   AND B.ITEM_NAME LIKE '%' || #ITEM_NAME# || '%'
</isNotNull>
</statement>
	<input default-name="ds_cond">
		<col name="UPJANG" size="6" type="NUMERIC" description="" /> 
		<col name="ITEM_CLASS2" size="255" type="VARCHAR" description="" /> 
		<col name="ITEM_CLASS3" size="255" type="VARCHAR" description="" /> 
		<col name="ITEM_CLASS4" size="255" type="VARCHAR" description="" /> 
		<col name="ITEM_NAME" size="255" type="VARCHAR" description="" /> 
		<col name="chkZero" size="6" type="NUMERIC" description="" /> 
		<col name="ds_recipeClass.CODE" size="255" type="VARCHAR" description="" /> 
	</input>
	<output default-name="ds_list">
	</output>
</query>
