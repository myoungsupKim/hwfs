<?xml version="1.0" encoding="utf-8"?>
<Script type="xscript4.0"><![CDATA[
/**
 * @class IntroFrame에서 사용하는 공통 스크립트
 */
var IntroFrameCmn = {
	
	/**
	 * @class IntroPage의 초기화를 담당한다.
	 */
	initPage : function(introFrameId) {
		IntroFrameCmn.initPageCommon(introFrameId);
		
		IntroFrameCmn.initPageTransaction(introFrameId);
		
// 		switch (introFrameId) {
// 			case "IntroFrameType01" : 
// 				break;
// 			case "IntroFrameType02" : 
// 				break;
// 			case "IntroFrameType03" : 
// 				break;
// 			case "IntroFrameType04" : 
// 				break;
// 			case "IntroFrameType05" : 
// 				break;
// 			case "IntroFrameType06" : 
// 				break;
// 		}
	},
	
	/**
	 * @class IntroPage의 공통부분에 대한 초기화를 담당한다.
	 */
	initPageCommon : function(introFrameId) {
		var today = gfn_getYear() + "년 " + gfn_getMonth() + "월 " + gfn_today().substr(6) + "일";
		Div00.sta_currDate.text = today;

		//이재미씨 요청 화성네트워크(162443) 이하 사업장들은 메인화면에 계좌정보를 보여주지 마라
		//trace((g_Main_Upjang <> g_Upjang) && (g_Main_Upjang == "162443"));
		if (introFrameId == "IntroFrameType03" || introFrameId == "IntroFrameType13" ) {
			if((g_Main_Upjang <> g_Upjang) && (g_Main_Upjang == "162443"))
			{
				Div03.Static06.visible = false;
				Div03.Static09.visible = false;
			}
			else
			{
				Div03.Static06.visible = true;
				Div03.Static09.visible = true;
			}
		}		
		
		if (introFrameId == "IntroFrameType08") {
			if (gfn_isNull(g_OtCustNm)) {
				Div00.sta_deptNm.text = g_UpjangNm;
			}
			else {
				Div00.sta_deptNm.text = g_OtCustNm;
			}
		}
		else {
			Div00.sta_deptNm.text = g_UpjangNm;
		}
	},
	
	/**
	 * @class IntroPage별 업무 Transaction을 수행한다.
	 */
	initPageTransaction : function(introFrameId) {

		setWaitCursor(false, false);

		ds_cond.clearData();
		var nRow = ds_cond.addRow();
		ds_cond.setColumn(nRow, "authLevel", g_AuthLevel);
		ds_cond.setColumn(nRow, "userKind", g_UserKind);
		ds_cond.setColumn(nRow, "writeSabun", g_EmpNo);
		ds_cond.setColumn(nRow, "mainUpjang", g_Main_Upjang);
		ds_cond.setColumn(nRow, "upjang", g_Upjang);
		ds_cond.setColumn(nRow, "tmCd", g_Tm_Cd);
		ds_cond.setColumn(nRow, "userType", g_UserType);
		
		var strSvcID    = "IntroFrame_selectIntroFrame";
		var strURL      = "svc::sc/cmn/introFrame/selectList.xdo";
		var strInDs     = "ds_cond=ds_cond";
		var strOutDs    = "";
		var strArg      = "authLevel=" + g_AuthLevel + " userKind=" + g_UserKind + " writeSabun=" + g_EmpNo + " mainUpjang=" + g_Main_Upjang + " upjang=" + g_Upjang + " tmCd=" + g_Tm_Cd + " userType=" + g_UserType + " ";
		var strCallback = "";
		var bAsync      = false;

		switch (introFrameId) {
			case "IntroFrameType01" : 
				strOutDs = "ds_mainImageFileName=ds_mainImageFileName ds_totalBbsList=ds_totalBbsList ds_quickList=ds_quickList ds_poBbsList=ds_poBbsList ds_limsBbsList=ds_limsBbsList";
				strArg  += "introFrameId="+introFrameId;
				break;
			case "IntroFrameType02" : 
				strOutDs = "ds_mainImageFileName=ds_mainImageFileName ds_quickList=ds_quickList ds_totalBbsList=ds_totalBbsList ds_poBbsList=ds_poBbsList ds_chargeUpjangList=ds_chargeUpjangList ds_unApprovalJumJang=ds_unApprovalJumJang ds_checkList01=ds_checkList01 ds_checkList02=ds_checkList02 ds_checkList03=ds_checkList03 ds_doBondCount=ds_doBondCount ds_myDesk04=ds_myDesk04 ds_myDesk03=ds_myDesk03 ds_limsBbsList=ds_limsBbsList ds_pbBbsList=ds_pbBbsList";
				strArg  += "introFrameId="+introFrameId + " viewData=ALL";
				break;
			case "IntroFrameType03" : 
				strOutDs = "ds_mainImageFileName=ds_mainImageFileName ds_quickList=ds_quickList ds_personalList=ds_personalList ds_speedBbsList=ds_speedBbsList ds_totalBbsList=ds_totalBbsList ds_goodsBbsList=ds_goodsBbsList ds_fileBbsList=ds_fileBbsList ds_creditList=ds_creditList";
				strArg  += "introFrameId="+introFrameId;
				break;
			case "IntroFrameType04" :
				strOutDs = "ds_mainImageFileName=ds_mainImageFileName ds_quickList=ds_quickList ds_personalList=ds_personalList ds_totalBbsList=ds_totalBbsList ds_speedBbsList=ds_speedBbsList ds_goodsBbsList=ds_goodsBbsList";
				strArg  += "introFrameId="+introFrameId;
				break;
			case "IntroFrameType05" :
				strOutDs = "ds_mainImageFileName=ds_mainImageFileName ds_quickList=ds_quickList ds_speedBbsList=ds_speedBbsList ds_totalBbsList=ds_totalBbsList ds_oneBbsList=ds_oneBbsList ds_fileBbsList=ds_fileBbsList";
				strArg  += "introFrameId="+introFrameId;
				break;
			case "IntroFrameType06" :
				strOutDs = "ds_mainImageFileName=ds_mainImageFileName ds_quickList=ds_quickList ds_totalBbsList=ds_totalBbsList ds_eFoodistList=ds_eFoodistList ds_salesUpjangList=ds_salesUpjangList";
				strArg  += "introFrameId="+introFrameId;
				break;
			case "IntroFrameType07" : 
				strOutDs = "ds_mainImageFileName=ds_mainImageFileName ds_quickList=ds_quickList ds_totalBbsList=ds_totalBbsList ds_upjangRateList=ds_upjangRateList ds_clearCheckList=ds_clearCheckList ds_planUpperUpjangList=ds_planUpperUpjangList ds_upjangPlNotInputList=ds_upjangPlNotInputList ds_unApprovalTeamJang=ds_unApprovalTeamJang ds_checkList01=ds_checkList01 ds_checkList02=ds_checkList02 ds_checkList03=ds_checkList03 ds_doBondCount=ds_doBondCount ds_myDesk04=ds_myDesk04";
				strArg  += "introFrameId="+introFrameId;
				break;
			case "IntroFrameType08" : 
				strOutDs = "ds_mainImageFileName=ds_mainImageFileName ds_quickList=ds_quickList";
				strArg  += "introFrameId="+introFrameId;
				break;
			case "IntroFrameType09" : 
				strOutDs = "ds_mainImageFileName=ds_mainImageFileName ds_clearCheckList=ds_clearCheckList ds_quickList=ds_quickList ds_poBbsList=ds_poBbsList ds_limsBbsList=ds_limsBbsList ds_upjangSaleChart=ds_upjangSaleChart ds_upjangBondList=ds_upjangBondList ds_base_note=ds_base_note";
				strArg  += "introFrameId="+introFrameId;
				break;
			case "IntroFrameType10" : 
				strOutDs = "ds_mainImageFileName=ds_mainImageFileName ds_clearCheckList=ds_clearCheckList ds_quickList=ds_quickList ds_tmSaleChart=ds_tmSaleChart ds_tmBondList=ds_tmBondList ds_totalBbsList=ds_totalBbsList ds_base_note=ds_base_note";
				strArg  += "introFrameId="+introFrameId;
				break;
			case "IntroFrameType11" : 
				strOutDs = "ds_mainImageFileName=ds_mainImageFileName ds_wholeSaleList=ds_wholeSaleList ds_quickList=ds_quickList ds_totalBbsList=ds_totalBbsList ds_bbsList=ds_bbsList";
				strArg  += "introFrameId="+introFrameId;
				break;
			case "IntroFrameType12" : 
				strOutDs = "ds_mainImageFileName=ds_mainImageFileName";
				strArg  += "introFrameId="+introFrameId;
				break;
			case "IntroFrameType13" : 
				strOutDs = "ds_mainImageFileName=ds_mainImageFileName ds_quickList=ds_quickList ds_personalList=ds_personalList ds_speedBbsList=ds_speedBbsList ds_totalBbsList=ds_totalBbsList ds_goodsBbsList=ds_goodsBbsList ds_fileBbsList=ds_fileBbsList ds_creditList=ds_creditList";
				strArg  += "introFrameId="+introFrameId;
				break;
			case "IntroFrameType14" : 
				strOutDs = "ds_mainImageFileName=ds_mainImageFileName ds_quickList=ds_quickList ds_personalList=ds_personalList ds_speedBbsList=ds_speedBbsList ds_totalBbsList=ds_totalBbsList ds_goodsBbsList=ds_goodsBbsList ds_fileBbsList=ds_fileBbsList ds_creditList=ds_creditList ds_budgetList=ds_budgetList";
				strArg  += "introFrameId="+introFrameId;
				break;
			case "IntroFrame_spoon" :
				strOutDs = "ds_mainImageFileName=ds_mainImageFileName ds_quickList=ds_quickList ds_personalList=ds_personalList ds_totalBbsList=ds_totalBbsList ds_goodsBbsList=ds_goodsBbsList ds_creditList=ds_creditList";
				strArg  += "introFrameId="+introFrameId;
				break;
		}
		
		//전송형태 : 0(XML 타입), 1(Binary 타입), 2(SSV 타입)
        var nDataType = 1; //성능테스트 시 0으로 변경 by kksoo	
        
        //통신시 포스트데이터를 압축할지 여부
        var bCompress = true; //성능테스트 시 false로 변경 by kksoo

		// 실행모드가 UX Studio 일때 전송형태, 압축여부 변경
		if ( gv_runMode == "L" ) {
			nDataType = 0;
			bCompress = false;
		}
		
		//Cookie에 Transaction DataType 추가 설정 by kksoo
		gv_xp_txdatatype=nDataType;
		
		transaction(strSvcID , strURL, strInDs      , strOutDs      , strArg     , strCallback   , bAsync, nDataType, bCompress);
		
		/*
		if ( ds_cond.getRowType(0) != 1 ) {
			gfn_alert("올바른 접근방법이 아닙니다.");
			application.av_close = "CLOSE_FINISHED";
			application.exit();
			return;
		}
		*/
		
		var top = 6;
		var bottom = 50;
		var left = 6;
		var right = 226;
		var space = 4;
		var height = 44;
				
		for (var i=0,len=ds_quickList.getRowCount(); i<len; i++)
		{
			var btn = new Button("btn_quickList"+i, left, top, right, bottom);
			btn.padding = "1 0 0 43";
			btn.class = ds_quickList.getColumn(i, "set1");
			btn.border = "1 solid #c8d5e1ff";
			btn.background.image = ds_quickList.getColumn(i, "set2");
			btn.text = ds_quickList.getColumn(i, "codeName");
			btn.image = "theme://images/new/btn_MAIN_QuickBgN.png";
			btn.imagealign = "right middle";
			btn.align = "left middle";
			btn.font = "굴림,9,bold";
			btn.color = "#5a6779ff";
			btn.gradation = "linear 0,0 #ffffffff 0,100 #f3f3f3ff";
			btn.bordertype = "normal 0 0";
			btn.focusborder = "0 none #808080";
			btn.shadow = "drop 0 0 gray";
			btn.userMenuName = ds_quickList.getColumn(i, "codeName");
			btn.userMenuId = ds_quickList.getColumn(i, "set3");
			btn.userMenuId2 = ds_quickList.getColumn(i, "set4");
			btn.userMenuId3 = ds_quickList.getColumn(i, "set5");
			//btn.userCallParameter = ds_quickList.getColumn(i, "set4");
			
			//이벤트를 발생한다.
			btn.onclick.addHandler(function (o, e) {
				if (introFrameId == "IntroFrame_spoon") {
					if (g_SystemId == "SPOON") {
						if (o.userMenuId2 != "") {
							gfn_openMenu(o.userMenuId2, null);
						}
						else {
							gfn_alert("설정된 메뉴(ID)가 없습니다.");
						}
					}
					else {
						if (o.userMenuId != "") {
							gfn_openMenu(o.userMenuId, null);
						}
						else {
							gfn_alert("설정된 메뉴(ID)가 없습니다.");
						}
					}
				}
				else {
					if (o.userMenuId != "") {
						if ( o.userMenuId == "-1" ) {
							switch (introFrameId ) {
								case "IntroFrameType01" :
								case "IntroFrameType02" :	// FS점장용
								case "IntroFrameType07" :
								case "IntroFrameType08" :
								case "IntroFrameType09" :
									switch ( o.userMenuId2 ) {	// 특정게시판 열기
										case "bbs" :
											IntroFrameCmn.showBbsList(o.userMenuId3);
											break;
										
										case "url" :
											system.execBrowser(o.userMenuId3);
											break;
									}
									break;
								default :
									break;
							}
						} else {
							gfn_openMenu(o.userMenuId, null);
						}
					}
					else {
						gfn_alert("설정된 메뉴(ID)가 없습니다.");
					}
				}
			});
			
			btn.show();
			
			div_quickList.addChild("btn_quickList"+i, btn);
			top = top + space + height;
			bottom = top + height;
		}
		
		div_quickList.resetScroll();
		
		//추가적인 기본설정부
		switch (introFrameId) {
			case "IntroFrameType01" :
				try {
					if (ds_mainImageFileName.getRowCount() > 0) {
						Div06.sta_image.background.image = application.services["svc"].url + "upload/" + ds_mainImageFileName.getColumn(0, "fileName");
					}
				}
				catch (e) {
				}

				break;
			case "IntroFrameType02" :
				var findRow = ds_unApprovalJumJang.findRowExpr("a==1 && b==1 && c==1 && d==1");
				
				ds_f_01.filter("a==0 && b==0 && c==1 && d==1");
				
				if (findRow > -1) {
					Div00.Static03.text = "미승인    : " + ds_unApprovalJumJang.getColumn(findRow, "cnt");
					Div00.Static03.onclick.addHandler(fn_showData);
				}
				else {
					Div00.Static03.text = "미승인    : 0";
				}
				
				if (ds_doBondCount.getRowCount() > 0) {
					Div00.Static04.text = "도래채권 : " + ds_doBondCount.getColumn(0, "cnt");
				}
				else {
					Div00.Static04.text = "도래채권 : 0";
				}
				
				findRow = ds_myDesk03.findRowExpr("a==1 && b==1 && c==1 && d==1 && e==1 && f==1");
				ds_f_03.filter("a==0 && b==0 && c==0 && d==0 && e==0 && f==0");
				if (findRow > -1) {
					Div00.Static05.text = "구매반려 : " + ds_myDesk03.getColumn(findRow, "cnt");
					Div00.Static05.onclick.addHandler(fn_showMyDesk03);
				}
				else {
					Div00.Static05.text = "구매반려 : 0";
				}

				if (ds_myDesk04.getRowCount() > 0) {
					Div00.Static00.text = "식단공유 : " + ds_myDesk04.getColumn(0, "notJointCnt");
				}
				else {
					Div00.Static00.text = "식단공유 : 0";
				}
				
				//Div00.Static03.text = "미승인    : " + ds_unApprovedJumCnt.getColumn(0, "unApprovedCnt");
				Div11.cbo_chargeUpjang.value = ds_chargeUpjangList.getColumn(0, "upjang");
				IntroFrameCmn.upjangToMonth(g_Upjang);
				
				ds_CheckList.setColumn(0, "img", ds_checkList01.getColumn(0, "yn")=="N"?"URL('theme://images/new/grd_MAIN_ChceklistR.png') left middle":"URL('theme://images/new/grd_MAIN_ChceklistG.png') left middle");
				ds_CheckList.setColumn(1, "img", ds_checkList02.getColumn(0, "yn")=="N"?"URL('theme://images/new/grd_MAIN_ChceklistR.png') left middle":"URL('theme://images/new/grd_MAIN_ChceklistG.png') left middle");
				ds_CheckList.setColumn(2, "img", ds_checkList03.getColumn(0, "yn")=="N"?"URL('theme://images/new/grd_MAIN_ChceklistR.png') left middle":"URL('theme://images/new/grd_MAIN_ChceklistG.png') left middle");

				break;
			case "IntroFrameType03" :
				try {
					if (ds_mainImageFileName.getRowCount() > 0) {
						Div04.sta_image.background.image = application.services["svc"].url + "upload/" + ds_mainImageFileName.getColumn(0, "fileName");
					}
					upjangCredit();
					upjangBudget();
				}
				catch (e) {}
				break;
			case "IntroFrameType04" :
				try {
					if (ds_mainImageFileName.getRowCount() > 0) {
						Div01.sta_image.background.image = application.services["svc"].url + "upload/" + ds_mainImageFileName.getColumn(0, "fileName");
					}
				}
				catch (e) {}
				break;
			case "IntroFrameType05" :
				try {
					if (ds_mainImageFileName.getRowCount() > 0) {
						Div04.sta_image.background.image = application.services["svc"].url + "upload/" + ds_mainImageFileName.getColumn(0, "fileName");
					}
				}
				catch (e) {}
				break;
			case "IntroFrameType06" :
				try {
					if (ds_mainImageFileName.getRowCount() > 0) {
						Div04.sta_image.background.image = application.services["svc"].url + "upload/" + ds_mainImageFileName.getColumn(0, "fileName");
					}
				}
				catch (e) {}
				break;
			case "IntroFrameType07" :
				try {
					if (ds_mainImageFileName.getRowCount() > 0) {
						sta_image.background.image = application.services["svc"].url + "upload/" + ds_mainImageFileName.getColumn(0, "fileName");
					}
				}
				catch (e) {}

				var findRow = ds_unApprovalTeamJang.findRowExpr("a==1 && b==1 && c==1 && d==1");

				ds_f_01.filter("a==0 && b==0 && c==1 && d==1");
				
				if (findRow > -1) {
					Div00.Static03.text = "미승인    : " + ds_unApprovalTeamJang.getColumn(findRow, "cnt");
					Div00.Static03.onclick.addHandler(fn_showData);
				}
				else {
					Div00.Static03.text = "미승인    : 0";
				}
				
				if (ds_doBondCount.getRowCount() > 0) {
					Div00.Static04.text = "도래채권 : " + ds_doBondCount.getColumn(0, "cnt");
				}
				else {
					Div00.Static04.text = "도래채권 : 0";
				}
				
				if (ds_myDesk04.getRowCount() > 0) {
					Div00.Static00.text = "식단공유 : " + ds_myDesk04.getColumn(0, "notJointCnt");
				}
				else {
					Div00.Static00.text = "식단공유 : 0";
				}
				
				//Div00.Static03.text = "미승인    : " + ds_unApprovedTeamCnt.getColumn(0, "unApprovedCnt");
				
				ds_CheckList.setColumn(0, "img", ds_checkList01.getColumn(0, "yn")=="N"?"URL('theme://images/new/grd_MAIN_ChceklistR.png') left middle":"URL('theme://images/new/grd_MAIN_ChceklistG.png') left middle");
				ds_CheckList.setColumn(1, "img", ds_checkList02.getColumn(0, "yn")=="N"?"URL('theme://images/new/grd_MAIN_ChceklistR.png') left middle":"URL('theme://images/new/grd_MAIN_ChceklistG.png') left middle");
				ds_CheckList.setColumn(2, "img", ds_checkList03.getColumn(0, "yn")=="N"?"URL('theme://images/new/grd_MAIN_ChceklistR.png') left middle":"URL('theme://images/new/grd_MAIN_ChceklistG.png') left middle");
				break;
			case "IntroFrameType08" :
				try {
					if (ds_mainImageFileName.getRowCount() > 0) {
						Div06.sta_image.background.image = application.services["svc"].url + "upload/" + ds_mainImageFileName.getColumn(0, "fileName");
					}
				}
				catch (e) {}
				break;
			case "IntroFrameType09" :
				Div11.sta_title.text = g_UpjangNm + "점 주간 매출 추이(단위:백만)";
				
				//차트를 그린다.
				var arrArg,arrSer;
				//---------------------------------------------
				// arrArg : 차트속성
				// caption		- 차트제목
				// PYAxisName	- 왼쪽 Y축의 명
				// yAxisName	- 오늘쪽쪽 Y축의 명
				// showValues	- 0 : 차트에 값 표시 안함
				//---------------------------------------------
				arrArg = ["caption", "", "PYAxisName", " ", "SYAxisName", " ", "showValues", "0", "numberPrefix", ""];
				
				//---------------------------------------------
				// arrSer : 그룹속성(3개씩 셋트)
				// [그룹명,Y축값컬럼명,그룹속성, ...]
				// 다중차트는 그룹속성을 설정안함.
				//---------------------------------------------
				arrSer = ["전주", "bWAmt"," ", "금주", "tWAmt", " ", "기본계획", "pWAmt", "parentYAxis='S'"];
				
				gfn_MultiChart(Div11.atx_chart1, "MSLine", ds_upjangSaleChart, "weekNm", arrSer, arrArg, "", []);				
				
				//달력을 생성한다.
				var strDate = gfn_today();
				var yymm = gfn_subStr(strDate,0,6);

				// 달력 생성
				IntroFrameCmn.drawCalendar(ds_calendar, Div07.grd_calendar, ds_base_note, yymm);
				break;
			case "IntroFrameType10" :
				Div11.sta_title.text = g_Tm_Nm + " 주간 매출 추이(단위:백만)";
				
				//차트를 그린다.
				var arrArg,arrSer;
				//---------------------------------------------
				// arrArg : 차트속성
				// caption		- 차트제목
				// PYAxisName	- 왼쪽 Y축의 명
				// yAxisName	- 오늘쪽쪽 Y축의 명
				// showValues	- 0 : 차트에 값 표시 안함
				//---------------------------------------------
				arrArg = ["caption", "", "PYAxisName", " ", "SYAxisName", " ", "showValues", "0", "numberPrefix", ""];
				
				//---------------------------------------------
				// arrSer : 그룹속성(3개씩 셋트)
				// [그룹명,Y축값컬럼명,그룹속성, ...]
				// 다중차트는 그룹속성을 설정안함.
				//---------------------------------------------
				arrSer = ["전주", "bWAmt"," ", "금주", "tWAmt", " ", "기본계획", "pWAmt", "parentYAxis='S'"];
				
				gfn_MultiChart(Div11.atx_chart1, "MSLine", ds_tmSaleChart, "weekNm", arrSer, arrArg, "", []);				
				
				//달력을 생성한다.
				var strDate = gfn_today();
				var yymm = gfn_subStr(strDate,0,6);

				// 달력 생성
				IntroFrameCmn.drawCalendar(ds_calendar, Div07.grd_calendar, ds_base_note, yymm);
				break;
			case "IntroFrameType11" :
				/* 
				if (ds_wholeSaleList.getRowCount() > 0) {
					ds_datas.clearData();
					var nRow = ds_datas.addRow();
					var tmp1 = "";
					for (var i=0,len=ds_wholeSaleList.getRowCount(); i<len; i++) {
						switch (i) {
							case 0 : tmp1 = "a"; break;
							case 1 : tmp1 = "b"; break;
							case 2 : tmp1 = "c"; break;
							case 3 : tmp1 = "d"; break;
							case 4 : tmp1 = "e"; break;
							case 5 : tmp1 = "f"; break;
							case 6 : tmp1 = "g"; break;
							case 7 : tmp1 = "h"; break;
						}
						
						if (tmp1 == "d") {
							ds_datas.setColumn(nRow, tmp1+"00", ds_wholeSaleList.getColumn(i, "salePath1"));
							ds_datas.setColumn(nRow, tmp1+"01", ds_wholeSaleList.getColumn(i, "salePath2"));
							ds_datas.setColumn(nRow, tmp1+"02", ds_wholeSaleList.getColumn(i, "bMAmt1"));
							ds_datas.setColumn(nRow, tmp1+"03", ds_wholeSaleList.getColumn(i, "bMAmt2"));
							ds_datas.setColumn(nRow, tmp1+"04", ds_wholeSaleList.getColumn(i, "bMRate"));
							ds_datas.setColumn(nRow, tmp1+"05", ds_wholeSaleList.getColumn(i, "tMAmt1"));
							ds_datas.setColumn(nRow, tmp1+"06", ds_wholeSaleList.getColumn(i, "tMAmt2"));
							ds_datas.setColumn(nRow, tmp1+"07", ds_wholeSaleList.getColumn(i, "tMRate"));
							ds_datas.setColumn(nRow, tmp1+"08", ds_wholeSaleList.getColumn(i, "bDAmt1"));
							ds_datas.setColumn(nRow, tmp1+"09", ds_wholeSaleList.getColumn(i, "bDAmt2"));
							ds_datas.setColumn(nRow, tmp1+"10", ds_wholeSaleList.getColumn(i, "bDRate"));
							ds_datas.setColumn(nRow, tmp1+"11", ds_wholeSaleList.getColumn(i, "tDAmt1"));
							ds_datas.setColumn(nRow, tmp1+"12", ds_wholeSaleList.getColumn(i, "tDAmt2"));
							ds_datas.setColumn(nRow, tmp1+"13", ds_wholeSaleList.getColumn(i, "tDRate"));
						}
						else {
							ds_datas.setColumn(nRow, tmp1+"00", ds_wholeSaleList.getColumn(i, "salePath2"));
							ds_datas.setColumn(nRow, tmp1+"01", ds_wholeSaleList.getColumn(i, "bMAmt1"));
							ds_datas.setColumn(nRow, tmp1+"02", ds_wholeSaleList.getColumn(i, "bMAmt2"));
							ds_datas.setColumn(nRow, tmp1+"03", ds_wholeSaleList.getColumn(i, "bMRate"));
							ds_datas.setColumn(nRow, tmp1+"04", ds_wholeSaleList.getColumn(i, "tMAmt1"));
							ds_datas.setColumn(nRow, tmp1+"05", ds_wholeSaleList.getColumn(i, "tMAmt2"));
							ds_datas.setColumn(nRow, tmp1+"06", ds_wholeSaleList.getColumn(i, "tMRate"));
							ds_datas.setColumn(nRow, tmp1+"07", ds_wholeSaleList.getColumn(i, "bDAmt1"));
							ds_datas.setColumn(nRow, tmp1+"08", ds_wholeSaleList.getColumn(i, "bDAmt2"));
							ds_datas.setColumn(nRow, tmp1+"09", ds_wholeSaleList.getColumn(i, "bDRate"));
							ds_datas.setColumn(nRow, tmp1+"10", ds_wholeSaleList.getColumn(i, "tDAmt1"));
							ds_datas.setColumn(nRow, tmp1+"11", ds_wholeSaleList.getColumn(i, "tDAmt2"));
							ds_datas.setColumn(nRow, tmp1+"12", ds_wholeSaleList.getColumn(i, "tDRate"));
						}
						
					}
				}
				*/
				break;
			case "IntroFrameType12" :
				try {
					if (ds_mainImageFileName.getRowCount() > 0) {
						Div06.sta_image.background.image = application.services["svc"].url + "upload/" + ds_mainImageFileName.getColumn(0, "fileName");
					}
				}
				catch (e) {}
				break;
				
			case "IntroFrameType13" :
				try {
					if (ds_mainImageFileName.getRowCount() > 0) {
						Div04.sta_image.background.image = application.services["svc"].url + "upload/" + ds_mainImageFileName.getColumn(0, "fileName");
					}
					upjangCredit();
				}
				catch (e) {}
				break;
			
			case "IntroFrameType14" :
				try {
					if (ds_mainImageFileName.getRowCount() > 0) {
						Div04.sta_image.background.image = application.services["svc"].url + "upload/" + ds_mainImageFileName.getColumn(0, "fileName");
					}
					upjangCredit();
					upjangBudget();
				}
				catch (e) {}
				break;
				
			case "IntroFrame_spoon" :
				try {
					if (ds_mainImageFileName.getRowCount() > 0) {
						Div04.sta_image.background.image = application.services["svc"].url + "upload/" + ds_mainImageFileName.getColumn(0, "fileName");
					}
				}
				catch (e) {}
				break;
		}
		
		
		setWaitCursor(false, true);
//		transaction(strTranId, strURL, strInDatasets, strOutDatasets, strArgument, "gfn_callBack", bAsync, nDataType, bCompress);
	},
	
	/**
	 * @class 비밀번호를 변경하는 화면을 오픈한다.
	 */
	changePassword : function() {
		var	strId       = "PwdChgPop";
		var	strURL      = "cmn::PwdChgPop.xfdl";
		var	objArgument = {argType:"CHANGE", argUserid:""};
		var	nWidth      = -1;
		var	nHeight     = -1;
		var	strStyle    = "";
		var	nLeft       = -1;
		var	nTop        = -1;
		var	isModeless  = false;
		var	bShowTitle  = true;
		var	strAlign    = "-1";

		var arrRtn = gfn_dialog(strId, strURL, objArgument, nWidth, nHeight, strStyle, nLeft, nTop, isModeless, bShowTitle, strAlign);
	},
	
	/**
	 * @class 개인정보를 변경하는 화면을 오픈한다.
	 */
	changePersonal : function() {
		var	strId       = "PersChgPop";
		var	strURL      = "cmn::PersChgPop.xfdl";
		var	objArgument = {};
		var	nWidth      = -1;
		var	nHeight     = -1;
		var	strStyle    = "";
		var	nLeft       = -1;
		var	nTop        = -1;
		var	isModeless  = false;
		var	bShowTitle  = true;
		var	strAlign    = "-1";

		var arrRtn = gfn_dialog(strId, strURL, objArgument, nWidth, nHeight, strStyle, nLeft, nTop, isModeless, bShowTitle, strAlign);
	},
	
	showBbsList : function(bbsId) {
		var strMenuID = "";
		
		if (g_AppId == "HWFS") {
			strMenuID = "1235";
		}
		else if (g_AppId == "FICS") {
			strMenuID = "45999954";
		}
		else {
			if (bbsId == 21 || bbsId == 81) {
				strMenuID = "48999951";
			}
			else if (bbsId == 180) {
				strMenuID = "3027";
			}
		}
		
		var arrParam = new Array();
		arrParam[0] = bbsId
		arrParam[1] = "LIST";
		
		gfn_openMenu(strMenuID, arrParam);
	},
	
	showBbsView : function(bbsType, ds) {
		var strId = "SCC80062V";
		var strURL = "U_SCC::SCC80062V.xfdl";
		var objArgument = {
			BBS_TYPE : bbsType,
			BBS_ID : ds.getColumn(ds.rowposition, "bbsId"),
			CON_ID : ds.getColumn(ds.rowposition, "conId")
		};
		var nWidth = -1;
		var nHeight = -1;
		var strStyle = "";
		var nLeft = -1;
		var nTop = -1;
		var isModeless = false;
		var bShowTitle = true;
		var strAlign = "-1";

		var rtn = gfn_dialog(strId, strURL, objArgument, nWidth, nHeight, strStyle, nLeft, nTop, isModeless, bShowTitle, strAlign, true);		
	},

	/**
	 * @class 자주 사용하는 메뉴 링크
	 */
	movePage : function(obj, e) {
		var nRow        = obj.getTreeRow(e.row);
		var strMenuId   = gds_recentMenu.getColumn(e.row, gv_menuIdCol);
		var strProgrmId = gds_recentMenu.getColumn(e.row, gv_menuProgCol);
		var strHelpId   = gds_recentMenu.getColumn(e.row, gv_helpIdCol);
		
		// 메뉴ID, 프로그램ID 전역변수에 할당
		gv_menuId = strMenuId;
		gv_progrmId = strProgrmId;
		gv_helpId = strHelpId;
		
		if (obj.getTreeStatus(nRow) == 0 ) 
		{
			// 설정하고자 하는 TreeStatus.
			//  false : 해당 Row의 TreeStatus를 Collapse로 설정
			//  true  : 해당 Row의 TreeStatus를 Expand로 설정                
			obj.setTreeStatus(nRow, true);
		} else if (obj.getTreeStatus(nRow) == 1 ) {
			obj.setTreeStatus(nRow, false);
		} else {
			// 메뉴인지 여부
			var bLeaf = obj.isTreeLeafRow(e.row, true);
			if (bLeaf) {   // 메뉴인경우, 새창 열음
				gfn_addPage(strMenuId);
			}
		}
	},
	 
	/**
	 * @class 게시판에 대한 아이콘을 처리한다.
	 */
	bbsIcon : function(bbsId, row) {
		var bkImg = "";
		var ds;
		
		switch (bbsId) {
			case "21" :
				ds = ds_totalBbsList;
				break;
			case "23" :
				ds = ds_oneBbsList;
				break;
			case "25" :
				ds = ds_fileBbsList;
				break;
			case "27" :
				ds = ds_totalBbsList;
				break;
			case "36" :
				ds = ds_poBbsList;
				break;
			case "44" :
				ds = ds_pbBbsList;
				break;
			case "50" :
				ds = ds_limsBbsList;
				break;
			case "81" :
				ds = ds_goodsBbsList;
				break;
			case "179" :
				ds = ds_speedBbsList;
				break;
			case "185" :
				ds = ds_speedBbsList;
				break;				
		}
		
		if (ds.getColumn(row, "dayCnt") == 0) {
			bkImg = 'theme://Images/new/grd_WF_N.png';
		}
		
		if (ds.getColumn(row, "noticeYn") == "Y" ) {
			if ( bkImg == "" ) {
				bkImg = 'theme://Images/new/grd_WF_IconBellY.png';
			} 
			else {
				bkImg = 'theme://Images/new/grd_WF_IconBellR.png';
			}
		}
		else {
			bkImg = 'theme://images/new/grd_MAIN_Notice.png';
		}
		
		return bkImg;
	},
	
	/**
	 * @class 특정 페이지를 오픈한다.
	 */
	 showPage : function(menuId, arrParams) {
		gfn_openMenu(menuId, arrParams);
	 },
	 
	/**
	 * @class 기획자재에 대한 변경이벤트
	 */
	dutyChangeTab : function(introFrameId, o, e) {
		var viewData = "";
		var strSvcID    = "IntroFrame_dutyChangeTab";
		var strURL      = "svc::sc/cmn/introFrame/selectList.xdo";
		var strInDs     = "";
		var strOutDs    = "";
		var strArg      = "authLevel=" + g_AuthLevel + " userKind=" + g_UserKind + " writeSabun=" + g_EmpNo + " mainUpjang=" + g_Main_Upjang + " upjang=" + g_Upjang + " ";
		var strCallback = "";
		var bAsync      = false;

		switch (e.postindex) {
			case 0 :
				viewData = "300001";
				strOutDs = "ds_item01List=ds_item01List";
				break;
			case 1 :
				viewData = "300002";
				strOutDs = "ds_item02List=ds_item02List";
				break;
			case 2 :
				viewData = "300004";
				strOutDs = "ds_item03List=ds_item03List";
				break;
			case 3 :
				viewData = "300005";
				strOutDs = "ds_item04List=ds_item04List";
				break;
		}

		setWaitCursor(false, false);
		
		switch (introFrameId) {
			case "IntroFrameType02" : 
				strArg  += "introFrameId=" + introFrameId + " viewData=" + viewData;
				break;
		}
		
		//전송형태 : 0(XML 타입), 1(Binary 타입), 2(SSV 타입)
        var nDataType = 1;	//성능테스트 시 0으로 변경 by kksoo	
        
        //통신시 포스트데이터를 압축할지 여부
        var bCompress = true; //성능테스트 시 false로 변경 by kksoo

		// 실행모드가 UX Studio 일때 전송형태, 압축여부 변경
		if ( gv_runMode == "L" ) {
			nDataType = 0;
			bCompress = false;
		}
		
		//Cookie에 Transaction DataType 추가 설정 by kksoo
		gv_xp_txdatatype=nDataType;
		
		transaction(strSvcID , strURL, strInDs      , strOutDs      , strArg     , strCallback   , bAsync, nDataType, bCompress);

	},
	
	/**
	 * @class 비밀번호를 변경하는 화면을 오픈한다.
	 */
	upjangToMonth : function(upjang) {
	
		if (gfn_isNull(upjang)) upjang = g_Upjang;
	
		var viewData = "";
		var strSvcID    = "IntroFrame_upjangToMonth";
		var strURL      = "svc::sc/cmn/introFrame/selectUpjangToMonthList.xdo";
		var strInDs     = "";
		var strOutDs    = "ds_upjangToMonthList=ds_upjangToMonthList ds_upjangTwoWeekChart=ds_upjangTwoWeekChart";
		var strArg      = "upjang=" + upjang;
		var strCallback = "";
		var bAsync      = false;

		setWaitCursor(false, false);
		
		//전송형태 : 0(XML 타입), 1(Binary 타입), 2(SSV 타입)
        var nDataType = 1; //성능테스트 시 0으로 변경 by kksoo
        
        //통신시 포스트데이터를 압축할지 여부
        var bCompress = true; //성능테스트 시 false로 변경 by kksoo

		// 실행모드가 UX Studio 일때 전송형태, 압축여부 변경
		if ( gv_runMode == "L" ) {
			nDataType = 0;
			bCompress = false;
		}
		
		//Cookie에 Transaction DataType 추가 설정 by kksoo
		gv_xp_txdatatype=nDataType;
		
		transaction(strSvcID , strURL, strInDs      , strOutDs      , strArg     , strCallback   , bAsync, nDataType, bCompress);
		
		IntroFrameCmn.upjangToWeek(Div11.cbo_chartType.value);
	},
	
	/**
	 * @class 차트를 그린다.
	 */
	upjangToWeek : function(chartType) {
		var arrArg,arrSer;
		//---------------------------------------------
		// arrArg : 차트속성
		// caption		- 차트제목
		// PYAxisName	- 왼쪽 Y축의 명
		// yAxisName	- 오늘쪽쪽 Y축의 명
		// showValues	- 0 : 차트에 값 표시 안함
		//---------------------------------------------
		arrArg = ["caption", "", "PYAxisName", " ", "SYAxisName", " ", "showValues", "0", "numberPrefix", ""];
		
		//---------------------------------------------
		// arrSer : 그룹속성(3개씩 셋트)
		// [그룹명,Y축값컬럼명,그룹속성, ...]
		// 다중차트는 그룹속성을 설정안함.
		//---------------------------------------------
		arrSer = ["계획", "pRate"," ", "실적", "sRate", "parentYAxis='S'"];
		
		gfn_MultiChart(Div11.atx_chart1, chartType, ds_upjangTwoWeekChart, "baseDd", arrSer, arrArg, "", []);		
	},
	
	showEFoodistView : function(ds, rowPos) {
		var refSeq     = ds.getColumn(rowPos, "refSeq");
		var appendSeq  = ds.getColumn(rowPos, "appendSeq");
		var saveFileNm = ds.getColumn(rowPos, "orgnlFileNm");
		
		gfn_downloadFile(refSeq, appendSeq, saveFileNm, false, false);
		
		
// 		var strId = "EFoodistImgViewer";
// 		var strURL = "frame::EFoodistImgViewer.xfdl";
// 		var objArgument = {
// 			P_URL : imgPath
// 		};
// 		var nWidth = -1;
// 		var nHeight = -1;
// 		var strStyle = "";
// 		var nLeft = -1;
// 		var nTop = -1;
// 		var isModeless = false;
// 		var bShowTitle = true;
// 		var strAlign = "-1";
// 
// 		var rtn = gfn_dialog(strId, strURL, objArgument, nWidth, nHeight, strStyle, nLeft, nTop, isModeless, bShowTitle, strAlign);		
	},
	
	/**
	 * @class 여신정보 재조회
	 */
	upjangCredit : function() {
		var viewData = "";
		var strSvcID    = "IntroFrame_creditList";
		var strURL      = "svc::sc/cmn/introFrame/selectCreditList.xdo";
		var strInDs     = "";
		var strOutDs    = "ds_creditList=ds_creditList";
		var strArg      = "upjang=" + g_Upjang;
			strArg		+= " uKey=" + gfn_encProc(g_Upjang+gfn_today());
		var strCallback = "fn_callBack";
		var bAsync      = true;

		Div03.Grid00.nodatatext = "여신정보 조회중입니다....";
		
		setWaitCursor(true, true);
		
		//전송형태 : 0(XML 타입), 1(Binary 타입), 2(SSV 타입)
        var nDataType = 1; //성능테스트 시 0으로 변경 by kksoo
        
        //통신시 포스트데이터를 압축할지 여부
        var bCompress = true; //성능테스트시 false로 변경 by kksoo

		// 실행모드가 UX Studio 일때 전송형태, 압축여부 변경
		if ( gv_runMode == "L" ) {
			nDataType = 0;
			bCompress = false;
		}
		
		//Cookie에 Transaction DataType 추가 설정 by kksoo
		gv_xp_txdatatype=nDataType;
		
		transaction(strSvcID , strURL, strInDs      , strOutDs      , strArg     , strCallback   , bAsync, nDataType, bCompress);
		
		setWaitCursor(false, true);
	},
	
	upjangBudget : function() {
		var viewData = "";
		var strSvcID    = "IntroFrame_budgetList";
		var strURL      = "svc::sc/cmn/introFrame/selectBudgetList.xdo";
		var strInDs     = "";
		var strOutDs    = "ds_budgetList=ds_budgetList";
		var strArg      = "upjang=" + g_Upjang;
			strArg		+= " mainUpjang=" + g_Main_Upjang;
			strArg		+= " uKey=" + gfn_encProc(g_Upjang+gfn_today());
		var strCallback = "fn_callBack";
		var bAsync      = true;
		
		setWaitCursor(true, true);
		
		//전송형태 : 0(XML 타입), 1(Binary 타입), 2(SSV 타입)
        var nDataType = 1; //성능테스트 시 0으로 변경 by kksoo
        
        //통신시 포스트데이터를 압축할지 여부
        var bCompress = true; //성능테스트시 false로 변경 by kksoo

		// 실행모드가 UX Studio 일때 전송형태, 압축여부 변경
		if ( gv_runMode == "L" ) {
			nDataType = 0;
			bCompress = false;
		}
		
		//Cookie에 Transaction DataType 추가 설정 by kksoo
		gv_xp_txdatatype=nDataType;
		
		transaction(strSvcID , strURL, strInDs      , strOutDs      , strArg     , strCallback   , bAsync, nDataType, bCompress);
		
		setWaitCursor(false, true);
	},
	drawCalendar : function(ds_calendar_obj, grid_obj, ds_base_note_obj, yyyymm) {
		var i, day, row, colid;
		var start_day, end_date, today;
		var holiday, aHolidays;
		aHolidays = gfn_getHolidays(parseInt(yyyymm.substr(0,4), 10));
		
		grid_obj.enableredraw = false;
		
		// Dataset 만들기
		ds_calendar_obj.clearData();
		start_day = gfn_getDay(yyyymm+"01");
		last_date = gfn_getLastDateNum(yyyymm);
		row = ds_calendar_obj.addRow();
		for( i = 1, day = start_day ; i <= last_date ; i++ )
		{
			// 날짜
			ds_calendar_obj.setColumn(row, "day"+day, i);
			ds_calendar_obj.setColumn(row, "yymm"+day, yyyymm);

			// 음력 설정
			lunar = null;
			if( i%5 == 1 )
			{
				lunar = gfn_solar2Lunar( yyyymm + gfn_right("0"+i,2) );
				if( lunar != null )
					lunar = "(" + parseInt(lunar.substr(5,2)) + "." + parseInt(lunar.substr(7,2)) + ")";
			}
			// 휴일 설정
			holiday = IntroFrameCmn.isHoliday(yyyymm+gfn_right("0"+i, 2), aHolidays);
			if( holiday != "" )
			{
				ds_calendar_obj.setColumn(row, "hol"+day, "1"); 
				//ds_calendar_obj.setColumn(row, "base_note"+day, holiday); 
			} 
			else {
				//ds_calendar_obj.setColumn(row, "base_note"+day, lunar); 
			}

			//[[여기에다 날씨정보를 처리한다.
  			var findRow = ds_base_note_obj.findRow("fday", yyyymm+gfn_right("0"+i, 2));
  			
 			if (findRow > -1) {
				ds_calendar_obj.setColumn(row, "base_note"+day, ds_base_note_obj.getColumn(findRow, "wimg")); 
 			}
			//여기에다 날씨정보를 처리한다.]]

			// row 추가
			day = (day+1)%7;
			if( day == 0 && i != last_date ) row = ds_calendar_obj.addRow();
		}

		// 전월 일수 만들기
		// start Date가 속해있는 주의 시작일자를 계산
		Calendar0.value = yyyymm+'01';
		var	cal_ymd		= gfn_getStartOfWeek(Calendar0);
		var ii;
		var kk;

		for( ii = 0; ii <= 6 ; ii++ )
		{
			if(gfn_length(ds_calendar_obj.getColumn(0, "day"+ii))== 0) {
				ds_calendar_obj.setColumn(0, "day"+ii, parseInt(gfn_subStr(cal_ymd,6,2)));
				ds_calendar_obj.setColumn(0, "yymm"+ii, parseInt(gfn_subStr(cal_ymd,0,6)));
				ds_calendar_obj.setColumn(0, "hol"+ii, "2");
			}
			else {
				break;
			}
			cal_ymd = gfn_addDate(cal_ymd, 1);
		}

		// row 6개 만들기
		if(ds_calendar_obj.getRowCount() != 6) {
			row = ds_calendar_obj.addRow();
		}
		if(ds_calendar_obj.getRowCount() != 6) {
			row = ds_calendar_obj.addRow();
		}	

		// 익월 일수 만들기 (row 4, 5)
		cal_ymd = gfn_addDate(gfn_getLastDate(yyyymm+'01'), 1);
		for( kk = 4; kk <= 5 ; kk++ )
		{		
			for( ii = 0; ii <= 6 ; ii++ )
			{
				if(gfn_isNull(ds_calendar_obj.getColumn(kk, "day"+ii))) {
					ds_calendar_obj.setColumn(kk, "day"+ii, parseInt(gfn_subStr(cal_ymd,6,2)));
					ds_calendar_obj.setColumn(kk, "yymm"+ii, parseInt(gfn_subStr(cal_ymd,0,6)));
					ds_calendar_obj.setColumn(kk, "hol"+ii, "2");
					cal_ymd = gfn_addDate(cal_ymd, 1);
				}			
			}	
		}
		//grid_obj.enableredraw = true;

		// 현재일자 Grid focus
		for (i=0;i<ds_calendar_obj.rowcount;i++)
		{			
			for (j=0;j<7;j++)
			{
				if(gfn_length(ds_calendar_obj.getColumn(i, "day" + j))> 1) {
					VDate = ds_calendar.getColumn(i, "day" + j);
				} 
				else {
					VDate = "0"+ds_calendar_obj.getColumn(i, "day" + j);
				}

 				if(eval(ds_calendar_obj.getColumn(i, "yymm" + j)+VDate) == gfn_today()) 
 				{
 					ds_calendar_obj.rowposition = i;
 					Div07.grd_calendar.setCellPos(j);
					return;
 				}
			}
		}	
	},
	
	isHoliday : function(sDate, aHolidays) {
		var i;

		for( i = 0 ; i < aHolidays.length ; i++ )
		{
			if( aHolidays[i].substr(0,8) == sDate )
				return aHolidays[i].substr(8);
		}

		return "";	
	}

	
}
]]></Script>
