<?xml version="1.0" encoding="utf-8"?>
<Script type="xscript4.0"><![CDATA[/*================================================================================
 *  프로그램 설명 : FS 관련 공통 스크립트 
 *  작성일자 : 2007/12/03
 *  버전 : 1.0
 *  변경 이력 
    일자            작성자          비고
    ------------------------------------------------------------
    2007/12/03      한화 S&C 프로젝트팀 박종세     최초 작성 
================================================================================*/
/*****************************************************************************************/
/***김동표 추가 시작**********************************************************************/
/*****************************************************************************************/
var g_Leader_AuthLevel = "12";

// 거래처코드
var strQuery_CUST                = " SELECT A.VD_CD , A.VD_NM  || ';' || A.BIZ_REG_NO  AS VD_NM FROM VO_FC_VENDOR A WHERE (1=1) ";
var strQuery_CUSTKeyField      = "A.VD_CD";
var strQuery_CUSTValueField    = "A.VD_NM";
var strQuery_CUSTKeyFieldNM    = "업체코드";
var strQuery_CUSTValueFieldNM  = "업체명"; 
var strQuery_CUSTCaption       = "업체정보조회";
var strQuery_CUSTAllField      = "VD_CD;VD_NM";
// 자재코드
//var strQuery_ITEM                = " SELECT ITEM_CODE, ITEM_NAME || ';' || ITEM_SIZE || ';' || PO_UOM AS ITEM_NAME FROM HLDC_PO_ITEM_MST WHERE ITEM_CODE BETWEEN '010100000001' AND '018999999999' AND USE_YN = 'Y' ";
//var strQuery_ITEM                = " SELECT ITEM_CODE, ITEM_NAME || ';' || ITEM_SIZE || ';' || PO_UOM AS ITEM_NAME FROM HLDC_PO_ITEM_MST WHERE ITEM_CLASS2 BETWEEN 'F10' AND 'F26' AND USE_YN = 'Y' ";
var strQuery_ITEM                = " SELECT ITEM_CODE, ITEM_NAME FROM HLDC_PO_ITEM_MST WHERE ITEM_CLASS2 BETWEEN 'F10' AND 'F26' AND USE_YN = 'Y' ";
var strQuery_ITEMKeyField      = "ITEM_CODE";
var strQuery_ITEMValueField    = "ITEM_NAME";
var strQuery_ITEMKeyFieldNM    = "자재코드";
var strQuery_ITEMValueFieldNM  = "자재명"; 
var strQuery_ITEMCaption       = "자재정보조회";
// 운영팀정보
//var strQuery_Team              = " SELECT DISTINCT TM_CD, TM_NM FROM HLDC_SC_DEPT_V WHERE (MU_CD = 'YA') AND (FS_UPJANG = 'Y') ";
// 사업부 조회조건 추가로 인해 하드코딩 제거 - 고도화 김민수 수정
var strQuery_Team              = " SELECT DISTINCT TM_CD, TM_NM FROM HLDC_SC_DEPT_V WHERE (1=1) AND (FS_UPJANG = 'Y') ";
var strQuery_TeamKeyField      = "TM_CD";
var strQuery_TeamValueField    = "TM_NM";
var strQuery_TeamKeyFieldNM    = "팀코드";
var strQuery_TeamValueFieldNM  = "팀명"; 
var strQuery_TeamCaption       = "운영팀정보조회";
// 직군정보
var strQuery_Job               = " SELECT JOB_CD, JOB_NAME FROM MAS_JOB WHERE (USE_YN = 'Y') ";
var strQuery_JobKeyField       = "JOB_CD";
var strQuery_JobValueField     = "JOB_NAME";
var strQuery_JobKeyFieldNM     = "직군코드";
var strQuery_JobValueFieldNM   = "직군명"; 
var strQuery_JobCaption        = "직군정보조회";
// 상세직군정보
var strQuery_SubJob               = " SELECT SUB_JOB_CD, SUB_JOB_NAME FROM MAS_JOB_SUB WHERE (USE_YN = 'Y') ";
var strQuery_SubJobKeyField       = "SUB_JOB_CD";
var strQuery_SubJobValueField     = "SUB_JOB_NAME";
var strQuery_SubJobKeyFieldNM     = "상세직군코드";
var strQuery_SubJobValueFieldNM   = "상세직군명"; 
var strQuery_SubJobCaption        = "상세직군정보조회";
// 자재대분류
var strQuery_ItemClass1             = " SELECT SUBSTR(CLASS_CODE,1,4) AS CLASS_CODE, CLASS_NAME FROM HLDC_PO_ITEM_CLASS_HLDC_V WHERE (CLASS_TYPE = 'M') AND (CLASS_CODE BETWEEN 'F10' AND 'F26') AND (USE_YN = 'Y') ";
var strQuery_ItemClass1KeyField     = "CLASS_CODE";
var strQuery_ItemClass1ValueField   = "CLASS_NAME";
var strQuery_ItemClass1KeyFieldNM   = "대분류코드";
var strQuery_ItemClass1ValueFieldNM = "대분류명"; 
var strQuery_ItemClass1Caption      = "자재대분류조회";
// 자재중분류
var strQuery_ItemClass2             = " SELECT SUBSTR(CLASS_CODE,1,6) AS CLASS_CODE, CLASS_NAME FROM HLDC_PO_ITEM_CLASS_HLDC_V WHERE (CLASS_TYPE = 'S') AND (CLASS_CODE BETWEEN 'F10' AND 'F26') AND (USE_YN = 'Y') ";
var strQuery_ItemClass2KeyField     = "CLASS_CODE";
var strQuery_ItemClass2ValueField   = "CLASS_NAME";
var strQuery_ItemClass2KeyFieldNM   = "중분류코드";
var strQuery_ItemClass2ValueFieldNM = "중분류명"; 
var strQuery_ItemClass2Caption      = "자재중분류조회";
// 자재소분류
var strQuery_ItemClass3             = " SELECT SUBSTR(CLASS_CODE,1,8) AS CLASS_CODE, CLASS_NAME FROM HLDC_PO_ITEM_CLASS_HLDC_V WHERE (CLASS_TYPE = 'D') AND (CLASS_CODE BETWEEN 'F10' AND 'F26') AND (USE_YN = 'Y') ";
var strQuery_ItemClass3KeyField     = "CLASS_CODE";
var strQuery_ItemClass3ValueField   = "CLASS_NAME";
var strQuery_ItemClass3KeyFieldNM   = "소분류코드";
var strQuery_ItemClass3ValueFieldNM = "소분류명"; 
var strQuery_ItemClass3Caption      = "자재소분류조회";
// 센터정보
var strQuery_Center                 = " SELECT CENTER_CODE, CENTER_NAME FROM HLDC_PO_CENTER WHERE (USE_YN = 'Y') ";
var strQuery_CenterKeyField         = "CENTER_CODE";
var strQuery_CenterValueField       = "CENTER_NAME";
var strQuery_CenterKeyFieldNM       = "센터코드";
var strQuery_CenterValueFieldNM     = "센터명"; 
var strQuery_CenterCaption          = "센터정보조회";

//Popup Button Key에 따른 처리 ###########################################################
function fs_fn_edt_OnKeyDown(obj, nChar, strTabObj)
{
	if(!gfn_isNull(strTabObj)) strTabObj += ".";

	// Enter 키
	if(nChar == 13) 
	{
        if ( (gfn_isNull(obj.text)) || (eval(strTabObj + "btn_" + gfn_subStr(obj.name, 3)).userdata != obj.text) )
        {
			eval(strTabObj + "btn_" + gfn_subStr(obj.name, 3)).click();
			//return false;		// gfn_formKeyDown 실행
		}
	}	
	// Del 키
	else if(nChar == 46) 
	{		
		obj.value    = "";
		obj.userdata = "";
		//return true;		// gfn_formKeyDown 실행 안함
	}	
// 	if (nChar == 13){
//         if (
//             (obj.text     == "")||
//             (eval(strTabObj + "btn_" + SubStr(obj.name, 3)).userdata != obj.text)
//            )
//         {
// 			eval(strTabObj + "btn_" + SubStr(obj.name, 3)).click();
// 		}
// 	}
// 	else if (nChar == 46){
// 
// 		obj.userdata = "";
// 		obj.text     = "";
// 		//eval(obj.id + "_OnChanged(" + obj.id + ", " + "" + ")");
// 	}
}
//Popup Button Key에 따른 처리 ###########################################################


//edtBtn OnClick 가져오기 ################################################################
function fs_fn_edtBtn_OnClick(obj, strTabObj)
{
  
	if(!gfn_isNull(strTabObj)) strTabObj += '.';  
    
	fn_sql_common_setup(eval(eval(strTabObj + "st_" + gfn_subStr(obj.name, 4)).userdata),
						eval(eval(strTabObj + "st_" + gfn_subStr(obj.name, 4)).userdata + "KeyField"),
						eval(eval(strTabObj + "st_" + gfn_subStr(obj.name, 4)).userdata + "ValueField"),
						eval(eval(strTabObj + "st_" + gfn_subStr(obj.name, 4)).userdata + "KeyFieldNM"),
						eval(eval(strTabObj + "st_" + gfn_subStr(obj.name, 4)).userdata + "ValueFieldNM"),
						"",
						"",
						"",
						eval(eval(strTabObj + "st_" + gfn_subStr(obj.name, 4)).userdata + "Caption"),
						eval(eval(strTabObj + "st_" + gfn_subStr(obj.name, 4)).userdata + "AllField") );

	if (!gfn_isNull(gds_sql_common.getColumn(0, "ret_code"))){

		eval(strTabObj + "ed_" + gfn_subStr(obj.name, 4)).userdata = gds_sql_common.getColumn(0, "ret_code");
		eval(strTabObj + "ed_" + gfn_subStr(obj.name, 4)).value    = gds_sql_common.getColumn(0, "ret_name");

		obj.userdata = eval(strTabObj + "ed_" + gfn_subStr(obj.name, 4)).value;
	}
	else {

		if (obj.userdata != eval(strTabObj + "ed_" + gfn_subStr(obj.name, 4)).value)
		{
		    eval(strTabObj + "ed_" + gfn_subStr(obj.name, 4)).userdata = "";
		    eval(strTabObj + "ed_" + gfn_subStr(obj.name, 4)).value    = "";

			obj.userdata = "";
		}
	}
}
//edtBtn OnClick 가져오기 ################################################################

//edtBtn OnClick 가져오기 ################################################################
function fs_fn_edtBtn_OnClick(obj, strTabObj, strWhere)
{
	if(!gfn_isNull(strTabObj)) strTabObj += '.';  
    
	fn_sql_common_setup(eval(eval(strTabObj + "st_" + gfn_subStr(obj.name, 4)).userdata),
						eval(eval(strTabObj + "st_" + gfn_subStr(obj.name, 4)).userdata + "KeyField"),
						eval(eval(strTabObj + "st_" + gfn_subStr(obj.name, 4)).userdata + "ValueField"),
						eval(eval(strTabObj + "st_" + gfn_subStr(obj.name, 4)).userdata + "KeyFieldNM"),
						eval(eval(strTabObj + "st_" + gfn_subStr(obj.name, 4)).userdata + "ValueFieldNM"),
						"",
						"",
						strWhere,
						eval(eval(strTabObj + "st_" + gfn_subStr(obj.name, 4)).userdata + "Caption"),
						eval(eval(strTabObj + "st_" + gfn_subStr(obj.name, 4)).userdata + "AllField") );

	if (!gfn_isNull(gds_sql_common.getColumn(0, "ret_code"))){

		eval(strTabObj + "ed_" + gfn_subStr(obj.name, 4)).userdata = gds_sql_common.getColumn(0, "ret_code");
		eval(strTabObj + "ed_" + gfn_subStr(obj.name, 4)).value    = gds_sql_common.getColumn(0, "ret_name");

		obj.userdata = eval(strTabObj + "ed_" + gfn_subStr(obj.name, 4)).value;
	}
	else {

		if (obj.userdata != eval(strTabObj + "ed_" + gfn_subStr(obj.name, 4)).value)
		{
		    eval(strTabObj + "ed_" + gfn_subStr(obj.name, 4)).userdata = "";
		    eval(strTabObj + "ed_" + gfn_subStr(obj.name, 4)).value    = "";

			obj.userdata = "";
		}
	}
}
//edtBtn OnClick 가져오기 ################################################################

//달력 컴포넌트 자동완성  ################################################################
function fn_cal_AutoComplete(obj)
{
	var objForm = obj;
	
	var objComponent;
	var strCompName,strCompType;
	
	for (var i=0 ; i < Length(objForm.all);i++)
	{
		objComponent = objForm.all[i];
		
		strCompName 		= objComponent.name;
		strCompType 		= GetType(objComponent);

		if(ToUpperCase(strCompType)== "CALENDAR"){
			objComponent.FocusIndex = 99;
			setEventHandle(objComponent.onkeydown,"fn_cal_OnKeyDown");
			setEventHandle(objComponent.onchanged,"fn_cal_OnChanged");
		}
	}	
}

function fn_cal_OnChanged(obj,strOldText,strNewText)
{
	if(gfn_isNull(strNewText)) obj.setFocus();
}

var p_Char = "";
function fn_cal_OnKeyDown(obj,nChar,bShift,bCtrl,bAlt,nLLParam,nHLParam)
{
	if(nChar >= 96 && nChar <= 105) nChar = nChar - 48;
	
	if(nChar == 13)
	{
		http.Sync = true;
		fn_FormatDate(obj, p_Char);
		http.Sync = false;
		p_Char = "";
	}
	else
	{
		if( isNumeric(String.fromCharCode(nChar)) ) p_Char += String.fromCharCode(nChar);
	}
}

// 달력 자동 완성 로직
function fn_FormatDate (obj, strDate)
{
	if(gfn_isNull(strDate))
	{
		return "";
	}

	strDate = gfn_mid(strDate,0,10);
	
	if(isNumeric(strDate))
	{
		switch(Length(strDate))
		{
			case 8:	//YYYYMMDD
				strDate = strDate;
				break;
			case 4:	//MMDD
				strDate =  gfn_subStr(gfn_today(),0,4)+ Mid(strDate,0,2)+ Mid(strDate,2,2);
				break;
			case 3:	//MDD
				strDate = gfn_subStr(gfn_today(),0,5)+ Mid(strDate,0,1)+ Mid(strDate,1,2);
				break;
			case 2:	//DD
				strDate = gfn_subStr(gfn_today(),0,6)+ strDate;
				break;
			case 1:	//D
				strDate = gfn_subStr(gfn_today(),0,6)+ "0" + strDate;
				break;
			default:	//오류
				strDate = "";
				break;
		}		
	}
	
	if(isValidObject(obj))
	{
		obj.value = strDate;
	}
	
	return;	
}
//달력 컴포넌트 자동완성  ################################################################/*****************************************************************************************/
/***김동표 추가 끝************************************************************************/
/*****************************************************************************************/

//********  컴포넌트 ********************************************************
//1.컴포넌트 필수입력사항 확인 함수 
function mfn_Chk_Obj_MustInput(obj) {
	var blnRtn = false;
	if(!mfn_Chk_Obj_IsNotNull(obj))
	{
		g_Message("EE", obj.tooltiptext + " 은(는) 필수 입력사항 입니다.");
		obj.setFocus();
		blnRtn=false;
	} 
	else
	{
		blnRtn=true;
	}
	return blnRtn;
}

//입력값이 NULL인가?
function mfn_Chk_Obj_IsNotNull(obj){
	var blnRtn = false;	
	var strObjType = GetType(obj);
	switch (strObjType)
	{
			case "Edit" :
				if(Length(obj.text)<>0) {blnRtn=true;}
				break;
			case "MaskEdit" :
				if((Length(obj.text)<>0)&&(obj.text<>"____-__-__")&&(obj.text<>"____-__")){blnRtn=true;}
				break;
			case "Combo" :
				if(Length(obj.value)<>0) {blnRtn=true;}
				break;
			case "Static" :
				if(Length(obj.text)<>0) {blnRtn=true;}
				break;			
			case "Calendar" :
				if(Length(obj.value)<>0) {blnRtn=true;}
				break;				
			
			default :
				blnRtn=true;
	}
	return blnRtn;
}

//2.컴포넌트의 Text값이 인자값이 같은지 확인 함수  
function mfn_Chk_Obj_TextIsSame(obj, strCheckText){
	var blnRtn = false;	
	var strObjType = GetType(obj);
	switch (strObjType)
	{
			case "Edit" :
				if(obj.text==strCheckText) {blnRtn=true;}
				break;
			case "Combo" :
				if(obj.value==strCheckText) {blnRtn=true;}
				break;  
			default :
				blnRtn=true;
	}
	return blnRtn;
}

//Combo 컴포넌트에서 delete키 누를때 선택없음 으로 변경 
function mfn_Combo_Selected_Clear(obj, nChar)
{   //key code :46 -->> Delete Key 클릭시 콤보의 선택없음.
    if(nChar==46) {
     obj.index="-1";}
}


//CheckBox 컴포넌트 워닝 표시 공통 함수(체크오브젝트, 현재값, 경고값, 경고메세지)
//체크박스 워닝(경고) 표시 공통함수(체크오브젝트, 현재값, 경고값, 경고메세지)
function mfn_chk_display_warning(obj, strValue, strWaringValue, strWarningMsg)
{

	if(strValue==strWaringValue)
	{
// 		obj.style.background.color="#FF6600";
// 		obj.style.color  ="#FFFFFF";
		if(Length(strWarningMsg)>0){g_Message("02",strWarningMsg);}
	}
	else
	{
// 		obj.style.background.color="";
// 		obj.style.color="";
	} 
}

//**********데이터셋 ******************************************************
//데이터셋에서 delete를 할때 로우타입이 Insert이면 자동으로 DeleteRow를 한후Return true
//목적-->> return true 이면 DB Transaction을 수행할 필요가 없다.
function mfn_chk_rowtypeInsert_deleteRow(objDataSet){
 if (ToLower(GetRowType(objDataSet,objDataSet.rowposition))=="insert"){
	objDataSet.deleteRow(objDataSet.rowposition);
	return true;
  }
  else{
	return false;
  }
}


//데이터셋에서 그리드가 MuliSelect  일 경우 선택된 로우를 String "1, 3, 11...." 가져오는 함수 Return String
function mfn_Get_MultiSelectStr(objDataSet)
{
	// MutiSelect
	var rowCnt = objDataSet.rowcount;

	var selectedcnt = 0;
	var selectedStr = '';
	
    for(var iRow=0; iRow <= rowCnt; iRow++) 
    {
		  if(objDataSet.getSelect(iRow)) 
		  {
			 if(selectedcnt==0) {
				 selectedStr = "" + iRow;
			  } 
			 else {
				 selectedStr = selectedStr + "," + iRow;
			 }			
			 selectedcnt++;
		  } 
	}
	return selectedStr;
}
	

//******** 메세지 *********************************************************
//삭제버튼 클릭시 삭제 메세지 확인 함수
function mfn_Call_DeleteMsg(){
	var DeleteMsg = "선택하신 데이터를 삭제 하시겠습니까?";
	var blnRtn = false;	
	blnRtn=g_Confirm("01",DeleteMsg);	
	return blnRtn;		
}


//*********기타 **********************************************************
//디버깅을 위한 함수 
function mfn_show_dataset(ds_obj, strGubun)
{
    switch(strGubun)
    {
		 case "d":   //g_debug를 이용한 데이터셋보기 
			g_Debug(ds_obj.name);
			break;
		 case "t":   //trace로 Xml로 출력하기
			trace(SaveXML(ds_obj,null));
			break;
		 case "a":   //alert으로 Xml로 출력하기
			alert(SaveXML(ds_obj,null));
			break;
		 case "dt":  //g_debug, Trace 사용하기
 			g_debug(ds_obj.name);
			trace(SaveXML(ds_obj,null));
			break;
		 case "all": //모두 사용하기 
 			g_debug(ds_obj.name);
			trace(SaveXML(ds_obj,null));
			alert(SaveXML(ds_obj,null));
			break;
	}	    
}

//시간체크함수
function mfn_chk_timeformat(strTimeHH24MM)
{
	if(Length(strTimeHH24MM)!=4){
		alert("잘못된 시간입니다. 시간을 (HH24:MM)으로 입력하여 주십시요.");
		return false;}
	
    if(toNumber(gfn_left(strTimeHH24MM,2))>24 || toNumber(gfn_left(strTimeHH24MM,2))<0){
		alert("잘못된 시간입니다. 시간을 (HH24:MM)으로 입력하여 주십시요.");
		return false;}
    
    if(toNumber(gfn_right(strTimeHH24MM,2))>59 || toNumber(gfn_right(strTimeHH24MM,2))<0){
		alert("잘못된 시간입니다. 시간을 (HH24:MM)으로 입력하여 주십시요.");
		return false;}
    return true;
}

//첫번쨰 시간과 두번째 시간 크기비교, 비교연산자
function mfn_chk_timeBetween(strFirstTimeHH24MM, strSecondTimeHH24MM, strFirstTimeName, strSecondTimeName, strOperation)
{
	var blnRtn=false;
	if(Length(strFirstTimeHH24MM)==0){return true;}
	if(Length(strSecondTimeHH24MM)==0){return true;}

	if(strFirstTimeName==""){strFirstTimeName="시작시간";}
	if(strSecondTimeName==""){strSecondTimeName="종료시간";}
	
	var strAlertMsg = strFirstTimeName + " 과(와) " +strSecondTimeName +" 을(를) 확인하여 주십시요.";

	switch(strOperation)
	{	
		case ">":
			if(toNumber(strFirstTimeHH24MM) > toNumber(strSecondTimeHH24MM)){
			blnRtn=true;}
			break;
		case "<":
			if(toNumber(strFirstTimeHH24MM) < toNumber(strSecondTimeHH24MM)){
			blnRtn=true;}
			break;
		case ">=":
			if(toNumber(strFirstTimeHH24MM) >= toNumber(strSecondTimeHH24MM)){
			blnRtn=true;}
			break;
		case "<=":
			if(toNumber(strFirstTimeHH24MM) <= toNumber(strSecondTimeHH24MM)){
			blnRtn=true;}
			break;
		case "==":
			if(toNumber(strFirstTimeHH24MM) == toNumber(strSecondTimeHH24MM)){
			blnRtn=true;}
			break;
		case "!=":
			if(toNumber(strFirstTimeHH24MM) != toNumber(strSecondTimeHH24MM)){
			blnRtn=true;}
			break;
		default:
			blnRtn=false;
	}	
	
	if(!blnRtn){alert(strAlertMsg);}
	return  blnRtn;
}

function fn_clearNaN(inVal)
 {
     var outVal = 0;
     
     if(isFinite(inVal)) {
        outVal = inVal;
     } else if(isNaN(inVal)) {
        outVal = 0;
     } else {
        outVal = 0;
     }
     
     return outVal;
 }
]]></Script>
