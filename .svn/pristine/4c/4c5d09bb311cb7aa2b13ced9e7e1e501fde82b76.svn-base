<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="..\..\..\default_typedef.xml"/>
  <Form id="StandardRecipeInquirybyRecipe" classname="COMP_GUIDE_13" inheritanceid="" position="absolute 0 0 1252 725" titletext="표준 레시피 조회(by Recipe)" scrollbars="autoboth" onload="form_onload">
    <Layouts>
      <Layout>
        <Static id="Static06" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 1237 0 1252 710" anchor="top right"/>
        <Static id="Static71" text="h15" class="Guide01_AreaRed" visible="false" position="absolute 0 710 1252 725" anchor="left bottom"/>
        <Div id="div_cmnBtn" anchor="left top right" taborder="4" url="cmn::CmnBtn.xfdl" text="Div00" scrollbars="none" position="absolute 0 0 1237 30" tabstop="false"/>
        <Static id="Static08" class="sta_WFSA_Labelbg" position="absolute 0 30 1237 71" anchor="left top right"/>
        <Static id="Static28" text="사업부" class="sta_WFSA_label" position="absolute 15 40 77 61" anchor="left top"/>
        <Static id="Static04" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 0 30 93 40" anchor="left top"/>
        <Static id="Static05" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 0 61 93 71" anchor="left top"/>
        <Static id="Static07" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 0 40 15 61" anchor="left top"/>
        <Static id="Static11" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 60 40 70 61" anchor="left top"/>
        <Static id="Static22" text="레시피 내역" class="sta_WF_Title01" position="absolute 0 84 450 102" anchor="left top"/>
        <Static id="Static15" text="h13" class="Guide01_AreaRed" visible="false" position="absolute 0 71 450 84" anchor="left top"/>
        <Static id="Static16" text="글자기준간격 h05" class="Guide01_AreaRed" visible="false" position="absolute 0 97 450 102" anchor="left top"/>
        <Static id="Static09" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 180 40 210 61" anchor="left top"/>
        <Combo id="cbo_schMuCd" taborder="5" position="absolute 70 40 180 61" index="-1" anchor="left top" class="cmb_WF_Essential" innerdataset="@ds_muCd" codecolumn="muCd" datacolumn="muNm" readonly="true"/>
        <Static id="Static12" text="기준일자" class="sta_WFSA_label" position="absolute 685 40 747 61" anchor="left top"/>
        <Static id="Static13" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 745 40 755 61" anchor="left top"/>
        <Static id="Static03" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 617 40 647 61" anchor="left top"/>
        <Static id="Static10" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 855 40 885 61" anchor="left top"/>
        <Static id="Static14" text="조회단계" class="sta_WFSA_label" position="absolute 1095 40 1157 61" anchor="left top" visible="false"/>
        <Static id="Static17" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 1155 40 1165 61" anchor="left top"/>
        <Static id="Static19" text="레시피" class="sta_WFSA_label" position="absolute 417 40 490 61" anchor="left top"/>
        <Static id="Static20" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 465 40 475 61" anchor="left top"/>
        <Edit id="edt_schRecipeNm" taborder="1" position="absolute 475 40 635 61" anchor="left top" class="edt_WF_Essential"/>
        <Button id="btn_recipePop" taborder="1" class="btn_WF_popSearch" position="absolute 634 40 655 61" anchor="left top"/>
        <Static id="Static21" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 655 40 685 61" anchor="left top"/>
        <MaskEdit id="msk_schTreeLevel" taborder="1" class="msk_WF_Essential" position="absolute 1164 40 1199 61" onkeyup="edt_schTreeLevel_onkeyup" visible="false"/>
        <Static id="Static02" text="업장유형" class="sta_WFSA_label" position="absolute 210 40 272 61" anchor="left top"/>
        <Combo id="cbo_schUpjangType" taborder="1" value="01" text="전문식당" innerdataset="@ds_upjangType" codecolumn="code" datacolumn="codeName" index="0" class="cmb_WF_Essential" position="absolute 277 40 387 61" anchor="left top"/>
        <Static id="Static23" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 387 40 417 61" anchor="left top"/>
        <Static id="Static24" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 268 40 278 61" anchor="left top"/>
        <Static id="Static00" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 1065 40 1095 61" anchor="left top"/>
        <Static id="Static01" text="단가설정" class="sta_WFSA_label" position="absolute 885 40 947 61" anchor="left top"/>
        <Static id="Static18" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 945 40 955 61" anchor="left top"/>
        <Combo id="cbo_schPriceSet" taborder="7" value="1" text="현 구매단가" innerdataset="@ds_priceSet" codecolumn="code" datacolumn="codeName" index="0" class="cmb_WF_Essential" position="absolute 955 40 1065 61" anchor="left top"/>
        <ObjCalendar id="cal_stdDate" titletext="캘린더" taborder="8" text="ObjCalendar00" scrollbars="none" position="absolute 754 40 855 61" class="cal_WF_Essential"/>
        <Grid id="grd_output" taborder="14" autoenter="select" useinputpanel="false" cellsizingtype="col" autofittype="col" treeusecheckbox="false" treeuseimage="false" treeinitstatus="expand,all" oncelldblclick="grd_output_oncelldblclick" onselectchanged="grd_output_onselectchanged" position="absolute 0 102 1237 710" anchor="all">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="25"/>
                <Column size="270"/>
                <Column size="100"/>
                <Column size="80"/>
                <Column size="80"/>
                <Column size="280"/>
                <Column size="60"/>
                <Column size="65"/>
                <Column size="83"/>
                <Column size="100"/>
                <Column size="0"/>
                <Column size="92"/>
                <Column size="85"/>
                <Column size="100"/>
                <Column size="70"/>
                <Column size="70"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell style="background:#566572ff URL('theme://convertImages/new/img_WF_Excel.png') center middle;" class="head_Excel"/>
                <Cell col="1" text="레시피"/>
                <Cell col="2" text="구분"/>
                <Cell col="3" text="자재코드"/>
                <Cell col="4" text="제조사"/>
                <Cell col="5" text="규격"/>
                <Cell col="6" text="원산지"/>
                <Cell col="7" text="재료단위"/>
                <Cell col="8" text="투입재료량"/>
                <Cell col="9" text="적용투입재료량"/>
                <Cell col="10" text="단가"/>
                <Cell col="11" text="G당 단가"/>
                <Cell col="12" text="사용률(%)"/>
                <Cell col="13" text="투입재료비"/>
                <Cell col="14" text="시작일"/>
                <Cell col="15" text="종료일"/>
              </Band>
              <Band id="body">
                <Cell style="background:EXPR(fn_bgColor(treeLevel, semiGoodsYn));background2:EXPR(fn_bgColor(treeLevel, semiGoodsYn));" expr="currow+1"/>
                <Cell col="1" displaytype="tree" edittype="tree" style="align:left;background:EXPR(fn_bgColor(treeLevel, semiGoodsYn));background2:EXPR(fn_bgColor(treeLevel, semiGoodsYn));" text="expr:materialCdNm" editautoselect="true" treelevel="bind:treeLevel"/>
                <Cell col="2" style="background:EXPR(fn_bgColor(treeLevel, semiGoodsYn));background2:EXPR(fn_bgColor(treeLevel, semiGoodsYn));" text="expr:semiGoodsYn == 'Y' ? '레시피' : '식자재'"/>
                <Cell col="3" style="background:EXPR(fn_bgColor(treeLevel, semiGoodsYn));background2:EXPR(fn_bgColor(treeLevel, semiGoodsYn));" text="bind:materialCd"/>
                <Cell col="4" style="background:EXPR(fn_bgColor(treeLevel, semiGoodsYn));background2:EXPR(fn_bgColor(treeLevel, semiGoodsYn));" text="bind:maker"/>
                <Cell col="5" displaytype="text" edittype="none" style="background:EXPR(fn_bgColor(treeLevel, semiGoodsYn));background2:EXPR(fn_bgColor(treeLevel, semiGoodsYn));" text="bind:itemSize" wordwrap="none" expandshow="hide" tooltiptype="mouse" tooltiptext="bind:itemSize"/>
                <Cell col="6" style="background:EXPR(fn_bgColor(treeLevel, semiGoodsYn));background2:EXPR(fn_bgColor(treeLevel, semiGoodsYn));" text="bind:originType"/>
                <Cell col="7" style="background:EXPR(fn_bgColor(treeLevel, semiGoodsYn));background2:EXPR(fn_bgColor(treeLevel, semiGoodsYn));" text="expr:semiGoodsYn == 'Y' ? 'G' : recipeApplyUnit"/>
                <Cell col="8" displaytype="number" style="background:EXPR(fn_bgColor(treeLevel, semiGoodsYn));background2:EXPR(fn_bgColor(treeLevel, semiGoodsYn));" text="bind:needQty"/>
                <Cell col="9" displaytype="number" style="background:EXPR(fn_bgColor(treeLevel, semiGoodsYn));background2:EXPR(fn_bgColor(treeLevel, semiGoodsYn));" text="bind:applyQty"/>
                <Cell col="10" displaytype="number" style="background:EXPR(fn_bgColor(treeLevel, semiGoodsYn));background2:EXPR(fn_bgColor(treeLevel, semiGoodsYn));" text="bind:cstAmt"/>
                <Cell col="11" displaytype="number" style="background:EXPR(fn_bgColor(treeLevel, semiGoodsYn));background2:EXPR(fn_bgColor(treeLevel, semiGoodsYn));" text="bind:gramPrice"/>
                <Cell col="12" style="align:right;background:EXPR(fn_bgColor(treeLevel, semiGoodsYn));background2:EXPR(fn_bgColor(treeLevel, semiGoodsYn));" text="bind:lossRate"/>
                <Cell col="13" displaytype="number" style="background:EXPR(fn_bgColor(treeLevel, semiGoodsYn));background2:EXPR(fn_bgColor(treeLevel, semiGoodsYn));" text="bind:investAmt"/>
                <Cell col="14" displaytype="expr:currow == 0 ? 'normal' : 'date'" style="background:EXPR(fn_bgColor(treeLevel, semiGoodsYn));background2:EXPR(fn_bgColor(treeLevel, semiGoodsYn));" text="bind:sdate"/>
                <Cell col="15" displaytype="expr:currow == 0 ? 'normal' : 'date'" style="background:EXPR(fn_bgColor(treeLevel, semiGoodsYn));background2:EXPR(fn_bgColor(treeLevel, semiGoodsYn));" text="bind:edate"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
      </Layout>
    </Layouts>
    <Bind>
      <BindItem id="item0" compid="msk_schTreeLevel" propid="value" datasetid="ds_search" columnid="treeLevel"/>
      <BindItem id="item1" compid="cbo_schMuCd" propid="value" datasetid="ds_search" columnid="muCd"/>
      <BindItem id="item2" compid="cbo_schUpjangType" propid="value" datasetid="ds_search" columnid="upjangType"/>
      <BindItem id="item3" compid="cbo_schPriceSet" propid="value" datasetid="ds_search" columnid="priceSet"/>
    </Bind>
    <Objects>
      <Dataset id="ds_list" firefirstcount="0" firenextcount="0" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="muCd" type="STRING" size="255"/>
          <Column id="upjangType" type="STRING" size="255"/>
          <Column id="stdRecipeCd" type="STRING" size="255"/>
          <Column id="recipeNm" type="STRING" size="255"/>
          <Column id="materialCd" type="STRING" size="255"/>
          <Column id="materialCdNm" type="STRING" size="255"/>
          <Column id="sdate" type="STRING" size="255"/>
          <Column id="edate" type="STRING" size="255"/>
          <Column id="needQty" type="BIGDECIMAL" size="255"/>
          <Column id="cstAmt" type="BIGDECIMAL" size="255"/>
          <Column id="poUnit" type="STRING" size="255"/>
          <Column id="recipeApplyUnit" type="STRING" size="255"/>
          <Column id="offerUnit" type="STRING" size="255"/>
          <Column id="offerUnitNm" type="STRING" size="255"/>
          <Column id="lossRate" type="STRING" size="255"/>
          <Column id="semiGoodsYn" type="STRING" size="255"/>
          <Column id="investAmt" type="BIGDECIMAL" size="255"/>
          <Column id="itemSize" type="STRING" size="255"/>
          <Column id="maker" type="STRING" size="255"/>
          <Column id="originType" type="STRING" size="255"/>
          <Column id="treeLevel" type="BIGDECIMAL" size="255"/>
          <Column id="gramPrice" type="BIGDECIMAL" size="255"/>
          <Column id="applyQty" type="BIGDECIMAL" size="255"/>
          <Column id="parentRecipeCd" type="STRING" size="255"/>
          <Column id="sumNeedQty" type="BIGDECIMAL" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_muCd" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="muCd" type="STRING" size="256"/>
          <Column id="muNm" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_upjangType" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="code" type="STRING" size="256"/>
          <Column id="codeName" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_priceSet" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="code" type="STRING" size="256"/>
          <Column id="codeName" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="code">1</Col>
            <Col id="codeName">현구매단가</Col>
          </Row>
          <Row>
            <Col id="code">2</Col>
            <Col id="codeName">레시피단가</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_search" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="muCd" type="STRING" size="256"/>
          <Column id="upjangType" type="STRING" size="256"/>
          <Column id="stdRecipeCd" type="STRING" size="256"/>
          <Column id="recipeNm" type="STRING" size="256"/>
          <Column id="stdDate" type="STRING" size="256"/>
          <Column id="treeLevel" type="INT" size="256"/>
          <Column id="priceSet" type="STRING" size="256"/>
          <Column id="parentRecipeCd" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_searchValid" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="muCd" type="STRING" size="256"/>
          <Column id="upjangType" type="STRING" size="256"/>
          <Column id="stdRecipeCd" type="STRING" size="256"/>
          <Column id="stdDate" type="STRING" size="256"/>
          <Column id="treeLevel" type="INT" size="256"/>
          <Column id="priceSet" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="muCd">title:사업부,required:true</Col>
            <Col id="upjangType">title:업장유형,required:true</Col>
            <Col id="stdRecipeCd">title:레시피,required:true</Col>
            <Col id="stdDate">title:기준일자,required:true</Col>
            <Col id="treeLevel">title:조회단계,required:true</Col>
            <Col id="priceSet">title:단가셋,required:true</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_cmnAuth" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="srcYn" type="STRING" size="256"/>
          <Column id="insYn" type="STRING" size="256"/>
          <Column id="delYn" type="STRING" size="256"/>
          <Column id="savYn" type="STRING" size="256"/>
          <Column id="prtYn" type="STRING" size="256"/>
          <Column id="exlYn" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="srcYn">1</Col>
            <Col id="insYn">0</Col>
            <Col id="delYn">0</Col>
            <Col id="savYn">0</Col>
            <Col id="prtYn">1</Col>
            <Col id="exlYn">1</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_temp" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false"/>
    </Objects>
    <Script type="xscript4.0"><![CDATA[/*
  화 면 명 : Template
  파 일 명 : Template.xfdl
  기    능 : Design 및 Script Template 

    수정일    수정자                  수정내용
  ----------   -------  --------------------------------------------------
  2014.11.01   김윤기   최초 생성
*/

/************************************************************************************************
 * 공통 라이브러리 INCLUDE 영역 (필수)
************************************************************************************************/
include "lib::lib_com.xjs";


/************************************************************************************************
 * FORM 변수 선언 영역 (필수)
************************************************************************************************/
var fv_sToday = gfn_today();
var fv_needQty = 0;

/************************************************************************************************
 * FORM EVENT 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : Form Load (필수)
 *---------------------------------------------------------------------------------------------*/
function form_onload(obj:Form, e:LoadEventInfo)
{	
	// Form Load 시 공통 기능 처리(obj:Form, bCreateEvent:이벤트 생성 여부)
	gfn_formOnLoad(this);
	
	// 초기값 셋팅
	fn_init();
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 초기값 셋팅
 *---------------------------------------------------------------------------------------------*/
function fn_init()
{
	// 업데이트여부를 체크할 DataSet, 여러개 있을 경우 ;로 구분
	v_ds_check = "ds_list";
	
	//검색조건을 초기화한다.
	var nRow = ds_search.addRow();
	//ds_search.setColumn(nRow, "muCd", "2003");
	ds_search.setColumn(nRow, "treeLevel", "999");
	ds_search.setColumn(nRow, "priceSet", "1");
	
	//Combo
	SCCombo.bind(this, "ComCode", "cbo_schUpjangType", ds_upjangType, {groupCode:"UPJANG_TYPE", useYn:"Y"}, "fn_comCodeAfter");			//업장유형
	
	//Dataset
	SCDataset.bind(this, "ComCode", "ds_muCd", {groupCode:"DATA_SET", code:"DEF_MU_CODE", useYn:"Y"}, "fn_triggerDatasetEvent");
	
	//Popup
	SCPopup.bind(this, "Recipe", "edt_schRecipeNm", "btn_recipePop", null, {muCd:"", upjangType:""}, {before:"fn_recipeBeforeEvent", after:"fn_recipeAfterEvent"});
	
	//Calendar(검색조건 바인드)
	cal_stdDate.fn_initMonthCal(this, fv_sToday, "", ds_search, "stdDate", "Y");
	
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 사업부Combo 조회 후처리 함수
 *---------------------------------------------------------------------------------------------*/
function fn_triggerDatasetEvent(p, ds){
	if (p.oid == "ds_muCd"){
		SCCombo.bind(this, "MU", "cbo_schMuCd",	null, {defVal:"2003"}); //입력:사업부
	}
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 레시피 팝업 before 이벤트
 *---------------------------------------------------------------------------------------------*/
function fn_recipeBeforeEvent(p){
	p.option.muCd = ds_search.getColumn(0, "muCd");
	p.option.upjangType = ds_search.getColumn(0, "upjangType");
	p.option.recipeGbn = "STD";
	p.option.smlUpjang = "";

  
	return true;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 레시피 팝업 after 이벤트
 *---------------------------------------------------------------------------------------------*/
function fn_recipeAfterEvent(p, data){
	ds_search.setColumn(0, "stdRecipeCd", data.code);
	ds_search.setColumn(0, "parentRecipeCd", data.code);
}

/*----------------------------------------------------------------------------------------------
 * 공통코드 조회 after 이벤트 함수
 *---------------------------------------------------------------------------------------------*/
function fn_comCodeAfter(){
	ds_search.setColumn(0, "upjangType", ds_upjangType.getColumn(0, "code"));
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 화면 닫기 전 변경 유무 체크 (필수-Frame에서 창 닫힐때 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_close()
{	
//	// v_ds_check 미사용시 변경사항 체크(입력 프로그램일때 변경되는 Dataset 전체 기술)
// 	if (gfn_dsIsUpdated(ds_list) == true) 
// 	{
// 		// 변경된 데이터가 있습니다. 현재 화면을 닫겠습니까?
//         if (!gfn_confirm("confirm.before.movepage")) return false;
//     }
//     
//	// 조회프로그램에도 Return true; 기술해 주세요!
// 	return true;

	// v_ds_check 사용시 변경사항 체크
	if(gfn_length(v_ds_check) != 0)
	{	
		// v_ds_check 설정기준 변경사항 체크
		if (gfn_isDataChange() == true) 
		{		
			// 변경된 데이터가 있습니다. 현재 화면을 닫겠습니까?
			if (!gfn_confirm("confirm.before.movepage")) return false;
		}
	}
    
	// 조회프로그램에도 Return true; 기술해 주세요!
	return true;
}


/************************************************************************************************
 * 공통기능 FUNCTION 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 조회 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_search()
{
// 	// v_ds_check 미사용시 변경사항 체크
// 	if (gfn_dsIsUpdated(ds_list) == true) 
// 	{
// 		var retValue = gfn_confirm("confirm.before.search");	// 검색을 진행하면 변경된 데이터가 사라집니다. 계속 진행 하시겠습니까?
// 		if (retValue == false) return;
// 	}

// 	// v_ds_check 사용시 공통버튼에서 변경사항 체크함
// 	// 변경사항 체크
// 	if (gfn_isDataChange() == true) 
// 	{		
// 		var retValue = gfn_confirm("confirm.before.search");	// 검색을 진행하면 변경된 데이터가 사라집니다. 계속 진행 하시겠습니까?
// 		if (retValue == false) return;
// 	}
	
	// ds_listValid Dataset에 Validation할 칼럼별로 구성
	// 항목 추가시에는 ','로 구분
	// 예)title:금액1,required:false,minlength:2,digits:true
	
	// Alert시 칼럼 표시 명칭               - title:아이디(메시지의 치환할 명칭) 
	// 필수체크                              - required:true(체크여부 true/false)
	// size 크기                              - length:7(size 숫자)
	// 최대 size 크기                        - maxlength:7(size 숫자)
	// 최소 size 크기                        - minlength:7(size 숫자)
	// 최대 size 크기(Byte)                  - maxlengthB:7(size 숫자)
	// 최소 size 크기(Byte)                  - minlengthB:7(size 숫자)
	// 숫자 여부                             - digits:true(체크여부 true/false)
	// 해당 숫자 이하                       - min:7(size 숫자)
	// 해당 숫자 이상                       - max:7(size 숫자)
	// 소숫점 자리수 비교                   - declimit:3(size 숫자)
	// 날짜 년월일 체크                     - date:true(체크여부 true/false)
	// 날짜 년월 체크                       - dateym:true(체크여부 true/false)
	// 타 칼럼값보다 큰지 비교             - comparemax:Column4(Dataset 칼럼ID):시작일(비교대상의 메시지 치환할 명칭)
	// 타 칼럼값보다 작은지 비교           - comparemin:Column6(Dataset 칼럼ID):종료일(비교대상의 메시지 치환할 명칭)
	// 타 칼럼값과 같은 값인지 비교        - equalto:Column5(Dataset 칼럼ID):금액1(비교대상의 메시지 치환할 명칭)
	// 사이의 값인지 비교                   - range:40(from 숫자):100(to 숫자)
	// 코드값이 목록내의 값인지 비교       - code:1(목록 숫자):2(목록 숫자):3(목록 숫자)
	// 이메일 여부 체크(함수 체크시 예제)  - isEmail:true(체크여부 true/false)
	
	// 오류시 focus 지정                      - focus:cal_toDate(Componet ID로 form에서부터의 경로)
	
	// 조회시 Validation Check
	if (gfn_validCheck(ds_search, ds_searchValid, true) == false) return;

	grd_output.binddataset = "";
    // Grid sort 표시 초기화(필수)
    //gfn_clearSortMark(grd_list);

    var strSvcID    = "search";
    var strURL      = "rc/rrm/standardRecipeInquirybyRecipe/selectList.xdo";
    var strInDs     = "ds_search=ds_search:A";
    var strOutDs    = "ds_list=ds_list";
    var strArg      = "";
    var strCallback = "fn_callBack";
    var bAsync      = true;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 신규 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_insert()
{	
	var nRow = ds_list.addRow();	
	
	ds_list.setColumn(nRow, "GUBUN", 'AD');
	ds_list.setColumn(nRow, "INPUT_USER", gfn_getUserId());
	
	// Grid 입력 cell 지정
	grd_list.setFocus();
	grd_list.setCellPos(1);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 삭제 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_delete()
{
	var nRow = ds_list.rowposition;
	
	if(ds_list.rowposition == -1) 
	{
		gfn_alert("msg.err.grid.noselect", "삭제할 row");	// 선택된 항목이 없습니다.
		return;
	}

	var rtVal = gfn_confirm("confirm.before.delete");	// 선택된 자료를 삭제 하시겠습니까?
	if (rtVal == true) 
	{	
		ds_list.deleteRow(nRow);
	}
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 저장 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_save()
{
// 	// v_ds_check 미사용시 변경사항 체크
// 	if (gfn_dsIsUpdated(ds_list) == false) 
// 	{
// 		gfn_alert("msg.save.nochange");	// 변경된 내역이 없습니다.
// 		return;
// 	}

// 	// v_ds_check 사용시 변경사항 체크
// 	if (gfn_isDataChange() == true) 
// 	{		
// 		gfn_alert("msg.save.nochange");	// 변경된 내역이 없습니다.
// 		return;
// 	}
	
	
	// ds_listValid Dataset에 Validation할 칼럼별로 구성
	// 항목 추가시에는 ','로 구분
	// 예)title:금액1,required:false,minlength:2,digits:true
	
	// Alert시 칼럼 표시 명칭               - title:아이디(메시지의 치환할 명칭) 
	// 필수체크                              - required:true(체크여부 true/false)
	// size 크기                              - length:7(size 숫자)
	// 최대 size 크기                        - maxlength:7(size 숫자)
	// 최소 size 크기                        - minlength:7(size 숫자)
	// 최대 size 크기(Byte)                  - maxlengthB:7(size 숫자)
	// 최소 size 크기(Byte)                  - minlengthB:7(size 숫자)
	// 숫자 여부                             - digits:true(체크여부 true/false)
	// 해당 숫자 이하                       - min:7(size 숫자)
	// 해당 숫자 이상                       - max:7(size 숫자)
	// 소숫점 자리수 비교                   - declimit:3(size 숫자)
	// 날짜 년월일 체크                     - date:true(체크여부 true/false)
	// 날짜 년월 체크                       - dateym:true(체크여부 true/false)
	// 타 칼럼값보다 큰지 비교             - comparemax:Column4(Dataset 칼럼ID):시작일(비교대상의 메시지 치환할 명칭)
	// 타 칼럼값보다 작은지 비교           - comparemin:Column6(Dataset 칼럼ID):종료일(비교대상의 메시지 치환할 명칭)
	// 타 칼럼값과 같은 값인지 비교        - equalto:Column5(Dataset 칼럼ID):금액1(비교대상의 메시지 치환할 명칭)
	// 사이의 값인지 비교                   - range:40(from 숫자):100(to 숫자)
	// 코드값이 목록내의 값인지 비교       - code:1(목록 숫자):2(목록 숫자):3(목록 숫자)
	// 이메일 여부 체크(함수 체크시 예제)  - isEmail:true(체크여부 true/false)
	
	// 오류시 focus 지정                      - focus:cal_toDate(Componet ID로 form에서부터의 경로)
	
	// 저장시 Validation Check	
	if (gfn_validCheck(grd_list, ds_listValid) == false)	return;
	
    var strSvcID    = "save";
    var strURL      = "sc/scc/saveTemplate.xdo";
    var strInDs     = "dsList=ds_list:U";
    var strOutDs    = "";
    var strArg      = "";
    var strCallback = "fn_callBack";
    var bAsync      = true;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 출력 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_print()
{
	
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 도움말 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_help()
{
	
}

/************************************************************************************************
 * TRANSACTION 및 CallBack 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 트랜잭션 콜백 함수 (필수)
 *---------------------------------------------------------------------------------------------*/
function fn_callBack(strSvcID, nErrorCode, strErrorMsg)
{
	// 에러시 gfn_callBack에서 메시지 제공, 화면별 특정 에러 발생시에만 사용하세요.
	if (nErrorCode < 0) 
	{
		return;
	}
	
    switch(strSvcID)
    {
		// 코드분류 조회
        case "search" :
			if( ds_list.rowcount > 0 )
			{
				// 총 소요량
				fv_needQty = ds_list.getCaseSum("treeLevel=='1'", "needQty");

				// 적용투입재료량 계산
				fn_setApplyQty();

				ds_list.applyChange();
				grd_output.binddataset = ds_list;
			}
            break;
        
        // 저장
        case "save" :
			gfn_alert("msg.save.success");	// 저장 되었습니다.
            break;    
    }
}


/************************************************************************************************
 * 사용자 FUNCTION 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 레서피의 투입적용재료량을 계산한다.
 *---------------------------------------------------------------------------------------------*/
function fn_setApplyQty()
{
	ds_temp.clear();
	ds_temp.copyData(ds_list);

	var maxLevel = Math.abs(ds_temp.getMax("treeLevel"));

	for( var i = 1; i <= maxLevel; i++ )
	{
		ds_temp.addColumn("applyQty" + i, "BigDecimal", "255");
	}

	for( var a = ds_temp.rowcount - 1; a >= 0; a-- )
	{
 		var needQty			= ds_temp.getColumn(a, "needQty");
 		var semiGoodsYn		= ds_temp.getColumn(a, "semiGoodsYn");
 		var treeLevel		= ds_temp.getColumn(a, "treeLevel");
 		
 		trace("a: " + (a+1) + " - " + ds_list.getColumn(a,"materialCd"));
 		trace("needQty: " + needQty + " semiGoodsYn: " + semiGoodsYn + " treeLevel: " +treeLevel);

		if( treeLevel == 0 )	needQty = fv_needQty;

		if( semiGoodsYn == "Y" )
		{
			var nSumNeed = 0;
			var nSumApply = 0;

			for( var b = a; b < ds_temp.rowcount; b++ )
			{
				trace("b: " +  (b+1) + " - " + ds_list.getColumn(b,"materialCd"));
				if( b == a )
				{
					nSumApply = 0;
					for( var c = b + 1; c < ds_temp.rowcount; c++ )
					{
						var curSemiGoodsYn = ds_temp.getColumn(c, "semiGoodsYn");
						var curLevel = ds_temp.getColumn(c, "treeLevel");

						if( treeLevel >= curLevel )	break;

						if( treeLevel + 1 == curLevel )
						{
							nSumApply += toNumber(ds_temp.getColumn(c, "needQty"));
						}
					}

					nSumNeed = toNumber(needQty / nSumApply);
					ds_temp.setColumn(b, "applyQty", nSumNeed);
					//trace("curLevel: " + curLevel +  " nSumNeed: " +nSumNeed + " b: " + (b+1) + " a: " +(a+1));
					
				}
				else
				{
					if( ds_temp.getColumn(b, "semiGoodsYn") == "Y" )
					{
						if( treeLevel >= ds_temp.getColumn(b, "treeLevel") )
							break;
						else
							continue;
					}

					var curTreeLevel	= ds_temp.getColumn(b, "treeLevel");
					var curLossRate		= ds_temp.getColumn(b, "lossRate");
					
					//trace(" nSumNeed: " + nSumNeed);					
					if( treeLevel == 0 )
					{
						if( ds_temp.getColumn(b, "applyQty") <> 0 )
						{
							ds_temp.setColumn(b, "applyQty" + (treeLevel + 1), Math.round(toNumber(nSumNeed * ds_temp.getColumn(b, "applyQty")), 2));
							ds_temp.setColumn(b, "applyQty", Math.round(toNumber(nSumNeed * ds_temp.getColumn(b, "applyQty")), 2));
							trace("1-1) " + ds_temp.getColumn(b, "applyQty"));
							//trace("curLossRate: " + curLossRate + " applyQty: " + Math.round(toNumber(nSumNeed * ds_temp.getColumn(b, "applyQty")), 2));
						}
						else
						{
							if( (treeLevel == curTreeLevel) && (curLossRate > 100) )
							{
								ds_temp.setColumn(b, "applyQty" + (treeLevel + 1), Math.round(toNumber(nSumNeed * ds_temp.getColumn(b, "sumNeedQty")), 2));
								ds_temp.setColumn(b, "applyQty", Math.round(toNumber(nSumNeed * ds_temp.getColumn(b, "sumNeedQty")), 2));
								trace("1-2) " + ds_temp.getColumn(b, "sumNeedQty"));
								//trace("curLossRate: " + curLossRate + " applyQty: " + Math.round(toNumber(nSumNeed * ds_temp.getColumn(b, "sumNeedQty")), 2));
							}
							else
							{
								ds_temp.setColumn(b, "applyQty" + (treeLevel + 1), Math.round(toNumber(nSumNeed * ds_temp.getColumn(b, "needQty")), 2));
								ds_temp.setColumn(b, "applyQty", Math.round(toNumber(nSumNeed * ds_temp.getColumn(b, "needQty")), 2));
								trace("1-3) " + ds_temp.getColumn(b, "needQty"));
								//trace("curLossRate: " + curLossRate + " applyQty: " + Math.round(toNumber(nSumNeed * ds_temp.getColumn(b, "needQty")), 2));
							}
						}
					}
					else
					{
						if( ds_temp.getColumn(b, "applyQty") <> 0 )
						{
							ds_temp.setColumn(b, "applyQty" + (treeLevel + 1), toNumber(nSumNeed * ds_temp.getColumn(b, "applyQty")));
							ds_temp.setColumn(b, "applyQty", toNumber(nSumNeed * ds_temp.getColumn(b, "applyQty")));
							trace("2-1) " + ds_temp.getColumn(b, "applyQty"));
							//trace("curLossRate: " + curLossRate + " applyQty: " + toNumber(nSumNeed * ds_temp.getColumn(b, "applyQty")));
						}
						else
						{
							if( (curLossRate > 100) )
							{
								ds_temp.setColumn(b, "applyQty" + (treeLevel + 1), toNumber(nSumNeed * ds_temp.getColumn(b, "sumNeedQty")));
								ds_temp.setColumn(b, "applyQty", toNumber(nSumNeed * ds_temp.getColumn(b, "sumNeedQty")));
								trace("2-2) " + ds_temp.getColumn(b, "sumNeedQty"));
								//trace("curLossRate: " + curLossRate + " applyQty: " + (nSumNeed * ds_temp.getColumn(b, "sumNeedQty")));
							}
							else
							{
								ds_temp.setColumn(b, "applyQty" + (treeLevel + 1), toNumber(nSumNeed * ds_temp.getColumn(b, "needQty")));
								ds_temp.setColumn(b, "applyQty", toNumber(nSumNeed * ds_temp.getColumn(b, "needQty")));
								trace("2-3) " + ds_temp.getColumn(b, "needQty"));
								//trace("curLossRate: " + curLossRate + " applyQty: " + toNumber(nSumNeed * ds_temp.getColumn(b, "needQty")));
							}
						}
					}
					
					
				}
			}
		}
	}

	for( var i = 0; i < ds_list.rowcount; i++ )
	{
		if( ds_list.getColumn(i, "treeLevel") > 1 )	ds_list.setColumn(i, "investAmt", "");

		if( ds_list.getColumn(i, "semiGoodsYn") == "Y" ) {
			ds_list.setColumn(i, "applyQty", "");
		} else { 		
			trace("meterial_cd : " + " - " + ds_list.getColumn(i,"materialCd") + " : " +  ds_list.getColumn(i, "applyQty") + " -> " +  ds_temp.getColumn(i, "applyQty") );
			ds_list.setColumn(i, "applyQty", ds_temp.getColumn(i, "applyQty"));
		}
	}

	// 총 투입재료비
	var sumInvestAmt = ds_list.getCaseSum("treeLevel == '1'", "investAmt");
	ds_list.setColumn(0, "investAmt", sumInvestAmt);

	// 총 투입재료량
	var sumNeedQty = ds_list.getCaseSum("treeLevel == '1'", "needQty");
	ds_list.setColumn(0, "needQty", sumNeedQty);	
	
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 그리드 레벨별 background색 변경
 *---------------------------------------------------------------------------------------------*/
function fn_bgColor(nTreeLevel, strYn)
{
	var sRtn;

	if( nTreeLevel != "1" && strYn == "N" )	return "white";

	switch(nTreeLevel)
	{
		case "0" :
			sRtn = "#fffebeff";
			break;
		case "1" :
			sRtn = "#fddcc9ff";
			break;
		case "2" :
			sRtn = "#cef6e5ff";
			break;
		case "3" :
			sRtn = "#e0fcd4ff";
			break;
		case "4" :
			sRtn = "#daeaf5ff";
			break;
		default :
			sRtn = "white";
			break;        
	}

    return sRtn;
}

/************************************************************************************************
 * 각 COMPONENT 별 EVENT 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : form에서 Key Down시 단축키들 지정(공통에서 자동생성, 화면에 스크립트 작성시 화면 스크립트만 실행됨)
 *---------------------------------------------------------------------------------------------*/
// function form_onkeydown(obj:Form, e:KeyEventInfo)
// {
// 	gfn_formKeyDown(obj, e);
// }

/*----------------------------------------------------------------------------------------------
 * 설명      : Grid Header Click시 정렬(공통에서 자동생성, 화면에 스크립트 작성시 화면 스크립트만 실행됨)
 *---------------------------------------------------------------------------------------------*/
// function grd_list_onheadclick(obj:Grid, e:GridClickEventInfo)
// {
// 	gfn_gridSort(obj, e);
// }

/*----------------------------------------------------------------------------------------------
 * 설명      : 조회단계 onkeyup 이벤트
 *---------------------------------------------------------------------------------------------*/
function edt_schTreeLevel_onkeyup(obj:MaskEdit, e:KeyEventInfo)
{
	if(obj.value == null || obj.value == "") return;
	
	if(obj.value >= 1000){
		alert("조회단계는 999단계까지 입력 가능합니다.");
		obj.value = "";
		return;
	}
}
]]></Script>
  </Form>
</FDL>
