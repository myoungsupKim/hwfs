<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="fs.fsb.preMealsAppDAO">
	<desc>프리미엄급식 인터페이스 조회 HQML Query</desc>

	<!-- 기준정보 목록을 조회한다. -->
	<statement name="selectInfo" type="select">
		/*+ com.hwfs.fs.fsb.dao.PreMealsAppDAO.selectInfo */
		<![CDATA[
				 		
			SELECT
					 C.UPJANG,
					 E.UPJANGNM,
	  				 F.LOC_CD,
	  				 C.HALL_CD,
	           		 B.HALL_NAME,
	   				 C.MEAL,
	           		 D2.CODE_NAME MEAL_NAME,
	    			 --C.CORNER,
	    			 --D1.CODE_NAME CORNER_NAME
	    			 
	    			 --병원군 코너 임의셋팅 2022.01.11 [20220111029 - 1]
			     	 CASE WHEN C.CORNER = '010'  THEN '001'
                     	  WHEN C.CORNER = '011'  THEN '002'
                      	  WHEN C.CORNER >= '012' THEN '003'
                 	 ELSE C.CORNER END AS CORNER,
                 	 CASE WHEN C.CORNER = '010'  THEN (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0022' AND CODE = '001')
                      	  WHEN C.CORNER = '011'  THEN (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0022' AND CODE = '002')
                       	  WHEN C.CORNER >= '012' THEN (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0022' AND CODE = '003')
                 	 ELSE D1.CODE_NAME END AS CORNER_NAME
				FROM SCC_COMMON_CODE A
					,FSA_HALL_MST B
	  				,FSA_HALL_DTL C
	  				,SCC_COMMON_CODE D1
	  				,SCC_COMMON_CODE D2
	    			,ST_UPJANGv E
	    			,SCO_UPJANG_MST F
				WHERE A.CODE = B.UPJANG
					AND B.UPJANG = C.UPJANG
					AND A.CODE = E.UPJANG
					AND A.CODE = F.UPJANG
					AND B.HALL_CD = C.HALL_CD
					AND D1.GROUP_CODE = 'FS0022'
					AND C.CORNER = D1.CODE 
					AND D2.GROUP_CODE = 'FS0023'
					AND C.MEAL = D2.CODE   
					AND A.GROUP_CODE = 'MA0142'
					AND A.USE_YN = 'Y'
					AND B.USE_YN = 'Y'
					AND C.USE_YN = 'Y'

			  			ORDER BY C.UPJANG, C.HALL_CD, C.MEAL, C.CORNER
		  			
		]]>
	</statement>

	<!-- 업장 목록을 조회한다. -->
	<statement name="selectUpjang" type="select">
		/*+ com.hwfs.fs.fsb.dao.PreMealsAppDAO.selectUpjang */
		<![CDATA[
	
			SELECT
				B.UPJANG,
 				B.UPJANGNM,
  				C.LOC_CD

			FROM SCC_COMMON_CODE A
    			,ST_UPJANGv B
    			,SCO_UPJANG_MST C
			WHERE A.GROUP_CODE = 'MA0142'
				AND A.USE_YN = 'Y'
				AND A.CODE = B.UPJANG
				AND A.CODE = C.UPJANG

		  			ORDER BY B.UPJANG
		]]>
	</statement>

	<!-- 식당 목록을 조회한다. -->
	<statement name="selectHall" type="select">
		/*+ com.hwfs.fs.fsb.dao.PreMealsAppDAO.selectHall */
		<![CDATA[
			 
			SELECT
				B.UPJANG,
 		    	B.HALL_CD,
    			B.HALL_NAME
			FROM SCC_COMMON_CODE A
				,FSA_HALL_MST B
			WHERE A.CODE = B.UPJANG
				AND A.GROUP_CODE = 'MA0142'
				AND A.USE_YN = 'Y'
				AND B.USE_YN = 'Y'

		  		ORDER BY B.UPJANG, B.HALL_CD
		]]>
	</statement>

	<!-- 끼니 목록을 조회한다. -->
	<statement name="selectMeal" type="select">
		/*+ com.hwfs.fs.fsb.dao.PreMealsAppDAO.selectMeal */
		<![CDATA[
			 
		
			SELECT
				 C.UPJANG,
  				 C.HALL_CD,
   				 C.MEAL,
   				 D.CODE_NAME MEAL_NAME
			FROM SCC_COMMON_CODE A
				,FSA_HALL_MST B
  				,FSA_HALL_DTL C
  				,SCC_COMMON_CODE D
			WHERE A.CODE = B.UPJANG
				AND B.UPJANG = C.UPJANG
				AND B.HALL_CD = C.HALL_CD
				AND D.GROUP_CODE = 'FS0023'
				AND C.MEAL = D.CODE
				AND A.GROUP_CODE = 'MA0142'
				AND A.USE_YN = 'Y'
				AND B.USE_YN = 'Y'
				AND C.USE_YN = 'Y'

		  			ORDER BY C.UPJANG, C.HALL_CD, C.MEAL 
		]]>
	</statement>


	<!-- 코너 목록을 조회한다. -->
	<statement name="selectCorner" type="select">
		/*+ com.hwfs.fs.fsb.dao.PreMealsAppDAO.selectCorner */
		<![CDATA[
			 
		
			SELECT
				 C.UPJANG,
  				 C.HALL_CD,
   				 C.MEAL,
    			 --C.CORNER,
    			 --D.CODE_NAME CORNER_NAME
    			 
    			 --병원군 코너 임의셋팅 2022.01.11 [20220111029 - 1]
			     CASE WHEN C.CORNER = '010'  THEN '001'
                      WHEN C.CORNER = '011'  THEN '002'
                      WHEN C.CORNER >= '012' THEN '003'
                 ELSE C.CORNER END AS CORNER,
                 CASE WHEN C.CORNER = '010'  THEN (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0022' AND CODE = '001')
                      WHEN C.CORNER = '011'  THEN (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0022' AND CODE = '002')
                      WHEN C.CORNER >= '012' THEN (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0022' AND CODE = '003')
                 ELSE D.CODE_NAME END AS CORNER_NAME 
			FROM SCC_COMMON_CODE A
				,FSA_HALL_MST B
  				,FSA_HALL_DTL C
  				,SCC_COMMON_CODE D
			WHERE A.CODE = B.UPJANG
				AND B.UPJANG = C.UPJANG
				AND B.HALL_CD = C.HALL_CD
				AND D.GROUP_CODE = 'FS0022'
				AND C.CORNER = D.CODE
				AND A.GROUP_CODE = 'MA0142'
				AND A.USE_YN = 'Y'
				AND B.USE_YN = 'Y'
				AND C.USE_YN = 'Y'

		  			ORDER BY C.UPJANG, C.HALL_CD, C.MEAL, C.CORNER 
		]]>
	</statement>

	<!-- 거래처 목록을 조회한다. -->
	<statement name="selectCust" type="select">
		/*+ com.hwfs.fs.fsb.dao.PreMealsAppDAO.selectCust */
		<![CDATA[
				
			SELECT
			    --B.UPJANG,
			    DISTINCT 
				B.CUSTCD,
			    C.CUSTNM,
			    C.SAUPNO
			FROM SCC_COMMON_CODE A
				,SCO_UPJANG_CUST B
			    ,ST_CUSTV C
			WHERE A.CODE = TO_CHAR(B.UPJANG)
			AND B.CUSTCD = C.CUSTCD
			AND A.GROUP_CODE = 'MA0142'
			AND A.USE_YN = 'Y'
			AND B.USE_YN = 'Y'
			--기준일 이후 수정데이타
          	<#if fixedDt?has_content>						
          		AND TO_CHAR(B.UDATE,'YYYYMMDD') >= :fixedDt 
          	</#if>
		  	--	ORDER BY B.UPJANG, B.CUSTCD 
		]]>
	</statement>

	<!-- 날씨 목록을 조회한다. -->
	<statement name="selectWeather" type="select">
		/*+ com.hwfs.fs.fsb.dao.PreMealsAppDAO.selectWeather */
		<![CDATA[
				
			SELECT
				--B.UPJANG,
			    C.LOC_CD,
			    D.CUR_DATE,
			    D.WCODE,
			    D.WDESC,
			    D.AVR_TEMP,
			    D.MIN_TEMP,
			    D.MAX_TEMP,
			    D.AVR_HUMI
			FROM SCC_COMMON_CODE A
			    ,ST_UPJANG B
			    ,SCO_UPJANG_MST C
			    ,UPOS_SC_WEATHER_INFO_V D
			WHERE A.GROUP_CODE = 'MA0142'
			AND A.USE_YN = 'Y'
			AND A.CODE = B.UPJANG
			AND A.CODE = C.UPJANG
			AND C.LOC_CD = D.AREA_CODE
			--AND D.CUR_DATE >= TO_CHAR(SYSDATE,'YYYYMMDD')
			--요청범위내 데이타
			AND D.CUR_DATE BETWEEN :fromDt AND :toDt								
				ORDER BY B.UPJANG, C.LOC_CD, D.CUR_DATE, D.WCODE
		]]>
	</statement>

	<!-- 식수 목록을 조회한다. -->
	<statement name="selectMealQty" type="select">
		/*+ com.hwfs.fs.fsb.dao.PreMealsAppDAO.selectMealQty */
		<![CDATA[
				
			SELECT B.UPJANG
			       ,B.MENU_DATE
			       ,B.HALL_CD
			       ,B.MEAL
			       --,B.CORNER
			       --병원군 코너 임의셋팅 2022.01.11 [20220111029 - 1]
                   ,CASE WHEN B.CORNER = '010' THEN '001'
                     	 WHEN B.CORNER = '011' THEN '002'
                     	 WHEN B.CORNER >= '012' THEN '003'
                 	ELSE B.CORNER END AS CORNER
			       ,B.EXPECT_MEAL_QTY
			       ,B.UDATE
			 FROM SCC_COMMON_CODE A
			   	 ,FSM_REAL_MENU_MST B
			 WHERE A.GROUP_CODE = 'MA0142'
				 AND A.USE_YN = 'Y'
			   AND A.CODE = B.UPJANG
			   AND MENU_DATE >= TO_CHAR(SYSDATE,'YYYYMMDD')
				ORDER BY B.UPJANG, B.MENU_DATE, B.HALL_CD, B.MEAL, B.CORNER
		]]>
	</statement>


	<!-- 레시피 목록을 조회한다. -->
	<statement name="selectRecipe" type="select">
		/*+ com.hwfs.fs.fsb.dao.PreMealsAppDAO.selectRecipe */
		<![CDATA[
				
			SELECT M.RECIPE_CD
				  , M.RECIPE_NAME
				  , M.SPHOTO_PATH
				  , M.UDATE
                  , R.CUISINE_DESC

			 FROM FSR_STD_RECIPE_MST M
                 , FSR_STD_RECIPE_CUISINE R
           		 , (SELECT RECIPE_CD,  MAX(CUISINE_SEQ) AS C_SEQ FROM FSR_STD_RECIPE_CUISINE
              	 		WHERE CUISINE_SEQ < 90
							GROUP BY RECIPE_CD) R2 
			 WHERE M.USE_YN = 'Y'
                AND M.RECIPE_CD  = R.RECIPE_CD
              	AND R.RECIPE_CD  = R2.RECIPE_CD
              	AND R.CUISINE_SEQ = R2.C_SEQ
			 --기준일 이후 수정데이타
          	 <#if fixedDt?has_content>						
          		AND TO_CHAR(M.UDATE,'YYYYMMDD') >= :fixedDt 
          	 </#if>
          	 
		]]>
	</statement>


	<!-- 식단 목록을 조회한다. -->
	<statement name="selectMenu" type="select"><![CDATA[
				
			SELECT
				   C.UPJANG,
			       C.MENU_DATE,
			       C.HALL_CD,
			       C.MEAL,
			       --병원군 코너 임의셋팅 2022.01.11 [20220111029 - 1]
			       CASE WHEN C.CORNER = '010' THEN '001'
                        WHEN C.CORNER = '011' THEN '002'
                        WHEN C.CORNER >= '012' THEN '003'
                   ELSE C.CORNER END AS CORNER,
			       --C.CORNER,
			       A.RECIPE_CD,
			       A.RECIPE_NAME,
			       C.EXPECT_MEAL_QTY,
			       --S.SPHOTO_PATH,   --사진파일명
				   E.KCAL,--"열량",
			       E.NA,--"나트륨",
			       E.PROT,--"단백질",
			       E.CARBO,--"탄소화물",
			       E.FAT,--"지방",
			       /*
			       E.VITA,--"비타민A",
			       E.THIA,--"비타민B1",
			       E.RIBO,--"비타민B2",
			       E.VITA_C,--"비타민C",
			       E.CA,--"칼슘",
			       E.FE,--"철",
			       E.NIASIN,--"나이아신",			       
			       E.WATER,--"수분",
			       E.FIBER,--"섬유",
			       E.ASH,--"회분",
			       E.P,--"인",
			       E.K,--"칼륨",
			       E.RETIN,--"레티놀",
			       E.B_CAROT,--"B_카르틴",
			       E.CHOLE,--"콜레스테롤"
			       */
			       --NVL(A.ATTR02, 0) AS ATTR02,  -- 대표레시피 여부
			       NVL(A.ATTR03, '0') AS ATTR03,  -- 메인이미지 여부
			       NVL(A.ATTR04, '0') AS ATTR04,  -- 평가대상 여부
             	   DECODE(NVL(A.ATTR04, '0'),'1',R.CUISINE_DESC,'') AS CUISINE_DESC, --평가대상인 경우만 
			       A.UDATE,
			       A.RECIPE_SEQ
			  FROM SCC_COMMON_CODE D
			     , FSM_REAL_MENU_MST C 
			     , FSM_REAL_RECIPE_MST A
			     , FSR_STD_RECIPE_MST S
                 , FSR_STD_RECIPE_CUISINE R
           		 , (SELECT RECIPE_CD,  MAX(CUISINE_SEQ) AS C_SEQ FROM FSR_STD_RECIPE_CUISINE
              	 		WHERE CUISINE_SEQ < 90
							GROUP BY RECIPE_CD) R2  --조리법 가장 마지막 내용 가져오도록 수정 20191014 
			     , (
								SELECT  A.UPJANG,
					        		  	D.MENU_DATE,
							          	D.HALL_CD,
							          	D.MEAL,
							          	--병원군 코너 임의셋팅 2022.01.11 [20220111029 - 1]
							          	CASE WHEN D.CORNER = '010' THEN '001'
                                             WHEN D.CORNER = '011' THEN '002'
                                             WHEN D.CORNER >= '012' THEN '003'
							          	ELSE D.CORNER END AS CORNER,
							          	--D.CORNER,
					        	    	A.RECIPE_CD,
								        A.RECIPE_NAME,
								        A.MENU_CD,
								        
								        SUM(B.NEED_QTY) NEED_QTY,
								        SUM(B.EDIBLE_QTY) EDIBLE_QTY,
								        -- 폐기율 미적용 영양소 보기미체크시  가식부량에 의한 영양가 계산
								        SUM(ROUND((C.CAL        * B.EDIBLE_QTY / 100),2)) KCAL,--"열량",
								        SUM(ROUND((C.WATER      * B.EDIBLE_QTY / 100),2)) WATER,--"수분",
								        SUM(ROUND((C.PROT       * B.EDIBLE_QTY / 100),2)) PROT,--"단백질",
								        SUM(ROUND((C.FAT        * B.EDIBLE_QTY / 100),2)) FAT,--"지질",
								        SUM(ROUND((C.CARBO      * B.EDIBLE_QTY / 100),2)) CARBO,--"당���",
								        SUM(ROUND((C.FIBER      * B.EDIBLE_QTY / 100),2)) FIBER,--"섬유",
								        SUM(ROUND((C.ASH        * B.EDIBLE_QTY / 100),2)) ASH,--"회분",
								        SUM(ROUND((C.CA         * B.EDIBLE_QTY / 100),2)) CA,--"칼슘",
								        SUM(ROUND((C.P          * B.EDIBLE_QTY / 100),2)) P,--"인",
								        SUM(ROUND((C.FE         * B.EDIBLE_QTY / 100),2)) FE,--"철",
								        SUM(ROUND((C.NA         * B.EDIBLE_QTY / 100),2)) NA,--"나트륨",
								        SUM(ROUND((C.K          * B.EDIBLE_QTY / 100),2)) K,--"칼륨",
								        SUM(ROUND((C.VITA_A     * B.EDIBLE_QTY / 100),2)) VITA,--"비타민A",
								        SUM(ROUND((C.RETIN      * B.EDIBLE_QTY / 100),2)) RETIN,--"레티놀",
								        SUM(ROUND((C.B_CAROT    * B.EDIBLE_QTY / 100),2)) B_CAROT,--"B_카르틴",
								        SUM(ROUND((C.THIA       * B.EDIBLE_QTY / 100),2)) THIA,--"비타민B1",
								        SUM(ROUND((C.RIBO       * B.EDIBLE_QTY / 100),2)) RIBO,--"비타민B2",
								        SUM(ROUND((C.NIACIN     * B.EDIBLE_QTY / 100),2)) NIASIN,--"나이아신",
								        SUM(ROUND((C.VITA_C     * B.EDIBLE_QTY / 100),2)) VITA_C,--"비타민C",
								        SUM(ROUND((C.CHOLE      * B.EDIBLE_QTY / 100),2)) CHOLE--"콜레스테롤"
								        
								FROM    SCC_COMMON_CODE E,
			          		  			FSM_REAL_RECIPE_MST A , -- FSR_UPJANG_RECIPE_MST
								        FSM_REAL_RECIPE_ITEM  B , --FSR_UPJANG_RECIPE_ITEM
								        FSM_REAL_MENU_MST D,
								        FSI_ITEM_NUT C

								WHERE   E.GROUP_CODE = 'MA0142'
			    				AND 	E.USE_YN = 'Y'
			   					AND 	E.CODE = A.UPJANG
			   					AND 	A.UPJANG=B.UPJANG
								AND     A.MENU_CD=B.MENU_CD
								AND     A.RECIPE_CD=B.RECIPE_CD
								AND     B.ITEM_CODE=C.ITEM_CODE(+)
								AND     A.UPJANG=D.UPJANG
								AND     A.MENU_CD=D.MENU_CD
								--AND     D.MENU_DATE >= TO_CHAR(SYSDATE,'YYYYMMDD')
								--요청범위내 데이타
								AND     D.MENU_DATE BETWEEN :fromDt AND :toDt
																
								GROUP BY A.RECIPE_SEQ ,
								    	 A.UPJANG,
								         A.MENU_CD,
								         A.RECIPE_CD,
								         A.RECIPE_NAME,
								         D.HALL_CD,
								         D.MENU_DATE,
								         D.MEAL,
								         D.CORNER
								) E
			  WHERE D.GROUP_CODE = 'MA0142'
			    AND D.USE_YN = 'Y'
			    AND D.CODE = C.UPJANG
			    AND A.UPJANG     = C.UPJANG
			    AND A.MENU_CD    = C.MENU_CD
                AND A.UPJANG     = E.UPJANG
			    AND A.MENU_CD    = E.MENU_CD
			    AND A.RECIPE_CD  = E.RECIPE_CD
			    AND A.RECIPE_CD  = S.RECIPE_CD
          		AND S.RECIPE_CD  = R.RECIPE_CD
              	AND R.RECIPE_CD  = R2.RECIPE_CD
              	AND R.CUISINE_SEQ = R2.C_SEQ
          		--AND R.CUISINE_SEQ = 1 --첫번째 조리법만 가져오기(20191014 변경되어 삭제)
          		--기준일 이후 수정데이타
          		<#if fixedDt?has_content>						
          			AND TO_CHAR(A.UDATE,'YYYYMMDD') >= :fixedDt 
          		</#if>
				ORDER BY C.UPJANG,
			       		 C.MENU_DATE,
			       		 C.HALL_CD,
			      		 C.MEAL,
			       		 C.CORNER,
			     		 A.RECIPE_CD
		]]></statement>

	<!-- 식단 목록을 조회한다.(미사용) -->
	<statement name="selectMenuHD" type="select">
		/*+ com.hwfs.fs.fsb.dao.PreMealsAppDAO.selectMenuHD */
		<![CDATA[
				
			SELECT
				   C.UPJANG,
			       C.MENU_DATE,
			       C.HALL_CD,
			       C.MEAL,
			       C.CORNER,
			       C.EXPECT_MEAL_QTY,
			       '' AS DETAIL,
			       (SELECT MAX(A.UDATE) FROM FSM_REAL_RECIPE_MST A WHERE A.UPJANG = C.UPJANG AND A.MENU_CD = C.MENU_CD) AS UDATE
			  FROM SCC_COMMON_CODE D
			     , FSM_REAL_MENU_MST C 
			    
			  WHERE D.GROUP_CODE = 'MA0142'
			    AND D.USE_YN = 'Y'
			    AND D.CODE = C.UPJANG
				AND C.MENU_DATE BETWEEN :fromDt AND :toDt
          		--기준일 이후 수정데이타
          		<#if fixedDt?has_content>						
          			AND TO_CHAR(A.UDATE,'YYYYMMDD') >= :fixedDt 
          		</#if>
				ORDER BY C.UPJANG,
			       		 C.MENU_DATE,
			       		 C.HALL_CD,
			      		 C.MEAL,
			       		 C.CORNER
		]]>
	</statement>

	<!-- 식단 목록을 조회한다.(미사용) -->
	<statement name="selectMenuDT" type="select">
		/*+ com.hwfs.fs.fsb.dao.PreMealsAppDAO.selectMenuDT */
		<![CDATA[
				
			SELECT
				   C.UPJANG,
			       C.MENU_DATE,
			       C.HALL_CD,
			       C.MEAL,
			       C.CORNER,
			       A.RECIPE_CD,
			       A.RECIPE_NAME,
			       C.EXPECT_MEAL_QTY,
			       --S.SPHOTO_PATH,   --사진파일명
				   E.KCAL,--"열량",
			       E.NA,--"나트륨",
			       E.PROT,--"단백질",
			       E.CARBO,--"탄소화물",
			       E.FAT,--"지방",
			       /*
			       E.VITA,--"비타민A",
			       E.THIA,--"비타민B1",
			       E.RIBO,--"비타민B2",
			       E.VITA_C,--"비타민C",
			       E.CA,--"칼슘",
			       E.FE,--"철",
			       E.NIASIN,--"나이아신",			       
			       E.WATER,--"수분",
			       E.FIBER,--"섬유",
			       E.ASH,--"회분",
			       E.P,--"인",
			       E.K,--"칼륨",
			       E.RETIN,--"레티놀",
			       E.B_CAROT,--"B_카르틴",
			       E.CHOLE,--"콜레스테롤"
			       */
			       --NVL(A.ATTR02, 0) AS ATTR02,  -- 대표레시피 여부
			       NVL(A.ATTR03, '0') AS ATTR03,  -- 메인이미지 여부
			       NVL(A.ATTR04, '0') AS ATTR04,  -- 평가대상 여부
             	   DECODE(NVL(A.ATTR04, '0'),'1',R.CUISINE_DESC,'') AS CUISINE_DESC, --평가대상인 경우만 
			       A.UDATE
			  FROM SCC_COMMON_CODE D
			     , FSM_REAL_MENU_MST C 
			     , FSM_REAL_RECIPE_MST A
			     , FSR_STD_RECIPE_MST S
                 , FSR_STD_RECIPE_CUISINE R
			     , (
								SELECT  A.UPJANG,
					        		  	D.MENU_DATE,
							          	D.HALL_CD,
							          	D.MEAL,
							          	D.CORNER,
					        	    	A.RECIPE_CD,
								        A.RECIPE_NAME,
								        A.MENU_CD,
								        SUM(C.CAL      ) KCAL,--"열량",
								        SUM(C.WATER    ) WATER,--"수분",
								        SUM(C.PROT     ) PROT,--"단백질",
								        SUM(C.FAT      ) FAT,--"지질",
								        SUM(C.CARBO    ) CARBO,--"당질",
								        SUM(C.FIBER    ) FIBER,--"섬유",
								        SUM(C.ASH      ) ASH,--"회분",
								        SUM(C.CA       ) CA,--"칼슘",
								        SUM(C.P        ) P,--"인",
								        SUM(C.FE       ) FE,--"철",
								        SUM(C.NA       ) NA,--"나트륨",
								        SUM(C.K        ) K,--"칼륨",
								        SUM(C.VITA_A   ) VITA,--"비타민A",
								        SUM(C.RETIN    ) RETIN,--"레티놀",
								        SUM(C.B_CAROT  ) B_CAROT,--"B_카르틴",
								        SUM(C.THIA     ) THIA,--"비타민B1",
								        SUM(C.RIBO     ) RIBO,--"비타민B2",
								        SUM(C.NIACIN   ) NIASIN,--"나이아신",
								        SUM(C.VITA_C   ) VITA_C,--"비타민C",
								        SUM(C.CHOLE    ) CHOLE--"콜레스테롤"
								FROM    SCC_COMMON_CODE E,
			          		  			FSM_REAL_RECIPE_MST A , -- FSR_UPJANG_RECIPE_MST
								        FSM_REAL_RECIPE_ITEM  B , --FSR_UPJANG_RECIPE_ITEM
								        FSM_REAL_MENU_MST D,
								        FSI_ITEM_NUT C

								WHERE   E.GROUP_CODE = 'MA0142'
			    				AND 	E.USE_YN = 'Y'
			   					AND 	E.CODE = A.UPJANG
			   					AND 	A.UPJANG=B.UPJANG
								AND     A.MENU_CD=B.MENU_CD
								AND     A.RECIPE_CD=B.RECIPE_CD
								AND     B.ITEM_CODE=C.ITEM_CODE(+)
								AND     A.UPJANG=D.UPJANG
								AND     A.MENU_CD=D.MENU_CD
                				AND     A.UPJANG = :upjang
              					AND     D.MENU_DATE = :menuDate
              					AND     D.HALL_CD = :hallCd
              					AND     D.MEAL = :meal
               					AND     D.CORNER = :corner
															
								GROUP BY A.RECIPE_SEQ ,
								    	 A.UPJANG,
								         A.MENU_CD,
								         A.RECIPE_CD,
								         A.RECIPE_NAME,
								         D.HALL_CD,
								         D.MENU_DATE,
								         D.MEAL,
								         D.CORNER
								) E
			  WHERE D.GROUP_CODE = 'MA0142'
			    AND D.USE_YN = 'Y'
			    AND D.CODE = C.UPJANG
			    AND A.UPJANG     = C.UPJANG
			    AND A.MENU_CD    = C.MENU_CD
			    AND A.MENU_CD    = E.MENU_CD
			    AND A.RECIPE_CD  = E.RECIPE_CD
			    AND A.RECIPE_CD  = S.RECIPE_CD
          		AND S.RECIPE_CD  = R.RECIPE_CD
          		AND R.CUISINE_SEQ = 1 --첫번째 조리법만 가져오기
                AND A.UPJANG = :upjang
                AND C.MENU_DATE = :menuDate
                AND C.HALL_CD = :hallCd
                AND C.MEAL = :meal
                AND C.CORNER = :corner
          		
				ORDER BY C.UPJANG,
			       		 C.MENU_DATE,
			       		 C.HALL_CD,
			      		 C.MEAL,
			       		 C.CORNER,
			     		 A.RECIPE_CD
		]]>
	</statement>

	<statement name="hanwhaGourmetIF"><![CDATA[SELECT
       C.MENU_DATE, --식단일자
       C.HALL_CD,   --식당코드
       (SELECT HALL_NAME FROM FSA_HALL_MST WHERE UPJANG = C.UPJANG AND HALL_CD = C.HALL_CD) AS HALL_NM, --식당명
       C.MEAL,      --식단구분코드(조/중/석식)
       SCC_CODE_NM('FS0023',C.MEAL) AS MEAL_NM, --식단명(조/중/석식)
       CASE WHEN C.CORNER = '010' THEN '001'
            WHEN C.CORNER = '011' THEN '002'
            WHEN C.CORNER >= '012' THEN '003'
       ELSE C.CORNER END AS CORNER, --코너코드
       CASE WHEN C.CORNER = '010'  THEN SCC_CODE_NM('FS0022','001')
            WHEN C.CORNER = '011'  THEN SCC_CODE_NM('FS0022','002')
            WHEN C.CORNER >= '012' THEN SCC_CODE_NM('FS0022','003')
       ELSE SCC_CODE_NM('FS0022',C.CORNER) END AS CORNER_NM, --코너명
       A.RECIPE_CD,   --메뉴코드
       A.RECIPE_NM, --메뉴명
       E.KCAL,        --열량(Kcal),
       E.NA,          --나트륨(mg),
       E.PROT,        --단백질(g),
       E.CARBO,       --당질(g),
       E.FAT,         --지질(g),
       CASE WHEN S.SPHOTO_PATH IS NOT NULL THEN 'https://nfics.hanwhafoodist.co.kr/app/gpfs/app_repository/ifis/upload/fs/std/recipe/'||S.SPHOTO_PATH  --이미지
       ELSE NULL END AS SPHOTO_PATH,
       A.UDATE
  FROM SCC_COMMON_CODE D
     , FSM_REAL_MENU_MST C 
     , FSM_REAL_RECIPE_MST A
     , FSR_STD_RECIPE_MST S
     , FSR_STD_RECIPE_CUISINE R
     , (SELECT RECIPE_CD,  MAX(CUISINE_SEQ) AS C_SEQ FROM FSR_STD_RECIPE_CUISINE
            WHERE CUISINE_SEQ < 90
                GROUP BY RECIPE_CD) R2  --조리법 가장 마지막 내용 가져오도록 수정 20191014 
     , (
                    SELECT  A.UPJANG,
                            D.MENU_DATE,
                            D.HALL_CD,
                            D.MEAL,
                            --병원군 코너 임의셋팅 2022.01.11 [20220111029 - 1]
                            CASE WHEN D.CORNER = '010' THEN '001'
                                 WHEN D.CORNER = '0FCUS.FSM_REAL_MENU_MST11' THEN '002'
                                 WHEN D.CORNER >= '012' THEN '003'
                            ELSE D.CORNER END AS CORNER,
                            --D.CORNER,
                            A.RECIPE_CD,
                            A.RECIPE_NAME,
                            A.MENU_CD,
                            
                            SUM(B.NEED_QTY) NEED_QTY,
                            SUM(B.EDIBLE_QTY) EDIBLE_QTY,
                            -- 폐기율 미적용 영양소 보기미체크시  가식부량에 의한 영양가 계산
                            SUM(ROUND((C.CAL        * B.EDIBLE_QTY / 100),2)) KCAL,--"열량",
                            SUM(ROUND((C.WATER      * B.EDIBLE_QTY / 100),2)) WATER,--"수분",
                            SUM(ROUND((C.PROT       * B.EDIBLE_QTY / 100),2)) PROT,--"단백질",
                            SUM(ROUND((C.FAT        * B.EDIBLE_QTY / 100),2)) FAT,--"지질",
                            SUM(ROUND((C.CARBO      * B.EDIBLE_QTY / 100),2)) CARBO,--"당���",
                            SUM(ROUND((C.FIBER      * B.EDIBLE_QTY / 100),2)) FIBER,--"섬유",
                            SUM(ROUND((C.ASH        * B.EDIBLE_QTY / 100),2)) ASH,--"회분",
                            SUM(ROUND((C.CA         * B.EDIBLE_QTY / 100),2)) CA,--"칼슘",
                            SUM(ROUND((C.P          * B.EDIBLE_QTY / 100),2)) P,--"인",
                            SUM(ROUND((C.FE         * B.EDIBLE_QTY / 100),2)) FE,--"철",
                            SUM(ROUND((C.NA         * B.EDIBLE_QTY / 100),2)) NA,--"나트륨",
                            SUM(ROUND((C.K          * B.EDIBLE_QTY / 100),2)) K,--"칼륨",
                            SUM(ROUND((C.VITA_A     * B.EDIBLE_QTY / 100),2)) VITA,--"비타민A",
                            SUM(ROUND((C.RETIN      * B.EDIBLE_QTY / 100),2)) RETIN,--"레티놀",
                            SUM(ROUND((C.B_CAROT    * B.EDIBLE_QTY / 100),2)) B_CAROT,--"B_카르틴",
                            SUM(ROUND((C.THIA       * B.EDIBLE_QTY / 100),2)) THIA,--"비타민B1",
                            SUM(ROUND((C.RIBO       * B.EDIBLE_QTY / 100),2)) RIBO,--"비타민B2",
                            SUM(ROUND((C.NIACIN     * B.EDIBLE_QTY / 100),2)) NIASIN,--"나이아신",
                            SUM(ROUND((C.VITA_C     * B.EDIBLE_QTY / 100),2)) VITA_C,--"비타민C",
                            SUM(ROUND((C.CHOLE      * B.EDIBLE_QTY / 100),2)) CHOLE--"콜레스테롤"
                            
                    FROM    SCC_COMMON_CODE E,
                            FSM_REAL_RECIPE_MST A , -- FSR_UPJANG_RECIPE_MST
                            FSM_REAL_RECIPE_ITEM  B , --FSR_UPJANG_RECIPE_ITEM
                            FSM_REAL_MENU_MST D,
                            FSI_ITEM_NUT C

                    WHERE   E.GROUP_CODE = 'MA0142'
                    AND 	E.USE_YN = 'Y'
                    AND 	E.CODE = A.UPJANG
                    AND 	A.UPJANG=B.UPJANG
                    AND     A.MENU_CD=B.MENU_CD
                    AND     A.RECIPE_CD=B.RECIPE_CD
                    AND     B.ITEM_CODE=C.ITEM_CODE(+)
                    AND     A.UPJANG=D.UPJANG
                    AND     A.MENU_CD=D.MENU_CD
                    AND     D.MENU_DATE BETWEEN :fromDt AND :toDt
                    GROUP BY A.RECIPE_SEQ ,
                             A.UPJANG,
                             A.MENU_CD,
                             A.RECIPE_CD,
                             A.RECIPE_NAME,
                             D.HALL_CD,
                             D.MENU_DATE,
                             D.MEAL,
                             D.CORNER
                    ) E
  WHERE D.GROUP_CODE = 'MA0142'
    AND D.CODE = '100751'
    AND D.USE_YN = 'Y'
    AND D.CODE = C.UPJANG
    AND A.UPJANG     = C.UPJANG
    AND A.MENU_CD    = C.MENU_CD
    AND A.UPJANG     = E.UPJANG
    AND A.MENU_CD    = E.MENU_CD
    AND A.RECIPE_CD  = E.RECIPE_CD
    AND A.RECIPE_CD  = S.RECIPE_CD
    AND S.RECIPE_CD  = R.RECIPE_CD
    AND R.RECIPE_CD  = R2.RECIPE_CD
    AND R.CUISINE_SEQ = R2.C_SEQ
    ORDER BY C.UPJANG,
             C.MENU_DATE,
             C.HALL_CD,
             C.MEAL,
             C.CORNER,
             A.RECIPE_CD]]></statement>
</hqml>
