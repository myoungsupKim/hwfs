<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="ft.fts.saleOrderDAO">
	<desc>입고(재고)를 판매 주문에 대하여 관리 HQML Query</desc>

	<!-- 입고(재고)를 판매 주문에 대하여 관리 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.ft.fts.dao.SaleOrderDAO.selectList */
		<![CDATA[
        SELECT
            A.SALE_ORDER_TYPE
            ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'SALE_TYPE' AND CODE = A.SALE_ORDER_TYPE ) AS SALE_ORDER_TYPE_NM
            ,A.ATTACH_DEPT
            ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'SALE_AGED' AND CODE = A.SALE_AGED ) AS SALE_AGED_NM
            ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'ATTACH_DEPT' AND CODE = A.ATTACH_DEPT ) AS ATTACH_DEPT_NM
            ,NVL(SCC_CODE_NM('RELEASE_STATUS_CD', D.RELEASE_STATUS_CD), '미출고') AS RELEASE_STATUS_NM
            ,A.SALE_ORDER_NUM
            ,A.RELEASEPLCE_CD
            ,A.RELEASEPLCE_NM
            ,B.ITEM_CD
            ,H.ITEM_NAME||' '||H.ITEM_SIZE AS ITEM_NM
            ,A.ORDER_DATE
            ,B.PO_ORDER_NUM
            ,H.ORIGIN_TYPE AS  ORIGIN
            ,A.SALE_PRCG_ID
            ,(SELECT T.NM_KOR FROM   HR_PERSONAL T, SCC_CC T2 WHERE  T2.CC_CD = T.CC_CD AND A.SALE_PRCG_ID =T.SABUN ) SALE_PRCG_NM
            ,C.DELIVER_QUANTITY TOT_QUANTITY                               /*총수량  */
            ,C.DELIVER_WGT TOT_WGT                                         /*총중량  */
            ,NVL(B.ORDER_QUANTITY,0) -NVL(B.CANCEL_QUANTITY,0)  AS ORDER_QUANTITY /*주문수량*/
            ,NVL(B.ORDER_WGT,0) -NVL(B.CANCEL_WGT,0)  AS ORDER_WGT                /*주문중량*/

            ,NVL(B.RELEASE_QUANTITY,0) RELEASE_QUANTITY                    /*출고수량*/
            ,NVL(B.RELEASE_WGT,0) RELEASE_WGT                              /*출고중량*/

            ,NVL(B.ORDER_QUANTITY,0) - ( NVL(B.RELEASE_APPRV_REQ_QUANTITY,0) + NVL(B.RELEASE_QUANTITY,0) + NVL(B.CANCEL_QUANTITY,0) ) REMAIN_QUANTITY  /*잔여수량*/
            ,CASE WHEN NVL(B.ORDER_QUANTITY,0) - ( NVL(B.RELEASE_APPRV_REQ_QUANTITY,0) + NVL(B.RELEASE_QUANTITY,0) + NVL(B.CANCEL_QUANTITY,0) ) = 0 THEN
                  0
             ELSE
                  NVL(B.ORDER_WGT,0) - ( NVL(B.RELEASE_APPRV_REQ_WGT,0) + NVL(B.RELEASE_WGT,0) + NVL(B.CANCEL_WGT,0) )
             END REMAIN_WGT  /*잔여중량*/

            ,C.ORDER_REMAIN_QUANTITY
            ,C.ORDER_REMAIN_WGT

            ,NVL(B.RELEASE_APPRV_REQ_QUANTITY,0) RELEASE_WAIT_QUANTITY		--출고대기수량
            ,NVL(B.RELEASE_APPRV_REQ_WGT,0) RELEASE_WAIT_WGT				    --출고대기중량

            ,NVL(B.RELEASE_QUANTITY,0) RELEASE_END_QUANTITY					--출고완료수량
            ,NVL(B.RELEASE_WGT,0) RELEASE_END_WGT							--출고완료중량

            ,NVL(B.CANCEL_QUANTITY,0) AS CANCEL_QUANTITY       				--취소수량
            ,NVL(B.CANCEL_WGT,0) AS CANCEL_WGT       						--취소중량
/*
            ,NVL(C.RELEASE_WAIT_QUANTITY,0) RELEASE_WAIT_QUANTITY
            ,NVL(C.RELEASE_WAIT_WGT,0) RELEASE_WAIT_WGT
            ,NVL(C.RELEASE_END_QUANTITY,0) RELEASE_END_QUANTITY
            ,NVL(C.RELEASE_END_WGT,0) RELEASE_END_WGT
*/

            ,C.PO_TYPE
            ,D.RELEASE_STATUS_CD

            --,D.RELEASE_NUM
            ,B.SALE_UPRICE               /*판매단가*/
            ,C.WH_NM
            ,CASE WHEN C.PO_TYPE= '10' THEN    --수입(KRW)
                 G.BL_NUM
             ELSE
                (
                  SELECT T.ITEM_BL_NUM FROM PO_ORDER_ITEM_DETAIL T
                  WHERE B.PO_ORDER_NUM = T.PO_ORDER_NUM
                  AND B.ITEM_CD = T.ITEM_CD
                  AND B.ITEM_SEQ = T.ITEM_SEQ
                )
             END AS BL_NUM
            ,NVL(D.CUST_CD,RELEASEPLCE_CD) AS CUST_CD
            --,F.UPJANGNM AS CUST_NM
            ,A.RELEASEPLCE_NM AS CUST_NM
            ,D.REAL_WGT
            /*
            ,CASE WHEN C.PO_TYPE= '10' THEN    --수입(KRW)
                B.BUY_CST
             ELSE
                 ROUND((C.DELIVER_AMT+NVL(E.DIV_AMT,0)) * DECODE(C.UNIT, 'KG', B.ORDER_WGT, B.ORDER_QUANTITY) /  DECODE(C.UNIT, 'KG', C.DELIVER_WGT, C.DELIVER_QUANTITY))
             END   AS BUY_CST
             */
            --,B.BUY_CST
            ,ROUND((C.DELIVER_AMT+NVL(E.DIV_AMT,0)) * DECODE(C.UNIT, 'KG', B.ORDER_WGT, B.ORDER_QUANTITY) /  DECODE(C.UNIT, 'KG', C.DELIVER_WGT, C.DELIVER_QUANTITY)) AS BUY_CST
            ,NVL(D.SALE_AMT, B.SALE_CST) SALE_AMT                  /*판매금액*/
            ,C.CURRENT_WH_DELIVER_DATE    /* 입고일자 */
            ,C.DELIVER_NUM
            ,B.SALE_ORDER_NUM_SEQ
            ,CASE WHEN B.SALE_ORDER_NUM_SEQ IS NOT NULL AND
                       NVL(B.ORDER_QUANTITY,0) -NVL(B.CANCEL_QUANTITY,0) > 0 THEN	--주문수량이 있으면
                       0
                  ELSE
                       1
             END AS RELEASE_CNT
                ,(SELECT T.NM_KOR FROM SCC_USERINFO T WHERE T.SABUN = NVL(D.CUSER,B.CUSER)) AS CUSER
                ,NVL(D.CDATE,B.CDATE) AS CDATE
                ,(SELECT T.NM_KOR FROM SCC_USERINFO T WHERE T.SABUN = NVL(D.UUSER,B.UUSER)) AS UUSER
                ,NVL(D.UDATE,B.UDATE) AS UDATE
        FROM
            SALE_ORDER A
           ,SALE_ORDER_ITEM_MGMT B
           ,INVENTORY_MGMT_DELIVER C
           ,(SELECT
                    T.SALE_ORDER_NUM
                  , T.SALE_ORDER_NUM_SEQ
                  , MAX(T.RELEASE_STATUS_CD) AS RELEASE_STATUS_CD
                  , MAX(T.SALE_AGED) AS SALE_AGED
                  , MAX(T.CUST_CD) AS CUST_CD

                  , NVL(SUM(T.REAL_WGT),0) AS REAL_WGT
                  , NVL(SUM(T.SALE_AMT),0) AS SALE_AMT


                  , MAX(T.CUSER) AS CUSER
                  , MAX(T.CDATE) AS CDATE
                  , MAX(T.UUSER) AS UUSER
                  , MAX(T.UDATE) AS UDATE
             FROM RELEASE_ITEM_MGMT T
             GROUP BY T.SALE_ORDER_NUM, T.SALE_ORDER_NUM_SEQ
            ) D
           ,PO_ORDER_MST G
           ,HLDC_PO_ITEM_MST H
           ,(SELECT T.DELIVER_NUM, SUM(T.DIV_AMT) AS DIV_AMT, NVL(MAX(T.NONARRIV_ALT_YN),'N') AS NONARRIV_ALT_YN FROM DELIVERITEM_OTHER_AMT_DIV T
             WHERE NVL(T.DIV_AMT,0)>0
             GROUP BY T.DELIVER_NUM
           ) E
           --,FMS_UPJANG_V F
        WHERE A.SALE_ORDER_NUM = B.SALE_ORDER_NUM(+)
        AND B.PO_ORDER_NUM = G.PO_ORDER_NUM(+)
        AND B.PO_ORDER_NUM = C.PO_ORDER_NUM
        AND B.DELIVER_NUM = C.DELIVER_NUM
        AND B.SALE_ORDER_NUM = D.SALE_ORDER_NUM(+)
        AND B.SALE_ORDER_NUM_SEQ = D.SALE_ORDER_NUM_SEQ(+)
        AND B.ITEM_CD = H.ITEM_CODE(+)
        AND C.DELIVER_NUM = E.DELIVER_NUM(+)
        --AND D.CUST_CD = F.CUSTCD(+)
        <#if term?has_content>
            <#if term == "A">	/* 주문일자 */
                AND A.ORDER_DATE BETWEEN :startTerm AND :endTerm
            </#if>
        </#if>
        <#if saleOrderStatus?has_content>
            <#if saleOrderStatus == "A">	/* 주문등록 */
                AND B.SALE_ORDER_STATUS = '10'
            <#elseif saleOrderStatus == "B">	/* 승인요청 */
                AND EXISTS
                    (SELECT 1
                     FROM RELEASE_ITEM_MGMT T2
                     WHERE   T2.SALE_ORDER_NUM = B.SALE_ORDER_NUM
                     AND   T2.RELEASE_STATUS_CD = '20')
            <#elseif saleOrderStatus == "C">	/* 승인 */
                AND EXISTS
                    (SELECT 1
                     FROM RELEASE_ITEM_MGMT T2
                     WHERE   T2.SALE_ORDER_NUM = B.SALE_ORDER_NUM
                     AND   T2.RELEASE_STATUS_CD = '30')

            <#elseif saleOrderStatus == "D">	/* 출고증발행 */
                AND EXISTS
                    (SELECT 1
                     FROM RELEASE_ITEM_MGMT T2, RELEASE_PUBLISH_LOG T3
                     WHERE   T2.RELEASE_NUM  = T3.RELEASE_NUM
                     AND   T2.RELEASE_NUM_SEQ =  T3.RELEASE_NUM_SEQ
                     AND   T2.SALE_ORDER_NUM = B.SALE_ORDER_NUM
                     )
            </#if>
        </#if>
        <#if saleOrderType?has_content>
            AND A.SALE_ORDER_TYPE = :saleOrderType
        </#if>
        <#if search?has_content>
            <#if searchContents?has_content>
                <#if search == "A">	/* 판매주문번호 */
                    AND A.SALE_ORDER_NUM LIKE '%'||:searchContents||'%'
                <#elseif search == "B">	/* 출고처 */
                    AND A.RELEASEPLCE_NM LIKE '%'||:searchContents||'%'
                <#elseif search == "C">	/* PO NO */
                    AND B.PO_ORDER_NUM LIKE '%'||:searchContents||'%'
                <#elseif search == "D">	/* 제목 */
                    AND B.ITEM_NM LIKE '%'||:searchContents||'%'
                </#if>
             </#if>
        </#if>
        <#if attachDept?has_content>
            AND A.ATTACH_DEPT = :attachDept
        </#if>
        <#if saleAged?has_content>
            AND A.SALE_AGED = :saleAged
        </#if>
        --AND NVL(B.ORDER_QUANTITY,0) - ( NVL(B.RELEASE_APPRV_REQ_QUANTITY,0) + NVL(B.RELEASE_QUANTITY,0) + NVL(B.CANCEL_QUANTITY,0) ) > 0
        AND (
              NVL(B.ORDER_QUANTITY,0) - ( NVL(B.RELEASE_APPRV_REQ_QUANTITY,0) + NVL(B.RELEASE_QUANTITY,0) + NVL(B.CANCEL_QUANTITY,0) ) > 0
              OR
              NVL(B.ORDER_WGT,0) - ( NVL(B.RELEASE_APPRV_REQ_WGT,0) + NVL(B.RELEASE_WGT,0) + NVL(B.CANCEL_WGT,0) ) > 0
            )
        ORDER BY A.SALE_ORDER_NUM DESC, B.PO_ORDER_NUM
        ]]>
	</statement>

	<!-- 입고(재고)를 판매 주문에 대하여 관리(을)를 등록한다. -->
	<statement name="insert" type="insert">
		/*+ com.hwfs.ft.fts.dao.SaleOrderDAO.insert */
		<![CDATA[
        INSERT INTO SALE_ORDER
        (
         SALE_ORDER_NUM,
         SALE_ORDER_TYPE,
         RELEASEPLCE_CD,
         RELEASEPLCE_NM,
         SALE_AGED,
         ATTACH_DEPT,
         SALE_PRCG_ID,
         ORDER_DATE,
         ORDER_AGED,
         RELEASE_DATE,
         CUSER,
         CDATE,
         UUSER,
         UDATE
        ) VALUES (
         :saleOrderNum,
        <#if saleOrderType?exists> :saleOrderType, <#else> null, </#if>
        <#if releaseplceCd?exists> :releaseplceCd, <#else> null, </#if>
        <#if releaseplceNm?exists> :releaseplceNm, <#else> null, </#if>
        <#if saleAged?exists> :saleAged, <#else> null, </#if>
        <#if attachDept?exists> :attachDept, <#else> null, </#if>
        <#if salePrcgId?exists> :salePrcgId, <#else> null, </#if>
        <#if orderDate?exists> :orderDate, <#else> null, </#if>
        <#if orderAged?exists> :orderAged, <#else> null, </#if>
        <#if releaseDate?exists> :releaseDate, <#else> null, </#if>
         :loginSabun,
         SYSDATE,
         :loginSabun,
         SYSDATE
        )

        ]]>
	</statement>

	<!-- 입고(재고)를 판매 주문에 대하여 관리(을)를 수정한다. -->
	<statement name="update" type="update">
		/*+ com.hwfs.ft.fts.dao.SaleOrderDAO.update */
		<![CDATA[
        UPDATE SALE_ORDER SET
        <#if saleOrderType?exists> SALE_ORDER_TYPE = :saleOrderType, </#if>
        <#if releaseplceCd?exists> RELEASEPLCE_CD = :releaseplceCd, </#if>
        <#if releaseplceNm?exists> RELEASEPLCE_NM = :releaseplceNm, </#if>
        <#if saleAged?exists> SALE_AGED = :saleAged, </#if>
        <#if attachDept?exists> ATTACH_DEPT = :attachDept, </#if>
        <#if salePrcgId?exists> SALE_PRCG_ID = :salePrcgId, </#if>
        <#if orderDate?exists> ORDER_DATE = :orderDate, </#if>
        <#if orderAged?exists> ORDER_AGED = :orderAged, </#if>
        <#if releaseDate?exists> RELEASE_DATE = :releaseDate, </#if>
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  SALE_ORDER_NUM = :saleOrderNum
        ]]>
	</statement>

	<!-- 입고(재고)를 판매 주문에 대하여 관리(을)를 삭제한다. -->
	<statement name="delete" type="delete">
		/*+ com.hwfs.ft.fts.dao.SaleOrderDAO.delete */
		<![CDATA[
        DELETE
        FROM   SALE_ORDER
        WHERE  SALE_ORDER_NUM = :saleOrderNum
        ]]>
	</statement>

	<!-- 입고(재고)를 판매 주문에 대하여 관리 목록을 조회한다. -->
	<statement name="selectItemInfoSaveSearchPop" type="select">
		/*+ com.hwfs.ft.fts.dao.SaleOrderDAO.selectItemInfoSaveSearchPop
		*/
		<![CDATA[
        SELECT
             1 CHK
            ,A.PO_ORDER_NUM
            ,A.BL_NUM
            --,D.ENTRY_NUM
            ,A.SALE_TYPE
            ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'SALE_TYPE' AND CODE = A.SALE_TYPE ) AS SALE_TYPE_NM
            ,A.ATTACH_DEPT
            ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'ATTACH_DEPT' AND CODE = A.ATTACH_DEPT ) AS ATTACH_DEPT_NM
            ,C.PO_TYPE
            ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'PO_TYPE' AND CODE = C.PO_TYPE ) AS PO_TYPE_NM
            ,A.SALSPLCE_CD
            ,A.SALSPLCE_NM
            ,A.PO_ORDER_DATE
            ,A.SALE_EDATE
            ,C.DRAFTER_ID
            ,(SELECT T.NM_KOR FROM   HR_PERSONAL T, SCC_CC T2 WHERE  T2.CC_CD = T.CC_CD AND C.DRAFTER_ID =T.SABUN ) DRAFTER_NM
        FROM PO_ORDER_MST A,
        (
        SELECT
          PO_ORDER_NUM--, ENTRY_NUM
        FROM INVENTORY_MGMT_DELIVER
        WHERE
        (
          (
                NVL(DELIVER_QUANTITY,0)  -
               (NVL(RELEASE_WAIT_QUANTITY,0)
              + NVL(RELEASE_END_QUANTITY,0)
              + NVL(RMA_QUANTITY,0)
              + NVL(WH_MOVE_QUANTITY,0)
              + NVL(ORDER_REMAIN_QUANTITY,0)
              )
          ) > 0  /*출고가능수량 > 0 */
        OR
          (
              NVL(DELIVER_WGT,0)  -
               (NVL(RELEASE_WAIT_WGT,0)
              + NVL(RELEASE_END_WGT,0)
              + NVL(RMA_WGT,0)
              + NVL(WH_MOVE_WGT,0)
              + NVL(ORDER_REMAIN_WGT,0)
              ) >0
          )   /*출고가능중량 > 0 */
        )
        AND DELIVER_STATUS <>'10'  --가입고 제외
        --AND WONWTRLRG_NONARRIV_ALT_YN = 'Y'      --원물대 미도착 대체 여부 SAP연계시 주석 풀기
        GROUP BY PO_ORDER_NUM--, ENTRY_NUM
        ) B,
        PO_PROPOSAL_MST C
        WHERE A.PO_ORDER_NUM = B.PO_ORDER_NUM
        AND A.PO_PROPOSAL_NUM=C.PO_PROPOSAL_NUM
        <#if term?has_content>
            AND EXISTS (
            SELECT 1 FROM INVENTORY_MGMT_DELIVER
            WHERE A.PO_ORDER_NUM = PO_ORDER_NUM
            <#if term == "A">	/* 최초창고일자 */
               AND FIRST_DELIVER_DATE BETWEEN :startTerm AND :endTerm
            <#elseif term == "B">	/* 창고입고일자 */
                AND CURRENT_WH_DELIVER_DATE  BETWEEN :startTerm AND :endTerm
            </#if>
            )
        </#if>
        <#if poType?has_content>
            AND C.PO_TYPE = :poType
        </#if>
        <#if search?has_content>
            <#if searchContents?has_content>
                <#if search == "A">	/* po no */
                    AND A.PO_ORDER_NUM LIKE '%'||:searchContents||'%'
                <#elseif search == "B">	/* cl no */
                    AND EXISTS (
                        SELECT 1 FROM ENTRY_MST
                        WHERE A.PO_ORDER_NUM = PO_ORDER_NUM
                        AND INCOME_LIC_NUM LIKE '%'||:searchContents||'%'
                    )
                <#elseif search == "C">	/* 매입처 */
                    AND A.SPLR_NM LIKE '%'||:searchContents||'%'
                <#elseif search == "D">	/* 매출처 */
                    AND A.SALSPLCE_NM LIKE '%'||:searchContents||'%'
                <#elseif search == "E">	/* 창고명 */
                    AND EXISTS (
                        SELECT 1 FROM INVENTORY_MGMT_DELIVER
                        WHERE A.PO_ORDER_NUM = PO_ORDER_NUM
                        AND WH_NM LIKE '%'||:searchContents||'%'
                    )
                <#elseif search == "F">	/* 품목 */
                    AND EXISTS (
                        SELECT 1 FROM INVENTORY_MGMT_DELIVER
                        WHERE A.PO_ORDER_NUM = PO_ORDER_NUM
                        AND ITEM_NM LIKE '%'||:searchContents||'%'
                    )
                </#if>
            </#if>
        </#if>
        <#if blNum?has_content>
            AND A.BL_NUM LIKE '%'||:blNum||'%'
        </#if>
        <#if attachDept?has_content>
            AND A.ATTACH_DEPT = :attachDept
        </#if>
        --ORDER BY D.PO_ORDER_NUM DESC, D.ENTRY_NUM
        ]]>
	</statement>

	<!-- 입고(재고)를 판매 주문에 대하여 관리 상세 목록을 조회한다. -->
	<statement name="selectItemInfoSaveSearchPop2" type="select">
		/*+
		com.hwfs.ft.fts.dao.SaleOrderDAO.selectItemInfoSaveSearchPop2 */
		<![CDATA[
        SELECT
        *
        FROM
        (
             SELECT
                 A.DELIVER_NUM
                ,A.PO_ORDER_NUM
                ,A.ITEM_CD
                ,A.ITEM_NM
                ,A.ITEM_SEQ
                ,A.ATTACH_DEPT

                ,A.SALE_TYPE
                ,A.SALSPLCE_CD
                ,A.SALSPLCE_NM

                ,A.WH_CD
                ,A.WH_NM
                ,A.HS_CD
                ,A.FIRST_DELIVER_DATE
                ,A.CURRENT_WH_DELIVER_DATE
                ,A.UNIT
                ,A.DELIVER_UPRICE_KRW
                ,A.DELIVER_QUANTITY
                ,A.DELIVER_WGT
                ,A.RELEASE_WAIT_QUANTITY
                ,A.RELEASE_WAIT_WGT

                ,A.RELEASE_END_QUANTITY
                ,A.RELEASE_END_WGT

                ,A.RMA_QUANTITY
                ,A.RMA_WGT
                ,A.WH_MOVE_QUANTITY
                ,A.WH_MOVE_WGT

                ,A.INVENTORY_CONTROL_QUANTITY
                ,A.INVENTORY_CONTROL_WGT

                ,(NVL(A.RELEASE_WAIT_QUANTITY,0)
                + NVL(RELEASE_END_QUANTITY,0)
                + NVL(RMA_QUANTITY,0)

                + NVL(WH_MOVE_QUANTITY,0)) AS GI_RELEASE_QUANTITY/* 기출고수량 : 출고대기수량+출고완료수량+반품수량+창고이동수량 */
                ,(NVL(A.RELEASE_WAIT_WGT,0)
                + NVL(RELEASE_END_WGT,0)
                + NVL(RMA_WGT,0)
                + NVL(WH_MOVE_WGT,0)) AS GI_RELEASE_WGT /* 기출고중량 : 출고대기중량+출고완료중량+반품중량+창고이동중량 */

                ,CASE WHEN ORDER_REMAIN_QUANTITY = NULL THEN  /*주문잔여수량*/
                    A.DELIVER_QUANTITY
                 ELSE
                    NVL(A.DELIVER_QUANTITY, 0) - NVL(ORDER_REMAIN_QUANTITY, 0) - NVL(A.RELEASE_WAIT_QUANTITY, 0) - NVL(A.RELEASE_END_QUANTITY, 0)
                  - NVL(RMA_QUANTITY,0)
                  - NVL(WH_MOVE_QUANTITY,0)
                  - NVL(INVENTORY_CONTROL_QUANTITY,0)
                 END ORDER_REMAIN_QUANTITY

                ,CASE WHEN ORDER_REMAIN_WGT = NULL THEN
                    A.DELIVER_WGT
                 ELSE
                    NVL(A.DELIVER_WGT, 0) - NVL(ORDER_REMAIN_WGT, 0) - NVL(A.RELEASE_WAIT_WGT, 0) - NVL(A.RELEASE_END_WGT, 0)
                  - NVL(RMA_WGT,0)
                  - NVL(WH_MOVE_WGT,0)
                  - NVL(INVENTORY_CONTROL_WGT,0)
                 END ORDER_REMAIN_WGT

                ,NVL(A.DELIVER_QUANTITY,0) -  NVL(ORDER_REMAIN_QUANTITY,0)  CNT_ORDER_REMAIN_QUANTITY      /*주문잔여수량*/
                ,NVL(A.DELIVER_WGT,0) -  NVL(ORDER_REMAIN_WGT,0)  CNT_ORDER_REMAIN_WGT                     /*주문잔여중량*/

                ,NVL(DELIVER_QUANTITY,0)  -
                 (NVL(A.RELEASE_WAIT_QUANTITY,0)
                + NVL(RELEASE_END_QUANTITY,0)
                + NVL(RMA_QUANTITY,0)
                + NVL(WH_MOVE_QUANTITY,0)
                + NVL(INVENTORY_CONTROL_QUANTITY,0)
                ) RELEASE_POSS_QUANTITY /*출고가능수량*/

                ,NVL(DELIVER_WGT,0)  -
                 (NVL(A.RELEASE_WAIT_WGT,0)
                + NVL(RELEASE_END_WGT,0)
                + NVL(RMA_WGT,0)
                + NVL(WH_MOVE_WGT,0)
                + NVL(INVENTORY_CONTROL_WGT,0)
                ) RELEASE_POSS_WGT

                ,A.ENTRY_NUM
                ,A.ENTRY_ITEM_SEQ
                ,B.KG_CONVERT_RATE
            FROM INVENTORY_MGMT_DELIVER A
                ,HLDC_PO_ITEM_MST B
            WHERE 1=1
            AND   A.ITEM_CD = B.ITEM_CODE(+)
            AND   A.PO_ORDER_NUM = :poOrderNum
            --AND A.ENTRY_NUM=:entryNum
            <#if term?has_content>
                <#if term == "A">	/* 최초창고일자 */
                    AND A.FIRST_DELIVER_DATE BETWEEN :startTerm AND :endTerm
                 <#elseif term == "B">	/* 창고입고일자 */
                    AND A.CURRENT_WH_DELIVER_DATE  BETWEEN :startTerm AND :endTerm
                 </#if>
            </#if>
            <#if poType?has_content>
                AND A.PO_TYPE = :poType
            </#if>
            <#if search?has_content>
                <#if searchContents?has_content>
                    <#if search == "A">	/* po no */
                        AND A.PO_ORDER_NUM LIKE '%'||:searchContents||'%'
                    <#elseif search == "B">	/* cl no */
                        AND EXISTS (
                            SELECT 1 FROM ENTRY_MST
                            WHERE A.PO_ORDER_NUM = PO_ORDER_NUM
                            AND INCOME_LIC_NUM LIKE '%'||:searchContents||'%'
                        )
                    <#elseif search == "C">	/* 매입처 */
                        AND A.SPLR_NM LIKE '%'||:searchContents||'%'
                    <#elseif search == "D">	/* 매출처 */
                        AND A.SALSPLCE_NM LIKE '%'||:searchContents||'%'
                    <#elseif search == "E">	/* 창고명 */
                        AND A.WH_NM LIKE '%'||:searchContents||'%'
                    <#elseif search == "F">	/* 품목 */
                        AND A.ITEM_NM LIKE '%'||:searchContents||'%'
                    </#if>
                </#if>
            </#if>
            <#if blNum?has_content>
                AND EXISTS (
                    SELECT 1 FROM PO_ORDER_MST
                    WHERE A.PO_ORDER_NUM = PO_ORDER_NUM
                    AND BL_NUM LIKE '%'||:blNum||'%'
                )
            </#if>
            <#if attachDept?has_content>
                AND A.ATTACH_DEPT = :attachDept
            </#if>
            AND A.DELIVER_STATUS <>'10'	--가입고 제외
            ORDER BY A.DELIVER_NUM DESC
        )
        WHERE 1=1
        AND ( ORDER_REMAIN_QUANTITY > 0 OR ORDER_REMAIN_WGT >0 )
        --AND ( CNT_ORDER_REMAIN_QUANTITY > 0 OR CNT_ORDER_REMAIN_WGT >0 )
        ]]>
	</statement>

	<!-- 판매주문 마스터을 조회한다. -->
	<statement name="selectSaleOrder" type="select">
		/*+ com.hwfs.ft.fts.dao.SaleOrderDAO.selectSaleOrder */
		<![CDATA[
        SELECT SALE_ORDER_NUM,
               SALE_ORDER_TYPE,
               RELEASEPLCE_CD,
               RELEASEPLCE_NM,
               SALE_AGED,
               ATTACH_DEPT,
               SALE_PRCG_ID,
               (SELECT T.NM_KOR FROM   HR_PERSONAL T, SCC_CC T2
                WHERE  T2.CC_CD = T.CC_CD AND SALE_PRCG_ID =T.SABUN ) SALE_PRCG_NM,
               ORDER_DATE,
               ORDER_AGED,
               RELEASE_DATE,
               CUSER,
               CDATE,
               UUSER,
               UDATE,
               (SELECT COUNT(T.RELEASE_NUM) FROM RELEASE_ITEM_MGMT T WHERE T.SALE_ORDER_NUM = A.SALE_ORDER_NUM ) RELEASE_CNT
        FROM   SALE_ORDER A
        WHERE  SALE_ORDER_NUM = :saleOrderNum
        ]]>
	</statement>

	<!-- 통관 마스터 시퀀스 조회 한다. -->
	<statement name="getSaleOrderNumSeq" type="select">
		<![CDATA[
            select LPAD(SALE_ORDER_S.NEXTVAL,6,'000000') AS SALE_ORDER_NUM FROM DUAL
        ]]>
	</statement>

	<!-- 판매주문등록 리스트를 조회 한다. -->
	<statement name="selectSalesOrderRegList" type="select"><![CDATA[
SELECT
*
FROM
(
    SELECT /*+ INDEX_FFS(X) */
      '0' AS CHK,
      X.DELIVER_NUM,
     (SELECT SET1 FROM SCC_COMMON_CODE
       WHERE  GROUP_CODE = 'ATTACH_DEPT'
       AND CODE = X.ATTACH_DEPT ) AS ATTACH_DEPT_SAP,   /*SAP귀속부서*/
     (SELECT DISTINCT(T2.CC_CD) CC_CD FROM ST_CUST T, ST_UPJANG T2
       WHERE  T.CUSTCD = T2.CUSTCD
       AND T.CUSTCD=X.SALSPLCE_CD
       AND    T.USE_YN = 'Y'
       AND    T2.APPROVAL_STATUS_CD = 'APR'
       AND T2.CC_CD IN (
                 SELECT A.SET1
                 FROM   SCC_COMMON_CODE A
                 WHERE  A.GROUP_CODE = 'ATTACH_DEPT'
                 AND    A.USE_YN = 'Y'
               )
       AND T2.USE_YN = 'Y' 
      ) AS CHG_ATTACH_DEPT_SAP,   /*부서이관시 SAP귀속부서*/
      X.PO_TYPE,
      (SELECT CODE_NAME
         FROM SCC_COMMON_CODE
        WHERE GROUP_CODE = 'PO_TYPE'
          AND CODE = X.PO_TYPE) AS PO_TYPE_NM,
      CASE WHEN X.PO_TYPE= '10' THEN    --수입(KRW)
           A.BL_NUM
       ELSE
          (
            SELECT T.ITEM_BL_NUM FROM PO_ORDER_ITEM_DETAIL T
            WHERE X.PO_ORDER_NUM = T.PO_ORDER_NUM
            AND X.ITEM_CD = T.ITEM_CD
            AND X.ITEM_SEQ = T.ITEM_SEQ
          )
     END AS BL_NUM,
     X.PO_ORDER_NUM,
     X.ITEM_CD,
     Y.ITEM_NAME||' '||Y.ITEM_SIZE AS ITEM_NM,

     X.ITEM_SEQ,
     X.ATTACH_DEPT,

     A.SALE_TYPE,
    (SELECT CODE_NAME
      FROM SCC_COMMON_CODE
     WHERE GROUP_CODE = 'SALE_TYPE'
       AND CODE = A.SALE_TYPE) AS SALE_TYPE_NM,

    (SELECT CODE_NAME
       FROM SCC_COMMON_CODE
      WHERE GROUP_CODE = 'ATTACH_DEPT'
        AND CODE = X.ATTACH_DEPT) AS ATTACH_DEPT_NM,
              X.SALSPLCE_CD,
              X.SALSPLCE_NM,
    A.PO_ORDER_DATE,
    A.SALE_EDATE,

    B.DRAFTER_ID,
    (SELECT T.NM_KOR
       FROM HR_PERSONAL T, SCC_CC T2
      WHERE T2.CC_CD = T.CC_CD
        AND B.DRAFTER_ID = T.SABUN) DRAFTER_NM,



     X.WH_CD,
     X.WH_NM,
     X.HS_CD,
     X.FIRST_DELIVER_DATE,
     X.CURRENT_WH_DELIVER_DATE,
     X.UNIT,
     Y.KG_CONVERT_RATE,
     (SELECT SET1 FROM   SCC_COMMON_CODE A WHERE  A.GROUP_CODE = 'ITEM_UNIT' AND    A.USE_YN = 'Y' AND A.CODE = X.UNIT ) SET1,
     --X.DELIVER_UPRICE_KRW,

     ROUND((X.DELIVER_AMT+ NVL(E.DIV_AMT,0)) / DECODE(X.UNIT,'KG',X.DELIVER_WGT,X.DELIVER_QUANTITY)) AS DELIVER_UPRICE_KRW,

     X.DELIVER_QUANTITY,
     X.DELIVER_WGT,
     X.RELEASE_WAIT_QUANTITY,
     X.RELEASE_WAIT_WGT

    ,
     X.RELEASE_END_QUANTITY,
     X.RELEASE_END_WGT

    ,
     X.RMA_QUANTITY,
     X.RMA_WGT,
     X.WH_MOVE_QUANTITY,
     X.WH_MOVE_WGT

    ,
     X.INVENTORY_CONTROL_QUANTITY,
     X.INVENTORY_CONTROL_WGT

    ,C.CANCEL_WGT
    ,C.CANCEL_QUANTITY

    ,(NVL(X.RELEASE_WAIT_QUANTITY, 0) +
     NVL(X.RELEASE_END_QUANTITY, 0) + NVL(X.RMA_QUANTITY, 0)

     + NVL(X.WH_MOVE_QUANTITY, 0)) AS GI_RELEASE_QUANTITY /* 기출고수량 : 출고대기수량+출고완료수량+반품수량+창고이동수량 */,
     (NVL(X.RELEASE_WAIT_WGT, 0) + NVL(X.RELEASE_END_WGT, 0) +
     NVL(X.RMA_WGT, 0) + NVL(X.WH_MOVE_WGT, 0)) AS GI_RELEASE_WGT /* 기출고중량 : 출고대기중량+출고완료중량+반품중량+창고이동중량 */

    ,
     CASE
         WHEN X.ORDER_REMAIN_QUANTITY = NULL THEN /*주문잔여수량*/
          X.DELIVER_QUANTITY
         ELSE
          NVL(X.DELIVER_QUANTITY, 0) -
          NVL(X.ORDER_REMAIN_QUANTITY, 0) -
          NVL(X.RELEASE_WAIT_QUANTITY, 0) -
          NVL(X.RELEASE_END_QUANTITY, 0) - NVL(X.RMA_QUANTITY, 0) -
          NVL(X.WH_MOVE_QUANTITY, 0) -
          NVL(X.INVENTORY_CONTROL_QUANTITY, 0)
    --      + NVL(C.CANCEL_QUANTITY,0)
    --      + NVL(F.PURCHASE_RETURN_QUANTITY,0)
     END ORDER_REMAIN_QUANTITY

    ,
     CASE
         WHEN X.ORDER_REMAIN_WGT = NULL THEN
          X.DELIVER_WGT
         ELSE
          NVL(X.DELIVER_WGT, 0) - NVL(X.ORDER_REMAIN_WGT, 0) -
          NVL(X.RELEASE_WAIT_WGT, 0) - NVL(X.RELEASE_END_WGT, 0) -
          NVL(X.RMA_WGT, 0) - NVL(X.WH_MOVE_WGT, 0) -
          NVL(X.INVENTORY_CONTROL_WGT, 0)
       --   + NVL(C.CANCEL_WGT,0)
       --   + NVL(F.PURCHASE_RETURN_WGT,0)
     END ORDER_REMAIN_WGT

    ,
     NVL(X.DELIVER_QUANTITY, 0) - NVL(X.ORDER_REMAIN_QUANTITY, 0) CNT_ORDER_REMAIN_QUANTITY /*주문잔여수량*/,
     NVL(X.DELIVER_WGT, 0) - NVL(X.ORDER_REMAIN_WGT, 0) CNT_ORDER_REMAIN_WGT /*주문잔여중량*/

    ,
     NVL(X.DELIVER_QUANTITY, 0) -
     (NVL(X.RELEASE_WAIT_QUANTITY, 0) +
      NVL(X.RELEASE_END_QUANTITY, 0) + NVL(X.RMA_QUANTITY, 0) +
      NVL(X.WH_MOVE_QUANTITY, 0) +
      NVL(X.INVENTORY_CONTROL_QUANTITY, 0)) RELEASE_POSS_QUANTITY /*출고가능수량*/

    ,
     NVL(X.DELIVER_WGT, 0) -
     (NVL(X.RELEASE_WAIT_WGT, 0) + NVL(X.RELEASE_END_WGT, 0) +
      NVL(X.RMA_WGT, 0) + NVL(X.WH_MOVE_WGT, 0) +
      NVL(X.INVENTORY_CONTROL_WGT, 0)) RELEASE_POSS_WGT

    ,X.ENTRY_NUM
    ,X.ENTRY_ITEM_SEQ

          ,CASE WHEN B.PO_KIND='A' THEN   --도매
              B.ATTACH_DEPT
           ELSE --협력사판매
              CASE WHEN A.ATTACH_DEPT='10' THEN  --축산
                   '15' --축산협력사판매
              WHEN A.ATTACH_DEPT='20' THEN --수산
                   '25' --수산협력사판매
              WHEN A.ATTACH_DEPT='30' THEN --농산
                   '35' --농산협력사판매
              END
           END AS SALE_AGED  /*판매경로*/

       ,TO_CHAR(SYSDATE, 'YYYYMMDD') AS RELEASE_DATE            /*출고요청일자*/
       ,TO_CHAR(SYSDATE, 'YYYYMMDD') AS ORDER_DATE                /*주문일자*/

       ,B.DRAFTER_ID AS SALE_PRCG_ID   /*판매담당자ID*/
       ,(SELECT T.NM_KOR
          FROM HR_PERSONAL T, SCC_CC T2
         WHERE T2.CC_CD = T.CC_CD
           AND B.DRAFTER_ID  = T.SABUN) SALE_PRCG_NM   /*판매담당자*/

       ,B.SALE_TYPE AS SALE_ORDER_TYPE

       ,(SELECT CODE_NAME
          FROM SCC_COMMON_CODE
         WHERE GROUP_CODE = 'SALE_ORDER_TYPE'
           AND CODE = B.SALE_TYPE) AS SALE_ORDER_TYPE_NM
       ,NVL((SELECT T.PROPOSAL_SEQ FROM PO_PROPOSAL_ITEM_DTL T WHERE T.PO_PROPOSAL_NUM=X.PO_PROPOSAL_NUM AND T.ITEM_CD = X.ITEM_CD AND T.PROPOSAL_SEQ = X.ITEM_SEQ),0) PROPOSAL_SEQ
       ,(SELECT T.NM_KOR FROM SCC_USERINFO T WHERE T.SABUN = X.CUSER) AS CUSER
       ,X.CDATE
       ,(SELECT T.NM_KOR FROM SCC_USERINFO T WHERE T.SABUN = X.UUSER) AS UUSER
       ,X.UDATE
      FROM INVENTORY_MGMT_DELIVER X
            ,HLDC_PO_ITEM_MST Y
            ,PO_ORDER_MST A
            ,PO_PROPOSAL_MST B
            ,(SELECT DELIVER_NUM, SUM(T.CANCEL_QUANTITY) AS CANCEL_QUANTITY , SUM(T.CANCEL_WGT) AS CANCEL_WGT FROM SALE_ORDER_ITEM_MGMT T GROUP BY T.DELIVER_NUM)  C
            ,(SELECT T.DELIVER_NUM, SUM(T.DIV_AMT) AS DIV_AMT, NVL(MAX(T.NONARRIV_ALT_YN),'N') AS NONARRIV_ALT_YN FROM DELIVERITEM_OTHER_AMT_DIV T
              GROUP BY T.DELIVER_NUM
             ) E
            ,(
             SELECT
                  A.DELIVER_NUM, NVL(SUM(B.PURCHASE_RETURN_QUANTITY),0) AS PURCHASE_RETURN_QUANTITY , NVL(SUM(B.PURCHASE_RETURN_WGT),0) AS PURCHASE_RETURN_WGT
             FROM SALE_ORDER_ITEM_MGMT A,
                  RELEASE_ITEM_MGMT B
             WHERE A.SALE_ORDER_NUM = B.SALE_ORDER_NUM
             AND A.SALE_ORDER_NUM_SEQ = B.SALE_ORDER_NUM_SEQ
             GROUP BY A.DELIVER_NUM
             ) F
     WHERE 1 = 1
       AND X.ITEM_CD = Y.ITEM_CODE(+)
       AND X.PO_ORDER_NUM = A.PO_ORDER_NUM
       AND A.PO_PROPOSAL_NUM = B.PO_PROPOSAL_NUM
       AND X.DELIVER_STATUS <> '10' --가입고 제외)
       AND X.DELIVER_NUM = C.DELIVER_NUM(+)
       AND X.DELIVER_NUM = E.DELIVER_NUM(+)
       AND X.DELIVER_NUM = F.DELIVER_NUM(+)
       /*
       AND EXISTS (  --미착 수수료 상품화된내역 있어야 판매가능
                     SELECT 1 FROM DELIVERITEM_OTHER_AMT_DIV T, FT_SAP_INTERFACE T2
                     WHERE X.DELIVER_NUM = T.DELIVER_NUM
                     AND T.ALT_FISCAL_SLIP_NUM = T2.SLIP_NUM
                     --AND T.NONARRIV_ALT_YN ='Y'
                     AND T.ALT_FISCAL_SLIP_NUM IS NOT NULL
                     AND T2.SLIP_STATUS IN ('V','P')	--임시전표 상태에서만 보이게 20151027 전윤희
                     UNION ALL
                     SELECT 1 FROM PO_ORDER_MST T
                     WHERE T.PO_ORDER_NUM = X.PO_ORDER_NUM
                     AND X.PO_TYPE='20'                   --내수포함

                  )
       */
       AND (X.ORG_DELIVER_NUM IS NOT NULL OR  -- 환입건이거나 (2016.01.11 추가)
           EXISTS (  --미착 수수료 상품화된내역 있어야 판매가능
                     SELECT 1 FROM DELIVERITEM_OTHER_AMT_DIV T, FT_SAP_INTERFACE T2
                     WHERE X.DELIVER_NUM = T.DELIVER_NUM
                     AND T.ALT_FISCAL_SLIP_NUM = T2.SLIP_NUM
                     --AND T.NONARRIV_ALT_YN ='Y'
                     AND T.ALT_FISCAL_SLIP_NUM IS NOT NULL
                     AND T2.SLIP_STATUS IN ('V','P')	--임시전표 상태에서만 보이게 20151027 전윤희
                     UNION ALL
                     SELECT 1 FROM PO_ORDER_MST T
                     WHERE T.PO_ORDER_NUM = X.PO_ORDER_NUM
                     AND X.PO_TYPE='20'                   --내수포함

                  )
           )       
       AND EXISTS (
                     --내수,수입 상품화 내역 있어야 판매가능
                     SELECT 1 FROM GDSPAYM_MST T, FT_SAP_INTERFACE T2
                     WHERE X.PO_ORDER_NUM = T.PO_ORDER_NUM
                     AND T.ALT_FISCAL_SLIP_NUM = T2.SLIP_NUM
                     --AND T.NONARRIV_SLIP_CREATION_YN ='Y'
                     AND T.ALT_FISCAL_SLIP_NUM IS NOT NULL
                     AND T2.SLIP_STATUS IN ('V','P')		--임시전표 상태에서만 보이게 20151027 전윤희
                     UNION ALL
                     SELECT 1 FROM PO_ORDER_MST T
                     WHERE T.PO_ORDER_NUM = X.PO_ORDER_NUM
                     AND X.PO_TYPE='20'                   --내수포함
                  )

   <#if search?has_content && searchContents?has_content>
       <#if search == "A"> /* PO No */
           AND X.PO_ORDER_NUM LIKE '%'||:searchContents||'%'
       <#elseif search == "B"> /* BL No */
           --AND A.BL_NUM LIKE '%'||:searchContents||'%'
           AND EXISTS (
              SELECT T.ITEM_BL_NUM FROM PO_ORDER_ITEM_DETAIL T
              WHERE X.PO_ORDER_NUM = T.PO_ORDER_NUM
              AND X.ITEM_CD = T.ITEM_CD
              AND X.ITEM_SEQ = T.ITEM_SEQ
              AND ( UPPER(T.ITEM_BL_NUM) LIKE '%'||UPPER(:searchContents)||'%' OR  UPPER(A.BL_NUM) LIKE '%'||UPPER(:searchContents)||'%' )
           )
       <#elseif search == "C"> /* 출고처 */
           AND EXISTS (
                       SELECT C.UPJANGNM AS CUSTNM
                         FROM ST_CUST A,
                              ST_UPJANG B,
                              FMS_UPJANG_V C
                        WHERE B.CUSTCD = A.CUSTCD
                          AND C.UPJANG = B.UPJANG
                          AND B.CC_CD IN (
                                          SELECT A.SET1
                                            FROM SCC_COMMON_CODE A
                                           WHERE A.GROUP_CODE = 'ATTACH_DEPT'
                                             AND A.USE_YN = 'Y'
                                         )
                          AND A.CUSTCD = X.SALSPLCE_CD
                          AND B.USE_YN = 'Y' 
                          AND CUSTNM LIKE '%'||:searchContents||'%'
                      )
       <#elseif search == "D"> /* 품목명 */
           AND X.ITEM_NM LIKE '%'||:searchContents||'%'
       <#elseif search == "E"> /* 귀속부서 */
              AND X.ATTACH_DEPT =(
                               SELECT T.CODE FROM SCC_COMMON_CODE T
                               WHERE  T.GROUP_CODE = 'ATTACH_DEPT'
                               AND T.CODE_NAME LIKE '%'||:searchContents||'%'
                                )
       </#if>
   </#if>
   <#if deliverNum?has_content>
   		AND X.DELIVER_NUM IN (${deliverNum})
   </#if>
   ORDER BY X.DELIVER_NUM DESC
)A
WHERE 1=1
  --AND NVL(A.ORDER_REMAIN_QUANTITY, A.DELIVER_QUANTITY)  > 0	--중량변경건에 대한 수량이 남아있어야 됨
  AND NVL(DECODE(A.UNIT, 'KG', A.ORDER_REMAIN_WGT, A.ORDER_REMAIN_QUANTITY), DECODE(A.UNIT, 'KG', A.DELIVER_WGT, A.DELIVER_QUANTITY) )  > 0	--중량변경건에 대한 수량이 남아있어야 됨    
        ]]></statement>


	<!-- 판매주문등록 리스트를 조회 한다. -->
	<statement name="selectSalesOrderRegList_BACK2" type="select">
		/*+ com.hwfs.ft.fts.dao.SaleOrderDAO.selectSalesOrderRegList */
		<![CDATA[
SELECT /*+ INDEX_FFS(X) */
      '0' AS CHK,
      X.DELIVER_NUM,
     (SELECT SET1 FROM SCC_COMMON_CODE
       WHERE  GROUP_CODE = 'ATTACH_DEPT'
       AND CODE = X.ATTACH_DEPT ) AS ATTACH_DEPT_SAP,   /*SAP귀속부서*/
     (SELECT DISTINCT(T2.CC_CD) CC_CD FROM ST_CUST T, ST_UPJANG T2
       WHERE  T.CUSTCD = T2.CUSTCD
       AND T.CUSTCD=X.SALSPLCE_CD
       AND    T.USE_YN = 'Y'
       AND T2.USE_YN = 'Y' 
       AND T2.CC_CD IN (
                 SELECT A.SET1
                 FROM   SCC_COMMON_CODE A
                 WHERE  A.GROUP_CODE = 'ATTACH_DEPT'
                 AND    A.USE_YN = 'Y'
               )
      ) AS CHG_ATTACH_DEPT_SAP,   /*부서이관시 SAP귀속부서*/
      X.PO_TYPE,
      (SELECT CODE_NAME
         FROM SCC_COMMON_CODE
        WHERE GROUP_CODE = 'PO_TYPE'
          AND CODE = X.PO_TYPE) AS PO_TYPE_NM,
      CASE WHEN X.PO_TYPE= '10' THEN    --수입(KRW)
           A.BL_NUM
       ELSE
          (
            SELECT T.ITEM_BL_NUM FROM PO_ORDER_ITEM_DETAIL T
            WHERE X.PO_ORDER_NUM = T.PO_ORDER_NUM
            AND X.ITEM_CD = T.ITEM_CD
            AND X.ITEM_SEQ = T.ITEM_SEQ
          )
     END AS BL_NUM,
     X.PO_ORDER_NUM,
     X.ITEM_CD,
     X.ITEM_NM||' '||Y.ITEM_SIZE AS ITEM_NM,

     X.ITEM_SEQ,
     X.ATTACH_DEPT,

     A.SALE_TYPE,
    (SELECT CODE_NAME
      FROM SCC_COMMON_CODE
     WHERE GROUP_CODE = 'SALE_TYPE'
       AND CODE = A.SALE_TYPE) AS SALE_TYPE_NM,

    (SELECT CODE_NAME
       FROM SCC_COMMON_CODE
      WHERE GROUP_CODE = 'ATTACH_DEPT'
        AND CODE = X.ATTACH_DEPT) AS ATTACH_DEPT_NM,
              X.SALSPLCE_CD,
              X.SALSPLCE_NM,
    A.PO_ORDER_DATE,
    A.SALE_EDATE,

    B.DRAFTER_ID,
    (SELECT T.NM_KOR
       FROM HR_PERSONAL T, SCC_CC T2
      WHERE T2.CC_CD = T.CC_CD
        AND B.DRAFTER_ID = T.SABUN) DRAFTER_NM,



     X.WH_CD,
     X.WH_NM,
     X.HS_CD,
     X.FIRST_DELIVER_DATE,
     X.CURRENT_WH_DELIVER_DATE,
     X.UNIT,
     Y.KG_CONVERT_RATE,
     (SELECT SET1 FROM   SCC_COMMON_CODE A WHERE  A.GROUP_CODE = 'ITEM_UNIT' AND    A.USE_YN = 'Y' AND A.CODE = X.UNIT ) SET1,
     X.DELIVER_UPRICE_KRW,
     X.DELIVER_QUANTITY,
     X.DELIVER_WGT,
     X.RELEASE_WAIT_QUANTITY,
     X.RELEASE_WAIT_WGT

    ,
     X.RELEASE_END_QUANTITY,
     X.RELEASE_END_WGT

    ,
     X.RMA_QUANTITY,
     X.RMA_WGT,
     X.WH_MOVE_QUANTITY,
     X.WH_MOVE_WGT

    ,
     X.INVENTORY_CONTROL_QUANTITY,
     X.INVENTORY_CONTROL_WGT

    ,
     (NVL(X.RELEASE_WAIT_QUANTITY, 0) +
     NVL(X.RELEASE_END_QUANTITY, 0) + NVL(X.RMA_QUANTITY, 0)

     + NVL(X.WH_MOVE_QUANTITY, 0)) AS GI_RELEASE_QUANTITY /* 기출고수량 : 출고대기수량+출고완료수량+반품수량+창고이동수량 */,
     (NVL(X.RELEASE_WAIT_WGT, 0) + NVL(X.RELEASE_END_WGT, 0) +
     NVL(X.RMA_WGT, 0) + NVL(X.WH_MOVE_WGT, 0)) AS GI_RELEASE_WGT /* 기출고중량 : 출고대기중량+출고완료중량+반품중량+창고이동중량 */

    ,
     CASE
         WHEN X.ORDER_REMAIN_QUANTITY = NULL THEN /*주문잔여수량*/
          X.DELIVER_QUANTITY
         ELSE
          NVL(X.DELIVER_QUANTITY, 0) -
          NVL(X.ORDER_REMAIN_QUANTITY, 0) -
          NVL(X.RELEASE_WAIT_QUANTITY, 0) -
          NVL(X.RELEASE_END_QUANTITY, 0) - NVL(X.RMA_QUANTITY, 0) -
          NVL(X.WH_MOVE_QUANTITY, 0) -
          NVL(X.INVENTORY_CONTROL_QUANTITY, 0)
          + NVL(C.CANCEL_QUANTITY,0)
     END ORDER_REMAIN_QUANTITY

    ,
     CASE
         WHEN X.ORDER_REMAIN_WGT = NULL THEN
          X.DELIVER_WGT
         ELSE
          NVL(X.DELIVER_WGT, 0) - NVL(X.ORDER_REMAIN_WGT, 0) -
          NVL(X.RELEASE_WAIT_WGT, 0) - NVL(X.RELEASE_END_WGT, 0) -
          NVL(X.RMA_WGT, 0) - NVL(X.WH_MOVE_WGT, 0) -
          NVL(X.INVENTORY_CONTROL_WGT, 0)
          + NVL(C.CANCEL_WGT,0)
     END ORDER_REMAIN_WGT

    ,
     NVL(X.DELIVER_QUANTITY, 0) - NVL(X.ORDER_REMAIN_QUANTITY, 0) CNT_ORDER_REMAIN_QUANTITY /*주문잔여수량*/,
     NVL(X.DELIVER_WGT, 0) - NVL(X.ORDER_REMAIN_WGT, 0) CNT_ORDER_REMAIN_WGT /*주문잔여중량*/

    ,
     NVL(X.DELIVER_QUANTITY, 0) -
     (NVL(X.RELEASE_WAIT_QUANTITY, 0) +
      NVL(X.RELEASE_END_QUANTITY, 0) + NVL(X.RMA_QUANTITY, 0) +
      NVL(X.WH_MOVE_QUANTITY, 0) +
      NVL(X.INVENTORY_CONTROL_QUANTITY, 0)) RELEASE_POSS_QUANTITY /*출고가능수량*/

    ,
     NVL(X.DELIVER_WGT, 0) -
     (NVL(X.RELEASE_WAIT_WGT, 0) + NVL(X.RELEASE_END_WGT, 0) +
      NVL(X.RMA_WGT, 0) + NVL(X.WH_MOVE_WGT, 0) +
      NVL(X.INVENTORY_CONTROL_WGT, 0)) RELEASE_POSS_WGT

    ,X.ENTRY_NUM
    ,X.ENTRY_ITEM_SEQ

          ,CASE WHEN B.PO_KIND='A' THEN   --도매
              B.ATTACH_DEPT
           ELSE --협력사판매
              CASE WHEN A.ATTACH_DEPT='10' THEN  --축산
                   '15' --축산협력사판매
              WHEN A.ATTACH_DEPT='20' THEN --수산
                   '25' --수산협력사판매
              WHEN A.ATTACH_DEPT='30' THEN --농산
                   '35' --농산협력사판매
              END
           END AS SALE_AGED  /*판매경로*/

       ,TO_CHAR(SYSDATE, 'YYYYMMDD') AS RELEASE_DATE            /*출고요청일자*/
       ,TO_CHAR(SYSDATE, 'YYYYMMDD') AS ORDER_DATE                /*주문일자*/

       ,B.DRAFTER_ID AS SALE_PRCG_ID   /*판매담당자ID*/
       ,(SELECT T.NM_KOR
          FROM HR_PERSONAL T, SCC_CC T2
         WHERE T2.CC_CD = T.CC_CD
           AND B.DRAFTER_ID  = T.SABUN) SALE_PRCG_NM   /*판매담당자*/

       ,B.SALE_TYPE AS SALE_ORDER_TYPE

       ,(SELECT CODE_NAME
          FROM SCC_COMMON_CODE
         WHERE GROUP_CODE = 'SALE_ORDER_TYPE'
           AND CODE = B.SALE_TYPE) AS SALE_ORDER_TYPE_NM
       ,NVL((SELECT T.PROPOSAL_SEQ FROM PO_PROPOSAL_ITEM_DTL T WHERE T.PO_PROPOSAL_NUM=X.PO_PROPOSAL_NUM AND T.ITEM_CD = X.ITEM_CD AND T.PROPOSAL_SEQ = X.ITEM_SEQ),0) PROPOSAL_SEQ
      FROM INVENTORY_MGMT_DELIVER X
            ,HLDC_PO_ITEM_MST Y
            ,PO_ORDER_MST A
            ,PO_PROPOSAL_MST B
            ,(SELECT DELIVER_NUM, SUM(T.CANCEL_QUANTITY) AS CANCEL_QUANTITY , SUM(T.CANCEL_WGT) AS CANCEL_WGT FROM SALE_ORDER_ITEM_MGMT T GROUP BY T.DELIVER_NUM)  C
     WHERE 1 = 1
       AND X.ITEM_CD = Y.ITEM_CODE(+)
       AND X.PO_ORDER_NUM = A.PO_ORDER_NUM
       AND A.PO_PROPOSAL_NUM = B.PO_PROPOSAL_NUM
       AND X.DELIVER_STATUS <> '10' --가입고 제외)
       AND X.DELIVER_NUM = C.DELIVER_NUM(+)
       AND EXISTS (  --미착 수수료 상품화된내역 있어야 판매가능
                     SELECT 1 FROM DELIVERITEM_OTHER_AMT_DIV T, FT_SAP_INTERFACE T2
                     WHERE X.DELIVER_NUM = T.DELIVER_NUM
                     AND T.ALT_FISCAL_SLIP_NUM = T2.SLIP_NUM
                     --AND T.NONARRIV_ALT_YN ='Y'
                     AND T.ALT_FISCAL_SLIP_NUM IS NOT NULL
                     AND T2.SLIP_STATUS IN ('V','P')
                     UNION ALL
                     SELECT 1 FROM PO_ORDER_MST T
                     WHERE T.PO_ORDER_NUM = X.PO_ORDER_NUM
                     AND X.PO_TYPE='20'                   --내수포함

                  )
       AND EXISTS (
                     --내수,수입 상품화 내역 있어야 판매가능
                     SELECT 1 FROM GDSPAYM_MST T, FT_SAP_INTERFACE T2
                     WHERE X.PO_ORDER_NUM = T.PO_ORDER_NUM
                     AND T.ALT_FISCAL_SLIP_NUM = T2.SLIP_NUM
                     --AND T.NONARRIV_SLIP_CREATION_YN ='Y'
                     AND T.ALT_FISCAL_SLIP_NUM IS NOT NULL
                     AND T2.SLIP_STATUS IN ('V','P')
                     UNION ALL
                     SELECT 1 FROM PO_ORDER_MST T
                     WHERE T.PO_ORDER_NUM = X.PO_ORDER_NUM
                     AND X.PO_TYPE='20'                   --내수포함
                  )
                  /*
   AND (
         (NVL(X.ORDER_REMAIN_QUANTITY, X.DELIVER_QUANTITY) ) + NVL(C.CANCEL_QUANTITY,0)
        > 0 OR
         (NVL(X.ORDER_REMAIN_WGT, X.DELIVER_WGT) )  + NVL(C.CANCEL_WGT,0)
        > 0)
        */
   <#if search?has_content && searchContents?has_content>
       <#if search == "A"> /* PO No */
           AND X.PO_ORDER_NUM LIKE '%'||:searchContents||'%'
       <#elseif search == "B"> /* BL No */
           AND A.BL_NUM LIKE '%'||:searchContents||'%'
       <#elseif search == "C"> /* 출고처 */
           AND EXISTS (
                       SELECT C.UPJANGNM AS CUSTNM
                         FROM ST_CUST A,
                              ST_UPJANG B,
                              FMS_UPJANG_V C
                        WHERE B.CUSTCD = A.CUSTCD
                          AND C.UPJANG = B.UPJANG
                          AND B.CC_CD IN (
                                          SELECT A.SET1
                                            FROM SCC_COMMON_CODE A
                                           WHERE A.GROUP_CODE = 'ATTACH_DEPT'
                                             AND A.USE_YN = 'Y'
                                         )
                          AND A.CUSTCD = X.SALSPLCE_CD
                          AND B.USE_YN = 'Y' 
                          AND CUSTNM LIKE '%'||:searchContents||'%'
                      )
       <#elseif search == "D"> /* 품목명 */
           AND X.ITEM_NM LIKE '%'||:searchContents||'%'
       </#if>
   </#if>
   ORDER BY X.DELIVER_NUM DESC
        ]]>
	</statement>

	<!-- 판매주문등록 리스트를 조회 한다. -->
	<statement name="selectSalesOrderRegList_BACK" type="select">
		/*+ com.hwfs.ft.fts.dao.SaleOrderDAO.selectSalesOrderRegList */
		<![CDATA[
SELECT '0' AS CHK,
      (SELECT SET1 FROM SCC_COMMON_CODE
        WHERE  GROUP_CODE = 'ATTACH_DEPT'
        AND CODE = A.ATTACH_DEPT ) AS ATTACH_DEPT_SAP,   /*SAP귀속부서*/

      (SELECT DISTINCT(T2.CC_CD) CC_CD FROM ST_CUST T, ST_UPJANG T2
        WHERE  T.CUSTCD = T2.CUSTCD
        AND T.CUSTCD=A.SALSPLCE_CD
        AND    T.USE_YN = 'Y'
        AND T2.USE_YN = 'Y' 
        AND T2.CC_CD IN (
                  SELECT A.SET1
                  FROM   SCC_COMMON_CODE A
                  WHERE  A.GROUP_CODE = 'ATTACH_DEPT'
                  AND    A.USE_YN = 'Y'
                )
       ) AS CHG_ATTACH_DEPT_SAP,	 /*부서이관시 SAP귀속부서*/


       A.PO_ORDER_NUM,
       E.SALE_ORDER_NUM,
       CASE WHEN C.PO_TYPE= '10' THEN    --수입(KRW)
            A.BL_NUM
        ELSE
           (
             SELECT T.ITEM_BL_NUM FROM PO_ORDER_ITEM_DETAIL T
             WHERE B.PO_ORDER_NUM = T.PO_ORDER_NUM
             AND B.ITEM_CD = T.ITEM_CD
             AND B.ITEM_SEQ = T.ITEM_SEQ
           )
       END AS BL_NUM,
       A.SALE_TYPE,
       (SELECT CODE_NAME
          FROM SCC_COMMON_CODE
         WHERE GROUP_CODE = 'SALE_TYPE'
           AND CODE = A.SALE_TYPE) AS SALE_TYPE_NM,
       (SELECT CODE_NAME
          FROM SCC_COMMON_CODE
         WHERE GROUP_CODE = 'ATTACH_DEPT'
           AND CODE = A.ATTACH_DEPT) AS ATTACH_DEPT_NM,
       C.PO_TYPE,
       (SELECT CODE_NAME
          FROM SCC_COMMON_CODE
         WHERE GROUP_CODE = 'PO_TYPE'
           AND CODE = C.PO_TYPE) AS PO_TYPE_NM,
       A.SALSPLCE_CD,
       A.SALSPLCE_NM,
       A.PO_ORDER_DATE,
       A.SALE_EDATE,
       C.DRAFTER_ID,
       (SELECT T.NM_KOR
          FROM HR_PERSONAL T, SCC_CC T2
         WHERE T2.CC_CD = T.CC_CD
           AND C.DRAFTER_ID = T.SABUN) DRAFTER_NM,

       B.DELIVER_NUM,

       B.ITEM_CD,
       B.ITEM_NM,
       B.ITEM_SEQ,
       B.ATTACH_DEPT,

       B.WH_CD,
       B.WH_NM,
       B.HS_CD,
       B.FIRST_DELIVER_DATE,
       B.CURRENT_WH_DELIVER_DATE,
       B.UNIT,
       B.KG_CONVERT_RATE,
       B.SET1,
       B.DELIVER_UPRICE_KRW,
       B.DELIVER_QUANTITY,
       B.DELIVER_WGT,
       B.RELEASE_WAIT_QUANTITY,
       B.RELEASE_WAIT_WGT,

       B.RELEASE_END_QUANTITY,
       B.RELEASE_END_WGT,

       B.RMA_QUANTITY,
       B.RMA_WGT,
       B.WH_MOVE_QUANTITY,
       B.WH_MOVE_WGT,

       B.INVENTORY_CONTROL_QUANTITY,
       B.INVENTORY_CONTROL_WGT,

       B.GI_RELEASE_WGT, /* 기출고중량 : 출고대기중량+출고완료중량+반품중량+창고이동중량 */

       (B.ORDER_REMAIN_QUANTITY + NVL(E.CANCEL_QUANTITY,0)) AS ORDER_REMAIN_QUANTITY,
       (B.ORDER_REMAIN_WGT + NVL(E.CANCEL_WGT,0)) AS ORDER_REMAIN_WGT,

       B.CNT_ORDER_REMAIN_QUANTITY, /*주문잔여수량*/
       B.CNT_ORDER_REMAIN_WGT, /*주문잔여중량*/

       B.RELEASE_POSS_QUANTITY, /*출고가능수량*/
       B.RELEASE_POSS_WGT,

       B.ENTRY_NUM,
       B.ENTRY_ITEM_SEQ,

       F.RELEASE_STATUS_CD,
       (SELECT CODE_NAME
          FROM SCC_COMMON_CODE
         WHERE GROUP_CODE = 'RELEASE_STATUS_CD'
           AND CODE = F.RELEASE_STATUS_CD) AS RELEASE_STATUS_NM,
       NVL(F.SALE_PRCG_ID, C.DRAFTER_ID) AS SALE_PRCG_ID,   /*판매담당자ID*/
       (SELECT T.NM_KOR
          FROM HR_PERSONAL T, SCC_CC T2
         WHERE T2.CC_CD = T.CC_CD
           AND NVL(F.SALE_PRCG_ID, C.DRAFTER_ID) = T.SABUN) SALE_PRCG_NM,   /*판매담당자*/
       (SELECT C.UPJANGNM AS CUSTNM
          FROM ST_CUST A, ST_UPJANG B, FMS_UPJANG_V C
         WHERE B.CUSTCD = A.CUSTCD
           AND C.UPJANG = B.UPJANG
           AND B.USE_YN = 'Y' 
           AND B.CC_CD IN (SELECT A.SET1
                             FROM SCC_COMMON_CODE A
                            WHERE A.GROUP_CODE = 'ATTACH_DEPT'
                              AND A.USE_YN = 'Y')
           AND A.CUSTCD = F.CUST_CD) CUST_NM,
       F.RELEASE_NUM,
       F.RELEASE_QUANTITY,
       F.RELEASE_WGT,
       F.SALE_UPRICE,              /*판매단가*/
       E.BUY_CST,                  /*매입원가*/
       F.SALE_AMT,                 /*판매금액*/
       --D.SALE_AGED,

       CASE WHEN D.SALE_AGED IS NULL THEN
           CASE WHEN C.PO_KIND='A' THEN   --도매
              C.ATTACH_DEPT
           ELSE --협력사판매
              CASE WHEN C.ATTACH_DEPT='10' THEN  --축산
                   '15' --축산협력사판매
              WHEN C.ATTACH_DEPT='20' THEN --수산
                   '25' --수산협력사판매
              WHEN C.ATTACH_DEPT='30' THEN --농산
                   '35' --농산협력사판매
              END
           END
       ELSE
           D.SALE_AGED
       END AS SALE_AGED,	/*판매경로*/

       NVL(D.RELEASE_DATE, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS RELEASE_DATE,            /*출고요청일자*/
       NVL(D.ORDER_DATE, TO_CHAR(SYSDATE, 'YYYYMMDD')) AS ORDER_DATE,                /*주문일자*/
       NVL(D.SALE_ORDER_TYPE, C.SALE_TYPE) AS SALE_ORDER_TYPE,
       (SELECT CODE_NAME
          FROM SCC_COMMON_CODE
         WHERE GROUP_CODE = 'SALE_ORDER_TYPE'
           AND CODE = NVL(D.SALE_ORDER_TYPE, C.SALE_TYPE)) AS SALE_ORDER_TYPE_NM,
       NVL((SELECT T.PROPOSAL_SEQ FROM PO_PROPOSAL_ITEM_DTL T WHERE T.PO_PROPOSAL_NUM=C.PO_PROPOSAL_NUM AND T.ITEM_CD = B.ITEM_CD AND T.PROPOSAL_SEQ = B.ITEM_SEQ),0) PROPOSAL_SEQ
  FROM PO_ORDER_MST A,
       (SELECT Y.*
          FROM (SELECT /*+ INDEX_FFS(X) */
                 X.DELIVER_NUM,
                 X.PO_ORDER_NUM,
                 X.ITEM_CD,
                 X.ITEM_NM||' '||Y.ITEM_SIZE AS ITEM_NM,

                 X.ITEM_SEQ,
                 X.ATTACH_DEPT

                ,
                 X.SALE_TYPE,
                 X.SALSPLCE_CD,
                 X.SALSPLCE_NM

                ,
                 X.WH_CD,
                 X.WH_NM,
                 X.HS_CD,
                 X.FIRST_DELIVER_DATE,
                 X.CURRENT_WH_DELIVER_DATE,
                 X.UNIT,
                 Y.KG_CONVERT_RATE,
                 (SELECT SET1 FROM   SCC_COMMON_CODE A WHERE  A.GROUP_CODE = 'ITEM_UNIT' AND    A.USE_YN = 'Y' AND A.CODE = X.UNIT ) SET1,
                 X.DELIVER_UPRICE_KRW,
                 X.DELIVER_QUANTITY,
                 X.DELIVER_WGT,
                 X.RELEASE_WAIT_QUANTITY,
                 X.RELEASE_WAIT_WGT

                ,
                 X.RELEASE_END_QUANTITY,
                 X.RELEASE_END_WGT

                ,
                 X.RMA_QUANTITY,
                 X.RMA_WGT,
                 X.WH_MOVE_QUANTITY,
                 X.WH_MOVE_WGT

                ,
                 X.INVENTORY_CONTROL_QUANTITY,
                 X.INVENTORY_CONTROL_WGT

                ,
                 (NVL(X.RELEASE_WAIT_QUANTITY, 0) +
                 NVL(X.RELEASE_END_QUANTITY, 0) + NVL(X.RMA_QUANTITY, 0)

                 + NVL(X.WH_MOVE_QUANTITY, 0)) AS GI_RELEASE_QUANTITY /* 기출고수량 : 출고대기수량+출고완료수량+반품수량+창고이동수량 */,
                 (NVL(X.RELEASE_WAIT_WGT, 0) + NVL(X.RELEASE_END_WGT, 0) +
                 NVL(X.RMA_WGT, 0) + NVL(X.WH_MOVE_WGT, 0)) AS GI_RELEASE_WGT /* 기출고중량 : 출고대기중량+출고완료중량+반품중량+창고이동중량 */

                ,
                 CASE
                     WHEN X.ORDER_REMAIN_QUANTITY = NULL THEN /*주문잔여수량*/
                      X.DELIVER_QUANTITY
                     ELSE
                      NVL(X.DELIVER_QUANTITY, 0) -
                      NVL(X.ORDER_REMAIN_QUANTITY, 0) -
                      NVL(X.RELEASE_WAIT_QUANTITY, 0) -
                      NVL(X.RELEASE_END_QUANTITY, 0) - NVL(X.RMA_QUANTITY, 0) -
                      NVL(X.WH_MOVE_QUANTITY, 0) -
                      NVL(X.INVENTORY_CONTROL_QUANTITY, 0)
                 END ORDER_REMAIN_QUANTITY

                ,
                 CASE
                     WHEN X.ORDER_REMAIN_WGT = NULL THEN
                      X.DELIVER_WGT
                     ELSE
                      NVL(X.DELIVER_WGT, 0) - NVL(X.ORDER_REMAIN_WGT, 0) -
                      NVL(X.RELEASE_WAIT_WGT, 0) - NVL(X.RELEASE_END_WGT, 0) -
                      NVL(X.RMA_WGT, 0) - NVL(X.WH_MOVE_WGT, 0) -
                      NVL(X.INVENTORY_CONTROL_WGT, 0)
                 END ORDER_REMAIN_WGT

                ,
                 NVL(X.DELIVER_QUANTITY, 0) - NVL(X.ORDER_REMAIN_QUANTITY, 0) CNT_ORDER_REMAIN_QUANTITY /*주문잔여수량*/,
                 NVL(X.DELIVER_WGT, 0) - NVL(X.ORDER_REMAIN_WGT, 0) CNT_ORDER_REMAIN_WGT /*주문잔여중량*/

                ,
                 NVL(X.DELIVER_QUANTITY, 0) -
                 (NVL(X.RELEASE_WAIT_QUANTITY, 0) +
                  NVL(X.RELEASE_END_QUANTITY, 0) + NVL(X.RMA_QUANTITY, 0) +
                  NVL(X.WH_MOVE_QUANTITY, 0) +
                  NVL(X.INVENTORY_CONTROL_QUANTITY, 0)) RELEASE_POSS_QUANTITY /*출고가능수량*/

                ,
                 NVL(X.DELIVER_WGT, 0) -
                 (NVL(X.RELEASE_WAIT_WGT, 0) + NVL(X.RELEASE_END_WGT, 0) +
                  NVL(X.RMA_WGT, 0) + NVL(X.WH_MOVE_WGT, 0) +
                  NVL(X.INVENTORY_CONTROL_WGT, 0)) RELEASE_POSS_WGT

                ,
                 X.ENTRY_NUM,
                 X.ENTRY_ITEM_SEQ
                  FROM INVENTORY_MGMT_DELIVER X
                        ,HLDC_PO_ITEM_MST Y
                 WHERE 1 = 1
                   AND X.ITEM_CD = Y.ITEM_CODE(+)
                   AND X.DELIVER_STATUS <> '10' --가입고 제외)
        /*
                   AND EXISTS (  --미착 수수료 상품화된내역 있어야 판매가능
                                 SELECT 1 FROM DELIVERITEM_OTHER_AMT_DIV T
                                 WHERE X.DELIVER_NUM = T.DELIVER_NUM
                                 --AND T.NONARRIV_ALT_YN ='Y'
                                 AND T.ALT_FISCAL_SLIP_NUM IS NOT NULL
                                 UNION
                                 --내수,수입 상품화 내역 있어야 판매가능
                                 SELECT 1 FROM GDSPAYM_MST T
                                 WHERE X.PO_ORDER_NUM = T.PO_ORDER_NUM
                                 --AND T.NONARRIV_SLIP_CREATION_YN ='Y'
                                 AND T.ALT_FISCAL_SLIP_NUM IS NOT NULL
                              )
        */

                   AND EXISTS (  --미착 수수료 상품화된내역 있어야 판매가능
                                 SELECT 1 FROM DELIVERITEM_OTHER_AMT_DIV T, FT_SAP_INTERFACE T2
                                 WHERE X.DELIVER_NUM = T.DELIVER_NUM
                                 AND T.ALT_FISCAL_SLIP_NUM = T2.SLIP_NUM
                                 --AND T.NONARRIV_ALT_YN ='Y'
                                 AND T.ALT_FISCAL_SLIP_NUM IS NOT NULL
                                 AND T2.SLIP_STATUS IN ('V','P')
                                 UNION ALL
                                 SELECT 1 FROM PO_ORDER_MST T
                                 WHERE T.PO_ORDER_NUM = X.PO_ORDER_NUM
                                 AND X.PO_TYPE='20'                   --내수포함

                              )
                   AND EXISTS (
                                 --내수,수입 상품화 내역 있어야 판매가능
                                 SELECT 1 FROM GDSPAYM_MST T, FT_SAP_INTERFACE T2
                                 WHERE X.PO_ORDER_NUM = T.PO_ORDER_NUM
                                 AND T.ALT_FISCAL_SLIP_NUM = T2.SLIP_NUM
                                 --AND T.NONARRIV_SLIP_CREATION_YN ='Y'
                                 AND T.ALT_FISCAL_SLIP_NUM IS NOT NULL
                                 AND T2.SLIP_STATUS IN ('V','P')
                                 UNION ALL
                                 SELECT 1 FROM PO_ORDER_MST T
                                 WHERE T.PO_ORDER_NUM = X.PO_ORDER_NUM
                                 AND X.PO_TYPE='20'                   --내수포함
                              )

                ) Y
         WHERE 1 = 1
           --AND (Y.ORDER_REMAIN_QUANTITY > 0 OR Y.ORDER_REMAIN_WGT > 0)
       ) B,
       PO_PROPOSAL_MST C,
       SALE_ORDER D,
       SALE_ORDER_ITEM_MGMT E,
       RELEASE_ITEM_MGMT F
 WHERE A.PO_ORDER_NUM = B.PO_ORDER_NUM
   AND A.PO_PROPOSAL_NUM = C.PO_PROPOSAL_NUM
   AND B.DELIVER_NUM = E.DELIVER_NUM(+)
   AND D.SALE_ORDER_NUM(+) = E.SALE_ORDER_NUM
   AND B.PO_ORDER_NUM = E.PO_ORDER_NUM(+)
   AND E.SALE_ORDER_NUM = F.SALE_ORDER_NUM(+)
   AND E.SALE_ORDER_NUM_SEQ = F.SALE_ORDER_NUM_SEQ(+)
   --AND NVL(F.RELEASE_STATUS_CD, '10') <> '50'
   AND (
         (B.ORDER_REMAIN_QUANTITY + NVL(E.CANCEL_QUANTITY,0))
        > 0 OR
         (B.ORDER_REMAIN_WGT + NVL(E.CANCEL_WGT,0))
        > 0)

   <#if search?has_content && searchContents?has_content>
       <#if search == "A"> /* PO No */
           AND A.PO_ORDER_NUM LIKE '%'||:searchContents||'%'
       <#elseif search == "B"> /* BL No */
           AND A.BL_NUM LIKE '%'||:searchContents||'%'
       <#elseif search == "C"> /* 출고처 */
           AND EXISTS (
                       SELECT C.UPJANGNM AS CUSTNM
                         FROM ST_CUST A,
                              ST_UPJANG B,
                              FMS_UPJANG_V C
                        WHERE B.CUSTCD = A.CUSTCD
                          AND C.UPJANG = B.UPJANG
                          AND B.CC_CD IN (
                                          SELECT A.SET1
                                            FROM SCC_COMMON_CODE A
                                           WHERE A.GROUP_CODE = 'ATTACH_DEPT'
                                             AND A.USE_YN = 'Y'
                                         )
                          AND A.CUSTCD = F.CUST_CD
                          AND B.USE_YN = 'Y' 
                          AND CUSTNM LIKE '%'||:searchContents||'%'
                      )
       <#elseif search == "D"> /* 품목명 */
           AND B.ITEM_NM LIKE '%'||:searchContents||'%'
       </#if>
   </#if>

   ORDER BY  B.DELIVER_NUM DESC, A.PO_ORDER_NUM DESC
        ]]>
	</statement>

	<!-- 주문 취소를 삭제한다. -->
	<statement name="deleteSaleOrderCancelLog" type="delete">
		/*+ com.hwfs.ft.fts.dao.SaleOrderDAO.deleteSaleOrderCancelLog */
		<![CDATA[
DELETE SALE_ORDER_CANCEL_LOG
 WHERE SALE_ORDER_NUM = :saleOrderNum
   AND SALE_ORDER_NUM_SEQ = :saleOrderNumSeq
        ]]>
	</statement>

</hqml>
