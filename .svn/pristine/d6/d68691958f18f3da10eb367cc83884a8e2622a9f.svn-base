<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="ft.ftp.poOrderOtherAmtDAO">
    <desc>구매주문 부대비 관리 HQML Query</desc>

    <!-- 구매주문 부대비 관리 목록을 조회한다. -->
    <statement name="selectList" type="select">
        /*+ com.hwfs.ft.ftp.dao.PoOrderOtherAmtDAO.selectList */
        <![CDATA[
        SELECT PO_ORDER_NUM,
               OTHER_AMT_SEQ,
               COMM_CLASS,
               COMM_TYPE,
               SLIP_PUBLISH_DATE,
               PAY_SCHD_DATE,
               REAL_PAYMENT_PLCE,
               BASI_KIND,
               BASI_NUM,
               COMM_AMT,
               DIV_ACCUM_AMT,
               ATTACH_DEPT,
               TAX_BILL_NUM,
               TAX_SHET_ITEMNM,
               JOURNALZ_ACCT,
               FISCAL_SLIP_NUM,
               FISCAL_SLIPC_DATE,
               SLIP_STATUS,
               DECODE(NONARRIV_SLIP_CREATION_YN, 'Y', 1, 0) AS NONARRIV_SLIP_CREATION_YN,
               ETC_PREPAYAMT_MGMT_NUM,
               CUSER,
               CDATE,
               UUSER,
               UDATE
        FROM   PO_ORDER_OTHER_AMT
        WHERE  PO_ORDER_NUM = :poOrderNum
        <#if otherAmtSeq?has_content>
              AND OTHER_AMT_SEQ = :otherAmtSeq
        </#if>
        <#if commClass?has_content>
              AND COMM_CLASS = :commClass
        </#if>

        ]]>
    </statement>

    <!-- 구매주문 부대비 관리(을)를 등록한다. -->
    <statement name="insert" type="insert">
        /*+ com.hwfs.ft.ftp.dao.PoOrderOtherAmtDAO.insert */
        <![CDATA[
            INSERT INTO PO_ORDER_OTHER_AMT
            (
             PO_ORDER_NUM,
             OTHER_AMT_SEQ,
             COMM_CLASS,
             COMM_TYPE,
             SLIP_PUBLISH_DATE,
             PAY_SCHD_DATE,
             REAL_PAYMENT_PLCE,
             BASI_KIND,
             BASI_NUM,
             COMM_AMT,
             DIV_ACCUM_AMT,
             ATTACH_DEPT,
             TAX_BILL_NUM,
             TAX_SHET_ITEMNM,
             JOURNALZ_ACCT,
             FISCAL_SLIP_NUM,
             FISCAL_SLIPC_DATE,
             SLIP_STATUS,
             NONARRIV_SLIP_CREATION_YN,
             ETC_PREPAYAMT_MGMT_NUM,
             CUSER,
             CDATE,
             UUSER,
             UDATE,
             REMARKS,
             VAT_NEWHGHT_UPJANG,
             ELCTN_TAX_BILL_YN,
             BILL_PUBLISHDD,
             SLIP_PUBLSUPPLY_PRICE,
             SUPPLY_PRICE,
             VAT_AMT,
             TAX_CD,
             SLIP_NUM,
             BU_CD,
             FISCAL_YEAR,
             PROC_DATE,
             RESULT_MSG,
             SLIP_PUBLISHER,
             ORG_FISCAL_SLIP_NUM,
             ADJUST_SEQ,
             PREPAY_PO_ORDER_NUM,
             ALT_SLIP_CLASS,
             SNGLFOOTLST_NM_YN,
             BANK_ACCT_NO,
             BANK_ACCT_OWNR,
             BANK_CD,
             BANK_TYPE,
             SUSPENSE_NUM,
             ALT_SEQ
            ) VALUES (
             :poOrderNum,
             (SELECT NVL(MAX(OTHER_AMT_SEQ),0) +1 FROM PO_ORDER_OTHER_AMT WHERE PO_ORDER_NUM=:poOrderNum),
            <#if commClass?exists> :commClass, <#else> null, </#if>
            <#if commType?exists> :commType, <#else> null, </#if>
            <#if slipPublishDate?exists> :slipPublishDate, <#else> null, </#if>
            <#if paySchdDate?exists> :paySchdDate, <#else> null, </#if>
            <#if realPaymentPlce?exists> :realPaymentPlce, <#else> null, </#if>
            <#if basiKind?exists> :basiKind, <#else> null, </#if>
            <#if basiNum?exists> :basiNum, <#else> null, </#if>
            <#if commAmt?exists> :commAmt, <#else> null, </#if>
            <#if divAccumAmt?exists> :divAccumAmt, <#else> null, </#if>
            <#if attachDept?exists> :attachDept, <#else> null, </#if>
            <#if taxBillNum?exists> :taxBillNum, <#else> null, </#if>
            <#if taxShetItemnm?exists> :taxShetItemnm, <#else> null, </#if>
            <#if journalzAcct?exists> :journalzAcct, <#else> null, </#if>
            <#if fiscalSlipNum?exists> :fiscalSlipNum, <#else> null, </#if>
            <#if fiscalSlipcDate?exists> :fiscalSlipcDate, <#else> null, </#if>
            <#if slipStatus?exists> :slipStatus, <#else> null, </#if>
            <#if nonarrivSlipCreationYn?exists> :nonarrivSlipCreationYn, <#else> null, </#if>
            <#if etcPrepayamtMgmtNum?exists> :etcPrepayamtMgmtNum, <#else> null, </#if>
             :loginSabun,
             SYSDATE,
             :loginSabun,
             SYSDATE,
            <#if remarks?exists> :remarks, <#else> null, </#if>
            <#if vatNewhghtUpjang?exists> :vatNewhghtUpjang, <#else> null, </#if>
            <#if taxCd?exists>
                <#if taxCd == "50">	/* 전자일반 매입	 */
                    'Y',
                <#elseif taxCd == "60">	/* 전자영세 일반 매입 */
                    'Y',
                <#elseif taxCd == "70">	/* 전자불공제 면세사업 */
                    'Y',
                <#elseif taxCd == "91">	/* 전자면세 일반계산서 */
                    'Y',
                <#else>
                    'N',
                </#if>
            <#else>
                'N',
            </#if>
            <#if billPublishdd?exists> :billPublishdd, <#else> null, </#if>
            <#if slipPublsupplyPrice?exists> :slipPublsupplyPrice, <#else> null, </#if>
            <#if supplyPrice?exists> :supplyPrice, <#else> null, </#if>
            <#if vatAmt?exists> :vatAmt, <#else> null, </#if>
            <#if taxCd?exists> :taxCd, <#else> null, </#if>
            <#if slipNum?exists> :slipNum, <#else> null, </#if>
            <#if buCd?exists> :buCd, <#else> null, </#if>
            <#if fiscalYear?exists> :fiscalYear, <#else> null, </#if>
            <#if procDate?exists> :procDate, <#else> null, </#if>
            <#if resultMsg?exists> :resultMsg, <#else> null, </#if>
            <#if slipPublisher?exists> :slipPublisher, <#else> null, </#if>
            <#if orgFiscalSlipNum?exists> :orgFiscalSlipNum, <#else> null, </#if>
            <#if adjustSeq?exists> :adjustSeq, <#else> null, </#if>
            <#if prepayPoOrderNum?exists> :prepayPoOrderNum, <#else> null, </#if>
            <#if altSlipClass?exists> :altSlipClass, <#else> null, </#if>
            <#if snglfootlstNmYn?exists> DECODE(:snglfootlstNmYn, '1', 'Y', 'N'), <#else> null, </#if>
            <#if bankAcctNo?exists> SCC_CRYPTO.ENC_FUN(:bankAcctNo), <#else> null, </#if>
            <#if bankAcctOwnr?exists> :bankAcctOwnr, <#else> null, </#if>
            <#if bankCd?exists> :bankCd, <#else> null, </#if>
            <#if bankType?exists> :bankType, <#else> null, </#if>
            <#if suspenseNum?exists> :suspenseNum, <#else> null, </#if>
			<#if altSeq?exists> :altSeq <#else> null </#if>
            )

        ]]>
    </statement>

    <!-- 구매주문 부대비 관리(을)를 수정한다. -->
    <statement name="update" type="update">
        /*+ com.hwfs.ft.ftp.dao.PoOrderOtherAmtDAO.update */
        <![CDATA[
            UPDATE PO_ORDER_OTHER_AMT SET
            <#if commClass?exists> COMM_CLASS = :commClass, </#if>
            <#if commType?exists> COMM_TYPE = :commType, </#if>
            <#if slipPublishDate?exists> SLIP_PUBLISH_DATE = :slipPublishDate, </#if>
            <#if paySchdDate?exists> PAY_SCHD_DATE = :paySchdDate, </#if>
            <#if realPaymentPlce?exists> REAL_PAYMENT_PLCE = :realPaymentPlce, </#if>
            <#if basiKind?exists> BASI_KIND = :basiKind, </#if>
            <#if basiNum?exists> BASI_NUM = :basiNum, </#if>
            <#if commAmt?exists> COMM_AMT = :commAmt, </#if>
            <#if divAccumAmt?exists> DIV_ACCUM_AMT = :divAccumAmt, </#if>
            <#if attachDept?exists> ATTACH_DEPT = :attachDept, </#if>
            <#if taxBillNum?exists> TAX_BILL_NUM = :taxBillNum, </#if>
            <#if taxShetItemnm?exists> TAX_SHET_ITEMNM = :taxShetItemnm, </#if>
            <#if journalzAcct?exists> JOURNALZ_ACCT = :journalzAcct, </#if>
            <#if fiscalSlipNum?exists> FISCAL_SLIP_NUM = :fiscalSlipNum, </#if>
            <#if fiscalSlipcDate?exists> FISCAL_SLIPC_DATE = :fiscalSlipcDate, </#if>
            <#if slipStatus?exists> SLIP_STATUS = :slipStatus, </#if>
            <#if nonarrivSlipCreationYn?exists> NONARRIV_SLIP_CREATION_YN = :nonarrivSlipCreationYn, </#if>
            <#if etcPrepayamtMgmtNum?exists> ETC_PREPAYAMT_MGMT_NUM = :etcPrepayamtMgmtNum, </#if>
            <#if remarks?exists> REMARKS = :remarks, </#if>
            <#if vatNewhghtUpjang?exists> VAT_NEWHGHT_UPJANG = :vatNewhghtUpjang, </#if>
            <#if taxCd == "50">	/* 전자일반 매입	 */
                ELCTN_TAX_BILL_YN = 'Y',
            <#elseif taxCd == "60">	/* 전자영세 일반 매입 */
                ELCTN_TAX_BILL_YN = 'Y',
            <#elseif taxCd == "70">	/* 전자불공제 면세사업 */
                ELCTN_TAX_BILL_YN = 'Y',
            <#elseif taxCd == "91">	/* 전자면세 일반계산서 */
                ELCTN_TAX_BILL_YN = 'Y',
            <#else>
                ELCTN_TAX_BILL_YN = 'N',
            </#if>
            <#if billPublishdd?exists> BILL_PUBLISHDD = :billPublishdd, </#if>
            <#if slipPublsupplyPrice?exists> SLIP_PUBLSUPPLY_PRICE = :slipPublsupplyPrice, </#if>
            <#if supplyPrice?exists> SUPPLY_PRICE = :supplyPrice, </#if>
            <#if vatAmt?exists> VAT_AMT = :vatAmt, </#if>
            <#if taxCd?exists> TAX_CD = :taxCd, </#if>
            <#if slipNum?exists> SLIP_NUM = :slipNum, </#if>
            <#if buCd?exists> BU_CD = :buCd, </#if>
            <#if fiscalYear?exists> FISCAL_YEAR = :fiscalYear, </#if>
            <#if procDate?exists> PROC_DATE = :procDate, </#if>
            <#if resultMsg?exists> RESULT_MSG = :resultMsg, </#if>
            <#if slipPublisher?exists> SLIP_PUBLISHER = :slipPublisher, </#if>
            <#if orgFiscalSlipNum?exists> ORG_FISCAL_SLIP_NUM = :orgFiscalSlipNum, </#if>
            <#if adjustSeq?exists> ADJUST_SEQ = :adjustSeq, </#if>
            <#if prepayPoOrderNum?exists> PREPAY_PO_ORDER_NUM = :prepayPoOrderNum, </#if>
            <#if altSlipClass?exists> ALT_SLIP_CLASS = :altSlipClass, </#if>
            <#if snglfootlstNmYn?exists> SNGLFOOTLST_NM_YN = DECODE(:snglfootlstNmYn, '1', 'Y', 'N'), </#if>
            <#if bankAcctNo?exists> BANK_ACCT_NO = SCC_CRYPTO.ENC_FUN(:bankAcctNo), </#if>
            <#if bankAcctOwnr?exists> BANK_ACCT_OWNR = :bankAcctOwnr, </#if>
            <#if bankCd?exists> BANK_CD = :bankCd, </#if>
            <#if bankType?exists> BANK_TYPE = :bankType, </#if>
            <#if suspenseNum?exists> SUSPENSE_NUM = :suspenseNum, </#if>
            <#if altSeq?exists> ALT_SEQ = :altSeq, </#if>
                   UUSER = :loginSabun,
                   UDATE = SYSDATE
            WHERE  PO_ORDER_NUM = :poOrderNum
            AND    OTHER_AMT_SEQ = :otherAmtSeq

        ]]>
    </statement>

    <!-- 구매주문 부대비 관리(을)를 삭제한다. -->
    <statement name="delete" type="delete">
        /*+ com.hwfs.ft.ftp.dao.PoOrderOtherAmtDAO.delete */
        <![CDATA[
        DELETE
        FROM   PO_ORDER_OTHER_AMT
        WHERE  PO_ORDER_NUM = :poOrderNum
        AND    OTHER_AMT_SEQ = :otherAmtSeq

        ]]>
    </statement>

    <!-- 구매주문 부대비 관리(을)를 삭제한다. -->
    <statement name="deleteOtherAmt" type="delete">
        /*+ com.hwfs.ft.ftp.dao.PoOrderOtherAmtDAO.deleteOtherAmt */
        <![CDATA[
        DELETE
        FROM   PO_ORDER_OTHER_AMT
        WHERE  PO_ORDER_NUM = :poOrderNum
        ]]>
    </statement>


    <!-- 구매주문 부대비 전표상태 등록 수정한다. -->
    <statement name="createFiscalSlip" type="update">
        /*+ com.hwfs.ft.ftp.dao.PoOrderOtherAmtDAO.createFiscalSlip */
        <![CDATA[
        UPDATE PO_ORDER_OTHER_AMT SET
            <#if slipStatus?exists> SLIP_STATUS = :slipStatus, </#if>
            UUSER = :loginSabun,
            UDATE = SYSDATE
        WHERE  PO_ORDER_NUM = :poOrderNum
        AND    OTHER_AMT_SEQ = :otherAmtSeq
        ]]>
    </statement>

    <!-- 구매주문 부대비 전표상태 취소 수정한다. -->
    <statement name="cancelFiscalSlip" type="update">
        /*+ com.hwfs.ft.ftp.dao.PoOrderOtherAmtDAO.cancelFiscalSlip */
        <![CDATA[
        UPDATE PO_ORDER_OTHER_AMT SET
            <#if slipNum?exists> SLIP_NUM = :slipNum, </#if>
            <#if paySchdDate?exists> PAY_SCHD_DATE = :paySchdDate, </#if>
            UUSER = :loginSabun,
            UDATE = SYSDATE
        WHERE  PO_ORDER_NUM = :poOrderNum
        AND    OTHER_AMT_SEQ = :otherAmtSeq
        ]]>
    </statement>

    <!-- 구매주문 부대비 배부 누적금액(을)를 수정한다. -->
    <statement name="updateDivAccumAmt" type="update">
        /*+ com.hwfs.ft.ftp.dao.PoOrderOtherAmtDAO.updateDivAccumAmt */
        <![CDATA[
        UPDATE PO_ORDER_OTHER_AMT SET
            DIV_ACCUM_AMT =
            CASE WHEN NVL(DIV_ACCUM_AMT,0) + ABS(:divAccumAmt) < 0 THEN	  --원단위 절사된 금액이라서 - 금액 발생하면 0으로 -수수료금액이 넘어올 수 있어서 ABS사용
                0
            ELSE
                NVL(DIV_ACCUM_AMT,0) + :divAccumAmt
            END,
            UUSER = :loginSabun,
            UDATE = SYSDATE
        WHERE  PO_ORDER_NUM = :poOrderNum
        AND    OTHER_AMT_SEQ = :otherAmtSeq
        AND    COMM_CLASS = :commClass
        ]]>
    </statement>

    <!-- 구매주문 부대비 배부 누적금액(을)를 수정한다. -->
    <statement name="updateAllDivAccumAmtZero" type="update">
        /*+ com.hwfs.ft.ftp.dao.PoOrderOtherAmtDAO.updateDivAccumAmt */
        <![CDATA[
        UPDATE PO_ORDER_OTHER_AMT T SET T.DIV_ACCUM_AMT =0
        WHERE  T.PO_ORDER_NUM=:poOrderNum
        AND 0= (
          SELECT COUNT(A.DELIVER_NUM) CNT FROM INVENTORY_MGMT_DELIVER A
          WHERE A.PO_ORDER_NUM=:poOrderNum
          AND A.DELIVER_STATUS<>'10'
        )
        ]]>
    </statement>

    <!-- 구매주문 부대비 배부 잔액 금액(을)를 수정한다. -->
    <statement name="updateDivAccumAmtBalAlt" type="update">
        /*+ com.hwfs.ft.ftp.dao.PoOrderOtherAmtDAO.updateDivAccumAmtBalAlt */
        <![CDATA[
        UPDATE PO_ORDER_OTHER_AMT SET
            DIV_ACCUM_AMT = COMM_AMT,
            UUSER = :loginSabun,
            UDATE = SYSDATE
        WHERE  PO_ORDER_NUM = :poOrderNum
        AND  OTHER_AMT_SEQ = :otherAmtSeq
        AND  COMM_CLASS = :commClass
        ]]>
    </statement>

    <!-- 수수료 금액 구한다-->
    <statement name="getCommAmt" type="update">
        /*+ com.hwfs.ft.ftp.dao.PoOrderOtherAmtDAO.getCommAmt */
        <![CDATA[
        SELECT NVL(SUM(A.COMM_AMT),0) AS COMM_AMT FROM PO_ORDER_OTHER_AMT A
        WHERE A.PO_ORDER_NUM=:poOrderNum
        AND A.COMM_CLASS= :commClass
        ]]>
    </statement>

    <!-- 회계전표생성일자(결재일)을 조회한다.-->
    <statement name="getFiscalSlipcDate" type="update">
        /*+ com.hwfs.ft.ftp.dao.PoOrderOtherAmtDAO.getFiscalSlipcDate */
        <![CDATA[
        SELECT MAX(B.PROC_DATE) AS FISCAL_SLIPC_DATE FROM ETC_PREPAYAMT_ADJUST A, FT_SAP_INTERFACE B
        WHERE A.SLIP_NUM = B.SLIP_NUM(+)
        AND A.PO_ORDER_NUM = :poOrderNum
        AND A.PREPAYAMT_CLASS='A-01'	  --통관경비선급금지불
        ]]>
    </statement>

    <!-- 외부문서번호 수정한다. -->
    <statement name="updateSlipNum" type="update">
        /*+ com.hwfs.ft.ftp.dao.PoOrderOtherAmtDAO.updateSlipNum */
        <![CDATA[
            UPDATE PO_ORDER_OTHER_AMT SET
            <#if slipNum?exists> SLIP_NUM = :slipNum, </#if>
            <#if orgFiscalSlipNum?exists> ORG_FISCAL_SLIP_NUM = :orgFiscalSlipNum, </#if>
            <#if prepayPoOrderNum?exists> PREPAY_PO_ORDER_NUM = :prepayPoOrderNum, </#if>
            <#if adjustSeq?exists> ADJUST_SEQ = :adjustSeq, </#if>
            <#if altSeq?exists> ALT_SEQ = :altSeq, </#if>
            <#if nonarrivSlipCreationYn?exists> NONARRIV_SLIP_CREATION_YN = :nonarrivSlipCreationYn, </#if>
                   UUSER = :loginSabun,
                   UDATE = SYSDATE
            WHERE  PO_ORDER_NUM = :poOrderNum
            AND    OTHER_AMT_SEQ = :otherAmtSeq

        ]]>
    </statement>

    <!-- 구매 주문 마스터 시퀀스 조회 한다. -->
    <statement name="getOtherAmtSeq" type="select">
        <![CDATA[
            SELECT NVL(MAX(OTHER_AMT_SEQ),0) +1 FROM PO_ORDER_OTHER_AMT WHERE PO_ORDER_NUM=:poOrderNum
        ]]>
    </statement>

    <!-- 품의상태를 수정한다. -->
    <statement name="updateOtherAmtDraft" type="update">
        <![CDATA[
            UPDATE PO_ORDER_OTHER_AMT SET
                 SIGN_INSTANCE_ID         	 = :signInstanceId
                ,UUSER                       = :uuser
                ,UDATE                       = SYSDATE
            WHERE  PO_ORDER_NUM = :poOrderNum
            AND    OTHER_AMT_SEQ = :otherAmtSeq
        ]]>
    </statement>

</hqml>
