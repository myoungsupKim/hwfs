<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="sm.sar.saleCashAlterDAO">
	<desc>영업수입 현금 가수금 대체 HQML Query</desc>

	<!-- 영업수입 현금 가수금 대체 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.selectList */
		<![CDATA[
			<#if salesCashReceiveNum?has_content>
			SELECT 
			       ROWNUM AS R,
                   '0' AS CHK,
                   A.SALES_CASH_NUM,
                   B.CASH_ALT_NUM,
                   B.SALES_CASH_RECEIVE_NUM,
                   A.OCCUR_DATE,
                   B.ALT_DATE,
                   A.SYS_CLASS,
                   A.MU_CD,
                   A.CC_CD,
                   A.UPJANG_CD,
                   A.ACCT_CD,
                  -- NVL(A.OCCUR_AMT,0) - NVL(B.RECEIVE_AMT,0) AS OCCUR_AMT,
                   (NVL(A.OCCUR_AMT,0) - NVL((SELECT SUM(RECEIVE_AMT) FROM SLA_SALES_CASH_ALT_DETAIL RD WHERE RD.SALES_CASH_NUM=A.SALES_CASH_NUM AND RD.RECD_STATUS='L' AND RD.SALES_CASH_RECEIVE_NUM <> NVL(B.SALES_CASH_RECEIVE_NUM,'0')),0)) AS OCCUR_AMT,
                   A.WITHDRAW_AMT,
                   NVL(B.RECEIVE_AMT,0) AS RECEIVE_AMT,
                   NVL(A.OCCUR_AMT,0) - NVL(B.RECEIVE_AMT,0) AS BAL_AMT,
                   A.DATA_CLASS,
                   DECODE(B.JOURNALZ_YN, 'N', 0, 1) AS JOURNALZ_YN,
                   B.JOURNALZ_NUM,
                   A.PROC_USER,
                   A.CUST_CD,
                   (SELECT CUSTNM FROM ST_CUST WHERE  CUSTCD=A.CUST_CD) AS CUST_NM,
                   A.WITHDRAW_AMT AS APPLY_AMT
                   ,A.REMARK
                   ,A.DEAL_TYPE
                   ,SCC_CODE_NM('DEAL_TYPE_CASH',A.DEAL_TYPE) DEAL_TYPE_NM
                FROM   SLA_SALES_CASH_OCCUR_INFO A,
                       SLA_SALES_CASH_ALT_DETAIL B
                WHERE  1=1
                AND    A.SALES_CASH_NUM = B.SALES_CASH_NUM(+)
				AND    B.SALES_CASH_RECEIVE_NUM = :salesCashReceiveNum
			<#else>
			SELECT 
			       ROWNUM AS R,
                   '0' AS CHK,
                   A.SALES_CASH_NUM,
                   0    AS CASH_ALT_NUM,
                   ''   AS SALES_CASH_RECEIVE_NUM,
                   A.OCCUR_DATE,
                   ''   AS ALT_DATE,
                   A.SYS_CLASS,
                   A.MU_CD,
                   A.CC_CD,
                   A.UPJANG_CD,
                   A.ACCT_CD,
                   NVL(A.OCCUR_AMT,0) - NVL(A.WITHDRAW_AMT,0) AS OCCUR_AMT,
                   A.WITHDRAW_AMT,
                   0    AS RECEIVE_AMT,
                   NVL(A.OCCUR_AMT,0) - NVL(A.WITHDRAW_AMT,0) AS BAL_AMT,
                   A.DATA_CLASS,
                   DECODE(A.JOURNALZ_YN, 'N', 0, 1) AS JOURNALZ_YN,
                   A.JOURNALZ_NUM,
                   A.PROC_USER,
                   A.CUST_CD,
                   (SELECT CUSTNM FROM ST_CUST WHERE  CUSTCD=A.CUST_CD) AS CUST_NM,
                   A.WITHDRAW_AMT AS APPLY_AMT
                   ,A.REMARK
                   ,A.DEAL_TYPE
                   ,SCC_CODE_NM('DEAL_TYPE_CASH',A.DEAL_TYPE) DEAL_TYPE_NM                   
                FROM   SLA_SALES_CASH_OCCUR_INFO A
                WHERE  1=1 AND A.ACCT_CD NOT IN ('11101013','11101014')
				<#if occurDateFr?has_content>AND    A.OCCUR_DATE >= :occurDateFr</#if>
				<#if occurDateTo?has_content>AND    A.OCCUR_DATE <= :occurDateTo</#if>
				<#if muCd?has_content>AND    A.MU_CD = :muCd</#if>
				<#if tmCd?has_content>
					AND     A.CC_CD IN (
					                SELECT  A.CC_CD
					                FROM    SCC_CC A
					                        ,HLDC_SC_DEPT_V B
					                WHERE   B.CC_CD = A.CC_CD
					                AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
					                AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
					                AND     B.TM_CD = :tmCd
					                )
		        </#if>
		        <#if ccCd?has_content>AND    A.CC_CD = :ccCd</#if>
		        <#if custCd?has_content>AND    A.CUST_CD = :custCd</#if>
		        	AND A.RECD_STATUS='L'
		        	AND NVL(A.OCCUR_AMT,0) - NVL(A.WITHDRAW_AMT,0) <> 0
		       	ORDER BY A.OCCUR_DATE
			</#if>
		]]>
	</statement>
	
	<!-- 영업수입 현금 대체마스터을 조회한다. -->
	<statement name="selectMstList" type="select">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.selectMstList */
		<![CDATA[
			SELECT A.SALES_CASH_RECEIVE_NUM,
			       A.ALT_DATE,
			       A.ALT_TYPE_CD,
			       A.MU_CD,
			       (SELECT DISTINCT MU.MU_NM FROM HLDC_SC_DEPT_V MU WHERE MU.MU_CD = A.MU_CD)  AS MU_NM,
			       A.CC_CD,
			       (SELECT  CC_NM FROM SCC_CC WHERE CC_CD = A.CC_CD) AS CC_NM,
			       A.ACCT_CD,
			       A.SUSPENSE_ALT_NUM,
			       A.RECEIVE_AMT,
			       DECODE(A.JOURNALZ_YN, 'N', 0, 1) AS JOURNALZ_YN,
			       A.JOURNALZ_NUM,
			       A.INQUERY_START_DATE,
			       A.INQUERY_END_DATE,
			       A.INQUERY_MU_CD,
			       (SELECT DISTINCT MU.MU_NM FROM HLDC_SC_DEPT_V MU WHERE MU.MU_CD = A.INQUERY_MU_CD)  AS INQUERY_MU_NM,
			       A.INQUERY_TM_CD,
			       (SELECT DISTINCT TM.TM_NM FROM HLDC_SC_DEPT_V TM WHERE TM.CC_CD = A.INQUERY_CC_CD)  AS INQUERY_TM_NM,
			       A.REMARK,
			       A.INQUERY_CC_CD,
			       (SELECT  CC_NM FROM SCC_CC WHERE CC_CD = A.INQUERY_CC_CD) AS INQUERY_CC_NM,
			       A.INQUERY_CUST_CD,
			       A.INQUERY_UPJANG_CD AS UPJANG_CD,
			       (SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = A.INQUERY_UPJANG_CD) AS UPJANG_NM,
			       A.RECD_STATUS,
			       A.CUSER,
			       A.CDATE,
			       A.UUSER,
			       A.UDATE,
                   (SELECT MIN(OCCUR_DATE) FROM SLA_SALES_CASH_ALT_DETAIL D, SLA_SALES_CASH_OCCUR_INFO O WHERE O.SALES_CASH_NUM = D.SALES_CASH_NUM AND D.SALES_CASH_RECEIVE_NUM = A.SALES_CASH_RECEIVE_NUM) AS MIN_OCCUR_DATE,
                   (SELECT MAX(OCCUR_DATE) FROM SLA_SALES_CASH_ALT_DETAIL D , SLA_SALES_CASH_OCCUR_INFO O WHERE O.SALES_CASH_NUM = D.SALES_CASH_NUM AND D.SALES_CASH_RECEIVE_NUM = A.SALES_CASH_RECEIVE_NUM) AS MAX_OCCUR_DATE
			FROM   SLA_SALES_CASH_ALT_MST A
			WHERE  1=1
			AND    A.RECD_STATUS = 'L'
			<#if salesCashReceiveNum?has_content>
			    AND A.SALES_CASH_RECEIVE_NUM = :salesCashReceiveNum
			<#else>
				<#if occurDateFr?has_content>AND    A.ALT_DATE >= :occurDateFr</#if>
				<#if occurDateTo?has_content>AND    A.ALT_DATE <= :occurDateTo</#if>
				<#if muCd?has_content>AND    A.MU_CD = :muCd</#if>
				<#if tmCd?has_content>
					AND     A.CC_CD IN (
					                SELECT  A.CC_CD
					                FROM    SCC_CC A
					                        ,HLDC_SC_DEPT_V B
					                WHERE   B.CC_CD = A.CC_CD
					                AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
					                AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
					                AND     B.TM_CD = :tmCd
					                )
		        </#if>
		        <#if ccCd?has_content>AND    A.CC_CD = :ccCd</#if>
			</#if>
			ORDER BY ALT_DATE DESC
		]]>
	</statement>
		
	<!-- 영업수입 현금 영업현금번호 생성한다. -->
	<statement name="selectMaxSalesCashNum" type="select">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.selectMaxSalesCashNum */
		<![CDATA[
			SELECT :occurDate || SUBSTR('000000' || (NVL(MAX(TO_NUMBER(SUBSTR(SALES_CASH_NUM,9,6))),0)+1), -6) AS maxSalesCashNum
            FROM SLA_SALES_CASH_OCCUR_INFO WHERE SUBSTR(SALES_CASH_NUM,1,8) = :occurDate
		]]>
	</statement>
	
	<!-- 영업수입 대체마스터 영업현금입금번호 생성한다. -->
	<statement name="selectMaxSalesCashReceiveNum" type="select">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.selectMaxSalesCashReceiveNum */
		<![CDATA[
			SELECT :altDate || SUBSTR('0000' || (NVL(MAX(TO_NUMBER(SUBSTR(SALES_CASH_RECEIVE_NUM,9,4))),0)+1), -4) AS maxSalesCashReceiveNum
            FROM SLA_SALES_CASH_ALT_MST WHERE SUBSTR(SALES_CASH_RECEIVE_NUM,1,8) = :altDate
		]]>
	</statement>
	
	<!-- 영업수입 현금 가수금 대체(을)를 번호를 조회한다. -->
	<statement name="selectMaxAltNum" type="select">
		/*+ com.hwfs.rc.rcg.dao.CouponDestributionDAO.selectList */
		<![CDATA[
			SELECT :occurDate || SUBSTR('0000' || (NVL(MAX(TO_NUMBER(SUBSTR(SUSPENSE_ALT_NUM,9,4))),0)+1), -4) AS maxSuspenseAltNum
			FROM SLA_SAP_SUSPENSE_ALT_INFO WHERE SUBSTR(SUSPENSE_ALT_NUM,1,8) = :occurDate
		]]>
	</statement>	

	<!-- 영업수입 현금 가수금 대체(을)를 등록한다. -->
	<statement name="insertSuspenseAlt" type="insert">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.insertAlt */
		<![CDATA[--
			INSERT INTO SLA_SAP_SUSPENSE_ALT_INFO
			(
				 BU_CD,
				 SAP_SUSPENSE_NUM,
				 SUSPENSE_ALT_NUM,
				 MU_CD,
				 CC_CD,
				 ALT_TYPE,
				 BANK_ACCT_NO,
				 ALT_AMT,
				 JOURNALZ_YN,
				 JOURNALZ_NUM,
				 JOURNALZ_CUSER,
				 JOURNALZ_CDATE,
				 CUSER,
				 CDATE,
				 UUSER,
				 UDATE
			) VALUES (
				 :buCd,
				 :sapSuspenseNum,
				 :suspenseAltNum,
				<#if muCd?exists> :muCd, <#else> null, </#if>
				<#if ccCd?exists> :ccCd, <#else> null, </#if>
				<#if altType?exists> :altType, <#else> null, </#if>
				<#if imnoCrgleftNum?exists> :imnoCrgleftNum, <#else> null, </#if>
				<#if receiveAmt?exists> :receiveAmt, <#else> null, </#if>
				<#if journalzYn?exists> DECODE(:journalzYn, '1', 'Y', 'N'), <#else> null, </#if>
				<#if journalzNum?exists> :journalzNum, <#else> null, </#if>
				<#if journalzCuser?exists> :journalzCuser, <#else> null, </#if>
				<#if journalzCdate?exists> :journalzCdate, <#else> null, </#if>
				 :loginSabun,
				 SYSDATE,
				 :loginSabun,
				 SYSDATE
			)
		]]>
	</statement>
	
	<!-- 영업수입 현금 가수금 대체(을)를 수정한다. -->
	<statement name="updateSuspenseAlt" type="update">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.updateAlt */
		<![CDATA[
			UPDATE SLA_SAP_SUSPENSE_ALT_INFO SET
			<#if muCd?exists> MU_CD = :muCd, </#if>
			<#if ccCd?exists> CC_CD = :ccCd, </#if>
			<#if altType?exists> ALT_TYPE = :altType, </#if>
			<#if imnoCrgleftNum?exists> BANK_ACCT_NO = :imnoCrgleftNum, </#if>
			<#if receiveAmt?exists> ALT_AMT = :receiveAmt, </#if>
			<#if journalzYn?exists> JOURNALZ_YN = DECODE(:journalzYn, '1', 'Y', 'N'), </#if>
			<#if journalzNum?exists> JOURNALZ_NUM = :journalzNum, </#if>
			<#if journalzCuser?exists> JOURNALZ_CUSER = :journalzCuser, </#if>
			<#if journalzCdate?exists> JOURNALZ_CDATE = :journalzCdate, </#if>
			       UUSER = :loginSabun,
			       UDATE = SYSDATE
			WHERE  BU_CD = :buCd
			AND    SAP_SUSPENSE_NUM = :sapSuspenseNum
			AND    SUSPENSE_ALT_NUM = :suspenseAltNum
		]]>
	</statement>
	
	<!-- 영업수입 현금 가수금 정보를 대체 처리 수정한다. -->
	<statement name="updateSuspenseInfo" type="update">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.updateAlt */
		<![CDATA[
			UPDATE SLA_SAP_SUSPENSE_INFO SET
			       CLASS = :class,
			       UUSER = :loginSabun,
			       UDATE = SYSDATE
			WHERE  SAP_SUSPENSE_NUM = :sapSuspenseNum
			<#if buCd?has_content>AND    BU_CD = :buCd</#if>
			
		]]>
	</statement>
	
	<!-- 영업수입 현금(을)를 등록한다. -->
	<statement name="insertSaleCash" type="insert">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.insertSaleCash */
		<![CDATA[
			INSERT INTO SLA_SALES_CASH_OCCUR_INFO
			(
				 SALES_CASH_NUM
				,OCCUR_DATE
				,SYS_CLASS
				,UPJANG_CD
				,MU_CD
				,CC_CD
				,ACCT_CD
				,OCCUR_AMT
				,WITHDRAW_AMT
				,JOURNALZ_YN
				,JOURNALZ_NUM
				,PROC_USER
				,CUST_CD
				,MODIFY_SALS_YN
				,DEAL_TYPE
				,DATA_CLASS
				,COUPON_PROC_NUM
				,RECEIVE_NUM
				,CASH_OCCUR_CLASS
				,RECD_STATUS
				,CUSER
				,CDATE
				,UUSER
				,UDATE
			) VALUES (
				 :maxSalesCashNum,
				 :occurDate,
				 :sysClass,
				<#if upjangCd?exists> :upjangCd, <#else> null, </#if>
				<#if muCd?exists> :muCd, <#else> null, </#if>
				<#if ccCd?exists> :ccCd, <#else> null, </#if>
				<#if acctCd?exists> :acctCd, <#else> null, </#if>
				<#if occurAmt?exists> :occurAmt, <#else> null, </#if>
				<#if withdrawAmt?exists> :withdrawAmt, <#else> 0, </#if>
				<#if journalzYn?exists> DECODE(:journalzYn, '1', 'Y', 'N'), <#else> 'N', </#if>
				<#if journalzNum?exists> :journalzNum, <#else> null, </#if>
				<#if procUser?exists> :procUser, <#else> null, </#if>
				<#if custCd?exists> :custCd, <#else> null, </#if>
				<#if modifySalsYn?exists> :modifySalsYn, <#else> 'N', </#if>
				<#if dealType?exists> :dealType, <#else> null, </#if>
				<#if dataClass?exists> :dataClass, <#else> null, </#if>
				<#if maxCouponProcNum?exists> :maxCouponProcNum, <#else> null, </#if>
				<#if receiveNum?exists> :receiveNum, <#else> null, </#if>
			 	<#if cashOccurClass?exists> :cashOccurClass, <#else> 'CH01', </#if>
				'L',
				 :loginSabun,
				 SYSDATE,
				 :loginSabun,
				 SYSDATE
			)
		]]>
	</statement>
	
	<!-- 영업 현금 발생 정보를 대체 처리 수정한다. -->
	<statement name="updateSaleCash" type="update">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.updateAlt */
		<![CDATA[
			UPDATE SLA_SALES_CASH_OCCUR_INFO SET
			       WITHDRAW_AMT = (
	                                SELECT  NVL(SUM(RECEIVE_AMT),0)
	                                FROM    SLA_SALES_CASH_ALT_DETAIL
	                                WHERE   SALES_CASH_NUM = :salesCashNum
	                                AND     RECD_STATUS = 'L'
	                                ),
			       UUSER = :loginSabun,
			       UDATE = SYSDATE
			WHERE  SALES_CASH_NUM = :salesCashNum
		]]>
	</statement>
	
	<!-- 영업 현금 발생 정보를 수정한다.(쿠폰판매) -->
	<statement name="updateSaleCashCoupon" type="update">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.updateSaleCashCoupon */
		<![CDATA[
			UPDATE SLA_SALES_CASH_OCCUR_INFO SET
			        <#if muCd?exists> MU_CD = :muCd, </#if>
				    <#if ccCd?exists> CC_CD = :ccCd, </#if>
				    <#if acctCd?exists> ACCT_CD = :acctCd, </#if>
				    <#if occurAmt?exists> OCCUR_AMT = :occurAmt, </#if>
				    <#if withdrawAmt?exists> WITHDRAW_AMT = :withdrawAmt, </#if>
				    <#if journalzYn?exists> JOURNALZ_YN = :journalzYn, </#if>
				    <#if journalzNum?exists> JOURNALZ_NUM = :journalzNum, </#if>
				    <#if procUser?exists> PROC_USER = :procUser, </#if>
				    <#if custCd?exists> CUST_CD = :custCd, </#if>
				    <#if modifySalsYn?exists> MODIFY_SALS_YN = :modifySalsYn, </#if>
				    <#if dealType?exists> DEAL_TYPE = :dealType, </#if>
				    <#if dataClass?exists> DATA_CLASS = :dataClass, </#if>
			       UUSER = :loginSabun,
			       UDATE = SYSDATE
			WHERE  COUPON_PROC_NUM = :couponProcNum
		]]>
	</statement>
	
	<!-- 영업 현금 발생 정보를 수정한다.(입금관리의 현금발생시에) -->
	<statement name="updateSaleCashReceive" type="update">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.updateSaleCashReceive */
		<![CDATA[
			UPDATE SLA_SALES_CASH_OCCUR_INFO SET
			       OCCUR_AMT = :occurAmt,
			       UUSER = :loginSabun,
			       UDATE = SYSDATE
			WHERE  RECEIVE_NUM = :receiveNum
		]]>
	</statement>
	
	<!-- 영업 현금 대체 상세(을)를 등록한다. -->
	<statement name="insertSalesCashAltDetail" type="insert">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.insertSalesCashAltDetail */
		<![CDATA[--
			INSERT INTO SLA_SALES_CASH_ALT_DETAIL
			(
			 CASH_ALT_NUM,
			 SALES_CASH_RECEIVE_NUM,
			 SALES_CASH_NUM,
			 ALT_DATE,
			 MU_CD,
			 CC_CD,
			 OCCUR_AMT,
			 RECEIVE_AMT,
			 ACCT_CD,
			 REMARK,
			 RECD_STATUS,
			 CUSER,
			 CDATE,
			 UUSER,
			 UDATE
			) VALUES (
			 FCUS.SLA_SALES_CASH_ALT_NUM_S.NEXTVAL,
			 :salesCashReceiveNum,
			 :salesCashNum,
			<#if altDate?exists> :altDate, <#else> null, </#if>
			<#if muCd?exists> :muCd, <#else> null, </#if>
			<#if ccCd?exists> :ccCd, <#else> null, </#if>
			<#if occurAmt?exists> :occurAmt, <#else> null, </#if>
			<#if receiveAmt?exists> :receiveAmt, <#else> null, </#if>
			<#if acctCd?exists> :acctCd, <#else> null, </#if>
			<#if remark?exists> :remark, <#else> null, </#if>
			'L',
			 :loginSabun,
			 SYSDATE,
			 :loginSabun,
			 SYSDATE
			)
		]]>
	</statement>
	
	<!-- 영업 현금 대체 상세(을)를 수정한다 -->
	<statement name="updateSalesCashAltDetail" type="update">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.updateSalesCashAltDetail */
		<![CDATA[
			UPDATE SLA_SALES_CASH_ALT_DETAIL SET
			       SALES_CASH_RECEIVE_NUM = :salesCashReceiveNum,
			       SALES_CASH_NUM = :salesCashNum,
			<#if altDate?exists> ALT_DATE = :altDate, </#if>
			<#if muCd?exists> MU_CD = :muCd, </#if>
			<#if ccCd?exists> CC_CD = :ccCd, </#if>
			<#if occurAmt?exists> OCCUR_AMT = :occurAmt, </#if>
			<#if receiveAmt?exists> RECEIVE_AMT = :receiveAmt, </#if>
			<#if acctCd?exists> ACCT_CD = :acctCd, </#if>
			<#if remark?exists> REMARK = :remark, </#if>
			<#if recdStatus?exists> RECD_STATUS = :recdStatus, </#if>
			       UUSER = :loginSabun,
			       UDATE = SYSDATE
			WHERE  CASH_ALT_NUM = :cashAltNum
		]]>
	</statement>
	
	<!-- 영업 현금 대체 상세(을)를 취소한다 -->
	<statement name="cancelSalesCashAltDetail" type="delete">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.cancelSalesCashAltDetail */
		<![CDATA[
			UPDATE SLA_SALES_CASH_ALT_DETAIL SET
			       RECD_STATUS = 'D',
			       UUSER = :loginSabun,
			       UDATE = SYSDATE
			WHERE  CASH_ALT_NUM = :cashAltNum
		]]>
	</statement>
	
	<!-- 영업 현금 대체 마스터(을)를 등록한다. -->
	<statement name="insertSalesCashAltMst" type="insert">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.insertSalesCashAltMst */
		<![CDATA[--
			INSERT INTO SLA_SALES_CASH_ALT_MST
			(
			 SALES_CASH_RECEIVE_NUM,
			 ALT_DATE,
			 ALT_TYPE_CD,
			 MU_CD,
			 CC_CD,
			 ACCT_CD,
			 SUSPENSE_ALT_NUM,
			 RECEIVE_AMT,
			 JOURNALZ_YN,
			 JOURNALZ_NUM,
			 INQUERY_START_DATE,
			 INQUERY_END_DATE,
			 INQUERY_MU_CD,
			 INQUERY_TM_CD,
			 REMARK,
			 INQUERY_CC_CD,
			 INQUERY_CUST_CD,
			 INQUERY_UPJANG_CD,
			 RECD_STATUS,
			 CUSER,
			 CDATE,
			 UUSER,
			 UDATE
			) VALUES (
			 :salesCashReceiveNum,
			<#if altDate?exists> :altDate, <#else> null, </#if>
			<#if altTypeCd?exists> :altTypeCd, <#else> null, </#if>
			<#if muCd?exists> :muCd, <#else> null, </#if>
			<#if ccCd?exists> :ccCd, <#else> null, </#if>
			<#if acctCd?exists> :acctCd, <#else> null, </#if>
			<#if suspenseAltNum?exists> :suspenseAltNum, <#else> null, </#if>
			<#if receiveAmt?exists> :receiveAmt, <#else> null, </#if>
			<#if journalzYn?exists> DECODE(:journalzYn, '1', 'Y', 'N'), <#else> null, </#if>
			<#if journalzNum?exists> :journalzNum, <#else> null, </#if>
			<#if inqueryStartDate?exists> :inqueryStartDate, <#else> null, </#if>
			<#if inqueryEndDate?exists> :inqueryEndDate, <#else> null, </#if>
			<#if inqueryMuCd?exists> :inqueryMuCd, <#else> null, </#if>
			<#if inqueryTmCd?exists> :inqueryTmCd, <#else> null, </#if>
			<#if remark?exists> :remark, <#else> null, </#if>
			<#if inqueryCcCd?exists> :inqueryCcCd, <#else> null, </#if>
			<#if inqueryCustCd?exists> :inqueryCustCd, <#else> null, </#if>
			<#if upjangCd?exists> :upjangCd, <#else> null, </#if>
			'L',
			 :loginSabun,
			 SYSDATE,
			 :loginSabun,
			 SYSDATE
			)
		]]>
	</statement>
	
	<!-- 영업 현금 대체 마스터(을)를 수정한다 -->
	<statement name="updateSalesCashAltMst" type="update">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.updateSalesCashAltMst */
		<![CDATA[
			UPDATE SLA_SALES_CASH_ALT_MST SET
			<#if altDate?exists> ALT_DATE = :altDate, </#if>
			<#if altTypeCd?exists> ALT_TYPE_CD = :altTypeCd, </#if>
			<#if muCd?exists> MU_CD = :muCd, </#if>
			<#if ccCd?exists> CC_CD = :ccCd, </#if>
			<#if acctCd?exists> ACCT_CD = :acctCd, </#if>
			<#if suspenseAltNum?exists> SUSPENSE_ALT_NUM = :suspenseAltNum, </#if>
			<#if receiveAmt?exists> RECEIVE_AMT = :receiveAmt, </#if>
			<#if journalzYn?exists> JOURNALZ_YN = DECODE(:journalzYn, '1', 'Y', 'N'), </#if>
			<#if journalzNum?exists> JOURNALZ_NUM = :journalzNum, </#if>
			<#if inqueryStartDate?exists> INQUERY_START_DATE = :inqueryStartDate, </#if>
			<#if inqueryEndDate?exists> INQUERY_END_DATE = :inqueryEndDate, </#if>
			<#if inqueryMuCd?exists> INQUERY_MU_CD = :inqueryMuCd, </#if>
			<#if inqueryTmCd?exists> INQUERY_TM_CD = :inqueryTmCd, </#if>
			<#if remark?exists> REMARK = :remark, </#if>
			<#if inqueryCcCd?exists> INQUERY_CC_CD = :inqueryCcCd, </#if>
			<#if inqueryCustCd?exists> INQUERY_CUST_CD = :inqueryCustCd, </#if>
			<#if recdStatus?exists> RECD_STATUS = :recdStatus, </#if>
			       UUSER = :loginSabun,
			       UDATE = SYSDATE
			WHERE  SALES_CASH_RECEIVE_NUM = :salesCashReceiveNum
		]]>
	</statement>
	
	<!-- 영업 현금 대체 마스터(을)를 취소한다 -->
	<statement name="cancelSalesCashAltMst" type="update">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.cancelSalesCashAltMst */
		<![CDATA[
			UPDATE SLA_SALES_CASH_ALT_MST SET
			       RECD_STATUS = 'D',
			       UUSER = :loginSabun,
			       UDATE = SYSDATE
			WHERE  SALES_CASH_RECEIVE_NUM = :salesCashReceiveNum
		]]>
	</statement>
	
	<!-- 영업 현금 대체 마스터(을)를 수정한다 -->
	<statement name="updateSalesCashAltMstAmt" type="update">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.updateSalesCashAltMstAmt */
		<![CDATA[
			UPDATE SLA_SALES_CASH_ALT_MST SET
			       RECEIVE_AMT = (SELECT SUM(RECEIVE_AMT)
			                      FROM   SLA_SALES_CASH_ALT_DETAIL
			                      WHERE  SALES_CASH_RECEIVE_NUM = :salesCashReceiveNum),
			       UUSER = :loginSabun,
			       UDATE = SYSDATE
			WHERE  SALES_CASH_RECEIVE_NUM = :salesCashReceiveNum
		]]>
	</statement>
	
	<!-- 영업수입 현금 가수금 대체(을)를 삭제한다. -->
	<statement name="deleteSaleCash" type="delete">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.deleteSaleCash */
		<![CDATA[
			UPDATE SLA_SALES_CASH_OCCUR_INFO 
			SET    <#if occurAmt?exists> OCCUR_AMT = :occurAmt, </#if>
				   <#if recdStatus?exists> RECD_STATUS = :recdStatus, </#if>
			       UUSER = :loginSabun,
			       UDATE = SYSDATE
			WHERE  SALES_CASH_NUM = :salesCashNum
		]]>
	</statement>
	
	<!-- 영업수입 현금 가수금 대체(을)를 삭제한다. -->
	<statement name="cancelSaleCashCoupon" type="delete">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.cancelSaleCashCoupon */
		<![CDATA[
			UPDATE SLA_SALES_CASH_OCCUR_INFO 
			SET    RECD_STATUS = 'D',
			       UUSER = :loginSabun,
			       UDATE = SYSDATE
			WHERE  COUPON_PROC_NUM = :couponProcNum
		]]>
	</statement>
	
	<!-- 영업수입 현금 삭제한다.(입금관리 현금발생 취소시) -->
	<statement name="cancelSaleCashReceive" type="delete">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.cancelSaleCashReceive */
		<![CDATA[
			UPDATE SLA_SALES_CASH_OCCUR_INFO 
			SET    RECD_STATUS = 'D',
			       UUSER = :loginSabun,
			       UDATE = SYSDATE
			WHERE  RECEIVE_NUM = :receiveNum
		]]>
	</statement>

	<!-- 영업수입 현금 가수금 대체(을)를 삭제한다. -->
	<statement name="deleteAlt" type="delete">
		/*+ com.hwfs.sm.sar.dao.SaleCashAlterDAO.delete */
		<![CDATA[
			DELETE 
			FROM   SLA_SAP_SUSPENSE_ALT_INFO 
			WHERE  BU_CD = :buCd
			AND    SAP_SUSPENSE_NUM = :sapSuspenseNum
			AND    SUSPENSE_ALT_NUM = :suspenseAltNum
		]]>
	</statement>

</hqml>
