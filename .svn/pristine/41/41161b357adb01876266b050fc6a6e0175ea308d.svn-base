<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="rc.bms.resultSalesListDAO">
	<desc>룸별 매출 현황 (대관료)</desc>

	<!-- DATA를 조회한다. -->
	
	<!-- 담당AM(S/MGR)_팀, 담당AM(S/MGR), 연회룸,총계, 상반기합계,1~6 ,하반기합계 7~12 -->
	<statement name="selectList" type="select">
		<![CDATA[
		SELECT  OUTLET_CD,  MAX(OUTLET_NM) AS OUTLET_NM
    	  , TEAM_NM                                                --팀명
          , AM_NM --담당자명
		  , MENU_CD
		  , MENU_NM	--연회룸     
		  , SUM(TOT_AMT)   AS TOT_AMT
		  , SUM(TOT_AMT01) AS TOT_AMT01
          , SUM(TOT_AMT02) AS TOT_AMT02
          , SUM(TOT_AMT03) AS TOT_AMT03
          , SUM(TOT_AMT04) AS TOT_AMT04
          , SUM(TOT_AMT05) AS TOT_AMT05
          , SUM(TOT_AMT06) AS TOT_AMT06
          , SUM(TOT_AMT07) AS TOT_AMT07
          , SUM(TOT_AMT08) AS TOT_AMT08
          , SUM(TOT_AMT09) AS TOT_AMT09
          , SUM(TOT_AMT10) AS TOT_AMT10
          , SUM(TOT_AMT11) AS TOT_AMT11
          , SUM(TOT_AMT12) AS TOT_AMT12
          , SUM(TOT_AMT0106) AS TOT_AMT0106
          , SUM(TOT_AMT0712) AS TOT_AMT0712
		FROM (
			SELECT MENU.OUTLET_CD, OUTLET.OUTLET_NM AS OUTLET_NM 
                 , MAX(TEAM.CODE_NAME) AS TEAM_NM                                                --팀명
            	 , SCC_CRYPTO.MASKAUTH_FUN(MAX(SMGR.AM_NM),12,:loginPersMask,:maskAuth) AS AM_NM --담당자명
			     , MENU.MENU_CD
			     , (SELECT  CATERCHF_NM   FROM BMS_CATERCHF_MST A 
                                    WHERE A.OUTLET_CD = MENU.OUTLET_CD 
                                      AND A.CLASS_CD  = '10' 
                                      AND A.CATERCHF_CD   = MENU.MENU_CD   )  AS  MENU_NM	--연회룸
                 , SUM(MENU.TOT_AMT)  AS TOT_AMT
				 , CASE TO_CHAR(TO_DATE(MENU.STR_DATE,'YYYY-MM-DD'),'MM')  WHEN '01' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT01
                 , CASE TO_CHAR(TO_DATE(MENU.STR_DATE,'YYYY-MM-DD'),'MM')  WHEN '02' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT02
                 , CASE TO_CHAR(TO_DATE(MENU.STR_DATE,'YYYY-MM-DD'),'MM')  WHEN '03' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT03
                 , CASE TO_CHAR(TO_DATE(MENU.STR_DATE,'YYYY-MM-DD'),'MM')  WHEN '04' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT04
                 , CASE TO_CHAR(TO_DATE(MENU.STR_DATE,'YYYY-MM-DD'),'MM')  WHEN '05' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT05
                 , CASE TO_CHAR(TO_DATE(MENU.STR_DATE,'YYYY-MM-DD'),'MM')  WHEN '06' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT06
                 , CASE TO_CHAR(TO_DATE(MENU.STR_DATE,'YYYY-MM-DD'),'MM')  WHEN '07' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT07
                 , CASE TO_CHAR(TO_DATE(MENU.STR_DATE,'YYYY-MM-DD'),'MM')  WHEN '08' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT08
                 , CASE TO_CHAR(TO_DATE(MENU.STR_DATE,'YYYY-MM-DD'),'MM')  WHEN '09' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT09
                 , CASE TO_CHAR(TO_DATE(MENU.STR_DATE,'YYYY-MM-DD'),'MM')  WHEN '10' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT10
                 , CASE TO_CHAR(TO_DATE(MENU.STR_DATE,'YYYY-MM-DD'),'MM')  WHEN '11' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT11
                 , CASE TO_CHAR(TO_DATE(MENU.STR_DATE,'YYYY-MM-DD'),'MM')  WHEN '12' THEN SUM(MENU.TOT_AMT) END AS TOT_AMT12
                 , CASE WHEN TO_CHAR(TO_DATE(MENU.STR_DATE,'YYYY-MM-DD'),'MM') BETWEEN '01' AND '06'  THEN SUM(MENU.TOT_AMT) END AS TOT_AMT0106
                 , CASE WHEN TO_CHAR(TO_DATE(MENU.STR_DATE,'YYYY-MM-DD'),'MM') BETWEEN '07' AND '12'  THEN SUM(MENU.TOT_AMT) END AS TOT_AMT0712
                  				
		   	FROM   BMS_RESERV_MENU MENU
		   	INNER JOIN BMS_RESERV_MST  MAST ON MAST.RESERV_NUM = MENU.RESERV_NUM                               --예약 마스터
			INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
                         FROM   SLE_OUTLET_MST MST
                            INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
                                       <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
                                       <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
                           ) OUTLET ON OUTLET.OUTLET_CD =  MENU.OUTLET_CD 
			INNER JOIN BMS_AM_MST      SMGR ON SMGR.AM_CD = MAST.AM_CD                                      --AM명칭
            INNER JOIN SCC_COMMON_CODE TEAM ON TEAM.GROUP_CODE ='BMS_0003'  AND TEAM.CODE = SMGR.AM_TM_CD   --팀코드명	
					 
			WHERE MENU.USE_YN = 'Y'    --사용유무
			  AND MENU.FNB_CLASS ='R'  --연회룸 예약건만 검색 한다.
              <#if reservDtFr?has_content >   AND SUBSTR(MENU.STR_DATE,1,4) BETWEEN :reservDtFr   AND :reservDtTo </#if>
			  <#if outletCd?has_content >     AND MENU.OUTLET_CD  = :outletCd  </#if>
			  <#if amCd?has_content >         AND MAST.AM_CD      = :amCd      </#if>
			  <#if kindCd?has_content >       AND MAST.KIND_CD    = :kindCd    </#if>
			  <#if reservStatus?has_content > AND :reservStatus   LIKE '%' || MAST.RESERV_STATUS || '%' </#if>	
            GROUP BY  MENU.OUTLET_CD, OUTLET.OUTLET_NM, MENU.MENU_CD,   MENU.STR_DATE   
        ) DUAL 
        GROUP BY OUTLET_CD,TEAM_NM , AM_NM, MENU_CD  , MENU_NM 
        ORDER BY OUTLET_CD,TEAM_NM , AM_NM, MENU_CD  , MENU_NM 
		]]>
	</statement>
	
	

	
</hqml>	

	