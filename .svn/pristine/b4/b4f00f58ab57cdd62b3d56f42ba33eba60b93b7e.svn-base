<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="fm.fmf.SaleSumYearDAO">
	<desc>월별매출집계 HQML Query</desc>

	<!-- 월별매출집계 조회 -->
	<statement name="selectList" type="select">
		<![CDATA[
		/*+ com.hwfs.fm.fmf.dao.SaleSumYear.selectList */
		SELECT   CC_NM,	
		         MAIN_UPJANG,	
		         MAIN_UPJANGNM,	
		         PART_SALES_SABUN,	
		         SUM(A_1) A_1,	
		         SUM(A_2) A_2,	
		         MAX(A_3) A_3,	
		         SUM(B_1) B_1,	
		         SUM(B_2) B_2,	
		         MAX(B_3) B_3,	
		         SUM(C_1) C_1,	
		         SUM(C_2) C_2,	
		         MAX(C_3) C_3,	
		         SUM(D_1) D_1,	
		         SUM(D_2) D_2,	
		         MAX(D_3) D_3,	
		         SUM(E_1) E_1,	
		         SUM(E_2) E_2,	
		         MAX(E_3) E_3,	
		         SUM(F_1) F_1,	
		         SUM(F_2) F_2,	
		         MAX(F_3) F_3,	
		         SUM(G_1) G_1,	
		         SUM(G_2) G_2,	
		         MAX(G_3) G_3,	
		         SUM(H_1) H_1,	
		         SUM(H_2) H_2,	
		         MAX(H_3) H_3,	
		         SUM(I_1) I_1,	
		         SUM(I_2) I_2,	
		         MAX(I_3) I_3,	
		         SUM(J_1) J_1,	
		         SUM(J_2) J_2,	
		         MAX(J_3) J_3,	
		         SUM(K_1) K_1, 	
		         SUM(K_2) K_2, 	
		         MAX(K_3) K_3,  	
		         SUM(L_1) L_1,	
		         SUM(L_2) L_2,	
		         MAX(L_3) L_3	
		FROM     ( SELECT CC_NM,	
		                 MAIN_UPJANG,	
		                 MAIN_UPJANGNM,	
		                 PART_SALES_SABUN,	                                                                                            
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -11), 'YYYYMM'), SALE_TOT, 0) A_1,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -11), 'YYYYMM'), MARGIN_SUM, 0) A_2,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -11), 'YYYYMM'), MARGIN_RATIO, 0) A_3,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -10), 'YYYYMM'), SALE_TOT, 0) B_1,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -10), 'YYYYMM'), MARGIN_SUM, 0) B_2,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -10), 'YYYYMM'), MARGIN_RATIO, 0) B_3,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -9), 'YYYYMM'), SALE_TOT, 0) C_1,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -9), 'YYYYMM'), MARGIN_SUM, 0) C_2,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -9), 'YYYYMM'), MARGIN_RATIO, 0) C_3,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -8), 'YYYYMM'), SALE_TOT, 0) D_1,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -8), 'YYYYMM'), MARGIN_SUM, 0) D_2,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -8), 'YYYYMM'), MARGIN_RATIO, 0) D_3,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -7), 'YYYYMM'), SALE_TOT, 0) E_1,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -7), 'YYYYMM'), MARGIN_SUM, 0) E_2,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -7), 'YYYYMM'), MARGIN_RATIO, 0) E_3,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -6), 'YYYYMM'), SALE_TOT, 0) F_1,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -6), 'YYYYMM'), MARGIN_SUM, 0) F_2,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -6), 'YYYYMM'), MARGIN_RATIO, 0) F_3,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -5), 'YYYYMM'), SALE_TOT, 0) G_1,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -5), 'YYYYMM'), MARGIN_SUM, 0) G_2,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -5), 'YYYYMM'), MARGIN_RATIO, 0) G_3,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -4), 'YYYYMM'), SALE_TOT, 0) H_1,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -4), 'YYYYMM'), MARGIN_SUM, 0) H_2,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -4), 'YYYYMM'), MARGIN_RATIO, 0) H_3,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -3), 'YYYYMM'), SALE_TOT, 0) I_1,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -3), 'YYYYMM'), MARGIN_SUM, 0) I_2,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -3), 'YYYYMM'), MARGIN_RATIO, 0) I_3,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -2), 'YYYYMM'), SALE_TOT, 0) J_1,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -2), 'YYYYMM'), MARGIN_SUM, 0) J_2,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -2), 'YYYYMM'), MARGIN_RATIO, 0) J_3,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -1), 'YYYYMM'), SALE_TOT, 0) K_1,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -1), 'YYYYMM'), MARGIN_SUM, 0) K_2,	
		                 DECODE(TRANS_DATE, TO_CHAR(ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -1), 'YYYYMM'), MARGIN_RATIO, 0) K_3,	
		                 DECODE(TRANS_DATE, :schDate, SALE_TOT, 0) L_1,	
		                 DECODE(TRANS_DATE, :schDate, MARGIN_SUM, 0) L_2,	
		                 DECODE(TRANS_DATE, :schDate, MARGIN_RATIO, 0) L_3	
		         FROM    ( SELECT TRANS_DATE,	
		                          CC_NM,	
		                          Z.MAIN_UPJANG,	
		                          Z.MAIN_UPJANGNM,	
		                          (SELECT NM_KOR ||' ('	||SABUN	||')'
		                          FROM    HR_PERSONAL	
		                          WHERE   SABUN = Z.PART_SALES_SABUN	
		                          )	AS PART_SALES_SABUN,
		                          SUM(Z.SALE_TOT) AS SALE_TOT,
		                          SUM(Z.MARGIN_SUM) AS MARGIN_SUM,
		                          DECODE(SUM(SALE_SUM), 0, 0, ROUND(((SUM(SALE_SUM) - SUM(UNIT_SUM)) / (SUM(SALE_SUM))) * 100, 2)) AS MARGIN_RATIO
		                 FROM     (SELECT SUBSTR(TRANS_DATE, 1, 6) TRANS_DATE,	
		                                  C.CC_NM,
		                                  B.MAIN_UPJANG,	
		                                  (SELECT UPJANGNM_DISP	
		                                  FROM    FMS_UPJANGV	
		                                  WHERE   UPJANG = B.MAIN_UPJANG	
		                                  )	AS MAIN_UPJANGNM,	
		                                  B.PART_SALES_SABUN PART_SALES_SABUN,	
		                                  DECODE(A.SALE_TAX, 0, A.SALE_NOTAX, A.SALE_TAX) AS SALE_SUM,	
		                                  A.UNIT_SUM UNIT_SUM,	
		                                  A.SALE_TOT   AS SALE_TOT,	
		                                  A.MARGIN_SUM AS MARGIN_SUM
		                          FROM    FMS_BUY_SALE_SUM A,	
		                                  FMS_UPJANGV B,	
		                                  HLDC_SC_DEPT_V C	
		                          WHERE   A.UPJANG  = B.UPJANG	
		                          AND     B.DEPT_ID = C.CC_CD
		                          <#if schGubun=="1">
                                  AND     A.TRANS_DATE BETWEEN ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -11) AND LAST_DAY(TO_DATE(:schDate, 'YYYYMM'))
                                  <#else>
                                  AND     A.RECIEPT_DATE BETWEEN ADD_MONTHS(TO_DATE(:schDate, 'YYYYMM'), -11) AND LAST_DAY(TO_DATE(:schDate, 'YYYYMM'))
                                  </#if>
                                  <#if mainUpjang?has_content>
                                  AND     A.UPJANG IN (SELECT UPJANG FROM FMS_UPJANGV WHERE MAIN_UPJANG = :mainUpjang)
		                          </#if>
		                          <#if tmCd?has_content>
                                  AND     C.TM_CD = :tmCd
		                          </#if>
		                          <#if schSabun?has_content>
                                  AND     B.PART_SALES_SABUN = :schSabun
		                          </#if>
		                          )	
		                          Z	
		                 GROUP BY TRANS_DATE,	
		                          CC_NM,	
		                          MAIN_UPJANG,	
		                          MAIN_UPJANGNM,	
		                          PART_SALES_SABUN	
		                 )	
		         )	
		GROUP BY CC_NM,	
		         MAIN_UPJANG,	
		         MAIN_UPJANGNM,	
		         PART_SALES_SABUN	
	    ]]>
	</statement
</hqml>


