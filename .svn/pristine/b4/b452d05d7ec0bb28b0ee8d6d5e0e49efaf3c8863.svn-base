<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>insert</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>-1</result-count>
	<statement>
 
 INSERT INTO SAP_IF.SAP_IFC_DRIVING(
                                COMP_CD	     ,
                                DRIVING_ID	 ,
                                VISIT_ID	   ,
                                VISIT_DATE	 ,
                                CAR_NUMBER	 ,
                                LOC_CD	     ,
                                SUB_LOC_CD	 ,
                                LOC_CDNM	   ,
                                SUB_LOC_CDNM	,
                                FROM_KM	     ,
                                TO_KM	       ,
                                INUSE_KM	   ,
                                DISTANCE	   ,
                                CAR_EXPENSE	 ,
                                TOLL_EXPENSE	,
                                GITA_EXPENSE	,
                                TOT_EXPENSE	 ,
                                MGMT_SABUN	 ,
                                MGMT_SABUNNM ,
                                DEPT_ID
                             )
    SELECT '2000' AS COMP_CD,
           V.DRIVING_ID,
           V.VISIT_ID,
           A.VISIT_DATE, 
           V.CAR_NUMBER,
           V.LOC_CD,
           V.SUB_LOC_CD,
           (SELECT (SELECT CODE_NAME FROM SCC_COMMON_CODE  WHERE (GROUP_CODE ='MA0040') AND (CODE = A.SET1))||' '||CODE_NAME CODE_NAME  FROM SCC_COMMON_CODE A  WHERE (GROUP_CODE ='MA0041') AND (CODE = V.LOC_CD)) LOC_CDNM,
           (SELECT (SELECT CODE_NAME FROM SCC_COMMON_CODE  WHERE (GROUP_CODE ='MA0040') AND (CODE = A.SET1))||' '||CODE_NAME CODE_NAME  FROM SCC_COMMON_CODE A  WHERE (GROUP_CODE ='MA0041') AND (CODE = V.SUB_LOC_CD)) SUB_LOC_CDNM,       
           V.FROM_KM,
           V.TO_KM,
           V.INUSE_KM,
           V.DISTANCE,
           V.CAR_EXPENSE,
           V.TOLL_EXPENSE,
           V.GITA_EXPENSE,
           NVL(V.CAR_EXPENSE, 0) + NVL(V.TOLL_EXPENSE, 0) + NVL(V.GITA_EXPENSE, 0) TOT_EXPENSE,
           A.MGMT_SABUN, 
           A.MGMT_SABUNNM, 
           B.DEPT_ID
      FROM MAK_DRIVING_MGMT V,
           MAK_VISIT_MGMT_TOT_V A ,
           HLDC_HR_PERSONAL B
    WHERE  (V.GUBUN      = A.GUBUN)
    AND    (V.VISIT_ID   = A.VISIT_ID) 
    AND    (A.MGMT_SABUN = B.SABUN)
    AND     V.DRIVING_ID = #DRIVING_ID#   
 </statement>
	<input default-name="ds_cond">
				  <col name="DRIVING_ID" size="256" type="NUMERIC" description="" />
	</input>
	<output default-name="ds_list">
	</output>
</query>