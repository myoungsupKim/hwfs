<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="rc.roa.overTimeInputDAO">
	<desc>특근 근태 발생 등록 HQML Query</desc>

	<!-- 특근 근태 발생 등록 주차를 조회한다. -->
	<statement name="selectWeekly" type="select">
		/*+ com.hwfs.rc.roa.dao.OverTimeInputDAO.selectWeekly */
		<![CDATA[
		SELECT WEEKLY_SEQ,WEEKLY_SEQ||'주차' WEEKLY_NM FROM RSS_OVER_TIME_WEEK_DATE_INFO
		WHERE YEAR || '' || MONTH = :schYYMM
		ORDER BY OCCUR_DATE
		]]>
	</statement>

	<!-- 특근 근태 발생 등록(을)를 등록한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.rc.roa.dao.OverTimeInputDAO.selectList */
		<![CDATA[
            SELECT  A.YEAR
                    ,A.WEEKLY_SEQ
                    ,A.YY_MM
                    ,A.OCCUR_DATE
                    ,SCC_GET_WEEK_FUN('NAME',A.OCCUR_DATE) HAN_DAY
                    ,DECODE(B.DUTY_START_DATE,NULL,A.OCCUR_DATE,B.DUTY_START_DATE) DUTY_START_DATE
                    ,B.DUTY_START_TIME
                    ,DECODE(B.DUTY_END_DATE,NULL,A.OCCUR_DATE,B.DUTY_END_DATE) DUTY_END_DATE
                    ,B.DUTY_END_TIME
                    ,B.WORK_ATT_TYPE
                    ,DECODE(B.UPJANG,NULL,:schUpjang,B.UPJANG) UPJANG
                    ,DECODE(B.EMPNO,NULL,:schEmpNo,B.EMPNO) EMPNO
                    ,SCC_USERINFO_NM_KOR_FUN(DECODE(B.EMPNO,NULL,:schEmpNo,B.EMPNO),1) EMP_NM
                    ,DECODE(B.EMPNO,NULL,2,4) ROW_TYPE
                    ,'' OCCUR
                    ,NVL((
                    SELECT  D.CLOSE_YN
                    FROM    RSS_CLOSE_STATUS D
                    WHERE   D.UPJANG    = B.UPJANG
                    AND     D.YYMM      = A.YY_MM
                    AND     D.CLOSE_ARTICLE = '1'
                    ),'N') CLOSE_YN
                    ,B.DEDUCTION_TIME
            FROM    (
                    SELECT  YEAR
                            ,WEEKLY_SEQ
                            ,YEAR||MONTH YY_MM
                            ,TO_CHAR(TO_DATE(OCCUR_DATE,'YYYYMMDD'),'YYYYMMDD') OCCUR_DATE
                    FROM    RSS_OVER_TIME_WEEK_DATE_INFO
                    WHERE   YEAR||MONTH = :schYYMM
                    AND     WEEKLY_SEQ = :schWeek
                    UNION ALL
                    SELECT  YEAR
                            ,WEEKLY_SEQ
                            ,YEAR||MONTH
                            ,TO_CHAR(TO_DATE(OCCUR_DATE,'YYYYMMDD')+1,'YYYYMMDD')
                    FROM    RSS_OVER_TIME_WEEK_DATE_INFO
                    WHERE   YEAR||MONTH = :schYYMM
                    AND     WEEKLY_SEQ = :schWeek
                    UNION ALL
                    SELECT  YEAR
                            ,WEEKLY_SEQ
                            ,YEAR||MONTH
                            ,TO_CHAR(TO_DATE(OCCUR_DATE,'YYYYMMDD')+2,'YYYYMMDD')
                    FROM    RSS_OVER_TIME_WEEK_DATE_INFO
                    WHERE   YEAR||MONTH = :schYYMM
                    AND     WEEKLY_SEQ = :schWeek
                    UNION ALL
                    SELECT  YEAR
                            ,WEEKLY_SEQ
                            ,YEAR||MONTH
                            ,TO_CHAR(TO_DATE(OCCUR_DATE,'YYYYMMDD')+3,'YYYYMMDD')
                    FROM    RSS_OVER_TIME_WEEK_DATE_INFO
                    WHERE   YEAR||MONTH = :schYYMM
                    AND     WEEKLY_SEQ = :schWeek
                    UNION ALL
                    SELECT  YEAR
                            ,WEEKLY_SEQ
                            ,YEAR||MONTH
                            ,TO_CHAR(TO_DATE(OCCUR_DATE,'YYYYMMDD')+4,'YYYYMMDD')
                    FROM    RSS_OVER_TIME_WEEK_DATE_INFO
                    WHERE   YEAR||MONTH = :schYYMM
                    AND     WEEKLY_SEQ = :schWeek
                    UNION ALL
                    SELECT  YEAR
                            ,WEEKLY_SEQ
                            ,YEAR||MONTH
                            ,TO_CHAR(TO_DATE(OCCUR_DATE,'YYYYMMDD')+5,'YYYYMMDD')
                    FROM    RSS_OVER_TIME_WEEK_DATE_INFO
                    WHERE   YEAR||MONTH = :schYYMM
                    AND     WEEKLY_SEQ = :schWeek
                    UNION ALL
                    SELECT  YEAR
                            ,WEEKLY_SEQ
                            ,YEAR||MONTH
                            ,TO_CHAR(TO_DATE(OCCUR_DATE,'YYYYMMDD')+6,'YYYYMMDD')
                    FROM    RSS_OVER_TIME_WEEK_DATE_INFO
                    WHERE   YEAR||MONTH = :schYYMM
                    AND     WEEKLY_SEQ = :schWeek
                    ) A
                    ,RSS_OVER_TIME_WORK_ATT B
            WHERE   A.YEAR          = B.YEAR(+)
            AND     A.WEEKLY_SEQ    = B.WEEKLY_SEQ(+)
            AND     A.OCCUR_DATE    = B.OCCUR_DATE(+)
            AND     A.YY_MM         = :schYYMM
            AND     A.WEEKLY_SEQ    = :schWeek
            AND     B.EMPNO(+)      = :schEmpNo
            AND     B.UPJANG(+)     = :schUpjang
            ORDER BY A.OCCUR_DATE
		]]>
	</statement>
	
    <!-- 특근 근태 발생 등록(을)를 등록한다. -->
    <statement name="insert" type="insert">
        /*+ com.hwfs.rc.roa.dao.OverTimeInputDAO.insert */
        <![CDATA[
            INSERT INTO RSS_OVER_TIME_WORK_ATT (
                 UPJANG
                ,EMPNO
                ,OCCUR_DATE
                ,EMP_NM
                ,DUTY_START_DATE
                ,DUTY_START_TIME
                ,DUTY_END_DATE
                ,DUTY_END_TIME
                ,DEDUCTION_TIME
                ,WORK_ATT_TYPE
                ,YEAR
                ,YY_MM
                ,WEEKLY_SEQ
                ,CUSER
                ,CDATE
                ,UUSER
                ,UDATE
            ) VALUES (
                 :upjang
                ,:empno
                ,:occurDate
                ,:empNm
                ,:dutyStartDate
                ,:dutyStartTime
                ,:dutyEndDate
                ,:dutyEndTime
                ,:deductionTime
                ,:workAttType
                ,:year
                ,:yyMm
                ,:weeklySeq
                ,:loginSabun
                ,SYSDATE
                ,:loginSabun
                ,SYSDATE
            )
        ]]>
    </statement>

    <!-- 특근 근태 발생 등록(을)를 수정한다. -->
    <statement name="update" type="update">
        /*+ com.hwfs.rc.roa.dao.OverTimeInputDAO.update */
        <![CDATA[
            UPDATE  RSS_OVER_TIME_WORK_ATT
            SET      DUTY_END_DATE      = :dutyEndDate
                    ,DUTY_END_TIME      = :dutyEndTime
                    ,DUTY_START_DATE    = :dutyStartDate
                    ,DUTY_START_TIME    = :dutyStartTime
                    ,DEDUCTION_TIME     = :deductionTime
                    ,WORK_ATT_TYPE      = :workAttType
                    ,UDATE              = SYSDATE
                    ,UUSER              = :loginSabun
            WHERE   YEAR                = :year
            AND     EMPNO               = :empno
            AND     OCCUR_DATE          = :occurDate
            AND     WEEKLY_SEQ          = :weeklySeq
            AND     YY_MM               = :yyMm
            AND     UPJANG              = :upjang
        ]]>
    </statement>

    <!-- 특근 사용 등록(을)를 등록한다. -->
    <statement name="infoInser" type="update">
        /*+ com.hwfs.rc.roa.dao.overTimeInputDAO.infoInser */
        <![CDATA[
            MERGE INTO  RSS_OVER_TIME_INFO A
                USING   (
                        SELECT  :upjang UPJANG
                                ,:empno EMPNO
                                ,:occurDate OCCUR_DATE
                                ,:occurType OCCUR_TYPE
                                ,:yyMm YY_MM
                                ,:weeklySeq WEEKLY_SEQ
                                ,<#if empNm?has_content>:empNm                                  <#else> null </#if> EMP_NM
                                ,<#if extensionOccur?has_content>:extensionOccur                <#else> null </#if> EXTENSION_OCCUR
                                ,<#if extensionRewardOccur?has_content>:extensionRewardOccur    <#else> null </#if> EXTENSION_REWARD_OCCUR
                                ,<#if holidayOccur?has_content>:holidayOccur                    <#else> null </#if> HOLIDAY_OCCUR
                                ,<#if holidayRewardOccur?has_content>:holidayRewardOccur        <#else> null </#if> HOLIDAY_REWARD_OCCUR
                                ,<#if nghtOccur?has_content>:nghtOccur                          <#else> null </#if> NGHT_OCCUR
                        FROM    DUAL)  B
                    ON  (A.UPJANG = B.UPjANG AND A.EMPNO = B.EMPNO AND A.OCCUR_DATE = B.OCCUR_DATE)
            WHEN MATCHED THEN
                UPDATE
                SET     A.EXTENSION_OCCUR           = B.EXTENSION_OCCUR
                        ,A.EXTENSION_REWARD_OCCUR   = B.EXTENSION_REWARD_OCCUR
                        ,A.HOLIDAY_OCCUR            = B.HOLIDAY_OCCUR
                        ,A.HOLIDAY_REWARD_OCCUR     = B.HOLIDAY_REWARD_OCCUR
                        ,A.NGHT_OCCUR               = B.NGHT_OCCUR
                        ,A.UUSER                    = :loginSabun
                        ,A.UDATE                    = SYSDATE
            WHEN NOT MATCHED THEN
                INSERT  (
                         UPJANG
                        ,EMPNO
                        ,OCCUR_DATE
                        ,OCCUR_TYPE
                        ,YY_MM
                        ,WEEKLY_SEQ
                        ,EMP_NM
                        ,EXTENSION_OCCUR
                        ,EXTENSION_REWARD_OCCUR
                        ,HOLIDAY_OCCUR
                        ,HOLIDAY_REWARD_OCCUR
                        ,NGHT_OCCUR
                        ,CUSER
                        ,CDATE
                        ,UUSER
                        ,UDATE
                ) VALUES (
                         B.UPJANG
                        ,B.EMPNO
                        ,B.OCCUR_DATE
                        ,B.OCCUR_TYPE
                        ,B.YY_MM
                        ,B.WEEKLY_SEQ
                        ,B.EMP_NM
                        ,B.EXTENSION_OCCUR
                        ,B.EXTENSION_REWARD_OCCUR
                        ,B.HOLIDAY_OCCUR
                        ,B.HOLIDAY_REWARD_OCCUR
                        ,B.NGHT_OCCUR
                        ,:loginSabun
                        ,SYSDATE
                        ,:loginSabun
                        ,SYSDATE
                )
        ]]>
    </statement>

    <!-- 특근 사용 등록(을)를 등록한다. -->
    <statement name="logInser" type="update">
        /*+ com.hwfs.rc.roa.dao.overTimeInputDAO.logInser */
        <![CDATA[
            INSERT INTO RSS_OVER_TIME_CHG_LOG (
                SEQUENCE
                ,UPJANG
                ,CHG_CLASS
                ,EMPNO
                ,OCCURDATE
                ,OCCUR_TYPE
                ,YY_MM
                ,WEEKLY_SEQ
                ,EMP_NM
                ,EXTENSION_OCCUR
                ,EXTENSION_USE
                ,EXTENSION_PAY
                ,EXTENSION_REWARD_OCCUR
                ,EXTENSION_REWARD_USE
                ,EXTENSION_REWARD_PAY
                ,HOLIDAY_OCCUR
                ,HOLIDAY_USE
                ,HOLIDAY_PAY
                ,HOLIDAY_REWARD_OCCUR
                ,HOLIDAY_REWARD_USE
                ,HOLIDAY_REWARD_PAY
                ,NGHT_OCCUR
                ,NGHT_PAY
                ,CUSER
                ,CDATE
                ,UUSER
                ,UDATE
            )
            SELECT  RSS_OVER_TIME_CHG_LOG_S.NEXTVAL
                    ,A.UPJANG
                    ,'1'
                    ,A.EMPNO
                    ,A.OCCUR_DATE
                    ,A.OCCUR_TYPE
                    ,A.YY_MM
                    ,A.WEEKLY_SEQ
                    ,A.EMP_NM
                    ,A.EXTENSION_OCCUR
                    ,A.EXTENSION_USE
                    ,A.EXTENSION_PAY
                    ,A.EXTENSION_REWARD_OCCUR
                    ,A.EXTENSION_REWARD_USE
                    ,A.EXTENSION_REWARD_PAY
                    ,A.HOLIDAY_OCCUR
                    ,A.HOLIDAY_USE
                    ,A.HOLIDAY_PAY
                    ,A.HOLIDAY_REWARD_OCCUR
                    ,A.HOLIDAY_REWARD_USE
                    ,A.HOLIDAY_REWARD_PAY
                    ,A.NGHT_OCCUR
                    ,A.NGHT_PAY
                    ,:loginSabun
                    ,SYSDATE
                    ,:loginSabun
                    ,SYSDATE
            FROM    RSS_OVER_TIME_INFO A
            WHERE   A.UPJANG        = :upjang
            AND     A.EMPNO         = :empno
            AND     A.OCCUR_DATE    = :occurDate
            AND     A.OCCUR_TYPE    = :occurType
        ]]>
    </statement>

    <!-- 특근 근태 발생이 존재 한지 체크 한다. -->
    <statement name="listCnt" type="select">
        /*+ com.hwfs.rc.roa.dao.overTimeInputDAO.listCnt */
        <![CDATA[
            SELECT  TO_CHAR(COUNT(*))
            FROM    RSS_OVER_TIME_WORK_ATT
            WHERE   YEAR                = :year
            AND     EMPNO               = :empno
            AND     OCCUR_DATE          = :occurDate
            AND     WEEKLY_SEQ          = :weeklySeq
            AND     YY_MM               = :yyMm
            AND     UPJANG              = :upjang
        ]]>
    </statement>
    
    <!-- 특근 사용 등록(을)를 이력이 존재한지 체크한다. -->
    <statement name="logCnt" type="select">
        /*+ com.hwfs.rc.roa.dao.overTimeInputDAO.logCnt */
        <![CDATA[
            SELECT  TO_CHAR(COUNT(*))
            FROM    RSS_OVER_TIME_CHG_LOG
            WHERE   OCCURDATE   = :occurDate
            AND     UPJANG      = :upjang
            AND     EMPNO       = :empno
            AND     OCCUR_TYPE  = :occurType
        ]]>
    </statement>

    <!-- 특근 사용 등록(을)를 등록한다. -->
    <statement name="logInfo" type="update">
        /*+ com.hwfs.rc.roa.dao.overTimeInputDAO.logInfo */
        <![CDATA[
            INSERT INTO RSS_OVER_TIME_CHG_LOG (
                SEQUENCE
                ,UPJANG
                ,CHG_CLASS
                ,EMPNO
                ,OCCURDATE
                ,OCCUR_TYPE
                ,YY_MM
                ,WEEKLY_SEQ
                ,EMP_NM
                ,EXTENSION_OCCUR
                ,EXTENSION_USE
                ,EXTENSION_PAY
                ,EXTENSION_REWARD_OCCUR
                ,EXTENSION_REWARD_USE
                ,EXTENSION_REWARD_PAY
                ,HOLIDAY_OCCUR
                ,HOLIDAY_USE
                ,HOLIDAY_PAY
                ,HOLIDAY_REWARD_OCCUR
                ,HOLIDAY_REWARD_USE
                ,HOLIDAY_REWARD_PAY
                ,NGHT_OCCUR
                ,NGHT_PAY
                ,CUSER
                ,CDATE
                ,UUSER
                ,UDATE
            )
            SELECT  RSS_OVER_TIME_CHG_LOG_S.NEXTVAL
                    ,A.UPJANG
                    ,'2'
                    ,A.EMPNO
                    ,A.OCCUR_DATE
                    ,A.OCCUR_TYPE
                    ,A.YY_MM
                    ,A.WEEKLY_SEQ
                    ,A.EMP_NM
                    ,A.EXTENSION_OCCUR
                    ,A.EXTENSION_USE
                    ,A.EXTENSION_PAY
                    ,A.EXTENSION_REWARD_OCCUR
                    ,A.EXTENSION_REWARD_USE
                    ,A.EXTENSION_REWARD_PAY
                    ,A.HOLIDAY_OCCUR
                    ,A.HOLIDAY_USE
                    ,A.HOLIDAY_PAY
                    ,A.HOLIDAY_REWARD_OCCUR
                    ,A.HOLIDAY_REWARD_USE
                    ,A.HOLIDAY_REWARD_PAY
                    ,A.NGHT_OCCUR
                    ,A.NGHT_PAY
                    ,:loginSabun
                    ,SYSDATE
                    ,:loginSabun
                    ,SYSDATE
            FROM    RSS_OVER_TIME_INFO A
            WHERE   A.UPJANG        = :upjang
            AND     A.EMPNO         = :empno
            AND     A.OCCUR_DATE    = :occurDate
            AND     A.OCCUR_TYPE    = :occurType
        ]]>
    </statement>
</hqml>
