<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="sm.srm.sapSlipUploadDAO">
	<desc>SAP 전표 업로드 HQML Query</desc>

	<!-- 100% 세금계산서 발행 매출전표(6B:식재영업,6C:식재도매,6E:연구소,6G:물류매출,6H:기타매출) -->
	<statement name="selectSlipListTax100" type="select"><![CDATA[
            /* 100% 세금계산서 발행 매출전표(6B:식재영업,6C:식재도매,6E:연구소,6G:물류매출,6H:기타매출) */
            SELECT   /*+ GATHER_PLAN_STATISTICS TUNE*/
                    TAX_SHET_NUM
                    ,SLIP_TYPE
                    ,SLIP_TYPE_NM
                    ,DR_CR_CLASS
                    ,D_ACCT_CD
                    ,D_ACCT_NM
                    ,C_ACCT_CD
                    ,C_ACCT_NM
                    ,SUM(D_AMT) AS D_AMT
                    ,SUM(C_AMT) AS C_AMT
                    ,SUM(X_AMT) AS X_AMT
                    ,SUM(V_AMT) AS V_AMT
                    ,MU_CD
                    ,MU_NM
                    ,CC_CD
                    ,CC_NM
                    ,SAP_CUST_CD
                    ,CUST_CD
                    ,CUST_NM
                    ,SORT
                    ,DECODE(VAT_CLASS,'X',NULL,VAT_CLASS) VAT_CLASS
                    ,NVL(WITHDRAW_SCHD_DATE, TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(:slipMon || '01','YYYYMMDD'), 1)),'YYYYMMDD')) AS WITHDRAW_SCHD_DATE
                    ,SUB_UPJANG_NUM
                    ,SYS_CLASS
                    ,'' CUST_CD_ORG
                    ,'' OCCUR_DATE
                    ,JOURNALZ_YN
                    ,JOURNALZ_NUM
                    ,(SELECT MAX(FISCAL_DATE) FROM SLA_TAX_SHET_PUBLISH_MST X WHERE X.TAX_SHET_APPRV_NUM = T.TAX_SHET_NUM  AND RECD_STATUS = 'L' ) SLIP_EVIDENCE_DATE
                    ,MAX(TO_CHAR(CDATE,'YYYYMMDD')) INPUT_DATE
                    ,MAX(TO_CHAR(CDATE,'HH24MISS')) INPUT_TIME
                    ,CC_CD_ORG
                    ,TAX_SHET_NUM_ORG
            FROM    (
                    SELECT   /*+ LEADING(A) INDEX(A SLA_IF_UPJANG_SALS_MST_IDX01)*/ 
                             SLA_GET_TAX_SHET_APPRVNUM(Z.TAX_SHET_NUM)                                                   AS TAX_SHET_NUM
                            ,SCC_SLIP_TYPE('SYS_CLASS',A.SYS_CLASS)                                                     AS SLIP_TYPE
                            ,SCC_CODE_NM('SLIP_TYPE', SCC_SLIP_TYPE('SYS_CLASS', A.SYS_CLASS))                          AS SLIP_TYPE_NM
                            ,'1'                                                                                        AS DR_CR_CLASS
                            ,'11202010'                                                                                 AS D_ACCT_CD
                            ,(SELECT DISTINCT ACCT.ACCTNM FROM HLDC_ST_ACCOUNT_V ACCT WHERE ACCT.ACCTCD = '11202010')   AS D_ACCT_NM
                            ,NULL                                                                                       AS C_ACCT_CD
                            ,NULL                                                                                       AS C_ACCT_NM
                            ,NVL(Z.AMT,0)                                                                               AS D_AMT
                            ,0                                                                                          AS C_AMT
                            ,0                                                                                          AS X_AMT
                            ,0                                                                                          AS V_AMT
                            ,A.MU_CD                                                                                    AS MU_CD
                            ,(SELECT DISTINCT MU.MU_NM FROM HLDC_SC_DEPT_V MU WHERE A.MU_CD = MU.MU_CD)                 AS MU_NM
                            ,
		                    CASE WHEN A.SYS_CLASS = '13' THEN B.CC_CD ELSE A.CC_CD END                              AS CC_CD
                            ,(
                            SELECT 	DISTINCT CC.CC_NM
                            FROM 	HLDC_SC_DEPT_V CC
                            WHERE 	CC.CC_CD = (CASE WHEN A.SYS_CLASS = '13' THEN B.CC_CD ELSE A.CC_CD END)
                            )                                                                                           AS CC_NM
                            ,SCC_GET_SAP_CUST_CD(A.CUST_CD)                                                             AS SAP_CUST_CD
                            ,A.CUST_CD                                                                                  AS CUST_CD
                            ,(SELECT DISTINCT NM.CUSTNM FROM ST_CUST NM WHERE NM.CUSTCD = A.CUST_CD)                    AS CUST_NM
                            ,1                                                                                          AS SORT
                            --,(SELECT SAP_VAT_CD FROM SLA_VAT_CD_MST WHERE VAT_CD = B.VAT_CLASS)                         AS VAT_CLASS
                            -- 한화건설의 경우 매출은 40이나 계산서 발행시 13으로 발행하기 때문에 변경 20160205
                            ,(SELECT DECODE(Z.VAT_CD,'13','13',SAP_VAT_CD)  FROM SLA_VAT_CD_MST WHERE VAT_CD = B.VAT_CLASS)                         AS VAT_CLASS                        
                            ,NULL                                                                                       AS WITHDRAW_SCHD_DATE
                            ,(SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = (
                                                CASE WHEN A.SYS_CLASS = '13' THEN B.SUB_CC_CD ELSE A.CC_CD END
                                                ))                                                                      AS SUB_UPJANG_NUM
                            ,A.SYS_CLASS                                                                                AS SYS_CLASS
                            ,NVL(Z.JOURNALZ_YN,'N')                                                                     AS JOURNALZ_YN
                            ,Z.JOURNALZ_NUM                                                                             AS JOURNALZ_NUM
                            --,Z.OCCUR_DATE																	            AS SLIP_EVIDENCE_DATE
                            ,Z.CDATE                                                                                    AS CDATE
                            ,T.CC_CD 																					AS CC_CD_ORG
                            ,Z.TAX_SHET_NUM																				AS TAX_SHET_NUM_ORG
                    FROM    SLA_IF_UPJANG_SALS_MST A
                            ,SLA_IF_UPJANG_SALS_DETAIL B
                            ,SLA_TAX_SHET_OCCUR_OBJ Z
                            ,SLA_TAX_SHET_PUBLISH_MST T
                            ,(
                            SELECT  A.SYS_CLASS
                                    ,A.SALS_TYPE
                                    ,B.ACCT_CD
                            FROM    SLA_SALES_SALS_TYPE A
                                    ,SLA_TYPE_CD_MST B
                            WHERE   A.TYPE_GRP_CD   = B.TYPE_GRP_CD
                            AND     A.TYPE_CD       = B.TYPE_CD
                            AND     A.USE_YN        = 'Y'
                            ) C
                    WHERE   SUBSTR(A.OCCUR_DATE,0,6) = :slipMon
                    AND     A.SYS_CLASS = :sysClass
                    AND     A.MU_CD = :muCd
                <#if tmCd?has_content>
                    --AND     (SCC_GET_TM_BY_CC('CODE',T.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',T.CC_CD) = :tmCd)
                    --식재사업부 하위업장으로 불러오도록 변경  20160303
                      AND     (SCC_GET_TM_BY_CC('CODE',NVL(A.SUB_CC_CD, A.CC_CD)) = :tmCd OR SCC_GET_PT_BY_CC('CODE',T.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     T.CC_CD = :ccCd
                </#if>
                    AND     A.RECD_STATUS           = 'L'
                    AND     B.RECD_STATUS           = 'L'
                    AND     Z.RECD_STATUS           = 'L'
                    AND     B.DDDD_CLOSE_YN         = 'Y'
                    AND     NVL(B.JOURNALZ_YN,'N')  = 'N'
                    AND     NVL(Z.JOURNALZ_YN,'N')  = 'N'
                    AND     A.OCCUR_DATE            = B.OCCUR_DATE
                    AND     A.SYS_CLASS             = B.SYS_CLASS
                    AND     A.UPJANG_CD             = B.UPJANG_CD
                    AND     A.RECEIPT_NUM           = B.RECEIPT_NUM
                    AND     B.SYS_CLASS             = C.SYS_CLASS
                    AND     B.SALS_CLASS            = C.SALS_TYPE
                    AND     B.UPJANG_SALS_NUM       = Z.UPJANG_SALS_NUM
                    AND     Z.TAX_SHET_NUM 			= T.TAX_SHET_NUM
                    AND     SLA_GET_TAX_SHET_APPRVNUM(Z.TAX_SHET_NUM) IS NOT NULL
                <#if taxShetNo?has_content>
                    AND     Z.TAX_SHET_NUM = :taxShetNo
                </#if>                     
                <#if supplierInchargeId?has_content>
                    AND     Z.TAX_SHET_NUM IN (SELECT SP.TAX_SHET_NUM FROM SLA_TAX_SHET_PUBLISH_MST SP WHERE SP.SUPPLIER_INCHARGE_ID = :supplierInchargeId) 
                </#if>
                UNION ALL
                    SELECT   /*+  LEADING(A) INDEX(A SLA_IF_UPJANG_SALS_MST_IDX01)*/ 
                            SLA_GET_TAX_SHET_APPRVNUM(Z.TAX_SHET_NUM)
                            ,SCC_SLIP_TYPE('SYS_CLASS',A.SYS_CLASS)
                            ,SCC_CODE_NM('SLIP_TYPE', SCC_SLIP_TYPE('SYS_CLASS', A.SYS_CLASS))
                            ,'2'
                            ,NULL
                            ,NULL
                            ,C.ACCT_CD
                            ,(SELECT DISTINCT ACCT.ACCTNM FROM HLDC_ST_ACCOUNT_V ACCT WHERE C.ACCT_CD = ACCT.ACCTCD)
                            ,0.
                            ,NVL(Z.SUPPLY_AMT,0)
                            ,0
                            ,NVL(Z.VAT_AMT,0)
                            ,A.MU_CD
                            ,(SELECT DISTINCT MU.MU_NM FROM HLDC_SC_DEPT_V MU WHERE A.MU_CD = MU.MU_CD)
                            --,A.CC_CD
                            --,(SELECT DISTINCT CC.CC_NM FROM HLDC_SC_DEPT_V CC WHERE A.CC_CD = CC.CC_CD)
                            --식재사업부의 경위 하위업장(SUB_CC_CD)로 매출도 쪼개지도록 변경 20160223 요청자: 유영진
                            , NVL(A.SUB_CC_CD, A.CC_CD)
                            ,(SELECT DISTINCT CC.CC_NM FROM HLDC_SC_DEPT_V CC WHERE  NVL(A.SUB_CC_CD, A.CC_CD) = CC.CC_CD)
                            ,SCC_GET_SAP_CUST_CD(T.CUST_CD) AS SAP_CUST_CD
                            ,T.CUST_CD
                            ,(SELECT DISTINCT NM.CUSTNM FROM ST_CUST NM WHERE NM.CUSTCD = T.CUST_CD)
                            ,2
                            ,(SELECT SAP_VAT_CD FROM SLA_VAT_CD_MST WHERE VAT_CD = T.VAT_CD)
                            ,NULL
                            ,(SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = A.CC_CD)
                            ,A.SYS_CLASS
                            ,NVL(Z.JOURNALZ_YN,'N')
                            ,Z.JOURNALZ_NUM
                      --      ,Z.OCCUR_DATE
                            ,Z.CDATE
                            ,T.CC_CD
                            ,Z.TAX_SHET_NUM																				AS TAX_SHET_NUM_ORG
                    FROM    SLA_IF_UPJANG_SALS_MST A
                            ,SLA_IF_UPJANG_SALS_DETAIL B
                            ,SLA_TAX_SHET_OCCUR_OBJ Z
                            ,SLA_TAX_SHET_PUBLISH_MST T
                            ,(
                            SELECT  A.SYS_CLASS
                                    ,A.SALS_TYPE
                                    ,B.ACCT_CD
                            FROM    SLA_SALES_SALS_TYPE A
                                    ,SLA_TYPE_CD_MST B
                            WHERE   A.TYPE_GRP_CD = B.TYPE_GRP_CD
                            AND     A.TYPE_CD     = B.TYPE_CD
                            AND     A.USE_YN      = 'Y'
                            ) C
                    WHERE   SUBSTR(A.OCCUR_DATE,0,6) = :slipMon
                    AND     A.SYS_CLASS = :sysClass
                    AND     A.MU_CD = :muCd
                <#if tmCd?has_content>
                    --AND     (SCC_GET_TM_BY_CC('CODE',A.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',T.CC_CD) = :tmCd)
                    -- 식재사업부 하위업장으로 불러오도록 변경 20160303
                    AND (SCC_GET_TM_BY_CC('CODE', NVL(A.SUB_CC_CD, A.CC_CD)) = :tmCd OR SCC_GET_PT_BY_CC('CODE',T.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     T.CC_CD = :ccCd
                </#if>
                    AND     A.RECD_STATUS           = 'L'
                    AND     B.RECD_STATUS           = 'L'
                    AND     Z.RECD_STATUS           = 'L'
                    AND     B.DDDD_CLOSE_YN         = 'Y'
                    AND     NVL(B.JOURNALZ_YN,'N')  = 'N'
                    AND     NVL(Z.JOURNALZ_YN,'N')  = 'N'
                    AND     A.OCCUR_DATE            = B.OCCUR_DATE
                    AND     A.SYS_CLASS             = B.SYS_CLASS
                    AND     A.UPJANG_CD             = B.UPJANG_CD
                    AND     A.RECEIPT_NUM           = B.RECEIPT_NUM
                    AND     B.SYS_CLASS             = C.SYS_CLASS
                    AND     B.SALS_CLASS            = C.SALS_TYPE
                    AND     B.UPJANG_SALS_NUM       = Z.UPJANG_SALS_NUM
                    AND     Z.TAX_SHET_NUM 			= T.TAX_SHET_NUM
                    AND     SLA_GET_TAX_SHET_APPRVNUM(Z.TAX_SHET_NUM) IS NOT NULL    
                <#if taxShetNo?has_content>
                    AND     Z.TAX_SHET_NUM = :taxShetNo
                </#if>                                     
                <#if supplierInchargeId?has_content>
                    AND     Z.TAX_SHET_NUM IN (SELECT SP.TAX_SHET_NUM FROM SLA_TAX_SHET_PUBLISH_MST SP WHERE SP.SUPPLIER_INCHARGE_ID = :supplierInchargeId) 
                </#if>
                                
                UNION ALL
                    SELECT  /*+ LEADING(A) INDEX(A SLA_IF_UPJANG_SALS_MST_IDX01)*/
                            SLA_GET_TAX_SHET_APPRVNUM(Z.TAX_SHET_NUM)
                            ,SCC_SLIP_TYPE('SYS_CLASS',A.SYS_CLASS)
                            ,SCC_CODE_NM('SLIP_TYPE', SCC_SLIP_TYPE('SYS_CLASS', A.SYS_CLASS))
                            ,'2'
                            ,NULL
                            ,NULL
                            ,(SELECT ACCT_CD FROM SLA_VAT_CD_MST WHERE VAT_CD = T.VAT_CD)
                            ,(SELECT DISTINCT ACCT.ACCTNM FROM HLDC_ST_ACCOUNT_V ACCT WHERE (SELECT ACCT_CD FROM SLA_VAT_CD_MST WHERE VAT_CD = T.VAT_CD) = ACCT.ACCTCD)
                            ,0
                            ,NVL(Z.VAT_AMT,0)
                            ,NVL(Z.SUPPLY_AMT,0)
                            ,NVL(Z.VAT_AMT,0)
                            ,A.MU_CD
                            ,(SELECT DISTINCT MU.MU_NM FROM HLDC_SC_DEPT_V MU WHERE A.MU_CD = MU.MU_CD)
                            ,NVL(A.SUB_CC_CD, A.CC_CD) 
                            ,(SELECT DISTINCT CC.CC_NM FROM HLDC_SC_DEPT_V CC WHERE NVL(A.SUB_CC_CD, A.CC_CD) = CC.CC_CD)
                            ,SCC_GET_SAP_CUST_CD(T.CUST_CD) AS SAP_CUST_CD
                            ,T.CUST_CD
                            ,(SELECT DISTINCT NM.CUSTNM FROM ST_CUST NM WHERE NM.CUSTCD = T.CUST_CD)
                            ,3
                            ,(SELECT SAP_VAT_CD FROM SLA_VAT_CD_MST WHERE VAT_CD = T.VAT_CD)
                            ,NULL
                            ,(SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = A.CC_CD)
                            ,A.SYS_CLASS
                            ,NVL(Z.JOURNALZ_YN,'N')
                            ,Z.JOURNALZ_NUM
                    --        ,Z.OCCUR_DATE
                            ,Z.CDATE
                            ,T.CC_CD
                            ,Z.TAX_SHET_NUM																				AS TAX_SHET_NUM_ORG
                    FROM    SLA_IF_UPJANG_SALS_MST A
                            ,SLA_IF_UPJANG_SALS_DETAIL B
                            ,SLA_TAX_SHET_OCCUR_OBJ Z
                            ,SLA_TAX_SHET_PUBLISH_MST T
                    WHERE   SUBSTR(A.OCCUR_DATE,0,6) = :slipMon
                    AND     A.SYS_CLASS = :sysClass
                    AND     A.MU_CD = :muCd
                <#if tmCd?has_content>
                    --AND     (SCC_GET_TM_BY_CC('CODE',T.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',T.CC_CD) = :tmCd)
                    --식재사업부 하위업장으로 불러오도록 변경 20160303
                    AND     (SCC_GET_TM_BY_CC('CODE',NVL(A.SUB_CC_CD, A.CC_CD)) = :tmCd OR SCC_GET_PT_BY_CC('CODE',T.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     T.CC_CD = :ccCd
                </#if>
               
                    AND     A.RECD_STATUS           = 'L'
                    AND     B.RECD_STATUS           = 'L'
                    AND     Z.RECD_STATUS           = 'L'
                    AND     B.DDDD_CLOSE_YN         = 'Y'
                    AND     NVL(B.JOURNALZ_YN,'N')  = 'N'
                    AND     NVL(Z.JOURNALZ_YN,'N')  = 'N'
                    AND     A.OCCUR_DATE            = B.OCCUR_DATE
                    AND     A.SYS_CLASS             = B.SYS_CLASS
                    AND     A.UPJANG_CD             = B.UPJANG_CD
                    AND     A.RECEIPT_NUM           = B.RECEIPT_NUM
                    AND     B.UPJANG_SALS_NUM       = Z.UPJANG_SALS_NUM
                    AND     Z.TAX_SHET_NUM 			= T.TAX_SHET_NUM
                    AND     SLA_GET_TAX_SHET_APPRVNUM(Z.TAX_SHET_NUM) IS NOT NULL
                <#if taxShetNo?has_content>
                    AND     Z.TAX_SHET_NUM = :taxShetNo
                </#if>                      
                <#if supplierInchargeId?has_content>
                    AND     Z.TAX_SHET_NUM IN (SELECT SP.TAX_SHET_NUM FROM SLA_TAX_SHET_PUBLISH_MST SP WHERE SP.SUPPLIER_INCHARGE_ID = :supplierInchargeId) 
                </#if>
                    ) T
            WHERE 1 = 1
           
            GROUP BY TAX_SHET_NUM
                    ,SLIP_TYPE
                    ,SLIP_TYPE_NM
                    ,DR_CR_CLASS
                    ,D_ACCT_CD
                    ,D_ACCT_NM
                    ,C_ACCT_CD
                    ,C_ACCT_NM
                    ,MU_CD
                    ,MU_NM
                    ,CC_CD
                    ,CC_NM
                    ,SAP_CUST_CD
                    ,CUST_CD
                    ,CUST_NM
                    ,SORT
                    ,VAT_CLASS
                    ,WITHDRAW_SCHD_DATE
                    ,SUB_UPJANG_NUM
                    ,SYS_CLASS
                    ,JOURNALZ_YN
                    ,JOURNALZ_NUM
             --       ,SLIP_EVIDENCE_DATE
                    ,CC_CD_ORG
                    ,TAX_SHET_NUM_ORG 
            ORDER BY TAX_SHET_NUM, CC_CD_ORG, CUST_CD, SORT
        ]]></statement>

	<!-- 급식, 외식 매출전표(6A:FS사업,6D:외식사업,6A:장례식장,6F:특판,6A:매점POS,6D:외식POS) -->
	<statement name="selectSlipListTaxEtc" type="select"><![CDATA[
            /* 급식, 외식 매출전표(6A:FS사업,6D:외식사업,6A:장례식장,6F:특판,6A:매점POS,6D:외식POS) */
    	SELECT * FROM (
            SELECT SLIP_TYPE
                 , SLIP_TYPE_NM
                 , DR_CR_CLASS
                 , D_ACCT_CD
                 , (SELECT DISTINCT ACCT.ACCTNM
                     FROM HLDC_ST_ACCOUNT_V ACCT
                    WHERE D_ACCT_CD = ACCT.ACCTCD
                   ) AS D_ACCT_NM
                 , C_ACCT_CD
                 , CASE WHEN SORT = 6
                       THEN (SELECT ACCT.ACCTNM
                             FROM HLDC_ST_ACCOUNT_V ACCT
                            WHERE
                                  (SELECT ACCT_CD
                                    FROM SLA_VAT_CD_MST Z
                                   WHERE Z.VAT_CD = A.VAT_CLASS
                                  ) = ACCT.ACCTCD
                           ) ELSE (SELECT DISTINCT ACCT.ACCTNM
                             FROM HLDC_ST_ACCOUNT_V ACCT
                            WHERE A.C_ACCT_CD = ACCT.ACCTCD
                           ) END        AS C_ACCT_NM
                 , SUM(D_AMT) AS D_AMT
                 , SUM(C_AMT) AS C_AMT
                 , SUM(X_AMT) AS X_AMT
                 , SUM(V_AMT) AS V_AMT
                 , MU_CD
                 , (SELECT MU.MU_NM
                     FROM HLDC_SC_MU MU
                    WHERE A.MU_CD = MU.MU_CD
                   ) AS MU_NM
                 , CC_CD
                 , (SELECT DISTINCT CC.CC_NM
                     FROM HLDC_SC_DEPT_V CC
                    WHERE A.CC_CD = CC.CC_CD
                   ) AS CC_NM
                 , SAP_CUST_CD
                 , NVL(CUST_CD, '999998') CUST_CD
                 , NVL((SELECT DISTINCT NM.CUSTNM
                     FROM ST_CUST NM
                    WHERE NM.CUSTCD = A.CUST_CD), '기타(개인)') AS CUST_NM
                 , SORT
                 ,DECODE(VAT_CLASS,'X',NULL,VAT_CLASS) VAT_CLASS
                 , CASE WHEN D_ACCT_CD = '11202010' OR C_ACCT_CD = '11202010' THEN
                        DECODE(NVL(WITHDRAW_SCHD_DATE,''),'',TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(SUBSTR(OCCUR_DATE,0,6)||'01','YYYYMMDD'),1)),'YYYYMMDD'),WITHDRAW_SCHD_DATE)
                   ELSE
                        CASE WHEN DR_CR_CLASS = '1' THEN
                            DECODE(NVL(WITHDRAW_SCHD_DATE,''),'',TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(SUBSTR(OCCUR_DATE,0,6)||'01','YYYYMMDD'),1)),'YYYYMMDD'),WITHDRAW_SCHD_DATE)
                        ELSE
                            NULL
                        END
                 END WITHDRAW_SCHD_DATE
                 , SUBSTR(OCCUR_DATE,0,6) OCCUR_DATE
                 , CARD_DATE
                 , SUB_UPJANG_NUM
                 , SYS_CLASS
                 , '' CUST_CD_ORG
                 , '' TAX_SHET_NUM
                 , JOURNALZ_YN
                 , JOURNALZ_NUM
                 , CC_CD_ORG CC_CD_ORG
              FROM
                   (SELECT SCC_SLIP_TYPE('SYS_CLASS', A.SYS_CLASS) AS SLIP_TYPE
                        , SCC_CODE_NM('SLIP_TYPE', SCC_SLIP_TYPE('SYS_CLASS', A.SYS_CLASS)) AS SLIP_TYPE_NM
                        , '1'                                      AS DR_CR_CLASS
                        , CASE WHEN B.PAY_CD IN ('P1', 'P2', 'P3')
                              THEN
                                  (SELECT DISTINCT Z.ACCT_CD
                                    FROM SLA_ADVANCE_MST Z
                                   WHERE (B.EVIDENCE_1 = Z.ADVANCE_NUM OR B.EVIDENCE_1 = Z.OCCUR_ADVANCE_NUM)
                                  )
                              WHEN B.PAY_CD IN ('P4', 'P5')
                              THEN B.EVIDENCE_3
                              WHEN B.PAY_CD = '4'
                              THEN
                                  (SELECT DISTINCT Z.ACCT_CD
                                    FROM SLA_COUPON_NUM_MST Z
                                   WHERE B.EVIDENCE_3 = Z.COUPON_NUM
                                  )
                              ELSE C.ACCT_CD
                          END     AS D_ACCT_CD
                        , NULL    AS C_ACCT_CD
                        , CASE WHEN B.PAY_CD IN ('4')
                               		THEN (SELECT CASE WHEN B.AMT < 0 THEN SUPPLY_AMT*-1 ELSE SUPPLY_AMT END FROM SLA_COUPON_NUM_MST  Z WHERE B.EVIDENCE_3 = Z.COUPON_NUM)
                               WHEN B.PAY_CD IN ('6') 
                               		THEN                          		
	                               		--상품권 유형의 입금유형이 쿠폰인 경우는 사용금액, 아닌 경우는 상품권금액 2018.01.22 김호석 추가
	                                    CASE WHEN (SELECT AR_TYPE_CD FROM SLA_GIFT_KIND_MST WHERE GIFT_KIND_CD = B.EVIDENCE_1) = '001'
	                                    	THEN B.AMT
	                                     	ELSE B.DENOM_AMT
	                                    END
                            ELSE B.AMT
                            END AS D_AMT
                        , 0       AS C_AMT
                        , 0       AS X_AMT
                        , 0       AS V_AMT
                        , A.MU_CD AS MU_CD
                        --쿠폰 판매시 선수금 원가부서로 변경 20190528 김호석
                        , CASE WHEN B.PAY_CD ='4' THEN (SELECT AM.CC_CD FROM SLA_ADVANCE_MST AM, SLA_COUPON_NUM_MST CM WHERE AM.ADVANCE_NUM=CM.ADVANCE_NUM AND CM.COUPON_NUM = B.EVIDENCE_3)
                        	ELSE A.CC_CD 
                            END AS CC_CD
                        , CASE WHEN B.PAY_CD = '1' THEN '99002'
                        	   WHEN B.PAY_CD = '2' THEN 
                              		CASE WHEN A.SYS_CLASS IN ('21', '20') THEN (SELECT SAP.SAP_CUST_CD FROM ST_CUST SAP  WHERE SAP.CUSTCD =  (SELECT MAX(CUST_CD) FROM SLA_FRNC_STOR_MGMT TA, SLA_BUY_CPNY_MGMT TB WHERE TA.BUYCPNY_CD = TB.BUYCPNY_CD AND TO_NUMBER(REPLACE(TA.FRNC_STOR_NUM,'-')) =TO_NUMBER(REPLACE(B.EVIDENCE_4,'-'))))
                                    	ELSE NVL((SELECT SAP.SAP_CUST_CD FROM ST_CUST SAP  WHERE SAP.CUSTCD = B.EVIDENCE_5),'99002')
                                    END
                        
                        	  --WHEN B.PAY_CD = '2' THEN DECODE(A.SYS_CLASS, '21',(SELECT SAP.SAP_CUST_CD FROM ST_CUST SAP  WHERE SAP.CUSTCD =  (SELECT MAX(CUST_CD) FROM SLA_FRNC_STOR_MGMT TA, SLA_BUY_CPNY_MGMT TB WHERE TA.BUYCPNY_CD = TB.BUYCPNY_CD AND TO_NUMBER(REPLACE(TA.FRNC_STOR_NUM,'-')) =TO_NUMBER(REPLACE(B.EVIDENCE_4,'-')))), '20', (SELECT SAP.SAP_CUST_CD FROM ST_CUST SAP  WHERE SAP.CUSTCD = (SELECT MAX(SAP_CUST_CD) FROM SLA_FRNC_STOR_MGMT TA, SLA_BUY_CPNY_MGMT TB WHERE TA.BUYCPNY_CD = TB.BUYCPNY_CD AND TO_NUMBER(REPLACE(TA.FRNC_STOR_NUM,'-')) =TO_NUMBER(REPLACE(B.EVIDENCE_4,'-')))), NVL((SELECT SAP.SAP_CUST_CD FROM ST_CUST SAP  WHERE SAP.CUSTCD = A.CUST_CD),'99002'))
                        	  --WHEN B.PAY_CD = '2' THEN DECODE(A.SYS_CLASS, '21', (SELECT MAX(SAP_CUST_CD) FROM SLA_FRNC_STOR_MGMT TA, SLA_BUY_CPNY_MGMT TB WHERE TA.BUYCPNY_CD = TB.BUYCPNY_CD AND TO_NUMBER(REPLACE(TA.FRNC_STOR_NUM,'-')) =TO_NUMBER(REPLACE(B.EVIDENCE_4,'-'))), '20', (SELECT MAX(SAP_CUST_CD) FROM SLA_FRNC_STOR_MGMT TA, SLA_BUY_CPNY_MGMT TB WHERE TA.BUYCPNY_CD = TB.BUYCPNY_CD AND TO_NUMBER(REPLACE(TA.FRNC_STOR_NUM,'-')) =TO_NUMBER(REPLACE(B.EVIDENCE_4,'-'))), NVL((SELECT SAP.SAP_CUST_CD FROM ST_CUST SAP  WHERE SAP.CUSTCD = A.CUST_CD),'99002'))
                              ELSE
                                  CASE WHEN
                                          (
                                              A.CUST_CD IN ('999990', '999991', '999998')
                                              OR A.CUST_CD IS NULL
                                              OR A.CUST_CD = ''
                                          )
                                          AND
                                          (
                                              B.PAY_CD NOT IN ('6', '4', '7', 'P1', 'P4', 'P5')
                                          )
                                      THEN '99002'
                                      ELSE
                                          (SELECT SAP.SAP_CUST_CD
                                            FROM ST_CUST SAP
                                           WHERE SAP.CUSTCD =
                                                 CASE WHEN B.PAY_CD IN ('6', '4', 'P1', 'P4', 'P5')
                                                     THEN B.EVIDENCE_5
                                                     WHEN B.PAY_CD IN ('7')
                                                     THEN B.EVIDENCE_1
                                                     ELSE A.CUST_CD
                                                 END
                                          )
                                  END
                          END AS SAP_CUST_CD
                        , CASE WHEN B.PAY_CD = '1' THEN ''
                        	  WHEN B.PAY_CD = '2' THEN 
                              		CASE WHEN A.SYS_CLASS IN ('21', '20') THEN (SELECT MAX(CUST_CD) FROM SLA_FRNC_STOR_MGMT TA, SLA_BUY_CPNY_MGMT TB WHERE TA.BUYCPNY_CD = TB.BUYCPNY_CD AND TO_NUMBER(REPLACE(TA.FRNC_STOR_NUM,'-')) =TO_NUMBER(REPLACE(B.EVIDENCE_4,'-')))
                                    	ELSE B.EVIDENCE_5
                                    END                        
                        	  --WHEN B.PAY_CD = '2' THEN (SELECT MAX(CUST_CD) FROM SLA_FRNC_STOR_MGMT TA, SLA_BUY_CPNY_MGMT TB WHERE TA.BUYCPNY_CD = TB.BUYCPNY_CD AND TO_NUMBER(REPLACE(TA.FRNC_STOR_NUM,'-')) =TO_NUMBER(REPLACE(B.EVIDENCE_4,'-')))
                              WHEN B.PAY_CD IN ('6', '4', 'P1', 'P4', 'P5') THEN B.EVIDENCE_5
                              WHEN B.PAY_CD IN ('7') THEN B.EVIDENCE_1
                              ELSE A.CUST_CD
                          END AS CUST_CD
                        , 1   AS SORT
                        , NULL AS VAT_CLASS
                        , CASE WHEN B.PAY_CD = '2'
                              THEN
                                  (SELECT SCC_WORKING_DAY_FUN(A.OCCUR_DATE,
                                         (SELECT X.RECEIVE_CYCLE
                                           FROM SLA_FRNC_STOR_MGMT X
                                          WHERE X.UPJANG_CD IN
                                                (SELECT Z.UPJANG
                                                  FROM ST_UPJANG Z
                                                 WHERE Z.CC_CD = A.CC_CD
                                                )
                                                AND X.BUYCPNY_CD =
                                                (SELECT S.BUYCPNY_CD
                                                  FROM SLA_BUY_CPNY_MGMT S
                                                 WHERE S.CUST_CD = B.EVIDENCE_5
                                                )
                                                AND X.RECD_STATUS = 'L'
                                                AND ROWNUM = 1 -- 추후변경
                                         ) )
                                    FROM DUAL
                                  )
                              ELSE
                                  CASE WHEN
                                          (SELECT TO_NUMBER(PAY_GUBUN_CD)
                                            FROM SCO_UPJANG_CUST T
                                           WHERE T.UPJANG IN
                                                 (SELECT UPJANG
                                                   FROM ST_UPJANG Z
                                                  WHERE Z.CC_CD = A.CC_CD
                                                 )
                                                 AND T.CUSTCD =
                                                 (
                                                     CASE
                                                         WHEN B.PAY_CD = '1'
                                                         THEN ''
                                                         WHEN B.PAY_CD IN ('2', '6', '4', 'P1', 'P4', 'P5')
                                                         THEN B.EVIDENCE_5
							                             WHEN B.PAY_CD IN ('7')
							                             THEN B.EVIDENCE_1
                                                         ELSE A.CUST_CD
                                                     END
                                                 )
                                          ) = 999
                                      THEN A.OCCUR_DATE
                                      WHEN
                                          (SELECT TO_NUMBER(PAY_GUBUN_CD)
                                            FROM SCO_UPJANG_CUST T
                                           WHERE T.UPJANG IN
                                                 (SELECT UPJANG
                                                   FROM ST_UPJANG Z
                                                  WHERE Z.CC_CD = A.CC_CD
                                                 )
                                                 AND T.CUSTCD =
                                                 (
                                                     CASE
                                                         WHEN B.PAY_CD = '1'
                                                         THEN ''
                                                         WHEN B.PAY_CD IN ('2', '6', '4', 'P1', 'P4', 'P5')
                                                         THEN B.EVIDENCE_5
							                             WHEN B.PAY_CD IN ('7')
							                             THEN B.EVIDENCE_1
                                                         ELSE A.CUST_CD
                                                     END
                                                 )
                                          ) IS NULL
                                      THEN TO_CHAR(ADD_MONTHS(TO_DATE(A.OCCUR_DATE, 'YYYYMMDD'), 1), 'YYYYMM') || TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(A.OCCUR_DATE, 'YYYYMMDD'), 1)), 'DD')
                                      ELSE TO_CHAR(ADD_MONTHS(TO_DATE(A.OCCUR_DATE, 'YYYYMMDD'),
                                          (SELECT TO_NUMBER(PAY_GUBUN_CD)
                                            FROM SCO_UPJANG_CUST T
                                           WHERE UPJANG IN
                                                 (SELECT UPJANG
                                                   FROM ST_UPJANG Z
                                                  WHERE CC_CD = A.CC_CD
                                                 )
                                                 AND CUSTCD =
                                                 (
                                                     CASE
                                                         WHEN B.PAY_CD = '1'
                                                         THEN ''
                                                         WHEN B.PAY_CD IN ('2', '6', '4', 'P1', 'P4', 'P5')
                                                         THEN B.EVIDENCE_5
							                             WHEN B.PAY_CD IN ('7')
							                             THEN B.EVIDENCE_1                                                         
                                                         ELSE A.CUST_CD
                                                     END
                                                 )
                                          )), 'YYYYMM') || TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(A.OCCUR_DATE, 'YYYYMMDD'),
                                          (SELECT TO_NUMBER(PAY_GUBUN_CD)
                                            FROM SCO_UPJANG_CUST T
                                           WHERE UPJANG IN
                                                 (SELECT UPJANG
                                                   FROM ST_UPJANG Z
                                                  WHERE CC_CD = A.CC_CD
                                                 )
                                                 AND CUSTCD =
                                                 (
                                                     CASE
                                                         WHEN B.PAY_CD = '1'
                                                         THEN ''
                                                         WHEN B.PAY_CD IN ('2', '6', '4', 'P1', 'P4', 'P5')
                                                         THEN B.EVIDENCE_5
							                             WHEN B.PAY_CD IN ('7')
							                             THEN B.EVIDENCE_1
                                                         ELSE A.CUST_CD
                                                     END
                                                 )
                                          ))), 'DD')
                                  END
                          END          AS WITHDRAW_SCHD_DATE
                        , CASE WHEN B.PAY_CD IN ('P1','P2','P3')
                              THEN (SELECT DISTINCT OCCUR_DATE FROM SLA_ADVANCE_MST Z WHERE (Z.ADVANCE_NUM = B.EVIDENCE_1 OR B.EVIDENCE_1 = Z.OCCUR_ADVANCE_NUM))
                              ELSE B.OCCUR_DATE
                          END AS OCCUR_DATE
                        , CASE WHEN B.PAY_CD = '2'
                              THEN B.OCCUR_DATE
                              ELSE NULL
                          END AS CARD_DATE
                        , (SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = A.CC_CD) SUB_UPJANG_NUM
                        , A.SYS_CLASS
                        , NVL(B.JOURNALZ_YN,'N') JOURNALZ_YN
                        , B.JOURNALZ_NUM
                        , A.CC_CD CC_CD_ORG
                     FROM SLA_IF_UPJANG_SALS_MST A
                        , SLA_IF_UPJANG_PAYMENT B
                        , (SELECT A.SYS_CLASS
                               , A.PAY_TYPE
                               , B.ACCT_CD
                            FROM SLA_SALES_PAY_TYPE A
                               , SLA_TYPE_CD_MST B
                           WHERE A.TYPE_GRP_CD = B.TYPE_GRP_CD
                                 AND A.TYPE_CD = B.TYPE_CD
                                 AND A.USE_YN = 'Y'
                          ) C
                    WHERE A.SYS_CLASS = :sysClass
                          AND A.MU_CD = :muCd
                        <#if tmCd?has_content>
                          AND (SCC_GET_TM_BY_CC('CODE',A.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',A.CC_CD) = :tmCd)
                        </#if>
                        <#if ccCd?has_content>
                          AND A.CC_CD = :ccCd
                        </#if>
                          AND SUBSTR(A.OCCUR_DATE,0,6) = :slipMon
                          AND A.RECD_STATUS = 'L'
                          AND B.RECD_STATUS = 'L'
                          AND B.DDDD_CLOSE_YN = 'Y'
                          AND NVL(B.JOURNALZ_YN,'N') = 'N'
                          AND A.INTERNAL_USE_CLASS = 'N'
                          AND A.OCCUR_DATE = B.OCCUR_DATE
                          AND A.SYS_CLASS = B.SYS_CLASS
                          AND A.UPJANG_CD = B.UPJANG_CD
                          AND A.RECEIPT_NUM = B.RECEIPT_NUM
                          AND B.PAY_CD = C.PAY_TYPE
                	/*쿠폰 상품권 및 타사 상품권 거스름돈*/
					
                  	/* 대변 */        	
                       UNION ALL
                   SELECT SCC_SLIP_TYPE('SYS_CLASS', A.SYS_CLASS) AS SLIP_TYPE
                        , SCC_CODE_NM('SLIP_TYPE', SCC_SLIP_TYPE('SYS_CLASS', A.SYS_CLASS)) AS SLIP_TYPE_NM
                        , '2'       AS DR_CR_CLASS
                        , NULL      AS D_ACCT_CD
                        , C.ACCT_CD AS C_ACCT_CD
                        , 0         AS D_AMT
                        , B.NET_AMT AS C_AMT
                        , 0         AS X_AMT
                        , B.VAT_AMT AS V_AMT
                        , A.MU_CD
                        , A.CC_CD
                        , CASE WHEN
                                  (
                                      A.CUST_CD IN ('999990', '999991', '999998')
                                      OR A.CUST_CD IS NULL
                                      OR A.CUST_CD = ''
                                  )
                              THEN '99002'
                              ELSE
                                  (SELECT SAP.SAP_CUST_CD
                                    FROM ST_CUST SAP
                                   WHERE SAP.CUSTCD = A.CUST_CD
                                  )
                          END AS SAP_CUST_CD
                        , A.CUST_CD
                        , 3 AS SORT
                        , (SELECT SAP_VAT_CD
                            FROM SLA_VAT_CD_MST
                           WHERE VAT_CD = B.VAT_CLASS
                             ) AS VAT_CLASS
                        , NULL AS WITHDRAW_SCHD_DATE
                        , NULL AS OCCUR_DATE
                        , NULL AS CARD_DATE
                        , (SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = A.CC_CD)
                        , A.SYS_CLASS
                        , NVL(B.JOURNALZ_YN,'N')
                        , B.JOURNALZ_NUM
                        , A.CC_CD CC_CD_ORG
                     FROM SLA_IF_UPJANG_SALS_MST A
                        , SLA_IF_UPJANG_SALS_DETAIL B
                        , (SELECT A.SYS_CLASS
                               , A.SALS_TYPE
                               , B.ACCT_CD
                            FROM SLA_SALES_SALS_TYPE A
                               , SLA_TYPE_CD_MST B
                           WHERE A.TYPE_GRP_CD = B.TYPE_GRP_CD
                                 AND A.TYPE_CD = B.TYPE_CD
                                 AND A.USE_YN = 'Y'
                          ) C
                    WHERE A.SYS_CLASS = :sysClass
                          AND A.MU_CD = :muCd
                        <#if tmCd?has_content>
                          AND (SCC_GET_TM_BY_CC('CODE',A.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',A.CC_CD) = :tmCd)
                        </#if>
                        <#if ccCd?has_content>
                          AND A.CC_CD = :ccCd
                        </#if>
                          AND SUBSTR(A.OCCUR_DATE,0,6) = :slipMon
                          AND A.RECD_STATUS = 'L'
                          AND B.RECD_STATUS = 'L'
                          AND B.DDDD_CLOSE_YN = 'Y'
                          AND NVL(B.JOURNALZ_YN,'N') = 'N'
                          AND A.INTERNAL_USE_CLASS = 'N'
                          AND A.OCCUR_DATE = B.OCCUR_DATE
                          AND A.SYS_CLASS = B.SYS_CLASS
                          AND A.UPJANG_CD = B.UPJANG_CD
                          AND A.RECEIPT_NUM = B.RECEIPT_NUM
                          AND B.SYS_CLASS = C.SYS_CLASS
                          AND B.SALS_CLASS = C.SALS_TYPE
                       UNION ALL
                   SELECT SCC_SLIP_TYPE('SYS_CLASS', A.SYS_CLASS) AS SLIP_TYPE
                        , SCC_CODE_NM('SLIP_TYPE', SCC_SLIP_TYPE('SYS_CLASS', A.SYS_CLASS)) AS SLIP_TYPE_NM
                        ,  '2' AS DR_CR_CLASS
                        , NULL AS D_ACCT_CD
                        , (SELECT ACCT_CD
                            FROM SLA_VAT_CD_MST
                           WHERE VAT_CD = B.VAT_CLASS
                                  ) AS C_ACCT_CD
                                , 0 AS D_AMT
                        , B.VAT_AMT AS C_AMT
                        , B.NET_AMT AS X_AMT
                        , B.VAT_AMT AS V_AMT
                        , A.MU_CD
                        , A.CC_CD
                        , CASE WHEN
                                  (
                                      A.CUST_CD IN ('999990', '999991', '999998')
                                      OR A.CUST_CD IS NULL
                                      OR A.CUST_CD = ''
                                  )
                              THEN '99002'
                              ELSE
                                  (SELECT SAP.SAP_CUST_CD
                                    FROM ST_CUST SAP
                                   WHERE SAP.CUSTCD = A.CUST_CD
                                  )
                          END AS SAP_CUST_CD
                        , A.CUST_CD
                        , 4 AS SORT
                        , (SELECT SAP_VAT_CD
                            FROM SLA_VAT_CD_MST
                           WHERE VAT_CD = B.VAT_CLASS
                             ) AS VAT_CLASS
                        , NULL AS WITHDRAW_SCHD_DATE
                        , NULL AS OCCUR_DATE
                        , NULL AS CARD_DATE
                        , (SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = A.CC_CD)
                        , A.SYS_CLASS
                        , NVL(B.JOURNALZ_YN,'N')
                        , B.JOURNALZ_NUM
                        , A.CC_CD CC_CD_ORG
                     FROM SLA_IF_UPJANG_SALS_MST A
                        , SLA_IF_UPJANG_SALS_DETAIL B
                    WHERE A.SYS_CLASS = :sysClass
                          AND A.MU_CD = :muCd
                        <#if tmCd?has_content>
                          AND (SCC_GET_TM_BY_CC('CODE',A.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',A.CC_CD) = :tmCd)
                        </#if>
                        <#if ccCd?has_content>
                          AND A.CC_CD = :ccCd
                        </#if>
                          AND SUBSTR(A.OCCUR_DATE,0,6) = :slipMon
                          AND B.VAT_CLASS <> 'X'
                          AND A.RECD_STATUS = 'L'
                          AND B.RECD_STATUS = 'L'
                          AND B.DDDD_CLOSE_YN = 'Y'
                          AND NVL(B.JOURNALZ_YN,'N') = 'N'
                          AND A.INTERNAL_USE_CLASS = 'N'
                          AND A.OCCUR_DATE = B.OCCUR_DATE
                          AND A.SYS_CLASS = B.SYS_CLASS
                          AND A.UPJANG_CD = B.UPJANG_CD
                          AND A.RECEIPT_NUM = B.RECEIPT_NUM
                       UNION ALL
                   SELECT SCC_SLIP_TYPE('SYS_CLASS', AM.SYS_CLASS) AS SLIP_TYPE
                        , SCC_CODE_NM('SLIP_TYPE', SCC_SLIP_TYPE('SYS_CLASS', AM.SYS_CLASS)) AS SLIP_TYPE_NM
                        ,  '2' AS DR_CR_CLASS
                        , NULL AS D_ACCT_CD
                        , AD.ACCT_CD
                        , 0                         AS D_AMT
                        , NVL(SUM(AD.APPLY_AMT),0)  AS C_AMT
                        , 0                         AS X_AMT
                        , 0                         AS V_AMT
                        , AD.MU_CD
                        , AD.CC_CD
                        , CASE WHEN
                                  (
                                      TO_CHAR(AM.CUST_CD) IN ('999990', '999991', '999998')
                                      OR TO_CHAR(AM.CUST_CD) IS NULL
                                      OR TO_CHAR(AM.CUST_CD) = ''
                                  )
                              THEN '99002'
                              ELSE
                                  (SELECT SAP.SAP_CUST_CD
                                    FROM ST_CUST SAP
                                   WHERE SAP.CUSTCD = AM.CUST_CD
                                  )
                          END AS SAP_CUST_CD
                        , TO_CHAR(AM.CUST_CD)
                        , 5 AS SORT
                        , (SELECT SAP_VAT_CD
                            FROM SLA_VAT_CD_MST
                           WHERE VAT_CD = AM.VAT_CD
                             ) AS VAT_CLASS
                        , NULL AS WITHDRAW_SCHD_DATE
                        , NULL AS OCCUR_DATE
                        , NULL AS CARD_DATE
                        , (SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = AD.CC_CD)
                        , AM.SYS_CLASS
                        , NVL(AD.JOURNALZ_YN,'N')
                        , AD.JOURNALZ_NUM
                        , AD.CC_CD CC_CD_ORG
                FROM    SLA_ADVANCE_MST AM
                        ,(
                        SELECT  D.ALT_NUM
                                ,D.ACCT_CD
                                ,D.ADVANCE_NUM
                                ,D.APPLY_AMT
                                ,D.ALT_DATE
                                ,NVL(D.JOURNALZ_YN,'N') JOURNALZ_YN
                                ,D.JOURNALZ_NUM
                                ,D.MU_CD
                                ,D.CC_CD
                        FROM    SLA_ADVANCE_ALT_MST M
                                ,SLA_ADVANCE_ALT_DETAIL D
                        WHERE   M.ALT_NUM = D.ALT_NUM
                        AND     M.ALT_TYPE_CD IN ('G01')
                        AND     M.ADVANCE_ALT_OCCUR_CLASS IN ('TO02')
                        AND     M.RECD_STATUS = 'L'
                        AND     D.RECD_STATUS = 'L'
                        AND     M.SYS_CLASS = :sysClass
                        AND     NVL(D.JOURNALZ_YN,'N') = 'N'
                        AND     D.MU_CD = :muCd
                    <#if tmCd?has_content>
                    	AND     (SCC_GET_TM_BY_CC('CODE',D.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',D.CC_CD) = :tmCd)
                    </#if>
                    <#if ccCd?has_content>
                        AND     D.CC_CD = :ccCd
                    </#if>
                        ) AD
                WHERE   AM.ADVANCE_NUM = AD.ADVANCE_NUM (+)
                AND     AM.RECD_STATUS = 'L'
                AND     SUBSTR(AD.ALT_DATE,0,6) = :slipMon
                AND     AD.MU_CD = :muCd
            <#if tmCd?has_content>
                AND     (SCC_GET_TM_BY_CC('CODE',AD.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',AD.CC_CD) = :tmCd)
            </#if>
            <#if ccCd?has_content>
                AND     AD.CC_CD = :ccCd
            </#if>
            	AND 	AD.APPLY_AMT <> 0
                GROUP BY  AM.SYS_CLASS
                        , AD.ACCT_CD
                        , AD.MU_CD
                        , AD.CC_CD
                        , AM.CUST_CD
                        , AM.VAT_CD
                        , AM.SYS_CLASS
                        , NVL(AD.JOURNALZ_YN,'N')
                        , AD.JOURNALZ_NUM
                       UNION ALL
                   SELECT SCC_SLIP_TYPE('SYS_CLASS', A.SYS_CLASS)                                                   AS SLIP_TYPE
                        , SCC_CODE_NM('SLIP_TYPE', SCC_SLIP_TYPE('SYS_CLASS', A.SYS_CLASS))                         AS SLIP_TYPE_NM
                        , '2'                                                                                       AS DR_CR_CLASS
                        , NULL                                                                                      AS D_ACCT_CD
                        , D.SALS_VAT_ACCT                                                                           AS C_ACCT_CD
                        , 0                                                                                         AS D_AMT
                        , CASE WHEN B.AMT<0 THEN NVL(D.VAT_AMT,0) ELSE NVL(D.VAT_AMT,0) * -1 END                    AS C_AMT
                        , CASE WHEN B.AMT<0 THEN NVL(D.SUPPLY_AMT,0) ELSE NVL(D.SUPPLY_AMT,0) * -1 END              AS X_AMT
                        , CASE WHEN B.AMT<0 THEN NVL(D.VAT_AMT,0) ELSE NVL(D.VAT_AMT,0) * -1  END                   AS V_AMT
                        , A.MU_CD                                                                                   AS MU_CD
                        , A.CC_CD                                                                                   AS CC_CD
                        , (SELECT SAP.SAP_CUST_CD FROM ST_CUST SAP WHERE SAP.CUSTCD = B.EVIDENCE_5)                 AS SAP_CUST_CD
                        , B.EVIDENCE_5                                                                              AS CUST_CD
                        , 6                                                                                         AS SORT
                        , D.VAT_CD                                                                                  AS VAT_CLASS
                        , SUBSTR(B.OCCUR_DATE,1,6)                                                                  AS WITHDRAW_SCHD_DATE
                        , B.OCCUR_DATE                                                                              AS OCCUR_DATE
                        , NULL                                                                                      AS CARD_DATE
                        , (SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = A.CC_CD)                           AS SUB_UPJANG_NUM
                        , A.SYS_CLASS                                                                               AS SYS_CLASS
                        , NVL(B.JOURNALZ_YN,'N')                                                                    AS JOURNALZ_YN
                        , B.JOURNALZ_NUM                                                                            AS JOURNALZ_NUM
                        , A.CC_CD CC_CD_ORG
                     FROM SLA_IF_UPJANG_SALS_MST A
                        , SLA_IF_UPJANG_PAYMENT B
                        , (SELECT A.SYS_CLASS
                               , A.PAY_TYPE
                               , B.ACCT_CD
                            FROM SLA_SALES_PAY_TYPE A
                               , SLA_TYPE_CD_MST B
                           WHERE A.TYPE_GRP_CD = B.TYPE_GRP_CD
                                 AND A.TYPE_CD = B.TYPE_CD
                                 AND A.USE_YN = 'Y'
                          ) C
                          ,(
                          SELECT    X.COUPON_NUM
                                    ,X.COUPON_KIND_CD
                                    ,X.COUPON_AMT
                                    ,X.MU_CD
                                    ,X.CC_CD
                                    ,X.ACCT_CD
                                    ,X.SUPPLY_AMT
                                    ,X.VAT_CD
                                    ,X.VAT_AMT
                                    ,Y.SALS_VAT_ACCT
                          FROM      SLA_COUPON_NUM_MST X
                                    ,SLA_COUPON_KIND_MST Y
                          WHERE     X.COUPON_KIND_CD = Y.COUPON_KIND_CD
                          AND       X.USE_YN = 'Y'
                          AND       Y.RECD_STATUS = 'L'
                          --AND       Y.TAX_INVOICE_YN = 'Y'
                          ) D
                    WHERE A.SYS_CLASS = :sysClass
                          AND A.MU_CD = :muCd
                        <#if tmCd?has_content>
                          AND (SCC_GET_TM_BY_CC('CODE',A.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',A.CC_CD) = :tmCd)
                        </#if>
                        <#if ccCd?has_content>
                          AND A.CC_CD = :ccCd
                        </#if>
                          AND SUBSTR(A.OCCUR_DATE,0,6) = :slipMon
                          AND B.PAY_CD = '4'
                          AND A.RECD_STATUS = 'L'
                          AND B.RECD_STATUS = 'L'
                          AND B.DDDD_CLOSE_YN = 'Y'
                          AND NVL(D.VAT_CD, 'X') <> 'X'
                          AND NVL(B.JOURNALZ_YN,'N') = 'N'
                          AND A.INTERNAL_USE_CLASS = 'N'
                          AND A.OCCUR_DATE = B.OCCUR_DATE
                          AND A.SYS_CLASS = B.SYS_CLASS
                          AND A.UPJANG_CD = B.UPJANG_CD
                          AND A.RECEIPT_NUM = B.RECEIPT_NUM
                          AND B.PAY_CD = C.PAY_TYPE
                          AND B.EVIDENCE_3 = D.COUPON_NUM
                          
                	/*쿠폰 상품권 및 타사 상품권 거스름돈*/
                UNION ALL
					SELECT SCC_SLIP_TYPE('SYS_CLASS', A.SYS_CLASS) AS SLIP_TYPE
                        , SCC_CODE_NM('SLIP_TYPE', SCC_SLIP_TYPE('SYS_CLASS', A.SYS_CLASS)) AS SLIP_TYPE_NM
                        , '2'                   AS DR_CR_CLASS
                        , NULL   				AS D_ACCT_CD
						--모든 업장 사업장환전금 계정으로 처리 20170414 요청:김현녕, 처리:김호석 20170522
                        , '11101014' 			AS C_ACCT_CD
                        , 0						AS D_AMT
                        , B.EXCH_AMT       		AS C_AMT
                        , 0       				AS X_AMT
                        , 0       				AS V_AMT
                        , A.MU_CD 				AS MU_CD
                        , A.CC_CD 				AS CC_CD
                		, CASE WHEN
                                  (
                                      A.CUST_CD IN ('999990', '999991', '999998')
                                      OR A.CUST_CD IS NULL
                                      OR A.CUST_CD = ''
                                  )
                                  AND
                                  (
                                      B.PAY_CD NOT IN ('2', '6', '4', '7', 'P1', 'P4', 'P5')
                                  )
                              THEN '99002'
                              ELSE
                                  (SELECT SAP.SAP_CUST_CD
                                    FROM ST_CUST SAP
                                   WHERE SAP.CUSTCD =
                                         CASE WHEN B.PAY_CD IN ('2', '6', '4', 'P1', 'P4', 'P5')
                                             THEN B.EVIDENCE_5
                                             WHEN B.PAY_CD IN ('7')
                                             THEN B.EVIDENCE_1
                                             ELSE A.CUST_CD
                                         END
                                  )
                          END AS SAP_CUST_CD
                        , B.EVIDENCE_5 AS CUST_CD
                        , 7					  AS SORT
                        , NULL AS VAT_CLASS
                        , TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(A.OCCUR_DATE, 'YYYYMMDD'), 1)),'YYYYMMDD') AS WITHDRAW_SCHD_DATE
                        , B.OCCUR_DATE AS OCCUR_DATE
                        , NULL AS CARD_DATE
                        , (SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = A.CC_CD) SUB_UPJANG_NUM
                        , A.SYS_CLASS
                        , NVL(B.JOURNALZ_YN,'N') JOURNALZ_YN
                        , B.JOURNALZ_NUM
                        , A.CC_CD CC_CD_ORG
                     FROM SLA_IF_UPJANG_SALS_MST A
                        , SLA_IF_UPJANG_PAYMENT B
                        , (SELECT A.SYS_CLASS
                               , A.PAY_TYPE
                               , B.ACCT_CD
                            FROM SLA_SALES_PAY_TYPE A
                               , SLA_TYPE_CD_MST B
                           WHERE A.TYPE_GRP_CD = B.TYPE_GRP_CD
                                 AND A.TYPE_CD = B.TYPE_CD
                                 AND A.USE_YN = 'Y'
                          ) C
                    WHERE A.SYS_CLASS = :sysClass
                          AND A.MU_CD = :muCd
                        <#if tmCd?has_content>
                          AND (SCC_GET_TM_BY_CC('CODE',A.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',A.CC_CD) = :tmCd)
                        </#if>
						  --모든 업장 사업장환전금 계정으로 처리 20170414 요청:김현녕, 처리:김호석 20170522
                          --AND A.CC_CD IN ( '315160','309740' )
                        <#if ccCd?has_content>
                          AND A.CC_CD = :ccCd
                        </#if>
                          AND SUBSTR(A.OCCUR_DATE,0,6) = :slipMon
                          AND A.RECD_STATUS = 'L'
                          AND B.RECD_STATUS = 'L'
                          AND B.DDDD_CLOSE_YN = 'Y'
                          AND NVL(B.JOURNALZ_YN,'N') = 'N'
                          AND A.INTERNAL_USE_CLASS = 'N'
                          AND A.OCCUR_DATE = B.OCCUR_DATE
                          AND A.SYS_CLASS = B.SYS_CLASS
                          AND A.UPJANG_CD = B.UPJANG_CD
                          AND A.RECEIPT_NUM = B.RECEIPT_NUM
                          AND B.PAY_CD = C.PAY_TYPE
                          -- 상품권의 입금유형이 상품권(002)일 때만 환전금 처리 2018.01.22 김호석 추가(플래티넘 쿠폰같은 경우 거스름돈 생성안함)
                          AND ((B.PAY_CD = '6' AND (SELECT AR_TYPE_CD FROM SLA_GIFT_KIND_MST WHERE GIFT_KIND_CD = B.EVIDENCE_1) = '002')
                          		OR (B.PAY_CD = '4' AND (SELECT COUPON_GRP_CD FROM SLA_COUPON_KIND_MST WHERE COUPON_KIND_CD = B.EVIDENCE_1) = '2'))
                          AND B.EXCH_AMT <> 0                                  
                   ) A
             WHERE D_AMT IS NOT NULL
                   AND C_AMT IS NOT NULL
             GROUP BY SLIP_TYPE
                 , SLIP_TYPE_NM
                 , DR_CR_CLASS
                 , D_ACCT_CD
                 , C_ACCT_CD
                 , MU_CD
                 , CC_CD
                 , SAP_CUST_CD
                 , CUST_CD
                 , SORT
                 , VAT_CLASS
                 , CASE WHEN D_ACCT_CD = '11202010' OR C_ACCT_CD = '11202010' THEN
                        DECODE(NVL(WITHDRAW_SCHD_DATE,''),'',TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(SUBSTR(OCCUR_DATE,0,6)||'01','YYYYMMDD'),1)),'YYYYMMDD'),WITHDRAW_SCHD_DATE)
                   ELSE
                        CASE WHEN DR_CR_CLASS = '1' THEN
                            DECODE(NVL(WITHDRAW_SCHD_DATE,''),'',TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(SUBSTR(OCCUR_DATE,0,6)||'01','YYYYMMDD'),1)),'YYYYMMDD'),WITHDRAW_SCHD_DATE)
                        ELSE
                            NULL
                        END
                   END
                 , SUBSTR(OCCUR_DATE,0,6)
                 , CARD_DATE
                 , SUB_UPJANG_NUM
                 , SYS_CLASS
                 , JOURNALZ_YN
                 , JOURNALZ_NUM
                 , CC_CD_ORG
            ORDER BY CC_CD_ORG
                 , SORT
        ) WHERE  (NVL(D_AMT, 0) + NVL(C_AMT, 0) + NVL(X_AMT, 0) + NVL(V_AMT, 0)) <>  0
                 
        ]]></statement>

	<!-- 7A:입금처리
		21401110    가수금_수익금
		21401060    선수금_선매출
		11204014    미수금_신용카드_청구
		21401130    가수금_받을어음
		21401110    가수금_수익금
		43216010    지급수수료_신용카드수수료
		11202010    외상매출금_FO
		11204014    미수금_신용카드_청구
	-->
	<statement name="selectSlipList7A" type="select"><![CDATA[
            /* 7A:입금처리 */
            SELECT  M.SLIP_TYPE
                    ,'입금관리' AS SLIP_TYPE_NM
                    ,M.DR_CR_CLASS
                    ,M.D_ACCT_CD
                    ,D.ACCTNM D_ACCT_NM
                    ,M.C_ACCT_CD
                    ,C.ACCTNM C_ACCT_NM
                    ,M.D_AMT
                    ,M.C_AMT
                    ,M.MU_CD
                    ,A.MU_NM MU_NM
                    ,M.CC_CD
                    ,A.CC_NM CC_NM
                    ,B.SAP_CUST_CD
                    ,M.CUST_CD
                    ,B.CUSTNM AS CUST_NM
                    ,M.SORT
                    ,DECODE(M.VAT_CLASS,'X',NULL,M.VAT_CLASS) VAT_CLASS
                    ,M.WITHDRAW_SCHD_DATE
                    ,M.OCCUR_DATE
                    ,'' SYS_CLASS
                    ,'' CUST_CD_ORG
                    ,'' TAX_SHET_NUM
                    ,M.CARD_DATE
                    ,A.SUB_UPJANG_NUM
                    ,M.JOURNALZ_YN
                    ,M.JOURNALZ_NUM
                    ,M.CC_CD_ORG
/*                                
            SELECT  M.SLIP_TYPE
                    ,SCC_CODE_NM('SLIP_TYPE', M.SLIP_TYPE) AS SLIP_TYPE_NM
                    ,M.DR_CR_CLASS
                    ,M.D_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.D_ACCT_CD) D_ACCT_NM
                    ,M.C_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.C_ACCT_CD) C_ACCT_NM
                    ,M.D_AMT
                    ,M.C_AMT
                    ,M.MU_CD
                    ,SCC_MU_NM_FUN(M.MU_CD) MU_NM
                    ,M.CC_CD
                    ,SCC_CC_NM_FUN(M.CC_CD) CC_NM
                    ,SCC_GET_SAP_CUST_CD(M.CUST_CD) SAP_CUST_CD
                    ,M.CUST_CD
                    ,(SELECT DISTINCT NM.CUSTNM FROM ST_CUST NM WHERE NM.CUSTCD = M.CUST_CD) CUST_NM
                    ,M.SORT
                    ,DECODE(M.VAT_CLASS,'X',NULL,M.VAT_CLASS) VAT_CLASS
                    ,M.WITHDRAW_SCHD_DATE
                    ,M.OCCUR_DATE
                    ,'' SYS_CLASS
                    ,'' CUST_CD_ORG
                    ,'' TAX_SHET_NUM
                    ,M.CARD_DATE
                    ,(SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = M.CC_CD) SUB_UPJANG_NUM
                    ,M.JOURNALZ_YN
                    ,M.JOURNALZ_NUM
                    ,M.CC_CD_ORG
*/                    
                    --,DECODE(SUBSTR(M.CC_CD,0,1),'1','1000','2','1000','4', '3000','') NEXT_BU_CD                    
                    --외식사업부 인경우 예외처리 호텔부문일때만 NEXT_BU_CD 추가
                    ,DECODE(M.MU_CD,'2003', DECODE(SUBSTR(M.CC_CD,0,1),'4', '3000','') ,'') NEXT_BU_CD
            FROM    (
                    /* 차변 : 선수금대체 */
                    SELECT  '7A'                        SLIP_TYPE
                            ,'1'                        DR_CR_CLASS
                            ,RD.ACCT_CD                 D_ACCT_CD
                            ,''                         C_ACCT_CD
                            ,NVL(SUM(AD.APPLY_AMT),0)   D_AMT
                            ,0                          C_AMT
                            ,RM.MU_CD                   MU_CD
                            --,RM.CC_CD                   CC_CD
                            ,AD.CC_CD  CC_CD
                            ,TO_CHAR(RM.CUST_CD)        CUST_CD
                            ,''                         VAT_CLASS
                            ,1                          SORT
                            ,TO_CHAR(LAST_DAY(TO_DATE(:slipMon || '01','YYYYMMDD')),'YYYYMMDD')	WITHDRAW_SCHD_DATE
                            ,SUBSTR(AM.OCCUR_DATE,1,6)  OCCUR_DATE
                            ,''							CARD_DATE
                            ,RD.JOURNALZ_YN             JOURNALZ_YN
                            ,RD.JOURNALZ_NUM            JOURNALZ_NUM
                            ,RM.CC_CD                   CC_CD_ORG
                          --  ,AD.CC_CD                  CC_CD_ORG
                    FROM    SLA_AR_RECEIVE_MST RM
                            ,(
                            SELECT  DISTINCT ACCT_CD
                                    ,RECEIVE_NUM
                                    ,NVL(JOURNALZ_YN,'N') JOURNALZ_YN
                                    ,JOURNALZ_NUM
                            FROM    SLA_AR_RECEIVE_DETAIL
                            WHERE   RECD_STATUS = 'L'
                            AND     NVL(JOURNALZ_YN,'N') = 'N'
                            AND     SUBSTR(RECEIVE_DATE,0,6) = :slipMon
                            AND     MU_CD = :muCd
                        <#if tmCd?has_content>
                            AND     (SCC_GET_TM_BY_CC('CODE',CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',CC_CD) = :tmCd)
                        </#if>
                        <#if ccCd?has_content>
                            AND     CC_CD = :ccCd
                        </#if>
                            ) RD
                            ,SLA_ADVANCE_ALT_DETAIL AD
                            ,SLA_ADVANCE_MST AM
                    WHERE   RM.RECEIVE_NUM = RD.RECEIVE_NUM
                    AND     RM.RECEIVE_NUM = AD.RECEIVE_NUM
                    AND     AD.ADVANCE_NUM = AM.ADVANCE_NUM
                    AND     RM.RECEIVE_OCCUR_CLASS NOT IN ('RO03','RO04','RO05')
                    AND     RM.RECD_STATUS = 'L'
                    AND     AD.RECD_STATUS = 'L'
                    AND     AM.RECD_STATUS = 'L'
                    AND     NVL(AD.JOURNALZ_YN,'N') = 'N'
                    AND     SUBSTR(RM.RECEIVE_DATE,0,6) = :slipMon
                    AND     RM.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',RM.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',RM.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     RM.CC_CD = :ccCd
                </#if>
                    GROUP BY RD.ACCT_CD
                            ,RM.MU_CD
                            ,RM.CC_CD
                            ,AD.CC_CD
                            ,RM.CUST_CD
                            ,SUBSTR(RM.RECEIVE_DATE,1,6)
                            ,SUBSTR(AM.OCCUR_DATE,1,6)
                            ,RD.JOURNALZ_YN
                            ,RD.JOURNALZ_NUM
                    UNION ALL
                    /* 차변 : 가수금대체 */
                    SELECT  '7A'                        SLIP_TYPE
                            ,'1'                        DR_CR_CLASS
                            ,RD.ACCT_CD                 D_ACCT_CD
                            ,''                         C_ACCT_CD
                            ,NVL(SUM(SD.RECEIVE_AMT),0) D_AMT
                            ,0                          C_AMT
                            ,RM.MU_CD                   MU_CD
                            ,SD.CC_CD                   CC_CD
                            ,TO_CHAR(RM.CUST_CD)        CUST_CD
                            ,''                         VAT_CLASS
                            ,2
                            ,SD.RECEIVE_DATE			WITHDRAW_SCHD_DATE
                            ,SD.SAP_SUSPENSE_NUM        OCCUR_DATE
                            ,SD.RECEIVE_DATE			CARD_DATE
                            ,RD.JOURNALZ_YN             JOURNALZ_YN
                            ,RD.JOURNALZ_NUM            JOURNALZ_NUM
                            ,RM.CC_CD
                    FROM    SLA_AR_RECEIVE_MST RM
                            ,(
                            SELECT  DISTINCT ACCT_CD
                                    ,RECEIVE_NUM
                                    ,NVL(JOURNALZ_YN,'N') JOURNALZ_YN
                                    ,JOURNALZ_NUM
                            FROM    SLA_AR_RECEIVE_DETAIL
                            WHERE   RECD_STATUS = 'L'
                            AND     NVL(JOURNALZ_YN,'N') = 'N'
                            AND     SUBSTR(RECEIVE_DATE,0,6) = :slipMon
                            AND     MU_CD = :muCd
                        <#if tmCd?has_content>
                        	AND     (SCC_GET_TM_BY_CC('CODE',CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',CC_CD) = :tmCd)
                        </#if>
                        <#if ccCd?has_content>
                            AND     CC_CD = :ccCd
                        </#if>
                            ) RD
                            ,SLA_SAP_SUSPENSE_ALT_DETAIL SD
                    WHERE   RM.RECEIVE_NUM = RD.RECEIVE_NUM
                    AND     RM.ADVANCE_ALT = SD.ALT_NUM
                    AND     RM.RECEIVE_OCCUR_CLASS NOT IN ('RO03','RO04','RO05')
                    AND     RM.RECD_STATUS = 'L'
                    AND     SD.RECD_STATUS = 'L'
                    AND     NVL(SD.JOURNALZ_YN,'N') = 'N'
                    AND     SUBSTR(RM.RECEIVE_DATE,0,6) = :slipMon
                    AND     RM.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',RM.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',RM.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     RM.CC_CD = :ccCd
                </#if>
                    GROUP BY RD.ACCT_CD
                            ,RM.MU_CD
                            ,RM.CC_CD
                            ,SD.CC_CD
                            ,RM.CUST_CD
                            ,RM.DEDUC_AMT
                            ,RM.ADVANCE_ALT
                            ,SD.SAP_SUSPENSE_NUM
                            ,SD.RECEIVE_DATE
                            ,RD.JOURNALZ_YN
                            ,RD.JOURNALZ_NUM
                    UNION ALL
                    /* 차변 : 11204011:미수금_신용카드_일반 */
                    SELECT  '7A'                        SLIP_TYPE
                            ,'1'                        DR_CR_CLASS
                            ,RD.ACCT_CD                 D_ACCT_CD
                            ,''                         C_ACCT_CD
                            ,NVL(SUM(RD.RECEIVE_AMT),0) D_AMT
                            ,0                          C_AMT
                            ,RM.MU_CD                   MU_CD
                            ,RM.CC_CD                   CC_CD
                            ,TO_CHAR(RM.CUST_CD)        CUST_CD
                            ,''                         VAT_CLASS
                            ,3
                            ,RM.RECEIVE_DATE            WITHDRAW_SCHD_DATE
                            ,SUBSTR(RM.RECEIVE_DATE,0,6) OCCUR_DATE
                            ,RM.RECEIVE_DATE            CARD_DATE
                            ,RD.JOURNALZ_YN             JOURNALZ_YN
                            ,RD.JOURNALZ_NUM            JOURNALZ_NUM
                            ,RM.CC_CD
                    FROM    SLA_AR_RECEIVE_MST RM
                            ,SLA_AR_RECEIVE_DETAIL RD
                    WHERE   RM.RECEIVE_NUM = RD.RECEIVE_NUM
                    AND     RM.RECEIVE_TYPE_CD = 'B15'
                    AND     RM.RECEIVE_OCCUR_CLASS NOT IN ('RO03','RO04','RO05')
                    AND     RM.RECD_STATUS = 'L'
                    AND     NVL(RD.JOURNALZ_YN,'N') = 'N'
                    AND     SUBSTR(RM.RECEIVE_DATE,0,6) = :slipMon
                    AND     RM.MU_CD = :muCd
                <#if tmCd?has_content>
                	AND     (SCC_GET_TM_BY_CC('CODE',RM.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',RM.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     RM.CC_CD = :ccCd
                </#if>
                    GROUP BY RD.ACCT_CD
                            ,RM.MU_CD
                            ,RM.CC_CD
                            ,RM.CUST_CD
                            ,RM.RECEIVE_DATE
                            ,RD.JOURNALZ_YN
                            ,RD.JOURNALZ_NUM                            
                    UNION ALL
                    /* 차변 : B18:현금_사업장매출 */
                    SELECT  '7A'                        SLIP_TYPE
                            ,'1'                        DR_CR_CLASS
                            ,RD.ACCT_CD                 D_ACCT_CD
                            ,''                         C_ACCT_CD
                            ,NVL(SUM(RD.RECEIVE_AMT),0) D_AMT
                            ,0                          C_AMT
                            ,RM.MU_CD                   MU_CD
                            ,RM.CC_CD                   CC_CD
                            ,TO_CHAR(RM.CUST_CD)        CUST_CD
                            ,''                         VAT_CLASS
                            ,4
                            ,TO_CHAR(LAST_DAY(TO_DATE(:slipMon || '01','YYYYMMDD')),'YYYYMMDD') WITHDRAW_SCHD_DATE
                            ,SUBSTR(RM.RECEIVE_DATE,0,6) OCCUR_DATE
                            ,''				            CARD_DATE
                            ,RD.JOURNALZ_YN             JOURNALZ_YN
                            ,RD.JOURNALZ_NUM            JOURNALZ_NUM
                            ,RM.CC_CD
                    FROM    SLA_AR_RECEIVE_MST RM
                            ,SLA_AR_RECEIVE_DETAIL RD
                    WHERE   RM.RECEIVE_NUM = RD.RECEIVE_NUM
                    AND     RM.RECEIVE_TYPE_CD = 'B18'
                    AND     RM.RECEIVE_OCCUR_CLASS NOT IN ('RO03','RO04','RO05')
                    AND     RM.RECD_STATUS = 'L'
                    AND     NVL(RD.JOURNALZ_YN,'N') = 'N'
                    AND     SUBSTR(RM.RECEIVE_DATE,0,6) = :slipMon
                    AND     RM.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',RM.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',RM.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     RM.CC_CD = :ccCd
                </#if>
                    GROUP BY RD.ACCT_CD
                            ,RM.MU_CD
                            ,RM.CC_CD
                            ,RM.CUST_CD
                            ,SUBSTR(RM.RECEIVE_DATE,0,6)
                            ,RD.JOURNALZ_YN
                            ,RD.JOURNALZ_NUM                            
                    UNION ALL
                    /* 차변 : 46117040:판매장려금 */
                    SELECT  '7A'                        SLIP_TYPE
                            ,'1'                        DR_CR_CLASS
                            ,RD.ACCT_CD                 D_ACCT_CD
                            ,''                         C_ACCT_CD
                            ,NVL(SUM(RD.RECEIVE_AMT),0) D_AMT
                            ,0                          C_AMT
                            ,RM.MU_CD                   MU_CD
                            ,RM.CC_CD                   CC_CD
                            ,TO_CHAR(RM.CUST_CD)        CUST_CD
                            ,''                         VAT_CLASS
                            ,5     SORT
                            ,TO_CHAR(LAST_DAY(TO_DATE(:slipMon || '01','YYYYMMDD')),'YYYYMMDD') WITHDRAW_SCHD_DATE
                            ,SUBSTR(RM.RECEIVE_DATE,0,6) OCCUR_DATE
                            ,''				            CARD_DATE
                            ,RD.JOURNALZ_YN             JOURNALZ_YN
                            ,RD.JOURNALZ_NUM            JOURNALZ_NUM
                            ,RM.CC_CD
                    FROM    SLA_AR_RECEIVE_MST RM
                            ,SLA_AR_RECEIVE_DETAIL RD
                    WHERE   RM.RECEIVE_NUM = RD.RECEIVE_NUM
                    AND     RM.RECEIVE_TYPE_CD = 'B20'
                    AND     RM.RECEIVE_OCCUR_CLASS NOT IN ('RO03','RO04','RO05')
                    AND     RM.RECD_STATUS = 'L'
                    AND     NVL(RD.JOURNALZ_YN,'N') = 'N'
                    AND     SUBSTR(RM.RECEIVE_DATE,0,6) = :slipMon
                    AND     RM.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',RM.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',RM.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     RM.CC_CD = :ccCd
                </#if>
                    GROUP BY RD.ACCT_CD
                            ,RM.MU_CD
                            ,RM.CC_CD
                            ,RM.CUST_CD
                            ,SUBSTR(RM.RECEIVE_DATE,0,6)
                            ,RD.JOURNALZ_YN
                            ,RD.JOURNALZ_NUM                            
                    UNION ALL                    
                    /* 차변 : 공제금액 */
                    SELECT  '7A'
                            ,'1'
                            ,DE.ACCT_CD
                            ,''
                            ,NVL(SUM(DE.DEDUC_AMT),0)
                            ,0
                            ,RM.MU_CD
                            --,RM.CC_CD
                            ,DECODE((SELECT SET1 FROM   SCC_COMMON_CODE A WHERE  A.GROUP_CODE = '신용카드수수료귀속' AND A.USE_YN = 'Y' AND A.CODE_NAME = RM.CC_CD),NULL,RM.CC_CD,(SELECT SET1 FROM   SCC_COMMON_CODE A WHERE  A.GROUP_CODE = '신용카드수수료귀속' AND A.USE_YN = 'Y' AND A.CODE_NAME = RM.CC_CD)) CC_CD
                            ,TO_CHAR(RM.CUST_CD)
                            ,''
                            ,6
                            ,TO_CHAR(LAST_DAY(TO_DATE(:slipMon || '01','YYYYMMDD')),'YYYYMMDD') AS WITHDRAW_SCHD_DATE
                            ,SUBSTR(RM.RECEIVE_DATE,0,6)
                            ,''
                            ,NVL(DE.JOURNALZ_YN,'N')
                            ,DE.JOURNALZ_NUM
                            ,RM.CC_CD 
                            --,DECODE((SELECT SET1 FROM   SCC_COMMON_CODE A WHERE  A.GROUP_CODE = '신용카드수수료귀속' AND A.USE_YN = 'Y' AND A.CODE_NAME = RM.CC_CD),NULL,RM.CC_CD,(SELECT SET1 FROM   SCC_COMMON_CODE A WHERE  A.GROUP_CODE = '신용카드수수료귀속' AND A.USE_YN = 'Y' AND A.CODE_NAME = RM.CC_CD)) CC_CD
                    FROM    SLA_AR_RECEIVE_MST RM
                            ,SLA_RECEIVE_DEDUC_ARTICLE DE
                    WHERE   RM.RECEIVE_NUM = DE.RECEIVE_NUM
                    AND     RM.RECD_STATUS = 'L'
                    AND     DE.RECD_STATUS = 'L'
                    AND     NVL(DE.JOURNALZ_YN,'N') = 'N'
                    AND     RM.RECEIVE_OCCUR_CLASS NOT IN ('RO03','RO04','RO05')
                    AND     SUBSTR(RM.RECEIVE_DATE,0,6) = :slipMon
                    AND     RM.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',RM.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',RM.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     RM.CC_CD = :ccCd
                </#if>
                    GROUP BY DE.ACCT_CD
                            ,RM.MU_CD
                            ,RM.CC_CD
                            ,RM.CUST_CD
                            ,SUBSTR(RM.RECEIVE_DATE,0,6)
                            ,NVL(DE.JOURNALZ_YN,'N')
                            ,DE.JOURNALZ_NUM

                    /* 대변 : 외상매출금_FO */
                    UNION ALL
                    SELECT  '7A'
                            ,'2'
                            ,''
                            ,AR.ACCT_CD
                            ,0
                            ,NVL(SUM(RD.RECEIVE_AMT),0)
                            ,AR.MU_CD
                            ,RM.CC_CD
                            ,TO_CHAR(AR.CUST_CD)
                            ,''
                            ,9
                            ,NVL(AR.WITHDRAW_SCHD_DATE, TO_CHAR(LAST_DAY(TO_DATE(:slipMon || '01','YYYYMMDD')),'YYYYMMDD')) AS WITHDRAW_SCHD_DATE
                            ,SUBSTR(AR.OCCUR_DATE,1,6)
                            ,DECODE(AR.ACCT_CD,'11204014',AR.OCCUR_DATE,'') OCCUR_DATE
                            ,NVL(RD.JOURNALZ_YN,'N')
                            ,RD.JOURNALZ_NUM
                            ,RM.CC_CD
                    FROM    SLA_AR_MST AR
                            ,SLA_AR_RECEIVE_DETAIL RD
                            ,SLA_AR_RECEIVE_MST RM
                    WHERE   AR.AR_NUM = RD.AR_NUM
                    AND     RM.RECEIVE_NUM = RD.RECEIVE_NUM
                    AND     AR.RECD_STATUS = 'L'
                    AND     RD.RECD_STATUS = 'L'
                    AND     RM.RECD_STATUS = 'L'
                    AND     NVL(RD.JOURNALZ_YN,'N') = 'N'
                    AND     AR.AR_TYPE_CD NOT IN ('A04')
                    --입금유형 추가 B35(미지급금대체), B36(선수금 마일리지) 20200519 김호석
                    AND     RM.RECEIVE_TYPE_CD NOT IN ('B03', 'B05','B07','B08','B12','B16','B17','B21','B22','B23','B24','B25','B26','B27','B28','B29','B30','B31','B32','B33','B35','B36')
                    AND     RD.ACCT_CD NOT IN ('90005020')
                    AND     SUBSTR(RD.RECEIVE_DATE,0,6) = :slipMon
                    AND     AR.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',RM.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',RM.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     RM.CC_CD = :ccCd
                </#if>
                    GROUP BY AR.ACCT_CD
                            ,AR.MU_CD
                            ,RM.CC_CD
                            ,AR.CUST_CD
                            ,SUBSTR(AR.OCCUR_DATE,1,6)
                            ,AR.WITHDRAW_SCHD_DATE
                            ,NVL(RD.JOURNALZ_YN,'N')
                            ,RD.JOURNALZ_NUM
                            ,DECODE(AR.ACCT_CD,'11204014',AR.OCCUR_DATE,'')                           
                    ) M, HLDC_ST_ACCOUNT_V D, HLDC_ST_ACCOUNT_V C, HLDC_SC_DEPT_V A, ST_CUST B--, (SELECT * FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'SLIP_TYPE') E
                    WHERE   1=1
                      AND M.D_ACCT_CD = D.ACCTCD(+)
                      AND M.C_ACCT_CD = C.ACCTCD(+)
                      AND M.CUST_CD   = B.CUSTCD
                      AND M.CC_CD     = A.CC_CD
                    ORDER BY M.CC_CD_ORG, M.DR_CR_CLASS, M.SORT, M.D_ACCT_CD, M.C_ACCT_CD 
        ]]></statement>

	<!-- 7B:채권 이관
		11202010    외상매출금_FO(-) 100
		11202010    외상매출금_FO 100
	-->
	<statement name="selectSlipList7B" type="select"><![CDATA[
            /* 7B:채권 이관 */
            SELECT  M.SLIP_TYPE
                    ,SCC_CODE_NM('SLIP_TYPE', M.SLIP_TYPE) AS SLIP_TYPE_NM
                    ,M.DR_CR_CLASS
                    ,M.D_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.D_ACCT_CD) D_ACCT_NM
                    ,M.C_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.C_ACCT_CD) C_ACCT_NM
                    ,M.D_AMT
                    ,M.C_AMT
                    ,M.MU_CD
                    ,SCC_MU_NM_FUN(M.MU_CD) MU_NM
                    ,M.CC_CD
                    ,SCC_CC_NM_FUN(M.CC_CD) CC_NM
                    ,SCC_GET_SAP_CUST_CD(M.CUST_CD) SAP_CUST_CD
                    ,M.CUST_CD
                    ,(SELECT DISTINCT NM.CUSTNM FROM ST_CUST NM WHERE NM.CUSTCD = M.CUST_CD) CUST_NM
                    ,M.SORT
                    ,DECODE(M.VAT_CLASS,'X',NULL,M.VAT_CLASS) VAT_CLASS
                    ,'' WITHDRAW_SCHD_DATE
                    ,M.CARD_DATE
                    ,'' SYS_CLASS
                    ,M.CC_CD_ORG
                    ,M.CUST_CD_ORG
                    ,'' TAX_SHET_NUM
                    ,(SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = M.CC_CD) SUB_UPJANG_NUM
                    ,M.OCCUR_DATE
                    ,M.RECEIVE_TYPE_CD
                    ,M.JOURNALZ_YN
                    ,M.JOURNALZ_NUM
                    ,M.AR_ALT_NUM
            FROM    (
                    /* 차변 : 11202010:외상매출금_FO */
                    SELECT  '7B'                                    SLIP_TYPE
                            ,'1'                                    DR_CR_CLASS
                            ,AR.ACCT_CD                             D_ACCT_CD
                            ,''                                     C_ACCT_CD
                            ,NVL(AR.AR_AMT,0)                       D_AMT
                            ,0                                      C_AMT
                            ,AR.MU_CD                               MU_CD
                            ,AR.CC_CD                               CC_CD
                            ,RD.CC_CD                               CC_CD_ORG
                            ,TO_CHAR(AR.CUST_CD)                    CUST_CD
                            ,''                                     VAT_CLASS
                            ,TO_NUMBER(ROWNUM||'1')                 SORT
                            ,''                                     WITHDRAW_SCHD_DATE
                            ,TO_CHAR(NVL(AR.CUST_CD,RD.CUST_CD))    CUST_CD_ORG
                            --지정번호에 실제 채권 발생월이 들어가야해서 변경 20160705 처리자:맹수영 요청자:박용수 (CH201607_00058)
                            -- ,SUBSTR(RD.RECEIVE_DATE,1,6)            OCCUR_DATE
                            ,SUBSTR(AR.OCCUR_DATE,1,6)            OCCUR_DATE 
                            ,RM.RECEIVE_TYPE_CD                     RECEIVE_TYPE_CD
                            ,AR.OCCUR_DATE                          CARD_DATE
                            ,NVL(RD.JOURNALZ_YN,'N')                JOURNALZ_YN
                            ,RD.JOURNALZ_NUM                        JOURNALZ_NUM
                            ,RD.AR_ALT_NUM
                    FROM    SLA_AR_MST AR
                            ,SLA_AR_RECEIVE_DETAIL RD
                            ,SLA_AR_RECEIVE_MST RM
                    WHERE   AR.MNGMV_AR_NUM = RD.AR_NUM
                    AND     RD.RECEIVE_NUM = RM.RECEIVE_NUM
                    AND     AR.REF_NUM = RD.RECEIVE_NUM
                    AND     AR.RECD_STATUS = 'L'
                    AND     RD.RECD_STATUS = 'L'
                    AND     RM.RECD_STATUS = 'L'
                    --AND     RM.RECEIVE_TYPE_CD IN ('B07','B08','B16')  --B08 +,-채권의 경우 채권채무상계전표로 변경
                    AND     RM.RECEIVE_TYPE_CD IN ('B07','B16')
                    AND     NVL(RD.JOURNALZ_YN,'N') = 'N'
                    AND     SUBSTR(AR.FISCAL_DATE,0,6) = :slipMon
                    AND     AR.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',RD.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',RD.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     RD.CC_CD = :ccCd
                </#if>
                    UNION ALL
                    /* 대변 : 11202010:외상매출금_FO */
                    SELECT  '7B'
                            ,'1'
                            ,AR.ACCT_CD
                            ,''
                            ,NVL(RD.RECEIVE_AMT,0) * -1
                            ,0
                            ,AR.MU_CD
                            ,AR.CC_CD
                            ,AR.CC_CD CC_CD_ORG
                            ,TO_CHAR(AR.CUST_CD)
                            ,''
                            ,TO_NUMBER(ROWNUM||'2')
                            ,''
                            ,TO_CHAR(AR.CUST_CD)
                            ,SUBSTR(AR.OCCUR_DATE,1,6)
                            ,RD.RECEIVE_TYPE_CD
                            ,AR.OCCUR_DATE
                            ,RD.JOURNALZ_YN
                            ,RD.JOURNALZ_NUM
                            ,RD.AR_ALT_NUM
                    FROM    SLA_AR_MST AR
                            ,(
                            SELECT  D.AR_NUM
                                    ,D.RECEIVE_NUM
                                    ,D.RECEIVE_AMT
                                    ,D.RECEIVE_DATE
                                    ,M.RECEIVE_TYPE_CD
                                    ,NVL(D.JOURNALZ_YN,'N') JOURNALZ_YN
                                    ,D.JOURNALZ_NUM
                                    ,D.AR_ALT_NUM
                            FROM    SLA_AR_RECEIVE_MST M
                                    ,SLA_AR_RECEIVE_DETAIL D
                            WHERE   M.RECEIVE_NUM = D.RECEIVE_NUM
                            --AND     M.RECEIVE_TYPE_CD IN ('B07','B08','B16') --B08 +,-채권의 경우 채권채무상계전표로 변경
                            AND     M.RECEIVE_TYPE_CD IN ('B07','B16') 
                            AND     M.RECD_STATUS = 'L'
                            AND     D.RECD_STATUS = 'L'
                            AND     NVL(D.JOURNALZ_YN,'N') = 'N'
                            AND     SUBSTR(D.RECEIVE_DATE,0,6) = :slipMon
                            AND     D.MU_CD = :muCd
                        <#if tmCd?has_content>
                            AND     (SCC_GET_TM_BY_CC('CODE',D.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',D.CC_CD) = :tmCd)
                        </#if>
                        <#if ccCd?has_content>
                            AND     D.CC_CD = :ccCd
                        </#if>
                            ) RD
                    WHERE   AR.AR_NUM = RD.AR_NUM
                    AND     AR.RECD_STATUS = 'L'
                    AND     SUBSTR(RD.RECEIVE_DATE,0,6) = :slipMon
                    AND     AR.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',AR.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',AR.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     AR.CC_CD = :ccCd
                </#if>
                    ) M
                    WHERE   1=1
                    --M.CC_CD 정렬조건 맨앞에 추가 20181206 김호석, CC별로 전표 생성되므로 정렬조건이 없으면 같은 CC로 2번 이상 전표번호가 생성되면 업데이트건수가 없어 중복체크가 어려움
                    --ORDER BY M.CC_CD, M.RECEIVE_TYPE_CD, M.AR_ALT_NUM, DECODE(M.RECEIVE_TYPE_CD,'B07',M.CUST_CD_ORG,M.CC_CD_ORG), M.D_AMT
                    --정렬조건 수정 팀전체 생성 시 같은 CC로 2번 전표번호 생성 방지(대량 채권이관 시 문제 발생) 20200902 김호석
                    ORDER BY M.CC_CD_ORG, DECODE(M.RECEIVE_TYPE_CD,'B16',M.CUST_CD_ORG,M.CC_CD_ORG), M.D_AMT
                   
        ]]></statement>

	<!-- 7C:선수금 발생 관리
		21401110    가수금_수익금
		11204011    미수금_신용카드_일반
		11101012    현금_사업장매출
		21401020    선수금_사업장
		21405000    매출부가세
	-->
	<statement name="selectSlipList7C" type="select">
		/*+ com.hwfs.sm.srm.dao.SapSlipUploadDAO.selectSlipList7C */
		<![CDATA[
            /* 7C:선수금 발생 관리 */
            SELECT  M.SLIP_TYPE
                    ,SCC_CODE_NM('SLIP_TYPE', M.SLIP_TYPE) AS SLIP_TYPE_NM
                    ,M.DR_CR_CLASS
                    ,M.D_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.D_ACCT_CD) D_ACCT_NM
                    ,M.C_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.C_ACCT_CD) C_ACCT_NM
                    ,M.D_AMT
                    ,M.C_AMT
                    ,M.MU_CD
                    ,SCC_MU_NM_FUN(M.MU_CD) MU_NM
                    ,M.CC_CD
                    ,SCC_CC_NM_FUN(M.CC_CD) CC_NM
                    ,SCC_GET_SAP_CUST_CD(M.CUST_CD) SAP_CUST_CD
                    ,M.CUST_CD
                    ,(SELECT DISTINCT NM.CUSTNM FROM ST_CUST NM WHERE NM.CUSTCD = M.CUST_CD) CUST_NM
                    ,M.SORT
                    ,DECODE(M.VAT_CLASS,'X','',M.VAT_CLASS) VAT_CLASS
                    ,M.WITHDRAW_SCHD_DATE
                    ,M.CARD_DATE
                    ,(SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = M.CC_CD) SUB_UPJANG_NUM
                    ,M.OCCUR_DATE
                    ,M.JOURNALZ_YN
                    ,M.JOURNALZ_NUM
                    ,'' CUST_CD_ORG
                    ,M.CC_CD CC_CD_ORG
            FROM    (
                    /* 차변 : 11204011 : 미수금_신용카드_일반 */
                    SELECT  TO_CHAR(M.CUST_CD)              AS CUST_CD
                            ,'7C'                           AS SLIP_TYPE
                            ,'1'                            AS DR_CR_CLASS
                            ,M.ACCT_CD                      AS D_ACCT_CD
                            ,NULL                           AS C_ACCT_CD
                            ,SUM(M.AR_AMT)                  AS D_AMT
                            ,0                              AS C_AMT
                            ,M.MU_CD                        AS MU_CD
                            ,M.CC_CD                        AS CC_CD
                            ,1                              AS SORT
                            ,NULL                           AS VAT_CLASS
                            ,NULL                           AS WITHDRAW_SCHD_DATE
                            ,SUBSTR(M.OCCUR_DATE,0,6)       AS OCCUR_DATE
                            ,M.OCCUR_DATE                   AS CARD_DATE
                            ,NVL(M.JOURNALZ_YN,'N')            AS JOURNALZ_YN
                            ,M.JOURNALZ_NUM                    AS JOURNALZ_NUM
                    FROM    SLA_AR_MST M
                            ,SLA_ADVANCE_RECEIVE_WAY W
                    WHERE   M.AR_NUM = W.AR_NUM
                    AND     W.RECEIVE_TYPE_CD IN ('AO01','AO05','AO06','AO09')	--,'AO07','AO08'
                    AND     M.RECD_STATUS = 'L'
                    AND     W.RECD_STATUS = 'L'
                    AND     NVL(M.JOURNALZ_YN,'N') = 'N'
                    AND     SUBSTR(M.OCCUR_DATE,0,6) = :slipMon
                    AND     M.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     M.CC_CD = :ccCd
                </#if>
                    GROUP BY M.CUST_CD
                            ,M.ACCT_CD
                            ,M.MU_CD
                            ,M.CC_CD
                            ,M.OCCUR_DATE
                            ,NVL(M.JOURNALZ_YN,'N')
                            ,M.JOURNALZ_NUM
                    UNION ALL
                    /* 차변 : 21401110 : 가수금_수익금 */
                    SELECT  TO_CHAR(W.CUST_CD)              AS CUST_CD
                            ,'7C'                           AS SLIP_TYPE
                            ,'1'                            AS DR_CR_CLASS
                            ,CASE WHEN M.ACCT_CD IN  ('21401030', '21401070') THEN
                            	NVL((SELECT DECODE(BANK_ACCT_TYPE, 'A', '21401110', '21401120') FROM SLA_SAP_SUSPENSE_INFO S, SLA_SAP_BANK_ACCT_NO B WHERE S.BANK_ACCT_NO = B.BANK_ACCT_NO AND S.SAP_SUSPENSE_NUM = M.SAP_SUSPENSE_NUM), '21401110')
                             ELSE M.ACCT_CD
                             END AS D_ACCT_CD
                            ,NULL                           AS C_ACCT_CD
                            ,SUM(M.ALT_AMT)                 AS D_AMT
                            ,0                              AS C_AMT
                            ,M.MU_CD                        AS MU_CD
                            ,M.CC_CD                        AS CC_CD
                            ,2                              AS SORT
                            ,NULL                           AS VAT_CLASS
                            ,NULL                           AS WITHDRAW_SCHD_DATE
                            ,M.SAP_SUSPENSE_NUM             AS OCCUR_DATE		--SUBSTR(M.ALT_DATE,1,6)
                            ,NULL                           AS CARD_DATE
                            ,NVL(M.JOURNALZ_YN,'N')            AS JOURNALZ_YN
                            ,M.JOURNALZ_NUM
                    FROM    SLA_SAP_SUSPENSE_ALT_DETAIL M
                            ,SLA_ADVANCE_RECEIVE_WAY W
                    WHERE   M.ALT_NUM = W.IMNO_ALT_NUM
                    AND     W.RECEIVE_TYPE_CD IN ('AO01','AO05','AO06','AO09')	--,'AO07','AO08'
                    AND     M.RECD_STATUS = 'L'
                    AND     W.RECD_STATUS = 'L'
                    AND     NVL(M.JOURNALZ_YN,'N') = 'N'
                    AND     SUBSTR(M.ALT_DATE,0,6) = :slipMon
                    AND     M.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     M.CC_CD = :ccCd
                </#if>
                    GROUP BY W.CUST_CD
                            ,M.ACCT_CD
                            ,M.MU_CD
                            ,M.CC_CD
                            ,M.SAP_SUSPENSE_NUM		--SUBSTR(M.ALT_DATE,0,6)
                            ,NVL(M.JOURNALZ_YN,'N')
                            ,M.JOURNALZ_NUM
                    UNION ALL
                    /* 차변 : 11101012 : 현금_사업장매출 */
                    SELECT  TO_CHAR(M.CUST_CD)              AS CUST_CD
                            ,'7C'                           AS SLIP_TYPE
                            ,'1'                            AS DR_CR_CLASS
                            ,M.ACCT_CD                      AS D_ACCT_CD
                            ,NULL                           AS C_ACCT_CD
                            ,SUM(M.OCCUR_AMT)               AS D_AMT
                            ,0                              AS C_AMT
                            ,M.MU_CD                        AS MU_CD
                            ,M.CC_CD                        AS CC_CD
                            ,3                              AS SORT
                            ,NULL                           AS VAT_CLASS
                            ,NULL                           AS WITHDRAW_SCHD_DATE
                            ,SUBSTR(M.OCCUR_DATE,0,6)       AS OCCUR_DATE
                            ,NULL                           AS CARD_DATE
                            ,NVL(M.JOURNALZ_YN,'N')            AS JOURNALZ_YN
                            ,M.JOURNALZ_NUM                    AS JOURNALZ_NUM
                    FROM    SLA_SALES_CASH_OCCUR_INFO M
                            ,SLA_ADVANCE_RECEIVE_WAY W
                    WHERE   M.SALES_CASH_NUM = W.SALES_CASH_NUM
                    AND     W.RECEIVE_TYPE_CD IN ('AO01','AO05','AO06','AO09')	--,'AO07','AO08'
                    AND     M.RECD_STATUS = 'L'
                    AND     W.RECD_STATUS = 'L'
                    AND     NVL(M.JOURNALZ_YN,'N') = 'N'
                    AND     SUBSTR(M.OCCUR_DATE,0,6) = :slipMon
                    AND     M.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     M.CC_CD = :ccCd
                </#if>
                    GROUP BY M.CUST_CD
                            ,M.ACCT_CD
                            ,M.MU_CD
                            ,M.CC_CD
                            ,SUBSTR(M.OCCUR_DATE,0,6)
                            ,NVL(M.JOURNALZ_YN,'N')
                            ,M.JOURNALZ_NUM
                    UNION ALL
                    /* 대변 : 21401020 : 선수금_사업장 */
                    SELECT  TO_CHAR(M.CUST_CD)              AS CUST_CD
                            ,'7C'                           AS SLIP_TYPE
                            ,'2'                            AS DR_CR_CLASS
                            ,NULL                           AS D_ACCT_CD
                            ,M.ACCT_CD                      AS C_ACCT_CD
                            ,0                              AS D_AMT
                            ,SUM(M.OCCUR_SUPPLY_AMT)        AS C_AMT
                            ,M.MU_CD                        AS MU_CD
                            ,M.CC_CD                        AS CC_CD
                            ,4                              AS SORT
                            ,NULL                       	AS VAT_CLASS
                            ,NULL                           AS WITHDRAW_SCHD_DATE
                            ,SUBSTR(M.OCCUR_DATE,0,6)       AS OCCUR_DATE
                            ,NULL                           AS CARD_DATE
                            ,NVL(M.JOURNALZ_YN,'N')            AS JOURNALZ_YN
                            ,M.JOURNALZ_NUM                    AS JOURNALZ_NUM
                    FROM    SLA_ADVANCE_MST M
                    WHERE   M.RECD_STATUS = 'L'
                    AND     NVL(M.JOURNALZ_YN,'N') = 'N'
                    AND     M.ADVANCE_OCCUR_CLASS IN ('AO01','AO05','AO06','AO09')	--,'AO07','AO08'
                    AND     SUBSTR(M.OCCUR_DATE,0,6) = :slipMon
                    AND     M.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     M.CC_CD = :ccCd
                </#if>
                    GROUP BY M.CUST_CD
                            ,M.ACCT_CD
                            ,M.MU_CD
                            ,M.CC_CD
                            ,SUBSTR(M.OCCUR_DATE,0,6)
                            ,M.VAT_CD
                            ,NVL(M.JOURNALZ_YN,'N')
                            ,M.JOURNALZ_NUM
                    UNION ALL
                    /* 대변 : 21405000 : 매출부가세 */
                    SELECT  TO_CHAR(M.CUST_CD)              AS CUST_CD
                            ,'7C'                           AS SLIP_TYPE
                            ,'2'                            AS DR_CR_CLASS
                            ,NULL                           AS D_ACCT_CD
                            ,(SELECT V.ACCT_CD FROM SLA_VAT_CD_MST V WHERE V.VAT_CD = M.VAT_CD) AS C_ACCT_CD
                            ,0                              AS D_AMT
                            ,SUM(M.OCCUR_VAT_AMT)           AS C_AMT
                            ,M.MU_CD                        AS MU_CD
                            ,M.CC_CD                        AS CC_CD
                            ,5                              AS SORT
                            ,M.VAT_CD                       AS VAT_CLASS
                            ,NULL                           AS WITHDRAW_SCHD_DATE
                            ,SUBSTR(M.OCCUR_DATE,0,6)       AS OCCUR_DATE
                            ,NULL                           AS CARD_DATE
                            ,NVL(M.JOURNALZ_YN,'N')            AS JOURNALZ_YN
                            ,M.JOURNALZ_NUM                    AS JOURNALZ_NUM
                    FROM    SLA_ADVANCE_MST M
                    WHERE   M.RECD_STATUS = 'L'
                    AND     NVL(M.JOURNALZ_YN,'N') = 'N' 
                    AND     M.ADVANCE_OCCUR_CLASS IN ('AO01','AO05','AO06','AO09')	--,'AO07','AO08'
                    AND		M.VAT_CD NOT IN ('X')
                    AND     SUBSTR(M.OCCUR_DATE,0,6) = :slipMon
                    AND     M.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     M.CC_CD = :ccCd
                </#if>
                    GROUP BY M.CUST_CD
                            ,M.ACCT_CD
                            ,M.MU_CD
                            ,M.CC_CD
                            ,SUBSTR(M.OCCUR_DATE,0,6)
                            ,M.VAT_CD
                            ,NVL(M.JOURNALZ_YN,'N')
                            ,M.JOURNALZ_NUM
                    ) M
        ORDER BY M.CC_CD, M.DR_CR_CLASS, M.SORT, M.D_ACCT_CD, M.C_ACCT_CD
        ]]>
	</statement>

	<!-- 7E:선수금이관
		21401060    선수금_선매출
		11202010    외상매출금_FO(-)
	-->
	<statement name="selectSlipList7E" type="select">
		/*+ com.hwfs.sm.srm.dao.SapSlipUploadDAO.selectSlipList7E */
		<![CDATA[
            /* 7E:선수금이관 */
            SELECT  M.SLIP_TYPE
                    ,SCC_CODE_NM('SLIP_TYPE', M.SLIP_TYPE) AS SLIP_TYPE_NM
                    ,M.DR_CR_CLASS
                    ,M.D_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.D_ACCT_CD) D_ACCT_NM
                    ,M.C_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.C_ACCT_CD) C_ACCT_NM
                    ,M.D_AMT
                    ,M.C_AMT
                    ,M.MU_CD
                    ,SCC_MU_NM_FUN(M.MU_CD) MU_NM
                    ,M.CC_CD
                    ,SCC_CC_NM_FUN(M.CC_CD) CC_NM
                    ,SCC_GET_SAP_CUST_CD(M.CUST_CD) SAP_CUST_CD
                    ,M.CUST_CD
                    ,(SELECT DISTINCT NM.CUSTNM FROM ST_CUST NM WHERE NM.CUSTCD = M.CUST_CD) CUST_NM
                    ,M.SORT
                    ,DECODE(M.VAT_CLASS,'X',NULL,M.VAT_CLASS) VAT_CLASS
                    ,M.WITHDRAW_SCHD_DATE
                    ,M.CC_CD_ORG
                    ,M.CUST_CD_ORG
                    ,(SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = M.CC_CD) SUB_UPJANG_NUM
                    ,M.OCCUR_DATE
                    ,M.ALT_TYPE_CD
                    ,M.CARD_DATE
                    ,M.JOURNALZ_YN
                    ,M.JOURNALZ_NUM
                    ,M.ADVANCE_ALT_NUM
            FROM    (
                    /* 대변 : 21401060 : 선수금_선매출(이관된 업장) */
                    SELECT  '7E'                                    SLIP_TYPE
                            ,'2'                                    DR_CR_CLASS
                            ,''                                     D_ACCT_CD
                            ,AR.ACCT_CD                             C_ACCT_CD
                            ,0                                      D_AMT
                            ,NVL(RD.APPLY_AMT,0)                    C_AMT
                            ,AR.MU_CD                               MU_CD
                            ,AR.CC_CD                               CC_CD
                            ,RD.CC_CD                               CC_CD_ORG
                            ,TO_CHAR(NVL(AR.CUST_CD,RD.CUST_CD))    CUST_CD
                            ,''                                     VAT_CLASS
                            ,TO_NUMBER(ROWNUM||'1')                 SORT
                            ,RD.ALT_DATE                            WITHDRAW_SCHD_DATE
                            ,TO_CHAR(RD.CUST_CD)                    CUST_CD_ORG
                            ,SUBSTR(AR.OCCUR_DATE,1,6)              OCCUR_DATE
                            ,RM.ALT_TYPE_CD                         ALT_TYPE_CD
                            ,AR.OCCUR_DATE                          CARD_DATE
                            ,NVL(RD.JOURNALZ_YN,'N')                JOURNALZ_YN
                            ,RD.JOURNALZ_NUM                        JOURNALZ_NUM
                            ,RD.ADVANCE_ALT_NUM
                    FROM    SLA_ADVANCE_MST AR
                            ,SLA_ADVANCE_ALT_DETAIL RD
                            ,SLA_ADVANCE_ALT_MST RM
                    WHERE   AR.MNGMV_ADVANCE_NUM = RD.ADVANCE_NUM
                    AND     AR.REF_NUM = RD.ALT_NUM
                    AND     RM.ALT_NUM = RD.ALT_NUM
                    --AND     RM.ALT_TYPE_CD IN ('G06','G07')
                    AND     RM.ALT_TYPE_CD IN ('G06','G07','G08','G09') --계정이관도 선수금이관전표에 추가 20190416 김호석
                    AND     AR.RECD_STATUS = 'L'
                    AND     RM.RECD_STATUS = 'L'
                    AND     RD.RECD_STATUS = 'L'
                    AND     NVL(RD.JOURNALZ_YN,'N') = 'N'
                    AND     SUBSTR(AR.FISCAL_DATE,0,6) = :slipMon
                 --   AND     AR.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',RD.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',RD.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     RD.CC_CD = :ccCd
                </#if>
                    UNION ALL
                    /* (-) 대변 : 11202010 : 외상매출금_FO(-)(원업장) */
                    SELECT  '7E'                        SLIP_TYPE
                            ,'2'                        DR_CR_CLASS
                            ,''                         D_ACCT_CD
                            ,AR.ACCT_CD                 C_ACCT_CD
                            ,0                          D_AMT
                            ,NVL(RD.APPLY_AMT,0) * -1   C_AMT
                            ,AR.MU_CD                   MU_CD
                            ,AR.CC_CD                   CC_CD
                            ,AR.CC_CD                   CC_CD_ORG
                            ,TO_CHAR(AR.CUST_CD)        CUST_CD
                            ,''                         VAT_CLASS
                            ,TO_NUMBER(ROWNUM||'2')     SORT
                            ,AR.OCCUR_DATE              WITHDRAW_SCHD_DATE
                            ,TO_CHAR(AR.CUST_CD)        CUST_CD_ORG
                            ,SUBSTR(AR.OCCUR_DATE,1,6)  OCCUR_DATE
                            ,RD.ALT_TYPE_CD             ALT_TYPE_CD
                            ,AR.OCCUR_DATE              CARD_DATE
                            ,RD.JOURNALZ_YN             JOURNALZ_YN
                            ,RD.JOURNALZ_NUM            JOURNALZ_NUM
                            ,RD.ADVANCE_ALT_NUM
                    FROM    SLA_ADVANCE_MST AR
                            ,(
                            SELECT  D.ALT_NUM
                                    ,D.ADVANCE_NUM
                                    ,D.APPLY_AMT
                                    ,D.ALT_DATE
                                    ,M.ALT_TYPE_CD
                                    ,D.CC_CD
                                    ,NVL(D.JOURNALZ_YN,'N') JOURNALZ_YN
                                    ,D.JOURNALZ_NUM
                                    ,D.ADVANCE_ALT_NUM
                            FROM    SLA_ADVANCE_ALT_MST M
                                    ,SLA_ADVANCE_ALT_DETAIL D
                            WHERE   M.ALT_NUM = D.ALT_NUM
                            --AND     M.ALT_TYPE_CD IN ('G06','G07')
		                    AND     M.ALT_TYPE_CD IN ('G06','G07','G08','G09') --계정이관도 선수금이관전표에 추가 20190416 김호석
                            AND     M.RECD_STATUS = 'L'
                            AND     D.RECD_STATUS = 'L'
                    		AND     NVL(D.JOURNALZ_YN,'N') = 'N'
                            AND     SUBSTR(D.ALT_DATE,0,6) = :slipMon
                    --        AND     D.MU_CD = :muCd
                        <#if tmCd?has_content>
                            AND     (SCC_GET_TM_BY_CC('CODE',D.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',D.CC_CD) = :tmCd)
                        </#if>
                        <#if ccCd?has_content>
                            AND     D.CC_CD = :ccCd
                        </#if>
                            ) RD
                    WHERE   AR.ADVANCE_NUM = RD.ADVANCE_NUM
                    AND     AR.RECD_STATUS = 'L'
                    AND     SUBSTR(RD.ALT_DATE,0,6) = :slipMon
                    AND     AR.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',AR.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',AR.CC_CD) = :tmCd)
                </#if> 
                <#if ccCd?has_content>
                    AND     AR.CC_CD = :ccCd
                </#if>
                    ) M
                    WHERE   1=1
                    --ORDER BY M.CC_CD_ORG, M.C_AMT, M.SORT, M.CC_CD, M.ALT_TYPE_CD, M.D_ACCT_CD, M.C_ACCT_CD
                    --팀전체로 생성할때 CC_CD_ORG로 구분해야하고, 선수금대체번호별 정렬 필요(향후 선수금대체번호별 전표생성 시 사용) 20190307 김호석
                    ORDER BY M.CC_CD_ORG, M.ALT_TYPE_CD, M.ADVANCE_ALT_NUM, DECODE(M.ALT_TYPE_CD,'G06',M.CUST_CD_ORG,M.CC_CD_ORG), M.C_AMT
        ]]>
	</statement>

	<!-- 급식 7F:영업현금 가수금 대체 -->
	<statement name="selectSlipList7F" type="select">
		/*+ com.hwfs.sm.srm.dao.SapSlipUploadDAO.selectSlipList7F */
		<![CDATA[
            /* 7F:영업현금 가수금 대체 */
            SELECT  M.SLIP_TYPE
                    ,SCC_CODE_NM('SLIP_TYPE', M.SLIP_TYPE) AS SLIP_TYPE_NM
                    ,M.DR_CR_CLASS
                    ,M.D_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.D_ACCT_CD) D_ACCT_NM
                    ,M.C_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.C_ACCT_CD) C_ACCT_NM
                    ,M.D_AMT
                    ,M.C_AMT
                    ,M.MU_CD
                    ,SCC_MU_NM_FUN(M.MU_CD) MU_NM
                    ,M.CC_CD
                    ,SCC_CC_NM_FUN(M.CC_CD) CC_NM
                    ,'' SAP_CUST_CD
                    ,'' CUST_CD
                    ,'' CUST_NM
                    ,M.SORT
                    ,'' VAT_CLASS
                    ,'' WITHDRAW_SCHD_DATE
                    ,'' CUST_CD_ORG
                    ,(SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = M.CC_CD) SUB_UPJANG_NUM
                    ,M.OCCUR_DATE
                    ,M.JOURNALZ_YN
                    ,M.JOURNALZ_NUM
                    ,M.CC_CD CC_CD_ORG
            FROM    (
                    SELECT  '7F'                        SLIP_TYPE
                            ,'1'                        DR_CR_CLASS
                            ,D.ACCT_CD                  D_ACCT_CD
                            ,''                         C_ACCT_CD
                            ,NVL(SUM(SA.ALT_AMT),0)     D_AMT
                            ,0                          C_AMT
                            ,M.MU_CD                    MU_CD
                            ,M.CC_CD                    CC_CD
                            ,SI.SAP_SUSPENSE_NUM        OCCUR_DATE
                            ,1                          SORT
                            ,D.JOURNALZ_YN              JOURNALZ_YN
                            ,D.JOURNALZ_NUM             JOURNALZ_NUM
                    FROM    SLA_SALES_CASH_ALT_MST M
                            ,(
                            SELECT  DISTINCT ACCT_CD
                                    ,SALES_CASH_RECEIVE_NUM
                                    ,NVL(JOURNALZ_YN,'N') JOURNALZ_YN
                                    ,JOURNALZ_NUM
                            FROM    SLA_SALES_CASH_ALT_DETAIL
                            WHERE   RECD_STATUS = 'L'
                            AND     NVL(JOURNALZ_YN,'N') = 'N'
                            AND     SUBSTR(ALT_DATE,0,6) = :slipMon
                            AND     MU_CD = :muCd
                        <#if tmCd?has_content>
                            AND     (SCC_GET_TM_BY_CC('CODE',CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',CC_CD) = :tmCd)
                        </#if>
                        <#if ccCd?has_content>
                            AND     CC_CD = :ccCd
                        </#if>
                            )  D
                            ,SLA_SAP_SUSPENSE_ALT_DETAIL SA
                            ,SLA_SAP_SUSPENSE_INFO SI
                    WHERE   M.SALES_CASH_RECEIVE_NUM = D.SALES_CASH_RECEIVE_NUM
                    AND     M.SUSPENSE_ALT_NUM = SA.ALT_NUM
                    AND     SA.SAP_SUSPENSE_NUM = SI.SAP_SUSPENSE_NUM
                    AND     M.RECD_STATUS = 'L'
                    AND     SA.RECD_STATUS = 'L'
                    AND     SUBSTR(M.ALT_DATE,0,6) = :slipMon
                    AND     M.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     M.CC_CD = :ccCd
                </#if>
                    GROUP BY D.ACCT_CD
                            ,M.MU_CD
                            ,M.CC_CD
                            ,SI.SAP_SUSPENSE_NUM
                            ,D.JOURNALZ_YN
                            ,D.JOURNALZ_NUM
                    UNION ALL
                    SELECT  '7F'                            SLIP_TYPE
                            ,'2'                            DR_CR_CLASS
                            ,''                             D_ACCT_CD
                            ,O.ACCT_CD                      C_ACCT_CD
                            ,0                              D_AMT
                            ,NVL(SUM(D.RECEIVE_AMT),0)      C_AMT
                            ,D.MU_CD                        MU_CD
                            ,D.CC_CD                        CC_CD
                            ,SUBSTR(O.OCCUR_DATE,1,6)       OCCUR_DATE
                            ,2                              SORT
                            ,NVL(D.JOURNALZ_YN,'N')         JOURNALZ_YN
                            ,D.JOURNALZ_NUM                 JOURNALZ_NUM
                    FROM    SLA_SALES_CASH_OCCUR_INFO O
                            ,SLA_SALES_CASH_ALT_DETAIL D
                            ,SLA_SALES_CASH_ALT_MST M
                    WHERE   O.SALES_CASH_NUM = D.SALES_CASH_NUM
                    AND 	D.SALES_CASH_RECEIVE_NUM = M.SALES_CASH_RECEIVE_NUM
                    AND 	M.ALT_TYPE_CD	= 'K01'
                    AND     O.RECD_STATUS = 'L'
                    AND     D.RECD_STATUS = 'L'
                    AND     M.RECD_STATUS = 'L'
                    AND     NVL(D.JOURNALZ_YN,'N') = 'N'
                    AND     SUBSTR(D.ALT_DATE,0,6) = :slipMon
                    AND     D.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',D.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',D.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     D.CC_CD = :ccCd
                </#if>
                    GROUP BY O.ACCT_CD
                            ,D.MU_CD
                            ,D.CC_CD
                            ,SUBSTR(O.OCCUR_DATE,1,6)
                            ,NVL(D.JOURNALZ_YN,'N')
                            ,D.JOURNALZ_NUM
                    ) M
                    ORDER BY M.CC_CD, M.SORT, M.D_ACCT_CD, M.C_ACCT_CD
        ]]>
	</statement>

	<!-- 7H:기타 가수금 대체 -->
	<statement name="selectSlipList7H" type="select"><![CDATA[

/* 7H:기타 가수금 대체 */											
            SELECT  
                     M.SLIP_TYPE											
                    ,(SELECT SCC_CODE_NM('SLIP_TYPE', M.SLIP_TYPE) FROM DUAL) AS SLIP_TYPE_NM -- 펑션캐싱
                    ,M.DR_CR_CLASS					
                    ,M.ALT_NUM						
                    ,M.D_ACCT_CD											
                    ,(SELECT SCC_ACCT_NM_FUN(M.D_ACCT_CD) FROM DUAL) D_ACCT_NM --펑션캐싱
                    ,M.C_ACCT_CD											
                    ,(SELECT SCC_ACCT_NM_FUN(M.C_ACCT_CD) FROM DUAL) C_ACCT_NM	-- 펑션캐싱
                    ,M.D_AMT											
                    ,M.C_AMT											
                    ,M.MU_CD											
                    ,(SELECT SCC_MU_NM_FUN(M.MU_CD) FROM DUAL) MU_NM --펑션캐싱
                    ,M.CC_CD											
                    ,(SELECT SCC_CC_NM_FUN(M.CC_CD) FROM DUAL) CC_NM
                    ,(SELECT SCC_GET_SAP_CUST_CD(M.CUST_CD) FROM DUAL) SAP_CUST_CD											
                    ,M.CUST_CD											
                    ,(SELECT DISTINCT NM.CUSTNM FROM ST_CUST NM WHERE NM.CUSTCD = M.CUST_CD) CUST_NM											
                    ,M.SORT											
                    ,'' TAX_SHET_NUM											
                    ,'' VAT_CLASS											
                    ,'' WITHDRAW_SCHD_DATE											
                    ,'' CUST_CD_ORG											
                    ,M.SUSPENSE_ALT_TYPE											
                    ,(SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = M.CC_CD) SUB_UPJANG_NUM											
                    ,M.OCCUR_DATE											
                    ,M.JOURNALZ_YN											
                    ,M.JOURNALZ_NUM											
                    ,M.CC_CD_ORG
                    --외식사업부 인경우 예외처리 호텔부문일때만 NEXT_BU_CD 추가
                    ,DECODE(M.MU_CD,'2003', DECODE(SUBSTR(M.CC_CD,0,1),'4', '3000','') ,'') NEXT_BU_CD                    											
                    --,DECODE(SUBSTR(M.CC_CD,0,1),'1','1000','2','1000','4', '3000','') NEXT_BU_CD											
            FROM    (											
                    /* 차변 - (건별) 가수금_수익금:21401110 (이자수익) */											
                    SELECT  '7H'                    SLIP_TYPE											
                            ,'1'                    DR_CR_CLASS			
                            ,ALT_NUM								
                            ,'21401110'	            D_ACCT_CD										
                            ,''                     C_ACCT_CD											
                            ,NVL(ALT_AMT,0)         D_AMT											
                            ,0                      C_AMT											
                            ,MU_CD                  MU_CD											
                            ,CC_CD                  CC_CD											
                            ,1                      SORT											
                            ,''                     CUST_CD											
                            ,SUSPENSE_ALT_TYPE      SUSPENSE_ALT_TYPE											
                            ,SAP_SUSPENSE_NUM       OCCUR_DATE											
                            ,NVL(JOURNALZ_YN,'N')   JOURNALZ_YN											
                            ,JOURNALZ_NUM           JOURNALZ_NUM											
                            ,CC_CD                  CC_CD_ORG											
                    FROM    SLA_SAP_SUSPENSE_ALT_DETAIL	M
                    ,(/* 펑션 조건 절 및 인덱스 사용 탐색을 위한 인라인뷰 생성 */ 
                       SELECT /*+ NO_MERGE */
                           M.ROWID AS RID
                       FROM SLA_SAP_SUSPENSE_ALT_DETAIL	M
                       WHERE  ALT_DATE BETWEEN :slipMon || '01' AND :slipMon || '31'
                    AND     MU_CD = :muCd
                <#if tmCd?has_content>
                    AND   ((SELECT SCC_GET_TM_BY_CC('CODE',CC_CD) FROM DUAL) = :tmCd OR (SELECT SCC_GET_PT_BY_CC('CODE',CC_CD) FROM DUAL) = :tmCd) 
                </#if>
                <#if ccCd?has_content>
                    AND     CC_CD = :ccCd
                </#if>
                    ) AA
                    WHERE   RECD_STATUS = 'L'											
                    AND     SUSPENSE_ALT_TYPE IN ('L01', 'L02', 'L10')											
                    AND     NVL(JOURNALZ_YN,'N') = 'N'											
--                    AND     SUBSTR(ALT_DATE,0,6) = '201610'		
--                    AND     MU_CD = '2002'										
--                    AND     (SCC_GET_TM_BY_CC('CODE',CC_CD) = 'CDGA' OR SCC_GET_PT_BY_CC('CODE',CC_CD) = 'CDGA')				
                     AND AA.RID = M.ROWID
                    UNION ALL											
                    /* 대변 - (SUM) 이자수익_은행:45201011 */											
                    SELECT  '7H'											
                            ,'2'		
                            ,ALT_NUM									
                            ,''											
                            ,ACCT_CD											
                            ,0											
                            ,NVL(SUM(ALT_AMT),0)											
                            ,MU_CD											
                            ,CC_CD											
                            ,2											
                            ,''											
                            ,SUSPENSE_ALT_TYPE											
                            ,SUBSTR(RECEIVE_DATE,0,6)											
                            ,NVL(JOURNALZ_YN,'N') JOURNALZ_YN											
                            ,JOURNALZ_NUM											
                            ,CC_CD                  CC_CD_ORG											
                    FROM    SLA_SAP_SUSPENSE_ALT_DETAIL	M
                     ,(/* 펑션 조건 절 및 인덱스 사용 탐색을 위한 인라인뷰 생성 */ 
                       SELECT /*+ NO_MERGE */
                           M.ROWID AS RID
                       FROM SLA_SAP_SUSPENSE_ALT_DETAIL	M
                       WHERE  ALT_DATE BETWEEN :slipMon || '01' AND :slipMon || '31'
                    AND     MU_CD = :muCd
                <#if tmCd?has_content>
                    AND    ((SELECT SCC_GET_TM_BY_CC('CODE',CC_CD) FROM DUAL) = :tmCd OR (SELECT SCC_GET_PT_BY_CC('CODE',CC_CD) FROM DUAL) = :tmCd) 
                </#if>
                <#if ccCd?has_content>
                    AND     CC_CD = :ccCd
                </#if>
                    ) AA
                    WHERE   RECD_STATUS = 'L'											
                    AND     SUSPENSE_ALT_TYPE IN ('L01', 'L02', 'L10')											
                    AND     NVL(JOURNALZ_YN,'N') = 'N'											
--                    AND     SUBSTR(ALT_DATE,0,6) = '201610'				                  
--                    AND     MU_CD = '2002'											
--                    AND     (SCC_GET_TM_BY_CC('CODE',CC_CD) = 'CDGA' OR SCC_GET_PT_BY_CC('CODE',CC_CD) = 'CDGA')											
                    AND AA.RID = M.ROWID
                    GROUP BY ACCT_CD	
                    		,ALT_NUM										
                            ,MU_CD											
                            ,CC_CD											
                            ,SUSPENSE_ALT_TYPE											
                            ,SUBSTR(RECEIVE_DATE,0,6)											
                            ,NVL(JOURNALZ_YN,'N')											
                            ,JOURNALZ_NUM											
                    UNION ALL											
                    /* 차변 - (건별) 선수금 */											
                    SELECT   
                           '7H' SLIP_TYPE											
                            ,'1'			
                            ,AD.ALT_NUM								
                            --,'21401020'											
                            --선수금 원 계정을 가져오도록 변경 20160502 요청자:이동준 처리자:맹수영											
                            ,AM.ACCT_CD											
                            ,''											
                            ,NVL(AD.APPLY_AMT,0)											
                            ,0											
                            ,AM.MU_CD											
                            ,AM.CC_CD											
                            ,3											
                            ,TO_CHAR(AM.CUST_CD)											
                            ,'L02'											
                            ,SUBSTR(AM.OCCUR_DATE,0,6)											
                            ,AD.JOURNALZ_YN											
                            ,AD.JOURNALZ_NUM											
                            ,AM.CC_CD                  CC_CD_ORG											
                    FROM    SLA_ADVANCE_MST AM											
                            ,(											
                            SELECT   D.ACCT_CD											
                                    ,D.ALT_NUM											
                                    ,D.ADVANCE_NUM											
                                    ,D.APPLY_AMT											
                                    ,D.ALT_DATE											
                                    ,NVL(D.JOURNALZ_YN,'N') JOURNALZ_YN											
                                    ,D.JOURNALZ_NUM											
                            FROM    SLA_ADVANCE_ALT_MST M											
                                    ,SLA_ADVANCE_ALT_DETAIL D	
                                    ,(
                                    SELECT /*+ NO_MERGE */
                                      D.ROWID AS RID 
                                    FROM SLA_ADVANCE_ALT_DETAIL D	
                                     WHERE     D.MU_CD = :muCd					
                                    AND     D.ALT_DATE BETWEEN :slipMon || '01' AND :slipMon || '31' -- 추가된 인덱스 사용을 위해 
                <#if tmCd?has_content>
                    AND   ((SELECT SCC_GET_TM_BY_CC('CODE',CC_CD) FROM DUAL) = :tmCd OR (SELECT SCC_GET_PT_BY_CC('CODE',CC_CD) FROM DUAL) = :tmCd) 
                </#if>
                <#if ccCd?has_content>
                    AND     CC_CD = :ccCd
                </#if>
                                     ORDER BY D.ROWID
                                    ) DD                                  
                            WHERE   M.ALT_NUM = D.ALT_NUM											
                            AND     M.ALT_TYPE_CD IN ('G01')											
                            AND     M.ADVANCE_ALT_OCCUR_CLASS NOT IN ('TO02')											
                            AND     M.RECD_STATUS = 'L'											
                            AND     D.RECD_STATUS = 'L'											
                            AND     NVL(D.JOURNALZ_YN,'N') = 'N'	                            
--                            AND     D.MU_CD = '2002'  --  인라인뷰로 조건위치 이동
--                            AND     ((SELECT SCC_GET_TM_BY_CC('CODE',D.CC_CD) FROM DUAL) = 'CDGA' OR (SELECT SCC_GET_PT_BY_CC('CODE',D.CC_CD) FROM DUAL) = 'CDGA') --  인라인뷰로 조건위치 이동
                            AND DD.RID = D.ROWID
                            ) AD                            
                    WHERE   AM.ADVANCE_NUM = AD.ADVANCE_NUM --(+) 아랫 조건이 이너 조인이므로 무의미확인 부탁드립니다 											
                    AND     AM.RECD_STATUS = 'L'											
                    AND     MU_CD = :muCd
                <#if tmCd?has_content>
                    AND    ((SELECT SCC_GET_TM_BY_CC('CODE',CC_CD) FROM DUAL) = :tmCd OR (SELECT SCC_GET_PT_BY_CC('CODE',CC_CD) FROM DUAL) = :tmCd) 
                </#if>
                <#if ccCd?has_content>
                    AND     CC_CD = :ccCd
                </#if>									
                /*차변 입금대체 가계정 */											
                	UNION ALL										
                											
                        SELECT '7H'                     AS SLIP_TYPE											
                         , '1'                      AS DR_CR_CLASS		
                         , M.RECEIVE_NUM 			AS ALT_NUM									
                         , D.ACCT_CD                AS D_ACCT_CD											
                         , '' 						AS D_ACCT_NM					
                         , SUM(D.RECEIVE_AMT)       AS D_AMT											
                         , 0					
                         , M.MU_CD                  AS MU_CD											
                         , M.CC_CD                  AS CC_CD											
                         , 4                        AS SORT											
						 , TO_CHAR(M.CUST_CD)       AS CUST_CD					
                         , 'B24'                    AS RECEIVE_TYPE											
                         , SUBSTR(M.RECEIVE_DATE,1,6) AS OCCUR_DATE											
                         , NVL(D.JOURNALZ_YN,'N') JOURNALZ_YN											
                         , D.JOURNALZ_NUM											
                         , M.CC_CD                  CC_CD_ORG											
                      FROM SLA_AR_RECEIVE_MST M											
                         , SLA_AR_RECEIVE_DETAIL D	
                         ,(
                          SELECT /*+ NO_MERGE */ 
                            D.ROWID AS RID
                          FROM SLA_AR_RECEIVE_DETAIL D	
                          WHERE   D.RECEIVE_DATE BETWEEN :slipMon || '01' AND :slipMon || '31'
                    AND     MU_CD = :muCd
                <#if tmCd?has_content>
                    AND   ((SELECT SCC_GET_TM_BY_CC('CODE',CC_CD) FROM DUAL) = :tmCd OR (SELECT SCC_GET_PT_BY_CC('CODE',CC_CD) FROM DUAL) = :tmCd) 
                </#if>
                <#if ccCd?has_content>
                    AND     CC_CD = :ccCd
                </#if>
                          ORDER BY D.ROWID
                         ) AA
                     WHERE M.RECEIVE_NUM=D.RECEIVE_NUM											
                       AND M.RECEIVE_TYPE_CD IN ('B24')     -- B24:입금대체가계정											
                       AND M.RECD_STATUS='L'											
                       AND D.RECD_STATUS='L'											
                       AND NVL(D.JOURNALZ_YN,'N') = 'N'											
--                       AND SUBSTR(D.RECEIVE_DATE,0,6) = '201610' -- 조건 인라인뷰로 이동
--                       AND D.MU_CD = '2002'											
--                       AND (SCC_GET_TM_BY_CC('CODE',D.CC_CD) = 'CDGA' OR SCC_GET_PT_BY_CC('CODE',D.CC_CD) = 'CDGA')											
                       AND AA.RID = D.ROWID -- 인라인 뷰와 SLA_AR_RECEIVE_DETAIL JOIN 조건
                  GROUP BY M.CUST_CD
                  		 , M.RECEIVE_NUM										
                         , M.SYS_CLASS											
                         , D.ACCT_CD											
                         , M.MU_CD											
                         , M.CC_CD											
                         , SUBSTR(M.RECEIVE_DATE,1,6)											
                         , NVL(D.JOURNALZ_YN,'N')											
                         , D.JOURNALZ_NUM							                         
                    UNION ALL											
                    /* 차변 : 쿠폰대체가계정 */											
                    SELECT  '7H'											
                            ,'1'						
                            ,RD.RECEIVE_NUM					
                            ,RD.ACCT_CD											
                            ,''											
                            ,NVL(SUM(RD.RECEIVE_AMT),0)											
                            ,0											
                            ,RD.MU_CD											
                            ,RD.CC_CD											
                            ,10											
                            ,TO_CHAR(RD.CUST_CD)											
						             	, 'B05'                    AS RECEIVE_TYPE				
                            ,SUBSTR(RD.RECEIVE_DATE,0,6)											
                            ,NVL(RD.JOURNALZ_YN,'N')											
                            ,RD.JOURNALZ_NUM											
                            ,RM.CC_CD					AS CC_CD_ORG						
                    FROM    SLA_AR_RECEIVE_MST RM											
                            ,SLA_AR_RECEIVE_DETAIL RD
                            ,(
                            SELECT /*+ NO_MERGE */
                              RM.ROWID AS RID
                            FROM SLA_AR_RECEIVE_MST RM	
                            WHERE    RM.RECEIVE_TYPE_CD IN ('B05')											
                                AND     RM.RECEIVE_OCCUR_CLASS NOT IN ('RO03','RO04','RO05')											
                                AND     RM.RECEIVE_DATE BETWEEN :slipMon|| '01' AND :slipMon || '31'
                    AND     MU_CD = :muCd
                <#if tmCd?has_content>
                    AND  ((SELECT SCC_GET_TM_BY_CC('CODE',CC_CD) FROM DUAL) = :tmCd OR (SELECT SCC_GET_PT_BY_CC('CODE',CC_CD) FROM DUAL) = :tmCd) 
                </#if>
                <#if ccCd?has_content>
                    AND     CC_CD = :ccCd
                </#if>	
                            ) AA
                    WHERE   RM.RECEIVE_NUM = RD.RECEIVE_NUM											
                    AND     RM.RECD_STATUS = 'L'											
                    AND     RD.RECD_STATUS = 'L'											
                    AND     NVL(RD.JOURNALZ_YN,'N') = 'N'											
--                    AND     RM.RECEIVE_TYPE_CD IN ('B05')											
--                    AND     RM.RECEIVE_OCCUR_CLASS NOT IN ('RO03','RO04','RO05')											
--                    AND     SUBSTR(RM.RECEIVE_DATE,0,6) = '201610'											
--                    AND     RM.MU_CD = '2002'											
--                    AND     (SCC_GET_TM_BY_CC('CODE',RM.CC_CD) = 'CDGA' OR SCC_GET_PT_BY_CC('CODE',RM.CC_CD) = 'CDGA')											
                     AND AA.RID = RM.ROWID
                    GROUP BY RD.ACCT_CD	
                    		,RD.RECEIVE_NUM										
                            ,RD.MU_CD											
                            ,RD.CC_CD											
                            ,RD.CUST_CD											
                            ,SUBSTR(RD.RECEIVE_DATE,0,6)											
                            ,NVL(RD.JOURNALZ_YN,'N')											
                            ,RD.JOURNALZ_NUM											
                            ,RM.CC_CD                         											
                                         											
                    UNION ALL											
                        /* 대변 - (SUM) 선수금 잡이익_기타:45114050 */											
                    SELECT  '7H' SLIP_TYPE											
                            ,'2'			
                            ,AD.ALT_NUM								
                            ,''											
                            ,AD.ACCT_CD     --'45114050'											
                            ,0											
                            ,SUM(NVL(AD.ALT_SUPPLY_AMT,0) + NVL(AD.ALT_VAT_AMT,0))											
                            ,AM.MU_CD											
                            ,AM.CC_CD											
                            ,5											
                            ,TO_CHAR(AM.CUST_CD)											
                            ,'L02'											
                            ,SUBSTR(AM.OCCUR_DATE,0,6)											
                            ,AD.JOURNALZ_YN											
                            ,AD.JOURNALZ_NUM											
                            ,AM.CC_CD                  CC_CD_ORG											
                    FROM    SLA_ADVANCE_MST AM											
                            ,(											
                            SELECT  D.ACCT_CD											
                                    ,D.ALT_NUM											
                                    ,D.ADVANCE_NUM											
                                    ,D.APPLY_AMT											
                                    ,D.ALT_DATE											
                                    ,NVL(D.JOURNALZ_YN,'N') JOURNALZ_YN											
                                    ,D.JOURNALZ_NUM											
                                    ,D.ALT_SUPPLY_AMT											
                                    ,D.ALT_VAT_AMT											
                            FROM    SLA_ADVANCE_ALT_MST M											
                                    ,SLA_ADVANCE_ALT_DETAIL D	
                                    ,(
                                    SELECT /*+ NO_MERGE */
                                      D.ROWID AS RID 
                                    FROM SLA_ADVANCE_ALT_DETAIL D	
                                     WHERE  D.MU_CD = :muCd						
                                    AND     D.ALT_DATE BETWEEN :slipMon|| '01' AND :slipMon || '31' -- 추가된 인덱스 사용을 위해 
                <#if tmCd?has_content>
                    AND    ((SELECT SCC_GET_TM_BY_CC('CODE',CC_CD) FROM DUAL) = :tmCd OR (SELECT SCC_GET_PT_BY_CC('CODE',CC_CD) FROM DUAL) = :tmCd) 
                </#if>
                <#if ccCd?has_content>
                    AND     CC_CD = :ccCd
                </#if>
                                     ORDER BY D.ROWID
                                    ) DD   
                            WHERE   M.ALT_NUM = D.ALT_NUM											
                            AND     M.ALT_TYPE_CD IN ('G01')											
                            AND     M.ADVANCE_ALT_OCCUR_CLASS NOT IN ('TO02')											
                            AND     M.RECD_STATUS = 'L'											
                            AND     D.RECD_STATUS = 'L'											
                            AND     NVL(D.JOURNALZ_YN,'N') = 'N'											
--                            AND     D.MU_CD = '2002'											
--                            AND     (SCC_GET_TM_BY_CC('CODE',D.CC_CD) = 'CDGA' OR SCC_GET_PT_BY_CC('CODE',D.CC_CD) = 'CDGA')											
                             AND DD.RID = D.ROWID
                            ) AD											
                    WHERE   AM.ADVANCE_NUM = AD.ADVANCE_NUM  -- (+) AD 조건이 아우터 조인이 아니라서 의미없음 확인부탁드립니다. 											
                    AND     AM.RECD_STATUS = 'L'											
--                    AND     SUBSTR(AD.ALT_DATE,0,6) = '201610'		-- AD인라인뷰 사용									
                    AND     MU_CD = :muCd
                <#if tmCd?has_content>									
                    AND     ((SELECT SCC_GET_TM_BY_CC('CODE',AM.CC_CD) FROM DUAL) = :tmCd  OR (SELECT SCC_GET_PT_BY_CC('CODE',AM.CC_CD) FROM DUAL) = :tmCd ) -- 펑션 캐싱
                 </#if>
                <#if ccCd?has_content>
                    AND     CC_CD = :ccCd
                </#if>                   
                    GROUP BY AD.ACCT_CD		
                    		,AD.ALT_NUM									
                            ,AM.MU_CD											
                            ,AM.CC_CD											
                            ,AM.CUST_CD											
                            ,SUBSTR(AM.OCCUR_DATE,0,6)											
                            ,AD.JOURNALZ_YN											
                            ,AD.JOURNALZ_NUM		
             										
                    UNION ALL											
                   /* 대변 - (SUM) 매출부가세 가계정 */	                  
                     SELECT  '7H' SLIP_TYPE											
                            ,'2'				
                            ,AD.ALT_NUM							
                            ,''											
                            ,'90007020'											
                            ,0											
                            ,SUM(NVL(AD.ALT_VAT_AMT,0)) * -1											
                            ,AM.MU_CD											
                            ,AM.CC_CD											
                            ,5											
                            ,TO_CHAR(AM.CUST_CD)											
                            ,'L02'											
                            ,SUBSTR(AM.OCCUR_DATE,0,6)											
                            ,AD.JOURNALZ_YN											
                            ,AD.JOURNALZ_NUM											
                            ,AM.CC_CD                  CC_CD_ORG											
                    FROM    SLA_ADVANCE_MST AM											
                            ,(											
                            SELECT  D.ACCT_CD											
                                    ,D.ALT_NUM											
                                    ,D.ADVANCE_NUM											
                                    ,D.APPLY_AMT											
                                    ,D.ALT_DATE											
                                    ,NVL(D.JOURNALZ_YN,'N') JOURNALZ_YN											
                                    ,D.JOURNALZ_NUM											
                                    ,D.ALT_VAT_AMT											
                            FROM    SLA_ADVANCE_ALT_MST M											
                                    ,SLA_ADVANCE_ALT_DETAIL D
                                    ,(
                                    SELECT /*+ NO_MERGE */
                                      D.ROWID AS RID 
                                    FROM SLA_ADVANCE_ALT_DETAIL D	
                                     WHERE     D.MU_CD = :muCd						
                                    AND   D.ALT_DATE BETWEEN :slipMon || '01' AND :slipMon || '31' -- 추가된 인덱스 사용을 위해 
                                    <#if tmCd?has_content>
                                     AND   ((SELECT SCC_GET_TM_BY_CC('CODE',D.CC_CD) FROM DUAL) = :tmCd OR (SELECT SCC_GET_PT_BY_CC('CODE',D.CC_CD) FROM DUAL) = :tmCd )
                  </#if>
                <#if ccCd?has_content>
                    AND     CC_CD = :ccCd
                </#if>                                   
                                     ORDER BY D.ROWID
                                    ) DD                                    
                            WHERE   M.ALT_NUM = D.ALT_NUM											
                            AND     M.ALT_TYPE_CD IN ('G01')											
                            AND     M.ADVANCE_ALT_OCCUR_CLASS NOT IN ('TO02')											
                            AND     M.RECD_STATUS = 'L'											
                            AND     D.RECD_STATUS = 'L'											
                            AND     NVL(D.JOURNALZ_YN,'N') = 'N'											
                            AND     NVL(D.VAT_CD, 'X') NOT IN ('X')		
                            AND     D.ALT_VAT_AMT <> 0 
--                            AND     D.MU_CD = '2002'											
--                            AND     (SCC_GET_TM_BY_CC('CODE',D.CC_CD) = 'CDGA' OR SCC_GET_PT_BY_CC('CODE',D.CC_CD) = 'CDGA')											
                             AND DD.RID = D.ROWID
                            ) AD											
                    WHERE   AM.ADVANCE_NUM = AD.ADVANCE_NUM --(+)	AD 조건이 아우터 조인이 아니라서 의미없음. 확인부탁드립니다
                    AND     AM.RECD_STATUS = 'L'											
--                    AND     SUBSTR(AD.ALT_DATE,0,6) = '201610' -- AD인라인뷰 사용
                    AND     AM.MU_CD = :muCd					
                    <#if tmCd?has_content>				
                    AND     ((SELECT SCC_GET_TM_BY_CC('CODE',AM.CC_CD) FROM DUAL) =  :tmCd OR (SELECT SCC_GET_PT_BY_CC('CODE',AM.CC_CD) FROM DUAL) = :tmCd ) -- 펑션 캐싱
                 </#if>
                <#if ccCd?has_content>
                    AND     CC_CD = :ccCd
                </#if>                   
                   GROUP BY AD.ACCT_CD				
                   			,AD.ALT_NUM							
                            ,AM.MU_CD											
                            ,AM.CC_CD											
                            ,AM.CUST_CD											
                            ,SUBSTR(AM.OCCUR_DATE,0,6)											
                            ,AD.JOURNALZ_YN											
                            ,AD.JOURNALZ_NUM													               											
               /*입금대체가계정 AND 쿠폰대체가계정 - 외상매출*/											            
                    UNION ALL
               	      SELECT  
                         '7H' SLIP_TYPE											
                         , '2'                          AS DR_CR_CLASS											
                         , RD.RECEIVE_NUM 				AS ALT_NUM
                         , NULL                         AS D_ACCT_CD											
                         , AR.ACCT_CD                   AS C_ACCT_CD											
                         , 0                            AS D_AMT											
                         , SUM(RD.RECEIVE_AMT)          AS C_AMT											
                         , AR.MU_CD                     AS MU_CD											
                         , AR.CC_CD                     AS CC_CD											
                         , 6                            AS SORT											
                         , TO_CHAR(AR.CUST_CD)          AS CUST_CD											
                         , RD.RECEIVE_TYPE_CD           AS RECEIVE_TYPE											
                         , SUBSTR(AR.OCCUR_DATE,1,6) OCCUR_DATE											
                         , RD.JOURNALZ_YN											
                         , RD.JOURNALZ_NUM											
                         , AR.CC_CD                  CC_CD_ORG											
                      FROM SLA_AR_MST AR											
                         , (SELECT D.AR_NUM											
                                 , D.RECEIVE_NUM											
                                 , D.RECEIVE_AMT											
                                 , D.RECEIVE_DATE											
                                 , NVL(D.JOURNALZ_YN,'N') JOURNALZ_YN											
                                 , D.JOURNALZ_NUM											
                                 , M.RECEIVE_TYPE_CD											
                              FROM SLA_AR_RECEIVE_MST M											
                                 , SLA_AR_RECEIVE_DETAIL D                              
                             WHERE M.RECEIVE_NUM=D.RECEIVE_NUM											
                               AND M.RECEIVE_TYPE_CD IN ('B05', 'B24')     -- B24:입금대체가계정											
                               AND M.RECD_STATUS='L'											
                               AND D.RECD_STATUS='L'											
                               AND NVL(D.JOURNALZ_YN,'N') = 'N'											
--                               AND SUBSTR(D.RECEIVE_DATE,0,6) = '201610' -- 인덱스 사용 가능하게 변경	
                               AND D.RECEIVE_DATE BETWEEN  :slipMon || '01' AND  :slipMon || '31'
                               AND M.MU_CD = :muCd
                <#if tmCd?has_content>								
                               AND ((SELECT SCC_GET_TM_BY_CC('CODE',M.CC_CD) FROM DUAL) =  :tmCd  OR (SELECT SCC_GET_PT_BY_CC('CODE',M.CC_CD) FROM DUAL) =  :tmCd )
                </#if>
                <#if ccCd?has_content>
                    AND     M.CC_CD = :ccCd
                </#if>                
                            ) RD											
                     WHERE AR.AR_NUM=RD.AR_NUM											
                       AND AR.RECD_STATUS='L'											
--                       AND SUBSTR(RD.RECEIVE_DATE,0,6) = '201610' --RD내의 중복조회조건
                       AND AR.MU_CD = :muCd
                <#if tmCd?has_content>										
                       AND ((SELECT SCC_GET_TM_BY_CC('CODE',AR.CC_CD) FROM DUAL) =  :tmCd OR (SELECT SCC_GET_PT_BY_CC('CODE',AR.CC_CD) FROM DUAL) =  :tmCd)			
                 </#if>
                <#if ccCd?has_content>
                    AND     CC_CD = :ccCd
                </#if>								
                  GROUP BY AR.CUST_CD											
                         , AR.SYS_CLASS		
                         , RD.RECEIVE_NUM									
                         , AR.ACCT_CD											
                         , AR.MU_CD											
                         , AR.CC_CD											
                         , AR.WITHDRAW_SCHD_DATE											
                         , SUBSTR(AR.OCCUR_DATE,1,6)											
                         , RD.JOURNALZ_YN											
                         , RD.JOURNALZ_NUM  											
                         , RD.RECEIVE_TYPE_CD             											
             ) M											
             ORDER BY M.ALT_NUM, M.SUSPENSE_ALT_TYPE, M.CC_CD, M.SORT, M.D_ACCT_CD, M.C_ACCT_CD											
                  



]]></statement>

	<!-- 7I:쿠폰(식권)판매/교환/소멸 -->
	<statement name="selectSlipList7I" type="select"><![CDATA[
            /* 7I:쿠폰(식권)판매/교환/소멸 */
            SELECT  M.SLIP_TYPE
                    ,SCC_CODE_NM('SLIP_TYPE', M.SLIP_TYPE) AS SLIP_TYPE_NM
                    ,M.DR_CR_CLASS
                    ,M.D_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.D_ACCT_CD) D_ACCT_NM
                    ,M.C_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.C_ACCT_CD) C_ACCT_NM
                    ,M.D_AMT
                    ,M.C_AMT
                    ,M.MU_CD
                    ,SCC_MU_NM_FUN(M.MU_CD) MU_NM
                    ,M.CC_CD
                    ,SCC_CC_NM_FUN(M.CC_CD) CC_NM
                    ,SCC_GET_SAP_CUST_CD(M.CUST_CD) SAP_CUST_CD
                    ,M.CUST_CD
                    ,(SELECT DISTINCT NM.CUSTNM FROM ST_CUST NM WHERE NM.CUSTCD = M.CUST_CD) CUST_NM
                    ,M.SORT
                    ,DECODE(M.VAT_CLASS,'X',NULL,M.VAT_CLASS) VAT_CLASS
                    ,M.WITHDRAW_SCHD_DATE
                    ,M.CARD_DATE
                    --선수금 용역상품권 외식사업기획팀 강제설정으로 CC별 전표번호 생성 조건에 안맞음
        			--ORG_CC_CD별로 생성해야됨  2019.03.06 김호석 
                    ,(SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = M.CC_CD_ORG) SUB_UPJANG_NUM
                    ,M.OCCUR_DATE
                    ,M.JOURNALZ_YN
                    ,M.JOURNALZ_NUM
                    ,'' CUST_CD_ORG
                    --선수금 용역상품권 외식사업기획팀 강제설정으로 CC별 전표번호 생성 조건에 안맞음
        			--ORG_CC_CD별로 생성해야됨  2019.03.06 김호석                    
                    ,M.CC_CD_ORG CC_CD_ORG
            FROM    (
                    /* 차변 : 11204011 : 미수금_신용카드_일반 */
                    SELECT  TO_CHAR(M.CUST_CD)              AS CUST_CD
                            ,'7I'                           AS SLIP_TYPE
                            ,'1'                            AS DR_CR_CLASS
                            ,M.ACCT_CD                      AS D_ACCT_CD
                            ,NULL                           AS C_ACCT_CD
                            ,SUM(M.AR_AMT)                  AS D_AMT
                            ,0                              AS C_AMT
                            ,M.MU_CD                        AS MU_CD
                            ,M.CC_CD                        AS CC_CD
                            ,11         					AS SORT
                            ,NULL                           AS VAT_CLASS
                            ,NULL                           AS WITHDRAW_SCHD_DATE
                            ,SUBSTR(M.OCCUR_DATE,1,6)       AS OCCUR_DATE
                            ,DECODE(M.ACCT_CD,'11204014',M.OCCUR_DATE,SUBSTR(M.OCCUR_DATE,1,6)) AS CARD_DATE
                            ,NVL(M.JOURNALZ_YN,'N')         AS JOURNALZ_YN
                            ,M.JOURNALZ_NUM                 AS JOURNALZ_NUM
                            ,M.CC_CD CC_CD_ORG
                    FROM    SLA_AR_MST M
                            ,SLA_ADVANCE_RECEIVE_WAY W
                    WHERE   M.AR_NUM = W.AR_NUM
                    AND     W.RECEIVE_TYPE_CD IN ('AO02','AO07','AO08', 'AO11')
                    AND     M.RECD_STATUS = 'L'
                    AND     W.RECD_STATUS = 'L'
                    AND     NVL(M.JOURNALZ_YN,'N') = 'N'
                    AND     SUBSTR(M.OCCUR_DATE,0,6) = :slipMon
                    AND     M.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     M.CC_CD = :ccCd
                </#if>
                    GROUP BY M.CUST_CD
                            ,M.ACCT_CD
                            ,M.MU_CD
                            ,M.CC_CD
                            ,SUBSTR(M.OCCUR_DATE,1,6)
                            ,DECODE(M.ACCT_CD,'11204014',M.OCCUR_DATE,SUBSTR(M.OCCUR_DATE,1,6))
                            ,NVL(M.JOURNALZ_YN,'N')
                            ,M.JOURNALZ_NUM
                    UNION ALL
                    /* 차변 : 21401110 : 가수금_수익금 */
                    SELECT  TO_CHAR(W.CUST_CD)
                            ,'7I'
                            ,'1'
                            ,M.ACCT_CD
                            ,NULL
                            ,SUM(M.ALT_AMT)
                            ,0
                            ,M.MU_CD
                            ,M.CC_CD
                            ,21
                            ,NULL
                            ,NULL
                            ,M.SAP_SUSPENSE_NUM	--SUBSTR(M.ALT_DATE,1,6)
                            ,NULL
                            ,NVL(M.JOURNALZ_YN,'N')
                            ,M.JOURNALZ_NUM
                            ,M.CC_CD CC_CD_ORG
                    FROM    SLA_SAP_SUSPENSE_ALT_DETAIL M
                            ,SLA_ADVANCE_RECEIVE_WAY W
                    WHERE   M.ALT_NUM = W.IMNO_ALT_NUM
                    AND     W.RECEIVE_TYPE_CD IN ('AO02','AO07','AO08', 'AO11')
                    AND     M.RECD_STATUS = 'L'
                    AND     W.RECD_STATUS = 'L'
                    AND     NVL(M.JOURNALZ_YN,'N') = 'N'
                    AND     SUBSTR(M.ALT_DATE,0,6) = :slipMon
                    AND     M.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     M.CC_CD = :ccCd
                </#if>
                    GROUP BY W.CUST_CD
                            ,M.ACCT_CD
                            ,M.MU_CD
                            ,M.CC_CD
                            ,M.SAP_SUSPENSE_NUM
                            ,NVL(M.JOURNALZ_YN,'N')
                            ,M.JOURNALZ_NUM
                    UNION ALL
                    /* 차변 : 11101012 : 현금_사업장매출 */
                    SELECT  TO_CHAR(M.CUST_CD)
                            ,'7I'
                            ,'1'
                            ,M.ACCT_CD
                            ,NULL
                            ,SUM(M.OCCUR_AMT)
                            ,0
                            ,M.MU_CD
                            ,M.CC_CD
                            ,31
                            ,NULL
                            ,NULL
                            ,SUBSTR(M.OCCUR_DATE,1,6)
                            ,NULL
                            ,NVL(M.JOURNALZ_YN,'N')
                            ,M.JOURNALZ_NUM
                            ,M.CC_CD CC_CD_ORG
                    FROM    SLA_SALES_CASH_OCCUR_INFO M
                            ,SLA_ADVANCE_RECEIVE_WAY W
                    WHERE   M.SALES_CASH_NUM = W.SALES_CASH_NUM
                    AND     W.RECEIVE_TYPE_CD IN ('AO02','AO07','AO08', 'AO11')
                    AND     M.RECD_STATUS = 'L'
                    AND     W.RECD_STATUS = 'L'
                    AND     NVL(M.JOURNALZ_YN,'N') = 'N'
                    AND     SUBSTR(M.OCCUR_DATE,0,6) = :slipMon
                    AND     M.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     M.CC_CD = :ccCd
                </#if>
                    GROUP BY M.CUST_CD
                            ,M.ACCT_CD
                            ,M.MU_CD
                            ,M.CC_CD
                            ,SUBSTR(M.OCCUR_DATE,1,6)
                            ,NVL(M.JOURNALZ_YN,'N')
                            ,M.JOURNALZ_NUM
                    UNION ALL
                    /* 차변 : 21401020 : 선수금_사업장 (쿠폰소멸 외) */
                    SELECT  TO_CHAR(D.CUST_CD)
                            ,'7I'
                            ,'1'
                            ,D.ACCT_CD
                            ,NULL
                            ,SUM(D.APPLY_AMT)
                            ,0
                            ,D.MU_CD
                            ,D.CC_CD
                            ,41
                            ,NULL
                            ,NULL
                            ,SUBSTR(D.ALT_DATE,1,6)
                            ,NULL
                            ,NVL(D.JOURNALZ_YN,'N')
                            ,D.JOURNALZ_NUM
                            ,D.CC_CD CC_CD_ORG
                    FROM    SLA_ADVANCE_ALT_DETAIL D
                            ,SLA_ADVANCE_RECEIVE_WAY W
                    WHERE   D.ALT_NUM = W.ADVANCE_ALT_NUM
                    AND     W.RECEIVE_TYPE_CD IN ('AO02','AO07','AO08', 'AO11')
                    AND     D.RECD_STATUS = 'L'
                    AND     W.RECD_STATUS = 'L'
                    AND     NVL(D.JOURNALZ_YN,'N') = 'N'
                    AND     SUBSTR(D.ALT_DATE,0,6) = :slipMon
                    AND     D.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',D.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',D.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     D.CC_CD = :ccCd
                </#if>
                    GROUP BY D.CUST_CD
                            ,D.ACCT_CD
                            ,D.MU_CD
                            ,D.CC_CD
                            ,SUBSTR(D.ALT_DATE,1,6)
                            ,NVL(D.JOURNALZ_YN,'N')
                            ,D.JOURNALZ_NUM
                    UNION ALL
                    /* 차변 - 쿠폰소멸 21401070 : 선수금_선매출 */
                    SELECT  TO_CHAR(P.CUST_CD)
                            ,'7I'
                            ,'1'
                            /*
                            ,(
                            SELECT  DISTINCT M.ACCT_CD
                            FROM    SLA_COUPON_NUM_MST M
                            WHERE   M.COUPON_PROC_NUM = P.COUPON_PROC_NUM
                            AND     M.COUPON_STATUS = '8'
                            ) ACCT_CD
                            */
                            ,A.ACCT_CD --선수금 발생 계정으로 변경 20200317 (신나라)
                            ,''
                            --,NVL(SUM(P.SUPPLY_AMT),0)   --쿠폰소멸금액 잘못나와 수정 20160204
                            ,NVL(SUM(M.SUPPLY_AMT),0)   --선수금의 원가부서로 변경 20190513 김호석
                            -- ,NVL(SUM(P.APPLY_AMT),0)
                            ,0
                            ,P.MU_CD                            
                            --,P.CC_CD
                            --선수금의 원가부서로 변경 20190513 김호석
                            ,A.CC_CD
                            ,51
                            ,NULL
                            ,NULL
                            ,SUBSTR(P.PROC_DATE,1,6)
                            ,NULL
                            ,NVL(P.JOURNALZ_YN,'N')
                            ,P.JOURNALZ_NUM
                            --,A.CC_CD CC_CD_ORG
                            --쿠폰소멸처리 시 소멸 원가부서로 20190529 김호석 
                            ,DECODE(P.COUPON_PROC_OCCUR_CLASS, 3,P.CC_CD, A.CC_CD) CC_CD_ORG
                    FROM    SLA_COUPON_PROC_MST P
                          , SLA_COUPON_NUM_MST M
                          , SLA_ADVANCE_MST A
                    WHERE   P.RECD_STATUS = 'L'
                    AND     P.COUPON_PROC_NUM = M.COUPON_PROC_NUM
                    AND     M.ADVANCE_NUM = A.ADVANCE_NUM
                    AND     NVL(P.JOURNALZ_YN,'N') = 'N'
                    AND     SUBSTR(P.PROC_DATE,0,6) = :slipMon
                    AND     P.MU_CD = :muCd
                    AND 	P.COUPON_PROC_OCCUR_CLASS = '3'
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',P.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',P.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     P.CC_CD = :ccCd
                </#if>
                    GROUP BY P.CUST_CD
                            ,P.COUPON_PROC_NUM
                            ,P.MU_CD
                            ,A.CC_CD
                            ,P.CC_CD
                            ,A.ACCT_CD
                            ,P.COUPON_PROC_OCCUR_CLASS
                            ,SUBSTR(P.PROC_DATE,1,6)
                            ,NVL(P.JOURNALZ_YN,'N')
                            ,P.JOURNALZ_NUM
                    UNION ALL
                    
                    /* 차변 - 타사상품권  수기 회수  */
                    SELECT  TO_CHAR(M.CUST_CD)
                            ,'7I'
                            ,'1'
                            ,M.OCCUR_ACCT AS ACCT_CD
                            ,''
                            --,NVL(SUM(P.GIFT_AMT),0)
                            ,NVL(P.GIFT_AMT,0)  -- +-합이 0이되고 이건밖에 없으면 상세 금액이 0원이라 SAP 전송이 안되서 개별로 수정 20181106 김호석 
                            ,0
                            ,P.MU_CD
                            ,P.CC_CD
                            ,61
                            ,NULL
                            ,NULL
                            ,SUBSTR(P.OCCUR_DATE,1,6)
                            ,NULL
                            ,NVL(P.JOURNALZ_YN,'N')
                            ,P.JOURNALZ_NUM
                            ,P.CC_CD CC_CD_ORG
                    FROM    SLA_GIFT_WITHDRAW_INFO P, SLA_GIFT_KIND_MST M
                    WHERE   P.RECD_STATUS = 'L'
                    AND 	P.GIFT_KIND_CD = M.GIFT_KIND_CD
                    AND     NVL(P.JOURNALZ_YN,'N') = 'N'
                    AND     SUBSTR(P.OCCUR_DATE,0,6) = :slipMon
                    AND     P.MU_CD = :muCd
                    AND 	P.DATA_CLASS = 'A'
                	<#if tmCd?has_content>
                    	AND     (SCC_GET_TM_BY_CC('CODE',P.CC_CD) = 'CEA' OR SCC_GET_PT_BY_CC('CODE',P.CC_CD) = :tmCd)
                    </#if>
                	<#if ccCd?has_content>
                    	AND     P.CC_CD = :ccCd
                    </#if>
                    /*
                    GROUP BY M.CUST_CD
                            ,P.MU_CD
                            ,M.OCCUR_ACCT
                            ,P.CC_CD
                            ,SUBSTR(P.OCCUR_DATE,1,6)
                            ,NVL(P.JOURNALZ_YN,'N')
                            ,P.JOURNALZ_NUM
                    */
                          
                    UNION ALL        
                            
                    /* 차변 - 쿠폰 수기 회수  */
                    SELECT  TO_CHAR(P.CUST_CD)
                            ,'7I'
                            ,'1'
                            ,P.ACCT_CD
                            ,''
                            ,NVL(SUM(P.COUPON_AMT),0)
                            ,0
                            ,P.MU_CD
                            --,DECODE(P.ACCT_CD,'21401050','315060', P.CC_CD) CC_CD
                            --,P.CC_CD CC_CD                            
                            ,M.CC_CD CC_CD  --쿠폰종류의 원가부서로 가져오도록 수정 20190213 김호석
                            ,62 
                            ,NULL
                            ,NULL
                            ,SUBSTR(P.OCCUR_DATE,1,6)
                            ,NULL
                            ,NVL(P.JOURNALZ_YN,'N')
                            ,P.JOURNALZ_NUM
                            --외식사업부의 경우 쿠폰의 경우 쿠폰발행 시 귀속부서로 설정되어 회수CC별로 전표생성을 위해 원CC로 구분 20190306 김호석
                            ,P.CC_CD CC_CD_ORG
                    FROM    SLA_COUPON_WITHDRAW_INFO P,
                    		SLA_COUPON_NUM_MST A,
                        	SLA_COUPON_KIND_MST M --쿠폰종류의 원가부서로 가져오도록 수정 20190213 김호석
                    WHERE   P.RECD_STATUS = 'L'  
                    AND     NVL(P.JOURNALZ_YN,'N') = 'N'
                    AND     SUBSTR(P.OCCUR_DATE,0,6) = :slipMon
                    AND     P.MU_CD = :muCd
                    AND 	P.COUPON_WITHDRAW_CLASS = '2'
                	<#if tmCd?has_content>
                    	AND     (SCC_GET_TM_BY_CC('CODE',P.CC_CD) = 'CEA' OR SCC_GET_PT_BY_CC('CODE',P.CC_CD) = :tmCd)
                    </#if>
                	<#if ccCd?has_content>
                    	AND     P.CC_CD = :ccCd
                    </#if>
                    AND     P.COUPON_NUM = A.COUPON_NUM
                    --쿠폰종류의 원가부서로 가져오도록 수정 20190213 김호석
                    AND     A.COUPON_KIND_CD = M.COUPON_KIND_CD                   
                    
                    GROUP BY P.CUST_CD
                            ,P.MU_CD
                            ,P.ACCT_CD
                            ,M.CC_CD
                            ,P.CC_CD
                            ,SUBSTR(P.OCCUR_DATE,1,6)
                            ,NVL(P.JOURNALZ_YN,'N')
                            ,P.JOURNALZ_NUM
                            ,A.COUPON_KIND_CD
                            
                    UNION ALL        
                            
                    /* 차변 - 상품권 거스름돈  */
                    SELECT  TO_CHAR(GM.CUST_CD)
                            ,'7I'
                            ,'1'
                            ,M.ACCT_CD
                            ,NULL
                            ,SUM(M.OCCUR_AMT)
                            ,0
                            ,M.MU_CD
                            ,M.CC_CD
                            ,68
                            ,NULL
                            ,NULL
                            ,SUBSTR(M.OCCUR_DATE,1,6)
                            ,NULL
                            ,NVL(W.JOURNALZ_YN,'N')
                            ,W.JOURNALZ_NUM
                            ,M.CC_CD CC_CD_ORG
                    FROM    SLA_SALES_CASH_OCCUR_INFO M
                            ,SLA_GIFT_WITHDRAW_INFO W,
                            SLA_GIFT_KIND_MST GM
                    WHERE  M.SALES_CASH_NUM = W.SALES_CASH_NUM 
                    AND 	W.GIFT_KIND_CD = GM.GIFT_KIND_CD
                    AND     M.CASH_OCCUR_CLASS IN ('CH02')
                    AND     M.RECD_STATUS = 'L'
                    AND     W.RECD_STATUS = 'L'
                    AND     NVL(W.JOURNALZ_YN,'N') = 'N'
                    AND 	W.DATA_CLASS = 'A'
                    AND     SUBSTR(M.OCCUR_DATE,0,6) = :slipMon
                    AND     M.MU_CD = :muCd
                	<#if tmCd?has_content>
                    	AND     (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = 'CEA' OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
                    </#if>                    
                	<#if ccCd?has_content>
                    	AND     M.CC_CD = :ccCd
                    </#if>
                	AND 	M.CC_CD <> '315160'
                    GROUP BY GM.CUST_CD
                            ,M.ACCT_CD
                            ,M.MU_CD
                            ,M.CC_CD
                            ,SUBSTR(M.OCCUR_DATE,1,6)
                            ,NVL(W.JOURNALZ_YN,'N')
                            ,W.JOURNALZ_NUM
                            
                    UNION ALL        
                            
                    /* 차변 - 쿠폰 거스름돈  */
                    SELECT  TO_CHAR(M.CUST_CD)
                            ,'7I'
                            ,'1'
                            ,M.ACCT_CD
                            ,NULL
                            ,SUM(M.OCCUR_AMT)
                            ,0
                            ,M.MU_CD
                            ,M.CC_CD
                            ,61
                            ,NULL
                            ,NULL
                            ,SUBSTR(M.OCCUR_DATE,1,6)
                            ,NULL
                            ,NVL(W.JOURNALZ_YN,'N')
                            ,W.JOURNALZ_NUM
                            ,M.CC_CD CC_CD_ORG
                    FROM    SLA_SALES_CASH_OCCUR_INFO M
                            ,SLA_COUPON_WITHDRAW_INFO W
                    WHERE  M.SALES_CASH_NUM = W.SALES_CASH_NUM 
                    AND     M.CASH_OCCUR_CLASS IN ('CH02')
                    AND     M.RECD_STATUS = 'L'
                    AND     W.RECD_STATUS = 'L'
                    AND     NVL(W.JOURNALZ_YN,'N') = 'N'
                    AND 	W.COUPON_WITHDRAW_CLASS = '2'
                    AND     SUBSTR(M.OCCUR_DATE,0,6) = :slipMon
                    AND     M.MU_CD = :muCd
                	<#if tmCd?has_content>
                    	AND     (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = 'CEA' OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
                    </#if>
                	<#if ccCd?has_content>
                    	AND     M.CC_CD = :ccCd
                    </#if>
                	AND 	M.CC_CD <> '315160'
                    GROUP BY M.CUST_CD
                            ,M.ACCT_CD
                            ,M.MU_CD
                            ,M.CC_CD
                            ,SUBSTR(M.OCCUR_DATE,1,6)
                            ,NVL(W.JOURNALZ_YN,'N')
                            ,W.JOURNALZ_NUM                    
                    
                    UNION ALL
                    
                    /* 대변 : 21401070 : 선수금_선매출 */
                    SELECT  TO_CHAR(M.CUST_CD)
                            ,'7I'
                            ,'2'
                            ,NULL
                            ,M.ACCT_CD
                            ,0
                            ,SUM(M.OCCUR_SUPPLY_AMT)
                            ,M.MU_CD
                            ,M.CC_CD
                            ,71
                            ,M.VAT_CD
                            ,NULL
                            ,SUBSTR(M.OCCUR_DATE,1,6)
                            ,NULL
                            ,NVL(M.JOURNALZ_YN,'N')
                            ,M.JOURNALZ_NUM
                            ,M.CC_CD CC_CD_ORG
                    FROM    SLA_ADVANCE_MST M
                    WHERE   M.RECD_STATUS = 'L'
                    AND     NVL(M.JOURNALZ_YN,'N') = 'N'
                    AND     M.ADVANCE_OCCUR_CLASS IN ('AO02','AO07','AO08', 'AO11')
                    AND     SUBSTR(M.OCCUR_DATE,0,6) = :slipMon
                    AND     M.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     M.CC_CD = :ccCd
                </#if>
                    GROUP BY M.CUST_CD
                            ,M.ACCT_CD
                            ,M.MU_CD
                            ,M.CC_CD
                            ,SUBSTR(M.OCCUR_DATE,1,6)
                            ,M.VAT_CD
                            ,NVL(M.JOURNALZ_YN,'N')
                            ,M.JOURNALZ_NUM
                    UNION ALL
                    /* 대변 : 21405000 : 매출부가세 */
                    SELECT  TO_CHAR(M.CUST_CD)
                            ,'7I'
                            ,'2'
                            ,NULL
                            ,(SELECT V.ACCT_CD FROM SLA_VAT_CD_MST V WHERE V.VAT_CD = M.VAT_CD)
                            ,0
                            ,SUM(M.OCCUR_VAT_AMT)
                            ,M.MU_CD
                            ,M.CC_CD
                            ,81
                            ,M.VAT_CD
                            ,NULL
                            ,SUBSTR(M.OCCUR_DATE,1,6)
                            ,NULL
                            ,NVL(M.JOURNALZ_YN,'N')
                            ,M.JOURNALZ_NUM
                            ,M.CC_CD CC_CD_ORG
                    FROM    SLA_ADVANCE_MST M
                    WHERE   M.RECD_STATUS = 'L'
                    AND     NVL(M.JOURNALZ_YN,'N') = 'N'
                    AND     M.ADVANCE_OCCUR_CLASS IN ('AO02','AO07','AO08', 'AO11')
                    AND     M.VAT_CD NOT IN ('X')
                    AND     SUBSTR(M.OCCUR_DATE,0,6) = :slipMon
                    AND     M.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     M.CC_CD = :ccCd
                </#if>
                    GROUP BY M.CUST_CD
                            ,M.ACCT_CD
                            ,M.MU_CD
                            ,M.CC_CD
                            ,SUBSTR(M.OCCUR_DATE,1,6)
                            ,M.VAT_CD
                            ,NVL(M.JOURNALZ_YN,'N')
                            ,M.JOURNALZ_NUM
                  UNION ALL          
               	-- 선수금 (- 부가세)  쿠폰 소멸시 전표 안나와서 추가
                	-- 선수금 (- 부가세)
                    SELECT TO_CHAR(M.CUST_CD)           AS CUST_CD
                         , '7I'                         AS SLIP_TYPE
                         , '2'                          AS DR_CR_CLASS
                         , NULL                         AS D_ACCT_CD
                         , '21405000'                    AS C_ACCT_CD
                         , 0                            AS D_AMT
                         , SUM(NVL(ALT_VAT_AMT,0)) * -1 AS C_AMT
                         , M.MU_CD                      AS MU_CD
                         , M.CC_CD                      AS CC_CD
                         , 999                            AS SORT
                         , '20'                         AS VAT_CLASS
                         , NULL                         AS WITHDRAW_SCHD_DATE
                         , SUBSTR(D.ALT_DATE,1,6)       AS OCCUR_DATE
                         , NULL
                         , NVL(D.JOURNALZ_YN,'N')       AS JOURNALZ_YN
                         , D.JOURNALZ_NUM
                         ,M.CC_CD CC_CD_ORG
                      FROM SLA_ADVANCE_ALT_MST M
                         , SLA_ADVANCE_ALT_DETAIL D
                     WHERE M.ALT_NUM=D.ALT_NUM
                       AND M.ALT_TYPE_CD IN ('G03')     -- G03:채권상계
                       AND M.RECD_STATUS='L'
                       AND D.RECD_STATUS='L'
                       AND NVL(D.JOURNALZ_YN,'N') = 'N'
                       AND D.VAT_CD NOT IN ('X')
                       AND SUBSTR(D.ALT_DATE,0,6) = :slipMon
                       AND M.MU_CD =:muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     M.CC_CD = :ccCd
                </#if>
                        AND M.ADVANCE_ALT_OCCUR_CLASS IN ('TO09', 'TO13')  --쿠폰소멸 전표에 같이 나와서 제외
                     GROUP BY M.CUST_CD
                         , M.SYS_CLASS
                         , D.ACCT_CD
                         , M.MU_CD
                         , M.CC_CD
                         , SUBSTR(D.ALT_DATE,1,6)
                         , NVL(D.JOURNALZ_YN,'N')
                         , D.JOURNALZ_NUM                              
                            
                            
                            
                    UNION ALL
                    /* 대변 : 45114050 : 잡이익_기타 : 쿠폰/식권 소멸 */
                    SELECT  TO_CHAR(D.CUST_CD)
                            ,'7I'
                            ,'2'
                            ,NULL
                            ,D.ACCT_CD
                            ,0
                            ,NVL(SUM(D.APPLY_AMT),0)
                            ,D.MU_CD
                            ,D.CC_CD
                            ,91
                            ,NULL
                            ,NULL
                            ,SUBSTR(D.ALT_DATE,1,6)
                            ,NULL
                            ,NVL(D.JOURNALZ_YN,'N')
                            ,D.JOURNALZ_NUM
                            ,D.CC_CD CC_CD_ORG
                    FROM    SLA_ADVANCE_ALT_MST M
                            ,SLA_ADVANCE_ALT_DETAIL D
                    WHERE   M.ALT_NUM = D.ALT_NUM
                    AND     M.RECD_STATUS = 'L'
                    AND     D.RECD_STATUS = 'L'
                    AND     NVL(D.JOURNALZ_YN,'N') = 'N' 
                    AND     M.ADVANCE_ALT_OCCUR_CLASS IN ('TO09', 'TO13')	--,'TO11'
                    AND     SUBSTR(D.ALT_DATE,0,6) = :slipMon
                    AND     D.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',D.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',D.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     D.CC_CD = :ccCd
                </#if>
                    GROUP BY D.CUST_CD
                            ,D.ACCT_CD
                            ,D.MU_CD
                            ,D.CC_CD
                            ,SUBSTR(D.ALT_DATE,1,6)
                            ,NVL(D.JOURNALZ_YN,'N')
                            ,D.JOURNALZ_NUM
                            
                            
            	UNION ALL
                    /* 대변 - 타사상품권  수기 회수 : 채권채무가계정을 사용함   */
                    SELECT  TO_CHAR(M.CUST_CD)
                            ,'7I'
                            ,'2'
                            ,''
                            ,'90005020' AS ACCT_CD
                            ,0
                            --,NVL(SUM(P.USE_AMT),0)
                            ,NVL(P.USE_AMT,0)   -- +-합이 0이되고 이건밖에 없으면 상세 금액이 0원이라 SAP 전송이 안되서 개별로 수정 20181106 김호석
                            ,P.MU_CD
                            ,P.CC_CD
                            ,95
                            ,NULL
                            ,NULL
                            ,SUBSTR(P.OCCUR_DATE,1,6)
                            ,NULL
                            ,NVL(P.JOURNALZ_YN,'N')
                            ,P.JOURNALZ_NUM
                            ,P.CC_CD CC_CD_ORG
                    FROM    SLA_GIFT_WITHDRAW_INFO P, SLA_GIFT_KIND_MST M
                    WHERE   P.RECD_STATUS = 'L'
                    AND 	P.GIFT_KIND_CD = M.GIFT_KIND_CD
                    AND     NVL(P.JOURNALZ_YN,'N') = 'N'
                    AND     SUBSTR(P.OCCUR_DATE,0,6) = :slipMon 
                    AND     P.MU_CD = :muCd
                    AND 	P.DATA_CLASS = 'A'
                	<#if tmCd?has_content>
                    	AND     (SCC_GET_TM_BY_CC('CODE',P.CC_CD) = 'CEA' OR SCC_GET_PT_BY_CC('CODE',P.CC_CD) = :tmCd)
                    </#if>
                	<#if ccCd?has_content>
                    	AND     P.CC_CD = :ccCd
                    </#if>
                    /*
                    GROUP BY M.CUST_CD
                            ,P.MU_CD
                            ,M.OCCUR_ACCT
                            ,P.CC_CD
                            ,SUBSTR(P.OCCUR_DATE,1,6)
                            ,NVL(P.JOURNALZ_YN,'N')
                            ,P.JOURNALZ_NUM
                    */      
                    UNION ALL        
                            
                    /* 대변 - 쿠폰 수기 회수 : 채권채무가계정을 사용함   */
                    SELECT  TO_CHAR(P.CUST_CD)
                            ,'7I'
                            ,'2'
                            ,''
                            ,'90005020' AS ACCT_CD
                            ,0
                            ,NVL(SUM(P.USE_AMT),0)
                            ,P.MU_CD
                            ,P.CC_CD
                            ,96
                            ,NULL
                            ,NULL
                            ,SUBSTR(P.OCCUR_DATE,1,6)
                            ,NULL
                            ,NVL(P.JOURNALZ_YN,'N')
                            ,P.JOURNALZ_NUM
                            ,P.CC_CD CC_CD_ORG
                    FROM    SLA_COUPON_WITHDRAW_INFO P
                    WHERE   P.RECD_STATUS = 'L'
                    AND     NVL(P.JOURNALZ_YN,'N') = 'N'
                    AND     SUBSTR(P.OCCUR_DATE,0,6) = :slipMon
                    AND     P.MU_CD = :muCd
                    AND 	P.COUPON_WITHDRAW_CLASS = '2'                    
                	<#if tmCd?has_content>
                    	AND     (SCC_GET_TM_BY_CC('CODE',P.CC_CD) = 'CEA' OR SCC_GET_PT_BY_CC('CODE',P.CC_CD) = :tmCd)
                    </#if>
                	<#if ccCd?has_content>
                    	AND     P.CC_CD = :ccCd
                    </#if>
                    GROUP BY P.CUST_CD
                            ,P.MU_CD
                            ,P.ACCT_CD
                            ,P.CC_CD
                            ,SUBSTR(P.OCCUR_DATE,1,6)
                            ,NVL(P.JOURNALZ_YN,'N')
                            ,P.JOURNALZ_NUM              
                  UNION ALL       
                    /* 대변 - 상품권 거스름돈 -티원서울  */
                    SELECT  TO_CHAR(GM.CUST_CD)
                            ,'7I'
                            ,'2'
                            ,NULL
                            ,M.ACCT_CD
                            ,0
                            ,SUM(M.OCCUR_AMT) * -1
                            ,M.MU_CD
                            ,M.CC_CD
                            ,98
                            ,NULL
                            ,NULL
                            ,SUBSTR(M.OCCUR_DATE,1,6)
                            ,NULL
                            ,NVL(W.JOURNALZ_YN,'N')
                            ,W.JOURNALZ_NUM
                            ,M.CC_CD CC_CD_ORG
                    FROM    SLA_SALES_CASH_OCCUR_INFO M
                            ,SLA_GIFT_WITHDRAW_INFO W,
                            SLA_GIFT_KIND_MST GM
                    WHERE  M.SALES_CASH_NUM = W.SALES_CASH_NUM 
                    AND 	W.GIFT_KIND_CD = GM.GIFT_KIND_CD
                    AND     M.CASH_OCCUR_CLASS IN ('CH02')
                    AND     M.RECD_STATUS = 'L'
                    AND     W.RECD_STATUS = 'L'
                    AND     NVL(W.JOURNALZ_YN,'N') = 'N'
                    AND 	W.DATA_CLASS = 'A'
                    AND     SUBSTR(M.OCCUR_DATE,0,6) = :slipMon
                    AND     M.MU_CD = :muCd
                	<#if tmCd?has_content>
                    	AND     (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = 'CEA' OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
                    </#if>
                	<#if ccCd?has_content>
                    	AND     M.CC_CD = :ccCd
                    </#if>
                	AND 	M.CC_CD = '315160'
                    GROUP BY GM.CUST_CD
                            ,M.ACCT_CD
                            ,M.MU_CD
                            ,M.CC_CD
                            ,SUBSTR(M.OCCUR_DATE,1,6)
                            ,NVL(W.JOURNALZ_YN,'N')
                            ,W.JOURNALZ_NUM
                            
                    UNION ALL        
                            
                    /* 차변 - 쿠폰 거스름돈 -티원서울  */
                    SELECT  TO_CHAR(M.CUST_CD)
                            ,'7I'
                            ,'2'
                            ,NULL
                            ,M.ACCT_CD
                            ,0
                            ,SUM(M.OCCUR_AMT) * -1
                            ,M.MU_CD
                            ,M.CC_CD
                            ,99
                            ,NULL
                            ,NULL
                            ,SUBSTR(M.OCCUR_DATE,1,6)
                            ,NULL
                            ,NVL(W.JOURNALZ_YN,'N')
                            ,W.JOURNALZ_NUM
                            ,M.CC_CD CC_CD_ORG
                    FROM    SLA_SALES_CASH_OCCUR_INFO M
                            ,SLA_COUPON_WITHDRAW_INFO W
                    WHERE  M.SALES_CASH_NUM = W.SALES_CASH_NUM 
                    AND     M.CASH_OCCUR_CLASS IN ('CH02')
                    AND     M.RECD_STATUS = 'L'
                    AND     W.RECD_STATUS = 'L'
                    AND     NVL(W.JOURNALZ_YN,'N') = 'N'
                    AND 	W.COUPON_WITHDRAW_CLASS = '2'
                    AND     SUBSTR(M.OCCUR_DATE,0,6) = :slipMon
                    AND     M.MU_CD = :muCd
                	<#if tmCd?has_content>
                    	AND     (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = 'CEA' OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
                    </#if>
                	<#if ccCd?has_content>                    
                    	AND     M.CC_CD = :ccCd
                    </#if>
                	AND 	M.CC_CD = '315160'
                    GROUP BY M.CUST_CD
                            ,M.ACCT_CD
                            ,M.MU_CD
                            ,M.CC_CD
                            ,SUBSTR(M.OCCUR_DATE,1,6)
                            ,NVL(W.JOURNALZ_YN,'N')
                            ,W.JOURNALZ_NUM                                                    
                    ) M
        <#if muCd == "2003">
        	--선수금 용역상품권 외식사업기획팀 강제설정으로 CC별 전표번호 생성 조건에 안맞음
        	--ORG_CC_CD별로 생성해야됨  2019.03.06 김호석 
        	ORDER BY M.CC_CD_ORG, M.DR_CR_CLASS, M.SORT, M.D_ACCT_CD, M.C_ACCT_CD         	
        <#else>
        	<#if muCd == "2001">  --FC본사도 쿠폰처리는 외식과 동일 20190529 김호석
	        	--선수금 용역상품권 외식사업기획팀 강제설정으로 CC별 전표번호 생성 조건에 안맞음
	        	--ORG_CC_CD별로 생성해야됨  2019.03.06 김호석 
	        	ORDER BY M.CC_CD_ORG, M.DR_CR_CLASS, M.SORT, M.D_ACCT_CD, M.C_ACCT_CD         	
        	<#else>
        		ORDER BY M.CC_CD, M.DR_CR_CLASS, M.SORT, M .D_ACCT_CD, M.C_ACCT_CD
        	</#if>
        </#if>
        
        ]]></statement>

	<!-- 7J:상품권 청구 -->
	<statement name="selectSlipList7J" type="select"><![CDATA[
            SELECT  M.SLIP_TYPE
                    ,SCC_CODE_NM('SLIP_TYPE', M.SLIP_TYPE) AS SLIP_TYPE_NM
                    ,M.DR_CR_CLASS
                    ,M.D_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.D_ACCT_CD) D_ACCT_NM
                    ,M.C_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.C_ACCT_CD) C_ACCT_NM
                    ,M.D_AMT
                    ,M.C_AMT
                    ,M.MU_CD
                    ,SCC_MU_NM_FUN(M.MU_CD) MU_NM
                    ,M.CC_CD
                    ,SCC_CC_NM_FUN(M.CC_CD) CC_NM
                    ,SCC_GET_SAP_CUST_CD(M.CUST_CD) SAP_CUST_CD
                    ,M.CUST_CD
                    ,(SELECT DISTINCT NM.CUSTNM FROM ST_CUST NM WHERE NM.CUSTCD = M.CUST_CD) CUST_NM
                    ,M.SORT
                   -- ,M.TAX_BILL_NUM TAX_SHET_NUM
                    ,NULL TAX_SHET_NUM
                    ,DECODE(M.VAT_CLASS,'X',NULL,M.VAT_CLASS) VAT_CLASS
                    ,'' WITHDRAW_SCHD_DATE
                    ,'' CUST_CD_ORG
                    ,'' SUSPENSE_ALT_TYPE
                    ,M.CC_CD_ORG
                    ,M.SUB_UPJANG_NUM
                    ,M.JOURNALZ_YN
                    ,M.JOURNALZ_NUM
                    ,(
                    SELECT	MAX(TO_CHAR(T.CDATE,'YYYYMMDD'))
                    FROM	SLA_TAX_SHET_OCCUR_OBJ T
                    WHERE	T.TAX_SHET_NUM = M.TAX_BILL_NUM
                    ) INPUT_DATE
                    ,(
                    SELECT	MAX(TO_CHAR(T.CDATE,'HH24MISS'))
                    FROM	SLA_TAX_SHET_OCCUR_OBJ T
                    WHERE	T.TAX_SHET_NUM = M.TAX_BILL_NUM
                    ) INPUT_TIME
                    ,M.GIFT_BILLING_NUM
            FROM    (
                    /* 차변 - 11204020:미수금_타사상품권 */
                    SELECT  '7J'                        SLIP_TYPE
                            ,'1'                        DR_CR_CLASS
                            ,A.ACCT_CD                  D_ACCT_CD
                            ,''                         C_ACCT_CD
                            ,NVL(SUM(A.AR_AMT),0)       D_AMT
                            ,0                          C_AMT
                            ,C.MU_CD
                            ,C.CC_CD
                            ,1||C.CC_CD                 SORT
                            ,TO_CHAR(A.CUST_CD)         CUST_CD
                            ,MAX(A.WITHDRAW_SCHD_DATE)  WITHDRAW_SCHD_DATE
                            ,C.TAX_BILL_NUM             TAX_BILL_NUM
                            ,''                         VAT_CLASS
                            ,C.CC_CD                    CC_CD_ORG
                            ,(SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = C.CC_CD)    SUB_UPJANG_NUM
                            ,NVL(C.JOURNALZ_YN,'N')        JOURNALZ_YN
                            ,C.JOURNALZ_NUM
                            ,C.GIFT_BILLING_NUM
                    FROM    SLA_AR_MST A
                            ,SLA_GIFT_BILLING_MST C
                    WHERE   A.AR_NUM = C.AR_NUM
                    AND     A.RECD_STATUS = 'L'
                    AND     C.RECD_STATUS = 'L'
                    AND     NVL(A.JOURNALZ_YN,'N') = 'N'
                    AND     NVL(C.JOURNALZ_YN,'N') = 'N'
                    AND     A.AR_TYPE_CD = 'A05'
                    AND     SUBSTR(C.OCCUR_DATE,0,6) = :slipMon
                    AND     C.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',C.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',C.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     C.CC_CD = :ccCd
                </#if>
                    GROUP BY A.ACCT_CD
                            ,C.MU_CD
                            ,C.CC_CD
                            ,A.CUST_CD
                            ,C.TAX_BILL_NUM
                            ,NVL(C.JOURNALZ_YN,'N')
                            ,C.JOURNALZ_NUM
                            ,C.GIFT_BILLING_NUM
                    UNION ALL
                    /* 차변 - 43216050:지급수수료_기타수수료 >> 90005020:채권채무상계가계정 */
                    SELECT  '7J'
                            ,'1'
                            ,'90005020'	--C.COMM_ACCT_CD
                            ,''
                            ,NVL(SUM(D.COMM_AMT),0) + NVL(SUM(D.COMM_VAT_AMT),0)
                            ,0
                            ,A.MU_CD
                            ,A.CC_CD
                            ,2||A.CC_CD
                            ,TO_CHAR(A.CUST_CD)
                            ,MAX(A.WITHDRAW_SCHD_DATE)
                            ,C.TAX_BILL_NUM
                            ,C.VAT_CD
                            ,A.CC_CD    -- 주의
                            ,(SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = A.CC_CD)
                            ,NVL(C.JOURNALZ_YN,'N')
                            ,C.JOURNALZ_NUM
                            ,C.GIFT_BILLING_NUM
                    FROM    SLA_AR_MST A
                            ,SLA_GIFT_BILLING_MST C
                            ,SLA_GIFT_WITHDRAW_INFO D
                    WHERE   A.AR_NUM = C.AR_NUM
                    AND     C.GIFT_BILLING_NUM=D.GIFT_BILLING_NUM
                    AND     A.RECD_STATUS = 'L'
                    AND     C.RECD_STATUS = 'L'
                    AND     D.RECD_STATUS = 'L'
                    AND     NVL(A.JOURNALZ_YN,'N') = 'N'
                    AND     NVL(C.JOURNALZ_YN,'N') = 'N' 
                    --AND     NVL(D.JOURNALZ_YN,'N') = 'N'   아래 상품권 접수랑 금액 안맞아서 주석처리 20160204
                    AND     A.AR_TYPE_CD = 'A05'
                   -- AND		NVL(D.COMM_AMT,0) > 0   --타사상품권 청구취소시 마이너스 금액도 포함되어야함 20160204
                    AND     SUBSTR(C.OCCUR_DATE,0,6) = :slipMon
                    AND     C.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',C.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',C.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     C.CC_CD = :ccCd
                </#if>
                    GROUP BY C.COMM_ACCT_CD
                            ,A.MU_CD
                            ,A.CC_CD
                            ,A.CUST_CD
                            ,C.TAX_BILL_NUM
                            ,C.VAT_CD
                            ,A.CC_CD
                            ,NVL(C.JOURNALZ_YN,'N')
                            ,C.JOURNALZ_NUM
                            ,C.GIFT_BILLING_NUM
                    UNION ALL
                    /* 차변 - 11503000:매입부가세 */
/*
                    SELECT  '7J'
                            ,'1'
                            ,C.VAT_ACCT_CD
                            ,''
                            ,NVL(SUM(C.VAT_AMT),0)
                            ,0
                            ,C.MU_CD
                            ,C.CC_CD
                            ,3||C.CC_CD
                            ,TO_CHAR(A.CUST_CD)
                            ,MAX(A.WITHDRAW_SCHD_DATE)
                            ,C.TAX_BILL_NUM
                            ,C.VAT_CD
                            ,C.CC_CD
                            ,(SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = C.CC_CD)
                            ,NVL(C.JOURNALZ_YN,'N') JOURNALZ_YN
                            ,C.JOURNALZ_NUM
                    FROM    SLA_AR_MST A
                            ,SLA_GIFT_BILLING_MST C
                    WHERE   A.AR_NUM = C.AR_NUM
                    AND     A.RECD_STATUS = 'L'
                    AND     C.RECD_STATUS = 'L'
                    AND     NVL(A.JOURNALZ_YN,'N') = 'N'
                    AND     NVL(C.JOURNALZ_YN,'N') = 'N'
                    AND     A.AR_TYPE_CD = 'A05'
                    AND		NVL(C.VAT_AMT,0) > 0
                    AND     SUBSTR(C.OCCUR_DATE,0,6) = :slipMon
                    AND     C.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',C.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',C.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     C.CC_CD = :ccCd
                </#if>
                    GROUP BY C.VAT_ACCT_CD
                            ,C.MU_CD
                            ,C.CC_CD
                            ,A.CUST_CD
                            ,C.TAX_BILL_NUM
                            ,C.VAT_CD
                            ,NVL(C.JOURNALZ_YN,'N')
                            ,C.JOURNALZ_NUM
                    UNION ALL
*/                    
                    /* 대변 - 11204020:미수금_타사상품권 */
                    SELECT  '7J'
                            ,'2'
                            ,''
                            ,A.ACCT_CD
                            ,0
                            ,NVL(SUM(A.AR_AMT),0)                           
                            ,A.MU_CD
                            ,A.CC_CD
                            ,4||A.CC_CD
                            ,TO_CHAR(A.CUST_CD)
                            ,MAX(A.WITHDRAW_SCHD_DATE)
                            ,C.TAX_BILL_NUM
                            ,''
                            ,C.CC_CD CC_CD_ORG
                            ,(SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = A.CC_CD)
                            ,NVL(C.JOURNALZ_YN,'N')
                            ,C.JOURNALZ_NUM
                            ,C.GIFT_BILLING_NUM
                    FROM    SLA_AR_MST A
                            ,SLA_GIFT_WITHDRAW_INFO B
                            ,SLA_GIFT_BILLING_MST C
                    WHERE   A.AR_NUM = B.AR_NUM
                    AND     B.GIFT_BILLING_NUM = C.GIFT_BILLING_NUM
                    AND     A.RECD_STATUS = 'L'
                    AND     B.RECD_STATUS = 'L'
                    AND     C.RECD_STATUS = 'L'
                    AND     NVL(A.JOURNALZ_YN,'N') = 'N'
                  --  AND     NVL(B.JOURNALZ_YN,'N') = 'N'
                    AND     NVL(C.JOURNALZ_YN,'N') = 'N'
                    AND     A.AR_TYPE_CD = 'A04'
                    AND     SUBSTR(C.OCCUR_DATE,0,6) = :slipMon
                    AND     C.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',C.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',C.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     C.CC_CD = :ccCd
                </#if>
                    GROUP BY A.ACCT_CD
                            ,A.MU_CD
                            ,A.CC_CD
                            ,C.CC_CD
                            ,A.CUST_CD
                            ,C.TAX_BILL_NUM
                            ,NVL(C.JOURNALZ_YN,'N')
                            ,C.JOURNALZ_NUM
                            ,C.GIFT_BILLING_NUM
                    ) M
                    ORDER BY M.GIFT_BILLING_NUM, M.SORT, M.CC_CD, M.CUST_CD
        ]]></statement>

	<!-- 8A:영업환불(영업미지급) -->
	<statement name="selectSlipList8A" type="select"><![CDATA[
            SELECT  M.SLIP_TYPE
                    ,SCC_CODE_NM('SLIP_TYPE', M.SLIP_TYPE) AS SLIP_TYPE_NM
                    ,M.ALT_NUM
                    ,M.DR_CR_CLASS
                    ,M.D_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.D_ACCT_CD) D_ACCT_NM
                    ,M.C_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.C_ACCT_CD) C_ACCT_NM
                    ,M.D_AMT
                    ,M.C_AMT
                    ,M.MU_CD
                    ,SCC_MU_NM_FUN(M.MU_CD) MU_NM
                    ,M.CC_CD
                    ,SCC_CC_NM_FUN(M.CC_CD) CC_NM
                    ,DECODE(M.DR_CR_CLASS, 1, SCC_GET_SAP_CUST_CD(M.CUST_CD), 2, DECODE(TRIM(M.BANK_CD),NULL,SCC_GET_SAP_CUST_CD(M.CUST_CD),'',SCC_GET_SAP_CUST_CD(M.CUST_CD),'99002')) SAP_CUST_CD
                    ,M.CUST_CD
                    ,(SELECT DISTINCT NM.CUSTNM FROM ST_CUST NM WHERE NM.CUSTCD = M.CUST_CD) CUST_NM
                    ,M.SORT
                    --,'' TAX_SHET_NUM
                    --환불전표(8A) 세금계산서 번호 추가 20180828 김호석
                    ,NVL((SELECT U.TAX_SHET_APPRV_NUM FROM SLA_ADVANCE_ALT_MST U WHERE U.ALT_NUM = M.ALT_NUM),'') AS TAX_SHET_NUM
                    ,DECODE(M.VAT_CD,'X',NULL,M.VAT_CD) VAT_CLASS
                    ,M.WITHDRAW_SCHD_DATE
                    ,'' CUST_CD_ORG
                    ,(SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = M.CC_CD) SUB_UPJANG_NUM
                    ,M.JOURNALZ_YN
                    ,M.JOURNALZ_NUM
                    ,M.BANK_CD
                    ,M.BANK_ACCT_OWNR
                    ,M.BANK_ACCT_NO
                    ,DECODE(TRIM(M.BANK_CD),NULL,'','','','X') SINGLE_PAY_YN
                    ,M.CC_CD CC_CD_ORG
                    ,M.CARD_DATE
            FROM    (
                    SELECT  NVL(B.CUST_CD, C.CUST_CD) AS CUST_CD
                         , '8A'                     AS SLIP_TYPE
                         , '1'                      AS DR_CR_CLASS
                         , B.ALT_NUM
                         , C.ACCT_CD                AS D_ACCT_CD
                         , NULL                     AS C_ACCT_CD
                         , CASE WHEN C.ADVANCE_TYPE_CD = 'F05' OR C.ADVANCE_TYPE_CD = 'F10' THEN SUM(NVL(B.ALT_SUPPLY_AMT,0))
                            	WHEN A.ALT_TYPE_CD = 'I01' AND B.VAT_CD = '20' THEN  SUM(NVL(B.ALT_SUPPLY_AMT,0))
                         ELSE
                         	SUM(NVL(B.ALT_SUPPLY_AMT,0) + NVL(B.ALT_VAT_AMT,0))
                         END						AS D_AMT
                         , 0                        AS C_AMT
                         , A.MU_CD                  AS MU_CD
                         , A.CC_CD                  AS CC_CD
                         , 1                        AS SORT
                         , B.VAT_CD                 AS VAT_CD
                         , NVL(B.JOURNALZ_YN,'N')   AS JOURNALZ_YN
                         , B.JOURNALZ_NUM
                         , NULL 					AS BANK_CD
                         , NULL 					AS BANK_ACCT_OWNR
                         , NULL 					AS BANK_ACCT_NO
                         , NVL(A.PAY_SCHD_DATE, A.ALT_DATE) 				AS WITHDRAW_SCHD_DATE
                         , NULL 					AS CARD_DATE
                      FROM SLA_ADVANCE_ALT_MST A, SLA_ADVANCE_ALT_DETAIL B, SLA_ADVANCE_MST C
                     WHERE A.ALT_NUM = B.ALT_NUM
                       AND B.ADVANCE_NUM = C.ADVANCE_NUM
                       AND A.ALT_TYPE_CD IN ('H01', 'H02', 'H03', 'I01')
                       AND A.RECD_STATUS = 'L'
                       AND B.RECD_STATUS = 'L'
                       AND C.RECD_STATUS = 'L'
                       AND NVL(B.JOURNALZ_YN,'N') = 'N'
                       AND SUBSTR(B.ALT_DATE,0,6) = :slipMon
                       AND A.MU_CD = :muCd
                <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',A.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',A.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                       AND A.CC_CD = :ccCd
                </#if>
                     GROUP BY NVL(B.CUST_CD, C.CUST_CD)
                         , B.ALT_NUM
                         , C.ACCT_CD
                         , A.MU_CD
                         , A.CC_CD
                         , B.VAT_CD
                         , NVL(B.JOURNALZ_YN,'N')
                         , B.JOURNALZ_NUM
                         , A.BANK_CD
                         , A.BANK_ACCT_OWNR
                         , A.BANK_ACCT_NO
                         , C.ADVANCE_TYPE_CD
                         , NVL(A.PAY_SCHD_DATE, A.ALT_DATE)
                         , A.ALT_TYPE_CD
               /*카드 환불은 차변으로 */
                     UNION ALL
                    SELECT A.CUST_CD AS CUST_CD
                         , '8A'                     AS SLIP_TYPE
                         , '1'                      AS DR_CR_CLASS
                         , B.ALT_NUM
                         , A.ACCT_CD                AS C_ACCT_CD
                         , NULL                     AS D_ACCT_CD
                         , SUM(B.ALT_SUPPLY_AMT) * -1
                         , 0                        AS D_AMT
                         , A.MU_CD                  AS MU_CD
                         , A.CC_CD                  AS CC_CD
                         , 2                        AS SORT
                         , B.VAT_CD                 AS VAT_CD
                         , NVL(B.JOURNALZ_YN,'N')    AS JOURNALZ_YN
                         , B.JOURNALZ_NUM
                         , NULL 					AS BANK_CD
                         , NULL 					AS BANK_ACCT_OWNR
                         , NULL 					AS BANK_ACCT_NO
                         , '' 				AS WITHDRAW_SCHD_DATE
                         , A.ALT_DATE 					AS CARD_DATE
                      FROM SLA_ADVANCE_ALT_MST A, SLA_ADVANCE_ALT_DETAIL B, SLA_ADVANCE_MST C
                     WHERE A.ALT_NUM = B.ALT_NUM
                       AND B.ADVANCE_NUM = C.ADVANCE_NUM
                       AND A.ALT_TYPE_CD IN ('H03')
                       AND A.RECD_STATUS = 'L'
                       AND B.RECD_STATUS = 'L'
                       AND NVL(B.JOURNALZ_YN,'N') = 'N'
                       AND SUBSTR(B.ALT_DATE,0,6) = :slipMon
                       AND A.MU_CD = :muCd
                <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',A.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',A.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                       AND A.CC_CD = :ccCd
                </#if>
                     GROUP BY A.CUST_CD
                         , B.ALT_NUM
                         , A.ACCT_CD
                         , A.MU_CD
                         , A.CC_CD
                         , B.VAT_CD
                         , NVL(B.JOURNALZ_YN,'N')
                         , B.JOURNALZ_NUM
                         , A.BANK_CD
                         , A.BANK_ACCT_OWNR
                         , A.BANK_ACCT_NO
                         , C.ADVANCE_TYPE_CD
                         , A.ALT_TYPE_CD    
                         , A.ALT_DATE                     
               /*영업환불 대변*/
                     UNION ALL
                    SELECT CASE WHEN C.ACCT_CD IN ('21401080', '21401090') THEN 999999 ELSE NVL(B.CUST_CD, C.CUST_CD)  END  AS CUST_CD
                         , '8A'                     AS SLIP_TYPE
                         , '2'                      AS DR_CR_CLASS
                         , B.ALT_NUM
                         , NULL                     AS D_ACCT_CD
                         , A.ACCT_CD                AS C_ACCT_CD
                         , 0                        AS D_AMT
                         , CASE WHEN C.ADVANCE_TYPE_CD = 'F05' OR C.ADVANCE_TYPE_CD = 'F10' THEN SUM(B.ALT_SUPPLY_AMT + B.ALT_VAT_AMT)
                         		WHEN A.ALT_TYPE_CD = 'I01' AND B.VAT_CD = '20' THEN  SUM(B.ALT_SUPPLY_AMT + B.ALT_VAT_AMT)
                         ELSE
                         	SUM(B.ALT_SUPPLY_AMT)
                         END 
                         , A.MU_CD                  AS MU_CD
                         , A.CC_CD                  AS CC_CD
                         , 5                        AS SORT
                         , B.VAT_CD                 AS VAT_CD
                         , NVL(B.JOURNALZ_YN,'N')    AS JOURNALZ_YN
                         , B.JOURNALZ_NUM
                         , NULL 					AS BANK_CD
                         , NULL 					AS BANK_ACCT_OWNR
                         , NULL 					AS BANK_ACCT_NO
                         --, '' 				AS WITHDRAW_SCHD_DATE
                         --대변 계정에 지불예정일일이 들어가야 SAP에서 지급된다고 함  요청:박희경  처리:맹수영  20161229
                         , NVL(A.PAY_SCHD_DATE, A.ALT_DATE) AS WITHDRAW_SCHD_DATE
                         , NULL 					AS CARD_DATE
                      FROM SLA_ADVANCE_ALT_MST A, SLA_ADVANCE_ALT_DETAIL B, SLA_ADVANCE_MST C
                     WHERE A.ALT_NUM = B.ALT_NUM
                       AND B.ADVANCE_NUM = C.ADVANCE_NUM
                       AND A.ALT_TYPE_CD IN ('H01', 'H02', 'I01')
                       AND A.RECD_STATUS = 'L'
                       AND B.RECD_STATUS = 'L'
                       AND NVL(B.JOURNALZ_YN,'N') = 'N'
                       AND SUBSTR(B.ALT_DATE,0,6) = :slipMon
                       AND A.MU_CD = :muCd
                <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',A.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',A.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                       AND A.CC_CD = :ccCd
                </#if>
                     GROUP BY NVL(B.CUST_CD, C.CUST_CD)
                         , B.ALT_NUM
                         , A.ACCT_CD 
                         , A.MU_CD
                         , A.CC_CD
                         , B.VAT_CD
                         , NVL(B.JOURNALZ_YN,'N')
                         , B.JOURNALZ_NUM
                         , A.BANK_CD
                         , A.BANK_ACCT_OWNR
                         , A.BANK_ACCT_NO
                         , C.ADVANCE_TYPE_CD
                         , A.ALT_TYPE_CD
                         , C.ACCT_CD
                         , A.PAY_SCHD_DATE
                         , A.ALT_DATE
                     UNION ALL
                    SELECT NVL(B.CUST_CD, C.CUST_CD) AS CUST_CD
                         , '8A'                     AS SLIP_TYPE
                         , '2'                      AS DR_CR_CLASS
                         , B.ALT_NUM
                         , NULL                     AS D_ACCT_CD
                         , (SELECT V.ACCT_CD FROM SLA_VAT_CD_MST V WHERE V.VAT_CD = B.VAT_CD) AS C_ACCT_CD
                         , 0                        AS D_AMT
                         , CASE WHEN C.ADVANCE_TYPE_CD = 'F05' OR C.ADVANCE_TYPE_CD = 'F10' THEN
                         	0
                         ELSE
                         	SUM(B.ALT_VAT_AMT)
                         END 						AS C_AMT
                         , A.MU_CD                  AS MU_CD
                         , A.CC_CD                  AS CC_CD
                         , 6                        AS SORT
                         , B.VAT_CD                 AS VAT_CD
                         , NVL(B.JOURNALZ_YN,'N')    AS JOURNALZ_YN
                         , B.JOURNALZ_NUM
                         , A.BANK_CD
                         , A.BANK_ACCT_OWNR
                         , A.BANK_ACCT_NO
                         , '' 				AS WITHDRAW_SCHD_DATE
                         , NULL 					AS CARD_DATE
                      FROM SLA_ADVANCE_ALT_MST A, SLA_ADVANCE_ALT_DETAIL B, SLA_ADVANCE_MST C
                     WHERE A.ALT_NUM = B.ALT_NUM
                       AND B.ADVANCE_NUM = C.ADVANCE_NUM
                       AND A.ALT_TYPE_CD IN ('H01', 'H02', 'I01')
                       AND A.RECD_STATUS = 'L'
                       AND B.RECD_STATUS = 'L'
                       AND NVL(B.JOURNALZ_YN,'N') = 'N'
                       AND B.VAT_CD <> 'X'
                       AND SUBSTR(B.ALT_DATE,0,6) = :slipMon
                       AND A.MU_CD = :muCd
                       AND C.ADVANCE_TYPE_CD NOT IN ('F05','F10', 'F04')
                <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',A.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',A.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                       AND A.CC_CD = :ccCd
                </#if>
                     GROUP BY NVL(B.CUST_CD, C.CUST_CD)
                         , B.ALT_NUM
                         , A.ACCT_CD
                         , A.MU_CD
                         , A.CC_CD
                         , B.VAT_CD
                         , NVL(B.JOURNALZ_YN,'N')
                         , B.JOURNALZ_NUM
                         , A.BANK_CD
                         , A.BANK_ACCT_OWNR
                         , A.BANK_ACCT_NO   
                         , C.ADVANCE_TYPE_CD  
                         , A.ALT_TYPE_CD
                     UNION ALL
                    SELECT NVL(B.CUST_CD, C.CUST_CD) AS CUST_CD
                         , '8A'                     AS SLIP_TYPE
                         , '2'                      AS DR_CR_CLASS
                         , B.ALT_NUM
                         , NULL                     AS D_ACCT_CD
                         , (SELECT V.ACCT_CD FROM SLA_VAT_CD_MST V WHERE V.VAT_CD = B.VAT_CD) AS C_ACCT_CD
                         , 0                        AS D_AMT
                         , CASE WHEN C.ADVANCE_TYPE_CD = 'F05' OR C.ADVANCE_TYPE_CD = 'F10' THEN SUM(B.ALT_VAT_AMT) * -1
                         		WHEN A.ALT_TYPE_CD = 'I01' AND B.VAT_CD = '20' THEN  SUM(B.ALT_VAT_AMT) * -1
	                     ELSE 0 END 				AS C_AMT
                         , A.MU_CD                  AS MU_CD
                         , A.CC_CD                  AS CC_CD
                         , 7                        AS SORT
                         , B.VAT_CD                 AS VAT_CD
                         , NVL(B.JOURNALZ_YN,'N')   AS JOURNALZ_YN
                         , B.JOURNALZ_NUM
                         , A.BANK_CD
                         , A.BANK_ACCT_OWNR
                         , A.BANK_ACCT_NO
                         , '' 				AS WITHDRAW_SCHD_DATE
                         , NULL 					AS CARD_DATE
                      FROM SLA_ADVANCE_ALT_MST A, SLA_ADVANCE_ALT_DETAIL B, SLA_ADVANCE_MST C
                     WHERE A.ALT_NUM = B.ALT_NUM
                       AND B.ADVANCE_NUM = C.ADVANCE_NUM
                       AND A.ALT_TYPE_CD IN ('H01', 'H02', 'I01')
                       AND A.RECD_STATUS = 'L'
                       AND B.RECD_STATUS = 'L'
                       AND NVL(B.JOURNALZ_YN,'N') = 'N'
                       AND B.VAT_CD <> 'X'
                       AND SUBSTR(B.ALT_DATE,0,6) = :slipMon
                       AND A.MU_CD = :muCd
                       AND C.ADVANCE_TYPE_CD IN ('F05','F10', 'F04') 
                <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',A.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',A.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                       AND A.CC_CD = :ccCd
                </#if>
                     GROUP BY NVL(B.CUST_CD, C.CUST_CD)
                         , B.ALT_NUM
                         , A.ACCT_CD
                         , A.MU_CD
                         , A.CC_CD
                         , B.VAT_CD
                         , NVL(B.JOURNALZ_YN,'N')
                         , B.JOURNALZ_NUM
                         , A.BANK_CD
                         , A.BANK_ACCT_OWNR
                         , A.BANK_ACCT_NO    
                         , C.ADVANCE_TYPE_CD     
                         , A.ALT_TYPE_CD             
                    ) M
             ORDER BY M.CC_CD, M.ALT_NUM, M.SORT
        ]]></statement>

	<!-- 8B:원가 이관(직원식대처리) -->
	<statement name="selectSlipList8B" type="select">
		/*+ com.hwfs.sm.srm.dao.SapSlipUploadDAO.selectSlipList8B */
		<![CDATA[
            SELECT UPJANG
                 , '8B'                    AS SLIP_TYPE
                 , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'SLIP_TYPE' AND CODE = '8B') AS SLIP_TYPE_NM
                 , '1'                     AS DR_CR_CLASS
                 , DECODE(B.MU_CD, '2002', '42203030', '42203010')             AS D_ACCT_CD
                 , DECODE(B.MU_CD, '2002', '식음료원가', '식음료원가_식료')       	   AS D_ACCT_NM
                 , NULL                    AS C_ACCT_CD
                 , NULL                    AS C_ACCT_NM
                 , SUM(A.AMT) * -1         AS D_AMT
                 , 0                       AS C_AMT
                 , B.MU_CD                 AS MU_CD
                 , B.MU_NM                 AS MU_NM
                 , B.CC_CD                 AS CC_CD
                 , B.CC_CD                 AS CC_CD_ORG
                 , B.CC_NM                 AS CC_NM
                 , 1                       AS SORT
                 , '' SAP_CUST_CD
                 , '' CUST_CD
                 , '' CUST_NM
                 , '' TAX_SHET_NUM
                 , '' VAT_CLASS
                 , '' WITHDRAW_SCHD_DATE
                 , '' CUST_CD_ORG
                 , '' SUSPENSE_ALT_TYPE
                 , (SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = B.CC_CD) SUB_UPJANG_NUM
                 , NVL(A.JOURNALZ_YN,'N') JOURNALZ_YN
                 , A.JOURNALZ_NUM
              FROM MAS_WELFARE A
                 , HLDC_SC_DEPT_V B
             WHERE (SELECT Z.CC_CD FROM ST_UPJANG Z WHERE A.UPJANG = Z.UPJANG) = B.CC_CD
               AND NVL(A.JOURNALZ_YN,'N') = 'N'
               AND A.APPLY_MM = :slipMon
               AND B.MU_CD = :muCd
            <#if tmCd?has_content>
               AND (SCC_GET_TM_BY_CC('CODE',B.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',B.CC_CD) = :tmCd)
            </#if>
            <#if ccCd?has_content>
               AND B.CC_CD = :ccCd
            </#if>
             GROUP BY UPJANG
                 , B.MU_CD
                 , B.MU_NM
                 , B.CC_CD
                 , B.CC_NM
                 , NVL(A.JOURNALZ_YN,'N')
                 , A.JOURNALZ_NUM
             UNION ALL
            SELECT UPJANG
                 , '8B'                    AS SLIP_TYPE
                 , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'SLIP_TYPE' AND CODE = '8B') AS SLIP_TYPE_NM
                 , '1'                     AS DR_CR_CLASS
                 , '43201030'              AS D_ACCT_CD
                 , '복리후생비_직원식재료' AS D_ACCT_NM
                 , NULL                    AS C_ACCT_CD
                 , NULL                    AS C_ACCT_NM
                 , SUM(A.AMT)              AS D_AMT
                 , 0                       AS C_AMT
                 , B.MU_CD                 AS MU_CD
                 , B.MU_NM                 AS MU_NM
                 , B.CC_CD                 AS CC_CD
                 , B.CC_CD                 AS CC_CD_ORG
                 , B.CC_NM                 AS CC_NM
                 , 2                       AS SORT
                 , '' SAP_CUST_CD
                 , '' CUST_CD
                 , '' CUST_NM
                 , '' TAX_SHET_NUM
                 , '' VAT_CLASS
                 , '' WITHDRAW_SCHD_DATE
                 , '' CUST_CD_ORG
                 , '' SUSPENSE_ALT_TYPE
                 , (SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = B.CC_CD) SUB_UPJANG_NUM
                 , NVL(A.JOURNALZ_YN,'N') JOURNALZ_YN
                 , A.JOURNALZ_NUM
              FROM MAS_WELFARE A
                 , HLDC_SC_DEPT_V B
             WHERE (SELECT Z.CC_CD FROM ST_UPJANG Z WHERE A.UPJANG = Z.UPJANG) = B.CC_CD
               AND NVL(A.JOURNALZ_YN,'N') = 'N'
               AND A.APPLY_MM = :slipMon
               AND B.MU_CD = :muCd
            <#if tmCd?has_content>
               AND (SCC_GET_TM_BY_CC('CODE',B.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',B.CC_CD) = :tmCd)
            </#if>
            <#if ccCd?has_content>
               AND B.CC_CD = :ccCd
            </#if>
             GROUP BY UPJANG
                 , B.MU_CD
                 , B.MU_NM
                 , B.CC_CD
                 , B.CC_NM
                 , NVL(A.JOURNALZ_YN,'N')
                 , A.JOURNALZ_NUM
             UNION ALL
            SELECT UPJANG
                 , '8B'                    AS SLIP_TYPE
                 , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'SLIP_TYPE' AND CODE = '8B') AS SLIP_TYPE_NM
                 , '1'                     AS DR_CR_CLASS
                 , '90005060'              AS D_ACCT_CD
                 , '타계정식음료대체'      AS D_ACCT_NM
                 , NULL                    AS C_ACCT_CD
                 , NULL                    AS C_ACCT_NM
                 , SUM(A.AMT)              AS D_AMT
                 , 0                       AS C_AMT
                 , B.MU_CD                 AS MU_CD
                 , B.MU_NM                 AS MU_NM
                 , B.CC_CD                 AS CC_CD
                 , B.CC_CD                 AS CC_CD_ORG
                 , B.CC_NM                 AS CC_NM
                 , 3                       AS SORT
                 , '' SAP_CUST_CD
                 , '' CUST_CD
                 , '' CUST_NM
                 , '' TAX_SHET_NUM
                 , '' VAT_CLASS
                 , '' WITHDRAW_SCHD_DATE
                 , '' CUST_CD_ORG
                 , '' SUSPENSE_ALT_TYPE
                 , (SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = B.CC_CD) SUB_UPJANG_NUM
                 , NVL(A.JOURNALZ_YN,'N') JOURNALZ_YN
                 , A.JOURNALZ_NUM
              FROM MAS_WELFARE A
                 , HLDC_SC_DEPT_V B
             WHERE (SELECT Z.CC_CD FROM ST_UPJANG Z WHERE A.UPJANG = Z.UPJANG) = B.CC_CD
               AND NVL(A.JOURNALZ_YN,'N') = 'N'
               AND A.APPLY_MM = :slipMon
               AND B.MU_CD = :muCd
            <#if tmCd?has_content>
               AND (SCC_GET_TM_BY_CC('CODE',B.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',B.CC_CD) = :tmCd)
            </#if>
            <#if ccCd?has_content>
               AND B.CC_CD = :ccCd
            </#if>
             GROUP BY UPJANG
                 , B.MU_CD
                 , B.MU_NM
                 , B.CC_CD
                 , B.CC_NM
                 , NVL(A.JOURNALZ_YN,'N')
                 , A.JOURNALZ_NUM
             UNION ALL
            SELECT UPJANG
                 , '8B'                    AS SLIP_TYPE
                 , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'SLIP_TYPE' AND CODE = '8B') AS SLIP_TYPE_NM
                 , '2'                     AS DR_CR_CLASS
                 , NULL                    AS D_ACCT_CD
                 , NULL                    AS D_ACCT_NM
                 , '90005060'              AS C_ACCT_CD
                 , '타계정식음료대체'      AS C_ACCT_NM
                 , 0                       AS D_AMT
                 , SUM(A.AMT)              AS C_AMT
                 , B.MU_CD                 AS MU_CD
                 , B.MU_NM                 AS MU_NM
                 , B.CC_CD                 AS CC_CD
                 , B.CC_CD                 AS CC_CD_ORG
                 , B.CC_NM                 AS CC_NM
                 , 4                       AS SORT
                 , '' SAP_CUST_CD
                 , '' CUST_CD
                 , '' CUST_NM
                 , '' TAX_SHET_NUM
                 , '' VAT_CLASS
                 , '' WITHDRAW_SCHD_DATE
                 , '' CUST_CD_ORG
                 , '' SUSPENSE_ALT_TYPE
                 , (SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = B.CC_CD) SUB_UPJANG_NUM
                 , NVL(A.JOURNALZ_YN,'N') JOURNALZ_YN
                 , A.JOURNALZ_NUM
              FROM MAS_WELFARE A
                 , HLDC_SC_DEPT_V B
             WHERE (SELECT Z.CC_CD FROM ST_UPJANG Z WHERE A.UPJANG = Z.UPJANG) = B.CC_CD
               AND NVL(A.JOURNALZ_YN,'N') = 'N'
               AND A.APPLY_MM = :slipMon
               AND B.MU_CD = :muCd
            <#if tmCd?has_content>
               AND (SCC_GET_TM_BY_CC('CODE',B.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',B.CC_CD) = :tmCd)
            </#if>
            <#if ccCd?has_content>
               AND B.CC_CD = :ccCd
            </#if>
             GROUP BY UPJANG
                 , B.MU_CD
                 , B.MU_NM
                 , B.CC_CD
                 , B.CC_NM
                 , NVL(A.JOURNALZ_YN,'N')
                 , A.JOURNALZ_NUM
             ORDER BY CC_CD, UPJANG, SORT
        ]]>
	</statement>

	<!-- 8C:Helper -->
	<statement name="selectSlipList8C" type="select">
		/*+ com.hwfs.sm.srm.dao.SapSlipUploadDAO.selectSlipList8C */
		<![CDATA[
            SELECT A.UPJANG
                 , '8C'                     AS SLIP_TYPE
                 , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'SLIP_TYPE' AND CODE = '8C') SLIP_TYPE_NM
                 , '1'                      AS DR_CR_CLASS
                 , (SELECT ACCT_CD FROM SLA_TYPE_CD_MST Z WHERE TYPE_GRP_CD = 'MSC' AND TYPE_CD = 'M01')  D_ACCT_CD
                 , (SELECT ACCTNM5 FROM ST_ACCOUNT Z WHERE BU_CD = '2000' AND ACCTCD = (SELECT ACCT_CD FROM SLA_TYPE_CD_MST Z WHERE TYPE_GRP_CD = 'MSC' AND TYPE_CD = 'M01')) D_ACCT_NM
                 , NULL                     AS C_ACCT_CD
                 , NULL                     AS C_ACCT_NM
                 , SUM(A.SUP_AMT) * -1      AS D_AMT
                 , 0                        AS C_AMT
                 , B.MU_CD                  AS MU_CD
                 , B.MU_NM                  AS MU_NM
                 , B.CC_CD                  AS CC_CD
                 , B.CC_NM                  AS CC_NM
                 , 1                        AS SORT
                 , B.CC_CD                  AS CC_CD_ORG
                 , ''                       AS SAP_CUST_CD
                 , ''                       AS CUST_CD
                 , ''                       AS CUST_NM
                 , ''                       AS TAX_SHET_NUM
                 , ''                       AS VAT_CLASS
                 , ''                       AS WITHDRAW_SCHD_DATE
                 , ''                       AS CUST_CD_ORG
                 , ''                       AS SUSPENSE_ALT_TYPE
                 --, (SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = B.CC_CD) SUB_UPJANG_NUM
                 , '' SUB_UPJANG_NUM
                 , NVL(A.SLIP_CREATION_YN,'N') JOURNALZ_YN
                 , A.SLIP_NUM               AS JOURNALZ_NUM
              FROM RSS_HELPER_SUP_INFO A
                 , HLDC_SC_DEPT_V B
             WHERE NVL(A.SLIP_CREATION_YN,'N') = 'N'
               AND (SELECT DISTINCT Z.CC_CD FROM ST_UPJANG Z WHERE A.UPJANG = Z.UPJANG) = B.CC_CD
               AND SUBSTR(A.OCCUR_DATE,0,6) = :slipMon
               AND B.MU_CD = :muCd
            <#if tmCd?has_content>
               AND (SCC_GET_TM_BY_CC('CODE',B.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',B.CC_CD) = :tmCd)
            </#if>
            <#if ccCd?has_content>
               AND B.CC_CD = :ccCd
            </#if>
             GROUP BY A.UPJANG
                 , B.MU_CD
                 , B.MU_NM
                 , B.CC_CD
                 , B.CC_NM
                 , NVL(A.SLIP_CREATION_YN,'N')
                 , A.SLIP_NUM
             UNION ALL
            SELECT A.UPJANG
                 , '8C'
                 , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'SLIP_TYPE' AND CODE = '8C')
                 , '1'
                 , (SELECT ACCT_CD FROM SLA_TYPE_CD_MST Z WHERE TYPE_GRP_CD = 'MSC' AND TYPE_CD = 'M01')
                 , (SELECT ACCTNM5 FROM ST_ACCOUNT Z WHERE BU_CD = '2000' AND ACCTCD = (SELECT ACCT_CD FROM SLA_TYPE_CD_MST Z WHERE TYPE_GRP_CD = 'MSC' AND TYPE_CD = 'M01'))
                 , NULL
                 , NULL
                 , SUM(A.SUP_AMT)
                 , 0
                 , B.MU_CD
                 , B.MU_NM
                 , B.CC_CD
                 , B.CC_NM
                 , 2
                 , (SELECT DISTINCT Z.CC_CD FROM ST_UPJANG Z WHERE A.UPJANG = Z.UPJANG)
                 , ''
                 , ''
                 , ''
                 , ''
                 , ''
                 , ''
                 , ''
                 , ''
                 --, (SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = B.CC_CD)
                 ,'' SUB_UPJANG_NUM
                 , NVL(A.SLIP_CREATION_YN,'N')
                 , A.SLIP_NUM
              FROM RSS_HELPER_SUP_INFO A
                 , HLDC_SC_DEPT_V B
             WHERE NVL(A.SLIP_CREATION_YN,'N') = 'N'
               AND (SELECT DISTINCT Z.CC_CD FROM ST_UPJANG Z WHERE A.SUP_UPJANG = Z.UPJANG) = B.CC_CD
               AND SUBSTR(A.OCCUR_DATE,0,6) = :slipMon
               AND B.MU_CD = :muCd
            <#if tmCd?has_content>
               AND (SCC_GET_TM_BY_CC('CODE',(SELECT DISTINCT Z.CC_CD FROM ST_UPJANG Z WHERE A.UPJANG = Z.UPJANG)) = :tmCd
                OR SCC_GET_PT_BY_CC('CODE',(SELECT DISTINCT Z.CC_CD FROM ST_UPJANG Z WHERE A.UPJANG = Z.UPJANG)) = :tmCd)
            </#if>
            <#if ccCd?has_content>
               AND (SELECT DISTINCT Z.CC_CD FROM ST_UPJANG Z WHERE A.UPJANG = Z.UPJANG) = :ccCd
            </#if>
             GROUP BY A.UPJANG
                 , B.MU_CD
                 , B.MU_NM
                 , B.CC_CD
                 , B.CC_NM
                 , NVL(A.SLIP_CREATION_YN,'N')
                 , A.SLIP_NUM
             ORDER BY CC_CD_ORG, SORT, UPJANG
        ]]>
	</statement>

	<!-- 8D:영업기타 -->
	<statement name="selectSlipList8D" type="select">
		/*+ com.hwfs.sm.srm.dao.SapSlipUploadDAO.selectSlipList8D */
		<![CDATA[
		
            SELECT  M.SLIP_TYPE
                    ,SCC_CODE_NM('SLIP_TYPE', M.SLIP_TYPE) AS SLIP_TYPE_NM
                    ,M.SYS_CLASS
                    ,M.DR_CR_CLASS
                    ,M.D_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.D_ACCT_CD) D_ACCT_NM
                    ,M.C_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.C_ACCT_CD) C_ACCT_NM
                    ,M.D_AMT
                    ,M.C_AMT
                    ,M.MU_CD
                    ,SCC_MU_NM_FUN(M.MU_CD) MU_NM
                    ,M.CC_CD
                    ,M.CC_CD CC_CD_ORG
                    ,SCC_CC_NM_FUN(M.CC_CD) CC_NM
                    ,SCC_GET_SAP_CUST_CD(M.CUST_CD) SAP_CUST_CD
                    ,M.CUST_CD
                    ,(SELECT DISTINCT NM.CUSTNM FROM ST_CUST NM WHERE NM.CUSTCD = M.CUST_CD) CUST_NM
                    ,M.SORT
                    ,'' TAX_SHET_NUM
                    ,DECODE(M.VAT_CLASS,'X',NULL,M.VAT_CLASS) VAT_CLASS
                    ,M.WITHDRAW_SCHD_DATE
                    ,'' CUST_CD_ORG
                    ,M.RECEIVE_TYPE SUSPENSE_ALT_TYPE
                    ,(SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = M.CC_CD) SUB_UPJANG_NUM
                    ,M.OCCUR_DATE
                    ,M.JOURNALZ_YN
                    ,M.JOURNALZ_NUM
            FROM    (
                    SELECT TO_CHAR(M.CUST_CD)       AS CUST_CD
                         , NULL                     AS UPJANG_CD
                         , '8D'                     AS SLIP_TYPE
                         , M.SYS_CLASS
                         , '1'                      AS DR_CR_CLASS
                         , D.ACCT_CD                AS D_ACCT_CD
                         , (SELECT ACCTNM
                             FROM HLDC_ST_ACCOUNT_V
                            WHERE ACCTCD=D.ACCT_CD) AS D_ACCT_NM
                         , NULL                     AS C_ACCT_CD
                         , NULL                     AS C_ACCT_NM
                         , SUM(D.RECEIVE_AMT)       AS D_AMT
                         , 0                        AS C_AMT
                         , M.MU_CD                  AS MU_CD
                         , M.CC_CD                  AS CC_CD
                         , 4                        AS SORT
                         , NULL                     AS VAT_CLASS
                         , NULL                     AS WITHDRAW_SCHD_DATE
                         , 'B22'                    AS RECEIVE_TYPE
                         , SUBSTR(M.RECEIVE_DATE,1,6) AS OCCUR_DATE
                         , NVL(D.JOURNALZ_YN,'N') JOURNALZ_YN
                         , D.JOURNALZ_NUM
                      FROM SLA_AR_RECEIVE_MST M
                         , SLA_AR_RECEIVE_DETAIL D
                     WHERE M.RECEIVE_NUM=D.RECEIVE_NUM
                       AND M.RECEIVE_TYPE_CD IN ('B22')     -- B22:외환차손
                       AND M.RECD_STATUS='L'
                       AND D.RECD_STATUS='L'
                       AND NVL(D.JOURNALZ_YN,'N') = 'N'
                       AND SUBSTR(D.RECEIVE_DATE,0,6) = :slipMon
                       AND D.MU_CD = :muCd
                    <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',D.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',D.CC_CD) = :tmCd)
                    </#if>
                    <#if ccCd?has_content>
                       AND D.CC_CD = :ccCd
                    </#if>
                  GROUP BY M.CUST_CD
                         , M.SYS_CLASS
                         , D.ACCT_CD
                         , M.MU_CD
                         , M.CC_CD
                         , SUBSTR(M.RECEIVE_DATE,1,6)
                         , NVL(D.JOURNALZ_YN,'N')
                         , D.JOURNALZ_NUM
                UNION ALL
                    SELECT TO_CHAR(AR.CUST_CD)          AS CUST_CD
                         , NULL                         AS UPJANG_CD
                         , '8D'                         AS SLIP_TYPE
                         , AR.SYS_CLASS
                         , '2'                          AS DR_CR_CLASS
                         , NULL                         AS D_ACCT_CD
                         , NULL                         AS D_ACCT_NM
                         , AR.ACCT_CD                   AS C_ACCT_CD
                         , (SELECT ACCTNM
                              FROM HLDC_ST_ACCOUNT_V
                             WHERE ACCTCD=AR.ACCT_CD)   AS C_ACCT_NM
                         , 0                            AS D_AMT
                         , SUM(RD.RECEIVE_AMT)          AS C_AMT
                         , AR.MU_CD                     AS MU_CD
                         , AR.CC_CD                     AS CC_CD
                         , 5                            AS SORT
                         , NULL                         AS VAT_CLASS
                         , AR.WITHDRAW_SCHD_DATE
                         , 'B22'                    AS RECEIVE_TYPE
                         , SUBSTR(AR.OCCUR_DATE,1,6) OCCUR_DATE
                         , RD.JOURNALZ_YN
                         , RD.JOURNALZ_NUM
                      FROM SLA_AR_MST AR
                         , (SELECT D.AR_NUM
                                 , D.RECEIVE_NUM
                                 , D.RECEIVE_AMT
                                 , D.RECEIVE_DATE
                                 , NVL(D.JOURNALZ_YN,'N') JOURNALZ_YN
                                 , D.JOURNALZ_NUM
                              FROM SLA_AR_RECEIVE_MST M
                                 , SLA_AR_RECEIVE_DETAIL D
                             WHERE M.RECEIVE_NUM=D.RECEIVE_NUM
                               AND M.RECEIVE_TYPE_CD IN ('B22')     -- B22:외환차손
                               AND M.RECD_STATUS='L'
                               AND D.RECD_STATUS='L'
                               AND NVL(D.JOURNALZ_YN,'N') = 'N'
                               AND SUBSTR(D.RECEIVE_DATE,0,6) = :slipMon
                               AND D.MU_CD = :muCd
                            <#if tmCd?has_content>
                               AND (SCC_GET_TM_BY_CC('CODE',D.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',D.CC_CD) = :tmCd)
                            </#if>
                            <#if ccCd?has_content>
                               AND D.CC_CD = :ccCd
                            </#if>
                           ) RD
                     WHERE AR.AR_NUM=RD.AR_NUM
                       AND AR.RECD_STATUS='L'
                       AND SUBSTR(RD.RECEIVE_DATE,0,6) = :slipMon
                       AND AR.MU_CD = :muCd
                    <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',AR.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',AR.CC_CD) = :tmCd)
                    </#if>
                    <#if ccCd?has_content>
                       AND AR.CC_CD = :ccCd
                    </#if>
                  GROUP BY AR.CUST_CD
                         , AR.SYS_CLASS
                         , AR.ACCT_CD
                         , AR.MU_CD
                         , AR.CC_CD
                         , AR.WITHDRAW_SCHD_DATE
                         , SUBSTR(AR.OCCUR_DATE,1,6)
                         , RD.JOURNALZ_YN
                         , RD.JOURNALZ_NUM
                    ) M
                  WHERE	1=1
                  ORDER BY M.CC_CD, M.CUST_CD, M.SORT
                  
           
        ]]>
	</statement>

	<!-- 7D:대손처리 9/1 추가 -->
	<statement name="selectSlipList7D" type="select">
		/*+ com.hwfs.sm.srm.dao.SapSlipUploadDAO.selectSlipList7D */
		<![CDATA[
            SELECT  M.SLIP_TYPE
                    ,SCC_CODE_NM('SLIP_TYPE', M.SLIP_TYPE) AS SLIP_TYPE_NM
                    ,M.SYS_CLASS
                    ,M.DR_CR_CLASS
                    ,M.D_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.D_ACCT_CD) D_ACCT_NM
                    ,M.C_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.C_ACCT_CD) C_ACCT_NM
                    ,M.D_AMT
                    ,M.C_AMT
                    ,M.MU_CD
                    ,SCC_MU_NM_FUN(M.MU_CD) MU_NM
                    ,M.CC_CD
                    ,M.CC_CD CC_CD_ORG
                    ,SCC_CC_NM_FUN(M.CC_CD) CC_NM
                    ,SCC_GET_SAP_CUST_CD(M.CUST_CD) SAP_CUST_CD
                    ,M.CUST_CD
                    ,(SELECT DISTINCT NM.CUSTNM FROM ST_CUST NM WHERE NM.CUSTCD = M.CUST_CD) CUST_NM
                    ,M.SORT
                    ,'' TAX_SHET_NUM
                    ,DECODE(M.VAT_CLASS,'X',NULL,M.VAT_CLASS) VAT_CLASS
                    ,M.WITHDRAW_SCHD_DATE
                    ,'' CUST_CD_ORG
                    ,M.RECEIVE_TYPE SUSPENSE_ALT_TYPE
                    ,(SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = M.CC_CD) SUB_UPJANG_NUM
                    ,M.OCCUR_DATE
                    ,M.JOURNALZ_YN
                    ,M.JOURNALZ_NUM
            FROM    (
                    SELECT TO_CHAR(M.CUST_CD)       AS CUST_CD
                         , NULL                     AS UPJANG_CD
                         , '7D'                     AS SLIP_TYPE
                         , M.SYS_CLASS
                         , '1'                      AS DR_CR_CLASS
                         , D.ACCT_CD                AS D_ACCT_CD
                         , (SELECT ACCTNM
                             FROM HLDC_ST_ACCOUNT_V
                            WHERE ACCTCD=D.ACCT_CD) AS D_ACCT_NM
                         , NULL                     AS C_ACCT_CD
                         , NULL                     AS C_ACCT_NM
                         , SUM(D.RECEIVE_AMT)       AS D_AMT
                         , 0                        AS C_AMT
                         , M.MU_CD                  AS MU_CD
                         , M.CC_CD                  AS CC_CD
                         , 4                        AS SORT
                         , NULL                     AS VAT_CLASS
                         , NULL                     AS WITHDRAW_SCHD_DATE
                         , 'B17'                    AS RECEIVE_TYPE
                         , SUBSTR(M.RECEIVE_DATE,1,6) AS OCCUR_DATE
                         , NVL(D.JOURNALZ_YN,'N') JOURNALZ_YN
                         , D.JOURNALZ_NUM
                      FROM SLA_AR_RECEIVE_MST M
                         , SLA_AR_RECEIVE_DETAIL D
                     WHERE M.RECEIVE_NUM=D.RECEIVE_NUM
                       AND M.RECEIVE_TYPE_CD IN ('B17')     -- B17:대손처리
                       AND M.RECD_STATUS='L'
                       AND D.RECD_STATUS='L'
                       AND NVL(D.JOURNALZ_YN,'N') = 'N'
                       AND SUBSTR(D.RECEIVE_DATE,0,6) = :slipMon
                       AND D.MU_CD = :muCd
                    <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',D.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',D.CC_CD) = :tmCd)
                    </#if>
                    <#if ccCd?has_content>
                       AND D.CC_CD = :ccCd
                    </#if>
                  GROUP BY M.CUST_CD
                         , M.SYS_CLASS
                         , D.ACCT_CD
                         , M.MU_CD
                         , M.CC_CD
                         , SUBSTR(M.RECEIVE_DATE,1,6)
                         , NVL(D.JOURNALZ_YN,'N')
                         , D.JOURNALZ_NUM
                UNION ALL
                    SELECT TO_CHAR(AR.CUST_CD)          AS CUST_CD
                         , NULL                         AS UPJANG_CD
                         , '7D'                         AS SLIP_TYPE
                         , AR.SYS_CLASS
                         , '2'                          AS DR_CR_CLASS
                         , NULL                         AS D_ACCT_CD
                         , NULL                         AS D_ACCT_NM
                         , AR.ACCT_CD                   AS C_ACCT_CD
                         , (SELECT ACCTNM
                              FROM HLDC_ST_ACCOUNT_V
                             WHERE ACCTCD=AR.ACCT_CD)   AS C_ACCT_NM
                         , 0                            AS D_AMT
                         , SUM(RD.RECEIVE_AMT)          AS C_AMT
                         , AR.MU_CD                     AS MU_CD
                         , AR.CC_CD                     AS CC_CD
                         , 5                            AS SORT
                         , NULL                         AS VAT_CLASS
                         , AR.WITHDRAW_SCHD_DATE
                         , 'B17'                    AS RECEIVE_TYPE
                         , SUBSTR(AR.OCCUR_DATE,1,6) OCCUR_DATE
                         , RD.JOURNALZ_YN
                         , RD.JOURNALZ_NUM
                      FROM SLA_AR_MST AR
                         , (SELECT D.AR_NUM
                                 , D.RECEIVE_NUM
                                 , D.RECEIVE_AMT
                                 , D.RECEIVE_DATE
                                 , NVL(D.JOURNALZ_YN,'N') JOURNALZ_YN
                                 , D.JOURNALZ_NUM
                              FROM SLA_AR_RECEIVE_MST M
                                 , SLA_AR_RECEIVE_DETAIL D
                             WHERE M.RECEIVE_NUM=D.RECEIVE_NUM
                               AND M.RECEIVE_TYPE_CD IN ('B17')     -- B17:대손처리
                               AND M.RECD_STATUS='L'
                               AND D.RECD_STATUS='L'
                               AND NVL(D.JOURNALZ_YN,'N') = 'N'
                               AND SUBSTR(D.RECEIVE_DATE,0,6) = :slipMon
                               AND D.MU_CD = :muCd
                            <#if tmCd?has_content>
                               AND (SCC_GET_TM_BY_CC('CODE',D.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',D.CC_CD) = :tmCd)
                            </#if>
                            <#if ccCd?has_content>
                               AND D.CC_CD = :ccCd
                            </#if>
                           ) RD
                     WHERE AR.AR_NUM=RD.AR_NUM
                       AND AR.RECD_STATUS='L'
                       AND SUBSTR(RD.RECEIVE_DATE,0,6) = :slipMon
                       AND AR.MU_CD = :muCd
                    <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',AR.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',AR.CC_CD) = :tmCd)
                    </#if>
                    <#if ccCd?has_content>
                       AND AR.CC_CD = :ccCd
                    </#if>
                  GROUP BY AR.CUST_CD
                         , AR.SYS_CLASS
                         , AR.ACCT_CD
                         , AR.MU_CD
                         , AR.CC_CD
                         , AR.WITHDRAW_SCHD_DATE
                         , SUBSTR(AR.OCCUR_DATE,1,6)
                         , RD.JOURNALZ_YN
                         , RD.JOURNALZ_NUM
                    ) M
                  ORDER BY M.CC_CD, M.CUST_CD, M.SORT
        ]]>
	</statement>

	<!-- 7G:채권채무 9/1 추가-->
	<statement name="selectSlipList7G" type="select"><![CDATA[
            SELECT  M.SLIP_TYPE
                    ,SCC_CODE_NM('SLIP_TYPE', M.SLIP_TYPE) AS SLIP_TYPE_NM
                    ,M.SYS_CLASS
                    ,M.DR_CR_CLASS
                    ,M.D_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.D_ACCT_CD) D_ACCT_NM
                    ,M.C_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.C_ACCT_CD) C_ACCT_NM
                    ,M.D_AMT
                    ,M.C_AMT
                    ,M.MU_CD
                    ,SCC_MU_NM_FUN(M.MU_CD) MU_NM
                    ,M.CC_CD
                    ,SCC_CC_NM_FUN(M.CC_CD) CC_NM
                    ,SCC_GET_SAP_CUST_CD(M.CUST_CD) SAP_CUST_CD
                    ,M.CUST_CD
                    ,(SELECT DISTINCT NM.CUSTNM FROM ST_CUST NM WHERE NM.CUSTCD = M.CUST_CD) CUST_NM
                    ,M.SORT
                    ,'' TAX_SHET_NUM
                    ,DECODE(M.VAT_CLASS,'X',NULL,M.VAT_CLASS) VAT_CLASS
                    ,M.WITHDRAW_SCHD_DATE
                    ,'' CUST_CD_ORG
                    ,M.RECEIVE_TYPE SUSPENSE_ALT_TYPE
                    ,(SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = M.CC_CD) SUB_UPJANG_NUM
                    ,M.OCCUR_DATE
                    ,M.JOURNALZ_YN
                    ,M.JOURNALZ_NUM
                    ,M.CC_CD_ORG
                    --외식사업부 인경우 예외처리 호텔부문일때만 NEXT_BU_CD 추가
                    ,DECODE(M.MU_CD,'2003', DECODE(SUBSTR(M.CC_CD,0,1),'4', '3000','') ,'') NEXT_BU_CD
                    ,FV.BANK_TYP AS CRGLEFT_CLASS   
                    ,M.CARD_DATE
                    --,(SELECT BANK_TYP FROM VO_FC_VENDOR WHERE VD_CD = SCC_GET_SAP_CUST_CD(M.CUST_CD))AS CRGLEFT_CLASS                    
                    ,X_AMT
                    ,M.ALT_NUM
            FROM    (
                    SELECT TO_CHAR(M.CUST_CD)           AS CUST_CD
                         , '7G'                         AS SLIP_TYPE
                         , M.SYS_CLASS
                         , '1'                          AS DR_CR_CLASS
                         , D.ACCT_CD                    AS D_ACCT_CD
                         , NULL                         AS C_ACCT_CD
                         , SUM(D.RECEIVE_AMT)           AS D_AMT
                         , 0                            AS C_AMT
                         , D.MU_CD                      AS MU_CD
                         , D.CC_CD                      AS CC_CD
                         , DECODE(M.RECEIVE_TYPE_CD, 'B26', 20, 'B27', 21, 1)  AS SORT			 	--다음회사코드로 넘어갈때 차대변의 sort순서를 꺼꾸로 한다.
                         , NULL                         AS VAT_CLASS
                         , NULL                         AS WITHDRAW_SCHD_DATE
                         , M.RECEIVE_TYPE_CD                        AS RECEIVE_TYPE
                         , SUBSTR(D.RECEIVE_DATE,1,6)   AS OCCUR_DATE
                         , NVL(D.JOURNALZ_YN,'N')       AS JOURNALZ_YN
                         , D.JOURNALZ_NUM
                         , M.CC_CD						AS CC_CD_ORG
                         , NULL                   		AS CARD_DATE
                         , 0 AS X_AMT
                         , '' AS ALT_NUM
                      FROM SLA_AR_RECEIVE_MST M
                         , SLA_AR_RECEIVE_DETAIL D
                     WHERE M.RECEIVE_NUM=D.RECEIVE_NUM
                       --입금유형 추가 B35(미지급금대체)20200519 김호석
                       AND M.RECEIVE_TYPE_CD IN ('B21','B25','B26','B27','B28','B29','B30','B31','B33','B35')
                       AND M.RECD_STATUS='L'
                       AND D.RECD_STATUS='L'
                       AND NVL(D.JOURNALZ_YN,'N') = 'N'
                       AND SUBSTR(D.RECEIVE_DATE,0,6) = :slipMon
                       AND M.MU_CD = :muCd
                    <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
                    </#if>
                    <#if ccCd?has_content>
                       AND M.CC_CD = :ccCd
                    </#if>
                     GROUP BY M.CUST_CD
                         , M.SYS_CLASS
                         , D.ACCT_CD
                         , M.MU_CD
                         , M.CC_CD
                         , D.MU_CD
                         , D.CC_CD
                         , SUBSTR(D.RECEIVE_DATE,1,6)
                         , NVL(D.JOURNALZ_YN,'N')
                         , D.JOURNALZ_NUM
                         , M.RECEIVE_TYPE_CD
                         
                UNION ALL
                    SELECT TO_CHAR(AR.CUST_CD)          AS CUST_CD
                         , '7G'                         AS SLIP_TYPE
                         , AR.SYS_CLASS
                         , '1'                          AS DR_CR_CLASS
                         , AR.ACCT_CD                   AS D_ACCT_CD
                         , NULL                         AS C_ACCT_CD
                         , SUM(RD.APPLY_AMT)            AS D_AMT
                         , 0                            AS C_AMT
                         , AR.MU_CD                     AS MU_CD
                         , AR.CC_CD                     AS CC_CD
                         , 2                            AS SORT
                         , NULL                         AS VAT_CLASS
                         , NULL                         AS WITHDRAW_SCHD_DATE
                         , 'G03'                        AS RECEIVE_TYPE
                         , SUBSTR(AR.OCCUR_DATE,1,6)
                         , RD.JOURNALZ_YN
                         , RD.JOURNALZ_NUM
                         , AR.CC_CD				CC_CD_ORG
                         , NULL                   		AS CARD_DATE
                         , 0 AS X_AMT
                         , '' AS ALT_NUM
                      FROM SLA_ADVANCE_MST AR
                         , (SELECT D.ADVANCE_NUM
                                 , D.RECEIVE_NUM
                                 , D.APPLY_AMT
                                 , D.ALT_SUPPLY_AMT
                                 , D.ALT_DATE
                                 , NVL(D.JOURNALZ_YN,'N') JOURNALZ_YN
                                 , M.ADVANCE_ALT_OCCUR_CLASS
                                 , D.JOURNALZ_NUM
                                 , D.CUSER
                              FROM SLA_ADVANCE_ALT_MST M
                                 , SLA_ADVANCE_ALT_DETAIL D
                             WHERE M.ALT_NUM=D.ALT_NUM
                               AND M.ALT_TYPE_CD IN ('G03')     -- G03:채권상계
                               AND M.RECD_STATUS='L'
                               AND D.RECD_STATUS='L'
                               AND NVL(D.JOURNALZ_YN,'N') = 'N'
                               AND SUBSTR(D.ALT_DATE,0,6) = :slipMon
                               AND D.MU_CD = :muCd
                               AND (SCC_GET_TM_BY_CC('CODE',D.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',D.CC_CD) = :tmCd)
                           ) RD
                     WHERE AR.ADVANCE_NUM=RD.ADVANCE_NUM
                       AND AR.RECD_STATUS='L'
                       --AND SUBSTR(AR.OCCUR_DATE,0,6) = :slipMon
                       AND AR.MU_CD = :muCd
                    <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',AR.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',AR.CC_CD) = :tmCd)
                    </#if>
                    <#if ccCd?has_content>
                       AND AR.CC_CD = :ccCd
                    </#if>
                     AND RD.ADVANCE_ALT_OCCUR_CLASS NOT IN ('TO09', 'TO13')  --쿠폰소멸 전표에 같이 나와서 제외
                     GROUP BY AR.CUST_CD
                         , AR.SYS_CLASS
                         , AR.ACCT_CD
                         , AR.MU_CD
                         , AR.CC_CD
                         , SUBSTR(AR.OCCUR_DATE,1,6)
                         , RD.JOURNALZ_YN
                         , RD.JOURNALZ_NUM
                         
                   /*	차변 : 영업현금 상계 */
            -- 채권채무상계분개 잘못나와 주석 처리 : 아래부분에 있음  20160129      
		    UNION ALL                   
                    SELECT '999998'         AS CUST_CD
                         , '7G'                         AS SLIP_TYPE
                         , NULL							AS SYS_CLASS
                         , '1'                          AS DR_CR_CLASS
                         , D.ACCT_CD                    AS D_ACCT_CD
                         , NULL                         AS C_ACCT_CD
                         , SUM(D.RECEIVE_AMT)           AS D_AMT
                         , 0                            AS C_AMT
                         , M.MU_CD                      AS MU_CD
                         , M.CC_CD                      AS CC_CD
                         , 3                            AS SORT
                         , NULL                         AS VAT_CLASS
                         , NULL                         AS WITHDRAW_SCHD_DATE
                         , 'K02'                        AS RECEIVE_TYPE
                         , SUBSTR(D.ALT_DATE,1,6)   	AS OCCUR_DATE
                         , NVL(D.JOURNALZ_YN,'N')       AS JOURNALZ_YN
                         , D.JOURNALZ_NUM
                         , M.CC_CD				CC_CD_ORG
                         , NULL                   		AS CARD_DATE
                         , 0 AS X_AMT
                         , '' AS ALT_NUM
                      FROM SLA_SALES_CASH_ALT_MST M
                         , SLA_SALES_CASH_ALT_DETAIL D
                     WHERE M.SALES_CASH_RECEIVE_NUM=D.SALES_CASH_RECEIVE_NUM
                       AND M.ALT_TYPE_CD IN ('K02')
                       AND M.RECD_STATUS='L'
                       AND D.RECD_STATUS='L'
                       AND NVL(D.JOURNALZ_YN,'N') = 'N'
                       AND SUBSTR(D.ALT_DATE,0,6) = :slipMon
                       AND D.MU_CD = :muCd
                    <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',D.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',D.CC_CD) = :tmCd)
                    </#if>
                    <#if ccCd?has_content>
                       AND D.CC_CD = :ccCd
                    </#if>
                    GROUP BY D.ACCT_CD
                         , M.MU_CD
                         , M.CC_CD
                         , SUBSTR(D.ALT_DATE,1,6)
                         , NVL(D.JOURNALZ_YN,'N')
                         , D.JOURNALZ_NUM                   
                    
                    /* 차변 : 외상매입금_거래처 */
		    UNION ALL
                    SELECT  TO_CHAR(RD.CUST_CD)				CUST_CD
                    		,'7G'							SLIP_TYPE
                    		, '' 							SYS_CLASS
                            ,'1'							DR_CR_CLASS
                            ,RD.ACCT_CD						D_ACCT_CD
                            ,''								C_ACCT_CD
                            ,NVL(SUM(RD.RECEIVE_AMT),0)		D_AMT
                            ,0								C_AMT
                            ,RD.MU_CD						MU_CD
                            ,RD.CC_CD						CC_CD
                            ,4								SORT
                            ,NULL							VAT_CLASS
                            ,AR.WITHDRAW_SCHD_DATE				WITHDRAW_SCHD_DATE
                         	,RM.RECEIVE_TYPE_CD           	AS RECEIVE_TYPE                            
                            ,SUBSTR(AR.OCCUR_DATE,0,6)	OCCUR_DATE
                            ,NVL(RD.JOURNALZ_YN,'N')		JOURNALZ_YN
                            ,RD.JOURNALZ_NUM				JOURNALZ_NUM
                            ,RM.CC_CD						CC_CD_ORG
                            ,NULL					 		AS CARD_DATE
                            , 0 AS X_AMT
                            , '' AS ALT_NUM
                    FROM    SLA_AR_RECEIVE_MST RM
                            ,SLA_AR_RECEIVE_DETAIL RD
                            ,SLA_AR_MST AR
                    WHERE   RM.RECEIVE_NUM = RD.RECEIVE_NUM
                    AND 	RD.AR_NUM = AR.AR_NUM
                    AND     RM.RECD_STATUS = 'L'
                    AND     RD.RECD_STATUS = 'L'
                    AND     NVL(RD.JOURNALZ_YN,'N') = 'N'
                    AND     RM.RECEIVE_TYPE_CD IN ('B03', 'B23', 'B32')
                    AND     RM.RECEIVE_OCCUR_CLASS NOT IN ('RO03','RO04','RO05')
                    AND     SUBSTR(RM.RECEIVE_DATE,0,6) = :slipMon
                    AND     RM.MU_CD = :muCd
                    <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',RM.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',RM.CC_CD) = :tmCd)
                    </#if>
                    <#if ccCd?has_content>
                       AND RM.CC_CD = :ccCd
                    </#if>
                    GROUP BY RD.ACCT_CD
                            ,RD.MU_CD
                            ,RD.CC_CD
                            ,RD.CUST_CD
                            ,AR.WITHDRAW_SCHD_DATE
                            ,SUBSTR(AR.OCCUR_DATE,0,6)
                            ,NVL(RD.JOURNALZ_YN,'N')
                            ,RD.JOURNALZ_NUM
                            ,RM.CC_CD
                            ,RM.RECEIVE_TYPE_CD
                UNION ALL
                
                 /* 차변 : 선수금_마일리지 20200519 김호석 추가 */
                 SELECT CUST_CD,
                           SLIP_TYPE,
                           SYS_CLASS,
                           DR_CR_CLASS,
                           D_ACCT_CD,
                           C_ACCT_CD ,
                           SUM(D_AMT) AS D_AMT ,
                           SUM(C_AMT) AS C_AMT , 
                           MU_CD,
                           CC_CD,
                           SORT,
                           VAT_CLASS,
                           WITHDRAW_SCHD_DATE,
                           RECEIVE_TYPE ,
                           OCCUR_DATE,
                           JOURNALZ_YN,
                           JOURNALZ_NUM,
                           CC_CD_ORG,
                           CARD_DATE,
                           X_AMT,
                           ALT_NUM
                      FROM (SELECT '' AS CUST_CD ,--리조트 마일리지 거래처 정보 생략                                   
                                   '7G' AS SLIP_TYPE ,
                                   M.SYS_CLASS ,
                                   '1' AS DR_CR_CLASS ,
                                   D.ACCT_CD AS D_ACCT_CD ,
                                   NULL AS C_ACCT_CD ,
                                   A.AR_AMT AS D_AMT ,--리조트마일리지 사용금액                                                       
                                   0 AS C_AMT ,
                                   D.MU_CD AS MU_CD
                                   --리조트마일리지 귀속부서
                                   ,(SELECT REF_3
                                      FROM SLE_SALS_PAY
                                     WHERE SALES_DATE = A.OCCUR_DATE
                                       AND OUTLET_CD = A.UPJANG_CD
                                       AND RECEIPT_NUM = A.RECEIPT_NUM
                                       AND SEQ = TO_NUMBER(SUBSTR(A.RESERV_NUM, LENGTH(A.RESERV_NUM)-2, LENGTH(A.RESERV_NUM)))) AS CC_CD ,
                                   DECODE(M.RECEIVE_TYPE_CD, 'B26', 20, 'B27', 21, 1) AS SORT , --다음회사코드로 넘어갈때 차대변의 sort순서를 꺼꾸로 한다.                                   
                                   NULL AS VAT_CLASS ,
                                   NULL AS WITHDRAW_SCHD_DATE ,
                                   M.RECEIVE_TYPE_CD AS RECEIVE_TYPE ,
                                   SUBSTR(D.RECEIVE_DATE, 1, 6) AS OCCUR_DATE ,
                                   NVL(D.JOURNALZ_YN, 'N') AS JOURNALZ_YN ,
                                   D.JOURNALZ_NUM ,
                                   M.CC_CD AS CC_CD_ORG ,
                                   NULL AS CARD_DATE ,
                                   0 AS X_AMT
                                   --선수금번호
                                   ,(SELECT REF_4
                                      FROM SLE_SALS_PAY
                                     WHERE SALES_DATE = A.OCCUR_DATE
                                       AND OUTLET_CD = A.UPJANG_CD
                                       AND RECEIPT_NUM = A.RECEIPT_NUM
                                       AND SEQ = TO_NUMBER(SUBSTR(A.RESERV_NUM, LENGTH(A.RESERV_NUM)-2, LENGTH(A.RESERV_NUM)))) AS ALT_NUM
                              FROM SLA_AR_RECEIVE_MST M ,
                                   SLA_AR_RECEIVE_DETAIL D ,
                                   SLA_AR_MST A
                             WHERE M.RECEIVE_NUM=D.RECEIVE_NUM
                               AND D.AR_NUM = A.AR_NUM
                               AND M.RECEIVE_TYPE_CD IN ('B36')
                               AND A.RECD_STATUS='L'
                               AND M.RECD_STATUS='L'
                               AND D.RECD_STATUS='L'
                               AND NVL(D.JOURNALZ_YN, 'N') = 'N'
                               AND SUBSTR(M.RECEIVE_DATE, 0, 6) = :slipMon
                               AND M.MU_CD = :muCd 
                               <#if tmCd?has_content>
                               AND (SCC_GET_TM_BY_CC('CODE', M.CC_CD) = :tmCd
                                        OR SCC_GET_PT_BY_CC('CODE', M.CC_CD) = :tmCd) 
                               </#if> 
                               <#if ccCd?has_content>
                               AND M.CC_CD = :ccCd 
                               </#if>
                             GROUP BY M.SYS_CLASS,
                                   D.ACCT_CD,
                                   D.MU_CD,
                                   M.RECEIVE_TYPE_CD,
                                   M.RECEIVE_TYPE_CD ,
                                   D.RECEIVE_DATE,
                                   D.JOURNALZ_YN,
                                   D.JOURNALZ_NUM,
                                   M.CC_CD,
                                   A.AR_NUM ,
                                   A.UPJANG_CD,
                                   A.RESERV_NUM,
                                   A.OCCUR_DATE,
                                   A.RECEIPT_NUM,
                                   A.AR_AMT )
                     GROUP BY CUST_CD,
                           SLIP_TYPE,
                           SYS_CLASS,
                           DR_CR_CLASS,
                           D_ACCT_CD,
                           C_ACCT_CD,
                           MU_CD,
                           CC_CD,
                           SORT ,
                           VAT_CLASS,
                           WITHDRAW_SCHD_DATE,
                           RECEIVE_TYPE ,
                           OCCUR_DATE,
                           JOURNALZ_YN,
                           JOURNALZ_NUM,
                           CC_CD_ORG,
                           CARD_DATE,
                           X_AMT,
                           ALT_NUM
                    HAVING SUM(D_AMT) <> 0
                                
                UNION ALL
		/* 7G 대변 */
                    SELECT TO_CHAR(AR.CUST_CD)          AS CUST_CD
                         , '7G'                         AS SLIP_TYPE
                         , AR.SYS_CLASS
                         , '2'                          AS DR_CR_CLASS
                         , NULL                         AS D_ACCT_CD
                         , AR.ACCT_CD                   AS C_ACCT_CD
                         , 0                            AS D_AMT
                         , SUM(RD.RECEIVE_AMT)          AS C_AMT
                         , AR.MU_CD                     AS MU_CD
                         , AR.CC_CD                     AS CC_CD
                         , 5                            AS SORT
                         , NULL                         AS VAT_CLASS
                         , AR.WITHDRAW_SCHD_DATE
                         , RD.RECEIVE_TYPE_CD                        AS RECEIVE_TYPE
                         , SUBSTR(AR.OCCUR_DATE,1,6)
                         , RD.JOURNALZ_YN
                         , RD.JOURNALZ_NUM
                         , AR.CC_CD				CC_CD_ORG
                         , DECODE(AR.ACCT_CD, '11204014', AR.OCCUR_DATE, NULL) 	AS CARD_DATE
                         , 0 AS X_AMT
                         , '' AS ALT_NUM
                      FROM SLA_AR_MST AR
                         , (SELECT D.AR_NUM
                                 , D.RECEIVE_NUM
                                 , D.RECEIVE_AMT
                                 , D.RECEIVE_DATE
                                 , NVL(D.JOURNALZ_YN,'N') JOURNALZ_YN
                                 , D.JOURNALZ_NUM
                                 , D.CUSER
                                 , M.RECEIVE_TYPE_CD
                              FROM SLA_AR_RECEIVE_MST M
                                 , SLA_AR_RECEIVE_DETAIL D
                             WHERE M.RECEIVE_NUM=D.RECEIVE_NUM
                               --입금유형 추가 B35(미지급금대체), B36(선수금 마일리지) 20200519 김호석
                               AND M.RECEIVE_TYPE_CD IN ('B21', 'B25','B26','B27','B28','B29','B30','B31','B33','B35','B36') 
                               AND M.RECD_STATUS='L'
                               AND D.RECD_STATUS='L'
                               AND NVL(D.JOURNALZ_YN,'N') = 'N'
                               AND SUBSTR(D.RECEIVE_DATE,0,6) = :slipMon
                               AND D.MU_CD = :muCd
                               AND (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
                           ) RD
                     WHERE AR.AR_NUM=RD.AR_NUM
                       AND AR.RECD_STATUS='L'
                       AND SUBSTR(RD.RECEIVE_DATE,0,6) = :slipMon
                       AND AR.MU_CD = :muCd
                    <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',AR.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',AR.CC_CD) = :tmCd)
                    </#if>
                    <#if ccCd?has_content>
                       AND AR.CC_CD = :ccCd
                    </#if>
                     GROUP BY AR.CUST_CD
                         , AR.SYS_CLASS
                         , AR.ACCT_CD
                         , AR.MU_CD
                         , AR.CC_CD
                         , AR.WITHDRAW_SCHD_DATE
                         , SUBSTR(AR.OCCUR_DATE,1,6)
                         , RD.JOURNALZ_YN
                         , RD.JOURNALZ_NUM
                         , DECODE(AR.ACCT_CD, '11204014', AR.OCCUR_DATE, NULL)
                         , RD.RECEIVE_TYPE_CD  

			--영업현금 +,-정리 프로세스 추가 20180808  처리자 : 김호석  요청자 : 김성권 
			 UNION ALL
 					SELECT TO_CHAR(A.CUST_CD)           AS CUST_CD
                         , '7G'                         AS SLIP_TYPE
                         , A.SYS_CLASS
                         , '2'                          AS DR_CR_CLASS
                         , NULL                    		AS D_ACCT_CD
                         , A.ACCT_CD                    AS C_ACCT_CD
                         , 0           					AS D_AMT
                         , SUM(D.RECEIVE_AMT)           AS C_AMT
                         , D.MU_CD                      AS MU_CD
                         , D.CC_CD                      AS CC_CD
                         , 22 							AS SORT		--다음회사코드로 넘어갈때 차대변의 sort순서를 꺼꾸로 한다.
                         , NULL                         AS VAT_CLASS
                         , NULL                         AS WITHDRAW_SCHD_DATE
                         , M.ALT_TYPE_CD                AS RECEIVE_TYPE
                         , SUBSTR(D.ALT_DATE,1,6)   	AS OCCUR_DATE
                         , NVL(D.JOURNALZ_YN,'N')       AS JOURNALZ_YN
                         , D.JOURNALZ_NUM
                         , M.CC_CD						AS CC_CD_ORG
                         , NULL                   		AS CARD_DATE
                         , 0 							AS X_AMT
                         , '' AS ALT_NUM                         
                      FROM SLA_SALES_CASH_OCCUR_INFO  A
                         , SLA_SALES_CASH_ALT_MST M
                         , SLA_SALES_CASH_ALT_DETAIL D
                     WHERE A.SALES_CASH_NUM = D.SALES_CASH_NUM
                       AND M.SALES_CASH_RECEIVE_NUM = D.SALES_CASH_RECEIVE_NUM
                       AND M.ALT_TYPE_CD IN ('K03')  -- +-현금처리 유형만
                       AND D.ALT_DATE >= '20180801'  -- 2018.08.01 이전 미처리건은 조회안되도록 설정(획계팀, 전략기획팀 김성권대리확인)
                       AND M.RECD_STATUS='L'
                       AND D.RECD_STATUS='L'
                       AND NVL(D.JOURNALZ_YN,'N') = 'N'
                       AND SUBSTR(D.ALT_DATE,0,6) = :slipMon
                       AND M.MU_CD = :muCd
	                    <#if tmCd?has_content>
	                       AND (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
	                    </#if>
	                    <#if ccCd?has_content>
	                       AND M.CC_CD = :ccCd
	                    </#if>
                     GROUP BY A.CUST_CD
                         , A.SYS_CLASS
                         , A.ACCT_CD
                         , M.MU_CD
                         , M.CC_CD
                         , D.MU_CD
                         , D.CC_CD
                         , SUBSTR(D.ALT_DATE,1,6)
                         , NVL(D.JOURNALZ_YN,'N')
                         , D.JOURNALZ_NUM
                         , M.ALT_TYPE_CD
                         , D.RECEIVE_AMT                         
                         
			--+,-채권정리 프로세스 수정 20180521  처리자 : 김호석  요청자 : 박근화
 			UNION ALL
                     SELECT TO_CHAR(M.CUST_CD)           AS CUST_CD
                         , '7G'                         AS SLIP_TYPE
                         , M.SYS_CLASS
                         , '2'                          AS DR_CR_CLASS
                         , NULL                    		AS D_ACCT_CD
                         , A.ACCT_CD                    AS C_ACCT_CD 
                         , 0           					AS D_AMT
                         , SUM(D.RECEIVE_AMT)           AS C_AMT
                         , D.MU_CD                      AS MU_CD
                         , D.CC_CD                      AS CC_CD
                         , DECODE(M.RECEIVE_TYPE_CD, 'B26', 20, 'B27', 21, 1)  AS SORT			 	--다음회사코드로 넘어갈때 차대변의 sort순서를 꺼꾸로 한다.
                         , NULL                         AS VAT_CLASS
                         , NULL                         AS WITHDRAW_SCHD_DATE
                         , M.RECEIVE_TYPE_CD                        AS RECEIVE_TYPE
                         , SUBSTR(D.RECEIVE_DATE,1,6)   AS OCCUR_DATE
                         , NVL(D.JOURNALZ_YN,'N')       AS JOURNALZ_YN
                         , D.JOURNALZ_NUM
                         , M.CC_CD						AS CC_CD_ORG
                         , NULL                   		AS CARD_DATE
                         , 0 AS X_AMT
                         , '' AS ALT_NUM
                      FROM SLA_AR_MST A
                         , SLA_AR_RECEIVE_MST M
                         , SLA_AR_RECEIVE_DETAIL D
                     WHERE A.AR_NUM = D.AR_NUM
                       AND M.RECEIVE_NUM=D.RECEIVE_NUM
                       AND M.RECEIVE_TYPE_CD IN ('B08')
                       AND M.RECD_STATUS='L'
                       AND D.RECD_STATUS='L'
                       AND NVL(D.JOURNALZ_YN,'N') = 'N'
                       AND SUBSTR(D.RECEIVE_DATE,0,6) = :slipMon
                       AND M.MU_CD = :muCd
                    <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
                    </#if>
                    <#if ccCd?has_content>
                       AND M.CC_CD = :ccCd
                    </#if>
                     GROUP BY M.CUST_CD
                         , M.SYS_CLASS
                         , A.ACCT_CD
                         , M.MU_CD
                         , M.CC_CD
                         , D.MU_CD
                         , D.CC_CD
                         , SUBSTR(D.RECEIVE_DATE,1,6)
                         , NVL(D.JOURNALZ_YN,'N')
                         , D.JOURNALZ_NUM
                         , M.RECEIVE_TYPE_CD     
                         ,D.RECEIVE_AMT                               
                UNION ALL
                	-- 선수금 (공급가액 + 부가세)
                    SELECT TO_CHAR(M.CUST_CD)           AS CUST_CD
                         , '7G'                         AS SLIP_TYPE
                         , M.SYS_CLASS
                         , '2'                          AS DR_CR_CLASS
                         , NULL                         AS D_ACCT_CD
                         , D.ACCT_CD                    AS C_ACCT_CD
                         , 0                            AS D_AMT
                         , SUM(NVL(D.ALT_SUPPLY_AMT,0) + NVL(D.ALT_VAT_AMT,0)) AS C_AMT
                         , M.MU_CD                      AS MU_CD
                         , M.CC_CD                      AS CC_CD
                         , 5                            AS SORT
                         , NULL                         AS VAT_CLASS
                         , NULL                         AS WITHDRAW_SCHD_DATE
                         , 'G03'                        AS RECEIVE_TYPE
                         , SUBSTR(D.ALT_DATE,1,6)       AS OCCUR_DATE
                         , NVL(D.JOURNALZ_YN,'N')       AS JOURNALZ_YN
                         , D.JOURNALZ_NUM
                         , M.CC_CD				CC_CD_ORG
                         , NULL						 	AS CARD_DATE
                         , 0 AS X_AMT
                         , '' AS ALT_NUM
                      FROM SLA_ADVANCE_ALT_MST M
                         , SLA_ADVANCE_ALT_DETAIL D
                     WHERE M.ALT_NUM=D.ALT_NUM
                       AND M.ALT_TYPE_CD IN ('G03')     -- G03:채권상계
                       AND M.RECD_STATUS='L'
                       AND D.RECD_STATUS='L'
                       AND NVL(D.JOURNALZ_YN,'N') = 'N'
                       AND SUBSTR(D.ALT_DATE,0,6) = :slipMon
                       AND M.MU_CD = :muCd
                       AND M.ADVANCE_ALT_OCCUR_CLASS NOT IN ('TO09', 'TO13')  --쿠폰소멸 전표에 같이 나와서 제외
                    <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
                    </#if>
                    <#if ccCd?has_content>
                       AND M.CC_CD = :ccCd
                    </#if>
                     GROUP BY M.CUST_CD
                         , M.SYS_CLASS
                         , D.ACCT_CD
                         , M.MU_CD
                         , M.CC_CD
                         , SUBSTR(D.ALT_DATE,1,6)
                         , NVL(D.JOURNALZ_YN,'N')
                         , D.JOURNALZ_NUM
                UNION ALL
                	-- 선수금 (- 부가세)
                    SELECT TO_CHAR(M.CUST_CD)           AS CUST_CD
                         , '7G'                         AS SLIP_TYPE
                         , M.SYS_CLASS
                         , '2'                          AS DR_CR_CLASS
                         , NULL                         AS D_ACCT_CD
                         --, '90007020'                    AS C_ACCT_CD
                         ,'21405000'                    AS C_ACCT_CD
                         , 0                            AS D_AMT
                         , SUM(NVL(ALT_VAT_AMT,0)) * -1 AS C_AMT
                         , M.MU_CD                      AS MU_CD
                         , M.CC_CD                      AS CC_CD
                         , 6                            AS SORT
                         , '20'                         AS VAT_CLASS
                         , NULL                         AS WITHDRAW_SCHD_DATE
                         , 'G03'                        AS RECEIVE_TYPE
                         , SUBSTR(D.ALT_DATE,1,6)       AS OCCUR_DATE
                         , NVL(D.JOURNALZ_YN,'N')       AS JOURNALZ_YN
                         , D.JOURNALZ_NUM
                         , M.CC_CD				CC_CD_ORG
                         , NULL						 	AS CARD_DATE
                         , SUM(NVL(D.ALT_SUPPLY_AMT,0)) * -1 AS X_AMT
                         , '' AS ALT_NUM
                      FROM SLA_ADVANCE_ALT_MST M
                         , SLA_ADVANCE_ALT_DETAIL D
                     WHERE M.ALT_NUM=D.ALT_NUM
                       AND M.ALT_TYPE_CD IN ('G03')     -- G03:채권상계
                       AND M.RECD_STATUS='L'
                       AND D.RECD_STATUS='L'
                       AND NVL(D.JOURNALZ_YN,'N') = 'N'
                       AND D.VAT_CD NOT IN ('X')
                       --채권채무상계전표인 경우 부가세 표시 안되도록 처리 20180907 김호석
                       --AND D.ACCT_CD != '90005020'                       
                       AND SUBSTR(D.ALT_DATE,0,6) = :slipMon
                       AND M.MU_CD = :muCd
                       --식권판매선수금인 경우는 부가세 안나오도록 수정 20160302 맹수영
                      -- AND D.ADVANCE_NUM NOT IN (SELECT ADVANCE_NUM FROM SLA_ADVANCE_MST X WHERE D.ADVANCE_NUM = X.ADVANCE_NUM AND ADVANCE_OCCUR_CLASS = 'AO07')
                       AND M.ADVANCE_ALT_OCCUR_CLASS NOT IN ('TO09', 'TO13')  --쿠폰소멸 전표에 같이 나와서 제외
                    <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',M.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',M.CC_CD) = :tmCd)
                    </#if>
                    <#if ccCd?has_content>
                       AND M.CC_CD = :ccCd
                    </#if>
                     GROUP BY M.CUST_CD
                         , M.SYS_CLASS
                         , D.ACCT_CD
                         , M.MU_CD
                         , M.CC_CD
                         , SUBSTR(D.ALT_DATE,1,6)
                         , NVL(D.JOURNALZ_YN,'N')
                         , D.JOURNALZ_NUM
                                                     
                    UNION ALL
                    /* 대변 : 영업수입 현금 */                         
                    SELECT  '999998'           AS CUST_CD
                         	,'7G'                           SLIP_TYPE
                    		,NULL							SYS_CLASS
                            ,DECODE(O.ACCT_CD ,'90005020', '1','2' )  DR_CR_CLASS
                            ,DECODE(O.ACCT_CD ,'90005020', '90005020', NULL )  D_ACCT_CD
                            ,DECODE(O.ACCT_CD ,'90005020', NULL,O.ACCT_CD ) C_ACCT_CD
                            ,DECODE(O.ACCT_CD, '90005020',NVL(SUM(D.RECEIVE_AMT),0), 0  ) D_AMT
                            ,DECODE(O.ACCT_CD, '90005020',0 , NVL(SUM(D.RECEIVE_AMT),0) )      C_AMT
                            ,D.MU_CD                        MU_CD
                            ,D.CC_CD                        CC_CD
                            ,7                              SORT
	                        , NULL                         AS VAT_CLASS
	                        , NULL                         AS WITHDRAW_SCHD_DATE
	                        , 'K02'                        AS RECEIVE_TYPE
	                        , SUBSTR(D.ALT_DATE,1,6)       AS OCCUR_DATE
	                        , NVL(D.JOURNALZ_YN,'N')       AS JOURNALZ_YN
	                        , D.JOURNALZ_NUM
	                        , D.CC_CD						AS CC_CD_ORG
	                        , NULL						 	AS CARD_DATE
	                        ,0 X_AMT
                            , '' AS ALT_NUM
                    FROM    SLA_SALES_CASH_OCCUR_INFO O
                            ,SLA_SALES_CASH_ALT_DETAIL D
                            ,SLA_SALES_CASH_ALT_MST M
                    WHERE   O.SALES_CASH_NUM = D.SALES_CASH_NUM
                    AND 	D.SALES_CASH_RECEIVE_NUM = M.SALES_CASH_RECEIVE_NUM
                    AND 	M.ALT_TYPE_CD	= 'K02'
                    AND     O.RECD_STATUS = 'L'
                    AND     D.RECD_STATUS = 'L'
                    AND     M.RECD_STATUS = 'L'
                    AND     NVL(D.JOURNALZ_YN,'N') = 'N'
                    AND     SUBSTR(D.ALT_DATE,0,6) = :slipMon
                    AND     D.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     (SCC_GET_TM_BY_CC('CODE',D.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',D.CC_CD) = :tmCd)
                </#if>
                <#if ccCd?has_content>
                    AND     D.CC_CD = :ccCd
                </#if>
                    GROUP BY O.ACCT_CD
                            ,M.ACCT_CD
                            ,D.MU_CD
                            ,D.CC_CD
                            ,SUBSTR(O.OCCUR_DATE,1,6)
                            ,NVL(D.JOURNALZ_YN,'N')
                            ,D.JOURNALZ_NUM
                            ,SUBSTR(D.ALT_DATE,1,6)    
                            ,O.SALES_CASH_NUM                        
                    UNION ALL
                    /* 대변 : 외상매출금_FO */
                    SELECT  TO_CHAR(NVL(AR.CUST_CD_OLD, AR.CUST_CD))           	AS CUST_CD
                    		,'7G'                         	AS SLIP_TYPE
                            ,''
                            ,'2'                           	AS DR_CR_CLASS
                            , NULL                         	AS D_ACCT_CD
                            ,AR.ACCT_CD                    	AS C_ACCT_CD
                            ,0                           	AS D_AMT
                            ,NVL(SUM(RD.RECEIVE_AMT),0)     AS C_AMT
                            ,AR.MU_CD                      	AS MU_CD
                            ,AR.CC_CD                      	AS CC_CD
                            ,9                           	AS SORT
                            ,NULL                         	AS VAT_CLASS
                            ,AR.WITHDRAW_SCHD_DATE         	AS WITHDRAW_SCHD_DATE
                            , RM.RECEIVE_TYPE_CD           	AS RECEIVE_TYPE
                            ,SUBSTR(AR.OCCUR_DATE,1,6)    	AS OCCUR_DATE   
                            ,NVL(RD.JOURNALZ_YN,'N')		AS JOURNALZ_YN
                            ,RD.JOURNALZ_NUM
                            ,AR.CC_CD						AS CC_CD_ORG
                            ,DECODE(AR.ACCT_CD, '11204014', AR.OCCUR_DATE, NULL) 	AS CARD_DATE
                            ,0 X_AMT
                            , '' AS ALT_NUM
                    FROM    SLA_AR_MST AR
                            ,SLA_AR_RECEIVE_DETAIL RD
                            ,SLA_AR_RECEIVE_MST RM
                    WHERE   AR.AR_NUM = RD.AR_NUM
                    AND     RM.RECEIVE_NUM = RD.RECEIVE_NUM
                    AND     AR.RECD_STATUS = 'L'
                    AND     RD.RECD_STATUS = 'L'
                    AND     RM.RECD_STATUS = 'L'
                    AND     NVL(RD.JOURNALZ_YN,'N') = 'N'
                    AND     AR.AR_TYPE_CD NOT IN ('A04')
                    AND     RM.RECEIVE_TYPE_CD IN ('B03', 'B23','B32')
                    AND     RD.ACCT_CD NOT IN ('90005020')
                    AND     SUBSTR(RD.RECEIVE_DATE,0,6) = :slipMon
                    AND     AR.MU_CD = :muCd
                    <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',AR.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',AR.CC_CD) = :tmCd)
                    </#if>
                    <#if ccCd?has_content>
                       AND AR.CC_CD = :ccCd
                    </#if>
                    GROUP BY AR.ACCT_CD
                            ,AR.MU_CD
                            ,AR.CC_CD
                            ,NVL(AR.CUST_CD_OLD, AR.CUST_CD)
                            ,SUBSTR(AR.OCCUR_DATE,1,6)
                            ,AR.WITHDRAW_SCHD_DATE
                            ,NVL(RD.JOURNALZ_YN,'N')
                            ,RD.JOURNALZ_NUM
                            ,RM.RECEIVE_TYPE_CD
                            ,DECODE(AR.ACCT_CD, '11204014', AR.OCCUR_DATE, NULL)
                    ) M
                      ,VO_FC_VENDOR FV
                  WHERE FV.VD_CD(+) = SCC_GET_SAP_CUST_CD(M.CUST_CD)
                  <#if muCd = "2005">
                  ORDER BY M.CC_CD_ORG, M.SORT
                  </#if>
                 --B30 추가하면서 타 BU_CD 라서 정렬 변경 20160419  
                 --ORDER BY D_ACCT_CD, NVL(NEXT_BU_CD,'1'), M.CC_CD_ORG, M.SORT
                  <#if muCd != "2005">
                  --ORDER BY NVL(NEXT_BU_CD,'1'),D_ACCT_CD, M.CC_CD_ORG, M.SORT
                  --정렬 방식 변경 처리자 : 맹수영 20160627 요청자: 김성권(CH201606_00521)
                   ORDER BY M.CC_CD_ORG,NVL(NEXT_BU_CD,'1'),D_ACCT_CD,  M.SORT
                  </#if>
        ]]></statement>

	<!-- 8O:내부이용가계정(내부매출) 9/1 추가-->
	<statement name="selectSlipList8O" type="select"><![CDATA[
            SELECT  M.SLIP_TYPE
                    ,SCC_CODE_NM('SLIP_TYPE', M.SLIP_TYPE) AS SLIP_TYPE_NM
                    ,M.SYS_CLASS
                    ,M.EVIDENCE_2
                    ,M.RECEIPT_NUM
                    ,M.DR_CR_CLASS
                    ,M.D_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.D_ACCT_CD) D_ACCT_NM
                    ,M.C_ACCT_CD
                    ,SCC_ACCT_NM_FUN(M.C_ACCT_CD) C_ACCT_NM
                    ,M.D_AMT
                    ,M.C_AMT
                    ,M.MU_CD
                    ,SCC_MU_NM_FUN(M.MU_CD) MU_NM
                    ,M.CC_CD
                    ,SCC_CC_NM_FUN(M.CC_CD) CC_NM
                    ,M.CC_CD_ORG
                    ,'99002'            SAP_CUST_CD     --SCC_GET_SAP_CUST_CD(M.CUST_CD)
                    ,'999991'           CUST_CD         --M.CUST_CD
                    ,'기타(내부거래)'   CUST_NM         --(SELECT DISTINCT NM.CUSTNM FROM ST_CUST NM WHERE NM.CUSTCD = M.CUST_CD)
                    ,M.SORT
                    ,'' TAX_SHET_NUM
                    ,DECODE(M.VAT_CLASS,'X','',M.VAT_CLASS) VAT_CLASS
                    ,M.WITHDRAW_SCHD_DATE
                    ,'' CUST_CD_ORG
                    ,M.RECEIVE_TYPE SUSPENSE_ALT_TYPE
                    ,M.SUB_UPJANG_NUM
                    ,M.OCCUR_DATE
                    ,M.JOURNALZ_YN
                    ,M.JOURNALZ_NUM
                    --외식사업부 예외조건 
                    ,DECODE(M.MU_CD, '2003',DECODE(SUBSTR(M.CC_CD,0,1),'4','3000',''), '') NEXT_BU_CD
                    --,DECODE(M.MU_CD, '2003','', DECODE(SUBSTR(M.CC_CD,0,1),'1','1000','2','1000','4', '3000','')) NEXT_BU_CD
            FROM    (
                    SELECT TO_CHAR(A.CUST_CD)   AS CUST_CD
                         , A.UPJANG_CD
                         , '8O'                 AS SLIP_TYPE
                         , B.SYS_CLASS
                         , '1'                  AS DR_CR_CLASS
                         , '98003010'                   AS D_ACCT_CD
                         , '내부이용가계정' AS D_ACCT_NM
                         , NULL                 AS C_ACCT_CD
                         , NULL                 AS C_ACCT_NM
                         , DECODE(NVL(B.NET_AMT,0), 0, B.AMT, B.NET_AMT)        AS D_AMT
                         , 0                    AS C_AMT
                         , A.MU_CD              AS MU_CD
                         --, A.CC_CD              AS CC_CD
                         , (
                         SELECT DISTINCT CC_CD
                         FROM   HR_PERSONAL X
                         WHERE  X.SABUN = DECODE(LENGTH(B.EVIDENCE_4), 13, (SELECT COUPON_PROC_USER FROM SLA_COUPON_PUBLISH_MGMT X WHERE TO_NUMBER(B.EVIDENCE_4) BETWEEN TO_NUMBER(COUPON_NUM_FR) AND TO_NUMBER(COUPON_NUM_TO) AND RECD_STATUS = 'L'), B.EVIDENCE_2)
                         )                      AS CC_CD
                         , 1                    AS SORT
                         , NULL                 AS VAT_CLASS
                         , NULL                 AS WITHDRAW_SCHD_DATE
                         , 'B00'                AS RECEIVE_TYPE
                         , SUBSTR(A.OCCUR_DATE,1,6) OCCUR_DATE
                         , NVL(B.JOURNALZ_YN,'N') JOURNALZ_YN
                         , B.JOURNALZ_NUM
                         , B.EVIDENCE_2
                         , B.OCCUR_DATE || B.UPJANG_CD || B.RECEIPT_NUM AS RECEIPT_NUM
                         , A.CC_CD CC_CD_ORG
                         , '' SUB_UPJANG_NUM
                      FROM SLA_IF_UPJANG_SALS_MST A
                         , SLA_IF_UPJANG_PAYMENT B
                     WHERE A.OCCUR_DATE = B.OCCUR_DATE
                       AND A.SYS_CLASS = B.SYS_CLASS
                       AND A.UPJANG_CD = B.UPJANG_CD
                       AND A.RECEIPT_NUM = B.RECEIPT_NUM
                       AND A.INTERNAL_USE_CLASS = 'Y'
                       AND A.RECD_STATUS = 'L'
                       AND B.RECD_STATUS = 'L'
                       AND NVL(B.JOURNALZ_YN,'N') = 'N'
                       AND A.DDDD_CLOSE_YN = 'Y'
                    --   AND B.SYS_CLASS <> '17'   --특판은 내부이용가계정x 접대비로 설정
                       AND SUBSTR(A.OCCUR_DATE,0,6) = :slipMon
                       AND A.MU_CD = :muCd
                    <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',A.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',A.CC_CD) = :tmCd)
                    </#if>
                    <#if ccCd?has_content>
                       AND A.CC_CD = :ccCd
                    </#if>
                  --   AND A.CUST_CD <> '999998'
                UNION ALL
                    SELECT TO_CHAR(A.CUST_CD)   AS CUST_CD
                         , A.UPJANG_CD
                         , '8O'                 AS SLIP_TYPE
                         , B.SYS_CLASS
                         , '1'                  AS DR_CR_CLASS
                         , '43221110'                  AS D_ACCT_CD
                         , '기타접대비_내부이용' AS D_ACCT_NM
                         , NULL                 AS C_ACCT_CD
                         , NULL                 AS C_ACCT_NM
                         , NVL( B.VAT_AMT,0)         AS D_AMT
                         , 0                    AS C_AMT
                         , A.MU_CD              AS MU_CD
                         --, A.CC_CD              AS CC_CD
                         , (
                         SELECT DISTINCT CC_CD
                         FROM   HR_PERSONAL X
                         WHERE  X.SABUN = B.EVIDENCE_2
                         )                      AS CC_CD
                         , 2                    AS SORT
                         , NULL                 AS VAT_CLASS
                         , NULL                 AS WITHDRAW_SCHD_DATE
                         , 'B00'                AS RECEIVE_TYPE
                         , SUBSTR(A.OCCUR_DATE,1,6) OCCUR_DATE
                         , NVL(B.JOURNALZ_YN,'N') JOURNALZ_YN
                         , B.JOURNALZ_NUM
                         , B.EVIDENCE_2
                         , B.OCCUR_DATE || B.UPJANG_CD || B.RECEIPT_NUM AS RECEIPT_NUM
                         , A.CC_CD CC_CD_ORG
                         , ''
                      FROM SLA_IF_UPJANG_SALS_MST A
                         , SLA_IF_UPJANG_PAYMENT B
                     WHERE A.OCCUR_DATE = B.OCCUR_DATE
                       AND A.SYS_CLASS = B.SYS_CLASS
                       AND A.UPJANG_CD = B.UPJANG_CD
                       AND A.RECEIPT_NUM = B.RECEIPT_NUM
                       AND A.INTERNAL_USE_CLASS = 'Y'
                       AND A.RECD_STATUS = 'L'
                       AND B.RECD_STATUS = 'L'
                       AND NVL(B.JOURNALZ_YN,'N') = 'N'
                       AND A.DDDD_CLOSE_YN = 'Y'
                     --  AND B.VAT_AMT > 0
                       AND SUBSTR(A.OCCUR_DATE,0,6) = :slipMon
                       AND A.MU_CD = :muCd
                    <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',A.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',A.CC_CD) = :tmCd)
                    </#if>
                    <#if ccCd?has_content>
                       AND A.CC_CD = :ccCd
                    </#if>
                    --   AND A.CUST_CD <> '999998'
                     AND A.SYS_CLASS = '17'
                UNION ALL
                    SELECT TO_CHAR(A.CUST_CD)   AS CUST_CD
                         , A.UPJANG_CD
                         , '8O'                 AS SLIP_TYPE
                         , B.SYS_CLASS
                         , '2'                  AS DR_CR_CLASS
                         , NULL                 AS D_ACCT_CD
                         , NULL                 AS D_ACCT_NM
                         --, '98001010'
                         --, '내부매출'
                         --특판이면 상품매출로 설정 20160125  요청자:윤지혜,김성권
                        -- , DECODE(B.SYS_CLASS,'17','41201010','98001010') C_ACCT_CD
                        -- 내부매출 계정 분리 20160425  요청자 : 박용수
                        --,(SELECT CODE_NAME FROM   SCC_COMMON_CODE A WHERE  A.GROUP_CODE = '내부이용계정' AND A.CODE = B.SALS_CLASS) C_ACCT_CD
                         ,'98001010' C_ACCT_CD
                        -- , DECODE(B.SYS_CLASS,'17','상품매출_일반','내부매출') C_ACCT_NM 
                         --,(SELECT CONTENTS FROM   SCC_COMMON_CODE A WHERE  A.GROUP_CODE = '내부이용계정' AND A.CODE = B.SALS_CLASS) C_ACCT_NM 
                         , '내부매출' C_ACCT_NM                
                         , 0                    AS D_AMT
                         , DECODE(NVL(B.NET_AMT,0), 0, B.SAL_AMT, B.NET_AMT)      AS C_AMT
                         , A.MU_CD              AS MU_CD
                         , A.CC_CD              AS CC_CD
                         , 3                    AS SORT
                         --세금계산서코드 NULL로 변경요청(송현주) 20210210
                         ,NULL AS VAT_CLASS
                         --, B.VAT_CLASS
                         , NULL                 AS WITHDRAW_SCHD_DATE
                         , 'B00'                AS RECEIVE_TYPE
                         , SUBSTR(A.OCCUR_DATE,1,6) OCCUR_DATE
                         , NVL(B.JOURNALZ_YN,'N') JOURNALZ_YN
                         , B.JOURNALZ_NUM
                         , ''
                         , B.OCCUR_DATE || B.UPJANG_CD || B.RECEIPT_NUM AS RECEIPT_NUM
                         , A.CC_CD CC_CD_ORG
                         , ''
                      FROM SLA_IF_UPJANG_SALS_MST A
                         , SLA_IF_UPJANG_SALS_DETAIL B
                     WHERE A.OCCUR_DATE = B.OCCUR_DATE
                       AND  A.SYS_CLASS = B.SYS_CLASS
                       AND A.UPJANG_CD = B.UPJANG_CD
                       AND A.RECEIPT_NUM = B.RECEIPT_NUM
                       AND A.INTERNAL_USE_CLASS = 'Y'
                       AND A.RECD_STATUS = 'L'
                       AND B.RECD_STATUS = 'L'
                       AND NVL(B.JOURNALZ_YN,'N') = 'N'
                       AND A.DDDD_CLOSE_YN = 'Y'
                       AND SUBSTR(A.OCCUR_DATE,0,6) = :slipMon
                       AND A.MU_CD = :muCd
                    <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',A.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',A.CC_CD) = :tmCd)
                    </#if>
                    <#if ccCd?has_content>
                       AND A.CC_CD = :ccCd
                    </#if>
                    --   AND A.CUST_CD <> '999998'
          
                UNION ALL
                    SELECT TO_CHAR(A.CUST_CD)   AS CUST_CD
                         , A.UPJANG_CD
                         , '8O'                 AS SLIP_TYPE
                         , B.SYS_CLASS
                         , '2'                  AS DR_CR_CLASS
                         , NULL                 AS D_ACCT_CD
                         , NULL                 AS D_ACCT_NM
                         , '21405000'
                         , '매출부가세'
                         , 0                    AS D_AMT
                         , NVL(B.VAT_AMT,0)     AS C_AMT
                         , A.MU_CD              AS MU_CD
                         , A.CC_CD              AS CC_CD
                         , 4                    AS SORT
                         , B.VAT_CLASS
                         , NULL                 AS WITHDRAW_SCHD_DATE
                         , 'B00'                AS RECEIVE_TYPE
                         , SUBSTR(A.OCCUR_DATE,1,6) OCCUR_DATE
                         , NVL(B.JOURNALZ_YN,'N') JOURNALZ_YN
                         , B.JOURNALZ_NUM
                         , ''
                         , B.OCCUR_DATE || B.UPJANG_CD || B.RECEIPT_NUM AS RECEIPT_NUM
                         , A.CC_CD CC_CD_ORG
                         , (SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = A.CC_CD) 
                      FROM SLA_IF_UPJANG_SALS_MST A
                         , SLA_IF_UPJANG_SALS_DETAIL B
                     WHERE A.OCCUR_DATE = B.OCCUR_DATE
                       AND  A.SYS_CLASS = B.SYS_CLASS
                       AND A.UPJANG_CD = B.UPJANG_CD
                       AND A.RECEIPT_NUM = B.RECEIPT_NUM
                       AND A.INTERNAL_USE_CLASS = 'Y'
                       AND A.RECD_STATUS = 'L'
                       AND B.RECD_STATUS = 'L'
                       AND NVL(B.JOURNALZ_YN,'N') = 'N'
                       AND A.DDDD_CLOSE_YN = 'Y'
                       AND NVL(B.VAT_AMT,0) <> 0
                       AND SUBSTR(A.OCCUR_DATE,0,6) = :slipMon
                       AND A.MU_CD = :muCd
                    <#if tmCd?has_content>
                       AND (SCC_GET_TM_BY_CC('CODE',A.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',A.CC_CD) = :tmCd)
                    </#if>
                    <#if ccCd?has_content>
                       AND A.CC_CD = :ccCd
                    </#if>
                    --   AND A.CUST_CD <> '999998'
                       AND B.VAT_CLASS IN ('10','20')
                       AND B.SYS_CLASS = '17'
                    ) M
                  ORDER BY M.RECEIPT_NUM, M.DR_CR_CLASS DESC, M.SORT
        ]]></statement>

	<!-- 선수금 대체번호 채번. -->
	<statement name="getMaxSlipNum" type="select"><![CDATA[
    <#if slipType == '1I'>
SELECT  NVL(TO_CHAR(MAX(TO_NUMBER(SLIP_NUM))+1),'4000000000') MAX_SLIP_NUM
            FROM    SLA_SAP_SLIP_MST  
            WHERE SLIP_TYPE = '1I'
    <#else>
--SELECT  NVL(TO_CHAR(MAX(TO_NUMBER(SLIP_NUM))+1),'7000000000') MAX_SLIP_NUM
  --        FROM    SLA_SAP_SLIP_MST
    --      WHERE SLIP_TYPE <> '1I'
--PK오류 발생하여 시퀀스로 변경 20181206 김호석
  SELECT  TO_CHAR(SLA_SAP_SLIP_MST_S.NEXTVAL) as MAX_SLIP_NUM FROM DUAL         
    </#if>
        ]]></statement>

	<!-- 전표 마스터 저장 -->
	<statement name="insertSapSlipMst" type="insert">
		/*+ com.hwfs.sm.srm.dao.SapSlipUploadDAO.insertSapSlipMst */
		<![CDATA[
            INSERT INTO SLA_SAP_SLIP_MST
            (
             SLIP_NUM,
             BU_CD,
             REF_NUM,
             SLIP_TYPE,
             SLIP_EVIDENCE_DATE,
             SLIP_PERIOD_DATE,
             CURRENCY,
             EXCHANGE_RATE,
             SLIP_TEXT,
             WRITE_EMP_MU_CD,
             ELCTNTAX_BILL_APPRVNUM,
             PUBLISH_CLASS,
             INPUT_DATE,
             INPUT_TIME,
             WRITE_EMP_SABUN,
             WRITE_EMP_DEPT,
             SYS_CD,
             ELCTN_SIGN_ID,
             SLIP_STATUS,
             SIGN_STATUS,
             REMARK,
             FISCAL_SLIP_NUM,
             FISCAL_YEAR,
             REVERSE_SLIP_NUM,
             REVERSE_SLIP_FISCAL_YEAR,
             SLIP_GRP_NUM,
             SIGN_TYPE,
             URGENT_PROC_YN,
             INTERFACE_LOG_NUM,
             SAP_SEND_YN,
             SAP_SLIP_NUM,
             SAP_SEND_TIME,
             SLIP_CLASS_CD,
             SLIP_PCLS_CLASS_CD,
             MU_CD,
             CC_CD,
             SLIP_CREATION_MM,
             SYS_CLASS,
             RECEIPT_NUM,
             ALT_NUM,
             CUSER,
             CDATE,
             UUSER,
             UDATE
            ) VALUES (
             :slipNum,
             :buCd,
            <#if refNum?exists> :refNum, <#else> null, </#if>
            <#if slipType?exists> :slipType, <#else> null, </#if>
            <#if slipEvidenceDate?exists> :slipEvidenceDate, <#else> null, </#if>
            <#if slipPeriodDate?exists> :slipPeriodDate, <#else> null, </#if>
            <#if currency?exists> :currency, <#else> null, </#if>
            <#if exchangeRate?exists> :exchangeRate, <#else> null, </#if>
            <#if slipText?exists> :slipText, <#else> null, </#if>
            <#if writeEmpMuCd?exists> :writeEmpMuCd, <#else> null, </#if>
            <#if elctntaxBillApprvnum?exists> :elctntaxBillApprvnum, <#else> null, </#if>
            'F',
            <#if inputDate?exists> :inputDate, <#else> null, </#if>
            <#if inputTime?exists> :inputTime, <#else> null, </#if>
            <#if writeEmpSabun?exists> :writeEmpSabun, <#else> null, </#if>
            <#if writeEmpDept?exists> :writeEmpDept, <#else> null, </#if>
            <#if sysCd?exists> :sysCd, <#else> null, </#if>
            <#if elctnSignId?exists> :elctnSignId, <#else> null, </#if>
            <#if slipStatus?exists> :slipStatus, <#else> null, </#if>
            <#if signStatus?exists> :signStatus, <#else> null, </#if>
            <#if remark?exists> :remark, <#else> null, </#if>
            <#if fiscalSlipNum?exists> :fiscalSlipNum, <#else> null, </#if>
            <#if fiscalYear?exists> :fiscalYear, <#else> null, </#if>
            <#if reverseSlipNum?exists> :reverseSlipNum, <#else> null, </#if>
            <#if reverseSlipFiscalYear?exists> :reverseSlipFiscalYear, <#else> null, </#if>
            <#if slipGrpNum?exists> :slipGrpNum, <#else> null, </#if>
            <#if signType?exists> :signType, <#else> null, </#if>
            <#if urgentProcYn?exists> DECODE(:urgentProcYn, '1', 'Y', 'N'), <#else> null, </#if>
            <#if interfaceLogNum?exists> :interfaceLogNum, <#else> null, </#if>
            <#if sapSendYn?exists> DECODE(:sapSendYn, '1', 'Y', 'N'), <#else> null, </#if>
            <#if sapSlipNum?exists> :sapSlipNum, <#else> null, </#if>
            <#if sapSendTime?exists> :sapSendTime, <#else> null, </#if>
            <#if slipClassCd?exists> :slipClassCd, <#else> null, </#if>
            <#if slipPclsClassCd?exists> :slipPclsClassCd, <#else> null, </#if>
            <#if muCd?exists> :muCd, <#else> null, </#if>
            <#if ccCd?exists>
            	<#if ccCdOrg?exists>
	             :ccCdOrg,
	            <#else>
	             :ccCd,
	            </#if>            	
            <#else>
             null,
            </#if>
            <#if slipCreationMm?exists> :slipCreationMm, <#else> null, </#if>
            <#if sysClass?exists> :sysClass, <#else> null, </#if>
            <#if receiptNum?exists> :receiptNum, <#else> null, </#if>
            <#if altNum?exists> :altNum, <#else> null, </#if>
             :loginSabun,
             SYSDATE,
             :loginSabun,
             SYSDATE
            )
        ]]>
	</statement>

	<!-- 전표 디테일 저장 -->
	<statement name="insertSapSlipDtl" type="insert">
		/*+ com.hwfs.sm.srm.dao.SapSlipUploadDAO.insertSapSlipDtl */
		<![CDATA[
            INSERT INTO SLA_SAP_SLIP_DTL
            (
             SLIP_NUM,
             BU_CD,
             DTL_NUM,
             SLIP_TYPE,
             SLIP_EVIDENCE_DATE,
             SLIP_PERIOD_DATE,
             MASTER_ACCT,
             DR_CR_CLASS,
             NEXT_BU_CD,
             CC_CD,
             ORDER_NUM,
             FNCT_PRVN,
             PL_CENTER,
             MINUS_PERIOD_YN,
             SLIP_CURRENCY_AMT,
             LCAL_AMT,
             SUPPLYPLCE_NUM,
             GUEST_NUM,
             FO_SUPPLYPLCE_NUM,
             FO_CUST_NM,
             MU_CD,
             INLT_YN,
             ITEM_TEXT,
             VAT_CD,
             UPJANG,
             STD_AMT,
             TAX_AMT,
             QUANTITY,
             UNIT,
             PAYER_NAME,
             EXPIRE_CAL_BASIS_DATE,
             PAY_MTOD,
             PAY_COND,
             PAY_DFER,
             PAY_REF,
             LC_NUM,
             MEMB_NUM,
             REAL_USER,
             TEL_NUM,
             USE_NO_MAN,
             ASSIGN_NUM,
             PO_NUM,
             ATTACH_DEPT,
             MGMT_DEPT,
             MGMT_ARTICLE,
             REASON_CD,
             CRGLEFT_CLASS,
             SINGLE_PAY_YN,
             TEMP_CUST_NM,
             BANK_ACCT_NO,
             BANK_ACCT_OWNR,
             BANK_CD,
             CO_PA_GUEST,
             CO_PA_CC_CD,
             START_DATE,
             END_DATE,
             BL_DATE,
             ASSET_NUM,
             ASSET_LLEVEL_NUM,
             MGMT_GUEST,
             MGMT_SUPPLYPLCE,
             CUST_REMARK,
             REF_DATE,
             LSHIP_DATE,
             TAX_STD_AMT,
             MM_AMT,
             TAX_RATE,
             INT_RATE,
             GU_OFFICE_NUM,
             REMARK1,
             REMARK2,
             ADDR,
             ETC,
             CARD_SRL_NUM,
             CARD_INTERFACE_NUM,
             CARD_NUM,
             INTERFACE_LOG_NUM,
             INPUT_DATE,
             CUSER,
             CDATE,
             UUSER,
             UDATE
            ) VALUES (
             :slipNum,
             :buCd,
             (
             SELECT NVL(MAX(DTL_NUM),0) + 1
             FROM    SLA_SAP_SLIP_DTL
             WHERE    SLIP_NUM = :slipNum
             ),
            <#if slipType?exists> :slipType, <#else> null, </#if>
            <#if slipEvidenceDate?exists> :slipEvidenceDate, <#else> null, </#if>
            <#if slipPeriodDate?exists> :slipPeriodDate, <#else> null, </#if>
            <#if masterAcct?exists> :masterAcct, <#else> null, </#if>
            <#if drCrClass?exists> :drCrClass, <#else> null, </#if>
            <#if nextBuCd?exists> :nextBuCd, <#else> null, </#if>
            <#if ccCd?exists> :ccCd, <#else> null, </#if>
            <#if orderNum?exists> :orderNum, <#else> null, </#if>
            <#if fnctPrvn?exists> :fnctPrvn, <#else> null, </#if>
            <#if plCenter?exists> :plCenter, <#else> null, </#if>
            <#if minusPeriodYn?exists> :minusPeriodYn, <#else> null, </#if>
            <#if slipCurrencyAmt?exists> :slipCurrencyAmt, <#else> null, </#if>
            <#if lcalAmt?exists> :lcalAmt, <#else> null, </#if>
            <#if supplyplceNum?exists> :supplyplceNum, <#else> null, </#if>
            <#if guestNum?exists> :guestNum, <#else> null, </#if>
            <#if foSupplyplceNum?exists> :foSupplyplceNum, <#else> null, </#if>
            <#if foCustNm?exists> :foCustNm, <#else> null, </#if>
            <#if muCd?exists> :muCd, <#else> null, </#if>
            <#if inltYn?exists> :inltYn, <#else> null, </#if>
            <#if itemText?exists> :itemText, <#else> null, </#if>
            <#if vatCd?exists> :vatCd, <#else> null, </#if>
            <#if upjang?exists> :upjang, <#else> null, </#if>
            <#if stdAmt?exists> :stdAmt, <#else> null, </#if>
            <#if taxAmt?exists> :taxAmt, <#else> null, </#if>
            <#if quantity?exists> :quantity, <#else> null, </#if>
            <#if unit?exists> :unit, <#else> null, </#if>
            <#if payerName?exists> :payerName, <#else> null, </#if>
            <#if expireCalBasisDate?exists> DECODE(LENGTH(:expireCalBasisDate), '8', SLA_GET_WITHDRAW_DATE(:expireCalBasisDate), :expireCalBasisDate), <#else> null, </#if>
            <#if payMtod?exists> :payMtod, <#else> null, </#if>
            <#if payCond?exists> :payCond, <#else> null, </#if>
            <#if payDfer?exists> :payDfer, <#else> null, </#if>
            <#if payRef?exists> :payRef, <#else> null, </#if>
            <#if lcNum?exists> :lcNum, <#else> null, </#if>
            <#if membNum?exists> :membNum, <#else> null, </#if>
            <#if realUser?exists> :realUser, <#else> null, </#if>
            <#if telNum?exists> :telNum, <#else> null, </#if>
            <#if useNoMan?exists> :useNoMan, <#else> null, </#if>
            <#if assignNum?exists> :assignNum, <#else> null, </#if>
            <#if poNum?exists> :poNum, <#else> null, </#if>
            <#if attachDept?exists> :attachDept, <#else> null, </#if>
            <#if mgmtDept?exists> :mgmtDept, <#else> null, </#if>
            <#if mgmtArticle?exists> :mgmtArticle, <#else> null, </#if>
            <#if reasonCd?exists> :reasonCd, <#else> null, </#if>
            <#if crgleftClass?exists> :crgleftClass, <#else> null, </#if>
            <#if singlePayYn?exists> :singlePayYn, <#else> null, </#if>
            <#if tempCustNm?exists> :tempCustNm, <#else> null, </#if>
            <#if bankAcctNo?exists> :bankAcctNo, <#else> null, </#if>
            <#if bankAcctOwnr?exists> :bankAcctOwnr, <#else> null, </#if>
            <#if bankCd?exists> :bankCd, <#else> null, </#if>
            <#if coPaGuest?exists> :coPaGuest, <#else> null, </#if>
            <#if coPaCcCd?exists> :coPaCcCd, <#else> null, </#if>
            <#if startDate?exists> :startDate, <#else> null, </#if>
            <#if endDate?exists> :endDate, <#else> null, </#if>
            <#if blDate?exists> :blDate, <#else> null, </#if>
            <#if assetNum?exists> :assetNum, <#else> null, </#if>
            <#if assetLlevelNum?exists> :assetLlevelNum, <#else> null, </#if>
            <#if mgmtGuest?exists> :mgmtGuest, <#else> null, </#if>
            <#if mgmtSupplyplce?exists> :mgmtSupplyplce, <#else> null, </#if>
            <#if custRemark?exists> :custRemark, <#else> null, </#if>
            <#if refDate?exists> :refDate, <#else> null, </#if>
            <#if lshipDate?exists> :lshipDate, <#else> null, </#if>
            <#if taxStdAmt?exists> :taxStdAmt, <#else> null, </#if>
            <#if mmAmt?exists> :mmAmt, <#else> null, </#if>
            <#if taxRate?exists> :taxRate, <#else> null, </#if>
            <#if intRate?exists> :intRate, <#else> null, </#if>
            <#if guOfficeNum?exists> :guOfficeNum, <#else> null, </#if>
            <#if remark?exists> :remark, <#else> null, </#if>
            <#if remark2?exists> :remark2, <#else> null, </#if>
            <#if addr?exists> :addr, <#else> null, </#if>
            <#if etc?exists> :etc, <#else> null, </#if>
            <#if cardSrlNum?exists> :cardSrlNum, <#else> null, </#if>
            <#if cardInterfaceNum?exists> :cardInterfaceNum, <#else> null, </#if>
            <#if cardNum?exists> :cardNum, <#else> null, </#if>
            <#if interfaceLogNum?exists> :interfaceLogNum, <#else> null, </#if>
            <#if inputDate?exists> :inputDate, <#else> null, </#if>
             :loginSabun,
             SYSDATE,
             :loginSabun,
             SYSDATE
            )
        ]]>
	</statement>

	<!-- 전표생성취소 -->
	<statement name="updateSapSlipMst" type="update">
		/*+ com.hwfs.sm.srm.dao.SapSlipUploadDAO.updateSapSlipMst */
		<![CDATA[
            UPDATE    SLA_SAP_SLIP_MST
            SET        SLIP_STATUS = 'Z'    --전표생성취소
                    ,UUSER = :loginSabun
                    ,UDATE = SYSDATE
            WHERE    SLIP_NUM = :slipNum
        ]]>
	</statement>

	<!-- SAP 월마감 체크 -->
	<statement name="selectSapClose" type="select">
		<![CDATA[
		SELECT CASE WHEN SUM(MU_CLOSE) = 0 THEN 'N'
		            WHEN SUM(MU_CLOSE) > 0 AND SUM(CC_OPEN) > 0 THEN 'N'
		            WHEN SUM(MU_CLOSE) > 0 AND SUM(CC_OPEN) = 0 THEN 'Y'
		            ELSE 'N'
		        END AS SAP_CLOSE
		  FROM (
		        SELECT '1' AS X
		             , COUNT(1) AS MU_CLOSE  -- MU_CLOSE > 0 월마감
		             , 0 AS CC_OPEN
		          FROM SAP_IF.SAP_IFC_MU_SLIP_CLOSE V 
		         WHERE YEAR = :year
		           AND MM = :mm
		           AND MU_CD = :muCd
		           AND CLOSE_YN = 'X'
		         UNION ALL
		        SELECT '1' AS X
		             , 0 AS MU_CLOSE
		             , COUNT(1) AS CC_OPEN  -- CC_OPEN = 0 월마감
		          FROM SAP_IF.SAP_IFC_CC_UNCLOSE
		         WHERE YEAR = :year
		           AND MM = :mm
		           AND CC_CD = :ccCd
		       )
		 GROUP BY X
	]]>
	</statement>
	<statement name="selectSlipList1I"><![CDATA[    	SELECT * FROM (
            SELECT SLIP_TYPE
                 , SLIP_TYPE_NM
                 , DR_CR_CLASS
                 , D_ACCT_CD
                 , (SELECT DISTINCT ACCT.ACCTNM
                     FROM HLDC_ST_ACCOUNT_V ACCT
                    WHERE D_ACCT_CD = ACCT.ACCTCD
                   ) AS D_ACCT_NM
                 , C_ACCT_CD
                 , CASE WHEN SORT = 6
                       THEN (SELECT ACCT.ACCTNM
                             FROM HLDC_ST_ACCOUNT_V ACCT
                            WHERE
                                  (SELECT ACCT_CD
                                    FROM SLA_VAT_CD_MST Z
                                   WHERE Z.VAT_CD = A.VAT_CLASS
                                  ) = ACCT.ACCTCD
                           ) ELSE (SELECT DISTINCT ACCT.ACCTNM
                             FROM HLDC_ST_ACCOUNT_V ACCT
                            WHERE A.C_ACCT_CD = ACCT.ACCTCD
                           ) END        AS C_ACCT_NM
                 , SUM(D_AMT) AS D_AMT
                 , SUM(C_AMT) AS C_AMT
                 , SUM(X_AMT) AS X_AMT
                 , SUM(V_AMT) AS V_AMT
                 , MU_CD
                 , (SELECT MU.MU_NM
                     FROM HLDC_SC_MU MU
                    WHERE A.MU_CD = MU.MU_CD
                   ) AS MU_NM
                 , CC_CD
                 , (SELECT DISTINCT CC.CC_NM
                     FROM HLDC_SC_DEPT_V CC
                    WHERE A.CC_CD = CC.CC_CD
                   ) AS CC_NM
                 , SAP_CUST_CD
                 , NVL(CUST_CD, '999998') CUST_CD
                 , NVL((SELECT DISTINCT NM.CUSTNM
                     FROM ST_CUST NM
                    WHERE NM.CUSTCD = A.CUST_CD), '기타(개인)') AS CUST_NM
                 , SORT
                 ,DECODE(VAT_CLASS,'X',NULL,VAT_CLASS) VAT_CLASS
                 , CASE WHEN D_ACCT_CD = '11202010' OR C_ACCT_CD = '11202010' THEN
                        DECODE(NVL(WITHDRAW_SCHD_DATE,''),'',TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(SUBSTR(OCCUR_DATE,0,6)||'01','YYYYMMDD'),1)),'YYYYMMDD'),WITHDRAW_SCHD_DATE)
                   ELSE
                        CASE WHEN DR_CR_CLASS = '1' THEN
                            DECODE(NVL(WITHDRAW_SCHD_DATE,''),'',TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(SUBSTR(OCCUR_DATE,0,6)||'01','YYYYMMDD'),1)),'YYYYMMDD'),WITHDRAW_SCHD_DATE)
                        ELSE
                            NULL
                        END
                 END WITHDRAW_SCHD_DATE
                 , SUBSTR(OCCUR_DATE,0,6) OCCUR_DATE
                 , CARD_DATE
                 , SUB_UPJANG_NUM
                 , SYS_CLASS
                 , '' CUST_CD_ORG
                 , '' TAX_SHET_NUM
                 , JOURNALZ_YN
                 , JOURNALZ_NUM
                 , CC_CD_ORG CC_CD_ORG
              FROM
                   (SELECT SCC_SLIP_TYPE('SYS_CLASS', A.SYS_CLASS) AS SLIP_TYPE
                        , SCC_CODE_NM('SLIP_TYPE', SCC_SLIP_TYPE('SYS_CLASS', A.SYS_CLASS)) AS SLIP_TYPE_NM
                        , '1'                                      AS DR_CR_CLASS
                        ,  C.ACCT_CD AS D_ACCT_CD
                        , NULL    AS C_ACCT_CD
                        ,  B.AMT AS D_AMT
                        , 0       AS C_AMT
                        , 0       AS X_AMT
                        , 0       AS V_AMT
                        , A.MU_CD AS MU_CD
                        ,  A.CC_CD AS CC_CD
                        , (SELECT SAP.SAP_CUST_CD
                                            FROM ST_CUST SAP
                                           WHERE SAP.CUSTCD =
                                                 CASE WHEN B.PAY_CD IN ('6', '4', 'P1', 'P4', 'P5')
                                                     THEN B.EVIDENCE_5
                                                     WHEN B.PAY_CD IN ('7')
                                                     THEN B.EVIDENCE_1
                                                     ELSE A.CUST_CD
                                                 END
                          ) AS SAP_CUST_CD
                        , A.CUST_CD AS CUST_CD
                        , 1   AS SORT
                        , NULL AS VAT_CLASS
                        , CASE WHEN B.PAY_CD = '2'
                              THEN
                                  (SELECT SCC_WORKING_DAY_FUN(A.OCCUR_DATE,
                                         (SELECT X.RECEIVE_CYCLE
                                           FROM SLA_FRNC_STOR_MGMT X
                                          WHERE X.UPJANG_CD IN
                                                (SELECT Z.UPJANG
                                                  FROM ST_UPJANG Z
                                                 WHERE Z.CC_CD = A.CC_CD
                                                )
                                                AND X.BUYCPNY_CD =
                                                (SELECT S.BUYCPNY_CD
                                                  FROM SLA_BUY_CPNY_MGMT S
                                                 WHERE S.CUST_CD = B.EVIDENCE_5
                                                )
                                                AND X.RECD_STATUS = 'L'
                                                AND ROWNUM = 1 -- 추후변경
                                         ) )
                                    FROM DUAL
                                  )
                              ELSE
                                  CASE WHEN
                                          (SELECT TO_NUMBER(PAY_GUBUN_CD)
                                            FROM SCO_UPJANG_CUST T
                                           WHERE T.UPJANG IN
                                                 (SELECT UPJANG
                                                   FROM ST_UPJANG Z
                                                  WHERE Z.CC_CD = A.CC_CD
                                                 )
                                                 AND T.CUSTCD =
                                                 (
                                                     CASE
                                                         WHEN B.PAY_CD = '1'
                                                         THEN ''
                                                         WHEN B.PAY_CD IN ('2', '6', '4', 'P1', 'P4', 'P5')
                                                         THEN B.EVIDENCE_5
							                             WHEN B.PAY_CD IN ('7')
							                             THEN B.EVIDENCE_1
                                                         ELSE A.CUST_CD
                                                     END
                                                 )
                                          ) = 999
                                      THEN A.OCCUR_DATE
                                      WHEN
                                          (SELECT TO_NUMBER(PAY_GUBUN_CD)
                                            FROM SCO_UPJANG_CUST T
                                           WHERE T.UPJANG IN
                                                 (SELECT UPJANG
                                                   FROM ST_UPJANG Z
                                                  WHERE Z.CC_CD = A.CC_CD
                                                 )
                                                 AND T.CUSTCD =
                                                 (
                                                     CASE
                                                         WHEN B.PAY_CD = '1'
                                                         THEN ''
                                                         WHEN B.PAY_CD IN ('2', '6', '4', 'P1', 'P4', 'P5')
                                                         THEN B.EVIDENCE_5
							                             WHEN B.PAY_CD IN ('7')
							                             THEN B.EVIDENCE_1
                                                         ELSE A.CUST_CD
                                                     END
                                                 )
                                          ) IS NULL
                                      THEN TO_CHAR(ADD_MONTHS(TO_DATE(A.OCCUR_DATE, 'YYYYMMDD'), 1), 'YYYYMM') || TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(A.OCCUR_DATE, 'YYYYMMDD'), 1)), 'DD')
                                      ELSE TO_CHAR(ADD_MONTHS(TO_DATE(A.OCCUR_DATE, 'YYYYMMDD'),
                                          (SELECT TO_NUMBER(PAY_GUBUN_CD)
                                            FROM SCO_UPJANG_CUST T
                                           WHERE UPJANG IN
                                                 (SELECT UPJANG
                                                   FROM ST_UPJANG Z
                                                  WHERE CC_CD = A.CC_CD
                                                 )
                                                 AND CUSTCD =
                                                 (
                                                     CASE
                                                         WHEN B.PAY_CD = '1'
                                                         THEN ''
                                                         WHEN B.PAY_CD IN ('2', '6', '4', 'P1', 'P4', 'P5')
                                                         THEN B.EVIDENCE_5
							                             WHEN B.PAY_CD IN ('7')
							                             THEN B.EVIDENCE_1                                                         
                                                         ELSE A.CUST_CD
                                                     END
                                                 )
                                          )), 'YYYYMM') || TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(A.OCCUR_DATE, 'YYYYMMDD'),
                                          (SELECT TO_NUMBER(PAY_GUBUN_CD)
                                            FROM SCO_UPJANG_CUST T
                                           WHERE UPJANG IN
                                                 (SELECT UPJANG
                                                   FROM ST_UPJANG Z
                                                  WHERE CC_CD = A.CC_CD
                                                 )
                                                 AND CUSTCD =
                                                 (
                                                     CASE
                                                         WHEN B.PAY_CD = '1'
                                                         THEN ''
                                                         WHEN B.PAY_CD IN ('2', '6', '4', 'P1', 'P4', 'P5')
                                                         THEN B.EVIDENCE_5
							                             WHEN B.PAY_CD IN ('7')
							                             THEN B.EVIDENCE_1
                                                         ELSE A.CUST_CD
                                                     END
                                                 )
                                          ))), 'DD')
                                  END
                          END          AS WITHDRAW_SCHD_DATE
                        ,  B.OCCUR_DATE AS OCCUR_DATE
                        , CASE WHEN B.PAY_CD = '2'
                              THEN B.OCCUR_DATE
                              ELSE NULL
                          END AS CARD_DATE
                        , (SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = A.CC_CD) SUB_UPJANG_NUM
                        , A.SYS_CLASS
                        , NVL(B.JOURNALZ_YN,'N') JOURNALZ_YN
                        , B.JOURNALZ_NUM
                        , A.CC_CD CC_CD_ORG
                     FROM SLA_IF_UPJANG_SALS_MST A
                        , SLA_IF_UPJANG_PAYMENT B
                        , (SELECT A.SYS_CLASS
                               , A.PAY_TYPE
                               , B.ACCT_CD
                            FROM SLA_SALES_PAY_TYPE A
                               , SLA_TYPE_CD_MST B
                           WHERE A.TYPE_GRP_CD = B.TYPE_GRP_CD
                                 AND A.TYPE_CD = B.TYPE_CD
                                 AND A.USE_YN = 'Y'
                          ) C
                    WHERE A.SYS_CLASS = '24'
                          AND A.MU_CD = :muCd
                          AND (SCC_GET_TM_BY_CC('CODE',A.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',A.CC_CD) = :tmCd)
                          AND SUBSTR(A.OCCUR_DATE,0,6) = :slipMon
                          AND A.RECD_STATUS = 'L'
                          AND B.RECD_STATUS = 'L'
                          AND B.DDDD_CLOSE_YN = 'Y'
                          AND NVL(B.JOURNALZ_YN,'N') = 'N'
                          AND A.INTERNAL_USE_CLASS = 'N'
                          AND A.OCCUR_DATE = B.OCCUR_DATE
                          AND A.SYS_CLASS = B.SYS_CLASS
                          AND A.UPJANG_CD = B.UPJANG_CD
                          AND A.RECEIPT_NUM = B.RECEIPT_NUM
                          AND B.PAY_CD = C.PAY_TYPE   
                  	/* 대변 */        	
                       UNION ALL
                   SELECT SCC_SLIP_TYPE('SYS_CLASS', A.SYS_CLASS) AS SLIP_TYPE
                        , SCC_CODE_NM('SLIP_TYPE', SCC_SLIP_TYPE('SYS_CLASS', A.SYS_CLASS)) AS SLIP_TYPE_NM
                        , '2'       AS DR_CR_CLASS
                        , NULL      AS D_ACCT_CD
                        , C.ACCT_CD AS C_ACCT_CD
                        , 0         AS D_AMT
                        , B.SAL_AMT AS C_AMT
                        , 0         AS X_AMT
                        , 0         AS V_AMT
                        , A.MU_CD
                        , A.CC_CD
                        , (SELECT SAP.SAP_CUST_CD
                                    FROM ST_CUST SAP
                                   WHERE SAP.CUSTCD = A.CUST_CD
                          ) AS SAP_CUST_CD
                        , A.CUST_CD
                        , 2 AS SORT
                        , NULL AS VAT_CLASS
                        , NULL AS WITHDRAW_SCHD_DATE
                        , NULL AS OCCUR_DATE
                        , NULL AS CARD_DATE
                        , (SELECT Z.SUB_UPJANG_NUM FROM SCC_CC Z WHERE Z.CC_CD = A.CC_CD)
                        , A.SYS_CLASS
                        , NVL(B.JOURNALZ_YN,'N')
                        , B.JOURNALZ_NUM
                        , A.CC_CD CC_CD_ORG
                     FROM SLA_IF_UPJANG_SALS_MST A
                        , SLA_IF_UPJANG_SALS_DETAIL B
                        , (SELECT A.SYS_CLASS
                               , A.SALS_TYPE
                               , B.ACCT_CD
                            FROM SLA_SALES_SALS_TYPE A
                               , SLA_TYPE_CD_MST B
                           WHERE A.TYPE_GRP_CD = B.TYPE_GRP_CD
                                 AND A.TYPE_CD = B.TYPE_CD
                                 AND A.USE_YN = 'Y'
                          ) C
                    WHERE A.SYS_CLASS = '24'
                          AND A.MU_CD = :muCd
                          AND (SCC_GET_TM_BY_CC('CODE',A.CC_CD) = :tmCd OR SCC_GET_PT_BY_CC('CODE',A.CC_CD) = :tmCd)
                          AND SUBSTR(A.OCCUR_DATE,0,6) = :slipMon
                          AND A.RECD_STATUS = 'L'
                          AND B.RECD_STATUS = 'L'
                          AND B.DDDD_CLOSE_YN = 'Y'
                          AND NVL(B.JOURNALZ_YN,'N') = 'N'
                          AND A.INTERNAL_USE_CLASS = 'N'
                          AND A.OCCUR_DATE = B.OCCUR_DATE
                          AND A.SYS_CLASS = B.SYS_CLASS
                          AND A.UPJANG_CD = B.UPJANG_CD
                          AND A.RECEIPT_NUM = B.RECEIPT_NUM
                          AND B.SYS_CLASS = C.SYS_CLASS
                          AND B.SALS_CLASS = C.SALS_TYPE
                                    
                   ) A
             WHERE D_AMT IS NOT NULL
                   AND C_AMT IS NOT NULL
             GROUP BY SLIP_TYPE
                 , SLIP_TYPE_NM
                 , DR_CR_CLASS
                 , D_ACCT_CD
                 , C_ACCT_CD
                 , MU_CD
                 , CC_CD
                 , SAP_CUST_CD
                 , CUST_CD
                 , SORT
                 , VAT_CLASS
                 , CASE WHEN D_ACCT_CD = '11202010' OR C_ACCT_CD = '11202010' THEN
                        DECODE(NVL(WITHDRAW_SCHD_DATE,''),'',TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(SUBSTR(OCCUR_DATE,0,6)||'01','YYYYMMDD'),1)),'YYYYMMDD'),WITHDRAW_SCHD_DATE)
                   ELSE
                        CASE WHEN DR_CR_CLASS = '1' THEN
                            DECODE(NVL(WITHDRAW_SCHD_DATE,''),'',TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(SUBSTR(OCCUR_DATE,0,6)||'01','YYYYMMDD'),1)),'YYYYMMDD'),WITHDRAW_SCHD_DATE)
                        ELSE
                            NULL
                        END
                   END
                 , SUBSTR(OCCUR_DATE,0,6)
                 , CARD_DATE
                 , SUB_UPJANG_NUM
                 , SYS_CLASS
                 , JOURNALZ_YN
                 , JOURNALZ_NUM
                 , CC_CD_ORG
            ORDER BY CC_CD_ORG
                 , SORT
        ) WHERE  (NVL(D_AMT, 0) + NVL(C_AMT, 0) + NVL(X_AMT, 0) + NVL(V_AMT, 0)) <>  0]]></statement>
</hqml>