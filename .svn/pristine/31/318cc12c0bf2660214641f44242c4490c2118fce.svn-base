<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[식재사업부 조회]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
SELECT * FROM
(
	SELECT /*+ LEADING(B V V1) USE_HASH(V) USE_HASH(V1) */ 
       'B' SAUP_TYPE,
       B.MAIN_UPJANG,
       (SELECT UPJANGNM FROM SCO_UPJANG_MST_V WHERE UPJANG = B.MAIN_UPJANG) MAIN_UPJANGNM,
       V.UPJANG,
       (SELECT UPJANGNM FROM SCO_UPJANG_MST_V WHERE UPJANG = V.UPJANG) UPJANGNM,
       0 CUSTCD,
       '' CUSTNM,       
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'MA0015' AND CODE = (SELECT PAY_GUBUN_CD FROM SCO_UPJANG_CUST WHERE UPJANG = V.UPJANG AND CUSTCD = V.CUSTCD))||
       (SELECT PAY_DATE FROM SCO_UPJANG_CUST WHERE UPJANG = V.UPJANG AND CUSTCD = V.CUSTCD)||'일' PAY_GUBUN_CDNM,
       SUM(V.CURR_MACHUL)                                         CURR_TRX_AMT,
       NVL(MAX(V2.AMOUNT),0) CURR_RCP_AMT,
	   -- 채권기준정보(PAY_GUBUN_CD)가 없는 업장은 미도래채권에 합해서 계산
       SUM(DECODE(V.DUE_GUBUN, '', V.AMT - V.RCP_AMT, 0)) +
       SUM(DECODE(V.DUE_GUBUN, '미도래채권', V.AMT - V.RCP_AMT, 0))             MI_BOND_AMT,
       SUM(DECODE(V.DUE_GUBUN, '도래채권',   V.AMT - V.RCP_AMT, 0))             DO_BOND_AMT,
       SUM(DECODE(V.DUE_GUBUN, '부실채권',   V.AMT - V.RCP_AMT, 0))             BU_BOND_AMT,
       SUM(DECODE(V.DUE_GUBUN, '악성채권',   V.AMT - V.RCP_AMT, 0))             AK_BOND_AMT,
       B.MAIN_UPJANG||'-'||V.UPJANG||'-'||V.CUSTCD PL_CD,
       '1' PL_UP_CD,
       '1' BL_SHOW,
       3 LEVEL_NO,
       '+' BL_PLUS
FROM (
      SELECT UPJANG,
             SUM(AMT) AMT,
             BOND_DATE,
             DUE_GUBUN,
             SUM(RCP_AMT) RCP_AMT,
             CUSTCD,
             SUM(CURR_MACHUL) CURR_MACHUL
        FROM (
              SELECT /*+ USE_HASH(V1) */ 
                     B.UPJANG UPJANG,
                     V.AR_AMT AMT,
                     V.OCCUR_DATE                  BOND_DATE,
                     (CASE WHEN #TRX_DATE# &gt;  DECODE(C.PAY_GUBUN_CD, '999', TO_CHAR(ADD_MONTHS(LAST_DAY(TO_DATE(V.OCCUR_DATE, 'YYYYMMDD')),3),'YYYYMMDD'), TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(C.PAY_GUBUN_CD)+3), 'YYYYMM')||
                                           LEAST(TO_CHAR(LAST_DAY(TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(C.PAY_GUBUN_CD)+3), 'YYYYMMDD'), 'YYYYMMDD')), 'DD'), LPAD(C.PAY_DATE, 2, '0'))
                                           ) THEN
                                '악성채권'
                           WHEN  #TRX_DATE# &gt;  DECODE(C.PAY_GUBUN_CD, '999', TO_CHAR(ADD_MONTHS(LAST_DAY(TO_DATE(V.OCCUR_DATE, 'YYYYMMDD')),1),'YYYYMMDD'), TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(C.PAY_GUBUN_CD)+1), 'YYYYMM')||
                                           LEAST(TO_CHAR(LAST_DAY(TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(C.PAY_GUBUN_CD)+1), 'YYYYMMDD'), 'YYYYMMDD')), 'DD'), LPAD(C.PAY_DATE, 2, '0'))
                                           ) AND
                                 #TRX_DATE# &lt;=  DECODE(C.PAY_GUBUN_CD, '999', TO_CHAR(ADD_MONTHS(LAST_DAY(TO_DATE(V.OCCUR_DATE, 'YYYYMMDD')),3),'YYYYMMDD'), TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(C.PAY_GUBUN_CD)+3), 'YYYYMM')||
                                           LEAST(TO_CHAR(LAST_DAY(TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(C.PAY_GUBUN_CD)+3), 'YYYYMMDD'), 'YYYYMMDD')), 'DD'), LPAD(C.PAY_DATE, 2, '0'))
                                           ) THEN
                                '부실채권'
                           WHEN #TRX_DATE#  &lt;=  DECODE(C.PAY_GUBUN_CD, '999', TO_CHAR(ADD_MONTHS(LAST_DAY(TO_DATE(V.OCCUR_DATE, 'YYYYMMDD')),1),'YYYYMMDD'), TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(C.PAY_GUBUN_CD)+1), 'YYYYMM')||
                                           LEAST(TO_CHAR(LAST_DAY(TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(C.PAY_GUBUN_CD)+1), 'YYYYMMDD'), 'YYYYMMDD')), 'DD'), LPAD(C.PAY_DATE, 2, '0'))
                                           ) AND
                                 #TRX_DATE# &gt; DECODE(C.PAY_GUBUN_CD, '999', TO_CHAR(LAST_DAY(TO_DATE(V.OCCUR_DATE, 'YYYYMMDD')),'YYYYMMDD'), TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(C.PAY_GUBUN_CD)), 'YYYYMM')||
                                           LEAST(TO_CHAR(LAST_DAY(TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(C.PAY_GUBUN_CD)), 'YYYYMMDD'), 'YYYYMMDD')), 'DD'), LPAD(C.PAY_DATE, 2, '0'))
                                           ) THEN
                                '도래채권'
                           WHEN  #TRX_DATE# &lt;=  DECODE(C.PAY_GUBUN_CD, '999', TO_CHAR(LAST_DAY(TO_DATE(V.OCCUR_DATE, 'YYYYMMDD')),'YYYYMMDD'), TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(C.PAY_GUBUN_CD)), 'YYYYMM')||
                                           LEAST(TO_CHAR(LAST_DAY(TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(C.PAY_GUBUN_CD)), 'YYYYMMDD'), 'YYYYMMDD')), 'DD'), LPAD(C.PAY_DATE, 2, '0'))
                                           ) THEN
                                '미도래채권' END) DUE_GUBUN,
                     NVL((SELECT NVL(SUM(RECEIVE_AMT),0) FROM SLA_AR_RECEIVE_DETAIL WHERE AR_NUM = V.AR_NUM AND RECD_STATUS = 'L' AND SYS_CLASS IN ('13','14') AND RECEIVE_DATE  BETWEEN '19000101' AND #TRX_DATE#),0) RCP_AMT,
                     S.CUSTCD,
                     CASE WHEN V.OCCUR_DATE   BETWEEN SUBSTR(#TRX_DATE#  , 1, 6)||'01' AND SUBSTR(#TRX_DATE#  , 1, 6)||'31' THEN
                               V.AR_AMT
                                ELSE 0 END CURR_MACHUL
                FROM SLA_AR_MST V,
                     FMS_UPJANG B,
					 (
						SELECT UPJANG,
							   MAX(PAY_GUBUN_CD) AS PAY_GUBUN_CD,
							   MAX(PAY_DATE) AS PAY_DATE
						FROM SCO_UPJANG_CUST
						GROUP BY UPJANG
					) C ,
					 ST_UPJANG S,
					 HLDC_SC_DEPT_V D
              WHERE  V.RECD_STATUS  = 'L'
		      AND    V.SYS_CLASS IN ('13','14')
              AND    (V.UPJANG_CD                                            = B.UPJANG)
              AND    (B.UPJANG                                               = C.UPJANG(+))
              AND    (B.UPJANG                                               = S.UPJANG)
              AND    (S.DEPT_ID                                               = D.DEPT_ID)
              AND    (V.OCCUR_DATE  BETWEEN '19000101' AND #TRX_DATE#)
              --AND    (V.CANCEL_FLAG    = 'N')
              --AND    (V.DCGUBUN        = '1')
              --AND    (V.ACCTCD         = '1110411')             
              <isNotNull col="TM_CD">
			  AND D.TM_CD = #TM_CD# 
              --AND    (EXISTS (SELECT 'X' FROM SCO_UPJANG_MST_V WHERE SCO_UPJANG_MST_V.UPJANG = B.UPJANG AND SCO_UPJANG_MST_V.TM_CD = #TM_CD#))
              </isNotNull>
              <isNotNull col="MAIN_UPJANG_CD">
			  AND B.MAIN_UPJANG = #MAIN_UPJANG_CD#
              --AND    (EXISTS (SELECT 'X' FROM FMS_UPJANG WHERE UPJANG = B.MAIN_UPJANG AND MAIN_UPJANG = UPJANG AND MAIN_UPJANG || UPJANGNM_DISP LIKE '%' || #MAIN_UPJANG_NM# || '%' ))
              </isNotNull>
              <isNotNull col="UPJANG_CD">
			  AND B.UPJANG = #UPJANG_CD#
              --AND (B.UPJANGNM_DISP LIKE '%' || #UPJANG_NM# || '%' )
              </isNotNull>              
              ) 
              GROUP BY UPJANG,BOND_DATE,DUE_GUBUN,CUSTCD              
       ) V,
        FMS_UPJANG B,
       ( SELECT /*+ NO_MERGE */ DECODE(A.HEAD_CREDIT_YN, 'Y', A.MAIN_UPJANG, A.UPJANG) UPJANG, SUM(D.RECEIVE_AMT) AMOUNT
          FROM FMS_UPJANG A,
               SLA_AR_RECEIVE_DETAIL D,
               SLA_AR_MST M  
         WHERE A.UPJANG = M.UPJANG_CD
           AND M.RECD_STATUS  = 'L'
		   AND M.SYS_CLASS IN ('13','14')
           AND M.AR_NUM = D.AR_NUM
           AND D.RECEIVE_DATE BETWEEN SUBSTR( #TRX_DATE# , 1, 6)||'01' AND SUBSTR( #TRX_DATE# , 1, 6)||'31'
           AND D.RECD_STATUS  = 'L'
           --AND B.DCGUBUN = '2'
           --AND B.ACCTCD = '1110411'
         GROUP BY DECODE(A.HEAD_CREDIT_YN, 'Y', A.MAIN_UPJANG, A.UPJANG) 
       ) V2
WHERE (V.UPJANG = B.UPJANG)
AND V2.UPJANG(+) = V.UPJANG
GROUP BY B.MAIN_UPJANG, V.UPJANG, V.CUSTCD) A WHERE A.CURR_TRX_AMT != 0    OR A.CURR_RCP_AMT != 0    OR A.MI_BOND_AMT != 0    OR A.DO_BOND_AMT != 0    OR A.BU_BOND_AMT != 0    OR A.AK_BOND_AMT != 0 ORDER BY A.MAIN_UPJANG, A.UPJANG, A.CUSTCD         
</statement>
	<input default-name="ds_cond">
	  <col name="TM_CD" size="255" type="VARCHAR" description="" /> 
		<col name="MAIN_UPJANG_CD" size="255" type="VARCHAR" description="" /> 
		<col name="MAIN_UPJANG_NM" size="255" type="VARCHAR" description="" /> 
		<col name="UPJANG_CD" size="255" type="VARCHAR" description="" /> 
		<col name="UPJANG_NM" size="255" type="VARCHAR" description="" /> 
		<col name="TRX_DATE" size="255" type="VARCHAR" description="" /> 
	</input>
	<output default-name="ds_list">   
<col name="SAUP_TYPE" size="255" type="VARCHAR" description="" />      	
<col name="MAIN_UPJANG" size="" type="NUMERIC" description="" />
<col name="MAIN_UPJANGNM" size="255" type="VARCHAR" description="" />
<col name="UPJANG" size="" type="NUMERIC" description="" />
<col name="UPJANGNM" size="255" type="VARCHAR" description="" />
<col name="UPJANG" size="" type="NUMERIC" description="" />
<col name="UPJANGNM" size="255" type="VARCHAR" description="" />
<col name="CUSTCD" size="" type="NUMERIC" description="" />
<col name="CUSTNM" size="255" type="VARCHAR" description="" />
<col name="PAY_GUBUN_CDNM" size="255" type="VARCHAR" description="" />
<col name="CURR_TRX_AMT" size="" type="NUMERIC" description="" />
<col name="CURR_RCP_AMT" size="" type="NUMERIC" description="" />
<col name="MI_BOND_AMT" size="" type="NUMERIC" description="" />
<col name="DO_BOND_AMT" size="" type="NUMERIC" description="" />
<col name="AK_BOND_AMT" size="" type="NUMERIC" description="" />
<col name="MISU_BOND_AMT" size="" type="NUMERIC" description="" />
<col name="MISUCARD_BOND_AMT" size="" type="NUMERIC" description="" />
<col name="PL_CD" size="255" type="VARCHAR" description="" />
<col name="PL_UP_CD" size="255" type="VARCHAR" description="" />
<col name="BL_SHOW" size="255" type="VARCHAR" description="" />
<col name="LEVEL_NO" size="255" type="NUMERIC" description="" />
<col name="BL_PLUS" size="255" type="VARCHAR" description="" />

	</output>
</query>