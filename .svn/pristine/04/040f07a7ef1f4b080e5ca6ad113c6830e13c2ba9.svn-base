<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>

SELECT 'A' SAUP_TYPE,
	   V.MU_CD,
       V.TM_CD,
       (SELECT TM_NM FROM HLDC_SC_TM WHERE TM_CD = V.TM_CD AND ROWNUM &lt;= 1) TM_NM,
	   NULL AS MAIN_UPJANG,
       TO_CHAR(V.UPJANG) AS UPJANG,
       (SELECT UPJANGNM FROM SCO_UPJANG_MST_V WHERE UPJANG = V.UPJANG) UPJANGNM,
       V.CUSTCD,
       (SELECT CUSTNM FROM HLDC_ST_CUST WHERE CUSTCD = V.CUSTCD) CUSTNM,
       TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), 0), 'YY/MM') DATE1,
       SUM((CASE WHEN SUBSTR(V.BOND_DATE, 1, 6) BETWEEN '190001' AND TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -12), 'YYYYMM') THEN DECODE(V.DUE_GUBUN, '미도래채권', V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0) ELSE 0 END)) MI_BOND_AMT_BEFORE,
       SUM((CASE WHEN SUBSTR(V.BOND_DATE, 1, 6) BETWEEN '190001' AND TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -12), 'YYYYMM') THEN DECODE(V.DUE_GUBUN, '도래채권', V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0) ELSE 0 END))   DO_BOND_AMT_BEFORE,
       SUM((CASE WHEN SUBSTR(V.BOND_DATE, 1, 6) BETWEEN '190001' AND TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -12), 'YYYYMM') THEN DECODE(V.DUE_GUBUN, '부실채권', V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0) ELSE 0 END))   AK_BOND_AMT_BEFORE,
       SUM((CASE WHEN SUBSTR(V.BOND_DATE, 1, 6) BETWEEN '190001' AND TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -12), 'YYYYMM') THEN V.AMT - (V.RCP_AMT1 + V.RCP_AMT2) ELSE 0 END))                                       TOT_BOND_AMT_BEFORE,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), 0), 'YYYYMM'), DECODE(V.DUE_GUBUN, '미도래채권', V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  MI_BOND_AMT01,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), 0), 'YYYYMM'), DECODE(V.DUE_GUBUN, '도래채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  DO_BOND_AMT01,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), 0), 'YYYYMM'), DECODE(V.DUE_GUBUN, '부실채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  AK_BOND_AMT01,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), 0), 'YYYYMM'), V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0))                                        TOT_BOND_AMT01,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -1), 'YYYYMM'), DECODE(V.DUE_GUBUN, '미도래채권', V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  MI_BOND_AMT02,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -1), 'YYYYMM'), DECODE(V.DUE_GUBUN, '도래채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  DO_BOND_AMT02,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -1), 'YYYYMM'), DECODE(V.DUE_GUBUN, '부실채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  AK_BOND_AMT02,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -1), 'YYYYMM'), V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0))                                        TOT_BOND_AMT02,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -2), 'YYYYMM'), DECODE(V.DUE_GUBUN, '미도래채권', V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  MI_BOND_AMT03,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -2), 'YYYYMM'), DECODE(V.DUE_GUBUN, '도래채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  DO_BOND_AMT03,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -2), 'YYYYMM'), DECODE(V.DUE_GUBUN, '부실채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  AK_BOND_AMT03,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -2), 'YYYYMM'), V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0))                                        TOT_BOND_AMT03,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -3), 'YYYYMM'), DECODE(V.DUE_GUBUN, '미도래채권', V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  MI_BOND_AMT04,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -3), 'YYYYMM'), DECODE(V.DUE_GUBUN, '도래채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  DO_BOND_AMT04,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -3), 'YYYYMM'), DECODE(V.DUE_GUBUN, '부실채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  AK_BOND_AMT04,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -3), 'YYYYMM'), V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0))                                        TOT_BOND_AMT04,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -4), 'YYYYMM'), DECODE(V.DUE_GUBUN, '미도래채권', V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  MI_BOND_AMT05,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -4), 'YYYYMM'), DECODE(V.DUE_GUBUN, '도래채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  DO_BOND_AMT05,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -4), 'YYYYMM'), DECODE(V.DUE_GUBUN, '부실채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  AK_BOND_AMT05,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -4), 'YYYYMM'), V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0))                                        TOT_BOND_AMT05,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -5), 'YYYYMM'), DECODE(V.DUE_GUBUN, '미도래채권', V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  MI_BOND_AMT06,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -5), 'YYYYMM'), DECODE(V.DUE_GUBUN, '도래채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  DO_BOND_AMT06,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -5), 'YYYYMM'), DECODE(V.DUE_GUBUN, '부실채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  AK_BOND_AMT06,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -5), 'YYYYMM'), V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0))                                        TOT_BOND_AMT06,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -6), 'YYYYMM'), DECODE(V.DUE_GUBUN, '미도래채권', V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  MI_BOND_AMT07,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -6), 'YYYYMM'), DECODE(V.DUE_GUBUN, '도래채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  DO_BOND_AMT07,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -6), 'YYYYMM'), DECODE(V.DUE_GUBUN, '부실채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  AK_BOND_AMT07,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -6), 'YYYYMM'), V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0))                                        TOT_BOND_AMT07,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -7), 'YYYYMM'), DECODE(V.DUE_GUBUN, '미도래채권', V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  MI_BOND_AMT08,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -7), 'YYYYMM'), DECODE(V.DUE_GUBUN, '도래채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  DO_BOND_AMT08,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -7), 'YYYYMM'), DECODE(V.DUE_GUBUN, '부실채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  AK_BOND_AMT08,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -7), 'YYYYMM'), V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0))                                        TOT_BOND_AMT08,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -8), 'YYYYMM'), DECODE(V.DUE_GUBUN, '미도래채권', V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  MI_BOND_AMT09,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -8), 'YYYYMM'), DECODE(V.DUE_GUBUN, '도래채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  DO_BOND_AMT09,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -8), 'YYYYMM'), DECODE(V.DUE_GUBUN, '부실채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  AK_BOND_AMT09,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -8), 'YYYYMM'), V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0))                                        TOT_BOND_AMT09,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -9), 'YYYYMM'), DECODE(V.DUE_GUBUN, '미도래채권', V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  MI_BOND_AMT10,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -9), 'YYYYMM'), DECODE(V.DUE_GUBUN, '도래채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  DO_BOND_AMT10,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -9), 'YYYYMM'), DECODE(V.DUE_GUBUN, '부실채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  AK_BOND_AMT10,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -9), 'YYYYMM'), V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0))                                        TOT_BOND_AMT10,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -10), 'YYYYMM'), DECODE(V.DUE_GUBUN, '미도래채권', V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  MI_BOND_AMT11,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -10), 'YYYYMM'), DECODE(V.DUE_GUBUN, '도래채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  DO_BOND_AMT11,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -10), 'YYYYMM'), DECODE(V.DUE_GUBUN, '부실채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  AK_BOND_AMT11,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -10), 'YYYYMM'), V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0))                                        TOT_BOND_AMT11,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -11), 'YYYYMM'), DECODE(V.DUE_GUBUN, '미도래채권', V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  MI_BOND_AMT12,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -11), 'YYYYMM'), DECODE(V.DUE_GUBUN, '도래채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  DO_BOND_AMT12,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -11), 'YYYYMM'), DECODE(V.DUE_GUBUN, '부실채권',   V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0), 0))  AK_BOND_AMT12,
       SUM(DECODE(SUBSTR(V.BOND_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'), -11), 'YYYYMM'), V.AMT - (V.RCP_AMT1 + V.RCP_AMT2), 0))                                        TOT_BOND_AMT12,
       V.TM_CD||'-'||V.UPJANG||'-'||V.CUSTCD PL_CD,
       '1' PL_UP_CD,
       '0' BL_SHOW,
       3 LEVEL_NO,
       '+' BL_PLUS
  FROM (
		SELECT 
				C.MU_CD,
				C.TM_CD,
                V.UPJANG_CD AS UPJANG,
                V.CUST_CD AS CUSTCD,
				NVL(V.AR_AMT, 0)  AS AMT,
				V.OCCUR_DATE AS  BOND_DATE,
				-- 결제일 계산시 사업장기준정보에 관리되지 않는 거래처는 표시되지 않아 수정 처리:20160721 맹수영 (CH201607_00400)
				 (CASE WHEN #TRX_DATE# &gt;  DECODE(B.PAY_GUBUN_CD, '999', TO_CHAR(ADD_MONTHS(LAST_DAY(TO_DATE(V.OCCUR_DATE, 'YYYYMMDD')),3),'YYYYMMDD'), TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(NVL(B.PAY_GUBUN_CD,'001'))+3), 'YYYYMM')||
									   LEAST(TO_CHAR(LAST_DAY(TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(NVL(B.PAY_GUBUN_CD,'001'))+3), 'YYYYMMDD'), 'YYYYMMDD')), 'DD'), LPAD(B.PAY_DATE, 2, '0'))
									   ) THEN
							--'악성채권'
							'부실채권'
					   WHEN  #TRX_DATE# &gt;  DECODE(B.PAY_GUBUN_CD, '999', TO_CHAR(ADD_MONTHS(LAST_DAY(TO_DATE(V.OCCUR_DATE, 'YYYYMMDD')),1),'YYYYMMDD'), TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(NVL(B.PAY_GUBUN_CD,'001'))+1), 'YYYYMM')||
									   LEAST(TO_CHAR(LAST_DAY(TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(NVL(B.PAY_GUBUN_CD,'001'))+1), 'YYYYMMDD'), 'YYYYMMDD')), 'DD'), LPAD(B.PAY_DATE, 2, '0'))
									   ) AND
							 #TRX_DATE# &lt;=  DECODE(B.PAY_GUBUN_CD, '999', TO_CHAR(ADD_MONTHS(LAST_DAY(TO_DATE(V.OCCUR_DATE, 'YYYYMMDD')),3),'YYYYMMDD'), TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(NVL(B.PAY_GUBUN_CD,'001'))+3), 'YYYYMM')||
									   LEAST(TO_CHAR(LAST_DAY(TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(NVL(B.PAY_GUBUN_CD,'001'))+3), 'YYYYMMDD'), 'YYYYMMDD')), 'DD'), LPAD(B.PAY_DATE, 2, '0'))
									   ) THEN
							'부실채권'
					   WHEN #TRX_DATE#  &lt;=  DECODE(B.PAY_GUBUN_CD, '999', TO_CHAR(ADD_MONTHS(LAST_DAY(TO_DATE(V.OCCUR_DATE, 'YYYYMMDD')),1),'YYYYMMDD'), TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(NVL(B.PAY_GUBUN_CD,'001'))+1), 'YYYYMM')||
									   LEAST(TO_CHAR(LAST_DAY(TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(NVL(B.PAY_GUBUN_CD,'001'))+1), 'YYYYMMDD'), 'YYYYMMDD')), 'DD'), LPAD(B.PAY_DATE, 2, '0'))
									   ) AND
							 #TRX_DATE# &gt; DECODE(B.PAY_GUBUN_CD, '999', TO_CHAR(LAST_DAY(TO_DATE(V.OCCUR_DATE, 'YYYYMMDD')),'YYYYMMDD'), TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(NVL(B.PAY_GUBUN_CD,'001'))), 'YYYYMM')||
									   LEAST(TO_CHAR(LAST_DAY(TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(NVL(B.PAY_GUBUN_CD,'001'))), 'YYYYMMDD'), 'YYYYMMDD')), 'DD'), LPAD(B.PAY_DATE, 2, '0'))
									   ) THEN
							'도래채권'
					   WHEN  #TRX_DATE# &lt;=  DECODE(B.PAY_GUBUN_CD, '999', TO_CHAR(LAST_DAY(TO_DATE(V.OCCUR_DATE, 'YYYYMMDD')),'YYYYMMDD'), TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(NVL(B.PAY_GUBUN_CD,'001'))), 'YYYYMM')||
									   LEAST(TO_CHAR(LAST_DAY(TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(NVL(B.PAY_GUBUN_CD,'001'))), 'YYYYMMDD'), 'YYYYMMDD')), 'DD'), LPAD(B.PAY_DATE, 2, '0'))
									   ) THEN
							'미도래채권' 
						ELSE  	  
							'미도래채권' 
						END) DUE_GUBUN,
               NVL((SELECT SUM(RECEIVE_AMT) FROM SLA_AR_RECEIVE_DETAIL   WHERE AR_NUM  = V.AR_NUM AND RECD_STATUS  = 'L' AND RECEIVE_DATE BETWEEN '19000101' AND #TRX_DATE#), 0) RCP_AMT1,
               0 AS  RCP_AMT2
		FROM SLA_AR_MST V  LEFT JOIN 
							       (SELECT A.UPJANG, A.CUSTCD , A.PAY_GUBUN_CD , A.PAY_DATE  FROM SCO_UPJANG_CUST A  WHERE CUSTCD NOT IN (SELECT CUST_CD FROM SLA_BUY_CPNY_MGMT)
									UNION ALL
									SELECT A.UPJANG_CD AS UPJANG ,A.CUST_CD AS CUSTCD ,'999' PAY_GUBUN_CD ,31 PAY_DATE
									FROM SLA_AR_MST A  , SLA_BUY_CPNY_MGMT B
									WHERE A.CUST_CD = B.CUST_CD GROUP BY A.UPJANG_CD , A.CUST_CD)   B ON V.UPJANG_CD = B.UPJANG
																																			AND V.CUST_CD = B.CUSTCD
									INNER JOIN SCO_UPJANG_MST_V C ON V.UPJANG_CD = C.UPJANG
		WHERE  (V.OCCUR_DATE   BETWEEN '19000101' AND #TRX_DATE#)
		AND    V.RECD_STATUS = 'L'
		--AND     V.SYS_CLASS NOT IN ('13')			-- 식재제외(13)
        <isNotNull col="MU_CD">
        AND   (C.MU_CD      = #MU_CD#)
        </isNotNull>
        <isNotNull col="TM_CD">
        AND   (C.TM_CD      = #TM_CD#)
        </isNotNull>
        <isNotNull col="UPJANG">
        AND   (C.UPJANG     = #UPJANG#)
        </isNotNull>

       ) V
GROUP BY 
        V.MU_CD,
		V.TM_CD,
         V.UPJANG,
         V.CUSTCD     



         
</statement>
	<input default-name="ds_cond">
	    <col name="MU_CD" size="255" type="VARCHAR" description="" /> 
	    <col name="TM_CD" size="255" type="VARCHAR" description="" /> 
		<col name="MAIN_UPJANG" size="6" type="VARCHAR" description="업장코드" /> 
		<col name="UPJANG" size="6" type="NUMERIC" description="업장코드" /> 
		<col name="TRX_DATE" size="255" type="VARCHAR" description="" /> 
	</input>
	<output default-name="ds_list">      
<col name="SAUP_TYPE" size="255" type="VARCHAR" description="" />   	
<col name="MU_CD" size="255" type="VARCHAR" description="" />      	
<col name="TM_CD" size="255" type="VARCHAR" description="" />      	
<col name="TM_NM" size="255" type="VARCHAR" description="" />      	
<col name="MAIN_UPJANG" size="" type="VARCHAR" description="" />
<col name="UPJANG" size="" type="VARCHAR" description="" />
<col name="UPJANGNM" size="255" type="VARCHAR" description="" />
<col name="CUSTCD" size="" type="NUMERIC" description="" />
<col name="CUSTNM" size="255" type="VARCHAR" description="" />       
<col name="DATE1" size="255" type="VARCHAR" description="" />       
<col name="MI_BOND_AMT_BEFORE" size="" type="NUMERIC" description="" />
<col name="DO_BOND_AMT_BEFORE" size="" type="NUMERIC" description="" />
<col name="AK_BOND_AMT_BEFORE" size="" type="NUMERIC" description="" />
<col name="TOT_BOND_AMT_BEFORE" size="" type="NUMERIC" description="" />
<col name="MI_BOND_AMT01" size="" type="NUMERIC" description="" />
<col name="DO_BOND_AMT01" size="" type="NUMERIC" description="" />
<col name="AK_BOND_AMT01" size="" type="NUMERIC" description="" />
<col name="TOT_BOND_AMT01" size="" type="NUMERIC" description="" />
<col name="MI_BOND_AMT02" size="" type="NUMERIC" description="" />
<col name="DO_BOND_AMT02" size="" type="NUMERIC" description="" />
<col name="AK_BOND_AMT02" size="" type="NUMERIC" description="" />
<col name="TOT_BOND_AMT02" size="" type="NUMERIC" description="" />
<col name="MI_BOND_AMT03" size="" type="NUMERIC" description="" />
<col name="DO_BOND_AMT03" size="" type="NUMERIC" description="" />
<col name="AK_BOND_AMT03" size="" type="NUMERIC" description="" />
<col name="TOT_BOND_AMT03" size="" type="NUMERIC" description="" />
<col name="MI_BOND_AMT04" size="" type="NUMERIC" description="" />
<col name="DO_BOND_AMT04" size="" type="NUMERIC" description="" />
<col name="AK_BOND_AMT04" size="" type="NUMERIC" description="" />
<col name="TOT_BOND_AMT04" size="" type="NUMERIC" description="" />
<col name="MI_BOND_AMT05" size="" type="NUMERIC" description="" />
<col name="DO_BOND_AMT05" size="" type="NUMERIC" description="" />
<col name="AK_BOND_AMT05" size="" type="NUMERIC" description="" />
<col name="TOT_BOND_AMT05" size="" type="NUMERIC" description="" />
<col name="MI_BOND_AMT06" size="" type="NUMERIC" description="" />
<col name="DO_BOND_AMT06" size="" type="NUMERIC" description="" />
<col name="AK_BOND_AMT06" size="" type="NUMERIC" description="" />
<col name="TOT_BOND_AMT06" size="" type="NUMERIC" description="" />
<col name="MI_BOND_AMT07" size="" type="NUMERIC" description="" />
<col name="DO_BOND_AMT07" size="" type="NUMERIC" description="" />
<col name="AK_BOND_AMT07" size="" type="NUMERIC" description="" />
<col name="TOT_BOND_AMT07" size="" type="NUMERIC" description="" />
<col name="MI_BOND_AMT08" size="" type="NUMERIC" description="" />
<col name="DO_BOND_AMT08" size="" type="NUMERIC" description="" />
<col name="AK_BOND_AMT08" size="" type="NUMERIC" description="" />
<col name="TOT_BOND_AMT08" size="" type="NUMERIC" description="" />
<col name="MI_BOND_AMT09" size="" type="NUMERIC" description="" />
<col name="DO_BOND_AMT09" size="" type="NUMERIC" description="" />
<col name="AK_BOND_AMT09" size="" type="NUMERIC" description="" />
<col name="TOT_BOND_AMT09" size="" type="NUMERIC" description="" />
<col name="MI_BOND_AMT10" size="" type="NUMERIC" description="" />
<col name="DO_BOND_AMT10" size="" type="NUMERIC" description="" />
<col name="AK_BOND_AMT10" size="" type="NUMERIC" description="" />
<col name="TOT_BOND_AMT10" size="" type="NUMERIC" description="" />
<col name="MI_BOND_AMT11" size="" type="NUMERIC" description="" />
<col name="DO_BOND_AMT11" size="" type="NUMERIC" description="" />
<col name="AK_BOND_AMT11" size="" type="NUMERIC" description="" />
<col name="TOT_BOND_AMT11" size="" type="NUMERIC" description="" />
<col name="MI_BOND_AMT12" size="" type="NUMERIC" description="" />
<col name="DO_BOND_AMT12" size="" type="NUMERIC" description="" />
<col name="AK_BOND_AMT12" size="" type="NUMERIC" description="" />
<col name="TOT_BOND_AMT12" size="" type="NUMERIC" description="" />
<col name="PL_CD" size="255" type="VARCHAR" description="" />
<col name="PL_UP_CD" size="255" type="VARCHAR" description="" />
<col name="BL_SHOW" size="255" type="VARCHAR" description="" />
<col name="LEVEL_NO" size="255" type="NUMERIC" description="" />
<col name="BL_PLUS" size="255" type="VARCHAR" description="" />

	</output>
</query>