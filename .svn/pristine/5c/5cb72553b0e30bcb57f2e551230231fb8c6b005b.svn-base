<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="..\..\..\default_typedef.xml"/>
  <Form id="SalePriceSimu" classname="COMP_GUIDE_13" inheritanceid="" position="absolute 0 0 1252 725" titletext="판매가 시뮬레이션" scrollbars="autoboth" onload="form_onload">
    <Layouts>
      <Layout>
        <Static id="Static08" class="sta_WFSA_Labelbg" position="absolute 0 30 1237 123" anchor="left top right"/>
        <Grid id="grd_list" taborder="11" autoenter="select" useinputpanel="false" cellsizingtype="col" position="absolute 0 154 1237 709" anchor="all" binddataset="ds_list" autosizingtype="none" autofittype="col" onlbuttondown="grd_list_onlbuttondown" oncelldblclick="grd_list_oncelldblclick">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="22"/>
                <Column size="298"/>
                <Column size="101"/>
                <Column size="74"/>
                <Column size="74"/>
                <Column size="74"/>
                <Column size="74"/>
                <Column size="74"/>
                <Column size="74"/>
                <Column size="74"/>
                <Column size="74"/>
                <Column size="74"/>
                <Column size="65"/>
              </Columns>
              <Rows>
                <Row size="26" band="head"/>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell rowspan="2" class="head_Excel"/>
                <Cell col="1" rowspan="2" text="거래처명"/>
                <Cell col="2" rowspan="2" text="손익시뮬레이션"/>
                <Cell col="3" colspan="3" text="전기"/>
                <Cell col="6" colspan="3" text="차기"/>
                <Cell col="9" colspan="3" text="전기비"/>
                <Cell col="12" rowspan="2" text="확인여부"/>
                <Cell row="1" col="3" text="매출액"/>
                <Cell row="1" col="4" text="매출이익"/>
                <Cell row="1" col="5" text="매출이익율"/>
                <Cell row="1" col="6" text="매출액"/>
                <Cell row="1" col="7" text="매출이익"/>
                <Cell row="1" col="8" text="매출이익율"/>
                <Cell row="1" col="9" text="매출액"/>
                <Cell row="1" col="10" text="매출이익"/>
                <Cell row="1" col="11" text="매출이익율"/>
              </Band>
              <Band id="body">
                <Cell text="expr:currow+1"/>
                <Cell col="1" style="align:left middle;" text="bind:upjangNm"/>
                <Cell col="2" displaytype="button" edittype="none" style="background:EXPR(simuYn=='Y'?'gold':'');background2:EXPR(simuYn=='Y'?'gold':'');cursor:hand;" text="expr:simuYn=='Y'?'차기사용량등록':'차기사용량예상'" tooltiptype="mouse" tooltiptext="더블클릭 시 팝업창을 호출합니다."/>
                <Cell col="3" displaytype="number" style="align:right middle;" text="bind:periodSals" mask="#,##0"/>
                <Cell col="4" displaytype="number" style="align:right middle;" text="bind:periodGrossProfit" mask="#,##0"/>
                <Cell col="5" displaytype="number" style="align:right middle;" text="bind:periodGainrat" mask="##0.#0"/>
                <Cell col="6" displaytype="number" style="align:right middle;color:blue;color2:blue;" text="bind:nxtyrSals" mask="#,##0"/>
                <Cell col="7" displaytype="number" style="align:right middle;color:blue;color2:blue;" text="bind:nxtyrGrossProfit" mask="#,##0"/>
                <Cell col="8" displaytype="number" style="align:right middle;color:blue;color2:blue;" text="bind:nxtyrGainrat" mask="##0.#0"/>
                <Cell col="9" displaytype="number" style="align:right middle;color:red;color2:red;" text="bind:diffSals" mask="#,##0"/>
                <Cell col="10" displaytype="number" style="align:right middle;color:red;color2:red;" text="bind:diffGrossProfit" mask="#,##0"/>
                <Cell col="11" displaytype="number" style="align:right middle;color:red;color2:red;" text="bind:diffGainrat" mask="##0.#0"/>
                <Cell col="12" style="align:center middle;" text="bind:confirmYn"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Static id="Static06" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 1237 0 1252 710" anchor="top right"/>
        <Static id="Static71" text="h15" class="Guide01_AreaRed" visible="false" position="absolute 0 710 1252 725" anchor="left bottom"/>
        <Div id="div_cmnBtn" anchor="left top right" taborder="13" url="cmn::CmnBtn.xfdl" text="Div00" scrollbars="none" position="absolute 0 0 1237 30"/>
        <Static id="Static22" text="매출이익 목록" class="sta_WF_Title01" position="absolute 0 136 450 153" anchor="left top"/>
        <Static id="Static16" text="글자기준간격 h05" class="Guide01_AreaRed" visible="false" position="absolute 0 150 450 154" anchor="left top"/>
        <Static id="Static04" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 0 30 93 40" anchor="left top"/>
        <Static id="Static07" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 0 40 15 61" anchor="left top"/>
        <Static id="Static11" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 75 40 85 61" anchor="left top"/>
        <Static id="Static12" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 500 40 530 61" anchor="left top"/>
        <Static id="Static00" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 245 40 275 61" anchor="left top"/>
        <Static id="Static02" text="물류센터" class="sta_WFSA_label" position="absolute 16 40 78 61" anchor="left top"/>
        <Static id="Static01" text="팀명" class="sta_WFSA_label" position="absolute 276 40 310 61" anchor="left top" visible="false"/>
        <Static id="Static03" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 308 40 318 61" anchor="left top"/>
        <Static id="Static20" text="h05" class="Guide01_AreaRed" visible="false" position="absolute 1179 149 1237 154" anchor="top right"/>
        <Static id="Static21" text="h06" class="Guide01_AreaRed" visible="false" position="absolute 1179 123 1237 129" anchor="top right"/>
        <Static id="Static14" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 289 30 382 40" anchor="left top"/>
        <Static id="Static10" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 601 30 694 40" anchor="left top"/>
        <Static id="Static13" text="전기기준일자" class="sta_WFSA_label" position="absolute 749 40 844 61" anchor="left top"/>
        <Static id="Static17" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 835 40 845 61" anchor="left top"/>
        <Button id="btn_confirm" taborder="12" text="확인" class="btn_WF_Function" position="absolute 1199 129 1237 149" anchor="top right" enable="false" onclick="btn_confirm_onclick"/>
        <Static id="Static09" text="담당자" class="sta_WFSA_label" position="absolute 532 40 595 61" anchor="left top"/>
        <Static id="Static23" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 596 40 606 61" anchor="left top"/>
        <Static id="Static24" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 718 40 748 61" anchor="left top"/>
        <TmSearchComponent id="comp_tm" titletext="팀 검색용 Component" taborder="1" text="TmSearchComponent00" position="absolute 318 40 500 61" bindDataset="ds_search" bindTmCdColumn="schTm" bindTmNmColumn="schTmNm" qoBuCd="" qoMuCd="" qoUseYn="" eventAfterTrigger="" eventBeforeTrigger="" visible="false"/>
        <PersonalSearchComponent id="comp_sabun" titletext="사원 검색용 Component" taborder="2" text="PersonalSearchComponent00" position="absolute 606 40 718 61" bindDataset="ds_search" bindSabunColumn="schSabun" bindNmKorColumn="schSabunNm" qoMuCd="" qoTmCd="" qoTmNm="" eventAfterTrigger="fn_simuId" eventBeforeTrigger="" class="edt_WF_Essential"/>
        <Combo id="cbo_centerCode" taborder="0" innerdataset="ds_center" codecolumn="centerCode" datacolumn="centerName" class="cmb_WF_Essential" position="absolute 85 40 245 61" anchor="left top"/>
        <ObjCalendar id="cal_date" titletext="캘린더" taborder="3" text="20150101" scrollbars="none" position="absolute 845 40 945 61"/>
        <Static id="Static25" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 945 40 955 61" anchor="left top"/>
        <Combo id="cbo_simu" taborder="4" position="absolute 955 40 1217 61" anchor="left top" innerdataset="@ds_simu" codecolumn="simuId" datacolumn="simuNm" onitemchanged="cbo_simu_onitemchanged"/>
        <Static id="Static26" text="h13" class="Guide01_AreaRed" visible="false" position="absolute 0 123 450 135" anchor="left top"/>
        <Static id="Static29" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 0 112 1000 122" anchor="left top"/>
        <Static id="Static82" text="W05." visible="false" position="absolute -1 61 1144 66" anchor="left top" style="background:#ff000055;align:center middle;"/>
        <Static id="Static05" text="비고" class="sta_WFSA_label" position="absolute 17 66 79 87" anchor="left top"/>
        <Static id="Static30" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 75 66 85 87" anchor="left top"/>
        <Edit id="edt_remark" taborder="5" imemode="hangul" ontextchanged="Edit00_ontextchanged" position="absolute 85 65 500 86" anchor="left top"/>
        <Static id="Static27" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 0 65 15 86" anchor="left top"/>
        <Static id="Static15" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 500 65 530 86" anchor="left top"/>
        <Static id="Static18" text="진행상태" class="sta_WFSA_label" position="absolute 531 65 595 86" anchor="left top"/>
        <Static id="Static19" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 596 66 606 87" anchor="left top"/>
        <Edit id="edt_status" taborder="6" imemode="hangul" position="absolute 606 65 718 86" anchor="left top" tabstop="false" enableevent="true" enable="false" style=":disabled {align:left middle;}"/>
        <ObjCalendar id="cal_pDate1" titletext="캘린더" taborder="7" text="20150101" scrollbars="none" position="absolute 955 66 1055 87" enable="false"/>
        <Static id="Static28" text="~" position="absolute 1062 67 1078 86" style="align:center middle;"/>
        <ObjCalendar id="cal_pDate2" titletext="캘린더" taborder="8" text="20150101" scrollbars="none" enable="false" position="absolute 1084 66 1184 87"/>
        <Static id="Static31" text="W05." visible="false" position="absolute 1 86 1146 91" anchor="left top" style="background:#ff000055;align:center middle;"/>
        <ObjCalendar id="cal_nDate1" titletext="캘린더" taborder="9" text="20150101" scrollbars="none" enable="false" position="absolute 955 91 1055 112"/>
        <Static id="Static32" text="~" position="absolute 1063 92 1079 111" style="align:center middle;"/>
        <ObjCalendar id="cal_nDate2" titletext="캘린더" taborder="10" text="20150101" scrollbars="none" enable="false" position="absolute 1084 91 1184 112"/>
        <Static id="Static33" text="전기기간" position="absolute 881 67 945 88" anchor="left top" style="color:navy;font:Gulim,9,bold;" class="sta_WFSA_label"/>
        <Static id="Static34" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 945 66 955 87" anchor="left top"/>
        <Static id="Static35" text="차기기간" class="sta_WFSA_label" position="absolute 881 92 945 113" anchor="left top" style="color:red;font:Gulim,9,bold;"/>
        <Static id="Static36" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 945 91 955 112" anchor="left top"/>
        <Static id="Static41" text="시뮬레이션 대상 대분류(양곡,채소,축산물,수산물,김치,공산식품,식재영업소모품)에 대한 매출금액을 조회합니다." onclick="Static41_onclick" class="sta_WF_DiscInfo" position="absolute 488 131 1184 151" anchor="top right"/>
      </Layout>
    </Layouts>
    <Bind>
      <BindItem id="item4" compid="cbo_centerCode" propid="value" datasetid="ds_search" columnid="schCenter"/>
      <BindItem id="item0" compid="cal_date" propid="text" datasetid="ds_search" columnid="schDate"/>
      <BindItem id="item5" compid="cbo_simu" propid="value" datasetid="ds_search" columnid="schSimuId"/>
      <BindItem id="item8" compid="edt_remark" propid="value" datasetid="ds_search" columnid="schRemark"/>
      <BindItem id="item1" compid="cal_pDate1" propid="text" datasetid="ds_search" columnid="schPeriodSdate"/>
      <BindItem id="item2" compid="cal_pDate2" propid="text" datasetid="ds_search" columnid="schPeriodEdate"/>
      <BindItem id="item3" compid="cal_nDate1" propid="text" datasetid="ds_search" columnid="schNxtyrSdate"/>
      <BindItem id="item6" compid="cal_nDate2" propid="text" datasetid="ds_search" columnid="schNxtyrEdate"/>
    </Bind>
    <Objects>
      <Dataset id="ds_center" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="centerCode" type="STRING" size="256"/>
          <Column id="centerName" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_search" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false" oncolumnchanged="ds_search_oncolumnchanged">
        <ColumnInfo>
          <Column id="schCenter" type="STRING" size="256"/>
          <Column id="schTm" type="STRING" size="256"/>
          <Column id="schTmNm" type="STRING" size="256"/>
          <Column id="schSabun" type="STRING" size="256"/>
          <Column id="schSabunNm" type="STRING" size="256"/>
          <Column id="schDate" type="STRING" size="256"/>
          <Column id="schSimuId" type="STRING" size="256"/>
          <Column id="simuId" type="STRING" size="256"/>
          <Column id="schConfirmYn" type="STRING" size="256"/>
          <Column id="schPeriodSdate" type="STRING" size="256"/>
          <Column id="schPeriodEdate" type="STRING" size="256"/>
          <Column id="schNxtyrSdate" type="STRING" size="256"/>
          <Column id="schNxtyrEdate" type="STRING" size="256"/>
          <Column id="schRemark" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_simu" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="simuId" type="STRING" size="256"/>
          <Column id="simuNm" type="STRING" size="256"/>
          <Column id="basisDate" type="STRING" size="256"/>
          <Column id="periodSdate" type="STRING" size="256"/>
          <Column id="periodEdate" type="STRING" size="256"/>
          <Column id="nxtyrSdate" type="STRING" size="256"/>
          <Column id="nxtyrEdate" type="STRING" size="256"/>
          <Column id="confirmYn" type="STRING" size="256"/>
          <Column id="Column0" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_searchValid" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false" oncolumnchanged="ds_search_oncolumnchanged">
        <ColumnInfo>
          <Column id="schCenter" type="STRING" size="256"/>
          <Column id="schTm" type="STRING" size="256"/>
          <Column id="schTmNm" type="STRING" size="256"/>
          <Column id="schSabun" type="STRING" size="256"/>
          <Column id="schSabunNm" type="STRING" size="256"/>
          <Column id="schDate" type="STRING" size="256"/>
          <Column id="schSimuId" type="STRING" size="256"/>
          <Column id="schConfirmYn" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="schCenter">title:센터,required:true,focus:cbo_centerCode</Col>
            <Col id="schSabun">title:담당자,required:true,focus:comp_sabun</Col>
            <Col id="schSimuId">title:시뮬레이션ID,required:true,focus:cbo_simu</Col>
            <Col id="schDate">title:기준일자,required:true,date;true,focus:cal_date</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_list" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="centerCode" type="STRING" size="256"/>
          <Column id="upjang" type="STRING" size="256"/>
          <Column id="upjangNm" type="STRING" size="256"/>
          <Column id="periodCst" type="STRING" size="256"/>
          <Column id="periodSals" type="STRING" size="256"/>
          <Column id="periodGrossProfit" type="STRING" size="256"/>
          <Column id="periodGainrat" type="STRING" size="256"/>
          <Column id="nxtyrCst" type="STRING" size="256"/>
          <Column id="nxtyrSals" type="STRING" size="256"/>
          <Column id="nxtyrGrossProfit" type="STRING" size="256"/>
          <Column id="nxtyrGainrat" type="STRING" size="256"/>
          <Column id="diffCst" type="STRING" size="256"/>
          <Column id="diffSals" type="STRING" size="256"/>
          <Column id="diffGrossProfit" type="STRING" size="256"/>
          <Column id="diffGainrat" type="STRING" size="256"/>
          <Column id="confirmYn" type="STRING" size="256"/>
          <Column id="choice00" type="STRING" size="256"/>
          <Column id="choice00Amt" type="STRING" size="256"/>
          <Column id="choice01" type="STRING" size="256"/>
          <Column id="choice01Amt" type="BIGDECIMAL" size="256"/>
          <Column id="choice02" type="STRING" size="256"/>
          <Column id="choice02Amt" type="BIGDECIMAL" size="256"/>
          <Column id="choice03" type="STRING" size="256"/>
          <Column id="choice03Amt" type="BIGDECIMAL" size="256"/>
          <Column id="choice04" type="STRING" size="256"/>
          <Column id="choice04Amt" type="BIGDECIMAL" size="256"/>
          <Column id="choice05" type="STRING" size="256"/>
          <Column id="choice05Amt" type="BIGDECIMAL" size="256"/>
          <Column id="choice06" type="STRING" size="256"/>
          <Column id="choice06Amt" type="BIGDECIMAL" size="256"/>
          <Column id="periodSdate" type="STRING" size="256"/>
          <Column id="periodEdate" type="STRING" size="256"/>
          <Column id="nxtyrSdate" type="STRING" size="256"/>
          <Column id="nxtyrEdate" type="STRING" size="256"/>
          <Column id="simuYn" type="STRING" size="256"/>
          <Column id="sabun" type="STRING" size="256"/>
          <Column id="sabunNm" type="STRING" size="256"/>
          <Column id="simuId" type="STRING" size="256"/>
          <Column id="basisDate" type="STRING" size="256"/>
          <Column id="remark" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_saveValid" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false" oncolumnchanged="ds_search_oncolumnchanged">
        <ColumnInfo>
          <Column id="schCenter" type="STRING" size="256"/>
          <Column id="schTm" type="STRING" size="256"/>
          <Column id="schTmNm" type="STRING" size="256"/>
          <Column id="schSabun" type="STRING" size="256"/>
          <Column id="schSabunNm" type="STRING" size="256"/>
          <Column id="schDate" type="STRING" size="256"/>
          <Column id="schSimuId" type="STRING" size="256"/>
          <Column id="schConfirmYn" type="STRING" size="256"/>
          <Column id="schPeriodSdate" type="STRING" size="256"/>
          <Column id="schPeriodEdate" type="STRING" size="256"/>
          <Column id="schNxtyrSdate" type="STRING" size="256"/>
          <Column id="schNxtyrEdate" type="STRING" size="256"/>
          <Column id="schRemark" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="schCenter">title:센터,required:true,focus:cbo_centerCode</Col>
            <Col id="schSabun">title:담당자,required:true,focus:comp_sabun</Col>
            <Col id="schSimuId">title:시뮬레이션ID,required:true,focus:cbo_simu</Col>
            <Col id="schDate">title:기준일자,required:true,date;true,focus:cal_date</Col>
            <Col id="schRemark">title:비고,required:true,focus:edt_remark</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_listSimu" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="upjang" type="STRING" size="256"/>
          <Column id="choice00" type="STRING" size="256"/>
          <Column id="choice00Amt" type="BIGDECIMAL" size="256"/>
          <Column id="choice01" type="STRING" size="256"/>
          <Column id="choice01Amt" type="BIGDECIMAL" size="256"/>
          <Column id="choice02" type="STRING" size="256"/>
          <Column id="choice02Amt" type="BIGDECIMAL" size="256"/>
          <Column id="choice03" type="STRING" size="256"/>
          <Column id="choice03Amt" type="BIGDECIMAL" size="256"/>
          <Column id="choice04" type="STRING" size="256"/>
          <Column id="choice04Amt" type="BIGDECIMAL" size="256"/>
          <Column id="choice05" type="STRING" size="256"/>
          <Column id="choice05Amt" type="BIGDECIMAL" size="256"/>
          <Column id="choice06" type="STRING" size="256"/>
          <Column id="choice06Amt" type="BIGDECIMAL" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <InitValue>
      <ObjCalendar id="cal_pDate1" enable="false"/>
    </InitValue>
    <Script type="xscript4.0"><![CDATA[/*
  화 면 명 : SalePriceSimu
  파 일 명 : SalePriceSimu.xfdl
  기    능 : 식재영업 / 기준관리 / 단가관리 / 판매가 시뮬레이션

    수정일    수정자                  수정내용
  ----------   -------  --------------------------------------------------
  2015.05.29   최성연   최초 생성
      
  1) 공통 버튼 정의
  - 조회, 삭제, 저장, 닫기, 도움말 버튼 활성화
  
  2) 진행사항
*/


/************************************************************************************************
 * 공통 라이브러리 INCLUDE 영역 (필수)
************************************************************************************************/
include "lib::lib_com.xjs";

/************************************************************************************************
 * FORM 변수 선언 영역 (필수)
************************************************************************************************/
var fv_processCnt = 0;			//처리건수
var fv_objColInfo;				//데이터셋 컬럼정보
var fv_key = "";				//저장 시 Key값 SET(SIMU번호)
var fv_saveFlag = "";			//신규저장 시 CallBack 처리 구분
var fv_deleteFlag = "";			//삭제 시 CallBack 처리 구분
var fv_simuId = "";				//저장 후 리턴 KEY 값 (신규시)	

var fv_stdMu = "2004";			//식재사업부 MU 기본 SET (2004) : 변경될 수 있음

/************************************************************************************************
 * FORM EVENT 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : Form Load (필수)
 *---------------------------------------------------------------------------------------------*/
function form_onload(obj:Form, e:LoadEventInfo)
{	
	// Form Load 시 공통 기능 처리(obj:Form, bCreateEvent:이벤트 생성 여부)
	gfn_formOnLoad(this);
	
	// 초기값 셋팅
	fn_init();
}

	
/*----------------------------------------------------------------------------------------------
 * 설명      : 초기값 셋팅
 *---------------------------------------------------------------------------------------------*/
function fn_init()
{
	// 업데이트여부를 체크할 DataSet, 여러개 있을 경우 ;로 구분
	v_ds_check = "ds_list";

	// 센터정보 COMBO 초기화 : 조건
	fn_searchCenter();
	
	//조회조건을 초기화한다.
	var nRow= ds_search.addRow();
	ds_search.setColumn(nRow, "schCenter", "");								// 센터
	ds_search.setColumn(nRow, "schDate", gfn_today());						// 전기기준일자
	// 현재일자 기준으로 전기/차기 SET
	fn_searchDateSet();	


	// 일자 Obj SET
	cal_date.fn_initMonthCal(this, "", "", ds_search, "schDate", "Y");		// 전기기준일자 SET
	cal_pDate1.fn_initMonthCal(this, "", "", ds_search, "schPeriodSdate");	// 전기기간_FROM SET
	cal_pDate2.fn_initMonthCal(this, "", "", ds_search, "schPeriodEdate");	// 전기기간_TO SET
	cal_nDate1.fn_initMonthCal(this, "", "", ds_search, "schNxtyrSdate");	// 차기기간_FROM SET
	cal_nDate2.fn_initMonthCal(this, "", "", ds_search, "schNxtyrEdate");	// 차기기간_TO SET
	
	
	// 팀정보 MU 초기화
	comp_tm.qoMuCd = fv_stdMu;
	
	
	// 로그인사용자 기본 SET
	ds_search.setColumn(nRow, "schSabun", g_EmpNo);							// 담당자사번
	ds_search.setColumn(nRow, "schSabunNm", g_Name);						// 담당자명
	ds_search.setColumn(nRow, "schTm", g_Tm_Cd);							// 팀코드
	ds_search.setColumn(nRow, "schTmNm", g_Tm_Nm);							// 팀
	
	// 로그인 담당자 기준의 시뮬레이션 ID GET
	fn_simuId();
}

/************************************************************************************************
 * 공통기능 FUNCTION 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 조회 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_search()
{
	// 조건 SET
	var nRow = ds_search.rowposition;

	// 조회시 Validation Check
	if (gfn_validCheck(ds_search, ds_searchValid, true) == false) return;

    // Grid sort 표시 초기화(필수)
    gfn_clearSortMark(grd_list);

   	//서비스 쿼리 결과로 데이터가 없는 경우 데이터셋 컬럼정보가 사라지는 현상을 복원하기 위해 현재 컬럼정보 저장 
	fv_objColInfo = gfn_getDatasetInfo (ds_list);
    
    var strSvcID    = "search";
	var strURL      = "fm/fms/salePriceSimu/selectList.xdo";
    var strInDs     = "ds_search=ds_search:A";
    var strOutDs    = "ds_list=ds_list";
    var strArg      = "";
    var strCallback = "fn_callBack";
    var bAsync      = true;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
}


/*----------------------------------------------------------------------------------------------
 * 설명      : 신규 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_insert()
{	
	// 초기화
	fn_simu_init();
	// COMP 초기화
	fn_simuCompSet("1");
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 삭제 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_delete()
{
	// 선택한 시뮬레이션 자료를 전체 삭제
	var v_simuId = ds_search.getColumn(ds_search.rowposition, "schSimuId");		// 시뮬레이션ID
	var v_confirm = ds_search.getColumn(ds_search.rowposition, "schConfirmYn");	// 확인여부
	var sMsg = "";	

	if(v_simuId == "NEW") 
	{
		sMsg = "신규생성 자료는 삭제 할 수 없습니다.";
		gfn_alert(sMsg, "", "A");
		return;
	}

	// 검토완료 CHECK
	if(v_confirm=="Y")
	{
		sMsg = "이미 확인 처리한 시뮬레이션 자료입니다.\n\n";
		sMsg = sMsg + "작업을 취소합니다.";
		gfn_alert(sMsg, "", "A");
		return;
	}

	sMsg = "시뮬레이션 자료를 삭제합니다.\n계속 진행 하시겠습니까?\n\n";
	sMsg = sMsg + " - 시뮬레이션ID : " + ds_search.getColumn(ds_search.rowposition, "schSimuId");

	var rtVal = gfn_confirm(sMsg, "", "C");	// 선택된 자료를 삭제 하시겠습니까?

	if (rtVal == true) 
	{	
		fv_deleteFlag = "1";
		fv_saveFlag = "";
		// 삭제 시 KEY값 SET
		ds_search.setColumn(ds_search.rowposition, "simuId", ds_search.getColumn(ds_search.rowposition, "schSimuId"));
	
		// Transaction 바로 호출해서 삭제 처리 함 
		var strSvcID    = "deleteSimu";
		var strURL      = "fm/fms/salePriceSimu/deleteSimu.xdo";
		var strInDs     = "ds_search=ds_search:A";
		var strOutDs    = "";
		var strArg      = "";
		var strCallback = "fn_callBack";
		var bAsync      = true;
		
		gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
	}

}


/*----------------------------------------------------------------------------------------------
 * 설명      : 저장 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_save()
{
	var nRowCnt = ds_list.getRowCount();	// DataSet Count
	var nRow= ds_search.rowposition;
	var v_simuId = ds_search.getColumn(ds_search.rowposition, "schSimuId");		// 시뮬레이션ID

	// 저장할 자료 여부 CHECK
	if(nRowCnt == 0) 
	{
		gfn_alert("msg.save.nodata", "저장할 데이터");	// 저장할 데이터가 없습니다.
		return;
	}

	// v_ds_check 미사용시 변경사항 체크
 	//if (gfn_dsIsUpdated(ds_list) == false)
 	//{
 	//	gfn_alert("msg.save.nochange");	// 변경된 내역이 없습니다.
 	//	return;
 	//}
 	
	// 저장 시 필수입력 CHECK
	if (gfn_validCheck(ds_search, ds_saveValid, true) == false) return;
 	
	if (v_simuId=="NEW") fv_saveFlag = "I";
	else fv_saveFlag = "U";
 	
 	

	var sManager = ds_search.getColumn(nRow, "schSabunNm");		// 담당자
	var sDate = cal_date.text.substr(0,4) + "-" + cal_date.text.substr(4,2) + "-" + cal_date.text.substr(6,2);	// 전기기준일자
	
	var sMsg = "";
	if (ds_search.getColumn(nRow, "schSimuId")=="NEW") {
		sMsg = "시뮬레이션 자료를 생성합니다.\n계속 진행 하시겠습니까?\n\n";
		sMsg = sMsg + " - 담당자 : " + sManager + "\n";
		sMsg = sMsg + " - 기준일자 : " + sDate + "\n";
		sMsg = sMsg + " - 비고 : " + ds_search.getColumn(nRow, "schRemark");
	} else {
		sMsg = "시뮬레이션 자료를 저장합니다.\n계속 진행 하시겠습니까?\n\n";
		sMsg = sMsg + " - 시뮬레이션ID : " + ds_search.getColumn(nRow, "schSimuId");
	}

	if (!gfn_confirm(sMsg, "", "C")) return;
	
	// 저장 시 조건(KEY)을 ds_list의 KEY 값으로 복사
	for (var i = 0 ; i < nRowCnt ; i++)
	{
		ds_list.setColumn(i, "sabunNm", ds_search.getColumn(nRow, "schSabunNm"));
		ds_list.setColumn(i, "remark", ds_search.getColumn(nRow, "schRemark"));
	}
	
	
	// KEY SET
 	fv_key = ds_search.getColumn(nRow, "schSimuId");

	// Transaction 처리
	var strSvcID    = "saveList";
	var strURL      = "fm/fms/salePriceSimu/saveList.xdo";
	var strInDs     = "ds_list=ds_list:A";
	var strOutDs    = "";
	var strArg      = "";
	var strCallback = "fn_callBack";
	var bAsync      = true;
	
	gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);


}

/*----------------------------------------------------------------------------------------------
 * 설명      : 출력 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 * 견적서 출력 레포트 작성
 *---------------------------------------------------------------------------------------------*/
function fn_print()
{
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 도움말 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_help()
{
	
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 화면 닫기 전 변경 유무 체크 (필수-Frame에서 창 닫힐때 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_close()
{	
	// v_ds_check 사용시 변경사항 체크
	if(gfn_length(v_ds_check) == 0) 
	{	
		// v_ds_check 설정기준 변경사항 체크
		if (gfn_isDataChange() == true) 
		{		
			// 변경된 데이터가 있습니다. 현재 화면을 닫겠습니까?
			if (!gfn_confirm("confirm.before.movepage")) return false;
		}
	}
    
	// 조회프로그램에도 Return true; 기술해 주세요!
	return true;
}



/************************************************************************************************
 * TRANSACTION 및 CallBack 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 트랜잭션 콜백 함수 (필수)
 *---------------------------------------------------------------------------------------------*/
function fn_callBack(strSvcID, nErrorCode, strErrorMsg)
{
	// 에러시 gfn_callBack에서 메시지 제공, 화면별 특정 에러 발생시에만 사용하세요.
	if (nErrorCode < 0) 
	{
		return;
	}
	
    switch(strSvcID)
    {
		// 목록 조회
        case "search" :
            trace(ds_list.saveXML());
            if (ds_list.getRowCount() == 0) {
				//서비스 쿼리 결과로 데이터가 없는 경우 데이터셋 컬럼정보 복원
				gfn_loadDatasetInfo (ds_list, fv_objColInfo);
            }
            break;
    
		// 센터 조회
        case "searchCenter" :
            //trace(ds_center.saveXML());
            fn_center_init();
            break;
            
		// 시뮬레이션 ID 조회
		case "searchSimu" :
			//trace(ds_simu.saveXML());
			fn_simu_init();
			break;

        // 저장
        case "saveList" :
			trace("처리건수 : " + fv_processCnt);
			//gfn_alert("msg.save.success");	// 저장 되었습니다.
			var sMsg = "저장 되었습니다.\r\r";
			sMsg = sMsg + "-. 전체건수 : " + ds_list.rowcount + " 건\r";
			sMsg = sMsg + "-. 처리건수 : " + fv_processCnt + " 건";
			gfn_alert(sMsg, "", "A");
			
			if (fv_key=="NEW") fv_key = fv_simuId;	// 신규일 경우 KEY값 전달

			// 시뮬레이션 재조회
			fn_simuId();

            break;    

        // 삭제
        case "deleteSimu" :
			trace("처리건수 : " + fv_processCnt);
			//gfn_alert("msg.save.success");	// 저장 되었습니다.
			var sMsg = "삭제 되었습니다.\r\r";
			sMsg = sMsg + "-. 전체건수 : " + ds_list.rowcount + " 건\r";
			sMsg = sMsg + "-. 처리건수 : " + fv_processCnt + " 건";
			gfn_alert(sMsg, "", "A");
			
			if (fv_processCnt>0) fv_key = "";	// 삭제일 경우 KEY값에 "" 전달

			// 시뮬레이션 재조회
			fn_simuId();

            break;    
            
        case "saveConfirm" :
			trace("확인건수 : " + fv_processCnt);
			// 확인건수가 있으면 선택한 견적서의 확인여부 FLAG SET
			if(fv_processCnt>0) {
				ds_search.setColumn(ds_search.rowposition, "schConfirmYn", "Y");		// 확인여부
				edt_status.value = "검토완료";
			}
			var sMsg = "확인 처리 되었습니다.\r\r";
			sMsg = sMsg + "-. 전체건수 : " + ds_list.rowcount + " 건\r";
			sMsg = sMsg + "-. 처리건수 : " + fv_processCnt + " 건";
			gfn_alert(sMsg, "", "A");
			// 목록 재조회
			fn_search();
            break;    
            
            
    }
}


/************************************************************************************************
 * 사용자 FUNCTION 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 센터정보 조회
 *---------------------------------------------------------------------------------------------*/
function fn_searchCenter()
{
    var strSvcID    = "searchCenter";
    var strURL      = "fm/fms/upriceContractUpjangSet/selectCenter.xdo";
    var strInDs     = "";
    var strOutDs    = "ds_center=ds_center";
    var strArg      = "";
    var strCallback = "fn_callBack";
    var bAsync      = true;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 센터 COMBO 초기화 
 *---------------------------------------------------------------------------------------------*/
function fn_center_init()
{
	var defVal = "";
	ds_center.filter("centerCode != '*'");
	// COMBO 에 첫번째 Row에 기본값을 SET
	if (ds_center.getRowCount() > 1) {
		defVal = ds_center.getColumn(0, "centerCode");
	}
	cbo_centerCode.value = defVal;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 담당자 검색 호출 시 팀 코드 전달
 *---------------------------------------------------------------------------------------------*/
function fn_setTm()
{
	alert("1");
	//comp_sabun.qoTmCd = ds_search.getColumn(ds_search.rowposition, "schTm");
	alert("2");
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 담당자별 시뮬레이션 ID SELECT 
 *---------------------------------------------------------------------------------------------*/
function fn_simuId()
{

    var strSvcID    = "searchSimu";
    var strURL      = "fm/fms/salePriceSimu/selectSimu.xdo";
    var strInDs     = "ds_search=ds_search:A";
    var strOutDs    = "ds_simu=ds_simu";
    var strArg      = "";
    var strCallback = "fn_callBack";
    var bAsync      = true;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 시뮬레이션 ID COMBO 초기화 
 *---------------------------------------------------------------------------------------------*/
function fn_simu_init()
{
	var defVal = "";
	// COMBO 에 첫번째 Row에 기본값을 SET
	if (ds_simu.getRowCount() > 0) {
		// 저장이후 재조회 여부
		if (fv_key=="") {
			defVal = ds_simu.getColumn(0, "simuId");
		} else {
			defVal = fv_key;
		}
	}
	cbo_simu.value = defVal;
	
	// 저장 후 CallBack 처리 : 신규시에만
	if (fv_saveFlag=="I" || fv_saveFlag=="U") {
		if (fv_saveFlag=="I") {
			// 시뮬레이션 COMBO 설정에 따른 콤포넌트 처리(기존자료 조회)
			fn_simuCompSet("0");
		}		
		// 목록 재조회
		fn_search();

		// Flag Init
		fv_saveFlag = "";
	} 	
	
	// 삭제 후 CallBack 처리
	if (fv_deleteFlag=="1") {
		fn_simuCompSet("1");

		// 목록은 자동으로 조회하지 X
		ds_list.clearData();
		
		// Flag Init
		fv_deleteFlag = "";
	} 
}


/*----------------------------------------------------------------------------------------------
 * 설명      :시뮬레이션ID(COMBO)에 따른 COMP 활성화/비활성화 처리
 * flag = 1(신규)
 *---------------------------------------------------------------------------------------------*/
function fn_simuCompSet(flag)
{
	// 시뮬레이션 표시(선택)
	var v_simuId = cbo_simu.value; 

	// 조건 SET 
	var nRow = ds_search.rowposition;

	if (flag=="1")
	{
		ds_search.setColumn(nRow, "schRemark", "");							// 비고
		ds_search.setColumn(nRow, "schConfirmYn", "");						// 확인여부
		ds_search.setColumn(nRow, "schDate", gfn_today());					// 전기기준일자
		// 현재일자 기준으로 전기/차기 SET
		fn_searchDateSet();	
		
		// COMP enable
		cal_date.enable = true;			// 전기기준일자
		comp_sabun.enable = true;		// 담당자
		btn_confirm.enable = false;		// 확인_버튼
		edt_status.value = "";			// 진행상태
		
	} else {
		var iRow = ds_simu.findRowExpr("simuId=='"+v_simuId+"'");
		
		ds_search.setColumn(nRow, "schRemark", ds_simu.getColumn(iRow, "remark"));			// 비고
		ds_search.setColumn(nRow, "schConfirmYn", ds_simu.getColumn(iRow, "confirmYn"));	// 확인여부
		ds_search.setColumn(nRow, "schDate", ds_simu.getColumn(iRow, "basisDate"));			// 전기기준일자
		ds_search.setColumn(nRow, "schPeriodSdate", ds_simu.getColumn(iRow, "periodSdate"));// 전기기간_FROM
		ds_search.setColumn(nRow, "schPeriodEdate", ds_simu.getColumn(iRow, "periodEdate"));// 전기기간_TO
		ds_search.setColumn(nRow, "schNxtyrSdate", ds_simu.getColumn(iRow, "nxtyrSdate"));	// 차기기간_FROM
		ds_search.setColumn(nRow, "schNxtyrEdate", ds_simu.getColumn(iRow, "nxtyrEdate"));	// 차기기간_TO
		ds_search.setColumn(nRow, "schRemark", ds_simu.getColumn(iRow, "remark"));			// 비고
			
		
		// COMP disable
		cal_date.enable = false;		// 전기기준일자
		comp_sabun.enable = false;		// 담당자
		btn_confirm.enable = true;		// 확인_버튼
		
		if (ds_search.getColumn(ds_search.rowposition, "schConfirmYn")=="Y") edt_status.value = "검토완료";
		else edt_status.value = "검토중";
	
	}
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 전기/차기 기준일자 SET
 * 
 *---------------------------------------------------------------------------------------------*/
function fn_searchDateSet()
{
	// 조건 SET 
	var nRow = ds_search.rowposition;

	var sDate = ds_search.getColumn(nRow, "schDate");					// 전기기준일자

	// 조건 : 기준일자 전기/차기 SET
	ds_search.setColumn(nRow, "schPeriodSdate", fn_periodDateGet("1", "1", sDate));// 전기기간_FROM
	ds_search.setColumn(nRow, "schPeriodEdate", fn_periodDateGet("1", "2", sDate));// 전기기간_TO
	ds_search.setColumn(nRow, "schNxtyrSdate", fn_periodDateGet("2", "1", sDate)); // 차기기간_FROM
	ds_search.setColumn(nRow, "schNxtyrEdate", fn_periodDateGet("2", "2", sDate)); // 차기기간_TO
}


/*----------------------------------------------------------------------------------------------
 * 설명      :기준일자가 상순/하순 인지 여부 GET
 * return = 1(상순), 2(하순)
 *---------------------------------------------------------------------------------------------*/
function fn_periodGet(sDate)
{
	if (gfn_isNull(sDate)) 
	{
		return "-1";
	}
	
	var nDay  = parseInt(gfn_subStr(sDate,6, 2))

	if (nDay > 15) return "2";
	else return "1";
}

/*----------------------------------------------------------------------------------------------
 * 설명  :전기/차기에 따른 기간FROM, TO에 해당하는 일자를 GET한다
 * flag = 1(전기), 2(차기), gubun(1:from, 2:to), sDate(기준일자)
 *---------------------------------------------------------------------------------------------*/
function fn_periodDateGet(flag, gubun, sDate)
{
	var v_date;
	
	if (gfn_isNull(sDate)) 
	{
		return "-1";
	}

	// 상순/하순 구분
	var day_gubun = fn_periodGet(sDate);

	if (day_gubun == -1) return "-1";

	// 상순일 경우	
	if (day_gubun=="1") {
		if (flag=="1") {
		// 전기
			v_date = gfn_addMonth(sDate, -1);
			if (gubun=="1") {
				//v_date = gfn_subStr(v_date, 0, 6) + "16";
				v_date = gfn_subStr(v_date, 0, 6) + "01";
			} else {
				v_date = gfn_subStr(v_date, 0, 6) + "15";
				//v_date = gfn_getLastDate(v_date);
			}
		} else {
		// 차기	
			//v_date = sDate; 
			v_date = gfn_addMonth(sDate, -1);
			if (gubun=="1") {
				v_date = gfn_subStr(v_date, 0, 6) + "16";
			} else {
				v_date = gfn_getLastDate(v_date);
			}
		}
	} else {
	// 하순일 경우
		if (flag=="1") {
		// 전기
			//v_date = sDate; 
			v_date = gfn_addMonth(sDate, -1);
			if (gubun=="1") {
				//v_date = gfn_subStr(v_date, 0, 6) + "01";
				v_date = gfn_subStr(v_date, 0, 6) + "16";
			} else {
				//v_date = gfn_subStr(v_date, 0, 6) + "15";
				v_date = gfn_getLastDate(v_date);			
			}
		} else {
		// 차기	
			//v_date = gfn_addMonth(sDate, 1);
			v_date = sDate; 
			if (gubun=="1") {
				v_date = gfn_subStr(v_date, 0, 6) + "01";
			} else {
				v_date = gfn_subStr(v_date, 0, 6) + "15";		
			}
		}
	}

	return v_date;
}

/*----------------------------------------------------------------------------------------------
 * 설명  : 그리드의 차기사용량예상 버튼 클릭 시 팝업 호출
 * 
 *---------------------------------------------------------------------------------------------*/
function fn_simuPop(row)
{
	var nRow= ds_search.rowposition;
	var arrParam = new Array();
	
	if (row < -1) return;
	

	// 파라미터는 견적서의 유사시뮬레이션 형식과 동일하게 처리
	// 전체 대분류 기준으로 처리함
	// 전송할 파라미터 1 : 작업구분(estPaper : 견적서 호출)	
	// 전송할 파라미터 2 : 센터코드
	// 전송할 파라미터 3 : 기준일자_FROM
	// 전송할 파라미터 4 : 기준일자_TO
	// 전송할 파라미터 5 : 양곡_CHK
	// 전송할 파라미터 6 : 채소_CHK
	// 전송할 파라미터 7 : 축산물_CHK
	// 전송할 파라미터 8 : 수산물_CHK
	// 전송할 파라미터 9 : 김치_CHK
	// 전송할 파라미터 10: 공산식품_CHK
	// 전송할 파라미터 11: 식재영업소모품_CHK
	// 시뮬레이션등록구분 12 : Y/N
	// 추가 파라미터 13 : 양곡 선택 업장
	// 추가 파라미터 14 : 채소 선택 업장
	// 추가 파라미터 15 : 축산물 선택 업장
	// 추가 파라미터 16 : 수산물 선택 업장
	// 추가 파라미터 17 : 김치 선택 업장
	// 추가 파라미터 18 : 공산식품 선택 업장
	// 추가 파라미터 19 : 식재영업소모품 선택 업장
	
	
	arrParam[0] = "salePriceSimu";
	arrParam[1] = ds_search.getColumn(nRow, "schCenter");
	arrParam[2] = ds_search.getColumn(nRow, "schNxtyrSdate");	// 차기기간_FROM
	arrParam[3] = ds_search.getColumn(nRow, "schNxtyrEdate");	// 차기기간_TO
	arrParam[4] = "1";
	arrParam[5] = "1";
	arrParam[6] = "1";
	arrParam[7] = "1";
	arrParam[8] = "1";
	arrParam[9] = "1";
	arrParam[10] = "1";
	arrParam[11] = ds_list.getColumn(row, "simuYn");	// 시뮬레이션구분(Y/N)
	arrParam[12] = ds_list.getColumn(row, "choice00");
	arrParam[13] = ds_list.getColumn(row, "choice01");
	arrParam[14] = ds_list.getColumn(row, "choice02");
	arrParam[15] = ds_list.getColumn(row, "choice03");
	arrParam[16] = ds_list.getColumn(row, "choice04");
	arrParam[17] = ds_list.getColumn(row, "choice05");
	arrParam[18] = ds_list.getColumn(row, "choice06");

	var dsRtn = new Dataset();

	var dsObj = gfn_dialog("SalePriceSimuPop"				// Dialog ID
							, "X_FMS::SalePriceSimuPop.xfdl"	// Form URL
							, {fv_Contents:arrParam}					// 배열
							, null, null, null, null, null, false, true, -1);

	if(dsObj != null)
	{
		ds_listSimu.clearData();
		for(var i=0; i<dsObj.rowcount; i++)
		{	
			ds_listSimu.addRow();
			ds_listSimu.setColumn(ds_listSimu.rowposition, "upjang", ds_list.getColumn(row, "upjang"));		// 호출한 업장 SET		
			ds_listSimu.setColumn(ds_listSimu.rowposition, "choice00", dsObj.getColumn(i, "choice00"));
			ds_listSimu.setColumn(ds_listSimu.rowposition, "choice00Amt", dsObj.getColumn(i, "choice00Amt"));
			ds_listSimu.setColumn(ds_listSimu.rowposition, "choice01", dsObj.getColumn(i, "choice01"));
			ds_listSimu.setColumn(ds_listSimu.rowposition, "choice01Amt", dsObj.getColumn(i, "choice01Amt"));
			ds_listSimu.setColumn(ds_listSimu.rowposition, "choice02", dsObj.getColumn(i, "choice02"));
			ds_listSimu.setColumn(ds_listSimu.rowposition, "choice02Amt", dsObj.getColumn(i, "choice02Amt"));
			ds_listSimu.setColumn(ds_listSimu.rowposition, "choice03", dsObj.getColumn(i, "choice03"));
			ds_listSimu.setColumn(ds_listSimu.rowposition, "choice03Amt", dsObj.getColumn(i, "choice03Amt"));
			ds_listSimu.setColumn(ds_listSimu.rowposition, "choice04", dsObj.getColumn(i, "choice04"));
			ds_listSimu.setColumn(ds_listSimu.rowposition, "choice04Amt", dsObj.getColumn(i, "choice04Amt"));
			ds_listSimu.setColumn(ds_listSimu.rowposition, "choice05", dsObj.getColumn(i, "choice05"));
			ds_listSimu.setColumn(ds_listSimu.rowposition, "choice05Amt", dsObj.getColumn(i, "choice05Amt"));
			ds_listSimu.setColumn(ds_listSimu.rowposition, "choice06", dsObj.getColumn(i, "choice06"));
			ds_listSimu.setColumn(ds_listSimu.rowposition, "choice06Amt", dsObj.getColumn(i, "choice06Amt"));
		}
		// 시뮬레이션 수량 적용 : 분류별
		//trace(ds_listSimu.saveXML());
		if (ds_listSimu.getRowCount() > 0 ) {
			// 차기 매출금액 계산
			fn_processSimu(row);
		}
		
	}
}

/*----------------------------------------------------------------------------------------------
 * 설명  : 차기사용량 예상관련 계산
 * 
 *---------------------------------------------------------------------------------------------*/
function fn_processSimu(row)
{
	var nRowCnt = ds_listSimu.getRowCount();	// DataSet Count
		
	var v_choice00Amt = 0;	
	var v_choice01Amt = 0;	
	var v_choice02Amt = 0;	
	var v_choice03Amt = 0;	
	var v_choice04Amt = 0;	
	var v_choice05Amt = 0;	
	var v_choice06Amt = 0;	
	
	if (nRowCnt < 1) return;
	
	// 차기매출 관련 항목 SET
	if (gfn_isNull(ds_listSimu.getColumn(ds_listSimu.rowposition, "choice00Amt"))) v_choice00Amt = 0;
	else v_choice00Amt = ds_listSimu.getColumn(ds_listSimu.rowposition, "choice00Amt");
	
	if (gfn_isNull(ds_listSimu.getColumn(ds_listSimu.rowposition, "choice01Amt"))) v_choice01Amt = 0;
	else v_choice01Amt = ds_listSimu.getColumn(ds_listSimu.rowposition, "choice01Amt");
	
	if (gfn_isNull(ds_listSimu.getColumn(ds_listSimu.rowposition, "choice02Amt"))) v_choice02Amt = 0;
	else v_choice02Amt = ds_listSimu.getColumn(ds_listSimu.rowposition, "choice02Amt");

	if (gfn_isNull(ds_listSimu.getColumn(ds_listSimu.rowposition, "choice03Amt"))) v_choice03Amt = 0;
	else v_choice03Amt = ds_listSimu.getColumn(ds_listSimu.rowposition, "choice03Amt");

	if (gfn_isNull(ds_listSimu.getColumn(ds_listSimu.rowposition, "choice04Amt"))) v_choice04Amt = 0;
	else v_choice04Amt = ds_listSimu.getColumn(ds_listSimu.rowposition, "choice04Amt");
	
	if (gfn_isNull(ds_listSimu.getColumn(ds_listSimu.rowposition, "choice05Amt"))) v_choice05Amt = 0;
	else v_choice05Amt = ds_listSimu.getColumn(ds_listSimu.rowposition, "choice05Amt");

	if (gfn_isNull(ds_listSimu.getColumn(ds_listSimu.rowposition, "choice06Amt"))) v_choice06Amt = 0;
	else v_choice06Amt = ds_listSimu.getColumn(ds_listSimu.rowposition, "choice06Amt");
	
	ds_list.setColumn(row, "choice00", ds_listSimu.getColumn(ds_listSimu.rowposition, "choice00"));
	ds_list.setColumn(row, "choice00Amt", v_choice00Amt);
	ds_list.setColumn(row, "choice01", ds_listSimu.getColumn(ds_listSimu.rowposition, "choice01"));
	ds_list.setColumn(row, "choice01Amt", v_choice01Amt);
	ds_list.setColumn(row, "choice02", ds_listSimu.getColumn(ds_listSimu.rowposition, "choice02"));
	ds_list.setColumn(row, "choice02Amt", v_choice02Amt);
	ds_list.setColumn(row, "choice03", ds_listSimu.getColumn(ds_listSimu.rowposition, "choice03"));
	ds_list.setColumn(row, "choice03Amt", v_choice03Amt);
	ds_list.setColumn(row, "choice04", ds_listSimu.getColumn(ds_listSimu.rowposition, "choice04"));
	ds_list.setColumn(row, "choice04Amt", v_choice04Amt);
	ds_list.setColumn(row, "choice05", ds_listSimu.getColumn(ds_listSimu.rowposition, "choice05"));
	ds_list.setColumn(row, "choice05Amt", v_choice05Amt);
	ds_list.setColumn(row, "choice06", ds_listSimu.getColumn(ds_listSimu.rowposition, "choice06"));
	ds_list.setColumn(row, "choice06Amt", v_choice06Amt);

	// 차기_매출액합계
	var v_nxtyrSals = 0;
	v_nxtyrSals = v_nxtyrSals + v_choice00Amt;
	v_nxtyrSals = v_nxtyrSals + v_choice01Amt;
	v_nxtyrSals = v_nxtyrSals + v_choice02Amt;
	v_nxtyrSals = v_nxtyrSals + v_choice03Amt;
	v_nxtyrSals = v_nxtyrSals + v_choice04Amt;
	v_nxtyrSals = v_nxtyrSals + v_choice05Amt;
	v_nxtyrSals = v_nxtyrSals + v_choice06Amt;
	ds_list.setColumn(row, "nxtyrSals", v_nxtyrSals);
	trace("v_nxtyrSals : " + v_nxtyrSals);

	// 차기_매출이익 = 매출액  - 원가
	var v_nxtyrGrossProfit = 0;
	var v_nxtyrCst = ds_list.getColumn(row, "nxtyrCst");
	v_nxtyrGrossProfit = v_nxtyrSals - v_nxtyrCst;
	ds_list.setColumn(row, "nxtyrGrossProfit", v_nxtyrGrossProfit);
	trace("v_nxtyrGrossProfit : " + v_nxtyrGrossProfit);
	
	// 차기_매출이익율 = 매출이익 / 매출
	var v_nxtyrGainrat = 0;	
	if 	(v_nxtyrSals == 0) v_nxtyrGainrat = 0;
	else v_nxtyrGainrat = (v_nxtyrGrossProfit / v_nxtyrSals) * 100;
	
	v_nxtyrGainrat = gfn_round(v_nxtyrGainrat, 2);
	ds_list.setColumn(row, "nxtyrGainrat", v_nxtyrGainrat);

	trace("v_nxtyrGainrat : " + v_nxtyrGainrat);


	var v_diffCst = 0;
	
	// 전기비_매출액 = 차기_매출액 - 전기_매출액
	var v_diffSals = 0;
	v_diffSals = v_nxtyrSals - ds_list.getColumn(row, "periodSals");
	ds_list.setColumn(row, "diffSals", v_diffSals);
	
	// 전기비_매출이익 = 차기_매출이익 - 전기_매출이익
	var v_diffGrossProfit = 0;
	v_diffGrossProfit =  v_nxtyrGrossProfit - ds_list.getColumn(row, "periodGrossProfit"); 
	ds_list.setColumn(row, "diffGrossProfit", v_diffGrossProfit);

	// 전기비_매출이익율 = 전기비_매출이익 / 전기비_매출
	var v_diffGainrat = 0;
	if (v_diffSals == 0) v_diffGainrat = 0;
	else v_diffGainrat = (v_diffGrossProfit / v_diffSals) * 100;
	
	v_diffGainrat = gfn_round(v_diffGainrat, 2);
	ds_list.setColumn(row, "diffGainrat", v_diffGainrat);

	// 시뮬레이션구분 SET
	ds_list.setColumn(row, "simuYn", "Y");
	
	gfn_alert("msg.action.success");	// 처리 되었습니다.

}

/************************************************************************************************
 * 각 COMPONENT 별 EVENT 영역 (필수)
************************************************************************************************/

/*----------------------------------------------------------------------------------------------
 * 설명      : 시뮬레이션ID 변경 시 이벤트 처리
 *              
 *---------------------------------------------------------------------------------------------*/
function cbo_simu_onitemchanged(obj:Combo, e:ItemChangeEventInfo)
{
	// 시뮬레이션 표시(선택)
	var v_simuId = cbo_simu.value; 

	// LIST Clear
	ds_list.clearData();

 	// KEY Clear
 	fv_key = "";

	if (v_simuId=="NEW")
	{	// 신규생성
		fn_simuCompSet("1");
	} else {
		// 기존
		fn_simuCompSet("0");
	}	
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 조건Dataset 변경 시 이벤트 처리
 *              
 *---------------------------------------------------------------------------------------------*/
function ds_search_oncolumnchanged(obj:Dataset, e:DSColChangeEventInfo)
{
	// 시뮬레이션 표시(선택)
	var v_simuId = cbo_simu.value; 

    switch(e.columnid)
    {
		case "schCenter" :			// 센터
			ds_list.clearData();
			break;

		
		case "schSabun" :			// 담당자
			ds_simu.clearData();
			ds_list.clearData();
			break;
		
		
		case "schDate" :			// 기준일자
			if (v_simuId!="NEW") return;
			fn_searchDateSet();
			ds_list.clearData();
			break;
    
	}	

	
}


/*----------------------------------------------------------------------------------------------
 * 설명      : 확인 버튼 클릭 시 이벤트 처리
 *              
 *---------------------------------------------------------------------------------------------*/
function btn_confirm_onclick(obj:Button,  e:ClickEventInfo)
{
	var nRowCnt = ds_list.getRowCount();	// DataSet Count
	var nRow= ds_search.rowposition;
	var v_simuId = cbo_simu.value; 
	
	// 저장할 자료 여부 CHECK
	if(nRowCnt == 0) 
	{
		gfn_alert("msg.save.nodata", "저장할 데이터");	// 저장할 데이터가 없습니다.
		return;
	}

	// 시뮬레이션ID CHECK
	if(v_simuId=="NEW" || v_simuId=="") {
		sMsg = "시뮬레이션을 선택하세요.";
		gfn_alert(sMsg, "", "A");
		cbo_simu.setFocus();
		return;
	}
	
	sMsg = "선택한 시뮬레이션을 확인처리 합니다.\n계속 진행 하시겠습니까?\n\n";
	sMsg = sMsg + " - 시뮬레이션ID : " + ds_search.getColumn(nRow, "schSimuId");
	
	if (!gfn_confirm(sMsg, "", "C")) return;
	
	// 저장 시 조건(KEY)을 ds_list의 KEY 값으로 복사
	for (var i = 0 ; i < nRowCnt ; i++)
	{
		ds_list.setColumn(i, "simuId", ds_search.getColumn(nRow, "schSimuId"));		
	}
	
	// KEY SET
 	fv_key = ds_search.getColumn(nRow, "schSimuId");
	
	
	// Transaction 처리
	var strSvcID    = "saveConfirm";
	var strURL      = "fm/fms/salePriceSimu/saveConfirm.xdo";
	var strInDs     = "ds_list=ds_list:A";
	var strOutDs    = "";
	var strArg      = "";
	var strCallback = "fn_callBack";
	var bAsync      = true;
	
	gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 그리드 더블클릭 시 이벤트 처리
 *              
 *---------------------------------------------------------------------------------------------*/
function grd_list_oncelldblclick(obj:Grid, e:GridClickEventInfo)
{
	if(e.row <= -1) return;
	
	// 차기사용량예상 버튼 클릭 시
	if (e.cell == 2)
	{
		//alert(ds_list.getColumn(e.row, "upjang"));
		fn_simuPop(e.row);
	}
	
}
]]></Script>
  </Form>
</FDL>
