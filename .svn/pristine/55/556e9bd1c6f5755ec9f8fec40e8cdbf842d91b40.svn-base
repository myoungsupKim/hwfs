<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="sm.srm.cardDupApprovalInquiryDAO">
	<desc>카드 중복승인 내역 HQML Query</desc>

	<!-- 카드 중복승인 내역 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.sm.srm.dao.CardDupApprovalInquiryDAO.selectList */
		<![CDATA[
		SELECT A.SYS_CLASS,
		       A.OCCUR_DATE,
		       A.SEQ,
		       A.EDI_INPUT_CLASS,
		       A.CARD_ACCEPT_TYPE,
		       A.CARD_PROC_TYPE,
		       C.CARD_PROC_TYPE_NM,
		       A.CARD_NUM_VIEW,
		       A.CARD_COM_CD,
			   B.CARD_COM_NM,
		       A.CARD_CLASS,
		       A.CARD_NUM,
		       --SCC_CRYPTO.MASKAUTH_FUN (A.CARD_NUM, 5, :g_PersInfoMask, :p_MaskAuth) AS CARD_NUM,
		       A.APPRV_NUM,
		       A.APPRV_DATE,
		       DECODE(APPRV_TIME, NULL, NULL, '', NULL, TO_CHAR(TO_DATE(A.APPRV_TIME, 'HH24:MI:SS'), 'HH24:MI:SS')) APPRV_TIME,
		       A.USE_AMT,
		       A.WITHDRAW_SCHD_DATE,
		       A.DOLLAR_AMT,
		       A.EXCHANGE_RATE,
		       A.ALLT_TERM,
		       A.VALID_YYMM,
		       A.MU_CD,
		       (SELECT MU_NM FROM SCC_MU WHERE MU_CD = A.MU_CD) MU_NM,
		       A.CC_CD,
		       D.CC_NM,
		       A.UPJANG_CD,
		       D.UPJANGNM UPJANG_NM,
		       A.POS_NUM,
		       A.RECEIPT_NUM,
		       A.TERMIAL_NUM,
		       A.FRNC_STOR_NUM,
		       A.VOID_STATUS,
		       A.RESERV_NUM,
		       A.BILLING_YN,
		       A.BILLING_DATE,
		       A.JOURNALZ_YN,
		       A.JOURNALZ_NUM,
		       A.BATCH_ID,
		       A.EDI_YN,
		       A.REMARK,
		       A.BUY_CLASS,
		       A.RECEIVE_SCHD_DATE,
		       A.COMM_RATE,
		       A.CARDCOMM_AMT,
		       A.AR_NUM,
		       A.BACK_DATE,
		       A.BACK_REASON_CD,
		       A.BACK_JOURNALZ_NUM,
		       A.RECD_STATUS,
		       A.CUSER,
		       A.CDATE,
		       A.UUSER,
		       A.UDATE
		FROM   SLA_CARD_APPRV_INFO A,
			   SLA_CARD_COM_CD_MST B,
			   SLA_CARD_PROC_TYPE_MST C,
			   SCO_UPJANG_MST_V D
		WHERE  A.CARD_COM_CD = B.CARD_COM_CD(+)
		AND	   A.CARD_PROC_TYPE = C.CARD_PROC_TYPE(+)
		AND	   A.UPJANG_CD = D.UPJANG(+)
		AND	   (A.CARD_NUM = (SELECT CARD_NUM
							  FROM   SLA_CARD_APPRV_INFO
							  WHERE  1 = 1
							  <#if occurDateFrom?has_content>
							  AND	 OCCUR_DATE >= :occurDateFrom
							  </#if>
							  <#if occurDateTo?has_content>
							  AND	 OCCUR_DATE <= :occurDateTo
							  </#if>
							  GROUP BY CARD_NUM
							  HAVING COUNT(CARD_NUM) > 1) OR
			   A.APPRV_NUM = (SELECT APPRV_NUM
			   				  FROM   SLA_CARD_APPRV_INFO
			   				  WHERE  1 = 1
							  <#if occurDateFrom?has_content>
							  AND	 OCCUR_DATE >= :occurDateFrom
							  </#if>
							  <#if occurDateTo?has_content>
							  AND	 OCCUR_DATE <= :occurDateTo
							  </#if>
			   				  GROUP BY APPRV_NUM
			   				  HAVING COUNT(APPRV_NUM) > 1))
		<#if occurDateFrom?has_content>
		AND	   A.OCCUR_DATE >= :occurDateFrom
		</#if>
		<#if occurDateTo?has_content>
		AND	   A.OCCUR_DATE <= :occurDateTo
		</#if>
		<#if muCd?has_content>
		AND	   A.MU_CD = :muCd
		</#if>
		<#if sysClass?has_content>
		AND	   A.SYS_CLASS = :sysClass
		</#if>
		<#if cardComCd?has_content>
		AND	   A.CARD_COM_CD = :cardComCd
		</#if>
		<#if ccCd?has_content>
		AND	   A.CC_CD = :ccCd
		</#if>
		<#if upjang?has_content>
		AND	   A.UPJANG_CD = :upjang
		</#if>
		<#if cardNum?has_content>
		AND	   A.CARD_NUM LIKE '%'|| :cardNum ||'%'
		</#if>
		<#if apprvNum?has_content>
		AND	   A.APPRV_NUM LIKE '%'|| :apprvNum ||'%'
		</#if>
		<#if useAmtFrom?has_content>
		AND	   A.USE_AMT >= :useAmtFrom
		</#if>
		<#if useAmtTo?has_content>
		AND	   A.USE_AMT <= :useAmtTo
		</#if>
		<#if cardProcType?has_content>
		AND	   A.CARD_PROC_TYPE = :cardProcType
		</#if>
		ORDER BY A.APPRV_NUM ASC
		]]>
	</statement>

</hqml>
