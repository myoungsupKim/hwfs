<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[그룹별 레시피 리스트 조회]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
SELECT A.UPJANG,
       C.RECIPE_SET,
       A.RECIPE_CD,  --레시피코드
       A.RECIPE_NAME, --레시피명
       A.SUBINV_CLASS,
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FM0006' AND CODE = A.SUBINV_CLASS) SUBINV_CLASS_NAME, --식당군
<isEqual col="CostGbn" value="0">
       0 OP_PRICE 
  FROM FMM_UPJANG_RECIPE_MST A ,
       FMM_MY_RECIPE C
 WHERE A.UPJANG = C.UPJANG
   AND A.RECIPE_CD = C.RECIPE_CD
   AND A.SUBINV_CLASS = C.SUBINV_CLASS
   AND C.UPJANG = #UPJANG#
   AND C.RECIPE_SET = #RECIPE_SET#
ORDER BY A.SUBINV_CLASS,A.RECIPE_CD
</isEqual>
<isEqual col="CostGbn" value="1">
--원가포함(속도느려서 제거)
       SUM(ROUND(B.NEED_QTY * (NVL(E.OP_PRICE,0) / F.KG_CONVERT_RATE / 1000) )) AS OP_PRICE --1인원가
  FROM FMM_UPJANG_RECIPE_MST A ,
       FMM_UPJANG_RECIPE_ITEM B ,
       FMM_MY_RECIPE C ,
       (
            SELECT A.UPJANG, A.ITEM_CODE
                 , A.UNIT_PRICE, A.SALE_PRICE
                 , DECODE(SIGN(NVL(C.OP_PRICE,0)),0, SCC_CEIL(A.SALE_PRICE + ROUND(A.SALE_PRICE * NVL(C.OP_RATE,0) / 100),C.CEIL_VAL), C.OP_PRICE) AS OP_PRICE
              FROM FMU_OP_RATE C
                 ,(SELECT #UPJANG# AS UPJANG, NVL('',TO_CHAR(SYSDATE,'YYYYMMDD')) AS NEED_DATE
                        , A.ITEM_CODE, A.CONTRACT_PRICE AS UNIT_PRICE, A.SALE_PRICE
                     FROM HLDC_PO_CONTRACT_FSALE A
                        ,(SELECT CENTER_CODE, UPJANG, ITEM_CODE, MAX(CONTRACT_START) AS CONTRACT_START
                            FROM HLDC_PO_CONTRACT_FSALE
                           WHERE CENTER_CODE = (SELECT A.CENTER_CODE FROM HLDC_PO_UPJANG_CENTER A, HLDC_ST_UPJANG B WHERE A.UPJANG = B.AP_UNITPRICE_UPJANG AND B.UPJANG = #UPJANG#)
                             AND UPJANG = (SELECT AP_UNITPRICE_UPJANG FROM HLDC_ST_UPJANG WHERE UPJANG = #UPJANG#)
                             AND ITEM_CODE > ' '
                             AND CONTRACT_START &lt;= NVL('',TO_CHAR(SYSDATE,'YYYYMMDD'))
                           GROUP BY CENTER_CODE, UPJANG, ITEM_CODE) B
                    WHERE A.CENTER_CODE = B.CENTER_CODE
                      AND A.UPJANG = B.UPJANG
                      AND A.ITEM_CODE = B.ITEM_CODE
                      AND A.CONTRACT_START = B.CONTRACT_START
                      AND A.SALE_PRICE > 0
                      AND A.USE_YN = 'Y'
                      AND EXISTS (SELECT 1 FROM HLDC_PO_TREAT_UPJANG X WHERE X.ITEM_CODE = A.ITEM_CODE AND X.UPJANG = A.UPJANG)
                   -----------
                    UNION ALL
                   -----------
                   SELECT #UPJANG# AS UPJANG, NVL('',TO_CHAR(SYSDATE,'YYYYMMDD')) AS NEED_DATE
                        , A.ITEM_CODE, A.UNIT_PRICE, A.SALE_PRICE
                     FROM FMP_OTCUST_PRICE_AVA_V A
                        ,(SELECT UPJANG, ITEM_CODE, MAX(SDATE) AS SDATE
                            FROM FMP_OTCUST_PRICE_AVA_V
                           WHERE UPJANG = (SELECT OTCUST_PRICE_UPJANG FROM FMS_UPJANG WHERE UPJANG = #UPJANG#)
                             AND SDATE &lt;= NVL('',TO_CHAR(SYSDATE,'YYYYMMDD'))
                           GROUP BY UPJANG, ITEM_CODE) B
                    WHERE A.UPJANG = B.UPJANG
                      AND A.SDATE = B.SDATE
                      AND A.ITEM_CODE = B.ITEM_CODE
                      AND A.SALE_PRICE > 0
                      AND A.USE_YN = 'Y'
                  ) A
             WHERE A.UPJANG = C.UPJANG(+)
               AND A.NEED_DATE BETWEEN C.SDATE(+) AND C.EDATE(+)
               AND A.ITEM_CODE BETWEEN C.ITEM_CODE(+) AND C.ITEM_CODE(+)||'9999'
               AND C.USE_YN(+) = 'Y'
         ) E,
       (
       SELECT ITEM_CODE,
              ITEM_NAME,
              ITEM_SIZE,
              PO_UOM,
              KG_CONVERT_RATE
         FROM FMS_ITEM_V
        WHERE ITEM_CODE BETWEEN '010100000001' AND '019999999999'
       ) F
 WHERE A.UPJANG = B.UPJANG
   AND A.RECIPE_CD = B.RECIPE_CD
   AND A.UPJANG = C.UPJANG
   AND A.RECIPE_CD = C.RECIPE_CD
   AND A.SUBINV_CLASS = C.SUBINV_CLASS
   AND B.ITEM_CODE = F.ITEM_CODE
   AND B.ITEM_CODE = E.ITEM_CODE(+)
   AND C.UPJANG = #UPJANG#
   AND C.RECIPE_SET = #RECIPE_SET#
  GROUP BY  A.UPJANG,C.RECIPE_SET,A.RECIPE_CD, A.RECIPE_NAME, A.SUBINV_CLASS
ORDER BY A.SUBINV_CLASS,A.RECIPE_CD
</isEqual>	</statement>
	<input default-name="ds_List2">
	</input>
	<output default-name="ds_List2">
	</output>
</query>
