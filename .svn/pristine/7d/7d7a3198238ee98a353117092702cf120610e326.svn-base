<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="rc.sle.itemPoolMgmtDAO">
	<desc>아이템 그룹 등록 관리</desc>



	<!--  DATA를 조회한다. -->
	<statement name="selectList" type="select"><![CDATA[
 
		SELECT
			POOL.MENU_CD,
			POOL.MENU_CLASS,
			POOL.MENU_CLSFI,
			POOL.MENU_SCLASS,
			
			CLASS.MENU_CLSFI_NM  AS MENU_CLASS_NM ,
			--CLSFI.MENU_CLSFI_NM  AS MENU_CLSFI_NM,
			--SCLASS.MENU_CLSFI_NM AS MENU_SCLASS_NM,
			DECODE(POOL.MENU_CLSFI,'00','',CLSFI.MENU_CLSFI_NM)  AS MENU_CLSFI_NM,
			DECODE(POOL.MENU_SCLASS,'00','',SCLASS.MENU_CLSFI_NM) AS MENU_SCLASS_NM,
			
			POOL.MENU_NM,
			POOL.MENU_ABBR,
			POOL.LANGAE1,
			POOL.LANGAE2,
			POOL.LANGAE3,
			POOL.BASIS_PRICE,
			POOL.CST,
			DECODE(POOL.USE_CLASS, 'Y', 1, 0) AS USE_CLASS,
			POOL.CONVERT_QUANTITY,
			POOL.EXPL,
			POOL.UNIT,
			COMM.CODE_NAME AS UNIT_NM,
			POOL.BAR_CD,
			
			POOL.MATERIAL_CD,	--자재코드
	        MATERIAL.ITEM_NAME AS MATERIAL_NM,
		
			POOL.RECP_CD,		--레시피코드
	        (SELECT RECIPE_NM  FROM   RSS_STD_RECIPE_CD_MST WHERE STD_RECIPE_CD = POOL.RECP_CD) AS RECP_NM,
			                          
			DECODE(POOL.USE_YN, 'Y', 1, 0) AS USE_YN,
	      	(SELECT WM_CONCAT(UJM.UPJANG_NM)
									FROM (
										SELECT MENU_CD AS G_CD,
						  						(SELECT SUV.UPJANGNM FROM SCO_UPJANG_MST_V SUV WHERE SUV.UPJANG = RURCM.OUTLET_CD) AS UPJANG_NM
						 				FROM SLE_OUTLET_MENU RURCM 
                    WHERE RURCM.USE_YN = 'Y'
								) UJM
                WHERE UJM.G_CD = POOL.MENU_CD
								GROUP BY UJM.G_CD) AS U_NM --사용업장 리스트
			
		FROM  SLE_MENU_POOL   POOL
		INNER JOIN SLE_MENU_CLSFI    CLASS  ON  CLASS.MENU_CLASS  = POOL.MENU_CLASS 
										   AND  CLASS.MENU_CLSFI  = '00'
										   AND  CLASS.MENU_SCLASS = '00'
		INNER JOIN SLE_MENU_CLSFI    CLSFI  ON  CLSFI.MENU_CLASS  = POOL.MENU_CLASS 
										   AND  CLSFI.MENU_CLSFI  = POOL.MENU_CLSFI
										   AND  CLSFI.MENU_SCLASS = '00'
		INNER JOIN SLE_MENU_CLSFI    SCLASS ON SCLASS.MENU_CLASS  = POOL.MENU_CLASS 
										   AND SCLASS.MENU_CLSFI  = POOL.MENU_CLSFI
										   AND SCLASS.MENU_SCLASS = POOL.MENU_SCLASS
		LEFT OUTER JOIN SCC_COMMON_CODE COMM ON  COMM.GROUP_CODE  = 'SLE_0007'
										   AND   COMM.CODE        = POOL.UNIT 
		LEFT OUTER JOIN  HLDC_PO_ITEM_MST MATERIAL ON MATERIAL.ITEM_CLASS1= 'G' AND MATERIAL.ITEM_CODE = POOL.MATERIAL_CD	
											   
		WHERE POOL.USE_YN = 'Y'
	 	<#if menuClass?has_content>   AND  POOL.MENU_CLASS   = :menuClass  </#if>
	 	<#if menuClsfi?has_content>   AND  POOL.MENU_CLSFI   = DECODE(:menuClsfi,'00', POOL.MENU_CLSFI,:menuClsfi)     </#if>
		<#if menuSclass?has_content>  AND  POOL.MENU_SCLASS  = DECODE(:menuSclass,'00',POOL.MENU_SCLASS,:menuSclass)    </#if>
		
		<#if menuCd?has_content>   	  AND   POOL.MENU_CD     = :menuCd  </#if>
		<#if menuNm?has_content>      AND   POOL.MENU_NM     LIKE '%' || :menuNm || '%' </#if>
		<#if useClass?has_content>    AND   POOL.USE_CLASS   = DECODE(:useClass, '1', 'Y', '0', 'N')  </#if>
		
 
		
		
		ORDER BY POOL.MENU_CD 

	]]></statement>

	<!--  DATA를 조회한다. -->
	<statement name="selectSameList" type="select"><![CDATA[
 
		SELECT 
		
			MENU_CD
			
		FROM  SLE_MENU_POOL   POOL
				   
		WHERE 1=1
		<#if menuNm?has_content>      AND   TRIM(POOL.MENU_NM)     = TRIM(:menuNm) </#if>
		<#if menuCd?has_content>      AND   POOL.MENU_CD     != :menuCd </#if>
		
		<#if menuClass?has_content>      AND   POOL.MENU_CLASS  = :menuClass </#if>
		<#if menuSclass?has_content>     AND   POOL.MENU_SCLASS = :menuSclass </#if>
		<#if menuClsfi?has_content>      AND   POOL.MENU_CLSFI  = :menuClsfi </#if>
		
	]]></statement>


	<!--  DATA를 저장한다. -->
	<statement name="insertData" type="insert">
		<![CDATA[
		/*+ com.hwfs.rc.sle.dao.itemPoolMgmtDAO.insertData */
	
	 INSERT INTO SLE_MENU_POOL
		(
		 	MENU_CD,
			MENU_CLASS,
			MENU_CLSFI,
			MENU_SCLASS,
			MENU_NM,
			MENU_ABBR,
			LANGAE1,
			LANGAE2,
			LANGAE3,
			BASIS_PRICE,
			CST,
			USE_CLASS,
			CONVERT_QUANTITY,
			EXPL,
			UNIT,
			BAR_CD,
			MATERIAL_CD,
			RECP_CD,
			USE_YN,
			CDATE,
			CUSER,
			UDATE,
			UUSER
			
		) VALUES (
		
		 :menuCd,
		 :menuClass,
		 :menuClsfi,
		 :menuSclass,
		 :menuNm,

		<#if menuAbbr?exists> :menuAbbr, <#else> null, </#if>
		<#if langae1?exists> :langae1, <#else> null, </#if>
		<#if langae2?exists> :langae2, <#else> null, </#if>
		<#if langae3?exists> :langae3, <#else> null, </#if>
		<#if basisPrice?exists> :basisPrice, <#else> null, </#if>
		<#if cst?exists> :cst, <#else> null, </#if>
		<#if useClass?exists> DECODE(:useClass, '1', 'Y', 'N'), <#else> null, </#if>
		<#if convertQuantity?exists> :convertQuantity, <#else> null, </#if>
		<#if expl?exists> :expl, <#else> null, </#if>
		<#if unit?exists> :unit, <#else> null, </#if>
		<#if barCd?exists> :barCd, <#else> null, </#if>
		<#if materialCd?exists> :materialCd, <#else> null, </#if>
		<#if recpCd?exists> :recpCd, <#else> null, </#if>
		<#if useYn?exists> DECODE(:useYn, '1', 'Y', 'N'), <#else> null, </#if>
		 SYSDATE,
		 :loginSabun,
		 SYSDATE,
		 :loginSabun
		)
		
		]]>
	</statement>

	<!--  DATA를 수정한다. -->
	<statement name="updateData" type="update">
	<![CDATA[
		/*+ com.hwfs.rc.sle.dao.itemPoolMgmtDAO.updateData */
		
 		UPDATE SLE_MENU_POOL SET

 		
 		<#if menuClass?exists> MENU_CLASS = :menuClass, </#if>
		<#if menuClsfi?exists> MENU_CLSFI = :menuClsfi, </#if>
		<#if menuSclass?exists> MENU_SCLASS = :menuSclass, </#if>
		<#if menuNm?exists> MENU_NM = :menuNm, </#if>

		<#if menuAbbr?exists> MENU_ABBR = :menuAbbr, </#if>
		<#if langae1?exists> LANGAE1 = :langae1, </#if>
		<#if langae2?exists> LANGAE2 = :langae2, </#if>
		<#if langae3?exists> LANGAE3 = :langae3, </#if> 
		<#if basisPrice?exists> BASIS_PRICE = :basisPrice, </#if>
		<#if cst?exists> CST = :cst, </#if>
		<#if useClass?exists> USE_CLASS = DECODE(:useClass, '1', 'Y', 'N'), </#if>
		<#if convertQuantity?exists> CONVERT_QUANTITY = :convertQuantity, </#if>
		<#if expl?exists> EXPL = :expl, </#if>
		<#if unit?exists> UNIT = :unit, </#if>
		<#if barCd?exists> BAR_CD = :barCd, </#if>
		<#if materialCd?exists> MATERIAL_CD = :materialCd, </#if>
		<#if recpCd?exists> RECP_CD = :recpCd, </#if>
		<#if useYn?exists> USE_YN = DECODE(:useYn, '1', 'Y', 'N'), </#if>
		UDATE = SYSDATE,
		UUSER = :loginSabun
		
		WHERE  MENU_CD  = :menuCd
	 
 
		]]>
	</statement>

	<!--  DATA를 수정한다. -->
	<statement name="deleteData" type="delete"><![CDATA[	
		DELETE SLE_MENU_POOL
 		 WHERE MENU_CD = :menuCd
 
		]]></statement>

	<!--  코드를 생성한다. -->
	<statement name="maxCodeCreate" type="select">
	<![CDATA[
		/*+ com.hwfs.rc.sle.dao.itemPoolMgmtDAO.maxCodeCreate */
		
		 
		SELECT '1' || LPAD(NVL(MAX(TO_NUMBER(SUBSTR(MENU_CD,2,6))),'0') + 1,'6','0') AS MAX_CODE
 		FROM  SLE_MENU_POOL
 		WHERE SUBSTR(MENU_CD,1,1) <> 'G'
 
		]]>
	</statement>


	<statement name="selectNewFmItem"><![CDATA[SELECT A.ITEM_CODE AS MENU_CD,
       'S' AS MENU_CLASS,
       '80' AS MENU_CLSFI,
       '10' AS MENU_SCLASS,
       '상품' as MENU_CLASS_NM,
       '미분류' as MENU_CLSFI_NM, 
       '미분류' as MENU_SCLASS_NM,
       A.ITEM_NAME AS MENU_NM,
       A.ITEM_NAME AS MENU_ABBR,
       '' as LANGAE1,
       '' as LANGAE2,
       '' as LANGAE3,
       0 AS BASIS_PRICE,
       0 AS CST,
       '1' AS USE_CLASS,
       A.UOM_CONVERT_RATE AS CONVERT_QUANTITY,
       '' as EXPL,
       '' AS UNIT,
       '' AS UNIT_NM,
       A.BARCODE AS BAR_CD,
       A.ITEM_CODE AS MATERIAL_CD,
       A.ITEM_NAME  AS MATERIAL_NM,
       '' AS RECP_CD,
       '' AS RECP_NM,
       '1' AS USE_YN
  FROM HLDC_PO_ITEM_MST A,
       (
        SELECT DISTINCT ITEM_CODE
          FROM HLDC_PO_TRANSACTION 
         WHERE TRANS_TYPE LIKE 'I%'
           AND TRANS_MU_CD = '2002'
           AND TRANS_DATE BETWEEN SUBSTR(TO_CHAR(SYSDATE-60,'YYYYMMDD'),1,6) || '01' AND TO_CHAR(SYSDATE,'YYYYMMDD')
           AND SUBINV_CODE IN (
                        SELECT SUBINV_CODE
                          FROM HLDC_PO_SUBINVENTORY 
                         WHERE MATERIAL_ACCTCD = '11401020' 
                         )    
           AND TRANS_UPJANG IN (SELECT OUTLET_CD FROM SLE_OUTLET_MST WHERE OUTLET_TYPE = 'FM')
         MINUS
         SELECT DISTINCT A.MENU_CD 
           FROM SLE_MENU_POOL A
          WHERE A.MATERIAL_CD LIKE 'G%' OR A.MENU_CD LIKE 'G%'
       ) B
  WHERE A.ITEM_CODE = B.ITEM_CODE
  AND A.ITEM_CODE LIKE 'G%']]>
  </statement>
  
	<statement name="updateMenuData"><![CDATA[ 	UPDATE SLE_OUTLET_MENU SET
		<#if menuClass?exists>			MENU_CLASS = :menuClass, </#if>
		<#if menuClsfi?exists>			MENU_CLSFI = :menuClsfi, </#if>
		<#if menuSclass?exists>			MENU_SCLASS = :menuSclass, </#if>
		<#if menuNm?exists> 			MENU_NM = :menuNm, </#if>
		<#if menuAbbr?exists> 			MENU_ABBR = :menuAbbr, </#if>
		<#if langae1?exists> 			LANGAE1 = :langae1, </#if>
		<#if langae2?exists> 			LANGAE2 = :langae2, </#if>
		<#if langae3?exists> 			LANGAE3 = :langae3, </#if>
		<#if basisPrice?exists> 		BASIS_PRICE = :basisPrice, </#if>
		<#if cst?exists> 				CST = :cst, </#if>
		<#if useClass?exists> 			USE_CLASS = DECODE(:useClass, '1', 'Y', 'N'), </#if>
		<#if convertQuantity?exists> 	CONVERT_QUANTITY = :convertQuantity, </#if>
		<#if expl?exists> 				EXPL = :expl, </#if>
		<#if unit?exists> 				UNIT = :unit, </#if>
		<#if dpstCd?exists> 			DPST_CD = :dpstCd, </#if>
		<#if upriceChgPossYn?exists> 	UPRICE_CHG_POSS_YN = DECODE(:upriceChgPossYn, '1', 'Y', 'N'), </#if>
		<#if sesnApplyYn?exists> 		SESN_APPLY_YN = :sesnApplyYn, </#if>
		<#if materialCd?exists> 		MATERIAL_CD = :materialCd, </#if>
		<#if recpCd?exists> 			RECP_CD = :recpCd, </#if>
								       	UDATE = SYSDATE,
								       	UUSER = :loginSabun
		WHERE  MENU_CD   = :menuCd]]></statement>
	<statement name="deleteMenuData"><![CDATA[		DELETE SLE_OUTLET_MENU
 		 WHERE MENU_CD = :menuCd]]></statement>
	<statement name="deleteDataBarCd"><![CDATA[		
	--DELETE SLE_OUTLET_BARCD_MST
	UPDATE  SLE_OUTLET_BARCD_MST SET USE_CLASS = 'N' 
		WHERE  MENU_CD = :menuCd]]></statement>
</hqml>
