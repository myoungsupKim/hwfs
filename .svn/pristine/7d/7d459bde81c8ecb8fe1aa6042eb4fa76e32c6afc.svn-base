<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="fm.fms.smallOrderCtrlMgntDAO">
	<desc>소액발주 통제관리HQML Query</desc>

	<!-- 창고별 통제 내용 조회 -->
	<statement name="selectList" type="select">
		<![CDATA[
		/*+ com.hwfs.fm.fms.dao.SmallOrderCtrlDAO.selectList */
		SELECT
		    0 AS CHK
		    , B.DEPT_ID
		    , SCC_GET_TM_BY_UPJANG('CODE', A.UPJANG) AS TM_CD
		    , SCC_GET_TM_BY_UPJANG('NAME', A.UPJANG) AS TM_NM
		    , B.MAIN_UPJANG
		    , (SELECT UPJANGNM_DISP FROM FMS_UPJANG WHERE UPJANG = B.MAIN_UPJANG) AS MAIN_UPJANGNM
		    , A.UPJANG
		    , B.UPJANGNM_DISP AS UPJANGNM
		    , A.SUBINV_CODE
		    , A.SUBINV_NAME_DISP
		    , A.CONTROL_YN
		    , NVL(A.CONTROL_AMT, 0) AS CONTROL_AMT
		    , A.CONTROL_SD
		    , A.CONTROL_ED
		    , A.CONTROL_UUSER
		    , (SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = A.CONTROL_UUSER) AS CONTROL_UUSERNM 
		    , A.CONTROL_UDATE
		FROM FMS_SUBINVENTORY A
			, FMS_UPJANG B
		WHERE A.UPJANG = B.UPJANG
		<#if schTm?has_content>
		AND B.DEPT_ID IN (
			SELECT DEPT_ID 
			FROM HLDC_SC_DEPT_V 
			WHERE TM_CD = :schTm
		)	
		</#if>
		<#if schMainUpjang?has_content>
		AND B.MAIN_UPJANG = :schMainUpjang
		</#if>
		<#if schUpjang?has_content>
		AND A.UPJANG = :schUpjang
		</#if>
		<#if schSubinv?has_content>
		AND A.SUBINV_CODE = :schSubinv
		</#if>
		<#if schCtrlYn?has_content>
		AND A.CONTROL_YN = :schCtrlYn
		</#if>
		]]>
	</statement>
	
	<!-- 창고별 통제 내용 저장 -->
	<statement name="update" type="update">
	<![CDATA[
		/*+ com.hwfs.fm.fms.dao.SmallOrderCtrlDAO.update */
		UPDATE FMS_SUBINVENTORY 
		SET    CONTROL_YN = :controlYn,
		       CONTROL_AMT = NVL(:controlAmt, 0),
		       CONTROL_SD = :controlSd,
		       CONTROL_ED = :controlEd,
		       CONTROL_UUSER = :loginSabun,
		       CONTROL_UDATE = SYSDATE
		WHERE  SUBINV_CODE = :subinvCode
	]]>
	</statement>
	
	
	<!-- 창고별 통제 내용 조회 -->
	<statement name="selectCtrlList" type="select">
		<![CDATA[
		/*+ com.hwfs.fm.fms.dao.SmallOrderCtrlDAO.selectCtrlList */
		SELECT RC_UPJANG
        , SUBINV_CODE
        , NVL(ROUND(SUM(PO_AMT)), 0) AS SUBINV_AMT
        , NVL(ROUND(DECODE(CONTROL_YN, 'Y'
                        , (SUM(PO_AMT) + SUM(NON_CRTL_AMT))
                        , SUM(PO_AMT) 
                        )), 0) AS PO_AMT
        , NVL(CONTROL_AMT, 0) AS CONTROL_AMT
        , CONTROL_YN 
        , NVL(ROUND(SUM(NON_CRTL_AMT)), 0) AS NON_CTRL_AMT
        --, CASE WHEN CONTROL_AMT < DECODE(CONTROL_YN, 'Y', (SUM(PO_AMT)+SUM(NON_CRTL_AMT)), SUM(PO_AMT)) THEN 'Y'
        --  ELSE 'N' END AS CHK_SAVE
        , CASE WHEN CONTROL_YN = 'N' THEN 'Y'
        	   WHEN CONTROL_YN = 'Y' AND (CONTROL_AMT > NVL(SUM(PO_AMT),0)+NVL(SUM(NON_CRTL_AMT),0)) THEN 'N'
        	   ELSE 'Y' END AS CHK_SAVE
        FROM (
                SELECT A.UPJANG AS RC_UPJANG
                       , A.SUBINV_CODE
                       , (DECODE(C.TAX_CODE,'100',1.1,1) 
                            * (C.CENTER_DELI_QTY + C.DIRECT_DELI_QTY - C.DELIVERED_QTY - C.UNDELIVERED_QTY) 
                            * C.SAL_OPER_PRICE) AS PO_AMT
                       , NVL(A.CONTROL_AMT, 0) AS CONTROL_AMT
                       --, A.CONTROL_YN
                       , CASE WHEN A.CONTROL_SD <= :needDate AND A.CONTROL_ED >= :needDate THEN 'Y'
                         ELSE 'N' END AS CONTROL_YN
                       , NVL(D.NON_CRTL_AMT, 0) AS NON_CRTL_AMT
                       , FMS_PREORDER_FUN(C.CENTER_CODE,C.ITEM_CODE,'D_DAYS') AS D_DAYS
                       FROM FMS_SUBINVENTORY A
                            , FMS_UPJANG B
                            ,  HLDC_PO_PO C
                            , ( SELECT X.UPJANG 
                                    
                                        , NVL(SUM(DECODE(Y.TAX_CODE,'100',1.1,1) 
                                                * (Y.CENTER_DELI_QTY + Y.DIRECT_DELI_QTY - Y.DELIVERED_QTY - Y.UNDELIVERED_QTY) 
                                                * Y.SAL_OPER_PRICE), 0) AS NON_CRTL_AMT
                                    
                                        FROM FMS_SUBINVENTORY X, HLDC_PO_PO Y
                                        WHERE X.SUBINV_CODE = Y.SUBINV_CODE(+)
                                        AND X.UPJANG = Y.RC_UPJANG(+)
                                        AND X.UPJANG = :upjang
                                        AND (
                                        		NVL(X.CONTROL_YN, 'N') = 'N'
                                        		OR ( NOT :needDate BETWEEN X.CONTROL_SD AND X.CONTROL_ED )
                                        	)
                                        AND Y.LINE_STATUS(+)  = 'PC'
                                        AND Y.NEED_DATE(+) = :needDate
                                        AND FMS_PREORDER_FUN(Y.CENTER_CODE,Y.ITEM_CODE,'D_DAYS') <= 1
                                        GROUP BY X.UPJANG
                        ) D    
                WHERE A.UPJANG = C.RC_UPJANG(+)
                AND A.UPJANG = B.UPJANG
       			AND	A.UPJANG = :upjang
                AND A.SUBINV_CODE = C.SUBINV_CODE(+)
                AND A.UPJANG = D.UPJANG(+)
                AND C.NEED_DATE(+) = :needDate
                --AND FMS_PREORDER_FUN(C.CENTER_CODE,C.ITEM_CODE,'D_DAYS') <= 1
                AND C.LINE_STATUS(+)  = 'PC'
            ) 
            GROUP BY RC_UPJANG, SUBINV_CODE, CONTROL_AMT, CONTROL_YN
		]]>
	</statement>

</hqml>
