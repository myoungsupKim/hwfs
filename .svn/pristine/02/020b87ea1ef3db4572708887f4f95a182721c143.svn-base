<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="fm.fmp.salsWhStModifyDAO">
	<desc>매출창고 강제변경 HQML Query</desc>

	<!-- 매출창고 강제 변경 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.fm.fmp.dao.SalsWhStModifyDAO.selectList */
		<![CDATA[
SELECT '0' AS CHK
     , A.TRANS_ID
     , A.TRANS_DATE
     , A.TRANS_DATE AS NEED_DATE
     , A.GANO   /* 전표화여부 */
     , A.SUBINV_CODE
     , A.ITEM_CODE
     , A.ITEM_NAME
     , A.ITEM_SIZE
     , A.TAX_CODE      -- 100:과세, 210:면세
     , DECODE(A.TAX_CODE, '100', '과세', '210', '면세', '') AS TAX_NAME      -- 100:과세, 210:면세
     , A.TRANS_UOM
     , A.SALE_PRICE
     , A.SALE_AMOUNT
     , (DECODE(A.TAX_CODE, '100', 1.1, 1) * A.SALE_AMOUNT) AS SALE_AMT
     , A.TRANS_QTY
     , A.PO_NO
     , A.PO_LNO
     , A.SOURCE_ID
     , A.TRANS_DEPT_ID
     , A.MG_DATE
     , CASE WHEN EXISTS (
                         SELECT 1
                           FROM FMS_SALES
                          WHERE TRANS_YN = 'Y'
                            AND RECD_STATUS = 'L'
                            AND SALE_DATE = A.MG_DATE
                            AND UPJANG = A.TRANS_UPJANG
                            AND SUBINV_CODE = :subinv
                        ) THEN 'N'
            ELSE
                /*구매전표화가 되도 현지구매 카드결제건은 창고변경이 가능해야함 -요청:문형광*/
                --DECODE(A.GANO, 'N', 'Y', 'N')
                DECODE(A.GANO, 'N', 'Y', DECODE(A.CARD_PO_YN,'Y','Y','N'))
       END AS FMS_SALE_YN
     , CASE WHEN EXISTS (
                         SELECT 1
                           FROM FMS_SALES
                          WHERE TRANS_YN = 'Y'
                            AND RECD_STATUS = 'L'
                            AND SALE_DATE = A.MG_DATE
                            AND UPJANG = A.TRANS_UPJANG
                            AND SUBINV_CODE = :subinv
                        ) THEN '식재 일마감'
            ELSE
            	/*구매전표화가 되도 현지구매 카드결제건은 창고변경이 가능해야함 -요청:문형광*/
                --DECODE(A.GANO, 'Y', '구매 전표화', '')
                DECODE(A.GANO, 'N', ' ', DECODE(A.CARD_PO_YN,'Y',' ','구매전표화'))
       END AS FMS_SALE_DESC
  FROM HLDC_PO_TRANSACTION_SALE A
 WHERE 1 = 1
   AND A.TRANS_UPJANG = :upjang
   AND A.SUBINV_CODE = :subinv
   AND A.TRANS_TYPE IN ('I001','I002')
   AND A.TRANS_DATE BETWEEN :fromDay AND :toDay
   --DEPT_ID를 변경한 업장의 겨우 매출창고 강제변경시 조회를 못해와서 주석처리
   --AND A.TRANS_DEPT_ID IN (SELECT DEPT_ID FROM ST_UPJANG WHERE UPJANG = :upjang)
   <#if tax?has_content>    AND A.TAX_CODE = :tax</#if>
ORDER BY A.TRANS_DATE
]]>
	</statement>

	<!-- 창고별 일괄 저장한다. -->
	<statement name="modifyList" type="update">
		/*+ com.hwfs.fm.fmp.dao.SalsWhStModifyDAO.modifyList */
		<![CDATA[
UPDATE EPROCUSR.ESISALP
   SET CUST_GR_DATE = :needDate /* 변경입고일 */
     , SHOP_CD      = :upjangChg /* 변경업장 */
     , CUST_WH_CD   = :subinvCodeChg    /* 변경창고코드 */
     , SHOP_CHNG_YN = 'Y'
     , MOD_ID       = :loginSabun
     , MOD_DT       = TO_CHAR(SYSDATE,'yyyymmddhh24miss')
 WHERE SYS_ID       = '100'
   AND COMP_CD      = 'HFC'
   AND MG_NO        = :transId
]]>
	</statement>

	<!-- 창고별 일괄 저장한다. -->
	<statement name="modifyList2" type="update">
		/*+ com.hwfs.fm.fmp.dao.SalsWhStModifyDAO.modifyList2 */
		<![CDATA[
UPDATE EPROCUSR.ESPPODTSAL
   SET CUST_GR_DATE = :needDate /* 변경입고일 */
     , SHOP_CD      = :upjangChg /* 변경업장 */
     , WH_CD        = :subinvCodeChg    /* 변경창고코드 */
     , SHOP_CHNG_YN = 'Y'
     , MOD_ID       = :loginSabun
     , MOD_DT       = TO_CHAR(SYSDATE,'yyyymmddhh24miss')
 WHERE SYS_ID       = '100'
   AND COMP_CD      = 'HFC'
   AND PO_NO        = :poNo
   AND PO_LNO       = :poLno
]]>
	</statement>

	<!-- 창고별 일괄 저장한다. -->
	<statement name="modifyList3" type="update">
		/*+ com.hwfs.fm.fmp.dao.SalsWhStModifyDAO.modifyList3 */
		<![CDATA[
UPDATE SO_PR
   SET NEED_DATE    = :needDate /* 변경입고일 */
     , RC_UPJANG    = :upjangChg /* 변경업장 */
     , SUBINV_CODE  = :subinvCodeChg    /* 변경창고코드 */
     , UPDATE_BY    = :loginSabun
     , UPDATE_DATE  = SYSDATE
 WHERE PR_ID        = :sourceId
]]>
	</statement>

	<!-- 사업장 창고 정보 조회 -->
	<statement name="selectUpjangWh" type="select">
		/*+ com.hwfs.fm.fmp.dao.SalsWhStModifyDAO.selectUpjangWh */
		<![CDATA[
SELECT 
       A.SUBINV_CODE
     , A.SUBINV_NAME_DISP
     , A.CONSUM_YN
  FROM FMS_SUBINVENTORY A
 WHERE A.UPJANG = :upjang
 AND EXISTS (SELECT 1
             FROM HLDC_PO_SUBINVENTORY B
             WHERE B.SUBINV_CODE = A.SUBINV_CODE
             AND  B.USE_YN = 'Y'
             )
]]>
	</statement>

	<!-- 변경후 창고 정보 조회 -->
	<statement name="selectUpjangWhChg" type="select">
		/*+ com.hwfs.fm.fmp.dao.SalsWhStModifyDAO.selectUpjangWhChg */
		<![CDATA[
SELECT A.SUBINV_CODE
     , A.UPJANG
     , A.SUBINV_NAME_DISP
     , A.CONSUM_YN
     , FMS_GET_CREDIT_FUN(A.UPJANG, 'N') AS CREDIT_RMN_AMT
     , (SELECT X.UPJANGNM_DISP FROM FMS_UPJANG X WHERE X.UPJANG = A.UPJANG ) AS UPJANG_NM     
  FROM FMS_SUBINVENTORY A
 WHERE UPJANG IN (SELECT UPJANG
                    FROM ST_UPJANG
                   WHERE CC_CD IN (SELECT CC_CD
                                     FROM ST_UPJANG
                                    WHERE UPJANG = (SELECT UPJANG
                                                      FROM FMS_SUBINVENTORY
                                                     WHERE SUBINV_CODE = :subinvCode)
                                   )
                 )
	AND EXISTS (SELECT 1
                  FROM HLDC_PO_SUBINVENTORY B
                 WHERE B.SUBINV_CODE = A.SUBINV_CODE
                   AND  B.USE_YN = 'Y'
             )                 
<#if edtSearchCode?has_content>    AND A.SUBINV_CODE = :edtSearchCode</#if>
<#if edtSearch?has_content>    AND A.SUBINV_NAME_DISP LIKE '%' || :edtSearch || '%'</#if>
]]>
	</statement>


	<!-- 사업장 여신 정보 조회 -->
	<statement name="selectUpjangCredit" type="select">
		<![CDATA[
	/*+ com.hwfs.fm.fmp.dao.SalsWhStModifyDAO.selectUpjangCredit */ 
	SELECT 
		:upjangChg AS UPJANG
		, FMS_GET_CREDIT_FUN(:upjangChg, 'N') AS CREDIT_AMT
		, :saleSum AS SALE_SUM
		, CASE WHEN ( FMS_GET_CREDIT_FUN(:upjangChg, 'N') < :saleSum ) THEN '0'
			   ELSE '1' END AS CHK_ABLE
		FROM DUAL
	]]>
	</statement>
	<statement name="insertHistory"><![CDATA[
        INSERT INTO FMS_CREDIT_SUM_SUBINV_HISTORY
        (
         PR_ID
		,TRANS_UPJANG
		,BEF_SUBINV_CODE
		,AFT_SUBINV_CODE
		,TRANS_DATE
		,NEED_DATE
		,MG_DATE
		,ITEM_CODE
		,SALE_PRICE
		,TRANS_QTY
		,SALE_AMOUNT
		,UUSER
		,UDATE
        
        ) VALUES (
        :sourceId,
	    :upjang,
	    :subinv,
	    :subinvCodeChg,
	    :transDate,
	    :needDate,
	    :mgDate,
	    :itemCode,
	    :salePrice,
	    :transQty,
	    :saleAmount,
	    :loginSabun,
         SYSDATE
        )

        ]]></statement>
</hqml>
