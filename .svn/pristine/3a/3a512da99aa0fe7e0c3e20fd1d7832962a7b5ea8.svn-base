<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[기간별 손익분석(본부, 본사, 사업장담당자(사업장선택시))]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
SELECT LINE_ID, SORT_SEQ, LINE_NAME,
       SUM(PRE_ACT_AMT) AS PRE_ACT_AMT, -- 전년실적(경영실적)
       ROUND(DECODE(SUM(PRE_ACT_DENOMINATOR_AMT), 0, 0, (SUM(PRE_ACT_NUMERATOR_AMT) / SUM(PRE_ACT_DENOMINATOR_AMT)) * 100 ), 1) AS PRE_ACT_PER, -- 전년실적(구성비)
       SUM(EXP_AMT) AS EXP_AMT, -- 기간계획(경영예상)
       ROUND(DECODE(SUM(EXP_DENOMINATOR_AMT), 0, 0, (SUM(EXP_NUMERATOR_AMT) / SUM(EXP_DENOMINATOR_AMT)) * 100 ), 1) AS EXP_PER, -- 기간계획(구성비)
       SUM(ACT_AMT) AS ACT_AMT, -- 기간실적(경영실적)
       ROUND(DECODE(SUM(ACT_DENOMINATOR_AMT), 0, 0, (SUM(ACT_NUMERATOR_AMT) / SUM(ACT_DENOMINATOR_AMT)) * 100 ), 1) AS ACT_PER -- 기간실적(구성비)
  FROM (
        SELECT T1.MAIN_UPJANG, T1.UPJANG, T1.LINE_ID, T1.SORT_SEQ, T1.LINE_NAME, T1.NUMERATOR, T1.DENOMINATOR,
               -- 전년실적 ----
               FMO_PL_LINE_FUN(T1.MAIN_UPJANG, T1.UPJANG, T1.LINE_ID, TO_CHAR(ADD_MONTHS(TO_DATE(#FROM_DATE# || '01', 'YYYYMMDD'), -12), 'RRRRMM'), TO_CHAR(ADD_MONTHS(TO_DATE(#TO_DATE# || '01', 'YYYYMMDD'), -12), 'RRRRMM'), '1') AS PRE_ACT_AMT,												
               DECODE( T1.NUMERATOR, NULL, 0, FMO_PL_LINE_FUN(T1.MAIN_UPJANG, T1.UPJANG, T1.NUMERATOR, TO_CHAR(ADD_MONTHS(TO_DATE(#FROM_DATE# || '01', 'YYYYMMDD'), -12), 'RRRRMM'), TO_CHAR(ADD_MONTHS(TO_DATE(#TO_DATE# || '01', 'YYYYMMDD'), -12), 'RRRRMM'), '1')) AS PRE_ACT_NUMERATOR_AMT,			
               DECODE( T1.DENOMINATOR, NULL, 0, FMO_PL_LINE_FUN(T1.MAIN_UPJANG, T1.UPJANG, T1.DENOMINATOR, TO_CHAR(ADD_MONTHS(TO_DATE(#FROM_DATE# || '01', 'YYYYMMDD'), -12), 'RRRRMM'), TO_CHAR(ADD_MONTHS(TO_DATE(#TO_DATE# || '01', 'YYYYMMDD'), -12), 'RRRRMM'), '1')) AS PRE_ACT_DENOMINATOR_AMT,
               -- 기간계획 ----
               FMO_PL_LINE_FUN(T1.MAIN_UPJANG, T1.UPJANG, T1.LINE_ID, #FROM_DATE#, #TO_DATE#, '0') AS EXP_AMT,												
               DECODE( T1.NUMERATOR, NULL, 0, FMO_PL_LINE_FUN(T1.MAIN_UPJANG, T1.UPJANG, T1.NUMERATOR, #FROM_DATE#, #TO_DATE#, '0')) AS EXP_NUMERATOR_AMT,			
               DECODE( T1.DENOMINATOR, NULL, 0, FMO_PL_LINE_FUN(T1.MAIN_UPJANG, T1.UPJANG, T1.DENOMINATOR, #FROM_DATE#, #TO_DATE#, '0')) AS EXP_DENOMINATOR_AMT,
               -- 기간실적 ----
               FMO_PL_LINE_FUN(T1.MAIN_UPJANG, T1.UPJANG, T1.LINE_ID, #FROM_DATE#, #TO_DATE#, '1') AS ACT_AMT,												
               DECODE( T1.NUMERATOR, NULL, 0, FMO_PL_LINE_FUN(T1.MAIN_UPJANG, T1.UPJANG, T1.NUMERATOR, #FROM_DATE#, #TO_DATE#, '1')) AS ACT_NUMERATOR_AMT,			
               DECODE( T1.DENOMINATOR, NULL, 0, FMO_PL_LINE_FUN(T1.MAIN_UPJANG, T1.UPJANG, T1.DENOMINATOR, #FROM_DATE#, #TO_DATE#, '1')) AS ACT_DENOMINATOR_AMT
         FROM (SELECT A.MAIN_UPJANG, B.UPJANG, A.LINE_ID, A.SORT_SEQ, A.LINE_NAME, A.NUMERATOR, A.DENOMINATOR
                 FROM (SELECT UPJANG AS MAIN_UPJANG, LINE_ID, SORT_SEQ, LINE_NAME, NUMERATOR, DENOMINATOR
                         FROM FMO_PL_LINE
                        WHERE UPJANG = #MAIN_UPJANG# -- 본사 코드(필수 검색조건)
                        ORDER BY SORT_SEQ) A, FMS_UPJANG B
                WHERE A.MAIN_UPJANG = B.MAIN_UPJANG
                 <isNotNull col="UPJANG">
                  AND B.UPJANG = #UPJANG# -- 업장 코드(선택 검색조건)
                 </isNotNull>
                ORDER BY A.MAIN_UPJANG, B.UPJANG, A.SORT_SEQ) T1
        GROUP BY T1.MAIN_UPJANG, T1.UPJANG, T1.LINE_ID, T1.SORT_SEQ, T1.LINE_NAME, T1.NUMERATOR, T1.DENOMINATOR)
 GROUP BY LINE_ID, SORT_SEQ, LINE_NAME
 ORDER BY SORT_SEQ	</statement>
	<input default-name="ds_Input">
	</input>
	<output default-name="ds_List">
	</output>
</query>
