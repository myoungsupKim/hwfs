<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">

	<import resource="../abstractBase/batchBase.xml" />
	<!--*****************************************************************************
			Job에 대한 상세한 설명을 여기에 표현한다. (주요 처리 내용)
		*****************************************************************************-->

	<job id="fixedLengthToFixedLengthJob" parent="batchBaseJob"
		xmlns="http://www.springframework.org/schema/batch">
		<description>한글이 포함되지 않은 파일로 부터 고정 길이의 데이터를 읽어 고정 길이의 Output 파일을 생성한다.</description>
		<step id="fixedLengthToFixedLengthStep" parent="batchBaseStep">
			<tasklet>
				<chunk reader="fixedLengthToFixedLengthJob.fixedLengthToFixedLengthStep.fixedLengthItemReader"
					processor="fixedLengthToFixedLengthJob.fixedLengthToFixedLengthStep.itemProcessor" 
					writer="fixedLengthToFixedLengthJob.fixedLengthToFixedLengthStep.formatItemWriter"
					commit-interval="10" />
			</tasklet>
		</step>
	</job>

	<bean id="fixedLengthToFixedLengthJob.fixedLengthToFixedLengthStep.fixedLengthItemReader"
		class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource" value="#{jobParameters[inputFile]}" />
		<property name="lineMapper">
			<bean
				class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
						<property name="names" value="name,credit" />
						<property name="columns" value="6-15,16-17" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="targetType" value="com.hwfs.batch.guide.sample.dto.CustomerCreditDTO" />
					</bean>
				</property>				
			</bean>
		</property>
	</bean>

	<bean id="fixedLengthToFixedLengthJob.fixedLengthToFixedLengthStep.formatItemWriter"
		class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property name="resource" value="#{jobParameters[outputFile]}" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.FormatterLineAggregator">
				<property name="fieldExtractor">
					<bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="name,credit" />
					</bean>
				</property>
				<property name="format" value="%-10s%-2.0f" />
			</bean>
		</property>
	</bean>

	<bean id="fixedLengthToFixedLengthJob.fixedLengthToFixedLengthStep.itemProcessor"
		class="com.hwfs.batch.guide.sample.CustomerCreditProcessor" />

</beans>
