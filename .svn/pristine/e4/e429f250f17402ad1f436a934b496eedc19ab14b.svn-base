<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[사업장식단검색]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
<isNotNull col="TOPCNT">
     SELECT * FROM (
</isNotNull>
SELECT A.UPJANG
      ,A.MENU_CD
      ,SUM(PAST_PRICE) AS PAST_PRICE --과거원가
      ,SUM(CUR_PRICE) AS CUR_PRICE --현재원가
      ,FMM_RECIPENAME_FUN(A.UPJANG, A.MENU_CD,'1') AS RECIPE_INFO --구성
      ,A.MENU_DATE       --제공일
      ,A.WDESC           --날씨
      ,A.SUBINV_CODE         --식당코드
      ,A.MEAL            --끼니코드
      ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0023' AND CODE = A.MEAL) MEAL_NAME --끼니명
      ,A.CORNER          --코너코드
      ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0022' AND CODE = A.CORNER) CORNER_NAME --코너명
      ,0 AS CHK          --선택
      ,A.UPJANG ||  A.MENU_CD AS MENU_ID --코너코드
  FROM
       (
                SELECT A.UPJANG, A.MENU_CD, A.MENU_DATE, A.SUBINV_CODE, A.MEAL, A.CORNER, D.WDESC, C.ITEM_CODE, C.NEED_QTY,
               NVL(ROUND((C.NEED_QTY * NVL((C.OP_PRICE / F.KG_CONVERT_RATE / 1000),0))),0) AS PAST_PRICE,
               NVL(ROUND((C.NEED_QTY * NVL((E.OP_PRICE / F.KG_CONVERT_RATE / 1000),0))),0) AS CUR_PRICE
          FROM
               FMM_MENU A
              ,FMM_RECIPE B
              ,FMM_RECIPE_ITEM C
              ,(
                SELECT B.UPJANG, A.CUR_DATE, A.WDESC
                  FROM UPOS_SC_WEATHER_INFO_V A,
                       SCO_UPJANG_MST B
                 WHERE A.AREA_CODE = B.LOC_CD
               ) D
              ,(
            SELECT A.UPJANG, A.ITEM_CODE
                 , A.UNIT_PRICE, A.SALE_PRICE
                 , DECODE(SIGN(NVL(C.OP_PRICE,0)),0, SCC_CEIL(A.SALE_PRICE + ROUND(A.SALE_PRICE * NVL(C.OP_RATE,0) / 100),C.CEIL_VAL), C.OP_PRICE) AS OP_PRICE
              FROM FMU_OP_RATE C
                 ,(SELECT #UPJANG# AS UPJANG, NVL('',TO_CHAR(SYSDATE,'YYYYMMDD')) AS NEED_DATE
                        , A.ITEM_CODE, A.CONTRACT_PRICE AS UNIT_PRICE, A.SALE_PRICE
                     FROM HLDC_PO_CONTRACT_FSALE A
                        ,(SELECT CENTER_CODE, UPJANG, ITEM_CODE, MAX(CONTRACT_START) AS CONTRACT_START
                            FROM HLDC_PO_CONTRACT_FSALE
                           WHERE CENTER_CODE = (SELECT A.CENTER_CODE FROM HLDC_PO_UPJANG_CENTER A, HLDC_ST_UPJANG B WHERE A.UPJANG = B.AP_UNITPRICE_UPJANG AND B.UPJANG = #UPJANG#)
                             AND UPJANG = (SELECT AP_UNITPRICE_UPJANG FROM HLDC_ST_UPJANG WHERE UPJANG = #UPJANG#)
                             AND ITEM_CODE > ' '
                             AND CONTRACT_START &lt;= NVL('',TO_CHAR(SYSDATE,'YYYYMMDD'))
                           GROUP BY CENTER_CODE, UPJANG, ITEM_CODE) B
                    WHERE A.CENTER_CODE = B.CENTER_CODE
                      AND A.UPJANG = B.UPJANG
                      AND A.ITEM_CODE = B.ITEM_CODE
                      AND A.CONTRACT_START = B.CONTRACT_START
                      AND A.SALE_PRICE > 0
                      AND A.USE_YN = 'Y'
                      AND EXISTS (SELECT 1 FROM HLDC_PO_TREAT_UPJANG X WHERE X.ITEM_CODE = A.ITEM_CODE AND X.UPJANG = A.UPJANG)
                   -----------
                    UNION ALL
                   -----------
                   SELECT #UPJANG# AS UPJANG, NVL('',TO_CHAR(SYSDATE,'YYYYMMDD')) AS NEED_DATE
                        , A.ITEM_CODE, A.UNIT_PRICE, A.SALE_PRICE
                     FROM FMP_OTCUST_PRICE_AVA_V A
                        ,(SELECT UPJANG, ITEM_CODE, MAX(SDATE) AS SDATE
                            FROM FMP_OTCUST_PRICE_AVA_V
                           WHERE UPJANG = (SELECT OTCUST_PRICE_UPJANG FROM FMS_UPJANG WHERE UPJANG = #UPJANG#)
                             AND SDATE &lt;= NVL('',TO_CHAR(SYSDATE,'YYYYMMDD'))
                           GROUP BY UPJANG, ITEM_CODE) B
                    WHERE A.UPJANG = B.UPJANG
                      AND A.SDATE = B.SDATE
                      AND A.ITEM_CODE = B.ITEM_CODE
                      AND A.SALE_PRICE > 0
                      AND A.USE_YN = 'Y'
                  ) A
             WHERE A.UPJANG = C.UPJANG(+)
               AND A.NEED_DATE BETWEEN C.SDATE(+) AND C.EDATE(+)
               AND A.ITEM_CODE BETWEEN C.ITEM_CODE(+) AND C.ITEM_CODE(+)||'9999'
               AND C.USE_YN(+) = 'Y'
         ) E
              ,FMS_ITEM_V F
         WHERE A.UPJANG = B.UPJANG
           AND A.MENU_CD = B.MENU_CD
           AND B.UPJANG = C.UPJANG
           AND B.MENU_CD = C.MENU_CD
           AND B.RECIPE_CD = C.RECIPE_CD
           AND A.UPJANG = D.UPJANG(+)
           AND A.MENU_DATE = D.CUR_DATE(+)
           AND C.ITEM_CODE = E.ITEM_CODE(+)
           AND C.ITEM_CODE = F.ITEM_CODE
           AND A.UPJANG = #UPJANG#        --사업장
           AND A.SUBINV_CODE = #SUBINV_CODE#      --식당코드
           AND A.MENU_DATE BETWEEN #MENU_F_DATE1# AND #MENU_T_DATE1# --기간
<isNotNull col="MEAL1">
           AND A.MEAL = #MEAL1#     --끼니
</isNotNull>
<isNotNull col="CORNER1">
           AND A.CORNER = #CORNER1#    --코너
</isNotNull>
<isNotNull col="RECIPE_NAME1">
           AND B.RECIPE_NAME LIKE '%' || #RECIPE_NAME1# || '%'
</isNotNull>
       ) A
 GROUP BY A.UPJANG
         ,A.MENU_CD
         ,A.MENU_DATE
         ,A.SUBINV_CODE
         ,A.MEAL
         ,A.CORNER
         ,A.WDESC
<isNotNull col="TOPCNT">
ORDER BY A.MENU_DATE,A.MEAL,A.CORNER
     )
 WHERE ROWNUM &lt;= #TOPCNT#
</isNotNull>	</statement>
	<input default-name="ds_input">
	</input>
	<output default-name="ds_Master">
	</output>
</query>
