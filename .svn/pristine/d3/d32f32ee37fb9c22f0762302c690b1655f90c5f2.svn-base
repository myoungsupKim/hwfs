<?xml version="1.0" encoding="euc-kr"?>
<query>
	<type>insert</type>
	<description><![CDATA[--레시피검색및 등록-자재등록]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>0</result-count>
	<statement>
<![CDATA[
INSERT INTO FSM_REAL_RECIPE_ITEM( 
	 UPJANG
	, MENU_CD
	, RECIPE_CD
	, ITEM_CODE
	, ITEM_SEQ
	, NEED_QTY
	, EDIBLE_QTY
	, CUT_SPEC
	, ORDER_YN
	, PR_ID
	, PR_NUM
	, PR_QTY
	, NEED_DATE
	, UNIT_PRICE
	, MARGIN_RATE
	, MARGIN_PRICE
	, CUSER
	, CDATE
	, UUSER
	, UDATE
 ) 
(  
SELECT A.UPJANG 
     , #MENU_CD#
     , A.RECIPE_CD 
     , A.ITEM_CODE 
     , A.ITEM_SEQ 
     , A.NEED_QTY * NVL(H.NEED_RATE, 100) / 100 AS NEED_QTY 
     , ROUND((A.NEED_QTY * NVL(H.NEED_RATE, 100) / 100) * NVL((SELECT (100-NVL(DISUSE_RATE, 0)) / 100 AS CALC
                       	         FROM FSI_ITEM_NUT
                                WHERE ITEM_CODE = A.ITEM_CODE),1) , 2 )
     , A.CUT_SPEC 
     , 'N'
     , -1
     , NULL
     , 0
     , CASE WHEN TO_CHAR(TO_DATE(H.NEED_DATE), 'd') = 1 THEN
                 TO_CHAR(TO_DATE(H.NEED_DATE, 'RRRR-MM-DD') - (DECODE(NVL(SAT_YN, 'N'), 'Y', 1, 0) + DECODE(NVL(SUN_YN, 'N'), 'Y', 1, 0)), 'YYYYMMDD') 
            WHEN TO_CHAR(TO_DATE(H.NEED_DATE), 'd') = 7 THEN
                 TO_CHAR(TO_DATE(H.NEED_DATE, 'RRRR-MM-DD') - (DECODE(NVL(SAT_YN, 'N'), 'Y', 1, 0)), 'YYYYMMDD') 
            ELSE NVL(H.NEED_DATE, #NEED_DATE#)
       END AS NEED_DATE
     , NVL(B.CONTRACT_PRICE,0) --0
     , NVL(B.MARGIN_RATE,0) -- 0
     , NVL(B.ITEM_PRICE,0)  -- 0
     , #g_EmpNo#
     , SYSDATE
     , #g_EmpNo#
     , SYSDATE
  FROM FSR_UPJANG_RECIPE_ITEM A
     , (
        SELECT /*+ ORDERED USE_NL(B E A D) INDEX(C)*/
              A.ITEM_CODE,
              D.ITEM_NAME,
              D.ITEM_SIZE,
              D.PO_UOM,
              A.CUSTCD,
              DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) AS ITEM_PRICE,
              KG_CONVERT_RATE,
              ROUND((DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) )/KG_CONVERT_RATE/1000,2) AS G_ITEM_PRICE,
              A.UPJANG,
              A.CENTER_CODE,
              A.CONTRACT_PRICE,
              A.MARGIN_RATE
        	 FROM HLDC_ST_UPJANG B,
        	      HLDC_PO_SUBINVENTORY E,
        	      HLDC_PO_CONTRACT_F A,
        	      HLDC_PO_ITEM_MST D
        	WHERE A.ITEM_CODE = D.ITEM_CODE
        	  AND A.USE_YN = 'Y'
        	  AND A.CONTRACT_PRICE > 0
        	  AND A.UPJANG = B.AP_UNITPRICE_UPJANG
        	  AND B.UPJANG = E.UPJANG
        	  AND B.UPJANG = #UPJANG#  --[업장코드]
        	  AND E.SUBINV_CODE = #SUBINV_CODE#  --[창고코드] FSM_REAL_MENU_MST.SUBINV_CODE 사용(우선적용), FSA_HALL_MST.SUBINV_CODE 사용
        	  AND #NEED_DATE# BETWEEN A.CONTRACT_START AND NVL(A.CONTRACT_END,'99999999')  --[메뉴일자]
	   ) B
     , (SELECT UPJANG
             , SAT_YN
             , SUN_YN
             , TO_CHAR(TO_DATE(#NEED_DATE#, 'RRRR-MM-DD') - NVL(D_DAY, 0), 'YYYYMMDD') AS NEED_DATE
             , NEED_RATE
          FROM FSA_HALL_DTL
         WHERE UPJANG = #UPJANG#
           AND HALL_CD = #HALL_CD#
           AND MEAL = #MEAL#
           AND CORNER = #CORNER#) H     
 WHERE A.UPJANG = #UPJANG#
   AND A.HALL_CLASS = #HALL_CLASS#
   AND A.RECIPE_CD = #RECIPE_CD#
   AND A.ITEM_CODE = B.ITEM_CODE(+)
   AND A.UPJANG = H.UPJANG(+)
 )	]]></statement>
	<input default-name="ds_in">
	</input>
	<output default-name="ds_out">
	</output>
</query>