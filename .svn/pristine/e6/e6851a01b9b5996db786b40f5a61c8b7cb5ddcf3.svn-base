<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="rc.sle.weekSalesListDAO">
	<desc>요일별 매출 현황</desc>



	<!--  DATA를 조회한다. -->
	<statement name="selectList" type="select"><![CDATA[

            SELECT A.OUTLET_CD , D.OUTLET_NM
            	 , WEEK_CD
                 , E.CODE_NAME AS WEEK_NM
			     , KOR_QTY
			     , FRGN_QTY
			     , CUST_QTY
			     , RCPT_CUNT
                 
			     , FOOD_AMT
			     , BEVG_AMT
			     , OTHER_AMT
			     , GODS_AMT
			     , ETEC_AMT
			     , (FOOD_AMT + BEVG_AMT + OTHER_AMT + GODS_AMT + ETEC_AMT) AS SUB_AMT
                 , SVC_AMT
                 , VAT_AMT
                 , TOT_AMT
                  
			FROM (            
                SELECT INFO.OUTLET_CD
                     , TO_CHAR(TO_DATE(INFO.SALES_DATE,'YYYY-MM-DD'),'d') AS WEEK_CD
                     , NVL(SUM(INFO.KOR_QTY),0)  AS KOR_QTY
                     , NVL(SUM(INFO.FRGN_QTY),0) AS FRGN_QTY
                     , NVL(SUM(INFO.CUST_QTY),0) AS CUST_QTY 
                     , NVL(COUNT(INFO.RECEIPT_NUM),0) AS RCPT_CUNT
                     , NVL(SUM(FOOD_AMT),0) AS FOOD_AMT
                     , NVL(SUM(BEVG_AMT),0) AS BEVG_AMT
                     , NVL(SUM(OTHER_AMT),0) AS OTHER_AMT
                     , NVL(SUM(GODS_AMT),0) AS GODS_AMT
                     , NVL(SUM(ETEC_AMT),0) AS ETEC_AMT
                     , NVL(SUM(SVC_AMT),0)   AS SVC_AMT
                     , NVL(SUM(VAT_AMT),0)   AS VAT_AMT
                     , NVL(SUM(TOT_AMT),0)   AS TOT_AMT
                FROM (
                        SELECT SALES_DATE, OUTLET_CD, RECEIPT_NUM  
                                , SUM(FOOD_AMT)  AS FOOD_AMT
                                , SUM(BEVG_AMT)  AS BEVG_AMT
                                , SUM(OTHER_AMT) AS OTHER_AMT
                                , SUM(GODS_AMT)  AS GODS_AMT
                                , SUM(ETEC_AMT)  AS ETEC_AMT
                                , SUM(SVC_AMT)   AS SVC_AMT
                                , SUM(VAT_AMT)   AS VAT_AMT
                                , SUM(TOT_AMT)   AS TOT_AMT
                        FROM(
                          SELECT  GOODS.SALES_DATE, GOODS.OUTLET_CD, GOODS.RECEIPT_NUM  
                                , DECODE(MENU_CLASS,'F', SUM(NET_AMT) , 0) AS FOOD_AMT
                                , DECODE(MENU_CLASS,'B', SUM(NET_AMT) , 0) AS BEVG_AMT
                                , DECODE(MENU_CLASS,'O', SUM(NET_AMT) , 0) AS OTHER_AMT
                                , DECODE(MENU_CLASS,'S', SUM(NET_AMT) , 0) AS GODS_AMT
                                , DECODE(MENU_CLASS,'F',0,DECODE(MENU_CLASS,'B',0,DECODE(MENU_CLASS,'O',0,DECODE(MENU_CLASS,'S',0,SUM(NET_AMT) )))) AS ETEC_AMT
                                , SUM(SVC) AS SVC_AMT
                                , SUM(VAT) AS VAT_AMT
                                , SUM(TOT_AMT) AS TOT_AMT
                          FROM SLE_SALS_GOODS GOODS
                          INNER JOIN (SELECT MST.OUTLET_CD 
			                           FROM   SLE_OUTLET_MST MST
			                              INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
			                                         <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
			                                         <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
			              			 ) OUTLET ON OUTLET.OUTLET_CD = GOODS.OUTLET_CD
			              			 
			              INNER JOIN (
								SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM 
								FROM SLE_SALS_INFO INFO
								LEFT OUTER JOIN (
											      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
											      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
											      <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
											      ORDER BY  OUTLET_CD, POS_NUM
										) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
										WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
										  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
										  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
										  <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)										  
										  AND INFO.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt
										  <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
										  <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
										ORDER BY    INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM
		    				)  INFO ON INFO.OUTLET_CD = GOODS.OUTLET_CD 
		    				       AND INFO.SALES_DATE = GOODS.SALES_DATE
		    				       AND INFO.RECEIPT_NUM = GOODS.RECEIPT_NUM	
		    				       
                          WHERE 1=1
                           --GOODS.SALS_YN       = 'Y'		--판매여부
                           --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
						   AND GOODS.SELL_YN  = DECODE(GOODS.RECEIPT_STATUS ,'E','N','Y')				--매출 여부
						   --종료
                           AND GOODS.DATA_CLASS     = '1'  -- 1:메뉴 3:주문사항 
                           AND GOODS.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
                           AND GOODS.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                           <#if internalYn == 'Y' > AND GOODS.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
						   <#if internalYn == 'N' > AND GOODS.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)                           
                           AND GOODS.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt
                           <#if outletCd?has_content> AND GOODS.OUTLET_CD = :outletCd </#if>
                         GROUP BY GOODS.SALES_DATE, GOODS.OUTLET_CD, GOODS.RECEIPT_NUM, GOODS.MENU_CLASS
                         
                        ) A 
                        GROUP BY SALES_DATE, OUTLET_CD, RECEIPT_NUM
                        
                ) ITEM
                INNER JOIN (  
                        SELECT  INFO.SALES_DATE, INFO.OUTLET_CD, INFO.RECEIPT_NUM  
                              , SUM(INFO.KOR_PSN) AS KOR_QTY
                              , SUM(INFO.FOR_PSN) AS FRGN_QTY
                              , SUM(INFO.PSN) AS CUST_QTY
			                 
                        FROM  SLE_SALS_INFO INFO 
                        INNER JOIN (SELECT MST.OUTLET_CD 
			                           FROM   SLE_OUTLET_MST MST
			                              INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
			                                         <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
			                                         <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
			              			 ) OUTLET ON OUTLET.OUTLET_CD = INFO.OUTLET_CD
			             LEFT OUTER JOIN (
								      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
								      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
								      <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
								      ORDER BY  OUTLET_CD, POS_NUM
								) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM  
								
                         WHERE SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
                           AND MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                           <#if internalYn == 'Y' > AND RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
						   <#if internalYn == 'N' > AND RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
                           AND SALES_DATE BETWEEN :frSalesDt AND :toSalesDt
                           <#if outletCd?has_content>  AND INFO.OUTLET_CD = :outletCd </#if>
                           <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
                         GROUP BY SALES_DATE, INFO.OUTLET_CD, RECEIPT_NUM,CLOSE_ID
			                        
                        ) INFO ON INFO.SALES_DATE  = ITEM.SALES_DATE 
                              AND INFO.OUTLET_CD   = ITEM.OUTLET_CD 
                              AND INFO.RECEIPT_NUM = ITEM.RECEIPT_NUM
                              
                 GROUP BY    INFO.OUTLET_CD, TO_CHAR(TO_DATE(INFO.SALES_DATE,'YYYY-MM-DD'),'d')
			) A
			       
			INNER JOIN (
            			SELECT  CODE , CODE_NAME, CONTENTS
                          FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'SLE_0078' 
                        ) E ON E.CODE = A.WEEK_CD
            INNER JOIN (
            			SELECT OUTLET_CD, OUTLET_NM 
                          FROM SLE_OUTLET_MST
                       ) D  ON D.OUTLET_CD = A.OUTLET_CD
			ORDER BY OUTLET_CD,	WEEK_CD		
			
 		
		]]></statement>

</hqml>
