<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="fs.fse.eventMealSchlMgntDAO">
	<desc>이벤트 스케줄관리 HQML Query</desc>

	<!-- 이벤트 스케줄관리 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.fs.fse.dao.EventMealSchlMgntDAO.selectList */
		<![CDATA[
				SELECT
				  C.MU_CD
				, C.MU_NM 
				, C.TM_CD                   AS TM_CD
				, C.TM_NM                   AS TM_NM
				, UPJANG_CD				
				, C.UPJANGNM               AS UPJANG_NM 
				, SDATE
				, EDATE
				, SEQ
				, CONTENTS
				,EVENT_TYPE
				FROM FSE_EVNT_SCHL M
				   , SCO_UPJANG_MST_V C      
			   WHERE M.UPJANG_CD  = C.UPJANG
		   --   AND C.FS_UPJANG = 'Y'       
				<#if muCd?has_content>
				AND    MU_CD = :muCd
				</#if>
				<#if tmCd?has_content>
				AND    TM_CD = :tmCd
				</#if>
				<#if upjangCd?has_content>
				AND    M.UPJANG_CD = :upjangCd
				</#if>
				
				AND (    TO_DATE(M.SDATE,'YYYYMMDD') BETWEEN TO_DATE(:fromDay,'YYYYMMDD')  AND TO_DATE(:toDay,'YYYYMMDD')            
				      OR TO_DATE(M.EDATE,'YYYYMMDD') BETWEEN TO_DATE(:fromDay,'YYYYMMDD')  AND TO_DATE(:toDay,'YYYYMMDD')            
				      OR TO_DATE(:fromDay,'YYYYMMDD') BETWEEN TO_DATE( M.SDATE,'YYYYMMDD') AND TO_DATE(M.EDATE,'YYYYMMDD') 
				      OR TO_DATE(:toDay,'YYYYMMDD')   BETWEEN TO_DATE( M.SDATE,'YYYYMMDD') AND TO_DATE(M.EDATE,'YYYYMMDD')   
				    )
				<#if contests?has_content>
				AND    M.CONTENTS LIKE '%' || :contents || '%'
				</#if>       
				<#if eventType?has_content>
				AND    M.EVENT_TYPE = :eventType
				</#if>       
				ORDER BY 
				       	 C.TM_CD                  
				        , UPJANG_CD                                /* 신청 업장코드         */
				        , SDATE                                 /* 시작일    			*/  
				        , CONTENTS        							   /* 이벤트명       	    */
				     DESC                        
     

		]]>
	</statement>
		
	<statement name="selectSchl">
	/*+ com.hwfs.fs.fse.dao.EventMealSchlMgntDAO.selectSchl */
	<![CDATA[ 
                    SELECT  
                            D.DAYS
                           ,D.WEEKDAY
                           ,(D.WEEKCNT||'주차') AS WEEKCNT
                           ,G.CONTENTS
                           ,UPJANGNM
                           ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'EVENT_TYPE_CD' AND CODE = G.EVENT_TYPE) EVENT_TYPE
                       FROM 
                       (                                
                            WITH T AS
                               (
                                 SELECT 
                                           YYYY 
                                           ,D 
                                           ,TO_DATE(YYYY||'01', 'YYYYMM') + LEVEL -1 DAYS
                                   FROM (SELECT SUBSTR(:fromDay,0,4) YYYY, 7 D FROM DUAL) 
                                    CONNECT BY LEVEL <= TO_CHAR(TO_DATE(YYYY||'1231','YYYYMMDD'),'DDD'))
                                     SELECT YYYY, 
                                              D, 
                                              TO_CHAR(DAYS,'YYYYMMDD') AS DAYS,
                                              TO_CHAR(DAYS,'DAY') AS WEEKDAY,
                                           CEIL((DAYS - NEXT_DAY(TRUNC(DAYS,'MM') - 7, D) + 1) / 7) AS WEEKCNT 
                                          FROM T
                                         WHERE T.DAYS BETWEEN TO_DATE(:fromDay,'YYYYMMDD') AND TO_DATE(:toDay,'YYYYMMDD')
                       )D
                     , FSE_EVNT_SCHL G
                     , SCO_UPJANG_MST_V C    
                     	WHERE G.UPJANG_CD  = C.UPJANG
                     --   AND C.FS_UPJANG = 'Y'       
					      <#if muCd?has_content>
						  AND    MU_CD = :muCd
						  </#if>
						  <#if tmCd?has_content>
						  AND    TM_CD = :tmCd
						  </#if>
						  <#if upjangCd?has_content>
						  AND    G.UPJANG_CD = :upjangCd
						  </#if>         
                          AND D.DAYS BETWEEN G.SDATE AND G.EDATE 
                          
                          <#if eventNm?has_content>
						  AND G.CONTENTS LIKE '%' || :eventNm || '%'
						  </#if> 
						  <#if eventType?has_content>
			     		   AND    G.EVENT_TYPE = :eventType
					      </#if>  
                          ORDER BY  DAYS ASC,
                          				CDATE ASC                            
		]]>
	</statement>
	
	<!-- 이벤트 등록(을)를 등록한다 -->
	<statement name="insert">
		<![CDATA[ 
			INSERT INTO FSE_EVNT_SCHL
							(
							 UPJANG_CD,
							 SDATE,
							 EDATE,
							 SEQ,
							 CONTENTS,
							 EVENT_TYPE,
							 CUSER,
							 CDATE,
							 UUSER,
							 UDATE
							) VALUES (
							 :upjangCd,
							 :sdate,
							 :edate,
							 (SELECT NVL( MAX(SEQ), 0 ) + 1 FROM FSE_EVNT_SCHL WHERE UPJANG_CD = :upjangCd  AND SDATE = :sdate),
							<#if contents?exists> :contents, <#else> null, </#if>
							<#if eventType?exists> :eventType, <#else> null, </#if>
							 :loginSabun,
							 SYSDATE,
							 :loginSabun,
							 SYSDATE
							)
		]]>
	</statement>
	
	<!-- 이벤트 등록(을)를 업데이트한다. -->
		<statement name="update" type="update">
			<![CDATA[
				UPDATE FSE_EVNT_SCHL SET
						<#if contents?exists> CONTENTS = :contents, </#if>
						<#if eventType?exists> EVENT_TYPE = :eventType, </#if>
						       UUSER = :loginSabun,
						       UDATE = SYSDATE
						WHERE  UPJANG_CD = :upjangCd
						AND    SDATE = :sdate
						AND    EDATE = :edate
						AND    SEQ = :seq
			]]>
		</statement>

	<!-- 이벤트 등록(을)를 삭제한다. -->
		<statement name="delete" type="delete">
			<![CDATA[
				DELETE
							FROM   FSE_EVNT_SCHL
							WHERE  UPJANG_CD = :upjangCd
							AND    SDATE = :sdate
							AND    EDATE = :edate
							AND    SEQ = :seq
			]]>
		</statement>
	
</hqml>
