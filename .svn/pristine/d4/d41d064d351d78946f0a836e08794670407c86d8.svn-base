<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="ls.lsm.upjangTermAmtInqueryDAO">
    <desc>업장기간별금액조회</desc>

    <!-- 목록 DATA를 조회한다. -->
    <statement name="selectList" type="select">
        /*+ com.hwfs.ls.lsm.dao.upjangTermAmtInquery.selectList */
        <![CDATA[
/* 목록 조회 */
SELECT B.CODE AS ACCEPT_CLASS
     , B.CODE_NAME AS ACCEPT_CLASS_NM  /* 의뢰사업장 */
     , NVL(A.REQ_CNT, 0) AS REQ_CNT         /* 의뢰건수 */
     , (
        SELECT /*+ INDEX_SS(TD) */
               COUNT(1)
          FROM LRM_TEST_REQ_ACCEPT Z
             , LRM_TEST_INFO TI
             , LTM_TEST_DIARY TD
         WHERE Z.ACCEPT_CLASS = A.ACCEPT_CLASS
           AND Z.REQ_NUM = TI.REQ_NUM
           AND TI.REQ_NUM = TD.REQ_NUM(+)
           AND TI.ACCEPT_NUM = TD.ACCEPT_NUM(+)
           AND TI.ARTICLE_CD = TD.ARTICLE_CD(+)
           AND TI.INSPT_FLD = '101'
           <#if procClass?has_content>
             <#if procClass == '101'>AND TD.LAST_DECISION IS NOT NULL</#if> /* 완료 */
             <#if procClass == '102'>AND (TD.TECHRESP_USER IS NOT NULL AND TD.LAST_DECISION IS NULL)</#if>  /* 처리중 */
             <#if procClass == '103'>
               AND NOT EXISTS (
                               SELECT 1
                                 FROM LTM_TEST_DIARY
                                WHERE TI.REQ_NUM = REQ_NUM
                                  AND TI.ACCEPT_NUM = ACCEPT_NUM
                                  AND TI.ARTICLE_CD = ARTICLE_CD
                              )
             </#if> /* 미처리 */
           </#if>
           AND Z.REQ_DATE BETWEEN :fromDay AND :toDay
        <#if insptObj1?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_1 = :insptObj1 ) </#if>
        <#if insptObj2?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_2 = :insptObj2 ) </#if>
        <#if insptObj3?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_3 = :insptObj3 ) </#if>
        <#if insptObj4?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_4 = :insptObj4 ) </#if>
        <#if insptPurp1?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_PURP_1 = :insptPurp1 ) </#if>
        <#if insptPurp2?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_PURP_2 = :insptPurp2 ) </#if>
        <#if insptPurp3?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_PURP_3 = :insptPurp3 ) </#if>
        <#if insptMethod?has_content> AND EXISTS ( SELECT 1 FROM LRM_TEST_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_METHOD = :insptMethod ) </#if>
        <#if testUser?has_content> AND TI.SABUN = :testUser </#if>
           AND NOT EXISTS (
                          SELECT 1
                            FROM LRM_PROC_DESC
                           WHERE REQ_NUM = Z.REQ_NUM
                             AND PROC_CLASS IN ('140')
                          )
       ) AS MICBIO_TEST_QTY                /* 미생물 검사항목건수 */
     , (
        SELECT /*+ INDEX_SS(TD) */
               COUNT(1)
          FROM LRM_TEST_REQ_ACCEPT Z
             , LRM_TEST_INFO TI
             , LTM_TEST_DIARY TD
         WHERE Z.ACCEPT_CLASS = A.ACCEPT_CLASS
           AND Z.REQ_NUM = TI.REQ_NUM
           AND TI.REQ_NUM = TD.REQ_NUM(+)
           AND TI.ACCEPT_NUM = TD.ACCEPT_NUM(+)
           AND TI.ARTICLE_CD = TD.ARTICLE_CD(+)
           AND TI.INSPT_FLD = '102'
           <#if procClass?has_content>
             <#if procClass == '101'>AND TD.LAST_DECISION IS NOT NULL</#if> /* 완료 */
             <#if procClass == '102'>AND (TD.TECHRESP_USER IS NOT NULL AND TD.LAST_DECISION IS NULL)</#if>  /* 처리중 */
             <#if procClass == '103'>
               AND NOT EXISTS (
                               SELECT 1
                                 FROM LTM_TEST_DIARY
                                WHERE TI.REQ_NUM = REQ_NUM
                                  AND TI.ACCEPT_NUM = ACCEPT_NUM
                                  AND TI.ARTICLE_CD = ARTICLE_CD
                              )
             </#if> /* 미처리 */
           </#if>
           AND Z.REQ_DATE BETWEEN :fromDay AND :toDay
        <#if insptObj1?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_1 = :insptObj1 ) </#if>
        <#if insptObj2?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_2 = :insptObj2 ) </#if>
        <#if insptObj3?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_3 = :insptObj3 ) </#if>
        <#if insptObj4?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_4 = :insptObj4 ) </#if>
        <#if insptPurp1?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_PURP_1 = :insptPurp1 ) </#if>
        <#if insptPurp2?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_PURP_2 = :insptPurp2 ) </#if>
        <#if insptPurp3?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_PURP_3 = :insptPurp3 ) </#if>
        <#if insptMethod?has_content> AND EXISTS ( SELECT 1 FROM LRM_TEST_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_METHOD = :insptMethod ) </#if>
        <#if testUser?has_content> AND TI.SABUN = :testUser </#if>
           AND NOT EXISTS (
                          SELECT 1
                            FROM LRM_PROC_DESC
                           WHERE REQ_NUM = Z.REQ_NUM
                             AND PROC_CLASS IN ('140')
                          )
       ) AS PHYCHEM_TEST_QTY                /* 이화학 검사항목건수 */
     , (
        SELECT /*+ INDEX_SS(TD) */
               COUNT(1)
          FROM LRM_TEST_REQ_ACCEPT Z
             , LRM_TEST_INFO TI
             , LTM_TEST_DIARY TD
         WHERE Z.ACCEPT_CLASS = A.ACCEPT_CLASS
           AND Z.REQ_NUM = TI.REQ_NUM
           AND TI.REQ_NUM = TD.REQ_NUM(+)
           AND TI.ACCEPT_NUM = TD.ACCEPT_NUM(+)
           AND TI.ARTICLE_CD = TD.ARTICLE_CD(+)
           AND TI.INSPT_FLD IN ('101', '102')
           AND TD.LAST_DECISION IN ('101')
           <#if procClass?has_content>
             <#if procClass == '101'>AND TD.LAST_DECISION IS NOT NULL</#if> /* 완료 */
             <#if procClass == '102'>AND (TD.TECHRESP_USER IS NOT NULL AND TD.LAST_DECISION IS NULL)</#if>  /* 처리중 */
             <#if procClass == '103'>
               AND NOT EXISTS (
                               SELECT 1
                                 FROM LTM_TEST_DIARY
                                WHERE TI.REQ_NUM = REQ_NUM
                                  AND TI.ACCEPT_NUM = ACCEPT_NUM
                                  AND TI.ARTICLE_CD = ARTICLE_CD
                              )
             </#if> /* 미처리 */
           </#if>
           AND Z.REQ_DATE BETWEEN :fromDay AND :toDay
        <#if insptObj1?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_1 = :insptObj1 ) </#if>
        <#if insptObj2?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_2 = :insptObj2 ) </#if>
        <#if insptObj3?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_3 = :insptObj3 ) </#if>
        <#if insptObj4?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_4 = :insptObj4 ) </#if>
        <#if insptPurp1?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_PURP_1 = :insptPurp1 ) </#if>
        <#if insptPurp2?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_PURP_2 = :insptPurp2 ) </#if>
        <#if insptPurp3?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_PURP_3 = :insptPurp3 ) </#if>
        <#if insptMethod?has_content> AND EXISTS ( SELECT 1 FROM LRM_TEST_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_METHOD = :insptMethod ) </#if>
        <#if testUser?has_content> AND TI.SABUN = :testUser </#if>
           AND NOT EXISTS (
                          SELECT 1
                            FROM LRM_PROC_DESC
                           WHERE REQ_NUM = Z.REQ_NUM
                             AND PROC_CLASS IN ('140')
                          )
       ) AS FIT_QTY                /* 적합건수 */
     , (
        SELECT /*+ INDEX_SS(TD) */
               COUNT(1)
          FROM LRM_TEST_REQ_ACCEPT Z
             , LRM_TEST_INFO TI
             , LTM_TEST_DIARY TD
         WHERE Z.ACCEPT_CLASS = A.ACCEPT_CLASS
           AND Z.REQ_NUM = TI.REQ_NUM
           AND TI.REQ_NUM = TD.REQ_NUM(+)
           AND TI.ACCEPT_NUM = TD.ACCEPT_NUM(+)
           AND TI.ARTICLE_CD = TD.ARTICLE_CD(+)
           AND TI.INSPT_FLD = '101'
           AND TD.LAST_DECISION NOT IN ('101')
           <#if procClass?has_content>
             <#if procClass == '101'>AND TD.LAST_DECISION IS NOT NULL</#if> /* 완료 */
             <#if procClass == '102'>AND (TD.TECHRESP_USER IS NOT NULL AND TD.LAST_DECISION IS NULL)</#if>  /* 처리중 */
             <#if procClass == '103'>
               AND NOT EXISTS (
                               SELECT 1
                                 FROM LTM_TEST_DIARY
                                WHERE TI.REQ_NUM = REQ_NUM
                                  AND TI.ACCEPT_NUM = ACCEPT_NUM
                                  AND TI.ARTICLE_CD = ARTICLE_CD
                              )
             </#if> /* 미처리 */
           </#if>
           AND Z.REQ_DATE BETWEEN :fromDay AND :toDay
        <#if insptObj1?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_1 = :insptObj1 ) </#if>
        <#if insptObj2?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_2 = :insptObj2 ) </#if>
        <#if insptObj3?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_3 = :insptObj3 ) </#if>
        <#if insptObj4?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_4 = :insptObj4 ) </#if>
        <#if insptPurp1?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_PURP_1 = :insptPurp1 ) </#if>
        <#if insptPurp2?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_PURP_2 = :insptPurp2 ) </#if>
        <#if insptPurp3?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_PURP_3 = :insptPurp3 ) </#if>
        <#if insptMethod?has_content> AND EXISTS ( SELECT 1 FROM LRM_TEST_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_METHOD = :insptMethod ) </#if>
        <#if testUser?has_content> AND TI.SABUN = :testUser </#if>
           AND NOT EXISTS (
                          SELECT 1
                            FROM LRM_PROC_DESC
                           WHERE REQ_NUM = Z.REQ_NUM
                             AND PROC_CLASS IN ('140')
                          )
       ) AS MICBIO_NOT_FIT_QTY                /* 미생물 부적합 항목건수 */
     , (
        SELECT /*+ INDEX_SS(TD) */
               COUNT(1)
          FROM LRM_TEST_REQ_ACCEPT Z
             , LRM_TEST_INFO TI
             , LTM_TEST_DIARY TD
         WHERE Z.ACCEPT_CLASS = A.ACCEPT_CLASS
           AND Z.REQ_NUM = TI.REQ_NUM
           AND TI.REQ_NUM = TD.REQ_NUM(+)
           AND TI.ACCEPT_NUM = TD.ACCEPT_NUM(+)
           AND TI.ARTICLE_CD = TD.ARTICLE_CD(+)
           AND TI.INSPT_FLD = '102'
           AND TD.LAST_DECISION NOT IN ('101')
           <#if procClass?has_content>
             <#if procClass == '101'>AND TD.LAST_DECISION IS NOT NULL</#if> /* 완료 */
             <#if procClass == '102'>AND (TD.TECHRESP_USER IS NOT NULL AND TD.LAST_DECISION IS NULL)</#if>  /* 처리중 */
             <#if procClass == '103'>
               AND NOT EXISTS (
                               SELECT 1
                                 FROM LTM_TEST_DIARY
                                WHERE TI.REQ_NUM = REQ_NUM
                                  AND TI.ACCEPT_NUM = ACCEPT_NUM
                                  AND TI.ARTICLE_CD = ARTICLE_CD
                              )
             </#if> /* 미처리 */
           </#if>
           AND Z.REQ_DATE BETWEEN :fromDay AND :toDay
        <#if insptObj1?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_1 = :insptObj1 ) </#if>
        <#if insptObj2?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_2 = :insptObj2 ) </#if>
        <#if insptObj3?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_3 = :insptObj3 ) </#if>
        <#if insptObj4?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_4 = :insptObj4 ) </#if>
        <#if insptPurp1?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_PURP_1 = :insptPurp1 ) </#if>
        <#if insptPurp2?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_PURP_2 = :insptPurp2 ) </#if>
        <#if insptPurp3?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_PURP_3 = :insptPurp3 ) </#if>
        <#if insptMethod?has_content> AND EXISTS ( SELECT 1 FROM LRM_TEST_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_METHOD = :insptMethod ) </#if>
        <#if testUser?has_content> AND TI.SABUN = :testUser </#if>
           AND NOT EXISTS (
                          SELECT 1
                            FROM LRM_PROC_DESC
                           WHERE REQ_NUM = Z.REQ_NUM
                             AND PROC_CLASS IN ('140')
                          )
       ) AS PHYCHEM_NOT_FIT_QTY                /* 이화학 부적합 항목건수 */
     , (
        SELECT NVL(SUM(DECODE(Y.COMM_1_USE_YN, 'Y', SUM(Y.COMM_1), 0)) +
                   SUM(DECODE(Y.COMM_2_USE_YN, 'Y', SUM(Y.COMM_2), 0)) +
                   SUM(DECODE(Y.COMM_3_USE_YN, 'Y', SUM(Y.COMM_3), 0)) +
                   SUM(DECODE(Y.COMM_4_USE_YN, 'Y', SUM(Y.COMM_4), 0)) +
                   SUM(DECODE(Y.COMM_5_USE_YN, 'Y', SUM(Y.COMM_5), 0)), 0)
          FROM LRM_TEST_REQ_ACCEPT Z
             , LRM_SPECM_INFO X
             , LRM_TEST_INFO Y
             , LTM_TEST_DIARY TD
         WHERE 1 = 1
           AND Z.ACCEPT_CLASS = A.ACCEPT_CLASS
           AND X.REQ_NUM = Z.REQ_NUM
           AND X.REQ_NUM = Y.REQ_NUM
           AND X.ACCEPT_NUM = Y.ACCEPT_NUM
           --AND X.COST_CLASS = '102' -- 유상
           AND Y.REQ_NUM = TD.REQ_NUM(+)
           AND Y.ACCEPT_NUM = TD.ACCEPT_NUM(+)
           AND Y.ARTICLE_CD = TD.ARTICLE_CD(+)
           <#if procClass?has_content>
             <#if procClass == '101'>AND TD.LAST_DECISION IS NOT NULL</#if> /* 완료 */
             <#if procClass == '102'>AND (TD.TECHRESP_USER IS NOT NULL AND TD.LAST_DECISION IS NULL)</#if>  /* 처리중 */
             <#if procClass == '103'>
               AND NOT EXISTS (
                               SELECT 1
                                 FROM LTM_TEST_DIARY
                                WHERE Y.REQ_NUM = REQ_NUM
                                  AND Y.ACCEPT_NUM = ACCEPT_NUM
                                  AND Y.ARTICLE_CD = ARTICLE_CD
                              )
             </#if> /* 미처리 */
           </#if>
           AND Z.REQ_DATE BETWEEN :fromDay AND :toDay
        <#if insptObj1?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_1 = :insptObj1 ) </#if>
        <#if insptObj2?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_2 = :insptObj2 ) </#if>
        <#if insptObj3?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_3 = :insptObj3 ) </#if>
        <#if insptObj4?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_OBJ_4 = :insptObj4 ) </#if>
        <#if insptPurp1?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_PURP_1 = :insptPurp1 ) </#if>
        <#if insptPurp2?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_PURP_2 = :insptPurp2 ) </#if>
        <#if insptPurp3?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_PURP_3 = :insptPurp3 ) </#if>
        <#if insptMethod?has_content> AND EXISTS ( SELECT 1 FROM LRM_TEST_INFO SI WHERE SI.REQ_NUM = Z.REQ_NUM AND SI.INSPT_METHOD = :insptMethod ) </#if>
        <#if testUser?has_content> AND Y.SABUN = :testUser </#if>
           AND NOT EXISTS (
                          SELECT 1
                            FROM LRM_PROC_DESC
                           WHERE REQ_NUM = Z.REQ_NUM
                             AND PROC_CLASS IN ('140')
                          )
         GROUP BY Y.COMM_1_USE_YN, Y.COMM_2_USE_YN, Y.COMM_3_USE_YN, Y.COMM_4_USE_YN, Y.COMM_5_USE_YN
       ) AS COMM_TOT_AMT
  FROM (
        SELECT /*+ INDEX_SS(TR) */
               TR.ACCEPT_CLASS, COUNT(1) AS REQ_CNT
          FROM LRM_TEST_REQ_ACCEPT TR
         WHERE 1 = 1
           AND TR.REQ_DATE BETWEEN :fromDay AND :toDay
        <#if acceptClass?has_content> AND TR.ACCEPT_CLASS = :acceptClass </#if>
        <#if insptObj1?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = TR.REQ_NUM AND SI.INSPT_OBJ_1 = :insptObj1 ) </#if>
        <#if insptObj2?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = TR.REQ_NUM AND SI.INSPT_OBJ_2 = :insptObj2 ) </#if>
        <#if insptObj3?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = TR.REQ_NUM AND SI.INSPT_OBJ_3 = :insptObj3 ) </#if>
        <#if insptObj4?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = TR.REQ_NUM AND SI.INSPT_OBJ_4 = :insptObj4 ) </#if>
        <#if insptPurp1?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = TR.REQ_NUM AND SI.INSPT_PURP_1 = :insptPurp1 ) </#if>
        <#if insptPurp2?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = TR.REQ_NUM AND SI.INSPT_PURP_2 = :insptPurp2 ) </#if>
        <#if insptPurp3?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = TR.REQ_NUM AND SI.INSPT_PURP_3 = :insptPurp3 ) </#if>
        <#if insptMethod?has_content> AND EXISTS ( SELECT 1 FROM LRM_TEST_INFO SI WHERE SI.REQ_NUM = TR.REQ_NUM AND SI.INSPT_METHOD = :insptMethod ) </#if>
          AND NOT EXISTS (
                          SELECT 1
                            FROM LRM_PROC_DESC
                           WHERE REQ_NUM = TR.REQ_NUM
                             AND PROC_CLASS IN ('140')
                         )
         GROUP BY TR.ACCEPT_CLASS
       ) A
     , SCC_COMMON_CODE B
 WHERE 1 = 1
   AND B.GROUP_CODE = 'ACCEPT_CLASS'
   AND B.USE_YN = 'Y'
   AND B.CODE = A.ACCEPT_CLASS(+)
 ORDER BY B.SORT_SEQ
        ]]>
    </statement>

    <!-- 상세 DATA를 조회한다. -->
    <statement name="selectDetailList" type="select">
        /*+ com.hwfs.ls.lsm.dao.upjangTermAmtInquery.selectDetailList */
        <![CDATA[
/* 상세 조회 */
SELECT A.REQ_DATE  /* 의뢰일자 */
     , A.UPJANG_NM /* 공급업체 */
     , (
        SELECT COUNT(1)
          FROM LRM_SPECM_INFO SI
         WHERE SI.REQ_NUM = A.REQ_NUM
       ) AS SPECM_CNT     /* 검체건수 */
     , (
        SELECT /*+ INDEX_SS(TD) */
               COUNT(1)
          FROM LRM_TEST_REQ_ACCEPT Z
             , LRM_TEST_INFO TI
             , LTM_TEST_DIARY TD
         WHERE Z.REQ_NUM = A.REQ_NUM
           AND Z.REQ_NUM = TI.REQ_NUM
           AND TI.REQ_NUM = TD.REQ_NUM(+)
           AND TI.ACCEPT_NUM = TD.ACCEPT_NUM(+)
           AND TI.ARTICLE_CD = TD.ARTICLE_CD(+)
           AND TI.INSPT_FLD = '101'
           <#if procClass?has_content>
             <#if procClass == '101'>AND TD.LAST_DECISION IS NOT NULL</#if> /* 완료 */
             <#if procClass == '102'>AND (TD.TECHRESP_USER IS NOT NULL AND TD.LAST_DECISION IS NULL)</#if>  /* 처리중 */
             <#if procClass == '103'>
               AND NOT EXISTS (
                               SELECT 1
                                 FROM LTM_TEST_DIARY
                                WHERE TI.REQ_NUM = REQ_NUM
                                  AND TI.ACCEPT_NUM = ACCEPT_NUM
                                  AND TI.ARTICLE_CD = ARTICLE_CD
                              )
             </#if> /* 미처리 */
           </#if>
           <#if testUser?has_content> AND TI.SABUN = :testUser </#if>
       ) AS MICBIO_TEST_QTY                /* 미생물 검사항목건수 */
     , (
        SELECT /*+ INDEX_SS(TD) */
               COUNT(1)
          FROM LRM_TEST_REQ_ACCEPT Z
             , LRM_TEST_INFO TI
             , LTM_TEST_DIARY TD
         WHERE Z.REQ_NUM = A.REQ_NUM
           AND Z.REQ_NUM = TI.REQ_NUM
           AND TI.REQ_NUM = TD.REQ_NUM(+)
           AND TI.ACCEPT_NUM = TD.ACCEPT_NUM(+)
           AND TI.ARTICLE_CD = TD.ARTICLE_CD(+)
           AND TI.INSPT_FLD = '102'
           <#if procClass?has_content>
             <#if procClass == '101'>AND TD.LAST_DECISION IS NOT NULL</#if> /* 완료 */
             <#if procClass == '102'>AND (TD.TECHRESP_USER IS NOT NULL AND TD.LAST_DECISION IS NULL)</#if>  /* 처리중 */
             <#if procClass == '103'>
               AND NOT EXISTS (
                               SELECT 1
                                 FROM LTM_TEST_DIARY
                                WHERE TI.REQ_NUM = REQ_NUM
                                  AND TI.ACCEPT_NUM = ACCEPT_NUM
                                  AND TI.ARTICLE_CD = ARTICLE_CD
                              )
             </#if> /* 미처리 */
           </#if>
           <#if testUser?has_content> AND TI.SABUN = :testUser </#if>
       ) AS PHYCHEM_TEST_QTY                /* 이화학 검사항목건수 */
     , (
        SELECT /*+ INDEX_SS(TD) */
               COUNT(1)
          FROM LRM_TEST_REQ_ACCEPT Z
             , LRM_TEST_INFO TI
             , LTM_TEST_DIARY TD
         WHERE Z.REQ_NUM = A.REQ_NUM
           AND Z.REQ_NUM = TI.REQ_NUM
           AND TI.REQ_NUM = TD.REQ_NUM(+)
           AND TI.ACCEPT_NUM = TD.ACCEPT_NUM(+)
           AND TI.ARTICLE_CD = TD.ARTICLE_CD(+)
           AND TI.INSPT_FLD IN ('101', '102')
           AND TD.LAST_DECISION IN ('101')
           <#if procClass?has_content>
             <#if procClass == '101'>AND TD.LAST_DECISION IS NOT NULL</#if> /* 완료 */
             <#if procClass == '102'>AND (TD.TECHRESP_USER IS NOT NULL AND TD.LAST_DECISION IS NULL)</#if>  /* 처리중 */
             <#if procClass == '103'>
               AND NOT EXISTS (
                               SELECT 1
                                 FROM LTM_TEST_DIARY
                                WHERE TI.REQ_NUM = REQ_NUM
                                  AND TI.ACCEPT_NUM = ACCEPT_NUM
                                  AND TI.ARTICLE_CD = ARTICLE_CD
                              )
             </#if> /* 미처리 */
           </#if>
           <#if testUser?has_content> AND TI.SABUN = :testUser </#if>
       ) AS FIT_QTY                /* 적합건수 */
     , (
        SELECT /*+ INDEX_SS(TD) */
               COUNT(1)
          FROM LRM_TEST_REQ_ACCEPT Z
             , LRM_TEST_INFO TI
             , LTM_TEST_DIARY TD
         WHERE Z.REQ_NUM = A.REQ_NUM
           AND Z.REQ_NUM = TI.REQ_NUM
           AND TI.REQ_NUM = TD.REQ_NUM(+)
           AND TI.ACCEPT_NUM = TD.ACCEPT_NUM(+)
           AND TI.ARTICLE_CD = TD.ARTICLE_CD(+)
           AND TI.INSPT_FLD = '101'
           AND TD.LAST_DECISION NOT IN ('101')
           <#if procClass?has_content>
             <#if procClass == '101'>AND TD.LAST_DECISION IS NOT NULL</#if> /* 완료 */
             <#if procClass == '102'>AND (TD.TECHRESP_USER IS NOT NULL AND TD.LAST_DECISION IS NULL)</#if>  /* 처리중 */
             <#if procClass == '103'>
               AND NOT EXISTS (
                               SELECT 1
                                 FROM LTM_TEST_DIARY
                                WHERE TI.REQ_NUM = REQ_NUM
                                  AND TI.ACCEPT_NUM = ACCEPT_NUM
                                  AND TI.ARTICLE_CD = ARTICLE_CD
                              )
             </#if> /* 미처리 */
           </#if>
           <#if testUser?has_content> AND TI.SABUN = :testUser </#if>
       ) AS MICBIO_NOT_FIT_QTY                /* 미생물 부적합 항목건수 */
     , (
        SELECT /*+ INDEX_SS(TD) */
               COUNT(1)
          FROM LRM_TEST_REQ_ACCEPT Z
             , LRM_TEST_INFO TI
             , LTM_TEST_DIARY TD
         WHERE Z.REQ_NUM = A.REQ_NUM
           AND Z.REQ_NUM = TI.REQ_NUM
           AND TI.REQ_NUM = TD.REQ_NUM(+)
           AND TI.ACCEPT_NUM = TD.ACCEPT_NUM(+)
           AND TI.ARTICLE_CD = TD.ARTICLE_CD(+)
           AND TI.INSPT_FLD = '102'
           AND TD.LAST_DECISION NOT IN ('101')
           <#if procClass?has_content>
             <#if procClass == '101'>AND TD.LAST_DECISION IS NOT NULL</#if> /* 완료 */
             <#if procClass == '102'>AND (TD.TECHRESP_USER IS NOT NULL AND TD.LAST_DECISION IS NULL)</#if>  /* 처리중 */
             <#if procClass == '103'>
               AND NOT EXISTS (
                               SELECT 1
                                 FROM LTM_TEST_DIARY
                                WHERE TI.REQ_NUM = REQ_NUM
                                  AND TI.ACCEPT_NUM = ACCEPT_NUM
                                  AND TI.ARTICLE_CD = ARTICLE_CD
                              )
             </#if> /* 미처리 */
           </#if>
           <#if testUser?has_content> AND TI.SABUN = :testUser </#if>
       ) AS PHYCHEM_NOT_FIT_QTY                /* 이화학 부적합 항목건수 */
     , (
        SELECT NVL(SUM(DECODE(Y.COMM_1_USE_YN, 'Y', SUM(Y.COMM_1), 0)) +
                   SUM(DECODE(Y.COMM_2_USE_YN, 'Y', SUM(Y.COMM_2), 0)) +
                   SUM(DECODE(Y.COMM_3_USE_YN, 'Y', SUM(Y.COMM_3), 0)) +
                   SUM(DECODE(Y.COMM_4_USE_YN, 'Y', SUM(Y.COMM_4), 0)) +
                   SUM(DECODE(Y.COMM_5_USE_YN, 'Y', SUM(Y.COMM_5), 0)), 0)
          FROM LRM_TEST_REQ_ACCEPT Z
             , LRM_SPECM_INFO X
             , LRM_TEST_INFO Y
             , LTM_TEST_DIARY TD
         WHERE 1 = 1
           AND Z.REQ_NUM = A.REQ_NUM
           AND X.REQ_NUM = Z.REQ_NUM
           AND X.REQ_NUM = Y.REQ_NUM
           AND X.ACCEPT_NUM = Y.ACCEPT_NUM
           --AND X.COST_CLASS = '102' -- 유상
           AND Y.REQ_NUM = TD.REQ_NUM(+)
           AND Y.ACCEPT_NUM = TD.ACCEPT_NUM(+)
           AND Y.ARTICLE_CD = TD.ARTICLE_CD(+)
           <#if procClass?has_content>
             <#if procClass == '101'>AND TD.LAST_DECISION IS NOT NULL</#if> /* 완료 */
             <#if procClass == '102'>AND (TD.TECHRESP_USER IS NOT NULL AND TD.LAST_DECISION IS NULL)</#if>  /* 처리중 */
             <#if procClass == '103'>
               AND NOT EXISTS (
                               SELECT 1
                                 FROM LTM_TEST_DIARY
                                WHERE Y.REQ_NUM = REQ_NUM
                                  AND Y.ACCEPT_NUM = ACCEPT_NUM
                                  AND Y.ARTICLE_CD = ARTICLE_CD
                              )
             </#if> /* 미처리 */
           </#if>
           <#if testUser?has_content> AND Y.SABUN = :testUser </#if>
         GROUP BY Y.COMM_1_USE_YN, Y.COMM_2_USE_YN, Y.COMM_3_USE_YN, Y.COMM_4_USE_YN, Y.COMM_5_USE_YN
       ) AS COMM_TOT_AMT
     , A.REQ_NUM
  FROM LRM_TEST_REQ_ACCEPT A
 WHERE 1 = 1
   AND A.ACCEPT_CLASS = :acceptClassSub
   AND A.REQ_DATE BETWEEN :fromDay AND :toDay
<#if insptObj1?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = A.REQ_NUM AND SI.INSPT_OBJ_1 = :insptObj1 ) </#if>
<#if insptObj2?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = A.REQ_NUM AND SI.INSPT_OBJ_2 = :insptObj2 ) </#if>
<#if insptObj3?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = A.REQ_NUM AND SI.INSPT_OBJ_3 = :insptObj3 ) </#if>
<#if insptObj4?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = A.REQ_NUM AND SI.INSPT_OBJ_4 = :insptObj4 ) </#if>
<#if insptPurp1?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = A.REQ_NUM AND SI.INSPT_PURP_1 = :insptPurp1 ) </#if>
<#if insptPurp2?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = A.REQ_NUM AND SI.INSPT_PURP_2 = :insptPurp2 ) </#if>
<#if insptPurp3?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = A.REQ_NUM AND SI.INSPT_PURP_3 = :insptPurp3 ) </#if>
<#if insptMethod?has_content> AND EXISTS ( SELECT 1 FROM LRM_TEST_INFO SI WHERE SI.REQ_NUM = A.REQ_NUM AND SI.INSPT_METHOD = :insptMethod ) </#if>
   AND NOT EXISTS (
                  SELECT 1
                    FROM LRM_PROC_DESC
                   WHERE REQ_NUM = A.REQ_NUM
                     AND PROC_CLASS IN ('140')
                  )
 GROUP BY A.ACCEPT_CLASS, A.REQ_NUM, A.REQ_DATE, A.UPJANG_NM
        ]]>
    </statement>

    <!-- 상세 목록 DATA를 조회한다. -->
    <statement name="selectDetailViewList" type="select">
        /*+ com.hwfs.ls.lsm.dao.upjangTermAmtInquery.selectDetailViewList */
        <![CDATA[
/* 상세 목록 조회 */
SELECT /*+ INDEX_SS(B) INDEX_FFS(D) */
       B.REQ_DATE,
       A.REQ_NUM,
       A.ACCEPT_NUM,
       A.ACCEPTDD,
       A.SPECM_CD,                      /* 검체 코드 */
       A.SPECM_CLASS,               /* 검체 분류 */
       A.SPECM_NM,                      /* 검체명 */
       A.SPECM_TYPE,                    /* 검체유형(공전유형) */
       SCC_CODE_NM('SPECM_TYPE', A.SPECM_TYPE) AS SPECM_TYPE_NM,    /* 검체유형(공전유형)명 */
       A.MGRP_CD,                   /* 검체유형 대분류 */
       A.MCALSS_CD,                     /* 검체유형 중분류 */
       A.SCLASS_CD,                     /* 검체유형 소분류 */
       ((SELECT X.MGRP_NM FROM LCM_SPECM_TYPE_MGRP X WHERE X.SPECM_TYPE = A.SPECM_TYPE AND X.MGRP_CD = A.MGRP_CD AND X.USE_YN = 'Y') || ' / ' ||
        (SELECT X.MCALSS_NM FROM LCM_SPECM_TYPE_MCALSS X WHERE X.SPECM_TYPE = A.SPECM_TYPE AND X.MCALSS_CD = A.MCALSS_CD AND X.USE_YN = 'Y') || ' / ' ||
        (SELECT X.SCLASS_NM FROM LCM_SPECM_TYPE_SCLASS X WHERE X.SPECM_TYPE = A.SPECM_TYPE AND X.SCLASS_CD = A.SCLASS_CD AND X.USE_YN = 'Y'))
       AS SPECM_TYPE_DESC,              /* 검체 유형명 ( 대분류명 / 중분류명 / 소분류명 ) */
       A.INSPT_MTOD,                    /* 검사방법 */
       SCC_CODE_NM('INSPT_MTOD', A.INSPT_MTOD) AS INSPT_MTOD_NM,
       A.INSPT_CLASS,               /* 검사구분 */
       SCC_CODE_NM('INSPT_CLASS', A.INSPT_CLASS) AS INSPT_CLASS_NM,
       A.INSPT_PURP_1,                  /* 검사목적1 */
       SCC_CODE_NM('INSPT_PURP_1', A.INSPT_PURP_1) AS INSPT_PURP_1_NM,
       A.INSPT_PURP_2,                  /* 검사목적2 */
       SCC_CODE_NM('INSPT_PURP_2', A.INSPT_PURP_2) AS INSPT_PURP_2_NM,
       A.INSPT_PURP_3,                  /* 검사목적3 */
       SCC_CODE_NM('INSPT_PURP_3', A.INSPT_PURP_3) AS INSPT_PURP_3_NM,
       A.LONGSTORAGE_YN,                /* 장기보존여부 */
       SCC_CODE_NM('LONGSTORAGE_YN', A.LONGSTORAGE_YN) AS LONGSTORAGE_YN_NM,
       A.INSPT_OBJ_1,                   /* 검사대상1 */
       SCC_CODE_NM('INSPT_OBJ_1', A.INSPT_OBJ_1) AS INSPT_OBJ_1_NM,
       A.INSPT_OBJ_2,                   /* 검사대상2 */
       SCC_CODE_NM('INSPT_OBJ_2', A.INSPT_OBJ_2) AS INSPT_OBJ_2_NM,
       A.INSPT_OBJ_3,                   /* 검사대상3 */
       SCC_CODE_NM('INSPT_OBJ_3', A.INSPT_OBJ_3) AS INSPT_OBJ_3_NM,
       A.INSPT_OBJ_4,                   /* 검사대상4 */
       SCC_CODE_NM('INSPT_OBJ_4', A.INSPT_OBJ_4) AS INSPT_OBJ_4_NM,
       A.ORIGIN                        /* 원산지 */
     , CASE WHEN (SELECT COUNT(1) FROM LRM_TEST_INFO WHERE REQ_NUM = A.REQ_NUM) =
                 (SELECT COUNT(1) FROM LTM_TEST_DIARY WHERE REQ_NUM = A.REQ_NUM AND LAST_DECISION IS NOT NULL)
            THEN
              (SELECT TO_CHAR(MAX(UDATE), 'YYYYMMDD')
                 FROM LTM_TEST_DIARY
                WHERE REQ_NUM = A.REQ_NUM)
            ELSE
              ''
       END AS COMPLETE_DD /* 시험완료일자 */
     , (SELECT X.NM_KOR
          FROM SCC_USERINFO X
         WHERE X.SABUN = C.SABUN) AS USER_NM        /* 담당자 */
     , D.DECISION /* 판정 */
     , SCC_CODE_NM('DECISION', D.DECISION) AS DECISION_NM
     , D.LAST_DECISION  /* 최종 판정 */
     , SCC_CODE_NM('LAST_DECISION', D.LAST_DECISION) AS LAST_DECISION_NM
     , B.UPJANG_NM
     , SCC_CODE_NM('ACCEPT_CLASS', B.ACCEPT_CLASS) AS ACCEPT_CLASS
     , C.INSPT_FLD
     , SCC_CODE_NM('INSPT_FLD', C.INSPT_FLD) AS INSPT_FLD_NM    /* 검사분야 */
     , C.ARTICLE_CD
     , (SELECT ARTICLE_NM FROM LCM_TEST_ARTICLE WHERE C.ARTICLE_CD = ARTICLE_CD) AS TEST_ARTICLE_NM   /* 시험항목명 */
     , C.INSPT_METHOD
     , SCC_CODE_NM('INSPT_METHOD', C.INSPT_METHOD) AS INSPT_METHOD_NM /* 검사방법 */
     , U.PROC_CLASS AS PROGRESS_STATUS  /* 진행상태 */
     , SCC_CODE_NM('PROGRESS_STATUS', U.PROC_CLASS) AS PROGRESS_STATUS_NM /* 진행상황 */
     , C.SABUN
     , CASE WHEN U.PROC_CLASS >= '200' THEN   /* 시험완료 승인 */
          'Y'
       ELSE
          'N'
       END AS COMPLETE_YN /* 시험완료승인 */
     , C.BASIS_STAND      /* 기준규격 */
     , D.RESULT             /* 시험일지결과 */
     , (
         SELECT COUNT(1)
           FROM LEM_INSPECT_RPT_ISSUE_LOG
          WHERE REQ_NUM = A.REQ_NUM
            AND PUBLISHDD IS NOT NULL
       ) AS PUBLISH_CNT   /* 발급횟수 */
     , DECODE(B.INSPECT_RPT_ISSUE, NULL, 'N', B.INSPECT_RPT_ISSUE) AS INSPECT_RPT_ISSUE    /* 성적서 발급 여부 */
     , H.INSPT_FLD_NM || '/' || H.NOT_FIT_CLSFI_NM AS NOT_FIT_CLSFI_NM    /* 검사분야 / 부적합분류 */
     , NVL(C.LEGAL_BASIS, 'N') AS LEGAL_BASIS
     , NVL(C.INSIDE_BASIS, 'N') AS INSIDE_BASIS
     , A.DISUSE_YN      /* 폐기 여부 */
     , A.DISUSE_DATE    /* 폐기 일자 */
     , (
        SELECT NVL(SUM(DECODE(Y.COMM_1_USE_YN, 'Y', SUM(Y.COMM_1), 0)) +
                   SUM(DECODE(Y.COMM_2_USE_YN, 'Y', SUM(Y.COMM_2), 0)) +
                   SUM(DECODE(Y.COMM_3_USE_YN, 'Y', SUM(Y.COMM_3), 0)) +
                   SUM(DECODE(Y.COMM_4_USE_YN, 'Y', SUM(Y.COMM_4), 0)) +
                   SUM(DECODE(Y.COMM_5_USE_YN, 'Y', SUM(Y.COMM_5), 0)), 0)
          FROM LRM_SPECM_INFO X
             , LRM_TEST_INFO Y
             , LTM_TEST_DIARY TD
         WHERE 1 = 1
           AND X.REQ_NUM = A.REQ_NUM
           AND X.ACCEPT_NUM = A.ACCEPT_NUM
           AND X.REQ_NUM = Y.REQ_NUM
           AND X.ACCEPT_NUM = Y.ACCEPT_NUM
           --AND X.COST_CLASS = '102' -- 유상
           AND Y.REQ_NUM = C.REQ_NUM
           AND Y.ACCEPT_NUM = C.ACCEPT_NUM
           AND Y.ARTICLE_CD = C.ARTICLE_CD
           AND Y.REQ_NUM = TD.REQ_NUM(+)
           AND Y.ACCEPT_NUM = TD.ACCEPT_NUM(+)
           AND Y.ARTICLE_CD = TD.ARTICLE_CD(+)
           <#if procClass?has_content>
             <#if procClass == '101'>AND TD.LAST_DECISION IS NOT NULL</#if> /* 완료 */
             <#if procClass == '102'>AND (TD.TECHRESP_USER IS NOT NULL AND TD.LAST_DECISION IS NULL)</#if>  /* 처리중 */
             <#if procClass == '103'>
               AND NOT EXISTS (
                               SELECT 1
                                 FROM LTM_TEST_DIARY
                                WHERE TD.REQ_NUM = REQ_NUM
                                  AND TD.ACCEPT_NUM = ACCEPT_NUM
                                  AND TD.ARTICLE_CD = ARTICLE_CD
                              )
             </#if> /* 미처리 */
           </#if>
           AND Y.SABUN = C.SABUN
         GROUP BY Y.COMM_1_USE_YN, Y.COMM_2_USE_YN, Y.COMM_3_USE_YN, Y.COMM_4_USE_YN, Y.COMM_5_USE_YN
       ) AS COMM_TOT_AMT
     , SCC_CODE_NM('URGENT_YN', A.MFG_VENDOR) AS URGENT_YN  /* 긴급여부 */
FROM   LRM_SPECM_INFO A
     , LRM_TEST_REQ_ACCEPT B
     , LRM_TEST_INFO C
     , LTM_TEST_DIARY D
     , (
        SELECT PD.REQ_NUM
             , PD.PROC_USER
             , PD.PROCDD
             , PD.PROC_REASON
             , PD.PROC_CLASS
             , PD.SEQ
          FROM (
                SELECT Y.REQ_NUM
                     , Y.PROC_USER
                     , Y.PROCDD
                     , Y.PROC_REASON
                     , Y.PROC_CLASS
                     , Y.SEQ
                     , ROW_NUMBER() OVER (PARTITION BY Y.REQ_NUM ORDER BY Y.REQ_NUM, Y.SEQ DESC) AS RN
                  FROM LRM_PROC_DESC Y
               ) PD
         WHERE RN = 1
       ) U
     , (
        SELECT /*+ INDEX_SS(Y) */
               Y.REQ_NUM
             , Y.ACCEPT_NUM
             , Y.ARTICLE_CD
             , P.INSPT_FLD
             , SCC_CODE_NM('INSPT_FLD', P.INSPT_FLD) AS INSPT_FLD_NM
             , Y.LAST_DECISION
             , P.ARTICLE_NM
             , P.NOT_FIT_CLSFI
             , SCC_CODE_NM('NOT_FIT_CLSFI', P.NOT_FIT_CLSFI) AS NOT_FIT_CLSFI_NM
             , ROW_NUMBER() OVER(PARTITION BY Y.REQ_NUM, Y.ACCEPT_NUM ORDER BY Y.REQ_NUM, Y.ACCEPT_NUM, P.NOT_FIT_CLSFI DESC) AS RN
          FROM LTM_TEST_DIARY Y
             , LCM_TEST_ARTICLE P
         WHERE 1 = 1
           AND Y.ARTICLE_CD = P.ARTICLE_CD
           AND Y.LAST_DECISION <> '101'
       ) H
WHERE  1 = 1
  AND  B.REQ_NUM = :reqNum
  AND  A.REQ_NUM = B.REQ_NUM
  AND  A.REQ_NUM = C.REQ_NUM
  AND  A.ACCEPT_NUM = C.ACCEPT_NUM
  AND  A.REQ_NUM = U.REQ_NUM
  AND  C.REQ_NUM = H.REQ_NUM(+)
  AND  C.ACCEPT_NUM = H.ACCEPT_NUM(+)
  AND  C.ARTICLE_CD = H.ARTICLE_CD(+)
  AND  C.REQ_NUM = D.REQ_NUM(+)
  AND  C.ACCEPT_NUM = D.ACCEPT_NUM(+)
  AND  C.ARTICLE_CD = D.ARTICLE_CD(+)
  AND  C.SABUN = D.SABUN(+)
  <#if procClass?has_content>
    <#if procClass == '101'>AND D.LAST_DECISION IS NOT NULL</#if> /* 완료 */
    <#if procClass == '102'>AND (D.TECHRESP_USER IS NOT NULL AND D.LAST_DECISION IS NULL)</#if>  /* 처리중 */
    <#if procClass == '103'>
      AND NOT EXISTS (
                      SELECT 1
                        FROM LTM_TEST_DIARY
                       WHERE D.REQ_NUM = REQ_NUM
                         AND D.ACCEPT_NUM = ACCEPT_NUM
                         AND D.ARTICLE_CD = ARTICLE_CD
                     )
    </#if> /* 미처리 */
  </#if>
  AND  B.REQ_DATE BETWEEN :fromDay AND :toDay
<#if insptObj1?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = A.REQ_NUM AND SI.INSPT_OBJ_1 = :insptObj1 ) </#if>
<#if insptObj2?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = A.REQ_NUM AND SI.INSPT_OBJ_2 = :insptObj2 ) </#if>
<#if insptObj3?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = A.REQ_NUM AND SI.INSPT_OBJ_3 = :insptObj3 ) </#if>
<#if insptObj4?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = A.REQ_NUM AND SI.INSPT_OBJ_4 = :insptObj4 ) </#if>
<#if insptPurp1?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = A.REQ_NUM AND SI.INSPT_PURP_1 = :insptPurp1 ) </#if>
<#if insptPurp2?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = A.REQ_NUM AND SI.INSPT_PURP_2 = :insptPurp2 ) </#if>
<#if insptPurp3?has_content> AND EXISTS ( SELECT 1 FROM LRM_SPECM_INFO SI WHERE SI.REQ_NUM = A.REQ_NUM AND SI.INSPT_PURP_3 = :insptPurp3 ) </#if>
<#if insptMethod?has_content> AND EXISTS ( SELECT 1 FROM LRM_TEST_INFO SI WHERE SI.REQ_NUM = A.REQ_NUM AND SI.INSPT_METHOD = :insptMethod ) </#if>
<#if testUser?has_content>
   AND C.SABUN = :testUser
</#if>
ORDER  BY A.REQ_NUM, A.ACCEPT_NUM, C.ARTICLE_CD
        ]]>
    </statement>

</hqml>
