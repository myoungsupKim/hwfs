<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
--------------------------------------------------------------------------------------------------------
-- 선수금 발생 탭 매출 팝업
--------------------------------------------------------------------------------------------------------
 
  
 SELECT XX.occur_date, '대체' AS ALT_TYPE_NM, 
        SCC_COMMON_CODE_NAME_FUN('ADVANCE_ALT_OCCUR_CLASS',M.ADVANCE_ALT_OCCUR_CLASS) ADVANCE_ALT_OCCUR_CLASS_NM,
        M.CUST_NM, XX.OCCUR_AMT, XX.APPLY_AMT, XX.JAN_AMT, M.REMARK , M.ALT_NUM,
        SALS.SALS_CLASS,SALS.POS_NUM ,(SELECT SUBINV_NAME FROM HLDC_PO_SUBINVENTORY WHERE SUBINV_CODE = SALS.POS_NUM) AS POS_NM,  
        (SELECT SALS_TYPE_NM FROM SLA_SALES_SALS_TYPE WHERE SALS_TYPE = SALS.SALS_CLASS) SALS_TYPE 
   FROM SLA_ADVANCE_ALT_MST    M ,          -- 선수금 대체 마스터
        (
                SELECT A.OCCUR_DATE, A.OCCUR_ADVANCE_NUM, A.ADVANCE_NUM, B.ALT_NUM, A.OCCUR_AMT, 
                       B.APPLY_AMT, SUM(A.OCCUR_AMT-B.T) OVER (PARTITION BY B.ALT_NUM ORDER BY A.ADVANCE_NUM) AS JAN_AMT     
                  FROM SLA_ADVANCE_MST A,
                       (
                            SELECT RANK, ADVANCE_NUM, OCCUR_DATE, ALT_NUM, APPLY_AMT, SUM(APPLY_AMT) OVER ( PARTITION BY ADVANCE_NUM ORDER BY ALT_NUM ) AS T  FROM (
                                      SELECT ADVANCE_NUM, OCCUR_DATE, ALT_NUM, APPLY_AMT,  RANK() OVER (ORDER BY ALT_NUM ASC) RANK
                                        FROM SLA_ADVANCE_ALT_DETAIL 
                                       WHERE MU_CD = '2002'
                                         AND RECD_STATUS = 'L'
                                         AND ADVANCE_NUM = #ADVANCE_NUM#
                                          )
                       ) B
                 WHERE A.ADVANCE_NUM = B.ADVANCE_NUM
                 ORDER BY B.RANK
         ) XX,
        (SELECT DISTINCT D.SALS_CLASS,M.POS_NUM , P.EVIDENCE_1 FROM SLA_IF_UPJANG_PAYMENT P, SLA_IF_UPJANG_SALS_DETAIL D , SLA_IF_UPJANG_SALS_MST M
        WHERE P.UPJANG_CD = D.UPJANG_CD
            AND P.OCCUR_DATE = D.OCCUR_DATE
            AND P.SYS_CLASS = D.SYS_CLASS
            AND P.RECEIPT_NUM = D.RECEIPT_NUM
            AND D.UPJANG_CD = M.UPJANG_CD
            AND D.OCCUR_DATE = M.OCCUR_DATE
            AND D.SYS_CLASS = M.SYS_CLASS
            AND D.RECEIPT_NUM = M.RECEIPT_NUM
            AND P.RECD_STATUS           = 'L'
            AND D.RECD_STATUS           = 'L'
            AND M.RECD_STATUS           = 'L'
            AND P.PAY_CD IN ('P1','P2','P3') ) SALS         
  WHERE M.RECD_STATUS           = 'L'
    AND M.ALT_NUM     = XX.ALT_NUM
    AND SALS.EVIDENCE_1 IN (XX.OCCUR_ADVANCE_NUM,XX.ADVANCE_NUM)
    
    
</statement>
	<input default-name="ds_search">
		<col name="UPJANG" size="6" type="NUMERIC" description="업장코드" /> 
		<col name="DATEFR" size="255" type="VARCHAR" description="" /> 
		<col name="TM_CD" size="255" type="VARCHAR" description="" /> 
	</input>
	<output default-name="ds_list">
	</output>
</query>