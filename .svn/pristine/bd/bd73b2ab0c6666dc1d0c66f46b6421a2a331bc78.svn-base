<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="rc.sle.vanSetMgmtDAO">
	<desc>VAN 코드 등록 관리</desc>
 
	
	
	<!--  DATA를 조회한다. -->
	<statement name="selectList" type="select">
	/*+ com.hwfs.rc.sle.dao.vanSetMgmtDAO.selectList */
	<![CDATA[
 
		
		SELECT VAN.OUTLET_CD, SHOP.OUTLET_NM AS OUTLET_NM,
		       VAN.POS_NUM,   VAN.POS_NUM   AS POS_NUM_NM,
		       
		       VAN.SEQ,
		       VAN.VAN_CD,
		       VAN.TRML_ID,
		       VAN.IP,
		       VAN.PORT,
		       VAN.ALLT_BASIS_AMT,
		       VAN.SIGN_BASIS_AMT,
		       VAN.ENC_YN,
		       VAN.APPRV_LINE_CLASS,
		       VAN.CARD_DIVIDE_CNT,
		       VAN.CARD_APPRV_CNT,
		       VAN.CASH_DIVIDE_CNT,
		       VAN.CASH_APPRV_CNT,
		       DECODE(VAN.USE_YN, 'Y', 1, 0) AS USE_YN
		        
		FROM            SLE_VAN_SET   	VAN
		INNER      JOIN SLE_OUTLET_MST  SHOP   ON SHOP.OUTLET_CD   = VAN.OUTLET_CD  -- 업장 코드
		
		WHERE 1=1
		<#if useYn?has_content>         AND   VAN.USE_YN = DECODE(:useYn, '1', 'Y', VAN.USE_YN)  </#if>
		<#if outletCd?has_content>  	AND   VAN.OUTLET_CD  	= :outletCd  </#if>
	 	<#if posNum?has_content>    
	 		<#if posNum != '00'>		AND   VAN.POS_NUM      = :posNum	  </#if>  
	 	</#if>
	 	 
	 	 
		
		ORDER BY VAN.OUTLET_CD, VAN.POS_NUM, VAN.SEQ

	]]>
	</statement>
	
 
	
		
	<!--  DATA를 저장한다. -->
	<statement name="insertData" type="insert">
	/*+ com.hwfs.rc.sle.dao.vanSetMgmtDAO.insertData */
		<![CDATA[
	 INSERT INTO SLE_VAN_SET
			(
				 OUTLET_CD,
				 POS_NUM,
				 SEQ,
				 VAN_CD,
				 TRML_ID,
				 IP,
				 PORT,
				 ALLT_BASIS_AMT,
				 SIGN_BASIS_AMT,
				 ENC_YN,
				 APPRV_LINE_CLASS,
				 CARD_DIVIDE_CNT,
				 CARD_APPRV_CNT,
				 CASH_DIVIDE_CNT,
				 CASH_APPRV_CNT,
				 USE_YN,
				 CUSER,
				 CDATE,
				 UUSER,
				 UDATE
			) VALUES (
				 :outletCd,
				 :posNum,
				 :seq,
				<#if vanCd?exists> :vanCd, <#else> null, </#if>
				<#if trmlId?exists> :trmlId, <#else> null, </#if>
				<#if ip?exists> :ip, <#else> null, </#if>
				<#if port?exists> :port, <#else> null, </#if>
				<#if alltBasisAmt?exists> :alltBasisAmt, <#else> null, </#if>
				<#if signBasisAmt?exists> :signBasisAmt, <#else> null, </#if>
				<#if encYn?exists> :encYn, <#else> null, </#if>
				<#if apprvLineClass?exists> :apprvLineClass, <#else> null, </#if>
				<#if cardDivideCnt?exists> :cardDivideCnt, <#else> null, </#if>
				<#if cardApprvCnt?exists> :cardApprvCnt, <#else> null, </#if>
				<#if cashDivideCnt?exists> :cashDivideCnt, <#else> null, </#if>
				<#if cashApprvCnt?exists> :cashApprvCnt, <#else> null, </#if>
				<#if useYn?exists> DECODE(:useYn, '1', 'Y', 'N'), <#else> null, </#if>
				 :loginSabun,
				 SYSDATE,
				 :loginSabun,
				 SYSDATE
			)
		
		]]>
	</statement>
	
	<!--  DATA를 수정한다. -->
	<statement name="updateData" type="update">
	/*+ com.hwfs.rc.sle.dao.vanSetMgmtDAO.updateData */
		<![CDATA[
	 UPDATE SLE_VAN_SET SET
		<#if vanCd?exists> VAN_CD = :vanCd, </#if>
		<#if trmlId?exists> TRML_ID = :trmlId, </#if>
		<#if ip?exists> IP = :ip, </#if>
		<#if port?exists> PORT = :port, </#if>
		<#if alltBasisAmt?exists> ALLT_BASIS_AMT = :alltBasisAmt, </#if>
		<#if signBasisAmt?exists> SIGN_BASIS_AMT = :signBasisAmt, </#if>
		<#if encYn?exists> ENC_YN = :encYn, </#if>
		<#if apprvLineClass?exists> APPRV_LINE_CLASS = :apprvLineClass, </#if>
		<#if cardDivideCnt?exists> CARD_DIVIDE_CNT = :cardDivideCnt, </#if>
		<#if cardApprvCnt?exists> CARD_APPRV_CNT = :cardApprvCnt, </#if>
		<#if cashDivideCnt?exists> CASH_DIVIDE_CNT = :cashDivideCnt, </#if>
		<#if cashApprvCnt?exists> CASH_APPRV_CNT = :cashApprvCnt, </#if>
		<#if useYn?exists> USE_YN = DECODE(:useYn, '1', 'Y', 'N'), </#if>
		       UUSER = :loginSabun,
		       UDATE = SYSDATE	
	WHERE  OUTLET_CD = :outletCd
	AND    POS_NUM = :posNum
	AND    SEQ = :seq

	 
 
		]]>
	</statement>
	
	<!--  코드를 생성한다. -->
	<statement name="maxCodeCreate" type="select">
	/*+ com.hwfs.rc.sle.dao.vanSetMgmtDAO.maxCodeCreate */
		<![CDATA[
		 
		SELECT  NVL(MAX(SEQ),'0') + 1 AS MAX_CODE
 		FROM SLE_VAN_SET
 		WHERE  OUTLET_CD = :outletCd
		  AND  POS_NUM = :posNum
 
		]]>
	</statement>
	 
</hqml>	