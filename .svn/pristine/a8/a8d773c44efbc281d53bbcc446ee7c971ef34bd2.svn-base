<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="sc.app.recipeDAO">
	<desc>FC POS 마스터 외부 인터페이스 HQML</desc>









	<statement name="selectTest"><![CDATA[SELECT '1' AS CHECK_NUM
  FROM DUAL]]></statement>
	<statement name="logInsert"><![CDATA[INSERT INTO APP_INTERFACE_LOG(
INSDT,
TXID,
TXDIV,
TXHEADER,
TXDATA,
TXRESULT)
VALUES(
TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS'),
<#if txId?has_content >:txId,<#else>null,</#if> 
<#if txDiv?has_content >:txDiv,<#else>null,</#if> 
<#if tHeader?has_content >:tHeader,<#else>null,</#if> 
<#if tData?has_content >:tData,<#else>null,</#if> 
<#if tResult?has_content >:tResult<#else>null</#if> 
)]]></statement>
	<statement name="selectNewRecipeInfo"><![CDATA[
SELECT PR_NUM,
       PR_ID,
       ITEM_CODE,
       ITEM_NAME,
       ITEM_CLASS4,
       DUTY_YN,
       PB_YN,
       MANUF_YN,
       ECO_ITEM_YN,
       NPB_YN,
       ITEM_SIZE,
       PO_UOM,
       KG_QTY,
--       ONHAND_QTY,
--       CANCEL_PR_QTY,
       G_ITEM_PRICE,
       TAX_CODE,
       CENTER_FLAG,
       REMARK,
       POINT_FLAG,
       SUBINV_CODE,
       NEED_DATE,
       UPJANG,
       DEPT_ID,
       ACCTCD,
       BUD_CLS,
       MU_CD,
       INVAT_FLAG,
       OUTVAT_FLAG,
       MIN_ORD_QTY,
       MAX_ORD_QTY,
       CENTER_CODE,
       STOCK_FLAG,
       BARCODE,
       MULTIPLIER_QTY,
       BUDDEPT_ID,
       USE_YN,
       MARGIN_PRICE,
       UNIT_PRICE,
       CUSTCD,
       KG_CONVERT_RATE,
       MARGIN_RATE,
       AP_UNITPRICE_UPJANG,
       RESTRICT_PERIOD,
       RESTRICT_REASON,
       DUTY_END_DATE,
       MIN_DUTY_QTY,
       DUTY_QTY,
       REAL_USE_QTY,
       DUP_YN,
       SHP_MAP,
       MTG_UNS,
       MTG_STP,
       REQ_WKD,
       SCH,
       D_DAY,
       D_DAY_TXT,
       D_DAYS,
       D_TIMES,
       SPICE_YN,
       CORN_YN,
       IMG_PATH,
       ORIGIN_NAT,
       ORIGIN_TYPE,
       VD_SN,
       APPLY_SD,
       MOBILE_GUBUN,
       AGG_QTY,
       UPJANG_GRP,
       IS_ENF,
       IS_REC,
       CHEAP_YN,
       LINE_STATUS,
       MD_NAME,
       CASE WHEN SHP_MAP = 'N' THEN '단가계약 안됨'
            WHEN MTG_UNS = 'N' THEN '불용자재'
            WHEN MTG_STP = 'N' THEN '중지자재'
            WHEN REQ_WKD = 'N' THEN '요일제한'
            WHEN LENGTH(RESTRICT_PERIOD)>0 THEN '금지자재('||RESTRICT_PERIOD||','||RESTRICT_REASON||')'
            WHEN SCH = 'N' THEN '수발주제한'
            ELSE PR_REMARK END AS PR_REMARK,
       CASE WHEN SHP_MAP = 'N' OR REQ_WKD = 'N' OR SCH = 'N' THEN 'A'
            WHEN MTG_UNS = 'N' OR MTG_STP = 'N' THEN 'B'
            WHEN LENGTH(RESTRICT_PERIOD)>0 THEN 'C'
            ELSE 'Y' END AS PR_YN,
       CASE WHEN SHP_MAP = 'N' OR REQ_WKD = 'N' OR SCH = 'N' OR MTG_UNS = 'N' OR MTG_STP = 'N' OR LENGTH(RESTRICT_PERIOD)>0 THEN 0
            ELSE PR_QTY END AS PR_QTY,
       TT.MARGIN_PRICE * TT.PR_QTY AS TOT_AMT
FROM (
            SELECT
                   '' AS PR_NUM
                 , '' AS PR_ID
                 , A.ITEM_CODE
                 , A.ITEM_NAME
                 , A.ITEM_CLASS4
                 , A.DUTY_YN
                 , A.PB_YN
--                 , A.MANUF_CD AS MANUF_YN
                 , CASE WHEN LENGTH(TRIM(A.MANUF_CD)) > 0 AND TRIM(A.MANUF_CD) <> '해당없음' THEN 'Y' ELSE 'N' END AS MANUF_YN
                 , CASE WHEN LENGTH(TRIM(A.ECO_ITEM)) > 0 AND TRIM(A.ECO_ITEM) <> '해당없음' THEN 'Y' ELSE 'N' END AS ECO_ITEM_YN
                 , A.NPB_YN
                 , A.ITEM_SIZE
                 , A.PO_UOM
                 , ROUND(NVL(A.EXPECT_GRAM_QTY / 1000 / A.KG_CONVERT_RATE, 2), 2) KG_QTY
--                 , FSP_TRANS_QTY_FUN(:prDate, A.SUBINV_CODE, A.ITEM_CODE) AS ONHAND_QTY
--                 , 0 AS CANCEL_PR_QTY
                 , NVL(LEAST(
                         DECODE(NVL(A.MAX_ORD_QTY, 0), 0, 9999999999999, A.MAX_ORD_QTY),
                         DECODE(SIGN(SCC_CEIL(A.EXPECT_GRAM_QTY / 1000 / A.KG_CONVERT_RATE, -1) - A.MIN_ORD_QTY), -1,
                         DECODE(A.POINT_FLAG, 'N', CEIL(A.MIN_ORD_QTY), A.MIN_ORD_QTY),
                         DECODE(A.POINT_FLAG, 'N', CEIL(A.EXPECT_GRAM_QTY / 1000 / A.KG_CONVERT_RATE),
                         DECODE(A.MULTIPLIER_QTY, 0, SCC_CEIL(A.EXPECT_GRAM_QTY / 1000 / A.KG_CONVERT_RATE,-1),
                                CASE WHEN MOD(SCC_CEIL(A.EXPECT_GRAM_QTY / 1000 / A.KG_CONVERT_RATE, -1), A.MULTIPLIER_QTY) > 0 THEN
                                          (TRUNC(SCC_CEIL(A.EXPECT_GRAM_QTY / 1000 / A.KG_CONVERT_RATE,-1) / A.MULTIPLIER_QTY) * A.MULTIPLIER_QTY) + A.MULTIPLIER_QTY
                                     ELSE
                                          SCC_CEIL(A.EXPECT_GRAM_QTY / 1000 / A.KG_CONVERT_RATE, -1)
                                END) ) ) ), 0) AS PR_QTY
                 , 0 AS TOT_AMT       /* TOT_AMT = MARGIN_PRICE * PR_QTY (화면에서 계산) */
                 , NVL(A.G_ITEM_PRICE, 0) AS G_ITEM_PRICE /* g당 단가 = 출하율적용단가 / Kg 환산율 / 1000 */
                 , A.TAX_CODE
                 , A.CENTER_FLAG
                 , A.PR_REMARK
                 , A.REMARK
                 , A.POINT_FLAG
                 , A.SUBINV_CODE
                 , A.NEED_DATE
                 , A.UPJANG
                 , B.DEPT_ID
                 , A.ACCTCD         /* 입고 계정 코드(대표) : MATERIAL_ACCTCD */
                 , A.BUD_CLS        /* 예산 조직 cc 코드 : BUDCC_CD */
                 , B.MU_CD
                 , A.INVAT_FLAG
                 , A.OUTVAT_FLAG
                 , A.MIN_ORD_QTY AS MIN_ORD_QTY
                 , A.MAX_ORD_QTY AS MAX_ORD_QTY
                 , A.CENTER_CODE      /* 센터코드 */
                 , A.STOCK_FLAG
                 , A.BARCODE
                 , NVL(A.MULTIPLIER_QTY, 0) AS MULTIPLIER_QTY
                 , A.BUD_CLS AS BUDDEPT_ID  /* 예산 조직 cc 코드 : BUDCC_CD - 고도화에서 부서코드가 CC로 대체됨 */
                 , A.USE_YN
                 , NVL(TO_NUMBER(DECODE(A.MARGIN_RATE, 0, A.UNIT_PRICE, (ROUND((A.UNIT_PRICE + (A.UNIT_PRICE * A.MARGIN_RATE / 100)) / 10) * 10))), 0)  AS MARGIN_PRICE /* 출하율적용단가 */
                 , NVL(A.UNIT_PRICE, 0) AS UNIT_PRICE       /* 구매(매입)단가 */
                 , A.CUSTCD           /* 매입거래처코드 */
                 , NVL(A.KG_CONVERT_RATE, 0) AS KG_CONVERT_RATE
                 , NVL(A.MARGIN_RATE, 0) AS MARGIN_RATE
                 , A.AP_UNITPRICE_UPJANG
                 , D.RESTRICT_PERIOD
                 , D.RESTRICT_REASON
                 , NULL DUTY_END_DATE
                 , 0 MIN_DUTY_QTY
                 , 0 DUTY_QTY
                 , 0 REAL_USE_QTY
                 , 'N' DUP_YN
                 , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_SHP_MAP('100', 'HFC', F.OPER_ORG_SN_PURC, A.UPJANG_GRP, A.ITEM_CODE, A.NEED_DATE)    = 'CK' THEN 'Y' ELSE 'N' END
                                                                AS SHP_MAP  /* 자재 업장군 맵핑 유효성 체크 CE : 맵핑안되어있음(사용불가), CK : 맵핑되어있음(사용가능) */
                 , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_MTG_UNS('100', A.ITEM_CODE) = 'UP' THEN 'Y' ELSE 'N' END
                                                                AS MTG_UNS      /* 자재불용체크 UK: 불용, UP:불용아님, NN: DATA NOT FOUND */
                 , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_MTG_STP('100', A.ITEM_CODE, '01') = 'TP' THEN 'Y' ELSE 'N' END
                                                                AS MTG_STP      /* 자재 중지체크 TK : 중지(사용불가), TP : 중지아님(사용가능), NN: DATA NOT FOUND */
                 , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_REQ_WKD('100', 'HFC', F.OPER_ORG_SN_PURC, A.ITEM_CODE, A.VD_SN, '01', A.NEED_DATE) = 'XR' THEN 'Y' ELSE 'N' END
                                                                AS REQ_WKD      /* 요일별 신청불가 체크 XE : 신청불가(사용불가), XR : 신청가능(사용가능), NN : DATA NOT FOUND */
                 , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_SCH('100', 'HFC', F.OPER_ORG_SN_PURC, A.ITEM_CODE, A.VD_SN, '01', NVL(C.D_DAY, 0), NVL(C.D_TIMES, 0), :prDate, A.NEED_DATE) = 'HK' THEN 'Y' ELSE 'N' END
                                                                AS SCH          /* 수발주 스케쥴에 따른 유효성 체크 HE : 신청불가(사용불가), HK : 신청가능(사용가능), NN : DATA NOT FOUND */
                 , NVL(C.D_DAYS, 0) AS D_DAY
            	  ,	''	AS D_DAY_TXT
                 , DECODE(C.D_DAYS,NULL,   0, DECODE(SIGN(TO_DATE(A.NEED_DATE, 'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - NVL(C.D_DAYS,0) ) , 0,
                                              DECODE(SIGN(DECODE(C.D_TIMES, '', 24, 0, 24, C.D_TIMES) - TO_NUMBER(TO_CHAR(SYSDATE, 'HH24'))), 1, 0, 1), 0) + NVL(C.D_DAYS, 0) ) AS D_DAYS
                 , DECODE(C.D_DAYS,NULL,   0, DECODE(C.D_TIMES, '', 24, 0, 24, C.D_TIMES)) AS D_TIMES
                 , A.SPICE_YN
                 , A.CORN_YN
                 , A.IMG_PATH
                 , A.ORIGIN_NAT
                 , A.ORIGIN_TYPE
                 , A.VD_SN
                 , A.APPLY_SD
                 , 'M' AS MOBILE_GUBUN
                 , SCC_SOPR_AGG_FUN(A.SUBINV_CODE, A.ITEM_CODE, 1) AS AGG_QTY
                 , A.UPJANG_GRP
                 , NVL(A.IS_ENF, 0) AS IS_ENF
                 , NVL(A.IS_REC, 0) AS IS_REC
                 , CASE WHEN G.G_PRICE < A.G_ITEM_PRICE THEN 'Y' ELSE 'N' END AS CHEAP_YN
                 , '001' AS LINE_STATUS
                , (SELECT UR.USR_NM FROM EPROCUSR.ESMVDOG OG, EPROCUSR.ESAUSER UR WHERE OG.SYS_ID = UR.SYS_ID AND OG.COMP_CD = UR.COMP_CD AND OG.OPER_ORG_SN = '414' AND OG.VD_SN = A.VD_SN AND OG.HFC_CHR_ID = UR.USR_ID) AS MD_NAME	/*담당MD*/
              FROM (
                    SELECT /*+ USE_HASH(A C) */ A.ITEM_CODE                        AS ITEM_CODE
                         , A.UPJANG
                         , A.UPJANG                           AS AP_UNITPRICE_UPJANG
                         , A.IS_ENF
                         , A.IS_REC
                         , A.NEED_DATE
                         , A.CAFE_YN
                         , A.SUBINV_CODE
                         , A.EXPECT_GRAM_QTY
                         , C.PROC_TYP_CD                      AS CENTER_FLAG
                         , C.CENTER_CODE                      AS CENTER_CODE      /* 센터코드 */
                         , C.CONTRACT_PRICE                   AS UNIT_PRICE        /* 구매(매입)단가 */
                         , ROUND(NVL(DECODE(C.MARGIN_RATE, 0, C.CONTRACT_PRICE, ROUND((C.CONTRACT_PRICE + (C.CONTRACT_PRICE * C.MARGIN_RATE / 100)) / 10) * 10) / NVL(D.KG_CONVERT_RATE, 1) / 1000, 0), 2) AS G_ITEM_PRICE
                         , C.CUSTCD
                         , C.MARGIN_RATE
                         , C.DUTY_YN
                         , C.PB_YN
                         , C.NPB_YN
                         , C.VD_SN
                         , C.APPLY_SD
                         , C.UPJANG_GRP
                         , D.ITEM_CLASS4
                         , D.ITEM_NAME
                         , D.ITEM_SIZE
                         , D.PO_UOM
                         , D.POINT_FLAG
                         , D.TAX_CODE
                         , NVL(D.MIN_ORD_QTY, 0) AS MIN_ORD_QTY
                         , NVL(D.MAX_ORD_QTY, 0) AS MAX_ORD_QTY
                         , D.BARCODE
                         , D.MULTIPLIER_QTY
                         , D.USE_YN
                         , NVL(D.KG_CONVERT_RATE, 1)          AS KG_CONVERT_RATE
                         , D.SPICE_YN
                         , D.CORN_YN
                         , D.IMG_PATH
                         , D.ORIGIN_NAT
                         , D.ORIGIN_TYPE
                         , D.MANUF_CD
                         , D.ECO_ITEM
                         , ''                                 AS PR_REMARK
                         , ''                                 AS REMARK
                         , E.INVAT_FLAG
                         , E.OUTVAT_FLAG
                         , E.STOCK_FLAG
                         , E.MATERIAL_ACCTCD                  AS ACCTCD
                         , E.BUDCC_CD                         AS BUD_CLS
                    FROM
                         (
                          SELECT /*+ ORDERED INDEX(ID FSM_REAL_RECIPE_ITEM_IDX01) */
                                 ID.ITEM_CODE
                               , ID.UPJANG
                               , MAX(ID.ATTR10)  AS IS_ENF  /* 그룹레시피 필수자재 여부 */
                               , MAX(ID.ATTR02)  AS IS_REC  /* 권장메뉴 대표자재 여부 */
                               , ID.NEED_DATE
                               , MAX(IB.CAFE_YN) AS CAFE_YN
                               , IB.SUBINV_CODE
                               , SUM(DECODE(IB.CATER_YN, 'Y', IC.EXPECT_SALE_QTY, DECODE(IB.CAFE_YN, 'Y', IC.EXPECT_SALE_QTY, IA.EXPECT_MEAL_QTY)) * ID.NEED_QTY)
                                                 AS EXPECT_GRAM_QTY
                            FROM FSM_REAL_RECIPE_ITEM ID
                               , FSM_REAL_RECIPE_MST  IC
                               , FSM_REAL_MENU_MST    IA
                               , FSA_HALL_MST         IB
                           WHERE IA.UPJANG      = IB.UPJANG
                             AND IA.HALL_CD     = IB.HALL_CD
                             AND IA.SUBINV_CODE = IB.SUBINV_CODE
                             AND IA.SUBINV_CODE = :subinvCd
                             AND IA.UPJANG      = IC.UPJANG
                             AND IA.MENU_CD     = IC.MENU_CD
                             AND ID.UPJANG      = IC.UPJANG
                             AND ID.MENU_CD     = IC.MENU_CD
                             AND ID.RECIPE_CD   = IC.RECIPE_CD
                             AND ID.NEED_DATE   = :needDate
                             AND ID.UPJANG      = :upjangCd
                             AND ID.ORDER_YN    = 'N'
                           GROUP BY ID.ITEM_CODE
                                  , ID.UPJANG
                                  , ID.NEED_DATE
                                  , IB.SUBINV_CODE
                         ) A
                       , (
                          SELECT ITEM_CODE
                               , PROC_TYP_CD
                               , CENTER_CODE
                               , CONTRACT_PRICE
                               , CUSTCD
                               , MARGIN_RATE
                               , DUTY_YN
                               , PB_YN
                               , NPB_YN
                               , VD_SN
                               , APPLY_SD
                               , UPJANG_GRP
                            FROM HLDC_PO_CONTRACT_F
                           WHERE CENTER_CODE = :centerCd
                             AND UPJANG = :upjangCd
                             AND :needDate BETWEEN CONTRACT_START AND CONTRACT_END
                             AND USE_YN = 'Y'
                             AND USE_TYPE = '01'
                         ) C
                       , HLDC_PO_ITEM_MST     D
                       , HLDC_PO_SUBINVENTORY E
                   WHERE A.ITEM_CODE   = C.ITEM_CODE (+)
                     AND A.ITEM_CODE   = D.ITEM_CODE
                     AND A.UPJANG      = E.UPJANG
                     AND A.SUBINV_CODE = E.SUBINV_CODE
<#if orgPrNum?has_content>
                     AND NOT EXISTS (SELECT 1 FROM SO_PR_MENU_LOG Z WHERE Z.PR_NUM = :orgPrNum AND Z.ITEM_CODE = A.ITEM_CODE)
</#if>
                   ) A
                 , SCO_UPJANG_MST_V B
                 ,(SELECT A.CENTER_CODE
                        , A.ITEM_CODE
                        ,(SELECT TO_DATE(:needDate,'YYYYMMDD') - TO_DATE(Z.NONHOLI_DATE,'YYYYMMDD')
                            FROM (SELECT ROW_NUMBER() OVER(ORDER BY Z.CD_SY||Z.CD_SM||Z.CD_SD DESC) AS SEQ
                                       , Z.CD_SY||Z.CD_SM||Z.CD_SD AS NONHOLI_DATE
                                    FROM SCC_CALENDA_DATA Z
                                   WHERE Z.CD_SY||Z.CD_SM||Z.CD_SD < :needDate
                                     AND Z.CD_SY BETWEEN TO_NUMBER(SUBSTR(:needDate, 1, 4)) - 1 AND TO_NUMBER(SUBSTR(:needDate, 1, 4))
                                  -- AND Z.HOLIDAY NOT IN (1,2) --일요일 제외한 국가 공휴일 (일요일만 체크, 그 외 공유일은 상관없음(김진희))
                                     AND Z.CD_WEEK NOT IN ('일')) Z
                           WHERE Z.SEQ = A.D_DAYS ) AS D_DAYS
                         , A.D_DAYS  AS D_DAY
                         , A.D_TIMES
                      FROM HLDC_PO_PREORDER_LIST A
                     WHERE A.CENTER_CODE = :centerCd
                   ) C                      /* 선발주 제한 */
                 , (
                    SELECT UPJANG
                         , ITEM_CODE
                         , TO_CHAR(TO_DATE(RESTRICT_START, 'YYYYMMDD'), 'YYYY.MM.DD') || '~' || TO_CHAR(TO_DATE(RESTRICT_END, 'YYYYMMDD'), 'YYYY.MM.DD') AS RESTRICT_PERIOD
                         , RESTRICT_REASON
                      FROM FSI_RESTRICT_SET
                     WHERE UPJANG = :upjangCd
                       AND (RESTRICT_START <=:needDate AND RESTRICT_END >=:needDate)
                       AND NOT (CNL_START IS NOT NULL AND CNL_START  <=:needDate AND CNL_END      >=:needDate)
                       AND USE_YN = 'Y'
                   ) D                      /* 금지자재 */
                , VO_CENTER F
                , (
                   SELECT ITEM_CLASS4, MIN(G_PRICE) AS G_PRICE
                     FROM (
                           SELECT C.ITEM_CLASS4
                                , ROUND(DECODE(B.MARGIN_RATE, 0, B.CONTRACT_PRICE, (ROUND((B.CONTRACT_PRICE + (B.CONTRACT_PRICE * B.MARGIN_RATE / 100)) / 10) * 10)) / DECODE(C.KG_CONVERT_RATE, 0, 1, C.KG_CONVERT_RATE) / 1000, 2) G_PRICE
                             FROM ST_UPJANG A
                                , HLDC_PO_CONTRACT_F B
                                , HLDC_PO_ITEM_MST C
                            WHERE B.ITEM_CODE = C.ITEM_CODE
                              AND B.USE_YN    = 'Y'
                              AND B.CONTRACT_PRICE > 0
                              AND B.UPJANG    = A.AP_UNITPRICE_UPJANG
                              AND A.UPJANG    = :upjangCd
                              AND :needDate BETWEEN B.CONTRACT_START AND B.CONTRACT_END
                           )
                    GROUP BY ITEM_CLASS4
                  ) G
             WHERE 1=1
               AND A.UPJANG      = :upjangCd
               AND A.UPJANG      = B.UPJANG
               AND A.CENTER_CODE = C.CENTER_CODE(+)
               AND A.ITEM_CODE   = C.ITEM_CODE  (+)
               AND A.ITEM_CODE   = D.ITEM_CODE  (+)
               AND A.UPJANG      = D.UPJANG     (+)
               AND A.CENTER_CODE = F.CENTER_CODE(+)
               AND A.ITEM_CLASS4 = G.ITEM_CLASS4(+)
			   AND NOT EXISTS (SELECT 'x'
			                     FROM SO_PR
			                    WHERE ORG_PR_NUM  = ''
			                      AND LINE_STATUS NOT IN('999', '003', 'PD')
			                      AND ITEM_CODE = A.ITEM_CODE)
             ORDER BY A.ITEM_CLASS4, A.ITEM_NAME, A.ITEM_CODE
) TT
		]]></statement>
	<statement name="selectDuplRecipeItem"><![CDATA[
SELECT A.ITEM_CODE
     , A.UPJANG
     , A.IS_ENF
     , A.NEED_DATE
     , A.SUBINV_CODE
     , ROUND(NVL(A.EXPECT_GRAM_QTY / 1000 / C.KG_CONVERT_RATE, 2), 2) AS KG_QTY
  FROM (
        SELECT /*+ ORDERED INDEX(ID FSM_REAL_RECIPE_ITEM_IDX01) */
               ID.ITEM_CODE
             , ID.UPJANG
             , MAX(ID.ATTR10)  AS IS_ENF  /* 그룹레시피 필수자재 여부 */
             , ID.NEED_DATE
             , MAX(IB.CAFE_YN) AS CAFE_YN
             , IB.SUBINV_CODE
             , SUM(DECODE(IB.CATER_YN, 'Y', IC.EXPECT_SALE_QTY, DECODE(IB.CAFE_YN, 'Y', IC.EXPECT_SALE_QTY, IA.EXPECT_MEAL_QTY)) * ID.NEED_QTY)
                               AS EXPECT_GRAM_QTY
          FROM FSM_REAL_RECIPE_ITEM ID
             , FSM_REAL_RECIPE_MST  IC
             , FSM_REAL_MENU_MST    IA
             , FSA_HALL_MST         IB
         WHERE IA.UPJANG      = IB.UPJANG
           AND IA.HALL_CD     = IB.HALL_CD
           AND IA.SUBINV_CODE = IB.SUBINV_CODE
           AND IA.SUBINV_CODE = :subinvCd
           AND IA.UPJANG      = IC.UPJANG
           AND IA.MENU_CD     = IC.MENU_CD
           AND ID.UPJANG      = IC.UPJANG
           AND ID.MENU_CD     = IC.MENU_CD
           AND ID.RECIPE_CD   = IC.RECIPE_CD
           AND ID.NEED_DATE   = :needDate
           AND ID.UPJANG      = :upjangCd
           AND ID.ORDER_YN    = 'N'
         GROUP BY ID.ITEM_CODE
                , ID.UPJANG
                , ID.NEED_DATE
                , IB.SUBINV_CODE
       ) A
     , (
           SELECT ITEM_CODE
            FROM SO_PR
           WHERE ORG_PR_NUM  = :orgPrNum
             AND LINE_STATUS NOT IN('999', '003', 'PD')
       ) B
     , HLDC_PO_ITEM_MST C
 WHERE A.ITEM_CODE = B.ITEM_CODE
   AND A.ITEM_CODE = C.ITEM_CODE
		]]></statement>
	<statement name="selectPrRecipeInfo"><![CDATA[
/* 신청내역 조회 */
SELECT PR_NUM,
       ORG_PR_NUM,
       PR_ID,
       ITEM_CODE,
       ITEM_NAME,
       ITEM_CLASS3,
       ITEM_CLASS4,
       DUTY_YN,
       PB_YN,
       MANUF_YN,
       ECO_ITEM_YN,
       NPB_YN,
--       FEATURE_NAME,
       ITEM_SIZE,
       PO_UOM,
       KG_QTY,
--       ONHAND_QTY,
--       CANCEL_PR_QTY,
       PR_QTY,
       G_ITEM_PRICE,
       TAX_CODE,
       CENTER_FLAG,
       REMARK,
       POINT_FLAG,
       SUBINV_CODE,
       NEED_DATE,
       UPJANG,
       DEPT_ID,
       ACCTCD,
       BUD_CLS,
       MU_CD,
       INVAT_FLAG,
       OUTVAT_FLAG,
       MIN_ORD_QTY,
       MAX_ORD_QTY,
       CENTER_CODE,
       STOCK_FLAG,
       BARCODE,
       MULTIPLIER_QTY,
       BUDDEPT_ID,
       USE_YN,
       MARGIN_PRICE,
       UNIT_PRICE,
       CUSTCD,
       KG_CONVERT_RATE,
       MARGIN_RATE,
       AP_UNITPRICE_UPJANG,
       RESTRICT_PERIOD,
       RESTRICT_REASON,
       DUTY_END_DATE,
       MIN_DUTY_QTY,
       DUTY_QTY,
       REAL_USE_QTY,
       DUP_YN,
       SHP_MAP,
       MTG_UNS,
       MTG_STP,
       REQ_WKD,
       SCH,
       D_DAY,
       D_DAY_TXT,
       D_DAYS,
       D_TIMES,
       SPICE_YN,
       CORN_YN,
       IMG_PATH,
       ORIGIN_NAT,
       ORIGIN_TYPE,
       VD_SN,
       APPLY_SD,
       MOBILE_GUBUN,
       AGG_QTY,
       UPJANG_GRP,
       IS_ENF,
       IS_REC,
       CHEAP_YN,
       LINE_STATUS,
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FM0037' AND CODE = TT.LINE_STATUS) AS PO_LINE_STATUS,
       MD_NAME,
       CASE WHEN SHP_MAP = 'N' THEN '단가계약 안됨'
            WHEN MTG_UNS = 'N' THEN '불용자재'
            WHEN MTG_STP = 'N' THEN '중지자재'
            WHEN REQ_WKD = 'N' THEN '요일제한'
            WHEN LENGTH(RESTRICT_PERIOD)>0 THEN '금지자재('||RESTRICT_PERIOD||','||RESTRICT_REASON||')'
            WHEN SCH = 'N' THEN '수발주제한'
            ELSE PR_REMARK END AS PR_REMARK,
       CASE WHEN SHP_MAP = 'N' OR REQ_WKD = 'N' THEN 'A'
            WHEN MTG_UNS = 'N' OR MTG_STP = 'N' THEN 'B'
            WHEN LENGTH(RESTRICT_PERIOD)>0 THEN 'C'
            WHEN SCH = 'N' THEN 'D'
            ELSE 'Y' END AS PR_YN,
       TT.MARGIN_PRICE * TT.PR_QTY AS TOT_AMT
    FROM(
		SELECT
		      	/*+ USE_HASH(A D E G) PUSH_PRED(C) */
		      A.PR_NUM
		     , A.ORG_PR_NUM
			  ,	A.PR_ID
			  ,	A.ITEM_CODE
			  ,	A.ITEM_NAME
			  ,	A.ITEM_CLASS3
			  ,	A.ITEM_CLASS4
              , FSI_DUTY_ITEM_YN(A.CENTER_CODE, A.CUSTCD, A.ITEM_CODE, :needDate) AS DUTY_YN
              , A.PB_YN
--              , A.MANUF_CD AS MANUF_YN
              , CASE WHEN LENGTH(TRIM(A.MANUF_CD)) > 0 AND TRIM(A.MANUF_CD) <> '해당없음' THEN 'Y' ELSE 'N' END AS MANUF_YN
              , CASE WHEN LENGTH(TRIM(A.ECO_ITEM)) > 0 AND TRIM(A.ECO_ITEM) <> '해당없음' THEN 'Y' ELSE 'N' END AS ECO_ITEM_YN
              , A.NPB_YN
--			  ,	FN_ITEM_FEATURE_ICON(FSI_DUTY_ITEM_YN(A.CENTER_CODE, A.CUSTCD, A.ITEM_CODE, :needDate),	A.PB_YN, A.ECO_ITEM, A.MANUF_CD) AS	FEATURE_NAME
			  ,	A.ITEM_SIZE
			  ,	A.PO_UOM
			  ,	A.MENU_QTY AS KG_QTY
--			  ,	FSP_TRANS_QTY_FUN(:prDate, :subinvCd, A.ITEM_CODE) AS ONHAND_QTY
--			  ,	0 AS CANCEL_PR_QTY
			  ,	NVL(A.PR_QTY, 0) AS PR_QTY
			  ,	0 AS TOT_AMT
			  ,	ROUND(NVL(A.MARGIN_PRICE / A.KG_CONVERT_RATE / 1000, 0)) AS	G_ITEM_PRICE /*	g당	단가 = 출하율적용단가 /	Kg 환산율 /	1000 */
			  ,	A.TAX_CODE
			  ,	A.CENTER_FLAG
			  ,	A.PR_REMARK
			  ,	A.REMARK
			  ,	A.POINT_FLAG
			  ,	:subinvCd AS SUBINV_CODE
			  ,	:needDate AS NEED_DATE
			  ,	A.UPJANG
			  ,	B.DEPT_ID
			  ,	A.ACCTCD		 /*	입고 계정 코드(대표)  MATERIAL_ACCTCD */
			  ,	A.BUD_CLS		 /*	예산 조직 cc 코드 	BUDCC_CD */
			  ,	B.MU_CD
			  ,	A.INVAT_FLAG
			  ,	A.OUTVAT_FLAG
			  ,	A.MIN_ORD_QTY
			  ,	A.MAX_ORD_QTY
			  ,	A.CENTER_CODE	   /* 센터코드 */
			  ,	A.STOCK_FLAG
			  ,	A.BARCODE
			  ,	NVL(A.MULTIPLIER_QTY, 0) AS	MULTIPLIER_QTY
			  ,	A.BUD_CLS AS BUDDEPT_ID	 /*	예산 조직 cc 코드 	BUDCC_CD - 고도화에서 부서코드가 CC로 대체됨 */
			  ,	A.USE_YN
			  ,	NVL(A.MARGIN_PRICE,	0) AS MARGIN_PRICE	   /* 출하율적용단가 */
			  ,	A.UNIT_PRICE	   /* 구매(매입)단가 */
			  ,	A.CUSTCD		   /* 매입거래처코드 */
			  ,	A.KG_CONVERT_RATE
			  ,	A.MARGIN_RATE
			  ,	A.AP_UNITPRICE_UPJANG
			  ,	D.RESTRICT_PERIOD
			  ,	D.RESTRICT_REASON
			  ,	NULL DUTY_END_DATE
			  ,	0 MIN_DUTY_QTY
			  ,	0 DUTY_QTY
			  ,	0 REAL_USE_QTY
			  ,	'N' DUP_YN
			  ,	CASE WHEN EPROCUSR.FN_ITEM_PROCURE_SHP_MAP('100', 'HFC', F.OPER_ORG_SN_PURC, A.UPJANG_GRP, A.ITEM_CODE,	:needDate)	= 'CK' THEN	'Y'	ELSE 'N' END
															 AS	SHP_MAP	 /*	자재 업장군	맵핑 유효성	체크 CE	- 맵핑안되어있음(사용불가),	CK - 맵핑되어있음(사용가능)	*/
			  ,	CASE WHEN EPROCUSR.FN_ITEM_PROCURE_MTG_UNS('100', A.ITEM_CODE) = 'UP' THEN 'Y' ELSE	'N'	END
															 AS	MTG_UNS		 /*	자재불용체크 UK- 불용, UP-불용아님,	NN-	DATA NOT FOUND */
			  ,	CASE WHEN EPROCUSR.FN_ITEM_PROCURE_MTG_STP('100', A.ITEM_CODE, '01') = 'TP'	THEN 'Y' ELSE 'N' END
															 AS	MTG_STP		 /*	자재 중지체크 TK - 중지(사용불가), TP -	중지아님(사용가능),	NN-	DATA NOT FOUND */
			  ,	CASE WHEN EPROCUSR.FN_ITEM_PROCURE_REQ_WKD('100', 'HFC', F.OPER_ORG_SN_PURC, A.ITEM_CODE, A.VD_SN, '01', :needDate) = 'XR' THEN 'Y' ELSE	'N'	END
															 AS	REQ_WKD		 /*	요일별 신청불가	체크 XE	- 신청불가(사용불가), XR - 신청가능(사용가능), NN -	DATA NOT FOUND */
			  ,	CASE WHEN EPROCUSR.FN_ITEM_PROCURE_SCH('100', 'HFC', F.OPER_ORG_SN_PURC, A.ITEM_CODE, A.VD_SN, '01', NVL(C.D_DAY, 0), NVL(C.D_TIMES, 0), TO_CHAR(SYSDATE, 'YYYYMMDD'), :needDate)	= 'HK' THEN	'Y'	ELSE 'N' END
															 AS	SCH			 /*	수발주 스케쥴에	따른 유효성	체크 HE	- 신청불가(사용불가), HK - 신청가능(사용가능), NN -	DATA NOT FOUND */
			  ,	NVL(C.D_DAYS,0)	AS D_DAY
			  ,	''	AS D_DAY_TXT
			  ,	DECODE(C.D_DAYS,NULL,	0, DECODE(SIGN(TO_DATE(:needDate,	'YYYYMMDD')	- TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'),	'YYYYMMDD')	- NVL(C.D_DAYS,0) -	1) , 0,
										   DECODE(SIGN(DECODE(C.D_TIMES, '', 24, 0,	24,	C.D_TIMES) - TO_NUMBER(TO_CHAR(SYSDATE,	'HH24'))), 1, 0, 1), 0)	+ NVL(C.D_DAYS,	0))	AS D_DAYS
			  ,	DECODE(C.D_DAYS,NULL,	0, DECODE(C.D_TIMES, '', 24, 0,	24,	C.D_TIMES))	AS D_TIMES
			  ,	A.SPICE_YN
			  ,	A.CORN_YN
			  ,	A.IMG_PATH
			  ,	A.ORIGIN_NAT
			  ,	A.ORIGIN_TYPE
			  ,	A.VD_SN
			  ,	A.APPLY_SD
			  ,	A.MOBILE_GUBUN
			  ,	SCC_SOPR_AGG_FUN(:subinvCd,	A.ITEM_CODE, 1)	AS AGG_QTY
		     , A.UPJANG_GRP
		     , NVL(A.IS_ENF, 0) AS IS_ENF
		     , NVL(A.IS_REC, 0) AS IS_REC
             , CASE WHEN G.G_PRICE < A.G_ITEM_PRICE THEN 'Y' ELSE 'N' END AS CHEAP_YN
             , CASE A.LINE_STATUS WHEN '002'
             THEN CASE WHEN (SELECT /*+ LEADING(IA.PODT) USE_NL(IA.PODT IA.POHD) */ COUNT(1) FROM HLDC_PO_PO IA WHERE IA.PO_ID = A.PR_ID AND IA.SUBINV_CODE = :subinvCd AND IA.RC_UPJANG = :upjangCd ) > 1
                               THEN (SELECT /*+ LEADING(IA.PODT) USE_NL(IA.PODT IA.POHD) */ IA.LINE_STATUS FROM HLDC_PO_PO IA WHERE IA.LINE_STATUS <> 'PD' AND IA.PO_ID = A.PR_ID  AND IA.SUBINV_CODE = :subinvCd AND IA.RC_UPJANG = :upjangCd )
                       ELSE (SELECT /*+ LEADING(IA.PODT) USE_NL(IA.PODT IA.POHD) */ IA.LINE_STATUS FROM HLDC_PO_PO IA WHERE IA.PO_ID = A.PR_ID  AND IA.SUBINV_CODE = :subinvCd AND IA.RC_UPJANG = :upjangCd )
                  END
                 ELSE A.LINE_STATUS
                 END LINE_STATUS
			 , (SELECT UR.USR_NM FROM EPROCUSR.ESMVDOG OG, EPROCUSR.ESAUSER UR WHERE OG.SYS_ID = UR.SYS_ID AND OG.COMP_CD = UR.COMP_CD AND OG.OPER_ORG_SN = '414' AND OG.VD_SN = A.VD_SN AND OG.HFC_CHR_ID = UR.USR_ID) AS MD_NAME	/*담당MD*/
		  FROM	(
				 SELECT	A.PR_NUM					       AS PR_NUM
				      , A.ORG_PR_NUM					   AS ORG_PR_NUM
					  ,	A.PR_ID							   AS PR_ID
					  ,	C.ITEM_CODE						   AS ITEM_CODE
					  ,	C.ITEM_NAME						   AS ITEM_NAME
					  ,	C.ITEM_CLASS3					   AS ITEM_CLASS3
					  ,	C.ITEM_CLASS4					   AS ITEM_CLASS4
					  ,	C.ITEM_SIZE						   AS ITEM_SIZE
					  ,	C.PO_UOM						   AS PO_UOM
					  ,	A.MENU_QTY						   AS MENU_QTY		   /* 식단필요갯수 */
					  ,	C.TAX_CODE						   AS TAX_CODE
					  ,	B.PROC_TYP_CD					   AS CENTER_FLAG
					  ,	A.PR_REMARK						   AS PR_REMARK
					  ,	A.REMARK						   AS REMARK
					  ,	C.POINT_FLAG					   AS POINT_FLAG
					  ,	A.RC_UPJANG						   AS UPJANG		   /* 업장코드 */
					  ,	D.INVAT_FLAG					   AS INVAT_FLAG
					  ,	D.OUTVAT_FLAG					   AS OUTVAT_FLAG
					  ,	C.MIN_ORD_QTY					   AS MIN_ORD_QTY
					  ,	C.MAX_ORD_QTY					   AS MAX_ORD_QTY
					  ,	B.CENTER_CODE					   AS CENTER_CODE	   /* 센터코드 */
					  ,	D.STOCK_FLAG					   AS STOCK_FLAG
					  ,	C.BARCODE						   AS BARCODE
					  ,	C.MULTIPLIER_QTY				   AS MULTIPLIER_QTY
					  ,	C.USE_YN						   AS USE_YN
					  ,	A.PR_QTY						   AS PR_QTY
					  , NVL(TO_NUMBER(DECODE(B.MARGIN_RATE, 0, B.CONTRACT_PRICE, (ROUND((B.CONTRACT_PRICE	+ (B.CONTRACT_PRICE	* B.MARGIN_RATE	/ 100))	/ 10) *	10))), 0) AS MARGIN_PRICE
					  ,	B.CONTRACT_PRICE				   AS UNIT_PRICE	   /* 구매(매입)단가 */
		             , ROUND(NVL(DECODE(B.MARGIN_RATE, 0, B.CONTRACT_PRICE, ROUND((B.CONTRACT_PRICE + (B.CONTRACT_PRICE * B.MARGIN_RATE / 100)) / 10) * 10) / NVL(C.KG_CONVERT_RATE, 1) / 1000, 0), 2) AS G_ITEM_PRICE
					  ,	B.CUSTCD						   AS CUSTCD		   /* 매입거래처코드 */
					  ,	NVL(C.KG_CONVERT_RATE, 1)		   AS KG_CONVERT_RATE
					  ,	B.MARGIN_RATE					   AS MARGIN_RATE
					  ,	A.RC_UPJANG						   AS AP_UNITPRICE_UPJANG
					  ,	C.SPICE_YN						   AS SPICE_YN
					  ,	C.CORN_YN						   AS CORN_YN
					  ,	C.IMG_PATH						   AS IMG_PATH
					  ,	C.ORIGIN_NAT					   AS ORIGIN_NAT
					  ,	C.ORIGIN_TYPE					   AS ORIGIN_TYPE
					  ,	D.MATERIAL_ACCTCD				   AS ACCTCD
					  ,	D.BUDCC_CD						   AS BUD_CLS
					  ,	B.DUTY_YN						   AS DUTY_YN
		--PB_YN을 계약에서 가져옴 (2015.08.29)
					  ,	B.PB_YN							   AS PB_YN
					  ,	C.MANUF_CD						   AS MANUF_CD
					  ,	C.ECO_ITEM						   AS ECO_ITEM
					  , B.NPB_YN						   AS NPB_YN
					  ,	A.VD_SN							   AS VD_SN
					  ,	A.APPLY_SD						   AS APPLY_SD
		              , A.MOBILE_GUBUN
					  ,	A.UPJANG_GRP					   AS UPJANG_GRP
					  ,	A.IS_ENF					       AS IS_ENF
					  ,	(SELECT MAX(Z.ATTR02) FROM FSM_REAL_RECIPE_ITEM Z WHERE Z.UPJANG = A.RC_UPJANG AND Z.ITEM_CODE = A.ITEM_CODE AND Z.NEED_DATE = A.NEED_DATE) AS IS_REC
		             , A.LINE_STATUS
				   FROM	SO_PR A
					  ,	(SELECT /*+ INDEX(B.MR ESPSSGPITM_PK) */ * FROM HLDC_PO_CONTRACT_F B) B
					  ,	HLDC_PO_ITEM_MST C
					  ,	HLDC_PO_SUBINVENTORY D
				  WHERE	1=1
					AND	A.RC_UPJANG	  =	B.UPJANG (+)
					AND	A.ITEM_CODE	  =	B.ITEM_CODE	(+)
					AND	A.RC_UPJANG	  =	D.UPJANG
					AND	A.SUBINV_CODE =	D.SUBINV_CODE
					AND	A.ITEM_CODE	  =	C.ITEM_CODE
					AND	:needDate	BETWEEN	B.CONTRACT_START(+)	AND	B.CONTRACT_END(+)
					AND	A.SUBINV_CODE =	:subinvCd
					AND	A.RC_UPJANG	  = :upjangCd
					AND	A.NEED_DATE	  =	:needDate
					AND	A.ORG_PR_NUM  =	:orgPrNum
					AND A.LINE_STATUS NOT IN('999', '003', 'PD')
				) A
			  ,	SCO_UPJANG_MST_V B
			  ,(SELECT A.CENTER_CODE
					 , A.ITEM_CODE , A.D_DAYS AS D_DAY
					 ,(SELECT TO_DATE(:needDate,'YYYYMMDD') -	TO_DATE(Z.NONHOLI_DATE,'YYYYMMDD')
						 FROM (SELECT ROW_NUMBER() OVER(ORDER BY Z.CD_SY||Z.CD_SM||Z.CD_SD DESC) AS	SEQ
									, Z.CD_SY||Z.CD_SM||Z.CD_SD	AS NONHOLI_DATE
								 FROM SCC_CALENDA_DATA Z
								WHERE Z.CD_SY||Z.CD_SM||Z.CD_SD	< :needDate
								  AND Z.CD_SY BETWEEN TO_NUMBER(SUBSTR(:needDate,	1, 4)) - 1 AND TO_NUMBER(SUBSTR(:needDate, 1,	4))
							   -- AND Z.HOLIDAY	NOT	IN (1,2) --일요일 제외한 국가 공휴일 (일요일만 체크, 그	외 공유일은	상관없음(김진희))
								  AND Z.CD_WEEK	NOT	IN ('일')) Z
						WHERE Z.SEQ	= A.D_DAYS ) AS	D_DAYS
					  ,	A.D_TIMES
				   FROM	HLDC_PO_PREORDER_LIST A
				  WHERE	A.CENTER_CODE =	:centerCd
				) C						 /*	선발주 제한	*/
			  ,	(
				 SELECT	UPJANG
					  ,	ITEM_CODE
					  ,	TO_CHAR(TO_DATE(RESTRICT_START,	'YYYYMMDD'), 'YYYY.MM.DD') || '~' || TO_CHAR(TO_DATE(RESTRICT_END, 'YYYYMMDD'),	'YYYY.MM.DD') AS RESTRICT_PERIOD
					  ,	RESTRICT_REASON
				   FROM	FSI_RESTRICT_SET
				  WHERE	UPJANG = :upjangCd
					AND	(RESTRICT_START	<= :needDate AND RESTRICT_END	>= :needDate)
					AND	NOT	(CNL_START IS NOT NULL AND CNL_START	<= :needDate AND CNL_END		>= :needDate)
				) D						 /*	금지자재 */
			  ,	VO_CENTER F
		    , (
		       SELECT ITEM_CLASS4, MIN(G_PRICE) AS G_PRICE
		         FROM (
		               SELECT C.ITEM_CLASS4
		                    , ROUND(DECODE(B.MARGIN_RATE, 0, B.CONTRACT_PRICE, (ROUND((B.CONTRACT_PRICE + (B.CONTRACT_PRICE * B.MARGIN_RATE / 100)) / 10) * 10)) / DECODE(C.KG_CONVERT_RATE, 0, 1, C.KG_CONVERT_RATE) / 1000, 2) G_PRICE
		                 FROM ST_UPJANG A
		                    , HLDC_PO_CONTRACT_F B
		                    , HLDC_PO_ITEM_MST C
		                WHERE B.ITEM_CODE = C.ITEM_CODE
		                  AND B.USE_YN    = 'Y'
		                  AND B.CONTRACT_PRICE > 0
		                  AND B.UPJANG    = A.AP_UNITPRICE_UPJANG
		                  AND A.UPJANG    = :upjangCd
		                  AND :needDate BETWEEN B.CONTRACT_START AND B.CONTRACT_END
		               )
		        GROUP BY ITEM_CLASS4
		      ) G
		 WHERE	A.UPJANG = B.UPJANG
			AND	A.CENTER_CODE =	C.CENTER_CODE(+)
			AND	A.ITEM_CODE	  =	C.ITEM_CODE	 (+)
			AND	A.ITEM_CODE	  =	D.ITEM_CODE	 (+)
			AND	A.CENTER_CODE =	F.CENTER_CODE(+)
		   AND A.ITEM_CLASS4 = G.ITEM_CLASS4(+)
		-- 유효성 체크된 자재 맨 위로 정렬 추가 2018.04.02 김호석 (이혜은, 윤지혜, 염병문 확인)
		 ORDER	BY SHP_MAP, SHP_MAP, MTG_STP, SCH, REQ_WKD,  A.ITEM_CLASS4, A.ITEM_NAME, A.ITEM_CODE) TT
		]]></statement>
	<statement name="selectPrDelRecipeInfo"><![CDATA[
/*		삭제된 자재리스트 조회		   */
SELECT PR_NUM,
       PR_ID,
       ITEM_CODE,
       ITEM_NAME,
       ITEM_CLASS3,
       ITEM_CLASS4,
       DUTY_YN,
       PB_YN,
       MANUF_YN,
       ECO_ITEM_YN,
       NPB_YN,
--       FEATURE_NAME,
       ITEM_SIZE,
       PO_UOM,
       KG_QTY,
--       ONHAND_QTY,
--       CANCEL_PR_QTY,
       PR_QTY,
       TOT_AMT,
       G_ITEM_PRICE,
       TAX_CODE,
       CENTER_FLAG,
       REMARK,
       POINT_FLAG,
       SUBINV_CODE,
       NEED_DATE,
       UPJANG,
       DEPT_ID,
       ACCTCD,
       BUD_CLS,
       MU_CD,
       INVAT_FLAG,
       OUTVAT_FLAG,
       MIN_ORD_QTY,
       MAX_ORD_QTY,
       CENTER_CODE,
       STOCK_FLAG,
       BARCODE,
       MULTIPLIER_QTY,
       BUDDEPT_ID,
       USE_YN,
       CONTRACT_YN,
       MARGIN_PRICE,
       UNIT_PRICE,
       CUSTCD,
       KG_CONVERT_RATE,
       MARGIN_RATE,
       AP_UNITPRICE_UPJANG,
       RESTRICT_PERIOD,
       RESTRICT_REASON,
       DUTY_END_DATE,
       MIN_DUTY_QTY,
       DUTY_QTY,
       REAL_USE_QTY,
       SHP_MAP,
       MTG_UNS,
       MTG_STP,
       REQ_WKD,
       SCH,
       D_DAY,
       D_DAY_TXT,
       D_DAYS,
       D_TIMES,
       SPICE_YN,
       CORN_YN,
       IMG_PATH,
       ORIGIN_NAT,
       ORIGIN_TYPE,
       VD_SN,
       APPLY_SD,
       MOBILE_GUBUN,
       AGG_QTY,
       UPJANG_GRP,
       IS_ENF,
       CHEAP_YN,
       MD_NAME,
       CASE WHEN SHP_MAP = 'N' THEN '단가계약 안됨'
            WHEN MTG_UNS = 'N' THEN '불용자재'
            WHEN MTG_STP = 'N' THEN '중지자재'
            WHEN REQ_WKD = 'N' THEN '요일제한'
            WHEN LENGTH(RESTRICT_PERIOD)>0 THEN '금지자재('||RESTRICT_PERIOD||','||RESTRICT_REASON||')'
            WHEN SCH = 'N' THEN '수발주제한(발주 수정/삭제 불가사유)'
            ELSE PR_REMARK END AS PR_REMARK,
       CASE WHEN SHP_MAP = 'N' OR REQ_WKD = 'N' OR SCH = 'N' THEN 'A'
            WHEN MTG_UNS = 'N' OR MTG_STP = 'N' THEN 'B'
            WHEN LENGTH(RESTRICT_PERIOD)>0 THEN 'C'
            ELSE 'Y' END AS PR_YN
    FROM (
		SELECT																																									
		      	/*+ USE_HASH(A D E G) PUSH_PRED(C) */ 																															
		      A.PR_NUM																																									
			  ,	A.PR_ID																																							
			  ,	A.ITEM_CODE																																						
			  ,	A.ITEM_NAME																																						
			  ,	A.ITEM_CLASS3																																					
			  ,	A.ITEM_CLASS4																																					
			  , FSI_DUTY_ITEM_YN(A.CENTER_CODE, A.CUSTCD, A.ITEM_CODE, :needDate) AS DUTY_YN
			  , A.PB_YN
--			  , A.MANUF_CD AS MANUF_YN
			  , CASE WHEN LENGTH(TRIM(A.MANUF_CD)) > 0 AND TRIM(A.MANUF_CD) <> '해당없음' THEN 'Y' ELSE 'N' END AS MANUF_YN
			  , CASE WHEN LENGTH(TRIM(A.ECO_ITEM)) > 0 AND TRIM(A.ECO_ITEM) <> '해당없음' THEN 'Y' ELSE 'N' END AS ECO_ITEM_YN
			  , A.NPB_YN
--			  ,	FN_ITEM_FEATURE_ICON(FSI_DUTY_ITEM_YN(A.CENTER_CODE, A.CUSTCD, A.ITEM_CODE, :needDate),	A.PB_YN, A.ECO_ITEM, A.MANUF_CD) AS	FEATURE_NAME			
			  ,	A.ITEM_SIZE																																						
			  ,	A.PO_UOM																																						
			  ,	A.MENU_QTY AS KG_QTY																																			
--			  ,	FSP_TRANS_QTY_FUN(:prDate, :subinvCd, A.ITEM_CODE) AS ONHAND_QTY					     												
--			  ,	0 AS CANCEL_PR_QTY																																				
			  ,	0 AS PR_QTY																																						
			  ,	0 AS TOT_AMT																																					
			  ,	ROUND(NVL(A.MARGIN_PRICE / A.KG_CONVERT_RATE / 1000, 0)) AS	G_ITEM_PRICE /*	g당	단가 = 출하율적용단가 /	Kg 환산율 /	1000 */										
			  ,	A.TAX_CODE																																						
			  ,	A.CENTER_FLAG																																					
			  ,	A.PR_REMARK																																						
			  ,	A.REMARK																																						
			  ,	A.POINT_FLAG																																					
			  ,	:subinvCd AS SUBINV_CODE																																
			  ,	:needDate AS NEED_DATE																																	
			  ,	A.UPJANG																																						
			  ,	A.DEPT_ID																																						
			  ,	A.ACCTCD		 /*	입고 계정 코드(대표) - MATERIAL_ACCTCD */																									
			  ,	A.BUD_CLS		 /*	예산 조직 cc 코드 -	BUDCC_CD */																												
			  ,	B.MU_CD																																							
			  ,	A.INVAT_FLAG																																					
			  ,	A.OUTVAT_FLAG																																					
			  ,	A.MIN_ORD_QTY																																					
			  ,	A.MAX_ORD_QTY																																					
			  ,	A.CENTER_CODE	   /* 센터코드 */																																
			  ,	A.STOCK_FLAG																																					
			  ,	A.BARCODE																																						
			  ,	A.MULTIPLIER_QTY																																				
			  ,	A.BUD_CLS AS BUDDEPT_ID	 /*	예산 조직 cc 코드 :	BUDCC_CD - 고도화에서 부서코드가 CC로 대체됨 */																	
			  ,	A.USE_YN																																						
			  ,	DECODE(A.CUSTCD, NULL, 'N',	'Y') AS	CONTRACT_YN																													
			  ,	NVL(A.MARGIN_PRICE,	0) AS MARGIN_PRICE	   /* 출하율적용단가 */																									
			  ,	A.UNIT_PRICE	   /* 구매(매입)단가 */																															
			  ,	A.CUSTCD		   /* 매입거래처코드 */																															
			  ,	A.KG_CONVERT_RATE																																				
			  ,	A.MARGIN_RATE																																					
			  ,	A.AP_UNITPRICE_UPJANG																																			
			  ,	D.RESTRICT_PERIOD																																				
			  ,	D.RESTRICT_REASON																																				
			  ,	NULL DUTY_END_DATE																																				
			  ,	0 MIN_DUTY_QTY																																					
			  ,	0 DUTY_QTY																																						
			  ,	0 REAL_USE_QTY
			  ,	CASE WHEN EPROCUSR.FN_ITEM_PROCURE_SHP_MAP('100', 'HFC', F.OPER_ORG_SN_PURC, A.UPJANG_GRP, A.ITEM_CODE,	:needDate)	= 'CK' THEN	'Y'	ELSE 'N' END	
															 AS	SHP_MAP	 /*	자재 업장군	맵핑 유효성	체크 CE	- 맵핑안되어있음(사용불가),	CK - 맵핑되어있음(사용가능)	*/			
			  ,	CASE WHEN EPROCUSR.FN_ITEM_PROCURE_MTG_UNS('100', A.ITEM_CODE) = 'UP' THEN 'Y' ELSE	'N'	END																		
															 AS	MTG_UNS		 /*	자재불용체크 UK- 불용, UP-불용아님,	NN-	DATA NOT FOUND */										
			  ,	CASE WHEN EPROCUSR.FN_ITEM_PROCURE_MTG_STP('100', A.ITEM_CODE, '01') = 'TP'	THEN 'Y' ELSE 'N' END																
															 AS	MTG_STP		 /*	자재 중지체크 TK -중지(사용불가), TP -	중지아님(사용가능),	NN-	DATA NOT FOUND */				
			  ,	CASE WHEN EPROCUSR.FN_ITEM_PROCURE_REQ_WKD('100', 'HFC', F.OPER_ORG_SN_PURC, A.ITEM_CODE, A.VD_SN, '01', :needDate) = 'XR' THEN 'Y' ELSE	'N'	END							
															 AS	REQ_WKD		 /*	요일별 신청불가	체크 XE	- 신청불가(사용불가), XR - 신청가능(사용가능), NN :	DATA NOT FOUND */	
			  ,	CASE WHEN EPROCUSR.FN_ITEM_PROCURE_SCH('100', 'HFC', F.OPER_ORG_SN_PURC, A.ITEM_CODE, A.VD_SN, '01', NVL(C.D_DAY, 0), NVL(C.D_TIMES, 0), TO_CHAR(SYSDATE, 'YYYYMMDD'), :needDate)	= 'HK' THEN	'Y'	ELSE 'N' END	
															 AS	SCH			 /*	수발주 스케쥴에	따른 유효성	체크 HE - 신청불가(사용불가), HK - 신청가능(사용가능), NN -	DATA NOT FOUND */										
			  ,	NVL(C.D_DAYS,0)	AS D_DAY																																		
			  ,	''	AS D_DAY_TXT																																		
			  ,	DECODE(C.D_DAYS,NULL,	0, DECODE(SIGN(TO_DATE(:needDate,	'YYYYMMDD')	- TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'),	'YYYYMMDD')	- NVL(C.D_DAYS,0) -	1) , 0,	
										   DECODE(SIGN(DECODE(C.D_TIMES, '', 24, 0,	24,	C.D_TIMES) - TO_NUMBER(TO_CHAR(SYSDATE,	'HH24'))), 1, 0, 1), 0)	+ NVL(C.D_DAYS,	0))	AS D_DAYS											
			  ,	DECODE(C.D_DAYS,NULL,	0, DECODE(C.D_TIMES, '', 24, 0,	24,	C.D_TIMES))	AS D_TIMES																				
			  ,	A.SPICE_YN																																						
			  ,	A.CORN_YN																																						
			  ,	A.IMG_PATH																																						
			  ,	A.ORIGIN_NAT																																					
			  ,	A.ORIGIN_TYPE																																					
			  ,	A.VD_SN																																							
			  ,	A.APPLY_SD																																						
			  ,	'M' AS MOBILE_GUBUN																																			
			  ,	SCC_SOPR_AGG_FUN(:subinvCd,	A.ITEM_CODE, 1)	AS AGG_QTY																								
		     , A.UPJANG_GRP														                                                                                            
		     , 0 AS IS_ENF     														                                                                                        
             , CASE WHEN G.G_PRICE < A.G_ITEM_PRICE THEN 'Y' ELSE 'N' END AS CHEAP_YN                                                                                          
			 , (SELECT UR.USR_NM FROM EPROCUSR.ESMVDOG OG, EPROCUSR.ESAUSER UR WHERE OG.SYS_ID = UR.SYS_ID AND OG.COMP_CD = UR.COMP_CD AND OG.OPER_ORG_SN = '414' AND OG.VD_SN = A.VD_SN AND OG.HFC_CHR_ID = UR.USR_ID) AS MD_NAME	/*담당MD*/
		  FROM	(																																								
				 SELECT	A.ORG_PR_NUM					   AS PR_NUM																											
					  ,	A.PR_ID							   AS PR_ID																												
					  ,	C.ITEM_CODE						   AS ITEM_CODE																											
					  ,	C.ITEM_NAME						   AS ITEM_NAME																											
					  ,	C.ITEM_CLASS3					   AS ITEM_CLASS3																										
					  ,	C.ITEM_CLASS4					   AS ITEM_CLASS4																										
					  ,	C.ITEM_SIZE						   AS ITEM_SIZE																											
					  ,	C.PO_UOM						   AS PO_UOM																											
					  ,	A.MENU_QTY						   AS MENU_QTY		   /* 식단필요갯수 */																				
					  ,	C.TAX_CODE						   AS TAX_CODE																											
					  , B.PROC_TYP_CD				  	   AS CENTER_FLAG	  																									
					  ,	A.PR_REMARK						   AS PR_REMARK																											
					  ,	A.REMARK						   AS REMARK																											
					  ,	C.POINT_FLAG					   AS POINT_FLAG																										
					  ,	A.PR_DEPT_ID					   AS DEPT_ID		   /* 업장코드 */																					
					  ,	A.RC_UPJANG						   AS UPJANG		   /* 업장코드 */																					
					  ,	D.INVAT_FLAG					   AS INVAT_FLAG																										
					  ,	D.OUTVAT_FLAG					   AS OUTVAT_FLAG																										
					  ,	C.MIN_ORD_QTY					   AS MIN_ORD_QTY																										
					  ,	C.MAX_ORD_QTY					   AS MAX_ORD_QTY																										
					  ,	A.CENTER_CODE					   AS CENTER_CODE	   /* 센터코드 */																					
					  ,	D.STOCK_FLAG					   AS STOCK_FLAG																										
					  ,	C.BARCODE						   AS BARCODE																											
					  ,	C.MULTIPLIER_QTY				   AS MULTIPLIER_QTY																									
					  ,	C.USE_YN						   AS USE_YN																											
					  ,	A.PR_QTY						   AS PR_QTY																											
					  , NVL(TO_NUMBER(DECODE(B.MARGIN_RATE, 0, B.CONTRACT_PRICE, (ROUND((B.CONTRACT_PRICE	+ (B.CONTRACT_PRICE	* B.MARGIN_RATE	/ 100))	/ 10) *	10))), 0) AS MARGIN_PRICE	
					  ,	B.CONTRACT_PRICE				   AS UNIT_PRICE	   /* 구매(매입)단가 */																				
		             , ROUND(NVL(DECODE(B.MARGIN_RATE, 0, B.CONTRACT_PRICE, ROUND((B.CONTRACT_PRICE + (B.CONTRACT_PRICE * B.MARGIN_RATE / 100)) / 10) * 10) / NVL(C.KG_CONVERT_RATE, 1) / 1000, 0), 2) AS G_ITEM_PRICE 
					  ,	B.CUSTCD						   AS CUSTCD		   /* 매입거래처코드 */																				
					  ,	NVL(C.KG_CONVERT_RATE, 1)		   AS KG_CONVERT_RATE																									
					  ,	B.MARGIN_RATE					   AS MARGIN_RATE																										
					  ,	A.RC_UPJANG						   AS AP_UNITPRICE_UPJANG																								
					  ,	C.SPICE_YN						   AS SPICE_YN																											
					  ,	C.CORN_YN						   AS CORN_YN																											
					  ,	C.IMG_PATH						   AS IMG_PATH																											
					  ,	C.ORIGIN_NAT					   AS ORIGIN_NAT																										
					  ,	C.ORIGIN_TYPE					   AS ORIGIN_TYPE																										
					  ,	D.MATERIAL_ACCTCD				   AS ACCTCD																											
					  ,	D.BUDCC_CD						   AS BUD_CLS																											
					  ,	B.DUTY_YN						   AS DUTY_YN																											
		--PB_YN을 계약에서 가져옴 (2015.08.29)
					  ,	B.PB_YN							   AS PB_YN																												
					  ,	C.MANUF_CD						   AS MANUF_CD																											
					  ,	C.ECO_ITEM						   AS ECO_ITEM
					  , B.NPB_YN						   AS NPB_YN
					  ,	A.VD_SN							   AS VD_SN																												
					  ,	A.APPLY_SD						   AS APPLY_SD																											
					  ,	A.UPJANG_GRP					   AS UPJANG_GRP																										
				   FROM	SO_PR_MENU_LOG A																																		
					  ,	(SELECT /*+ INDEX(B.MR ESPSSGPITM_PK) */ * FROM HLDC_PO_CONTRACT_F B) B																																		
					  ,	HLDC_PO_ITEM_MST C																																		
					  ,	HLDC_PO_SUBINVENTORY D																																	
				  WHERE	1=1																																						
					AND	A.RC_UPJANG	  =	B.UPJANG	(+)																															
					AND	A.ITEM_CODE	  =	B.ITEM_CODE	(+)																															
					AND	A.RC_UPJANG	  =	D.UPJANG																																
					AND	A.SUBINV_CODE =	D.SUBINV_CODE																															
					AND	A.ITEM_CODE	  =	C.ITEM_CODE																																
					AND	:needDate	BETWEEN	B.CONTRACT_START(+)	AND	B.CONTRACT_END(+)																					
					AND	A.SUBINV_CODE =	:subinvCd																												
					AND	A.RC_UPJANG	  =	:upjangCd
					AND	A.NEED_DATE	  =	:needDate																														
					AND	A.ORG_PR_NUM  =	:orgPrNum																																
					ORDER BY C.ITEM_CLASS4, C.ITEM_NAME, C.ITEM_CODE 																											
				) A																																								
			  ,	SCO_UPJANG_MST_V B																																				
			  ,(SELECT A.CENTER_CODE																																			
					 , A.ITEM_CODE	, A.D_DAYS AS D_DAY																															
					 ,(SELECT TO_DATE(:needDate,'YYYYMMDD') -	TO_DATE(Z.NONHOLI_DATE,'YYYYMMDD')																		
						 FROM (SELECT ROW_NUMBER() OVER(ORDER BY Z.CD_SY||Z.CD_SM||Z.CD_SD DESC) AS	SEQ																			
									, Z.CD_SY||Z.CD_SM||Z.CD_SD	AS NONHOLI_DATE																									
								 FROM SCC_CALENDA_DATA Z																														
								WHERE Z.CD_SY||Z.CD_SM||Z.CD_SD	< :needDate																							
								  AND Z.CD_SY BETWEEN TO_NUMBER(SUBSTR(:needDate,	1, 4)) - 1 AND TO_NUMBER(SUBSTR(:needDate, 1,	4))							
							   -- AND Z.HOLIDAY	NOT	IN (1,2) --일요일 제외한 국가 공휴일 (일요일만 체크, 그	외 공유일은	상관없음(김진희))										
								  AND Z.CD_WEEK	NOT	IN ('일')) Z																												
						WHERE Z.SEQ	= A.D_DAYS ) AS	D_DAYS																														
					  ,	A.D_TIMES																																				
				   FROM	HLDC_PO_PREORDER_LIST A																																	
				  WHERE	A.CENTER_CODE =	:centerCd																														
				) C						 /*	선발주 제한	*/																														
			  ,	(																																								
				 SELECT	UPJANG																																					
					  ,	ITEM_CODE																																				
					  ,	TO_CHAR(TO_DATE(RESTRICT_START,	'YYYYMMDD'), 'YYYY.MM.DD') || '~' || TO_CHAR(TO_DATE(RESTRICT_END, 'YYYYMMDD'),	'YYYY.MM.DD') AS RESTRICT_PERIOD		
					  ,	RESTRICT_REASON																																			
				   FROM	FSI_RESTRICT_SET																																		
				  WHERE	UPJANG = :upjangCd																																
					AND	(RESTRICT_START	<= :needDate AND RESTRICT_END	>= :needDate)																			
					AND	NOT	(CNL_START IS NOT NULL AND CNL_START	<= :needDate AND CNL_END		>= :needDate)												
				) D						 /*	금지자재 */			 																												
			  ,	VO_CENTER F																																						
		    , (                                                                                                                                                                                                                            
		       SELECT ITEM_CLASS4, MIN(G_PRICE) AS G_PRICE                                                                                                                                                   
		         FROM (                                                                                                                                                                                                                    
		               SELECT C.ITEM_CLASS4                                                                                                                                                                                                
		                    , ROUND(DECODE(B.MARGIN_RATE, 0, B.CONTRACT_PRICE, (ROUND((B.CONTRACT_PRICE + (B.CONTRACT_PRICE * B.MARGIN_RATE / 100)) / 10) * 10)) / DECODE(C.KG_CONVERT_RATE, 0, 1, C.KG_CONVERT_RATE) / 1000, 2) G_PRICE   
		                 FROM ST_UPJANG A                                                                                                                                                                                                  
		                    , HLDC_PO_CONTRACT_F B                                                                                                                                                                                         
		                    , HLDC_PO_ITEM_MST C                                                                                                                                                                                           
		                WHERE B.ITEM_CODE = C.ITEM_CODE                                                                                                                                                                                    
		                  AND B.USE_YN    = 'Y'                                                                                                                                                                                            
		                  AND B.CONTRACT_PRICE > 0                                                                                                                                                                                         
		                  AND B.UPJANG    = A.AP_UNITPRICE_UPJANG                                                                                                                                                                          
		                  AND A.UPJANG    = :upjangCd                                                                                                                                                                                 
		                  AND :needDate BETWEEN B.CONTRACT_START AND B.CONTRACT_END                                                                                                                                                                                 
		               )                                                                                                                                                                                                                   
		        GROUP BY ITEM_CLASS4                                                                                                                                                                       
		      ) G                                                                                                                                                                                                                          
		 WHERE	A.UPJANG = B.UPJANG																																				
			AND	A.CENTER_CODE =	C.CENTER_CODE(+)																																
			AND	A.ITEM_CODE	  =	C.ITEM_CODE	 (+)																																
			AND	A.ITEM_CODE	  =	D.ITEM_CODE	 (+)																																
			AND	A.CENTER_CODE =	F.CENTER_CODE(+)																																
		   AND A.ITEM_CLASS4 = G.ITEM_CLASS4(+)) TT
		]]></statement>

<statement name="selectPrSeq"><![CDATA[
SELECT TO_CHAR(SYSDATE,'YYYYMMDD')||'-'||LPAD(SO_PR_NUM_S.NEXTVAL,5,'0') AS PR_NUM
     , TO_CHAR(SYSDATE,'YYYYMMDD')||'-'||LPAD(SO_PR_APV_NUM_S.NEXTVAL,4,'0') APPROVE_NUM
  FROM DUAL
]]></statement>

<statement name="selectPrIdSeq"><![CDATA[
SELECT SO_PR_S.NEXTVAL AS PR_ID
  FROM DUAL
]]></statement>

<statement name="selectPrMenuLogIdSeq"><![CDATA[
SELECT SO_PR_MENU_LOG_S.NEXTVAL AS PR_ID
  FROM DUAL
]]></statement>

<statement name="saveRecipeOrderInfo"><![CDATA[
INSERT INTO SO_PR(
  PR_ID
, PR_NUM
, PR_DATE
, PR_DEPT_ID
, PR_UPJANG
, PR_SABUN
, APPROVER
, APPROVE_TIME
, APPROVE_NUM
, PO_TYPE
, DOCU_SOURCE
, CUSTCD
, SUBINV_CODE
, RC_MU_CD
, RC_DEPT_ID
, RC_UPJANG
, CENTER_CODE
, ITEM_CODE
, ITEM_NAME
, ITEM_SIZE
, PO_UOM
, TAX_CODE
, BUDDEPT_ID
, ACCTCD
, BUD_CLS
, CENTER_FLAG
, UNIT_PRICE
, MARGIN_PRICE
, SALE_PRICE
, PR_QTY
, PO_QTY
, NEED_DATE
, INVAT_FLAG
, OUTVAT_FLAG
, MENU_QTY
, PR_REMARK
, LINE_STATUS
, CREATE_BY
, UPDATE_BY
, VD_SN
, APPLY_SD
, MOBILE_GUBUN
, ORG_PR_NUM
, UPJANG_GRP
, IS_ENF
, WMS_INT_FLAG)
VALUES(
:prId,
:prNum,
:prDate,
(SELECT DEPT_ID FROM HLDC_ST_UPJANG WHERE UPJANG = :prUpjangCd),
:prUpjangCd,
:sabun,
:sabun,
TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS'),
:prApprNum,
:poType,
:docuGb,
:custcd,
:subinvCd,
:muCd,
:deptId,
:rcUpjangCd,
:centerCd,
:itemCd,
:itemNm,
:itemSize,
:poUom,
:taxCode,
:buddeptId,
:acctcd,
:budCls,
:centerFlag,
:unitPrice,
:marginPrice,
0,
ROUND(:prQty,1),
ROUND(:prQty,1),
:needDate,
:invatFlag,
:outvatFlag,
:kgQty,
:prRemark,
:lineStatus,
:sabun,
:sabun,
:vdSn,
:applySd,
:mobileGubun,
:orgPrNum,
:upjangGrp,
:isEnf,
'A')
]]></statement>
<statement name="updateRecipeItem"><![CDATA[
UPDATE /*+ NO_QUERY_TRANSFORMATION */ FSM_REAL_RECIPE_ITEM A
   SET A.ORDER_YN = 'Y'
     , A.PR_NUM = :orgPrNum
     , A.PR_ID = :prId
     , A.PR_QTY = ROUND(:prQty,1)
     , A.UNIT_PRICE = :unitPrice
     , A.MARGIN_PRICE = :marginPrice
     , A.MARGIN_RATE = :marginRate
     , A.UDATE = SYSDATE
     , A.UUSER = :sabun
 WHERE A.ORDER_YN = 'N'
   AND A.NEED_DATE = :needDate
   AND A.ITEM_CODE = :itemCd
   AND EXISTS
        (
        SELECT 1
          FROM FSM_REAL_MENU_MST B
              ,FSM_REAL_RECIPE_ITEM C
              ,FSA_HALL_MST D
         WHERE B.UPJANG = C.UPJANG
           AND B.MENU_CD = C.MENU_CD
           AND B.UPJANG = D.UPJANG
           AND B.HALL_CD = D.HALL_CD
           AND A.UPJANG = B.UPJANG
           AND A.MENU_CD = B.MENU_CD
           AND D.SUBINV_CODE = :subinvCd
           AND C.ITEM_CODE = :itemCd
           AND C.NEED_DATE = :needDate
        )
]]></statement>
<statement name="updateExistRecipeItem"><![CDATA[
UPDATE FSM_REAL_RECIPE_ITEM A
   SET A.ORDER_YN = :orderYn
     , A.PR_NUM = :prNum
     , A.PR_ID = :modPrId
     , A.PR_QTY = :prQty
     , A.UDATE = SYSDATE
     , A.UUSER = :sabun
 WHERE A.ORDER_YN = 'Y'
   AND A.PR_ID = :prId
]]></statement>
<statement name="updateRecipeOrderInfo"><![CDATA[
UPDATE	SO_PR
   SET PR_QTY = :prQty
     , PR_REMARK = :prRemark
     , REMARK = ''
     , UPDATE_BY = :sabun
     , UPDATE_DATE = SYSDATE
     , MOBILE_GUBUN = :mobileGubun
     , LINE_STATUS = :lineStatus
 WHERE ORG_PR_NUM = :orgPrNum
   AND PR_ID = :prId
   AND LINE_STATUS  NOT IN ('003','999','PD')
]]></statement>
<statement name="deleteRecipeOrderInfo"><![CDATA[
UPDATE	SO_PR
   SET PR_QTY = 0
     , PR_REMARK = :prRemark
     , REMARK = :remark
     , UPDATE_BY = :sabun
     , UPDATE_DATE = SYSDATE
     , MOBILE_GUBUN = :mobileGubun
     , LINE_STATUS = '999'
 WHERE ORG_PR_NUM = :orgPrNum
   AND PR_ID = :prId
]]></statement>
<statement name="deleteRecipeMenuLog"><![CDATA[
DELETE SO_PR_MENU_LOG
 WHERE ORG_PR_NUM = :orgPrNum
]]></statement>
<statement name="saveRecipeMenuLog"><![CDATA[
INSERT INTO SO_PR_MENU_LOG(
  PR_ID
, PR_NUM
, PR_DATE
, PR_DEPT_ID
, PR_UPJANG
, PR_SABUN
, APPROVER
, APPROVE_TIME
, APPROVE_NUM
, PO_TYPE
, DOCU_SOURCE
, CUSTCD
, SUBINV_CODE
, RC_MU_CD
, RC_DEPT_ID
, RC_UPJANG
, CENTER_CODE
, ITEM_CODE
, ITEM_NAME
, ITEM_SIZE
, PO_UOM
, TAX_CODE
, BUDDEPT_ID
, ACCTCD
, BUD_CLS
, CENTER_FLAG
, UNIT_PRICE
, MARGIN_PRICE
, SALE_PRICE
, PR_QTY
, PO_QTY
, NEED_DATE
, INVAT_FLAG
, OUTVAT_FLAG
, MENU_QTY
, PR_REMARK
, LINE_STATUS
, CREATE_BY
, UPDATE_BY
, VD_SN
, APPLY_SD
, ORG_PR_NUM
, UPJANG_GRP
, REMARK)
VALUES(
:prId,
:orgPrNum,
:prDate,
(SELECT DEPT_ID FROM HLDC_ST_UPJANG WHERE UPJANG = :prUpjangCd),
:prUpjangCd,
:sabun,
:sabun,
TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS'),
:prApprNum,
:poType,
:docuGb,
:custcd,
:subinvCd,
:muCd,
:deptId,
:rcUpjangCd,
:centerCd,
:itemCd,
:itemNm,
:itemSize,
:poUom,
:taxCode,
:buddeptId,
:acctcd,
:budCls,
:centerFlag,
:unitPrice,
:marginPrice,
0,
ROUND(:prQty,1),
ROUND(:prQty,1),
:needDate,
:invatFlag,
:outvatFlag,
:kgQty,
:prRemark,
:lineStatus,
:sabun,
:sabun,
:vdSn,
:applySd,
:orgPrNum,
:upjangGrp,
:remark)
]]></statement>
<statement name="saveRecipeOrderReason"><![CDATA[
INSERT INTO SO_PR_REASON(
   PR_NUM
 , PR_DATE
 , PR_UPJANG
 , PR_SABUN
 , REASON_CD
 , PR_REASON
 , CREATE_DATE
 , CREATE_BY
 , UPDATE_DATE
 , UPDATE_BY
 ) VALUES (
:prNum
 , :prDate
 , :prUpjangCd
 , :sabun
 , :reasonCd
 , :prReason
 , SYSDATE
 , :sabun
 , SYSDATE
 , :sabun
)
]]></statement>
<statement name="selectPreChk1"><![CDATA[
SELECT	/*+	PUSH_PRED(A) */	B.ITEM_CODE	|| ' ' || B.ITEM_NAME AS ITEM_NAME
  FROM	HLDC_PO_PO A
	  ,	SO_PR B
 WHERE	A.PO_ID	 = B.PR_ID
	AND	A.PO_NUM = B.PR_NUM
<#if poType == '04'>
	AND	A.LINE_STATUS IN ('DL','GC','IV')
<#else>
	AND	A.LINE_STATUS IN ('GC','IV')
</#if>
	AND	B.ORG_PR_NUM  =	:orgPrNum
	AND	ROWNUM <= 1
]]></statement>
<statement name="selectPreChk2"><![CDATA[
SELECT TO_CHAR(TO_DATE(A.CLS_YM,'YYYYMM'),'YYYY/MM') AS CLS_MONTH
  FROM HLDC_PO_CLOSING A
 WHERE A.CLS_YM >= :needDateYm
   AND A.SUBINV_CODE = :subinvCd
   AND A.CLS_FLAG = 'Y'
   AND ROWNUM <= 1
]]></statement>
<statement name="selectPreChk3"><![CDATA[
/* 해당 기간 이후 재고조사가 존재하는지 체크 */
SELECT TO_CHAR(TO_DATE(A.PHYSIC_DATE, 'YYYYMMDD'), 'YYYY/MM/DD') AS CLS_DATE
  FROM HLDC_PO_PHYSICAL_INVENTORY A
      , ( SELECT DISTINCT A.*
            FROM HLDC_PO_PHYSICAL_INVENTORY A
               , ( SELECT PHYSIC_DATE AS PHYSIC_DATE
                        , ITEM_CODE AS ITEM_CODE
                        , MAX(UPDATE_DATE) AS UPDATE_DATE
                     FROM HLDC_PO_PHYSICAL_INVENTORY
                    WHERE PHYSIC_DATE >= :needDate
                      AND SUBINV_CODE  = :subinvCd
                    GROUP BY PHYSIC_DATE, ITEM_CODE
                 ) B
           WHERE A.PHYSIC_DATE  = B.PHYSIC_DATE
             AND A.ITEM_CODE    = B.ITEM_CODE
             AND A.UPDATE_DATE  = B.UPDATE_DATE
             AND A.PHYSIC_DATE >= :needDate
             AND A.SUBINV_CODE  = :subinvCd
        ) B
 WHERE A.PHYSIC_ID    = B.PHYSIC_ID
   AND A.ITEM_CODE    = B.ITEM_CODE
   AND A.PHYSIC_DATE >= :needDate
   AND A.SUBINV_CODE  = :subinvCd
   AND B.CANCEL_YN    = 'N'
 ORDER BY A.PHYSIC_DATE DESC
]]></statement>
<statement name="selectPreChk4"><![CDATA[
SELECT A.PR_ID, A.ITEM_NAME, CASE A.LINE_STATUS WHEN '002'
		THEN CASE WHEN (SELECT /*+ LEADING(IA.PODT) USE_NL(IA.PODT IA.POHD) */ COUNT(1) FROM HLDC_PO_PO IA WHERE IA.PO_ID = A.PR_ID ) > 1
		THEN (SELECT /*+ LEADING(IA.PODT) USE_NL(IA.PODT IA.POHD) */ IA.LINE_STATUS FROM HLDC_PO_PO IA WHERE IA.LINE_STATUS <> 'PD' AND IA.PO_ID = A.PR_ID )
				 ELSE (SELECT /*+ LEADING(IA.PODT) USE_NL(IA.PODT IA.POHD) */ IA.LINE_STATUS FROM HLDC_PO_PO IA WHERE IA.PO_ID = A.PR_ID )
			END
		   ELSE A.LINE_STATUS
		   END LINE_STATUS									/* 구매진행상황코드 */
				FROM SO_PR A WHERE A.ORG_PR_NUM = :orgPrNum
				ORDER BY A.PR_ID
]]></statement>
<statement name="selectRecipeValidChk1"><![CDATA[
SELECT A.D_DAYS
     , A.D_TIMES
     , A.TYPE_NAME
     , CASE WHEN A.D_DAYS = 0 AND A.D_TIMES = 0 THEN CASE WHEN TO_CHAR(TO_DATE(:needDate) - A.D_DAYS + (A.D_TIMES/24), 'YYYYMMDD') = TO_CHAR(SYSDATE, 'YYYYMMDD') THEN 'N'
     													   WHEN TO_CHAR(TO_DATE(:needDate) - A.D_DAYS + (A.D_TIMES/24), 'YYYYMMDD') > TO_CHAR(SYSDATE, 'YYYYMMDD') THEN 'N' ELSE 'Y'	END
        ELSE
            CASE WHEN TO_CHAR(TO_DATE(:needDate) - A.D_DAYS + (A.D_TIMES/24), 'YYYYMMDDHH24') <= TO_CHAR(SYSDATE, 'YYYYMMDDHH24') THEN 'Y'
                                     ELSE 'N'
                                 END
                                END CLOSE_YN
  FROM HLDC_PO_TYPE_FS A
 WHERE A.PO_TYPE = :poType
   AND ROWNUM <= 1
]]></statement>
<statement name="selectRecipeValidChk2"><![CDATA[
SELECT A.ITEM_CODE||' '||A.ITEM_NAME AS ITEM_NAME
  FROM SO_PR A
 WHERE A.NEED_DATE = :needDate
   AND A.SUBINV_CODE = :subinvCd
   AND A.LINE_STATUS = '002'
   AND EXISTS
      (SELECT 1 FROM SO_PR Z
        WHERE Z.NEED_DATE   = A.NEED_DATE
          AND Z.SUBINV_CODE = A.SUBINV_CODE
          AND Z.ITEM_CODE   = A.ITEM_CODE
          AND Z.LINE_STATUS = A.LINE_STATUS
          AND Z.PR_QTY = A.PR_QTY
          AND Z.ROWID <> A.ROWID
          AND ABS(Z.CREATE_DATE - A.CREATE_DATE) < 0.003)       --5분 이내
   AND ROWNUM <= 1
]]></statement>
<statement name="selectRecipeValidChk3"><![CDATA[
SELECT T.*
  FROM (
  SELECT A.ITEM_CODE
       , A.ITEM_NAME
--       , A.CENTER_CODE
--       , A.RC_UPJANG
--       , A.CENTER_FLAG
       , (SELECT CASE WHEN VAL_SHP_CNT IN ('CE', 'NN') THEN '자재 업장군 맵핑 유효성 체크 오류'
                      WHEN VAL_UNS_CNT IN ('UK', 'NN') THEN '자재 불용체크 오류'
                      WHEN VAL_STP_CNT IN ('TK', 'NN') THEN '자재 중지체크 오류'
                      WHEN VAL_EVT_CNT IN ('VE', 'NN') THEN '기획자재 한정수량체크 오류'
                      WHEN VAL_CTR_CNT IN ('SE', 'NN') THEN 'SPOT계약 발주횟수체크 오류'
                      WHEN VAL_REQ_CNT IN ('XE', 'NN') THEN '요일별 신청불가 체크 오류'
                      WHEN VAL_SCH_CNT IN ('HE', 'NN') THEN '수발주 스케쥴에 따른 유효성 체크 오류'
                      WHEN A.CENTER_FLAG = 'DC'
                          AND EPROCUSR.FC_GET_CENTER_IVT_YN('100', 'HFC', A.CENTER_CODE, A.ITEM_CODE, A.PR_QTY) = 'N' THEN 'DC자재 수량체크 오류'
                 ELSE 'OK' END
            FROM TABLE(EPROCUSR.FN_ITEM_PROCURE_VALIDATE('100', 'HFC', (SELECT OPER_ORG_SN_PURC FROM HLDC_PO_CENTER WHERE CENTER_CODE = A.CENTER_CODE)
                                                         , A.ITEM_CODE, A.VD_SN, A.APPLY_SD, A.PR_QTY, A.UPJANG_GRP, '01'
                                                         , FMS_PREORDER_FUN(A.CENTER_CODE,A.ITEM_CODE,'D_DAYS')
                                                         , FMS_PREORDER_FUN(A.CENTER_CODE,A.ITEM_CODE,'D_TIMES'), :prDate, :needDate))
         ) AS ITEM_VAL
    FROM SO_PR A
   WHERE A.ORG_PR_NUM  = :orgPrNum
     AND TO_CHAR(A.PR_ID) in (:validPrId)
     AND A.LINE_STATUS in ('002', '999')) T
 WHERE T.ITEM_VAL <> 'OK'
 ]]></statement>
 <statement name="selectRecipeValidChk4"><![CDATA[
SELECT PO_NUM AS PR_NUM
  FROM HLDC_PO_PO
 WHERE PO_NUM = :prNum
   AND PO_TYPE = :poType
 ]]></statement>
  <statement name="selectRecipeDelValidChk"><![CDATA[
		SELECT D.LINE_STATUS, D.D_TIMES - TO_NUMBER(D.TTIME) AS DIFF_TIME, TO_NUMBER(TRUNC(TO_CHAR(sysdate+D.D_DAYS,'YYYYMMDD')) - TRUNC(NEED_DATE)) AS DIFF_DAY
		FROM (
		SELECT A.PR_ID, A.ITEM_NAME, CASE A.LINE_STATUS WHEN '002'
                THEN CASE WHEN (SELECT /*+ LEADING(IA.PODT) USE_NL(IA.PODT IA.POHD) */ COUNT(1) FROM HLDC_PO_PO IA WHERE IA.PO_ID = A.PR_ID ) > 1
                THEN (SELECT /*+ LEADING(IA.PODT) USE_NL(IA.PODT IA.POHD) */ IA.LINE_STATUS FROM HLDC_PO_PO IA WHERE IA.LINE_STATUS <> 'PD' AND IA.PO_ID = A.PR_ID )
                         ELSE (SELECT /*+ LEADING(IA.PODT) USE_NL(IA.PODT IA.POHD) */ IA.LINE_STATUS FROM HLDC_PO_PO IA WHERE IA.PO_ID = A.PR_ID )
                    END
                   ELSE A.LINE_STATUS
                   END LINE_STATUS									/* 구매진행상황코드 */
                   , B.D_DAYS AS D_DAY
                   ,(SELECT TO_DATE(:needDate,'YYYYMMDD') -    TO_DATE(Z.NONHOLI_DATE,'YYYYMMDD')
                   FROM (SELECT ROW_NUMBER() OVER(ORDER BY Z.CD_SY||Z.CD_SM||Z.CD_SD DESC) AS    SEQ
                                  , Z.CD_SY||Z.CD_SM||Z.CD_SD    AS NONHOLI_DATE
                               FROM SCC_CALENDA_DATA Z
                              WHERE Z.CD_SY||Z.CD_SM||Z.CD_SD    < :needDate
                                AND Z.CD_SY BETWEEN TO_NUMBER(SUBSTR(:needDate, 1, 4)) - 1 AND TO_NUMBER(SUBSTR(:needDate, 1, 4))
                        AND Z.CD_WEEK    NOT IN ('일')) Z
                      WHERE Z.SEQ    = B.D_DAYS ) AS D_DAYS
                   , B.D_TIMES
        			, TO_CHAR(sysdate,'YYYYMMDD') AS tday
        			, TO_CHAR(sysdate,'HH24') AS ttime
        			, A.NEED_DATE
                   		FROM SO_PR A, HLDC_PO_PREORDER_LIST B
        						WHERE A.ORG_PR_NUM = :prNum
                   				AND A.ITEM_CODE = B.ITEM_CODE AND A.CENTER_CODE = B.CENTER_CODE
         ) D
 ]]></statement>
<statement name="deleteRecipeItem"><![CDATA[
UPDATE FSM_REAL_RECIPE_ITEM A
   SET A.ORDER_YN = 'N'
     , A.PR_NUM = NULL
     , A.PR_QTY = 0
     , A.PR_ID  = NULL
     , A.UDATE = SYSDATE
     , A.UUSER = :sabun
 WHERE A.ORDER_YN = 'Y'
   AND A.NEED_DATE = :needDate
   AND EXISTS
       (
        SELECT 1
          FROM SO_PR C
         WHERE C.PR_ID = A.PR_ID
           AND C.ORG_PR_NUM = :prNum
       )
]]></statement>
<statement name="deletePrRecipeInfo"><![CDATA[
UPDATE SO_PR
   SET LINE_STATUS = '003'
     , UPDATE_DATE = SYSDATE
     , UPDATE_BY   = :sabun
 WHERE ORG_PR_NUM  = :prNum
   AND LINE_STATUS <> '999'
]]></statement>
 <statement name="selectRecipePrNum"><![CDATA[
SELECT PR_NUM
  FROM SO_PR
 WHERE ORG_PR_NUM = :prNum
 GROUP BY PR_NUM
 ]]></statement>
  <statement name="selectReplaceItemInfo"><![CDATA[
SELECT TT.ITEM_CODE
     , TT.ITEM_NAME
     , TT.ITEM_CLASS4
     , TT.DUTY_YN
     , TT.PB_YN
     , TT.MANUF_YN
     , TT.ECO_ITEM_YN
     , TT.NPB_YN
     , TT.ITEM_SIZE
     , TT.PO_UOM
     , TT.KG_QTY
--     , TT.ONHAND_QTY
--     , TT.CANCEL_PR_QTY
     , TT.PR_QTY
     , TT.G_ITEM_PRICE
     , TT.TAX_CODE
     , TT.CENTER_FLAG
     , TT.REMARK
     , TT.POINT_FLAG
     , TT.SUBINV_CODE
     , TT.NEED_DATE
     , TT.UPJANG
     , TT.DEPT_ID
     , TT.ACCTCD
     , TT.BUD_CLS
     , TT.MU_CD
     , TT.INVAT_FLAG
     , TT.OUTVAT_FLAG
     , TT.MIN_ORD_QTY
     , TT.MAX_ORD_QTY
     , TT.CENTER_CODE
     , TT.STOCK_FLAG
     , TT.BARCODE
     , TT.MULTIPLIER_QTY
     , TT.BUDDEPT_ID
     , TT.USE_YN
     , TT.CONTRACT_YN
     , TT.MARGIN_PRICE
     , TT.UNIT_PRICE
     , TT.CUSTCD
     , TT.KG_CONVERT_RATE
     , TT.MARGIN_RATE
     , TT.GRAM_PRICE
     , TT.AP_UNITPRICE_UPJANG
     , TT.RESTRICT_PERIOD
     , TT.RESTRICT_REASON
     , TT.DUTY_END_DATE
     , TT.MIN_DUTY_QTY
     , TT.DUTY_QTY
     , TT.REAL_USE_QTY
     , TT.SHP_MAP
     , TT.MTG_UNS
     , TT.MTG_STP
     , TT.REQ_WKD
     , TT.SCH
     , TT.D_DAY
     , TT.D_DAYS
     , TT.D_TIMES
     , TT.D_DAY_YN
     , TT.SPICE_YN
     , TT.CORN_YN
     , TT.IMG_PATH
     , TT.ORIGIN_NAT
     , TT.ORIGIN_TYPE
     , TT.VD_SN
     , TT.APPLY_SD
     , TT.AGG_QTY
     , TT.UPJANG_GRP
     , TT.IS_ENF
     , TT.CHEAP_YN
     , CASE WHEN SHP_MAP = 'N' THEN '단가계약 안됨'
            WHEN MTG_UNS = 'N' THEN '불용자재'
            WHEN MTG_STP = 'N' THEN '중지자재'
            WHEN REQ_WKD = 'N' THEN '요일제한'
            WHEN LENGTH(RESTRICT_PERIOD)>0 THEN '금지자재('||RESTRICT_PERIOD||','||RESTRICT_REASON||')'
            WHEN SCH = 'N' THEN '수발주제한'
            ELSE PR_REMARK END AS PR_REMARK,
       CASE WHEN SHP_MAP = 'N' OR REQ_WKD = 'N' OR SCH = 'N' THEN 'A'
            WHEN MTG_UNS = 'N' OR MTG_STP = 'N' THEN 'B'
            WHEN LENGTH(RESTRICT_PERIOD)>0 THEN 'C'
            ELSE 'Y' END AS PR_YN,
       TT.MARGIN_PRICE * TT.PR_QTY AS TOT_AMT
FROM (
        SELECT
               A.ITEM_CODE
             , A.ITEM_NAME
             , A.ITEM_CLASS4
             , FSI_DUTY_ITEM_YN(A.CENTER_CODE, A.CUSTCD, A.ITEM_CODE, :needDate) AS DUTY_YN
             , A.PB_YN
--             , A.MANUF_CD AS MANUF_YN
			 , CASE WHEN LENGTH(TRIM(A.MANUF_CD)) > 0 AND TRIM(A.MANUF_CD) <> '해당없음' THEN 'Y' ELSE 'N' END AS MANUF_YN
             , CASE WHEN LENGTH(TRIM(A.ECO_ITEM)) > 0 AND TRIM(A.ECO_ITEM) <> '해당없음' THEN 'Y' ELSE 'N' END AS ECO_ITEM_YN
             , A.NPB_YN
--              , FN_ITEM_FEATURE_ICON(FSI_DUTY_ITEM_YN(A.CENTER_CODE, A.CUSTCD, A.ITEM_CODE, :needDate), A.PB_YN, A.ECO_ITEM, A.MANUF_CD) AS FEATURE_NAME
             , A.ITEM_SIZE
             , A.PO_UOM
             , 0 KG_QTY
--             , 0 ONHAND_QTY
--             , 0 CANCEL_PR_QTY
             , 0 PR_QTY
             , A.G_ITEM_PRICE /* g당 단가 = 출하율적용단가 / Kg 환산율 / 1000 */
             , A.TAX_CODE
             , A.CENTER_FLAG
             , A.PR_REMARK
             , A.REMARK
             , A.POINT_FLAG
             , :subinvCd SUBINV_CODE
             , :needDate NEED_DATE
             , A.UPJANG
             , B.DEPT_ID
             , A.ACCTCD         /* 입고 계정 코드(대표) : MATERIAL_ACCTCD */
             , A.BUD_CLS        /* 예산 조직 cc 코드 : BUDCC_CD */
             , B.MU_CD
             , A.INVAT_FLAG
             , A.OUTVAT_FLAG
             , A.MIN_ORD_QTY
             , A.MAX_ORD_QTY
             , A.CENTER_CODE      /* 센터코드 */
             , A.STOCK_FLAG
             , A.BARCODE
             , NVL(A.MULTIPLIER_QTY, 0) AS MULTIPLIER_QTY
             , A.BUD_CLS AS BUDDEPT_ID  /* 예산 조직 cc 코드 : BUDCC_CD - 고도화에서 부서코드가 CC로 대체됨 */
             , A.USE_YN
             , DECODE(A.CUSTCD, NULL, 'N', 'Y') AS CONTRACT_YN
             , NVL(TO_NUMBER(A.MARGIN_PRICE), 0) AS MARGIN_PRICE     /* 출하율적용단가 */
             , A.UNIT_PRICE       /* 구매(매입)단가 */
             , A.CUSTCD           /* 매입거래처코드 */
             , A.KG_CONVERT_RATE
             , A.MARGIN_RATE
             , NVL(A.MARGIN_PRICE, 0) / KG_CONVERT_RATE / 1000 AS GRAM_PRICE
             , A.AP_UNITPRICE_UPJANG
             , D.RESTRICT_PERIOD
             , D.RESTRICT_REASON
             , NULL DUTY_END_DATE
             , 0 MIN_DUTY_QTY
             , 0 DUTY_QTY
             , 0 REAL_USE_QTY
             , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_SHP_MAP('100', 'HFC', G.OPER_ORG_SN_PURC, A.UPJANG_GRP, A.ITEM_CODE, :needDate) = 'CK' THEN 'Y' ELSE 'N' END
                                                            AS SHP_MAP  /* 자재 업장군 맵핑 유효성 체크 CE : 맵핑안되어있음(사용불가), CK : 맵핑되어있음(사용가능) */
             , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_MTG_UNS('100', A.ITEM_CODE) = 'UP' THEN 'Y' ELSE 'N' END
                                                            AS MTG_UNS      /* 자재불용체크 UK: 불용, UP:불용아님, NN: DATA NOT FOUND */
             , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_MTG_STP('100', A.ITEM_CODE, '01') = 'TP' THEN 'Y' ELSE 'N' END
                                                            AS MTG_STP      /* 자재 중지체크 TK : 중지(사용불가), TP : 중지아님(사용가능), NN: DATA NOT FOUND */
             , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_REQ_WKD('100', 'HFC', G.OPER_ORG_SN_PURC, A.ITEM_CODE, A.VD_SN, '01', :needDate) = 'XR' THEN 'Y' ELSE 'N' END
                                                            AS REQ_WKD      /* 요일별 신청불가 체크 XE : 신청불가(사용불가), XR : 신청가능(사용가능), NN : DATA NOT FOUND */
             , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_SCH('100', 'HFC', G.OPER_ORG_SN_PURC, A.ITEM_CODE, A.VD_SN, '01', NVL(C.D_DAY, 0), NVL(C.D_TIMES, 0), :prDate, :needDate) = 'HK' THEN 'Y' ELSE 'N' END
                                                            AS SCH          /* 수발주 스케쥴에 따른 유효성 체크 HE : 신청불가(사용불가), HK : 신청가능(사용가능), NN : DATA NOT FOUND */
             , NVL(C.D_DAYS,0)  AS D_DAY
             , DECODE(C.D_DAYS,NULL,   0, DECODE(SIGN(TO_DATE(:needDate, 'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - NVL(C.D_DAYS,0) - 1) , 0,
                                          DECODE(SIGN(DECODE(C.D_TIMES, '', 24, 0, 24, C.D_TIMES) - TO_NUMBER(TO_CHAR(SYSDATE, 'HH24'))), 1, 0, 1), 0) + NVL(C.D_DAYS, 0)) AS D_DAYS
             , DECODE(C.D_DAYS,NULL,   0, DECODE(C.D_TIMES, '', 24, 0, 24, C.D_TIMES)) AS D_TIMES
             , DECODE(C.D_DAYS,NULL,'Y',
                               DECODE( SIGN(TO_DATE(:needDate,'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE,'YYYYMMDD'),'YYYYMMDD') - NVL(C.D_DAYS,0) - 1)
                                      ,-1, 'N'
                                      , 0, DECODE(SIGN(DECODE(C.D_TIMES,'',24,0,24,C.D_TIMES) - TO_NUMBER(TO_CHAR(SYSDATE,'HH24'))),-1,'N',0,'N','C')
                                      , 1, 'Y'
                               )
                       )
                 AS D_DAY_YN
             , A.SPICE_YN
             , A.CORN_YN
             , A.IMG_PATH
             , A.ORIGIN_NAT
             , A.ORIGIN_TYPE
             , A.VD_SN
             , A.APPLY_SD
             , SCC_SOPR_AGG_FUN(:subinvCd, A.ITEM_CODE, 1) AS AGG_QTY
             , A.UPJANG_GRP
             , 0 AS IS_ENF
             , CASE WHEN H.G_PRICE < A.G_ITEM_PRICE THEN 'Y' ELSE 'N' END AS CHEAP_YN
          FROM (
                SELECT  C.ITEM_CODE
                      , C.ITEM_NAME
                      , C.ITEM_CLASS4
                      , C.ITEM_SIZE
                      , C.PO_UOM
                      , C.TAX_CODE
                      , A.PROC_TYP_CD  AS  CENTER_FLAG
                      , '' AS PR_REMARK
                      , '' AS REMARK
                      , C.POINT_FLAG
                      , B.UPJANG
                      , B.INVAT_FLAG
                      , B.OUTVAT_FLAG
                      , C.MIN_ORD_QTY
                      , C.MAX_ORD_QTY
                      , A.CENTER_CODE      /* 센터코드 */
                      , B.STOCK_FLAG
                      , C.BARCODE
                      , C.MULTIPLIER_QTY
                      , C.USE_YN
                      , TO_NUMBER(DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, (ROUND((A.CONTRACT_PRICE + (A.CONTRACT_PRICE * A.MARGIN_RATE / 100)) / 10) * 10))) AS MARGIN_PRICE
                      , A.CONTRACT_PRICE AS UNIT_PRICE       /* 구매(매입)단가 */
                      , ROUND(NVL(DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, ROUND((A.CONTRACT_PRICE + (A.CONTRACT_PRICE * A.MARGIN_RATE / 100)) / 10) * 10) / NVL(C.KG_CONVERT_RATE, 1) / 1000, 0), 2) AS G_ITEM_PRICE
                      , A.CUSTCD           /* 매입거래처코드 */
                      , NVL(C.KG_CONVERT_RATE, 1) KG_CONVERT_RATE
                      , A.MARGIN_RATE
                      , A.UPJANG AS AP_UNITPRICE_UPJANG
                      , C.SPICE_YN
                      , C.CORN_YN
                      , C.IMG_PATH
                      , C.ORIGIN_NAT
                      , C.ORIGIN_TYPE
                      , B.MATERIAL_ACCTCD AS ACCTCD
                      , B.BUDCC_CD AS BUD_CLS
                      , A.DUTY_YN
					  , A.PB_YN
                      , C.MANUF_CD
                      , C.ECO_ITEM
                      , A.NPB_YN
                      , A.VD_SN
                      , A.APPLY_SD
                      , A.UPJANG_GRP
                   FROM HLDC_PO_CONTRACT_F A
                      , HLDC_PO_SUBINVENTORY B
                      , HLDC_PO_ITEM_MST C
                  WHERE A.UPJANG       = B.UPJANG
                    AND A.ITEM_CODE    = C.ITEM_CODE
                    AND A.CENTER_CODE  = :centerCd
                    AND A.UPJANG       = :upjangCd
                    AND :needDate BETWEEN A.CONTRACT_START(+) AND A.CONTRACT_END(+)
                    AND B.SUBINV_CODE  = :subinvCd
                    AND C.ITEM_CLASS4  = :itemClass4
               ) A
             , SCO_UPJANG_MST_V B
             ,(SELECT A.CENTER_CODE
                    , A.ITEM_CODE
                    ,(SELECT TO_DATE(:needDate,'YYYYMMDD') - TO_DATE(Z.NONHOLI_DATE,'YYYYMMDD')
                        FROM (SELECT ROW_NUMBER() OVER(ORDER BY Z.CD_SY||Z.CD_SM||Z.CD_SD DESC) AS SEQ
                                   , Z.CD_SY||Z.CD_SM||Z.CD_SD AS NONHOLI_DATE
                                FROM SCC_CALENDA_DATA Z
                               WHERE Z.CD_SY||Z.CD_SM||Z.CD_SD < :needDate
                                 AND Z.CD_SY BETWEEN TO_NUMBER(SUBSTR(:needDate, 1, 4)) - 1 AND TO_NUMBER(SUBSTR(:needDate, 1, 4))
                              -- AND Z.HOLIDAY NOT IN (1,2) --일요일 제외한 국가 공휴일 (일요일만 체크, 그 외 공유일은 상관없음(김진희))
                                 AND Z.CD_WEEK NOT IN ('일')) Z
                       WHERE Z.SEQ = A.D_DAYS ) AS D_DAYS
                     , A.D_DAYS  AS D_DAY
                     , A.D_TIMES
                  FROM HLDC_PO_PREORDER_LIST A
                 WHERE A.CENTER_CODE = :centerCd
               ) C                      /* 선발주 제한 */
             , (
                SELECT UPJANG
                     , ITEM_CODE
                     , TO_CHAR(TO_DATE(RESTRICT_START, 'YYYYMMDD'), 'YYYY.MM.DD') || '~' || TO_CHAR(TO_DATE(RESTRICT_END, 'YYYYMMDD'), 'YYYY.MM.DD') AS RESTRICT_PERIOD
                     , RESTRICT_REASON
                  FROM FSI_RESTRICT_SET
                 WHERE UPJANG = :upjangCd
                   AND (RESTRICT_START <= :needDate AND RESTRICT_END >= :needDate)
                   AND NOT (CNL_START IS NOT NULL AND CNL_START  <= :needDate AND CNL_END      >= :needDate)
               ) D                      /* 금지자재 */
             , (
                SELECT
                       CENTER_CODE
                     , CUSTCD
                     , ITEM_CODE
                     , 'N' PR_YN
                  FROM HLDC_PO_ORDER_SCHEDULE Z
                 WHERE CENTER_CODE = :centerCd
                   AND UPJANG      = :apUnitpriceUpjang
                   AND UPJANG_TYPE = '01' /* 업장유형코드 01:직영, 02:고객 */
                   AND USE_YN      = 'Y'
                   AND DECODE(TO_CHAR(TO_DATE(:needDate, 'YYYYMMDD'), 'D'), 1, SUN, 2, MON, 3, TUE, 4, WED, 5, THU, 6, FRI, 7, SAT) = 'Y'
               ) F
             , VO_CENTER G
            , (
               SELECT ITEM_CLASS4, MIN(G_PRICE) AS G_PRICE
                 FROM (
                       SELECT C.ITEM_CLASS4
                            , ROUND(DECODE(B.MARGIN_RATE, 0, B.CONTRACT_PRICE, (ROUND((B.CONTRACT_PRICE + (B.CONTRACT_PRICE * B.MARGIN_RATE / 100)) / 10) * 10)) / DECODE(C.KG_CONVERT_RATE, 0, 1, C.KG_CONVERT_RATE) / 1000, 2) G_PRICE
                         FROM ST_UPJANG A
                            , HLDC_PO_CONTRACT_F B
                            , HLDC_PO_ITEM_MST C
                        WHERE B.ITEM_CODE = C.ITEM_CODE
                          AND B.USE_YN    = 'Y'
                          AND B.CONTRACT_PRICE > 0
                          AND B.UPJANG    = A.AP_UNITPRICE_UPJANG
                          AND :needDate BETWEEN B.CONTRACT_START AND B.CONTRACT_END
                          AND A.UPJANG    = :upjangCd
<#if itemName?has_content>
			            AND (C.ITEM_NAME LIKE '%' || :itemName || '%' OR C.ITEM_CODE LIKE '%' || :itemName || '%')
</#if>
                       )
                GROUP BY ITEM_CLASS4
              ) H
         WHERE A.UPJANG = B.UPJANG
           AND A.CENTER_CODE = C.CENTER_CODE(+)
           AND A.ITEM_CODE   = C.ITEM_CODE  (+)
           AND A.ITEM_CODE   = D.ITEM_CODE  (+)
           AND A.CENTER_CODE = F.CENTER_CODE(+)
           AND A.CUSTCD      = F.CUSTCD     (+)
           AND A.ITEM_CODE   = F.ITEM_CODE  (+)
           AND A.CENTER_CODE = G.CENTER_CODE(+)
           AND A.ITEM_CLASS4 = H.ITEM_CLASS4(+)
         ORDER BY A.ITEM_CLASS4, A.ITEM_NAME, A.ITEM_CODE
) TT
 ]]></statement>
  <statement name="selectSpiceItemInfo"><![CDATA[
SELECT TT.PR_NUM
     , TT.PR_ID
     , TT.ITEM_CODE
     , TT.ITEM_NAME
     , TT.ITEM_CLASS3
     , TT.ITEM_CLASS4
     , TT.DUTY_YN
     , TT.PB_YN
     , TT.MANUF_YN
     , TT.ECO_ITEM_YN
	 , TT.NPB_YN
     , TT.ITEM_SIZE
     , TT.PO_UOM
     , TT.KG_QTY
--     , TT.ONHAND_QTY
--     , TT.CANCEL_PR_QTY
     , TT.PR_QTY
     , TT.G_ITEM_PRICE
     , TT.TAX_CODE
     , TT.CENTER_FLAG
     , TT.REMARK
     , TT.POINT_FLAG
     , TT.SUBINV_CODE
     , TT.NEED_DATE
     , TT.UPJANG
     , TT.DEPT_ID
     , TT.ACCTCD
     , TT.BUD_CLS
     , TT.MU_CD
     , TT.INVAT_FLAG
     , TT.OUTVAT_FLAG
     , TT.MIN_ORD_QTY
     , TT.MAX_ORD_QTY
     , TT.CENTER_CODE
     , TT.STOCK_FLAG
     , TT.BARCODE
     , TT.MULTIPLIER_QTY
     , TT.BUDDEPT_ID
     , TT.USE_YN
     , TT.CONTRACT_YN
     , TT.MARGIN_PRICE
     , TT.UNIT_PRICE
     , TT.CUSTCD
     , TT.KG_CONVERT_RATE
     , TT.MARGIN_RATE
     , TT.GRAM_PRICE
     , TT.AP_UNITPRICE_UPJANG
     , TT.RESTRICT_PERIOD
     , TT.RESTRICT_REASON
     , TT.DUTY_END_DATE
     , TT.MIN_DUTY_QTY
     , TT.DUTY_QTY
     , TT.REAL_USE_QTY
     , TT.SHP_MAP
     , TT.MTG_UNS
     , TT.MTG_STP
     , TT.REQ_WKD
     , TT.SCH
     , TT.D_DAY
     , TT.D_DAYS
     , TT.D_TIMES
     , TT.SPICE_YN
     , TT.CORN_YN
     , TT.IMG_PATH
     , TT.ORIGIN_NAT
     , TT.ORIGIN_TYPE
     , TT.VD_SN
     , TT.APPLY_SD
     , TT.MOBILE_GUBUN
     , TT.AGG_QTY
     , TT.UPJANG_GRP
     , TT.IS_ENF
     , TT.CHEAP_YN
     , CASE WHEN SHP_MAP = 'N' THEN '단가계약 안됨'
            WHEN MTG_UNS = 'N' THEN '불용자재'
            WHEN MTG_STP = 'N' THEN '중지자재'
            WHEN REQ_WKD = 'N' THEN '요일제한'
            WHEN LENGTH(RESTRICT_PERIOD)>0 THEN '금지자재('||RESTRICT_PERIOD||','||RESTRICT_REASON||')'
            WHEN SCH = 'N' THEN '수발주제한'
            ELSE PR_REMARK END AS PR_REMARK,
       CASE WHEN SHP_MAP = 'N' OR REQ_WKD = 'N' OR SCH = 'N' THEN 'A'
            WHEN MTG_UNS = 'N' OR MTG_STP = 'N' THEN 'B'
            WHEN LENGTH(RESTRICT_PERIOD)>0 THEN 'C'
            ELSE 'Y' END AS PR_YN,
       TT.MARGIN_PRICE * TT.PR_QTY AS TOT_AMT
  FROM (
        SELECT /*+ USE_HASH(A D G)*/ '' AS PR_NUM
             , '' AS PR_ID
             , A.ITEM_CODE
             , A.ITEM_NAME
             , A.ITEM_CLASS3
             , A.ITEM_CLASS4
             , FSI_DUTY_ITEM_YN(A.CENTER_CODE, A.CUSTCD, A.ITEM_CODE, :needDate) AS DUTY_YN
             , A.PB_YN
--             , A.MANUF_CD AS MANUF_YN
			 , CASE WHEN LENGTH(TRIM(A.MANUF_CD)) > 0 AND TRIM(A.MANUF_CD) <> '해당없음' THEN 'Y' ELSE 'N' END AS MANUF_YN
             , CASE WHEN LENGTH(TRIM(A.ECO_ITEM)) > 0 AND TRIM(A.ECO_ITEM) <> '해당없음' THEN 'Y' ELSE 'N' END AS ECO_ITEM_YN
			 , A.NPB_YN
             , A.ITEM_SIZE
             , A.PO_UOM
             , 0 KG_QTY
--             , 0 ONHAND_QTY
--             , 0 CANCEL_PR_QTY
             , 0 PR_QTY
--              , 0 TOT_AMT
             , ROUND(NVL(A.MARGIN_PRICE / A.KG_CONVERT_RATE / 1000, 0)) AS G_ITEM_PRICE /* g당 단가 = 출하율적용단가 / Kg 환산율 / 1000 */
             , A.TAX_CODE
             , A.CENTER_FLAG
             , A.PR_REMARK
             , A.REMARK
             , A.POINT_FLAG
             , :subinvCd SUBINV_CODE
             , :needDate NEED_DATE
             , A.UPJANG
             , B.DEPT_ID
             , A.ACCTCD         /* 입고 계정 코드(대표) : MATERIAL_ACCTCD */
             , A.BUD_CLS        /* 예산 조직 cc 코드 : BUDCC_CD */
             , B.MU_CD
             , A.INVAT_FLAG
             , A.OUTVAT_FLAG
             , A.MIN_ORD_QTY
             , A.MAX_ORD_QTY
             , A.CENTER_CODE      /* 센터코드 */
             , A.STOCK_FLAG
             , A.BARCODE
             , NVL(A.MULTIPLIER_QTY, 0) AS MULTIPLIER_QTY
             , A.BUD_CLS AS BUDDEPT_ID  /* 예산 조직 cc 코드 : BUDCC_CD - 고도화에서 부서코드가 CC로 대체됨 */
             , A.USE_YN
             , DECODE(A.CUSTCD, NULL, 'N', 'Y') AS CONTRACT_YN
             , NVL(A.MARGIN_PRICE, 0) AS MARGIN_PRICE     /* 출하율적용단가 */
             , A.UNIT_PRICE       /* 구매(매입)단가 */
             , A.CUSTCD           /* 매입거래처코드 */
             , A.KG_CONVERT_RATE
             , A.MARGIN_RATE
             , NVL(A.MARGIN_PRICE, 0) / KG_CONVERT_RATE / 1000 AS GRAM_PRICE
             , A.AP_UNITPRICE_UPJANG
             , D.RESTRICT_PERIOD
             , D.RESTRICT_REASON
             , NULL DUTY_END_DATE
             , 0 MIN_DUTY_QTY
             , 0 DUTY_QTY
             , 0 REAL_USE_QTY
             , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_SHP_MAP('100', 'HFC', E.OPER_ORG_SN_PURC, A.UPJANG_GRP, A.ITEM_CODE, :needDate)	= 'CK' THEN 'Y' ELSE 'N' END
		                                                    AS SHP_MAP  /* 자재 업장군 맵핑 유효성 체크 CE : 맵핑안되어있음(사용불가), CK : 맵핑되어있음(사용가능) */
		     , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_MTG_UNS('100', A.ITEM_CODE) = 'UP' THEN 'Y' ELSE 'N' END
		                                                    AS MTG_UNS      /* 자재불용체크 UK: 불용, UP:불용아님, NN: DATA NOT FOUND */
		     , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_MTG_STP('100', A.ITEM_CODE, '01') = 'TP' THEN 'Y' ELSE 'N' END
		                                                    AS MTG_STP      /* 자재 중지체크 TK : 중지(사용불가), TP : 중지아님(사용가능), NN: DATA NOT FOUND */
		     , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_REQ_WKD('100', 'HFC', E.OPER_ORG_SN_PURC, A.ITEM_CODE, A.VD_SN, '01', :needDate) = 'XR' THEN 'Y' ELSE 'N' END
		                                                    AS REQ_WKD      /* 요일별 신청불가 체크 XE : 신청불가(사용불가), XR : 신청가능(사용가능), NN : DATA NOT FOUND */
		     , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_SCH('100', 'HFC', E.OPER_ORG_SN_PURC, A.ITEM_CODE, A.VD_SN, '02', NVL(C.D_DAY, 0), NVL(C.D_TIMES, 0), :prDate, :needDate) = 'HK' THEN 'Y' ELSE 'N' END
		                                                    AS SCH          /* 수발주 스케쥴에 따른 유효성 체크 HE : 신청불가(사용불가), HK : 신청가능(사용가능), NN : DATA NOT FOUND */
             , NVL(C.D_DAYS,0) + 1 AS D_DAY
             , DECODE(C.D_DAYS,NULL,   0, DECODE(SIGN(TO_DATE(:needDate, 'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - NVL(C.D_DAYS,0) - 1) , 0,
                                          DECODE(SIGN(DECODE(C.D_TIMES, '', 24, 0, 24, C.D_TIMES) - TO_NUMBER(TO_CHAR(SYSDATE, 'HH24'))), 1, 0, 1), 0) + NVL(C.D_DAYS, 0) + 1) AS D_DAYS
             , DECODE(C.D_DAYS,NULL,   0, DECODE(C.D_TIMES, '', 24, 0, 24, C.D_TIMES)) AS D_TIMES
             , A.SPICE_YN
             , A.CORN_YN
             , A.IMG_PATH
             , A.ORIGIN_NAT
             , A.ORIGIN_TYPE
             , A.VD_SN
             , A.APPLY_SD
             , 'M' AS MOBILE_GUBUN
             , SCC_SOPR_AGG_FUN(:subinvCd, A.ITEM_CODE, 1) AS AGG_QTY
             , A.UPJANG_GRP
             , 0 AS IS_ENF
             , CASE WHEN G.G_PRICE < A.G_ITEM_PRICE THEN 'Y' ELSE 'N' END AS CHEAP_YN
          FROM (
                SELECT C.ITEM_CODE
                      , C.ITEM_NAME
                      , C.ITEM_CLASS3
                      , C.ITEM_CLASS4
                      , C.ITEM_SIZE
                      , C.PO_UOM
                      , C.TAX_CODE
                      , A.PROC_TYP_CD AS  CENTER_FLAG
                      , '' AS PR_REMARK
                      , '' AS REMARK
                      , C.POINT_FLAG
                      , B.UPJANG
                      , B.INVAT_FLAG
                      , B.OUTVAT_FLAG
                      , C.MIN_ORD_QTY
                      , C.MAX_ORD_QTY
                      , A.CENTER_CODE      /* 센터코드 */
                      , B.STOCK_FLAG
                      , C.BARCODE
                      , C.MULTIPLIER_QTY
                      , C.USE_YN
                      , TO_NUMBER(DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, (ROUND((A.CONTRACT_PRICE + (A.CONTRACT_PRICE * A.MARGIN_RATE / 100)) / 10) * 10))) AS MARGIN_PRICE
                      , A.CONTRACT_PRICE AS UNIT_PRICE       /* 구매(매입)단가 */
                      , ROUND(NVL(DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, ROUND((A.CONTRACT_PRICE + (A.CONTRACT_PRICE * A.MARGIN_RATE / 100)) / 10) * 10) / NVL(C.KG_CONVERT_RATE, 1) / 1000, 0), 2) AS G_ITEM_PRICE
                      , A.CUSTCD           /* 매입거래처코드 */
                      , NVL(C.KG_CONVERT_RATE, 1) KG_CONVERT_RATE
                      , A.MARGIN_RATE
                      , A.UPJANG AS AP_UNITPRICE_UPJANG
                      , C.SPICE_YN
                      , C.CORN_YN
                      , C.IMG_PATH
                      , C.ORIGIN_NAT
                      , C.ORIGIN_TYPE
                      , B.MATERIAL_ACCTCD AS ACCTCD
                      , B.BUDCC_CD AS BUD_CLS
                      , A.DUTY_YN
                      , A.PB_YN
                      , C.MANUF_CD
                      , C.ECO_ITEM
                      , A.NPB_YN
                      , A.VD_SN
                      , A.APPLY_SD
        			   , A.UPJANG_GRP
                   FROM HLDC_PO_CONTRACT_F A
                      , HLDC_PO_SUBINVENTORY B
                      , HLDC_PO_ITEM_MST C
                      , FSI_ITEM_NUT D
                  WHERE A.UPJANG       = B.UPJANG
                    AND A.ITEM_CODE    = C.ITEM_CODE
                    AND A.ITEM_CODE    = D.ITEM_CODE(+)
        			AND :needDate BETWEEN A.CONTRACT_START(+) AND A.CONTRACT_END(+)
                    AND A.CENTER_CODE  = :centerCd
                    AND A.UPJANG       = :upjangCd
                    AND B.SUBINV_CODE  = :subinvCd
		            AND C.USE_YN = 'Y'
<#if choice?has_content>		            
	<#if choice=="CORN">
				            AND C.CORN_YN = 'Y'
	<#else>
				            AND C.SPICE_YN = 'Y'
	</#if>
</#if>
<#if itemName?has_content>
			            AND (C.ITEM_NAME LIKE '%' || :itemName || '%' OR C.ITEM_CODE LIKE '%' || :itemName || '%')
</#if>
               ) A
             , SCO_UPJANG_MST_V B
             ,(SELECT A.CENTER_CODE
                    , A.ITEM_CODE , A.D_DAYS AS D_DAY
                    ,(SELECT TO_DATE(:needDate,'YYYYMMDD') - TO_DATE(Z.NONHOLI_DATE,'YYYYMMDD')
                        FROM (SELECT ROW_NUMBER() OVER(ORDER BY Z.CD_SY||Z.CD_SM||Z.CD_SD DESC) AS SEQ
                                   , Z.CD_SY||Z.CD_SM||Z.CD_SD AS NONHOLI_DATE
                                FROM SCC_CALENDA_DATA Z
                               WHERE Z.CD_SY||Z.CD_SM||Z.CD_SD < :needDate
                                 AND Z.CD_SY BETWEEN TO_NUMBER(SUBSTR(:needDate, 1, 4)) - 1 AND TO_NUMBER(SUBSTR(:needDate, 1, 4))
                              -- AND Z.HOLIDAY NOT IN (1,2) --일요일 제외한 국가 공휴일 (일요일만 체크, 그 외 공유일은 상관없음(김진희))
                                 AND Z.CD_WEEK NOT IN ('일')) Z
                       WHERE Z.SEQ = A.D_DAYS ) AS D_DAYS
                     , A.D_TIMES
                  FROM HLDC_PO_PREORDER_LIST A
                 WHERE A.CENTER_CODE = :centerCd
               ) C                      /* 선발주 제한 */
             , (
                SELECT UPJANG
                     , ITEM_CODE
                     , TO_CHAR(TO_DATE(RESTRICT_START, 'YYYYMMDD'), 'YYYY.MM.DD') || '~' || TO_CHAR(TO_DATE(RESTRICT_END, 'YYYYMMDD'), 'YYYY.MM.DD') AS RESTRICT_PERIOD
                     , RESTRICT_REASON
                  FROM FSI_RESTRICT_SET
                 WHERE UPJANG = :upjangCd
                   AND (RESTRICT_START <= :needDate AND RESTRICT_END >= :needDate)
                   AND NOT (CNL_START IS NOT NULL AND CNL_START  <= :needDate AND CNL_END      >= :needDate)
               ) D                      /* 금지자재 */
             , VO_CENTER E
            , (
		       SELECT ITEM_CLASS4, MIN(G_PRICE) AS G_PRICE
		         FROM (
		               SELECT C.ITEM_CLASS4
		                    , ROUND(DECODE(B.MARGIN_RATE, 0, B.CONTRACT_PRICE, (ROUND((B.CONTRACT_PRICE + (B.CONTRACT_PRICE * B.MARGIN_RATE / 100)) / 10) * 10)) / DECODE(C.KG_CONVERT_RATE, 0, 1, C.KG_CONVERT_RATE) / 1000, 2) G_PRICE
		                 FROM ST_UPJANG A
		                    , HLDC_PO_CONTRACT_F B
		                    , HLDC_PO_ITEM_MST C
		                WHERE B.ITEM_CODE = C.ITEM_CODE
		                  AND B.USE_YN    = 'Y'
		                  AND B.CONTRACT_PRICE > 0
		                  AND B.UPJANG    = A.AP_UNITPRICE_UPJANG
		                  AND A.UPJANG    = :upjangCd
		                  AND :needDate BETWEEN B.CONTRACT_START AND B.CONTRACT_END
		               )
		        GROUP BY ITEM_CLASS4
		      ) G
         WHERE A.UPJANG = B.UPJANG
           AND A.CENTER_CODE = C.CENTER_CODE(+)
           AND A.ITEM_CODE   = C.ITEM_CODE  (+)
           AND A.ITEM_CODE   = D.ITEM_CODE  (+)
           AND A.CENTER_CODE = E.CENTER_CODE(+)
           AND A.ITEM_CLASS4 = G.ITEM_CLASS4(+)
         ORDER BY A.ITEM_CLASS4, A.ITEM_NAME, A.ITEM_CODE) TT
 ]]></statement>
  <statement name="selectAddRecipeFilter"><![CDATA[
SELECT MIN(A.MARGIN_PRICE) AS MIN_MARGIN_PRICE
     , MAX(A.MARGIN_PRICE) AS MAX_MARGIN_PRICE
     , MIN(A.GRAM) AS MIN_GRAM
     , MAX(A.GRAM) AS MAX_GRAM
          FROM (
                SELECT  B.UPJANG
                      , TO_NUMBER(DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, (ROUND((A.CONTRACT_PRICE + (A.CONTRACT_PRICE * A.MARGIN_RATE / 100)) / 10) * 10))) AS MARGIN_PRICE
                      , NVL(C.KG_CONVERT_RATE, 1) * 1000 AS GRAM
                   FROM HLDC_PO_CONTRACT_F A
                      , HLDC_PO_SUBINVENTORY B
                      , HLDC_PO_ITEM_MST C
<#if favOrderYn == 'Y'>
              		  , FSP_FAVORITE D
</#if>
<#if preOrderYn == 'Y'>
                      , (SELECT ITEM_CODE, RC_UPJANG, CUSTCD, SUBINV_CODE
                           FROM SO_PR A
                          WHERE 1=1
                            AND A.NEED_DATE BETWEEN :startDt AND :endDt
                            AND A.RC_UPJANG = :upjangCd
                            AND A.SUBINV_CODE = :subinvCd
                          GROUP BY ITEM_CODE, RC_UPJANG, CUSTCD, SUBINV_CODE) F
</#if>
                  WHERE A.UPJANG       = B.UPJANG
                    AND A.ITEM_CODE    = C.ITEM_CODE
                    AND A.UPJANG       = :upjangCd
                    AND :needDate BETWEEN A.CONTRACT_START AND A.CONTRACT_END
                    AND B.SUBINV_CODE  = :subinvCd
                    AND C.ITEM_CLASS1  = 'F'
<#if barcode?has_content && favOrderYn != 'Y' && preOrderYn != 'Y'>
            AND C.BARCODE  = :barcode
</#if>
<#if itemCode?has_content && favOrderYn != 'Y' && preOrderYn != 'Y'>
--            AND C.ITEM_CODE LIKE UPPER('%'|| :itemCode ||'%')
			   AND (REGEXP_LIKE(C.ITEM_CODE, (SELECT SUBSTR(TRIM(LISTAGG(REPLACE(T.ITEM_NAME, ',', '|'), '|') WITHIN GROUP(ORDER BY ITEM_GROUP)),0,200) AS ITEM_NAME
			             FROM
			      						  (SELECT REPLACE(REPLACE(REPLACE(:itemCode, '(', '\\('), ')', '\\)'), ' ', '|') AS ITEM_NAME
			      							      , '1' AS ITEM_GROUP
			                                       FROM DUAL
			                                     UNION ALL
			                                     --정규식에서 괄호가 한쪽만 있으면 에러 발생하기때문에 치환처리
			   		                                  SELECT REPLACE(REPLACE(REPLACE(KEYWORD||'|'||SIM_TXT, '(', ''), ')', ''), ' ', '|') AS ITEM_NAME
			                                          , '1' AS ITEM_GROUP
			                                       FROM EPROCUSR.VO_ITEM_SIM_WORD
			                                      --유사어에 등록된 키워드는 일치검색으로 변경
			                                      WHERE KEYWORD = REPLACE(REPLACE(REPLACE(:itemCode, '(', '\\('), ')', '\\)'), ' ', '|')
			                                    ) T
			                              )
			   			             ))
</#if>
<#if itemName?has_content && favOrderYn != 'Y' && preOrderYn != 'Y'>
--            AND UPPER(C.ITEM_NAME) LIKE UPPER('%'|| :itemName ||'%')
			   AND (REGEXP_LIKE(C.ITEM_NAME, (SELECT SUBSTR(TRIM(LISTAGG(REPLACE(T.ITEM_NAME, ',', '|'), '|') WITHIN GROUP(ORDER BY ITEM_GROUP)),0,200) AS ITEM_NAME
			             FROM
			      						  (SELECT REPLACE(REPLACE(REPLACE(:itemName, '(', '\\('), ')', '\\)'), ' ', '|') AS ITEM_NAME
			      							      , '1' AS ITEM_GROUP
			                                       FROM DUAL
			                                     UNION ALL
			                                     --정규식에서 괄호가 한쪽만 있으면 에러 발생하기때문에 치환처리
			   		                                  SELECT REPLACE(REPLACE(REPLACE(KEYWORD||'|'||SIM_TXT, '(', ''), ')', ''), ' ', '|') AS ITEM_NAME
			                                          , '1' AS ITEM_GROUP
			                                       FROM EPROCUSR.VO_ITEM_SIM_WORD
			                                      --유사어에 등록된 키워드는 일치검색으로 변경
			                                      WHERE KEYWORD = REPLACE(REPLACE(REPLACE(:itemName, '(', '\\('), ')', '\\)'), ' ', '|')
			                                    ) T
			                              )
			   			             ))
</#if>
 /* 추가구매신청승인이 안된 업장이거나 승인예외업장이 아닌경우 양념 미곡만 조회 */
<#if approveYn != 'Y' && approveExceptYn != 'Y'>
                        AND (   C.SPICE_YN   =  'Y'
                             OR C.CORN_YN    =  'Y'
                            )
</#if>
<#if favOrderYn == 'Y'>
			        AND D.UPJANG       = A.UPJANG
			        AND D.ITEM_CODE    = A.ITEM_CODE
				<#if grpCode?has_content>
					AND D.FAVOR_GROUP  = :grpCode
				</#if>
				<#if favItemName?has_content>
					AND (C.ITEM_NAME LIKE '%' || :favItemName || '%' OR C.ITEM_CODE LIKE '%' || :favItemName || '%')
				</#if>
</#if>
<#if preOrderYn == 'Y'>
                    AND F.ITEM_CODE = A.ITEM_CODE
                    AND F.RC_UPJANG = A.UPJANG
                    AND F.CUSTCD = A.CUSTCD
                    AND F.SUBINV_CODE = B.SUBINV_CODE
				<#if preItemName?has_content>
					AND (C.ITEM_NAME LIKE '%' || :preItemName || '%' OR C.ITEM_CODE LIKE '%' || :preItemName || '%')
				</#if>
</#if>
               ) A
             , SCO_UPJANG_MST_V B
 WHERE A.UPJANG = B.UPJANG
 ]]></statement>
  <statement name="selectAddRecipeInfo"><![CDATA[
SELECT 
  ITEM_CODE
, ITEM_NAME
, ITEM_CLASS4
, DUTY_YN
, PB_YN
, ECO_ITEM_YN
, MANUF_YN
, NPB_YN
, ITEM_SIZE
, PO_UOM
, KG_QTY
, CANCEL_PR_QTY
, G_PRICE
, PR_QTY
, PR_AMT
, TOT_AMT
, TAX_CODE
, CENTER_FLAG
--, PR_REMARK
, REMARK
, POINT_FLAG
, SUBINV_CODE
, NEED_DATE
, UPJANG
, DEPT_ID
, ACCTCD
, BUD_CLS
, MU_CD
, INVAT_FLAG
, OUTVAT_FLAG
, MIN_ORD_QTY
, MAX_ORD_QTY
, CENTER_CODE
, STOCK_FLAG
, BARCODE
, KEEPING_TYPE
, MULTIPLIER_QTY
, BUDDEPT_ID
, USE_YN
, CONTRACT_YN
, MARGIN_PRICE
, UNIT_PRICE
, CUSTCD
, CHEAP_YN
, KG_CONVERT_RATE
, MARGIN_RATE
, AP_UNITPRICE_UPJANG
, RESTRICT_PERIOD
, RESTRICT_REASON
, DUTY_END_DATE
, MIN_DUTY_QTY
, DUTY_QTY
, REAL_USE_QTY
--, PR_YN
, SCH_INFO
, SHP_MAP
, MTG_UNS
, MTG_STP
, REQ_WKD
, SCH
, D_DAY
, D_DAYS
, D_TIMES
, D_DAY_YN
, SPICE_YN
, CORN_YN
, IMG_PATH
, ORIGIN_NAT
, ORIGIN_TYPE
, VD_SN
, APPLY_SD
, MOBILE_GUBUN
, AGG_QTY
, UPJANG_GRP
, FAVORITE_YN
, MD_NAME
, CASE WHEN SHP_MAP = 'N' THEN '단가계약 안됨'
       WHEN MTG_UNS = 'N' THEN '불용자재'
       WHEN MTG_STP = 'N' THEN '중지자재'
       WHEN REQ_WKD = 'N' THEN '요일제한'
       WHEN LENGTH(RESTRICT_PERIOD)>0 THEN '금지자재('||RESTRICT_PERIOD||','||RESTRICT_REASON||')'
       WHEN SCH = 'N' THEN '수발주제한'
       ELSE PR_REMARK END AS PR_REMARK
, CASE WHEN SHP_MAP = 'N' OR REQ_WKD = 'N' THEN 'A'
       WHEN MTG_UNS = 'N' OR MTG_STP = 'N' THEN 'B'
       WHEN LENGTH(RESTRICT_PERIOD)>0 THEN 'C'
       WHEN SCH = 'N' THEN 'D'
       ELSE 'Y' END AS PR_YN
, LISTNUM
, ROWCNT
FROM (
        SELECT A.ITEM_CODE                                                  /* 자재코드 */
             , A.ITEM_NAME                                                  /* 자재명 */
             , A.ITEM_CLASS4                                                /* 자재세분류코드 */
             , A.DUTY_YN                                                    /* 기획 */
             , A.PB_YN                                                      /* PB상품 */
             , A.ECO_ITEM_YN                                                /* 친환경 */
             , A.MANUF_YN                                                   /* 전처리 */
             , A.NPB_YN														/* NPB상품 */
             , A.ITEM_SIZE                                                  /* 자재규격 */
             , A.PO_UOM                                                     /* 자재단위 */
             , 0 KG_QTY                                                     /* 그램갯수 */
             , 0 AS CANCEL_PR_QTY                                           /* 구매취소량 */
             , ROUND(A.MARGIN_PRICE / A.KG_CONVERT_RATE / 1000,2) G_PRICE   /* 그램당 가격 */
             , 0 AS PR_QTY                                                  /* 구매량 */
             , 0 AS PR_AMT                                                  /* 구매금액 */
             , 0 AS TOT_AMT                                                 /* TOT_AMT = MARGIN_PRICE * PR_QTY (화면에서 계산) */
             , A.TAX_CODE                                                   /* 과/면세 */
             , A.CENTER_FLAG                                                /* 센터경유 */
             , A.PR_REMARK                                                     /* 비고 */
             , A.REMARK                                                     /* 비고 */
             , A.POINT_FLAG                                                 /* 소수점구매여부 */
             , :subinvCd SUBINV_CODE                            /* 창고코드 */
             , :needDate NEED_DATE                              /* 입고일자 */
             , A.UPJANG                                                     /* 업장코드 */
             , B.DEPT_ID                                                    /* 부서코드 */
             , A.ACCTCD                                                     /* 입고 계정 코드(대표) : MATERIAL_ACCTCD */
             , A.BUD_CLS                                                    /* 예산 조직 cc 코드 : BUDCC_CD */
             , B.MU_CD                                                      /* 사업부코드 */
             , A.INVAT_FLAG                                                 /* */
             , A.OUTVAT_FLAG                                                /* */
             , A.MIN_ORD_QTY                                                /* 최소발주량 */
             , A.MAX_ORD_QTY                                                /* 최대발주량 */
             , A.CENTER_CODE                                                /* 센터코드 */
             , A.STOCK_FLAG                                                 /* */
             , A.BARCODE                                                    /* 바코드 */
             , A.KEEPING_TYPE                                               /* 보관타입 */
             , NVL(A.MULTIPLIER_QTY, 0) AS MULTIPLIER_QTY                   /* 발주승수량 */
             , A.BUD_CLS AS BUDDEPT_ID                                      /* 예산 조직 cc 코드 : BUDCC_CD - 고도화에서 부서코드가 CC로 대체됨 */
             , A.USE_YN                                                     /* 사용여부  */
             , DECODE(A.CUSTCD, NULL, 'N', 'Y') AS CONTRACT_YN              /* 계약YN */
             , NVL(A.MARGIN_PRICE, 0) AS MARGIN_PRICE                       /* 출하율적용단가 */
             , A.UNIT_PRICE                                                 /* 구매(매입)단가 */
             , A.CUSTCD                                                     /* 매입거래처코드 */
             , 'N' CHEAP_YN                                                 /* 저럼한자재유무 */
             , A.KG_CONVERT_RATE                                            /* kg환산율 */
             , A.MARGIN_RATE                                                /* 마진비율 */
             , A.AP_UNITPRICE_UPJANG                                        /* 업장코드 */
             , D.RESTRICT_PERIOD                                            /* 금지기간 */
             , D.RESTRICT_REASON                                            /* 금지사유 */
             , NULL DUTY_END_DATE                                           /* */
             , 0 MIN_DUTY_QTY                                               /* */
             , 0 DUTY_QTY                                                   /* */
             , 0 REAL_USE_QTY                                               /*실사용갯수 */
--		     , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_REQ_WKD('100', 'HFC', F.OPER_ORG_SN_PURC, A.ITEM_CODE, A.VD_SN, '01', :needDate) = 'XR' THEN 'Y' ELSE 'N' END  AS PR_YN
		     , '' AS SCH_INFO
             , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_SHP_MAP('100', 'HFC', F.OPER_ORG_SN_PURC, A.UPJANG_GRP, A.ITEM_CODE, :needDate) = 'CK' THEN 'Y' ELSE 'N' END
                                                            AS SHP_MAP  /* 자재 업장군 맵핑 유효성 체크 CE : 맵핑안되어있음(사용불가), CK : 맵핑되어있음(사용가능) */
             , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_MTG_UNS('100', A.ITEM_CODE) = 'UP' THEN 'Y' ELSE 'N' END
                                                            AS MTG_UNS      /* 자재불용체크 UK: 불용, UP:불용아님, NN: DATA NOT FOUND */
             , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_MTG_STP('100', A.ITEM_CODE, '01') = 'TP' THEN 'Y' ELSE 'N' END
                                                            AS MTG_STP      /* 자재 중지체크 TK : 중지(사용불가), TP : 중지아님(사용가능), NN: DATA NOT FOUND */
             , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_REQ_WKD('100', 'HFC', F.OPER_ORG_SN_PURC, A.ITEM_CODE, A.VD_SN, '01', :needDate) = 'XR' THEN 'Y' ELSE 'N' END
                                                            AS REQ_WKD      /* 요일별 신청불가 체크 XE : 신청불가(사용불가), XR : 신청가능(사용가능), NN : DATA NOT FOUND */
             , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_SCH('100', 'HFC', F.OPER_ORG_SN_PURC, A.ITEM_CODE, A.VD_SN, '01', NVL(C.D_DAY, 0), NVL(C.D_TIMES, 0), :prDate, :needDate) = 'HK' THEN 'Y' ELSE 'N' END
                                                            AS SCH          /* 수발주 스케쥴에 따른 유효성 체크 HE : 신청불가(사용불가), HK : 신청가능(사용가능), NN : DATA NOT FOUND */
             , NVL(C.D_DAYS,0) + 1 AS D_DAY                                 /*D-DAY */
             , DECODE(C.D_DAYS,NULL,   0, DECODE(SIGN(TO_DATE(:needDate, 'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - NVL(C.D_DAYS,0) ) , 0,
                                          DECODE(SIGN(DECODE(C.D_TIMES, '', 24, 0, 24, C.D_TIMES) - TO_NUMBER(TO_CHAR(SYSDATE, 'HH24'))), 1, 0, 1), 0) + NVL(C.D_DAYS, 0) )
                                          AS D_DAYS                         /* D_DAYS */
             , DECODE(C.D_DAYS,NULL,   0, DECODE(C.D_TIMES, '', 24, 0, 24, C.D_TIMES))
                                          AS D_TIMES                        /* DAYYN */
             , DECODE(C.D_DAYS,NULL, 'Y', DECODE(SIGN(TO_DATE(:needDate, 'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - NVL(C.D_DAYS,0)) ,-1, 'N', 0,
                                          DECODE(SIGN(DECODE(C.D_TIMES, '', 24, 0, 24, C.D_TIMES) - TO_NUMBER(TO_CHAR(SYSDATE, 'HH24'))), -1, 'N', 0, 'N', 'C'), 1, 'Y'))
                                          AS D_DAY_YN                       /* DAYYN */
             , A.SPICE_YN                                                   /* 양념YN */
             , A.CORN_YN                                                    /* 미곡YN */
             , A.IMG_PATH                                                   /* 이미지 */
             , A.ORIGIN_NAT                                                 /* 원산지국가 */
             , A.ORIGIN_TYPE                                                /* 원산지타입 */
             , A.VD_SN                                                      /* 구매요청값 */
             , A.APPLY_SD                                                   /* 구매요청값 */
             , ''  AS MOBILE_GUBUN                                          /* 모바일구분 */
             , SCC_SOPR_AGG_FUN(:subinvCd,	A.ITEM_CODE, 1)	AS AGG_QTY	/* 평균발주수량 */
             , A.UPJANG_GRP                                                 /* 업장군 */
             , A.FAVORITE_YN                                                /* 즐겨찾기 등록여부 */
             , (SELECT UR.USR_NM FROM EPROCUSR.ESMVDOG OG, EPROCUSR.ESAUSER UR WHERE OG.SYS_ID = UR.SYS_ID AND OG.COMP_CD = UR.COMP_CD AND OG.OPER_ORG_SN = '414' AND OG.VD_SN = A.VD_SN AND OG.HFC_CHR_ID = UR.USR_ID) AS MD_NAME	/*담당MD*/
<#if sordFld == 'itemCode'>
	<#if sordMetd == 'DESC'>
	         , ROW_NUMBER() OVER (ORDER BY A.ITEM_NAME DESC) AS LISTNUM
	<#else>
             , ROW_NUMBER() OVER (ORDER BY A.ITEM_NAME) AS LISTNUM
    </#if>
<#elseif sordFld == 'saleAmount'>
	<#if sordMetd == 'DESC'>
             , ROW_NUMBER() OVER(ORDER BY NVL(A.MARGIN_PRICE, 0) DESC) AS LISTNUM
	<#else>
             , ROW_NUMBER() OVER(ORDER BY NVL(A.MARGIN_PRICE, 0)) AS LISTNUM
    </#if>
<#else>
             , ROW_NUMBER() OVER(ORDER BY A.ITEM_CLASS4, A.ITEM_NAME, A.ITEM_CODE) AS LISTNUM
</#if>
             , COUNT(1) OVER () AS ROWCNT
          FROM (
                SELECT  C.ITEM_CODE
                      , C.ITEM_NAME
                      , C.ITEM_CLASS4
                      , C.ITEM_SIZE
                      , C.PO_UOM
                      , C.TAX_CODE
                      , A.PROC_TYP_CD  AS CENTER_FLAG
                      , '' AS PR_REMARK
                      , '' AS REMARK
                      , C.POINT_FLAG
                      , B.UPJANG
                      , B.INVAT_FLAG
                      , B.OUTVAT_FLAG
                      , C.MIN_ORD_QTY
                      , C.MAX_ORD_QTY
                      , A.CENTER_CODE      /* 센터코드 */
                      , B.STOCK_FLAG
                      , C.KEEPING_TYPE
                      , C.BARCODE
                      , C.MULTIPLIER_QTY
                      , C.USE_YN
                      , TO_NUMBER(DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, (ROUND((A.CONTRACT_PRICE + (A.CONTRACT_PRICE * A.MARGIN_RATE / 100)) / 10) * 10))) AS MARGIN_PRICE
                      , A.CONTRACT_PRICE AS UNIT_PRICE       /* 구매(매입)단가 */
                      , A.CUSTCD           /* 매입거래처코드 */
                      , 'N' CHEAP_YN
                      , NVL(C.KG_CONVERT_RATE, 1) KG_CONVERT_RATE
                      , A.MARGIN_RATE
                      , A.UPJANG AS AP_UNITPRICE_UPJANG
                      , C.SPICE_YN
                      , C.CORN_YN
                      , C.IMG_PATH
                      , C.ORIGIN_NAT
                      , C.ORIGIN_TYPE
                      , B.MATERIAL_ACCTCD AS ACCTCD
                      , B.BUDCC_CD AS BUD_CLS
                      , FSI_DUTY_ITEM_YN(A.CENTER_CODE, A.CUSTCD, A.ITEM_CODE, :needDate) AS DUTY_YN
                      , A.PB_YN
--                      , C.MANUF_CD AS MANUF_YN
					  , CASE WHEN LENGTH(TRIM(C.MANUF_CD)) > 0 AND TRIM(C.MANUF_CD) <> '해당없음' THEN 'Y' ELSE 'N' END AS MANUF_YN
                      , CASE WHEN LENGTH(TRIM(C.ECO_ITEM)) > 0 AND TRIM(C.ECO_ITEM) <> '해당없음' THEN 'Y' ELSE 'N' END AS ECO_ITEM_YN
                      , A.NPB_YN
                      , A.VD_SN
                      , A.APPLY_SD
                      , A.UPJANG_GRP
                      , CASE WHEN (SELECT COUNT(1) FROM FSP_FAVORITE X WHERE X.UPJANG = A.UPJANG AND X.ITEM_CODE = C.ITEM_CODE AND X.USE_YN = 'Y') > 0 THEN 'Y' ELSE 'N' END AS FAVORITE_YN     /* 즐겨찾기 등록되있는 갯수 */
                   FROM HLDC_PO_CONTRACT_F A
                      , HLDC_PO_SUBINVENTORY B
                      , HLDC_PO_ITEM_MST C
<#if favOrderYn == 'Y'>
              		  , FSP_FAVORITE D
</#if>
<#if preOrderYn == 'Y'>
                      , (SELECT ITEM_CODE, RC_UPJANG, CUSTCD, SUBINV_CODE
                           FROM SO_PR A
                          WHERE 1=1
                            AND A.NEED_DATE BETWEEN :startDt AND :endDt
                            AND A.RC_UPJANG = :upjangCd
                            AND A.SUBINV_CODE = :subinvCd
                          GROUP BY ITEM_CODE, RC_UPJANG, CUSTCD, SUBINV_CODE) F
</#if>
                  WHERE A.UPJANG       = B.UPJANG
                    AND A.ITEM_CODE    = C.ITEM_CODE
                    AND A.UPJANG       = :upjangCd
                    AND :needDate BETWEEN A.CONTRACT_START AND A.CONTRACT_END
                    AND B.SUBINV_CODE  = :subinvCd
                    AND C.ITEM_CLASS1  = 'F'
<#if barcode?has_content && favOrderYn != 'Y' && preOrderYn != 'Y'>
            AND C.BARCODE  = :barcode
</#if>
<#if itemCode?has_content && favOrderYn != 'Y' && preOrderYn != 'Y'>
--            AND C.ITEM_CODE LIKE UPPER('%'|| :itemCode ||'%')
			   AND (REGEXP_LIKE(C.ITEM_CODE, (SELECT SUBSTR(TRIM(LISTAGG(REPLACE(T.ITEM_NAME, ',', '|'), '|') WITHIN GROUP(ORDER BY ITEM_GROUP)),0,200) AS ITEM_NAME
			             FROM
			      						  (SELECT REPLACE(REPLACE(REPLACE(:itemCode, '(', '\\('), ')', '\\)'), ' ', '|') AS ITEM_NAME
			      							      , '1' AS ITEM_GROUP
			                                       FROM DUAL
			                                     UNION ALL
			                                     --정규식에서 괄호가 한쪽만 있으면 에러 발생하기때문에 치환처리
			   		                                  SELECT REPLACE(REPLACE(REPLACE(KEYWORD||'|'||SIM_TXT, '(', ''), ')', ''), ' ', '|') AS ITEM_NAME
			                                          , '1' AS ITEM_GROUP
			                                       FROM EPROCUSR.VO_ITEM_SIM_WORD
			                                      --유사어에 등록된 키워드는 일치검색으로 변경
			                                      WHERE KEYWORD = REPLACE(REPLACE(REPLACE(:itemCode, '(', '\\('), ')', '\\)'), ' ', '|')
			                                    ) T
			                              )
			   			             ))
</#if>
<#if itemName?has_content && favOrderYn != 'Y' && preOrderYn != 'Y'>
--            AND UPPER(C.ITEM_NAME) LIKE UPPER('%'|| :itemName ||'%')
			   AND (REGEXP_LIKE(C.ITEM_NAME, (SELECT SUBSTR(TRIM(LISTAGG(REPLACE(T.ITEM_NAME, ',', '|'), '|') WITHIN GROUP(ORDER BY ITEM_GROUP)),0,200) AS ITEM_NAME
			             FROM
			      						  (SELECT REPLACE(REPLACE(REPLACE(:itemName, '(', '\\('), ')', '\\)'), ' ', '|') AS ITEM_NAME
			      							      , '1' AS ITEM_GROUP
			                                       FROM DUAL
			                                     UNION ALL
			                                     --정규식에서 괄호가 한쪽만 있으면 에러 발생하기때문에 치환처리
			   		                                  SELECT REPLACE(REPLACE(REPLACE(KEYWORD||'|'||SIM_TXT, '(', ''), ')', ''), ' ', '|') AS ITEM_NAME
			                                          , '1' AS ITEM_GROUP
			                                       FROM EPROCUSR.VO_ITEM_SIM_WORD
			                                      --유사어에 등록된 키워드는 일치검색으로 변경
			                                      WHERE KEYWORD = REPLACE(REPLACE(REPLACE(:itemName, '(', '\\('), ')', '\\)'), ' ', '|')
			                                    ) T
			                              )
			   			             ))
</#if>
 /* 추가구매신청승인이 안된 업장이거나 승인예외업장이 아닌경우 양념 미곡만 조회 */
<#if approveYn != 'Y' && approveExceptYn != 'Y'>
                        AND (   C.SPICE_YN   =  'Y'
                             OR C.CORN_YN    =  'Y'
                            )
</#if>
<#if favOrderYn == 'Y'>
			        AND D.UPJANG       = A.UPJANG
			        AND D.ITEM_CODE    = A.ITEM_CODE
				<#if grpCode?has_content>
					AND D.FAVOR_GROUP  = :grpCode
				</#if>
				<#if favItemName?has_content>
					AND (C.ITEM_NAME LIKE '%' || :favItemName || '%' OR C.ITEM_CODE LIKE '%' || :favItemName || '%')
				</#if>
</#if>
<#if preOrderYn == 'Y'>
                    AND F.ITEM_CODE = A.ITEM_CODE
                    AND F.RC_UPJANG = A.UPJANG
                    AND F.CUSTCD = A.CUSTCD
                    AND F.SUBINV_CODE = B.SUBINV_CODE
				<#if preItemName?has_content>
					AND (C.ITEM_NAME LIKE '%' || :preItemName || '%' OR C.ITEM_CODE LIKE '%' || :preItemName || '%')
				</#if>
</#if>
               ) A
             , SCO_UPJANG_MST_V B
             , (SELECT A.CENTER_CODE
                     , A.ITEM_CODE , A.D_DAYS AS D_DAY
                     ,(SELECT TO_DATE(:needDate,'YYYYMMDD') -    TO_DATE(Z.NONHOLI_DATE,'YYYYMMDD')
                         FROM (SELECT ROW_NUMBER() OVER(ORDER BY Z.CD_SY||Z.CD_SM||Z.CD_SD DESC) AS    SEQ
                                    , Z.CD_SY||Z.CD_SM||Z.CD_SD    AS NONHOLI_DATE
                                 FROM SCC_CALENDA_DATA Z
                                WHERE Z.CD_SY||Z.CD_SM||Z.CD_SD    < :needDate
                                  AND Z.CD_SY BETWEEN TO_NUMBER(SUBSTR(:needDate, 1, 4)) - 1 AND TO_NUMBER(SUBSTR(:needDate, 1, 4))
                              --  AND Z.HOLIDAY    NOT IN (1,2) --일요일 제외한 국가 공휴일 (일요일만 체크, 그 외 공유일은 상관없음(김진희))
                                  AND Z.CD_WEEK    NOT IN ('일')) Z
                        WHERE Z.SEQ    = A.D_DAYS ) AS D_DAYS
                     , A.D_TIMES
                  FROM HLDC_PO_PREORDER_LIST A
                 WHERE A.CENTER_CODE = :centerCd
               ) C                      /* 선발주 제한 */
             , (
                SELECT UPJANG
                     , ITEM_CODE
                     , TO_CHAR(TO_DATE(RESTRICT_START, 'YYYYMMDD'), 'YYYY.MM.DD') || '~' || TO_CHAR(TO_DATE(RESTRICT_END, 'YYYYMMDD'), 'YYYY.MM.DD') AS RESTRICT_PERIOD
                     , RESTRICT_REASON
                  FROM FSI_RESTRICT_SET
                 WHERE UPJANG = :upjangCd
                   AND (RESTRICT_START <= :needDate AND RESTRICT_END >= :needDate)
                   AND NOT (CNL_START IS NOT NULL AND CNL_START    <= :needDate AND CNL_END      >= :needDate)
                   AND USE_YN = 'Y'
               ) D                      /* 금지자재 */
             , VO_CENTER F
         WHERE A.UPJANG = B.UPJANG
           AND A.CENTER_CODE = C.CENTER_CODE(+)
           AND A.ITEM_CODE   = C.ITEM_CODE  (+)
           AND A.ITEM_CODE   = D.ITEM_CODE  (+)
           AND A.CENTER_CODE = F.CENTER_CODE (+)
<#if schPbYn == 'Y' || schDutyYn == 'Y' || schNpbYn == 'Y' || schMateEtcYn == 'Y'>
        AND (1 = 2
          <#if schPbYn == 'Y'>
                  OR A.PB_YN = 'Y'
          </#if>
          <#if schDutyYn == 'Y'>
                  OR A.DUTY_YN = 'Y'
          </#if>
          <#if schNpbYn == 'Y'>
                  OR A.NPB_YN = 'Y'
          </#if>
          <#if schMateEtcYn == 'Y'>
                  OR (A.PB_YN = 'N' AND A.DUTY_YN = 'N' AND A.NPB_YN = 'N')
          </#if>
        )
</#if>
<#if schEaYn == 'Y' || schBoxYn == 'Y' || schKgYn == 'Y' || schUnitEtcYn == 'Y'>
        AND (1 = 2
          <#if schEaYn == 'Y'>
                  OR A.PO_UOM = 'EA'
          </#if>
          <#if schBoxYn == 'Y'>
                  OR A.PO_UOM = 'BOX'
          </#if>
          <#if schKgYn == 'Y'>
                  OR A.PO_UOM = 'KG'
          </#if>
          <#if schUnitEtcYn == 'Y'>
                  OR A.PO_UOM NOT IN ('EA', 'BOX', 'KG')
          </#if>
        )
</#if>
<#if schTaxYn == 'Y'>
    AND A.TAX_CODE = '100'
</#if>
<#if schTaxYn == 'N'>
    AND A.TAX_CODE != '100'
</#if>
<#if schMinWeight?has_content && schMinWeight != 0>
    AND A.KG_CONVERT_RATE >= (:schMinWeight/1000)
</#if>
<#if schMaxWeight?has_content && schMaxWeight != 0>
    AND A.KG_CONVERT_RATE <= (:schMaxWeight/1000)
</#if>
<#if schMinPrice?has_content && schMinPrice != 0>
    AND NVL(A.MARGIN_PRICE, 0) >= :schMinPrice
</#if>
<#if schMaxPrice?has_content && schMaxPrice != 0>
    AND NVL(A.MARGIN_PRICE, 0) <= :schMaxPrice
</#if>
      ) TT
 WHERE 1=1
   AND LISTNUM BETWEEN :pgSz * ( :pg - 1 ) + 1 AND :pgSz * :pg
--         ORDER BY A.ITEM_CLASS4, A.ITEM_NAME, A.ITEM_CODE
 ]]></statement>
	<statement name="selectPrAddRecipeInfo"><![CDATA[
SELECT ITEM_CODE
     , ITEM_NAME
     , ITEM_CLASS4
     , PR_NUM
     , ORG_PR_NUM
     , PR_ID
     , DUTY_YN
     , PB_YN
     , MANUF_YN
     , ECO_ITEM_YN
     , NPB_YN
     , ITEM_SIZE
     , PO_UOM
     , KG_QTY
     , G_PRICE
     , PR_QTY
     , PR_AMT
     , TAX_CODE
     , CENTER_FLAG
--      , PR_REMARK
     , REMARK
     , POINT_FLAG
     , SUBINV_CODE
     , NEED_DATE
     , UPJANG
     , DEPT_ID
     , ACCTCD
     , BUD_CLS
     , MU_CD
     , INVAT_FLAG
     , OUTVAT_FLAG
     , MIN_ORD_QTY
     , MAX_ORD_QTY
     , CENTER_CODE
     , STOCK_FLAG
     , BARCODE
     , KEEPING_TYPE
     , MULTIPLIER_QTY
     , BUDDEPT_ID
     , CONTRACT_YN
     , MARGIN_PRICE
     , UNIT_PRICE
     , CUSTCD
     , CHEAP_YN
     , KG_CONVERT_RATE
     , MARGIN_RATE
     , AP_UNITPRICE_UPJANG
     , RESTRICT_PERIOD
     , RESTRICT_REASON
     , DUTY_END_DATE
     , MIN_DUTY_QTY
     , DUTY_QTY
     , REAL_USE_QTY
     , SHP_MAP
     , MTG_UNS
     , MTG_STP
     , REQ_WKD
     , SCH
     , D_DAY
     , D_DAYS
     , D_TIMES
     , D_DAY_YN
     , SPICE_YN
     , CORN_YN
     , IMG_PATH
     , ORIGIN_NAT
     , ORIGIN_TYPE
     , VD_SN
     , APPLY_SD
     , MOBILE_GUBUN
     , REASON_CD
     , PR_REASON
     , AGG_QTY
     , UPJANG_GRP
     , LINE_STATUS
     , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FM0037' AND CODE = TT.LINE_STATUS) AS PO_LINE_STATUS
     , MD_NAME
     , CASE WHEN SHP_MAP = 'N' THEN '단가계약 안됨'
            WHEN MTG_UNS = 'N' THEN '불용자재'
            WHEN MTG_STP = 'N' THEN '중지자재'
            WHEN REQ_WKD = 'N' THEN '요일제한'
            WHEN LENGTH(RESTRICT_PERIOD)>0 THEN '금지자재('||RESTRICT_PERIOD||','||RESTRICT_REASON||')'
            WHEN SCH = 'N' THEN '수발주제한'
            ELSE PR_REMARK END AS PR_REMARK
     , CASE WHEN SHP_MAP = 'N' OR REQ_WKD = 'N' THEN 'A'
            WHEN MTG_UNS = 'N' OR MTG_STP = 'N' THEN 'B'
            WHEN LENGTH(RESTRICT_PERIOD)>0 THEN 'C'
            WHEN SCH = 'N' THEN 'D'
            ELSE 'Y' END AS PR_YN
     , TT.MARGIN_PRICE * TT.PR_QTY AS TOT_AMT
    FROM (SELECT A.ITEM_CODE
                  , A.ITEM_NAME
                  , A.ITEM_CLASS4
                  , A.PR_NUM
                  , A.ORG_PR_NUM
                  , A.PR_ID
                  , A.DUTY_YN
                  , A.PB_YN
                  , A.MANUF_YN
                  , A.ECO_ITEM_YN
                  , A.NPB_YN
                  , A.ITEM_SIZE
                  , A.PO_UOM
                  , 0                                                                              KG_QTY
                  , ROUND(A.MARGIN_PRICE / A.KG_CONVERT_RATE / 1000, 2)                            G_PRICE
                  , A.PR_QTY
                  , A.PR_AMT
                  , A.TAX_CODE
                  , A.CENTER_FLAG
                  , A.PR_REMARK
                  , A.REMARK
                  , A.POINT_FLAG
                  , A.SUBINV_CODE
                  , A.NEED_DATE
                  , A.UPJANG
                  , B.DEPT_ID
                  , A.ACCTCD /* 입고 계정 코드(대표) : MATERIAL_ACCTCD */
                  , A.BUD_CLS /* 예산 조직 cc 코드 : BUDCC_CD */
                  , B.MU_CD
                  , A.INVAT_FLAG
                  , A.OUTVAT_FLAG
                  , A.MIN_ORD_QTY
                  , A.MAX_ORD_QTY
                  , A.CENTER_CODE /* 센터코드 */
                  , A.STOCK_FLAG
                  , A.BARCODE
                  , A.KEEPING_TYPE
                  , NVL(A.MULTIPLIER_QTY, 0)                                                    AS MULTIPLIER_QTY
                  , A.BUD_CLS                                                                   AS BUDDEPT_ID /* 예산 조직 cc 코드 : BUDCC_CD - 고도화에서 부서코드가 CC로 대체됨 */
                  , DECODE(A.CUSTCD, NULL, 'N', 'Y')                                            AS CONTRACT_YN
                  , NVL(A.MARGIN_PRICE, 0)                                                      AS MARGIN_PRICE /* 출하율적용단가 */
                  , A.UNIT_PRICE /* 구매(매입)단가 */
                  , A.CUSTCD /* 매입거래처코드 */
                  , 'N'                                                                            CHEAP_YN
                  , A.KG_CONVERT_RATE
                  , A.MARGIN_RATE
                  , A.UPJANG                                                                    AS AP_UNITPRICE_UPJANG
                  , D.RESTRICT_PERIOD
                  , D.RESTRICT_REASON
                  , NULL                                                                           DUTY_END_DATE
                  , 0                                                                              MIN_DUTY_QTY
                  , 0                                                                              DUTY_QTY
                  , 0                                                                              REAL_USE_QTY
                  -- 구매신청(자동)처럼 유효성 문구 추가 및 수정/삭제 불가처리하기 위한 필드 추가 2018.04.02 김호석(이혜은, 윤지혜, 염병문)
                  , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_SHP_MAP('100', 'HFC', F.OPER_ORG_SN_PURC, A.UPJANG_GRP, A.ITEM_CODE, :needDate) = 'CK' THEN 'Y'
                         ELSE 'N' END AS SHP_MAP /*	자재 업장군	맵핑 유효성	체크 CE	: 맵핑안되어있음(사용불가),	CK : 맵핑되어있음(사용가능)	*/
                  , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_MTG_UNS('100', A.ITEM_CODE) = 'UP' THEN 'Y'
                         ELSE 'N' END AS MTG_UNS /*	자재불용체크 UK: 불용, UP:불용아님,	NN:	DATA NOT FOUND */
                  , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_MTG_STP('100', A.ITEM_CODE, '01') = 'TP' THEN 'Y'
                         ELSE 'N' END AS MTG_STP /*	자재 중지체크 TK : 중지(사용불가), TP :	중지아님(사용가능),	NN:	DATA NOT FOUND */
                  , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_REQ_WKD('100', 'HFC', F.OPER_ORG_SN_PURC, A.ITEM_CODE, A.VD_SN, '01', :needDate) = 'XR' THEN 'Y'
                         ELSE 'N' END AS REQ_WKD /*	요일별 신청불가	체크 XE	: 신청불가(사용불가), XR : 신청가능(사용가능), NN :	DATA NOT FOUND */
                  , CASE WHEN EPROCUSR.FN_ITEM_PROCURE_SCH('100', 'HFC', F.OPER_ORG_SN_PURC, A.ITEM_CODE, A.VD_SN, '01'
                                                         , NVL(C.D_DAY, 0), NVL(C.D_TIMES, 0), TO_CHAR(SYSDATE, 'YYYYMMDD'), :needDate) = 'HK' THEN 'Y'
                         ELSE 'N' END AS SCH /*	수발주 스케쥴에	따른 유효성	체크 HE	: 신청불가(사용불가), HK : 신청가능(사용가능), NN :	DATA NOT FOUND */
                  , NVL(C.D_DAYS, 0) + 1                                                        AS D_DAY
                  , DECODE(C.D_DAYS, NULL, 0, DECODE(SIGN(TO_DATE('20150705', 'YYYYMMDD') -
                                                          TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') -
                                                          NVL(C.D_DAYS, 0) - 1), 0,
                                                     DECODE(SIGN(DECODE(C.D_TIMES, '', 24, 0, 24, C.D_TIMES) -
                                                                 TO_NUMBER(TO_CHAR(SYSDATE, 'HH24'))), 1, 0, 1), 0) +
                                              NVL(C.D_DAYS, 0) + 1)                             AS D_DAYS
                  , DECODE(C.D_DAYS, NULL, 0, DECODE(C.D_TIMES, '', 24, 0, 24, C.D_TIMES))      AS D_TIMES
                  , DECODE(C.D_DAYS, NULL, 'Y', DECODE(
                    SIGN(TO_DATE('20150705', 'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') -
                         NVL(C.D_DAYS, 0)), -1, 'N', 0,
                    DECODE(SIGN(DECODE(C.D_TIMES, '', 24, 0, 24, C.D_TIMES) - TO_NUMBER(TO_CHAR(SYSDATE, 'HH24'))), -1, 'N', 0,
                           'N', 'C'), 1, 'Y'))                                                          AS D_DAY_YN
                  , A.SPICE_YN
                  , A.CORN_YN
                  , A.IMG_PATH
                  , A.ORIGIN_NAT
                  , A.ORIGIN_TYPE
                  , A.VD_SN
                  , A.APPLY_SD
                  , A.MOBILE_GUBUN
                  , G.REASON_CD
                  , G.PR_REASON
                  ,	SCC_SOPR_AGG_FUN('C1000001',	A.ITEM_CODE, 1)	AS AGG_QTY
                  , A.UPJANG_GRP
                  , CASE A.LINE_STATUS
                        WHEN '002'
                            THEN CASE
                                     WHEN (SELECT /*+ LEADING(IA.PODT) USE_NL(IA.PODT IA.POHD) */ COUNT(1)
                                           FROM HLDC_PO_PO IA
                                           WHERE IA.PO_ID = A.PR_ID) > 1
                                         THEN (SELECT /*+ LEADING(IA.PODT) USE_NL(IA.PODT IA.POHD) */ IA.LINE_STATUS
                                               FROM HLDC_PO_PO IA
                                               WHERE IA.LINE_STATUS <> 'PD'
                                                 AND IA.PO_ID = A.PR_ID)
                                     ELSE (SELECT /*+ LEADING(IA.PODT) USE_NL(IA.PODT IA.POHD) */ IA.LINE_STATUS
                                           FROM HLDC_PO_PO IA
                                           WHERE IA.PO_ID = A.PR_ID)
                            END
                        ELSE A.LINE_STATUS
                    END                                                                                        LINE_STATUS /* 구매진행상황코드 */
                  , (SELECT UR.USR_NM FROM EPROCUSR.ESMVDOG OG, EPROCUSR.ESAUSER UR WHERE OG.SYS_ID = UR.SYS_ID AND OG.COMP_CD = UR.COMP_CD AND OG.OPER_ORG_SN = '414' AND OG.VD_SN = A.VD_SN AND OG.HFC_CHR_ID = UR.USR_ID) AS MD_NAME	/*담당MD*/
             FROM (SELECT /*+ PUSH_PRED(C) PUSH_PRED(D) */ B.ITEM_CODE
                        , B.ITEM_NAME
                        , B.ITEM_CLASS4
                        , B.ITEM_SIZE
                        , A.PR_NUM
                        , A.ORG_PR_NUM
                        , A.PR_ID
                        , B.PO_UOM
                        , A.MARGIN_PRICE
                        , NVL(B.KG_CONVERT_RATE, 1)   AS KG_CONVERT_RATE
                        , D.MARGIN_RATE
                        , 0                           AS G_PRICE
                        , A.PR_QTY
                        , (A.MARGIN_PRICE * A.PR_QTY) AS PR_AMT
                        , A.SUBINV_CODE
                        , A.NEED_DATE
                        , A.PR_REMARK                 AS PR_REMARK
                        , A.REMARK                    AS REMARK
                        , A.UNIT_PRICE /* 구매(매입)단가 */
                        , B.TAX_CODE
                        , A.CUSTCD /* 매입거래처코드 */
                        , D.PROC_TYP_CD               AS CENTER_FLAG
                        , A.CENTER_CODE
                        , B.POINT_FLAG
                        , B.IMG_PATH
                        , B.MIN_ORD_QTY
                        , B.MAX_ORD_QTY
                        , B.BARCODE
                        , B.MULTIPLIER_QTY
                        , B.KEEPING_TYPE
                        , A.RC_UPJANG                 AS UPJANG
                        , A.RC_DEPT_ID                AS DEPT_ID
                        , A.ACCTCD
                        , A.BUD_CLS
                        , A.RC_MU_CD                  AS MU_CD
                        , A.INVAT_FLAG
                        , A.OUTVAT_FLAG
                        , C.STOCK_FLAG
                        , A.BUDDEPT_ID
                        , B.ORIGIN_NAT
                        , B.ORIGIN_TYPE
                        , B.SPICE_YN
                        , B.CORN_YN
--                         , D.DUTY_YN
--                         , D.PB_YN
--                         , B.MANUF_CD
--                         , B.ECO_ITEM
                        , FSI_DUTY_ITEM_YN(A.CENTER_CODE, A.CUSTCD, A.ITEM_CODE, :needDate) AS DUTY_YN
                        , D.PB_YN
--                        , B.MANUF_CD AS MANUF_YN
					  	, CASE WHEN LENGTH(TRIM(B.MANUF_CD)) > 0 AND TRIM(B.MANUF_CD) <> '해당없음' THEN 'Y' ELSE 'N' END AS MANUF_YN
                        , CASE WHEN LENGTH(TRIM(B.ECO_ITEM)) > 0 AND TRIM(B.ECO_ITEM) <> '해당없음' THEN 'Y' ELSE 'N' END AS ECO_ITEM_YN
                        , D.NPB_YN
                        , A.VD_SN
                        , A.APPLY_SD
                        , A.MOBILE_GUBUN
                        , A.UPJANG_GRP
                        , A.LINE_STATUS
                   FROM SO_PR A
                      , HLDC_PO_ITEM_MST B
                      , HLDC_PO_SUBINVENTORY C
                      , HLDC_PO_CONTRACT_F D
                   WHERE A.ITEM_CODE = B.ITEM_CODE
                     AND A.SUBINV_CODE = C.SUBINV_CODE (+)
                     AND A.ITEM_CODE = D.ITEM_CODE (+)
                     AND A.RC_UPJANG = D.UPJANG (+)
                     AND :needDate BETWEEN D.CONTRACT_START(+) AND D.CONTRACT_END(+)
                     AND A.LINE_STATUS NOT IN ('999', '003', 'PD')
                     AND A.ORG_PR_NUM = :orgPrNum) A
                , SCO_UPJANG_MST_V B
                , (SELECT A.CENTER_CODE
                        , A.ITEM_CODE
                        , A.D_DAYS                 AS D_DAY
                        , (SELECT TO_DATE(:needDate, 'YYYYMMDD') - TO_DATE(Z.NONHOLI_DATE, 'YYYYMMDD')
                           FROM (SELECT ROW_NUMBER() OVER (ORDER BY Z.CD_SY || Z.CD_SM || Z.CD_SD DESC) AS SEQ
                                      , Z.CD_SY || Z.CD_SM || Z.CD_SD                                   AS NONHOLI_DATE
                                 FROM SCC_CALENDA_DATA Z
                                 WHERE Z.CD_SY || Z.CD_SM || Z.CD_SD < :needDate
                                   AND Z.CD_SY BETWEEN TO_NUMBER(SUBSTR(:needDate, 1, 4)) - 1 AND TO_NUMBER(SUBSTR(:needDate, 1, 4))
                                   -- AND Z.HOLIDAY NOT IN (1,2) --일요일 제외한 국가 공휴일 (일요일만 체크, 그 외 공유일은 상관없음(김진희))
                                   AND Z.CD_WEEK NOT IN ('일')) Z
                           WHERE Z.SEQ = A.D_DAYS) AS D_DAYS
                        , A.D_TIMES
                   FROM HLDC_PO_PREORDER_LIST A
                   WHERE A.CENTER_CODE = :centerCd) C /* 선발주 제한 */
                , (SELECT UPJANG
                        , ITEM_CODE
                        , TO_CHAR(TO_DATE(RESTRICT_START, 'YYYYMMDD'), 'YYYY.MM.DD') || '~' ||
                          TO_CHAR(TO_DATE(RESTRICT_END, 'YYYYMMDD'), 'YYYY.MM.DD') AS RESTRICT_PERIOD
                        , RESTRICT_REASON
                   FROM FSI_RESTRICT_SET
                   WHERE UPJANG = :upjangCd
                     AND (RESTRICT_START <= :needDate AND RESTRICT_END >= :needDate)
                     AND NOT (CNL_START IS NOT NULL AND CNL_START <= :needDate AND CNL_END >= :needDate)) D /* 금지자재 */
                , VO_CENTER F
                , SO_PR_REASON G
             WHERE A.UPJANG = B.UPJANG
               AND A.CENTER_CODE = C.CENTER_CODE(+)
               AND A.ITEM_CODE = C.ITEM_CODE (+)
               AND A.ITEM_CODE = D.ITEM_CODE (+)
               AND A.CENTER_CODE = F.CENTER_CODE (+)
               AND A.ORG_PR_NUM = G.PR_NUM (+)
               --정렬조건 추가(유효성 체크된 자재를 맨위로 나오게 변경) 2018.04.02 김호석(이혜은, 윤지혜, 염병문)
             ORDER BY SHP_MAP, SHP_MAP, MTG_STP, SCH, REQ_WKD, A.ITEM_CLASS4, A.ITEM_NAME, A.ITEM_CODE) TT
		]]></statement>
</hqml>
