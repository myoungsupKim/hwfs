<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="fm.fms.saleMonthlySumCustDAO">
	<desc>거래처별월매출집계 HQML Query</desc>
	<!--거래처별월매출을 조회한다. -->
	<statement name="selectPeriod" type="select">
	/*+ com.hwfs.fm.fms.dao.saleMonthlySumCustDAO.selectPeriod */
		<![CDATA[
			SELECT LISTAGG(TO_CHAR(MONTH , 'YYYYMM'), ', ') WITHIN GROUP ( ORDER BY MONTH DESC ) AS P_DATE
					FROM (SELECT ADD_MONTHS(DAY1, (LEVEL -1))  AS MONTH 
					        FROM (SELECT TO_DATE(SUBSTR(:schStDate, 0, 6), 'YYYYMM') DAY1 
					                    ,TO_DATE(SUBSTR(:schEdDate, 0, 6), 'YYYYMM') DAY2 
					                FROM DUAL) 
					      CONNECT BY LEVEL <=  ABS(MONTHS_BETWEEN(DAY1, DAY2 )) + 1)
		]]>
	</statement>
	
	<!-- 매출집계정보 조회 -->
	<statement name="selectMaxDt" type="select">
		<![CDATA[
		/*+ com.hwfs.fm.fms.dao.saleMonthlySumCustDAO.selectMaxDt */
		SELECT MAX(A.TRANS_DATE) AS LST_DT 
				FROM FMS_BUY_SALE_SUM A 
	    ]]>
	</statement>
	
	<!--거래처별월매출을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.fm.fms.dao.saleMonthlySumCustDAO.selectList */
		<![CDATA[
				SELECT CC_NM
                 		,LEVELS
                 		,MAIN_UPJANG
                 		,MAIN_UPJANG_NM
                 		,UPJANG
                 		,UPJANG_NM
                 		,SALES
                 		${schCondTerm}
                 FROM   ( 
                 
                 	<#if schCurMonth?has_content>	
              	
                 	
                 	SELECT 
					(SELECT CC_NM FROM HLDC_SC_DEPT_V WHERE CC_CD = V2.CC_CD) AS CC_NM
					, V.TRANS_MONTH
					, DECODE(V.MAIN_UPJANG, V1.UPJANG, 0, 1) AS LEVELS
					, TO_CHAR(V.MAIN_UPJANG) AS MAIN_UPJANG
					, V1.UPJANGNM AS MAIN_UPJANG_NM
					, TO_CHAR(V.UPJANG) AS UPJANG
					, V2.UPJANGNM AS UPJANG_NM
					, V.SALE
					, (V.SALE + V.SALE_VAT) AS SALE_VAT_T
					, V.MARGIN
					, (SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = V.PART_SALES_SABUN) AS SALES
					, V.PROFIT_RATIO
					FROM 
						(
							SELECT
								S.MAIN_UPJANG
								, S.TRANS_MONTH
								, S.UPJANG
								, S.SALE_11 - (S.CK_11 + S.JI_11) AS SALE
								, S.SALE_11_VAT AS SALE_VAT
								, S.SALE_11 - (S.CK_11 + S.JI_11)  - S.COST_11 AS MARGIN
								, CASE WHEN S.SALE_11 - (S.CK_11 + S.JI_11) =  0 THEN 0 ELSE ROUND((S.SALE_11 - (S.CK_11 + S.JI_11)  - S.COST_11) / (S.SALE_11 - (S.CK_11 + S.JI_11)) * 100, 2) END AS PROFIT_RATIO
								, S.PART_SALES_SABUN
							FROM	
								(
									SELECT
										X.MAIN_UPJANG
										, X.UPJANG
										, SUBSTR(X.TRANS_DATE, 1, 6) AS TRANS_MONTH
										<#if schChk3=="1">
											, SUM(DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100)))) AS SALE_11
										<#else>
											, SUM(DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND((X.SALE_PRICE * X.TRANS_QTY), 0)) AS SALE_11
										</#if>
										, SUM(X.SALE_VAT) AS SALE_11_VAT
										, SUM(ROUND(X.TRANS_MAMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1), 0)) AS COST_11
										, SUM(ROUND(X.CK_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1), 0)) AS CK_11
										, SUM(ROUND(X.JI_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1), 0)) AS JI_11
										, X.PART_SALES_SABUN
									FROM
										(
										SELECT
											T.MAIN_UPJANG
											, T.UPJANG
											,	T.TRANS_DATE
											, T.ITEM_CODE
											, T.ITEM_NAME
											, T.ITEM_SIZE
											, T.TRANS_UOM
											, T.TRANS_TYPE
											, T.TRANS_QTY
											, T.TRANS_MPRICE
											, T.TRANS_MAMOUNT
											, T.TRANS_MVAT
											, T.SALE_PRICE
											, T.SALE_AMOUNT
											, T.SALE_VAT
											, T.TAX_CODE
											, T.DEPT_ID
											, T.PART_SALES_SABUN
											, CASE WHEN NVL(T.SALE_AMOUNT, 0) = 0 THEN 0
											ELSE
													CASE WHEN NVL(T.C_SALE_RATE, 0) = 0 THEN  
														CASE WHEN NVL(T.C1_SALE_RATE, 0) = 0 THEN 0 
														ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.C1_SALE_RATE,0) / 100)))) END			    					
													ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.C_SALE_RATE,0) / 100))))
													END 
											END AS CK_AMOUNT
											, CASE WHEN NVL(T.SALE_AMOUNT, 0) = 0 THEN 0
											ELSE
														CASE WHEN NVL(T.J_SALE_RATE, 0) = 0 THEN 
															CASE WHEN NVL(T.J1_SALE_RATE, 0) = 0 THEN 0 
															ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.J1_SALE_RATE,0) / 100)))) END			    					
														ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.J_SALE_RATE,0) / 100))))
														END 
											END AS JI_AMOUNT
											, DECODE(NVL(T.S_SALE_RATE,0), 0, NVL(T.S1_SALE_RATE,0), 0) AS SE_RATE			
										FROM
											(
											SELECT
												/*+ PUSH_PRED(A) */
												Z.MAIN_UPJANG	
												, A.TRANS_UPJANG AS UPJANG
												,	A.TRANS_DATE2 AS TRANS_DATE
												, A.ITEM_CODE
												, A.ITEM_NAME
												, A.ITEM_SIZE
												, A.TRANS_UOM
												, A.TRANS_TYPE
												, A.TRANS_QTY
												<#if schPrice=="1">
												, NVL(A.TRANS_MPRICE, 0) AS TRANS_MPRICE
												, NVL(A.TRANS_MAMOUNT, 0) AS TRANS_MAMOUNT
												, NVL(A.TRANS_MVAT, 0) AS TRANS_MVAT
												</#if>
												<#if schPrice=="2">
												, NVL(A.UNIT_PRICE, 0) AS TRANS_MPRICE
												, NVL(A.UNIT_AMOUNT, 0) AS TRANS_MAMOUNT
												, ROUND(DECODE(A.TAX_CODE,'100',0.1,0) * NVL(A.UNIT_AMOUNT, 0)) AS TRANS_MVAT
												</#if>
												, NVL(A.SALE_PRICE, 0) AS SALE_PRICE
												, NVL(A.SALE_AMOUNT, 0) AS SALE_AMOUNT
												, NVL(A.SALE_VAT, 0) AS SALE_VAT
												, A.TAX_CODE
												, B2.DEPT_ID
												, B2.UPJANGNM
												, Z.PART_SALES_SABUN
												<#if schChk1=="1">
												, CASE WHEN A.TAX_CODE = '100' THEN
														(CASE WHEN NVL(C2.FM_SALE_RATE, 0) = 0 THEN NVL(C1.FM_SALE_RATE, 0)
														ELSE NVL(C2.FM_SALE_RATE, 0)
														END)
													ELSE 
														(CASE WHEN NVL(C2.FM_NOSALE_RATE, 0) = 0 THEN NVL(C1.FM_NOSALE_RATE, 0)
														ELSE NVL(C2.FM_NOSALE_RATE, 0)
														END)
													END AS C1_SALE_RATE									/* 분류 기준 CK 물류비율 */	
												, FMS_ITEM_SALE_RATE_CODE_FUN(A.TAX_CODE, A.TRANS_UPJANG, A.SUBINV_CODE, '001', A.ITEM_CODE, A.TRANS_DATE) AS C_SALE_RATE		/* 자재별 CK 비율 */
												<#else>
													, 0 AS C1_SALE_RATE								/* 분류 기준 CK 물류비율 */
													, 0 AS C_SALE_RATE									/* 자재 기준 CK 물류비율 */
												</#if>
												<#if schChk2=="1">
												, CASE WHEN A.TAX_CODE = '100' THEN
														(CASE WHEN NVL(J2.FM_SALE_RATE, 0) = 0 THEN NVL(J1.FM_SALE_RATE, 0)
														ELSE NVL(J2.FM_SALE_RATE, 0)
														END)
													ELSE 
														(CASE WHEN NVL(J2.FM_NOSALE_RATE, 0) = 0 THEN NVL(J1.FM_NOSALE_RATE, 0)
														ELSE NVL(J2.FM_NOSALE_RATE, 0)
														END)
													END AS J1_SALE_RATE									/* 분류 기준 지급수수료 비율 */	
												, FMS_ITEM_SALE_RATE_CODE_FUN(A.TAX_CODE, A.TRANS_UPJANG, A.SUBINV_CODE, '002', A.ITEM_CODE, A.TRANS_DATE) AS J_SALE_RATE		/* 자재별 지급수수료 비율 */
												
												<#else>
													, 0 AS J1_SALE_RATE									/* 분류 기준 지급수수료 비율 */
													, 0 AS J_SALE_RATE										/* 자재별 지급수수료 비율 */
												</#if>
												<#if schChk3=="1">
												, CASE WHEN A.TAX_CODE = '100' THEN
														(CASE WHEN NVL(S2.FM_SALE_RATE, 0) = 0 THEN NVL(S1.FM_SALE_RATE, 0)
														ELSE NVL(S2.FM_SALE_RATE, 0)
														END)
													ELSE 
														(CASE WHEN NVL(S2.FM_NOSALE_RATE, 0) = 0 THEN NVL(S1.FM_NOSALE_RATE, 0)
														ELSE NVL(S2.FM_NOSALE_RATE, 0)
														END)
													END AS S1_SALE_RATE									/* 분류 기준 장려금 비율 */	
												, FMS_ITEM_SALE_RATE_CODE_FUN(A.TAX_CODE, A.TRANS_UPJANG, A.SUBINV_CODE, '003', A.ITEM_CODE, A.TRANS_DATE) AS S_SALE_RATE		/* 자재별 장려금 비율 */
												<#else>
													, 0 AS S1_SALE_RATE									/* 분류 기준 장려금 비율 */	
													, 0 AS S_SALE_RATE										/* 자재별 장려금 비율 */
												</#if>
											FROM FMS_TRANSACTION_V A
																	INNER JOIN ST_UPJANG B2 ON 1 = 1
																												<#if schMainUpjangCd?has_content>
																												AND B2.UPJANG IN (SELECT UPJANG FROM FMS_UPJANG WHERE  MAIN_UPJANG = :schMainUpjangCd)
																												</#if>
																												AND A.TRANS_UPJANG = TO_CHAR(B2.UPJANG)
																	INNER JOIN FMS_UPJANG Z ON 1 = 1
																										<#if schSalesSabun?has_content>
																										AND Z.PART_SALES_SABUN = :schSalesSabun
																										</#if>
																										AND A.TRANS_UPJANG = TO_CHAR(Z.UPJANG)
																	INNER JOIN HLDC_SC_DEPT_V D ON 1 = 1
																												<#if schCcCd?has_content>
																												AND D.CC_CD = :schCcCd
																												</#if>
																												AND B2.DEPT_ID = D.DEPT_ID
																	LEFT JOIN HLDC_PO_ITEM_MST M ON SUBSTR(M.ITEM_CODE, 1, 1) = 'F'
																							AND A.ITEM_CODE = M.ITEM_CODE
																	-- 추가 : 특약사항관련 : 중분류, 소분류
																	<#if schChk1=="1">
																	LEFT JOIN FMS_SALE_RATE C1 ON C1.UPJANG = A.TRANS_UPJANG
																						AND C1.SUBINV_CODE = A.SUBINV_CODE
																						AND C1.CASH_CODE = '001'			/* CK물류비(001) */
																						AND A.TRANS_DATE BETWEEN C1.SDATE AND C1.EDATE
																						AND M.ITEM_CLASS3 = C1.ITEM_CLASS /* 중분류 */
																	LEFT JOIN FMS_SALE_RATE C2 ON C2.UPJANG = A.TRANS_UPJANG
																						AND C2.SUBINV_CODE = A.SUBINV_CODE
																						AND C2.CASH_CODE = '001'			/* CK물류비(001) */
																						AND A.TRANS_DATE BETWEEN C2.SDATE AND C2.EDATE
																						AND M.ITEM_CLASS4 = C2.ITEM_CLASS	/* 소분류 */
																	</#if>
																	<#if schChk2=="1">
																	LEFT JOIN FMS_SALE_RATE J1 ON J1.UPJANG = A.TRANS_UPJANG
																						AND J1.SUBINV_CODE = A.SUBINV_CODE
																						AND J1.CASH_CODE = '002'			/* 지급수수료(002) */
																						AND A.TRANS_DATE BETWEEN J1.SDATE AND J1.EDATE
																						AND M.ITEM_CLASS3 = J1.ITEM_CLASS /* 중분류 */
																	LEFT JOIN FMS_SALE_RATE J2 ON J2.UPJANG = A.TRANS_UPJANG
																						AND J2.SUBINV_CODE = A.SUBINV_CODE
																						AND J2.CASH_CODE = '002'			/* 지급수수료(002) */
																						AND A.TRANS_DATE BETWEEN J2.SDATE AND J2.EDATE
																						AND M.ITEM_CLASS4 = J2.ITEM_CLASS	/* 소분류 */
																	</#if>
																	<#if schChk3=="1">
																	LEFT JOIN FMS_SALE_RATE S1 ON S1.UPJANG = A.TRANS_UPJANG
																						AND S1.SUBINV_CODE = A.SUBINV_CODE
																						AND S1.CASH_CODE = '003'			/* 장려금(003) */
																						AND A.TRANS_DATE BETWEEN S1.SDATE AND S1.EDATE
																						AND M.ITEM_CLASS3 = S1.ITEM_CLASS /* 중분류 */
																	LEFT JOIN FMS_SALE_RATE S2 ON S2.UPJANG = A.TRANS_UPJANG
																						AND S2.SUBINV_CODE = A.SUBINV_CODE
																						AND S2.CASH_CODE = '003'			/* 장려금(003) */
																						AND A.TRANS_DATE BETWEEN S2.SDATE AND S2.EDATE
																						AND M.ITEM_CLASS4 = S2.ITEM_CLASS /* 소분류 */
																	</#if>
											WHERE SUBSTR(A.SUBINV_CODE, 1, 2) = 'S1'
											AND (A.TRANS_TYPE IN '_002' OR A.TRANS_TYPE = 'I001' )
											AND A.TRANS_DATE2 BETWEEN :schCurMonthS AND :schCurMonthE
										) T
									) X
									GROUP BY 	X.MAIN_UPJANG
										, X.UPJANG
										, X.TRANS_DATE
										, X.PART_SALES_SABUN
								) S	
						
							) V INNER JOIN ST_UPJANG V1 ON V.MAIN_UPJANG = TO_CHAR(V1.UPJANG)
								INNER JOIN ST_UPJANG V2 ON V.UPJANG = TO_CHAR(V2.UPJANG)                	
                 		
					UNION ALL
					</#if>
                 			SELECT Z.CC_NM
                              , Z.TRANS_MONTH
                              , DECODE(Z.MAIN_UPJANG , Z.UPJANG, 0, 1) AS LEVELS
                              ,TO_CHAR(Z.MAIN_UPJANG) AS MAIN_UPJANG
                              ,(SELECT DISTINCT UPJANGNM_DISP FROM FMS_UPJANG WHERE UPJANG = Z.MAIN_UPJANG ) AS MAIN_UPJANG_NM
                              ,TO_CHAR(Z.UPJANG) AS UPJANG
                              ,(SELECT UPJANGNM_DISP FROM FMS_UPJANG WHERE UPJANG = Z.UPJANG) AS UPJANG_NM
                              ,Z.SALE
                              ,(Z.SALE + Z.SALE_VAT) AS SALE_VAT_T
                              ,Z.MARGIN
                              , (SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = Z.PART_SALES_SABUN) AS SALES
                              , CASE WHEN NVL(Z.SALE, 0) = 0 THEN 0
                              		 ELSE ROUND((Z.MARGIN/Z.SALE)*100, 2) 
                              	END AS PROFIT_RATIO
                        FROM    ( SELECT  C.CC_NM 
                                       ,SUBSTR(A.TRANS_DATE, 1, 6) AS TRANS_MONTH
                                       ,B.MAIN_UPJANG
                                       ,B.UPJANG
                                       ,SUM(A.UNIT_SUM)   AS UNIT_SUM
                                       , (
                                       		- <#if schChk1=="1"> SUM(A.CK_SALE_NOTAX) <#else> 0 </#if>
                                       		- <#if schChk2=="1"> SUM(A.JI_SALE_NOTAX) <#else> 0 </#if> 
                                       		+ <#if schChk3=="1"> SUM(A.SALE_TOT_S) 	  <#else> SUM(A.SALE_TOT) </#if>
                                       ) AS SALE
                                       , (
                                       		SUM(A.SALE_VAT)
                                       ) AS SALE_VAT
                                       , (
                                       		<#if schChk3=="1"> 
                                       			SUM(A.MARGIN_S) 	  
                                       		<#else>
                                       			<#if schPrice=="1">
                                       				SUM(A.MARGIN)
                                       			<#else>
                                       				SUM(A.MARGIN_SUM)
                                       			</#if>
                                       		</#if>
                                       ) AS MARGIN
                                      , B.PART_SALES_SABUN
                                FROM     FMS_BUY_SALE_SUM A
                                       , FMS_UPJANG B
                                       , HLDC_SC_DEPT_V C 
                                WHERE    A.UPJANG  = B.UPJANG
                                AND      B.DEPT_ID = C.CC_CD
                                <#if schCcCd?has_content>
                                AND 	 A.UPJANG IN (SELECT DISTINCT UPJANG FROM FMS_UPJANG WHERE DEPT_ID = :schCcCd)
                                </#if>
                                
                                AND      A.RECIEPT_DATE BETWEEN :schStDate AND :schEdDate
                                
                                <#if schMainUpjangCd?has_content>
                                AND      A.MAIN_UPJANG = :schMainUpjangCd
                                </#if>
                                <#if schSalesSabun?has_content>
                                AND		 A.UPJANG IN (SELECT DISTINCT UPJANG FROM FMS_UPJANG WHERE PART_SALES_SABUN = :schSalesSabun)
                                </#if>
                                GROUP BY C.CC_NM
                                       ,SUBSTR(A.TRANS_DATE, 1, 6)
                                       ,B.MAIN_UPJANG
                                       ,B.UPJANG
                                       ,B.PART_SALES_SABUN ) 
                                Z )
                        PIVOT ( SUM(SALE) AS SALE 
                        		, SUM(SALE_VAT_T) AS SALE_VAT_T
                 				, SUM(MARGIN) AS MARGIN 
                 				, SUM(PROFIT_RATIO) AS PROFIT_RATIO
                 				FOR TRANS_MONTH IN ( ${schPeriod} ) 
                 		)
				
		]]>
	</statement>
</hqml>
