<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="rc.rrm.standardRecipeMasterMgntDAO">
	<desc>표준레시피 코드 HQML Query</desc>

	<!-- 표준레시피 코드 목록을 조회한다. -->
	<statement name="selectList" type="select"><![CDATA[
	  /* rc.rrm.standardRecipeMasterMgntDAO.selectList */
		SELECT '0' AS CHK,
		       A.UPJANG_TYPE,
			   (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'UPJANG_TYPE' AND CODE = A.UPJANG_TYPE) UPJANG_TYPE_NM,
		       A.STD_RECIPE_CD,
		       A.MU_CD,
		       (SELECT MU_NM FROM SCC_MU WHERE MU_CD = A.MU_CD) MU_NM,
		       A.RECIPE_NM,
		       A.RECIPE_NM_ENGLISH,
		       A.RECIPE_NM_BYNM,
		       A.STAND,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'STAND_TYPE' AND CODE = A.STAND) STAND_NM,
		       A.ORIGIN,
		       A.UNIT_CD,
		       A.OFFER_UNIT,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'OFER_UNIT' AND CODE = A.OFER_UNIT) OFER_UNIT_NM,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'OFFER_UNIT' AND CODE = A.OFFER_UNIT) OFFER_UNIT_NM,
		       A.COOK_UNIT,
		       A.OFER_NO,
		       A.OFER_UNIT,
		       A.GOAL_CSTRAT,
		       A.CSTRAT_DRCT_INPUT_YN,
		       A.DRCT_INPUT_CST_RATE,
		       A.STD_RECIPE_APPLY_BASIS,
		       A.MCALSS_CD,
		       A.SCLASS_CD,
		       --B.SCLASS_CD_NM,
		       --B.MCALSS_CD,
		       --C.MCALSS_CD_NM,
		       --C.MGRP_CD,
		       --D.MGRP_CD_NM,
		       A.SALE_PRICE,
		       A.RECIPE_DVLP_BY,
		       A.REMARK,
		       A.REG_DATE,
		       A.REF_SEQ,
		       A.APPEND_SEQ,
		       E.REL_PATH,
		       E.SAVE_FILE_NM,
		       E.ORGNL_FILE_NM,
		       A.UPJANG_MODIFY_ALLOW_YN,
		       A.RECIPE_STATUS,
		       A.USE_YN,
		       A.CUSER,
		       A.CDATE,
		       A.UUSER,
		       A.UDATE,
               A.DETAIL_COUNT AS SUB_COUNT,
               A.SET_RECIPE_CD,
               A.SET_RECIPE_CD AS OLD_SET_RECIPE_CD,
               DECODE((SELECT COUNT(*) FROM RSS_STD_RECIPE_CUISINE WHERE STD_RECIPE_CD = A.STD_RECIPE_CD),0,'N','Y') AS CUSINE_CNT,
               (SELECT NVL(COUNT(*),0) FROM RSS_UPJANG_RECIPE_CD_MST WHERE STD_RECIPE_CD = A.STD_RECIPE_CD AND USE_YN = 'Y') AS UPJANG_CNT,
               (SELECT WM_CONCAT(UJM.UPJANG_NM)
									FROM (
										SELECT STD_RECIPE_CD AS G_CD,
						  						(SELECT SUV.UPJANGNM FROM SCO_UPJANG_MST_V SUV WHERE SUV.UPJANG = RURCM.UPJANG_CD) AS UPJANG_NM
						 				FROM RSS_UPJANG_RECIPE_CD_MST RURCM 
                    WHERE RURCM.USE_YN = 'Y'
								) UJM
                WHERE UJM.G_CD = A.STD_RECIPE_CD
								GROUP BY UJM.G_CD) AS U_NM --사용업장 리스트
               
		FROM   RSS_STD_RECIPE_CD_MST A
			   --RSS_RECIPE_SCLASS_CD B,
			   --RSS_RECIPE_MCALSS_CD C,
			   --RSS_RECIPE_MGRP_CD D,
			   , SCC_APPEND_FILE E
		WHERE  1=1
			AND		A.REF_SEQ = E.REF_SEQ(+)
			AND	   A.APPEND_SEQ = E.APPEND_SEQ(+)
		--AND	   A.SCLASS_CD = B.SCLASS_CD(+)
		--AND	   B.MCALSS_CD = C.MCALSS_CD(+)
		--AND	   C.MGRP_CD = D.MGRP_CD(+)
		<#if muCd?has_content>
		AND    A.MU_CD = :muCd
		</#if>
		<#if upjangType?has_content>
		AND	   A.UPJANG_TYPE = :upjangType
		</#if>
		<#if mcalssCd?has_content>
		AND	   A.MCALSS_CD = :mcalssCd
		</#if>
		<#if sclassCd?has_content>
		AND	   A.SCLASS_CD = :sclassCd
		</#if>
		<#if recipeNm?has_content>
		AND    UPPER(A.RECIPE_NM) LIKE '%' || UPPER(:recipeNm) || '%'
		</#if>
		<#if useYn?has_content>
		AND	   A.USE_YN = :useYn
		</#if>
		AND NVL(A.SML_YN, 'N') = 'N'
		ORDER BY A.STD_RECIPE_CD ASC
		]]></statement>

	<!-- 표준레시피 코드 max+1 조회한다. -->
	<statement name="selectMaxStdRecipeCd" type="select">
		/*+
		com.hwfs.rc.rrm.dao.StandardRecipeMasterMgntDAO.selectMaxStdRecipeCd
		*/
		<![CDATA[
		SELECT LPAD(NVL(MAX(STD_RECIPE_CD)+1, 1), 7, 0) AS STD_RECIPE_CD
		FROM   RSS_STD_RECIPE_CD_MST
		]]>
	</statement>

	<!-- 표준레시피 코드(을)를 등록한다. -->
	<statement name="insert" type="insert">
		/*+ com.hwfs.rc.rrm.dao.StandardRecipeMasterMgntDAO.insert */
		<![CDATA[
		INSERT INTO RSS_STD_RECIPE_CD_MST
		(
			 UPJANG_TYPE,
			 STD_RECIPE_CD,
			 MU_CD,
			 RECIPE_NM,
			 RECIPE_NM_ENGLISH,
			 RECIPE_NM_BYNM,
			 STAND,
			 ORIGIN,
			 UNIT_CD,
			 OFFER_UNIT,
			 COOK_UNIT,
			 OFER_NO,
			 OFER_UNIT,
			 GOAL_CSTRAT,
			 CSTRAT_DRCT_INPUT_YN,
			 DRCT_INPUT_CST_RATE,
			 STD_RECIPE_APPLY_BASIS,
			 MCALSS_CD,
			 SCLASS_CD,
			 SALE_PRICE,
			 RECIPE_DVLP_BY,
			 REMARK,
			 REG_DATE,
			 REF_SEQ,
			 APPEND_SEQ,
			 UPJANG_MODIFY_ALLOW_YN,
			 RECIPE_STATUS,
			 USE_YN,
			 CUSER,
			 CDATE,
			 UUSER,
			 UDATE
		) VALUES (
			 :upjangType,
			 :stdRecipeCd,
			 :muCd,
			 :recipeNm,
			 <#if recipeNmEnglish?exists> :recipeNmEnglish, <#else> null, </#if>
			 <#if recipeNmBynm?exists> :recipeNmBynm, <#else> null, </#if>
			 <#if stand?exists> :stand, <#else> null, </#if>
			 <#if origin?exists> :origin, <#else> null, </#if>
			 <#if unitCd?exists> :unitCd, <#else> 'G', </#if>
			 :offerUnit,
			 :cookUnit,
			 <#if oferNo?exists> :oferNo, <#else> null, </#if>
			 <#if oferUnit?exists> :oferUnit, <#else> null, </#if>
			 <#if goalCstrat?exists> :goalCstrat, <#else> null, </#if>
			 <#if cstratDrctInputYn?exists> :cstratDrctInputYn, <#else> 'N', </#if>
			 <#if drctInputCstRate?exists> :drctInputCstRate, <#else> null, </#if>
			 <#if stdRecipeApplyBasis?exists> :stdRecipeApplyBasis, <#else> null, </#if>
			 :mcalssCd,
			 :sclassCd,
			 <#if salePrice?exists> :salePrice, <#else> null, </#if>
			 <#if recipeDvlpBy?exists> :recipeDvlpBy, <#else> null, </#if>
			 <#if remark?exists> :remark, <#else> null, </#if>
			 <#if regDate?exists> :regDate, <#else> null, </#if>
			 <#if refSeq?exists> :refSeq, <#else> null, </#if>
			 <#if appendSeq?exists> :appendSeq, <#else> null, </#if>
			 <#if upjangModifyAllowYn?exists> :upjangModifyAllowYn, <#else> 'N', </#if>
			 /* <#if recipeStatus?exists> :recipeStatus, <#else> null, </#if> */
			 'A',
			 <#if useYn?exists> :useYn, <#else> 'Y', </#if>
			 :loginSabun,
			 SYSDATE,
			 :loginSabun,
			 SYSDATE
		)
		]]>
	</statement>

	<!-- 표준레시피 코드(을)를 수정한다. -->
	<statement name="update" type="update">
		/*+ com.hwfs.rc.rrm.dao.StandardRecipeMasterMgntDAO.update */
		<![CDATA[
		UPDATE RSS_STD_RECIPE_CD_MST SET
		       RECIPE_NM = :recipeNm,
			   <#if recipeNmEnglish?exists> RECIPE_NM_ENGLISH = :recipeNmEnglish, </#if>
			   <#if recipeNmBynm?exists> RECIPE_NM_BYNM = :recipeNmBynm, </#if>
			   <#if stand?exists> STAND = :stand, </#if>
			   <#if origin?exists> ORIGIN = :origin, </#if>
			   <#if unitCd?exists> UNIT_CD = :unitCd, </#if>
		       OFFER_UNIT = :offerUnit,
		       COOK_UNIT = :cookUnit,
		       <#if oferNo?exists> OFER_NO = :oferNo, </#if>
			   <#if oferUnit?exists> OFER_UNIT = :oferUnit,</#if>
			   <#if goalCstrat?exists> GOAL_CSTRAT = :goalCstrat, </#if>
			   <#if cstratDrctInputYn?exists> CSTRAT_DRCT_INPUT_YN = :cstratDrctInputYn, </#if>
			   <#if drctInputCstRate?exists> DRCT_INPUT_CST_RATE = :drctInputCstRate, </#if>
		       <#if stdRecipeApplyBasis?exists>STD_RECIPE_APPLY_BASIS = :stdRecipeApplyBasis,	</#if>
		       MCALSS_CD = :mcalssCd,
		       SCLASS_CD = :sclassCd,
			   <#if salePrice?exists> SALE_PRICE = :salePrice, </#if>
			   <#if recipeDvlpBy?exists> RECIPE_DVLP_BY = :recipeDvlpBy, </#if>
			   <#if remark?exists> REMARK = :remark, </#if>
			   <#if regDate?exists> REG_DATE = :regDate, </#if>
			   <#if refSeq?exists> REF_SEQ = :refSeq, </#if>
			   <#if appendSeq?exists> APPEND_SEQ = :appendSeq, </#if>
			   <#if upjangModifyAllowYn?exists> UPJANG_MODIFY_ALLOW_YN = :upjangModifyAllowYn, </#if>
			   <#if recipeStatus?exists> RECIPE_STATUS = :recipeStatus, </#if>
			   <#if useYn?exists> USE_YN = :useYn, </#if>
		       UUSER = :loginSabun,
		       UDATE = SYSDATE
		WHERE  UPJANG_TYPE = :upjangType
		AND    STD_RECIPE_CD = :stdRecipeCd
		AND    MU_CD = :muCd
		AND    NVL(SML_YN, 'N') = 'N'
		]]>
	</statement>

	<!-- 표준레시피 코드(을)를 삭제한다. -->
	<statement name="deleteMst" type="delete">
		/*+ com.hwfs.rc.rrm.dao.StandardRecipeMasterMgntDAO.deleteMst */
		<![CDATA[
		DELETE
		FROM   RSS_STD_RECIPE_CD_MST
		WHERE  UPJANG_TYPE = :upjangType
		AND    STD_RECIPE_CD = :stdRecipeCd
		AND    MU_CD = :muCd
		AND    NVL(SML_YN, 'N') = 'N'
		]]>
	</statement>
	
		<!-- 표준레시피 코드(을)를 삭제한다. -->
	<statement name="deleteDetail" type="delete">
		/*+ com.hwfs.rc.rrm.dao.StandardRecipeMasterMgntDAO.deleteDetail */
		<![CDATA[
		DELETE
		FROM   RSS_STD_RECIPE_CD_DETAIL
		WHERE  UPJANG_TYPE = :upjangType
		AND    STD_RECIPE_CD = :stdRecipeCd
		]]>
	</statement>
	
	

	<!-- 표준레시피 수정시 업장 레시피를 일괄 수정한다. -->
	<statement name="updateUpjangRecipeMst" type="update">
		/*+ com.hwfs.rc.rrm.dao.StandardRecipeMasterMgntDAO.updateUpjangRecipeMst */
		<![CDATA[
		UPDATE RSS_UPJANG_RECIPE_CD_MST A
		SET	(
			A.RECIPE_NM,
			A.RECIPE_NM_ENGLISH,
			A.RECIPE_NM_BYNM,
		    A.STAND,
		    A.ORIGIN,
		    A.OFFER_UNIT,
		    A.COOK_UNIT,
		    A.OFER_NO,
		    A.OFER_UNIT,
		    A.GOAL_CSTRAT,
		    A.CSTRAT_DRCT_INPUT_YN,
		    A.DRCT_INPUT_CST_RATE,
		    A.STD_RECIPE_APPLY_BASIS,
		    A.MCALSS_CD,
		    A.SCLASS_CD,
		    A.SALE_PRICE,
		    A.RECIPE_DVLP_BY,
		    A.REMARK,
		    A.REG_DATE,
		    A.REF_SEQ,
		    A.APPEND_SEQ,
		    A.RECIPE_STATUS,
		    A.USE_YN,
		    A.UUSER,
		    A.UDATE
			) = (
			SELECT
				B.RECIPE_NM,
				B.RECIPE_NM_ENGLISH,
				B.RECIPE_NM_BYNM,
			    B.STAND,
			    B.ORIGIN,
			    B.OFFER_UNIT,
			    B.COOK_UNIT,
			    B.OFER_NO,
		        B.OFER_UNIT,			    
			    B.GOAL_CSTRAT,
			    B.CSTRAT_DRCT_INPUT_YN,
			    B.DRCT_INPUT_CST_RATE,
			    B.STD_RECIPE_APPLY_BASIS,
			    B.MCALSS_CD,
			    B.SCLASS_CD,
			    B.SALE_PRICE,
			    B.RECIPE_DVLP_BY,
			    B.REMARK,
			    B.REG_DATE,
			    B.REF_SEQ,
			    B.APPEND_SEQ,
			    B.RECIPE_STATUS,
			    B.USE_YN,
			    :loginSabun,
			    SYSDATE
			FROM RSS_STD_RECIPE_CD_MST B
			WHERE B.MU_CD = :muCd
			AND   B.UPJANG_TYPE = :upjangType
			AND	  B.STD_RECIPE_CD = :stdRecipeCd
			)
		WHERE A.STD_RECIPE_CD = :stdRecipeCd
		  AND NVL(A.SML_YN, 'N') = 'N'
		]]>
	</statement>
	
	<!-- 반찬세트 목록을 조회한다. -->
	<statement name="selectRsr" type="update">
		/*+ com.hwfs.rc.rrm.dao.StandardRecipeMasterMgntDAO.selectRsr */
		<![CDATA[
		SELECT STD_RECIPE_CD,RECIPE_NM FROM RSS_STD_RECIPE_CD_MST
		WHERE SCLASS_CD = 'RSR'
		<#if upjangType?has_content>
		AND	   UPJANG_TYPE = :upjangType
		</#if>
		AND USE_YN = 'Y'
		AND NVL(SML_YN, 'N') = 'N'
		]]>
	</statement>

	<!-- 표준레시피를 사용중인 업장 목록을 조회한다. -->
	<statement name="selectUpjangList" type="select">
		/*+ com.hwfs.rc.rrm.dao.standardRecipeMasterMgntDAO.selectUpjangList */
		<![CDATA[
		SELECT DISTINCT UPJANG_CD
		  FROM RSS_UPJANG_RECIPE_CD_MST
		 WHERE STD_RECIPE_CD = :stdRecipeCd 
		   AND UPJANG_TYPE = :upjangType
		   AND MU_CD = :muCd
		]]>
	</statement>

	<!-- 업장레시피를 삭제한다. -->
	<statement name="deleteUpjangRecipeMst" type="delete">
		/*+ com.hwfs.rc.rrm.dao.standardRecipeMasterMgntDAO.deleteUpjangRecipeMst */
		<![CDATA[
		DELETE
		  FROM RSS_UPJANG_RECIPE_CD_MST
		 WHERE STD_RECIPE_CD = :stdRecipeCd 
		   AND UPJANG_TYPE = :upjangType
		   AND MU_CD = :muCd
		]]>
	</statement>

	<!-- 업장레시피 상세를 삭제한다. -->
	<statement name="deleteUpjangRecipeDtl" type="delete">
		/*+ com.hwfs.rc.rrm.dao.standardRecipeMasterMgntDAO.deleteUpjangRecipeDtl */
		<![CDATA[
		DELETE
		  FROM RSS_UPJANG_RECIPE_CD_DETAIL
		 WHERE STD_RECIPE_CD = :stdRecipeCd
		   AND UPJANG_TYPE = :upjangType
		]]>
	</statement>

	<!-- 표준 레시피를 업장 레시피로 복사한다. -->
	<statement name="insertUpjangRecipeMst" type="insert">
		/*+ com.hwfs.rc.rrm.dao.standardRecipeMasterMgntDAO.insertUpjangRecipeMst */
		<![CDATA[
		INSERT INTO RSS_UPJANG_RECIPE_CD_MST
		(
		   UPJANG_CD
		 , STD_RECIPE_CD
		 , RECIPE_NM
		 , RECIPE_NM_ENGLISH
		 , RECIPE_NM_BYNM
		 , STAND
		 , ORIGIN
		 , OFFER_UNIT
		 , COOK_UNIT
		 , GOAL_CSTRAT
		 , CSTRAT_DRCT_INPUT_YN
		 , DRCT_INPUT_CST_RATE
		 , STD_RECIPE_APPLY_BASIS
		 , MCALSS_CD
		 , SCLASS_CD
		 , RECIPE_REG_AGED
		 , SALE_PRICE
		 , RECIPE_DVLP_BY
		 , REMARK
		 , REG_DATE
		 , REF_SEQ
		 , APPEND_SEQ
		 , UPJANG_MODIFY_ALLOW_YN
		 , RECIPE_STATUS
		 , UPJANG_TYPE
		 , MU_CD
		 , USE_YN
		 , CUSER
		 , CDATE
		 , UUSER
		 , UDATE
		 , OFER_NO
		 , OFER_UNIT
		 , SET_RECIPE_CD
		)
		SELECT :copyUpjangCd
		     , STD_RECIPE_CD
		     , RECIPE_NM
		     , RECIPE_NM_ENGLISH
		     , RECIPE_NM_BYNM
		     , STAND
		     , ORIGIN
		     , OFFER_UNIT
		     , COOK_UNIT
		     , GOAL_CSTRAT
		     , CSTRAT_DRCT_INPUT_YN
		     , DRCT_INPUT_CST_RATE
		     , STD_RECIPE_APPLY_BASIS
		     , MCALSS_CD
		     , SCLASS_CD
		     , '2' AS RECIPE_REG_AGED
		     , SALE_PRICE
		     , RECIPE_DVLP_BY
		     , REMARK
		     , REG_DATE
		     , REF_SEQ
		     , APPEND_SEQ
		     , 'Y'
		     , RECIPE_STATUS
		     , UPJANG_TYPE
		     , MU_CD
		     , USE_YN
		     , :loginSabun
		     , SYSDATE
		     , :loginSabun
		     , SYSDATE
		     , OFER_NO
		     , OFER_UNIT
		     , SET_RECIPE_CD
		  FROM RSS_STD_RECIPE_CD_MST
		 WHERE UPJANG_TYPE = :upjangType
		   AND STD_RECIPE_CD = :stdRecipeCd
		   AND MU_CD = :muCd
		   AND NVL(SML_YN, 'N') = 'N'
		]]>
	</statement>

	<!-- 표준 레시피 상세를 업장 레시피 상세로 복사한다. -->
	<statement name="insertUpjangRecipeDtl" type="insert">
		/*+ com.hwfs.rc.rrm.dao.standardRecipeMasterMgntDAO.insertUpjangRecipeDtl */
		<![CDATA[
		INSERT INTO RSS_UPJANG_RECIPE_CD_DETAIL
		(
		   UPJANG_CD
		 , STD_RECIPE_CD
		 , MATERIAL_CD
		 , SDATE
		 , UPJANG_TYPE
		 , NEED_QTY
		 , CST_AMT
		 , BASIS_UNIT_CD
		 , PO_UNIT
		 , RECIPE_APPLY_UNIT
		 , LOSS_RATE
		 , YIELD
		 , SEMI_GOODS_YN
		 , PRVS_MATERIAL_CD
		 , SORT_ORDER
		 , CHG_REASON
		 , REMARK
		 , EDATE
		 , ITEM_UPJANG
		 , CUSER
		 , CDATE
		 , UUSER
		 , UDATE
		 , SET_RECIPE_CD
		)
		SELECT :copyUpjangCd
		     , A.STD_RECIPE_CD
		     , A.MATERIAL_CD
		     , A.SDATE
		     , A.UPJANG_TYPE
		     , A.NEED_QTY
		     , A.CST_AMT
		     , A.BASIS_UNIT_CD
		     , A.PO_UNIT
		     , A.RECIPE_APPLY_UNIT
		     , A.LOSS_RATE
		     , A.YIELD
		     , A.SEMI_GOODS_YN
		     , A.PRVS_MATERIAL_CD
		     , A.SORT_ORDER
		     , A.CHG_REASON
		     , A.REMARK
		     , A.EDATE
		     , A.ITEM_UPJANG
		     , :loginSabun
		     , SYSDATE
		     , :loginSabun
		     , SYSDATE
		     , A.SET_RECIPE_CD
		  FROM RSS_STD_RECIPE_CD_DETAIL A
		  WHERE UPJANG_TYPE = :upjangType
		    AND STD_RECIPE_CD = :stdRecipeCd
		    AND MU_CD = :muCd
		]]>
	</statement>

</hqml>
