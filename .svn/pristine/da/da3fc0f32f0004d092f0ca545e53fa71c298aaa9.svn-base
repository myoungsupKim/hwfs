<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
	 SELECT /*+ NO_MERGE(V) LEADING(V V1 V2 V3) */ 
		  V.MAIN_UPJANG
        , V1.UPJANGNM || '(' || V.MAIN_UPJANG || ')' AS MAIN_UPJANGNM
        , V.UPJANG
        , V2.UPJANGNM  || '(' || V.UPJANG || ')' AS UPJANGNM
        , V.PART_SALES_SABUN
        , V3.NM_KOR AS PART_SALES_SABUNNM
        , (SELECT CC_NM FROM HLDC_SC_DEPT_V WHERE DEPT_ID = V.DEPT_ID) AS 부서명
       , MACHUL_00
       , PROFIT_00
       , PROFIT_RATIO_00
       , MACHUL_01
       , PROFIT_01
       , PROFIT_RATIO_01
       , MACHUL_02
       , PROFIT_02
       , PROFIT_RATIO_02
       , MACHUL_03
       , PROFIT_03
       , PROFIT_RATIO_03
       , MACHUL_04
       , PROFIT_04
       , PROFIT_RATIO_04
       , MACHUL_05
       , PROFIT_05
       , PROFIT_RATIO_05
       , MACHUL_06
       , PROFIT_06
       , PROFIT_RATIO_06
       , MACHUL_07
       , PROFIT_07
       , PROFIT_RATIO_07
       , MACHUL_08
       , PROFIT_08
       , PROFIT_RATIO_08
       , MACHUL_09
       , PROFIT_09
       , PROFIT_RATIO_09
       , MACHUL_10
       , PROFIT_10
       , PROFIT_RATIO_10
       , MACHUL_11
       , PROFIT_11
       , PROFIT_RATIO_11
       , MACHUL_TOT
       , PROFIT_TOT
       , PROFIT_RATIO_TOT
       , PL_CD
       , PL_UP_CD
       , BL_SHOW
       , LEVEL_NO
       , BL_PLUS
	   , TO_CHAR(V.MAIN_UPJANG) AS MAIN_UJPANG2
  FROM 
	(
	SELECT
		  S.MAIN_UPJANG
		, S.UPJANG
		, S.PART_SALES_SABUN
		, S.DEPT_ID
		-- 기준월
		, S.SALE_00 - (S.CK_00 + S.JI_00) AS MACHUL_00
		, S.SALE_00 - (S.CK_00 + S.JI_00)  - S.COST_00 AS PROFIT_00
		, CASE WHEN S.SALE_00 - (S.CK_00 + S.JI_00) =  0 THEN 0 ELSE ROUND((S.SALE_00 - (S.CK_00 + S.JI_00)  - S.COST_00) / (S.SALE_00 - (S.CK_00 + S.JI_00)) * 100, 2) END AS PROFIT_RATIO_00
		-- 기준월 - 1
		, S.SALE_01 - (S.CK_01 + S.JI_01) AS MACHUL_01
		, S.SALE_01 - (S.CK_01 + S.JI_01)  - S.COST_01 AS PROFIT_01
		, CASE WHEN S.SALE_01 - (S.CK_01 + S.JI_01) =  0 THEN 0 ELSE ROUND((S.SALE_01 - (S.CK_01 + S.JI_01)  - S.COST_01) / (S.SALE_01 - (S.CK_01 + S.JI_01)) * 100, 2) END AS PROFIT_RATIO_01
		-- 기준월 - 2
		, S.SALE_02 - (S.CK_02 + S.JI_02) AS MACHUL_02
		, S.SALE_02 - (S.CK_02 + S.JI_02)  - S.COST_02 AS PROFIT_02
		, CASE WHEN S.SALE_02 - (S.CK_02 + S.JI_02) =  0 THEN 0 ELSE ROUND((S.SALE_02 - (S.CK_02 + S.JI_02)  - S.COST_02) / (S.SALE_02 - (S.CK_02 + S.JI_02)) * 100, 2) END AS PROFIT_RATIO_02
		-- 기준월 - 3
		, S.SALE_03 - (S.CK_03 + S.JI_03) AS MACHUL_03
		, S.SALE_03 - (S.CK_03 + S.JI_03)  - S.COST_03 AS PROFIT_03
		, CASE WHEN S.SALE_03 - (S.CK_03 + S.JI_03) =  0 THEN 0 ELSE ROUND((S.SALE_03 - (S.CK_03 + S.JI_03)  - S.COST_03) / (S.SALE_03 - (S.CK_03 + S.JI_03)) * 100, 2) END AS PROFIT_RATIO_03
		-- 기준월 - 4
		, S.SALE_04 - (S.CK_04 + S.JI_04) AS MACHUL_04
		, S.SALE_04 - (S.CK_04 + S.JI_04)  - S.COST_04 AS PROFIT_04
		, CASE WHEN S.SALE_04 - (S.CK_04 + S.JI_04) =  0 THEN 0 ELSE ROUND((S.SALE_04 - (S.CK_04 + S.JI_04)  - S.COST_04) / (S.SALE_04 - (S.CK_04 + S.JI_04)) * 100, 2) END AS PROFIT_RATIO_04
		-- 기준월 - 5
		, S.SALE_05 - (S.CK_05 + S.JI_05) AS MACHUL_05
		, S.SALE_05 - (S.CK_05 + S.JI_05)  - S.COST_05 AS PROFIT_05
		, CASE WHEN S.SALE_05 - (S.CK_05 + S.JI_05) =  0 THEN 0 ELSE ROUND((S.SALE_05 - (S.CK_05 + S.JI_05)  - S.COST_05) / (S.SALE_05 - (S.CK_05 + S.JI_05)) * 100, 2) END AS PROFIT_RATIO_05
		-- 기준월 - 6
		, S.SALE_06 - (S.CK_06 + S.JI_06) AS MACHUL_06
		, S.SALE_06 - (S.CK_06 + S.JI_06)  - S.COST_06 AS PROFIT_06
		, CASE WHEN S.SALE_06 - (S.CK_06 + S.JI_06) =  0 THEN 0 ELSE ROUND((S.SALE_06 - (S.CK_06 + S.JI_06)  - S.COST_06) / (S.SALE_06 - (S.CK_06 + S.JI_06)) * 100, 2) END AS PROFIT_RATIO_06
		-- 기준월 - 7
		, S.SALE_07 - (S.CK_07 + S.JI_07) AS MACHUL_07
		, S.SALE_07 - (S.CK_07 + S.JI_07)  - S.COST_07 AS PROFIT_07
		, CASE WHEN S.SALE_07 - (S.CK_07 + S.JI_07) =  0 THEN 0 ELSE ROUND((S.SALE_07 - (S.CK_07 + S.JI_07)  - S.COST_07) / (S.SALE_07 - (S.CK_07 + S.JI_07)) * 100, 2) END AS PROFIT_RATIO_07
		-- 기준월 - 8
		, S.SALE_08 - (S.CK_08 + S.JI_08) AS MACHUL_08
		, S.SALE_08 - (S.CK_08 + S.JI_08)  - S.COST_08 AS PROFIT_08
		, CASE WHEN S.SALE_08 - (S.CK_08 + S.JI_08) =  0 THEN 0 ELSE ROUND((S.SALE_08 - (S.CK_08 + S.JI_08)  - S.COST_08) / (S.SALE_08 - (S.CK_08 + S.JI_08)) * 100, 2) END AS PROFIT_RATIO_08
		-- 기준월 - 9
		, S.SALE_09 - (S.CK_09 + S.JI_09) AS MACHUL_09
		, S.SALE_09 - (S.CK_09 + S.JI_09)  - S.COST_09 AS PROFIT_09
		, CASE WHEN S.SALE_09 - (S.CK_09 + S.JI_09) =  0 THEN 0 ELSE ROUND((S.SALE_09 - (S.CK_09 + S.JI_09)  - S.COST_09) / (S.SALE_09 - (S.CK_09 + S.JI_09)) * 100, 2) END AS PROFIT_RATIO_09
		-- 기준월 - 10
		, S.SALE_10 - (S.CK_10 + S.JI_10) AS MACHUL_10
		, S.SALE_10 - (S.CK_10 + S.JI_10)  - S.COST_10 AS PROFIT_10
		, CASE WHEN S.SALE_10 - (S.CK_10 + S.JI_10) =  0 THEN 0 ELSE ROUND((S.SALE_10 - (S.CK_10 + S.JI_10)  - S.COST_10) / (S.SALE_10 - (S.CK_10 + S.JI_10)) * 100, 2) END AS PROFIT_RATIO_10
		-- 기준월 - 11
		, S.SALE_11 - (S.CK_11 + S.JI_11) AS MACHUL_11
		, S.SALE_11 - (S.CK_11 + S.JI_11)  - S.COST_11 AS PROFIT_11
		, CASE WHEN S.SALE_11 - (S.CK_11 + S.JI_11) =  0 THEN 0 ELSE ROUND((S.SALE_11 - (S.CK_11 + S.JI_11)  - S.COST_11) / (S.SALE_11 - (S.CK_11 + S.JI_11)) * 100, 2) END AS PROFIT_RATIO_11
		-- TOT
		, S.SALE_TOT - (S.CK_TOT + S.JI_TOT) AS MACHUL_TOT
		, S.SALE_TOT - (S.CK_TOT + S.JI_TOT)  - S.COST_TOT AS PROFIT_TOT
		, CASE WHEN S.SALE_TOT - (S.CK_TOT+ S.JI_TOT) =  0 THEN 0 ELSE ROUND((S.SALE_TOT - (S.CK_TOT + S.JI_TOT)  - S.COST_TOT) / (S.SALE_TOT - (S.CK_TOT + S.JI_TOT)) * 100, 2) END AS PROFIT_RATIO_TOT
		-- 기타
	    , S.MAIN_UPJANG || '-' || UPJANG AS PL_CD
		, '1' AS PL_UP_CD
		, '0' AS BL_SHOW
		, 2 LEVEL_NO
		, '+' AS BL_PLUS
	FROM	
		(
			SELECT
				  X.MAIN_UPJANG
				, X.UPJANG
				, X.PART_SALES_SABUN
				, X.DEPT_ID
				-- 기준월
				<isNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),0), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY), 0)) AS SALE_00
				</isNull>
				<isNotNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),0), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100))), 0)) AS SALE_00
				</isNotNull>
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),0), 'YYYYMM'),  ROUND(X.TRANS_MAMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS COST_00
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),0), 'YYYYMM'),  ROUND(X.CK_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS CK_00
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),0), 'YYYYMM'),  ROUND(X.JI_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS JI_00
				-- 기준월 - 1
				<isNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-1), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY), 0)) AS SALE_01
				</isNull>
				<isNotNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-1), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100))), 0)) AS SALE_01
				</isNotNull>
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-1), 'YYYYMM'),  ROUND(X.TRANS_MAMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS COST_01
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-1), 'YYYYMM'),  ROUND(X.CK_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS CK_01
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-1), 'YYYYMM'),  ROUND(X.JI_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS JI_01
				-- 기준월 - 2
				<isNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-2), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY), 0)) AS SALE_02
				</isNull>
				<isNotNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-2), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100))), 0)) AS SALE_02
				</isNotNull>
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-2), 'YYYYMM'),  ROUND(X.TRANS_MAMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS COST_02
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-2), 'YYYYMM'),  ROUND(X.CK_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS CK_02
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-2), 'YYYYMM'),  ROUND(X.JI_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS JI_02
				-- 기준월 - 3
				<isNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-3), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY), 0)) AS SALE_03
				</isNull>
				<isNotNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-3), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100))), 0)) AS SALE_03
				</isNotNull>
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-3), 'YYYYMM'),  ROUND(X.TRANS_MAMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS COST_03
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-3), 'YYYYMM'),  ROUND(X.CK_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS CK_03
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-3), 'YYYYMM'),  ROUND(X.JI_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS JI_03
				-- 기준월 - 4
				<isNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-4), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY), 0)) AS SALE_04
				</isNull>
				<isNotNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-4), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100))), 0)) AS SALE_04
				</isNotNull>
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-4), 'YYYYMM'),  ROUND(X.TRANS_MAMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS COST_04
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-4), 'YYYYMM'),  ROUND(X.CK_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS CK_04
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-4), 'YYYYMM'),  ROUND(X.JI_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS JI_04
				-- 기준월 - 5
				<isNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-5), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY), 0)) AS SALE_05
				</isNull>
				<isNotNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-5), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100))), 0)) AS SALE_05
				</isNotNull>
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-5), 'YYYYMM'),  ROUND(X.TRANS_MAMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS COST_05
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-5), 'YYYYMM'),  ROUND(X.CK_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS CK_05
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-5), 'YYYYMM'),  ROUND(X.JI_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS JI_05
				-- 기준월 - 6
				<isNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-6), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY), 0)) AS SALE_06
				</isNull>
				<isNotNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-6), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100))), 0)) AS SALE_06
				</isNotNull>
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-6), 'YYYYMM'),  ROUND(X.TRANS_MAMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS COST_06
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-6), 'YYYYMM'),  ROUND(X.CK_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS CK_06
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-6), 'YYYYMM'),  ROUND(X.JI_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS JI_06
				-- 기준월 - 7
				<isNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-7), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY), 0)) AS SALE_07
				</isNull>
				<isNotNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-7), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100))), 0)) AS SALE_07
				</isNotNull>
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-7), 'YYYYMM'),  ROUND(X.TRANS_MAMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS COST_07
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-7), 'YYYYMM'),  ROUND(X.CK_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS CK_07
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-7), 'YYYYMM'),  ROUND(X.JI_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS JI_07
				-- 기준월 - 8
				<isNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-8), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY), 0)) AS SALE_08
				</isNull>
				<isNotNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-8), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100))), 0)) AS SALE_08
				</isNotNull>
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-8), 'YYYYMM'),  ROUND(X.TRANS_MAMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS COST_08
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-8), 'YYYYMM'),  ROUND(X.CK_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS CK_08
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-8), 'YYYYMM'),  ROUND(X.JI_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS JI_08
				-- 기준월 - 9
				<isNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-9), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY), 0)) AS SALE_09
				</isNull>
				<isNotNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-9), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100))), 0)) AS SALE_09
				</isNotNull>
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-9), 'YYYYMM'),  ROUND(X.TRANS_MAMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS COST_09
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-9), 'YYYYMM'),  ROUND(X.CK_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS CK_09
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-9), 'YYYYMM'),  ROUND(X.JI_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS JI_09
				-- 기준월 - 10
				<isNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-10), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY), 0)) AS SALE_10
				</isNull>
				<isNotNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-10), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100))), 0)) AS SALE_10
				</isNotNull>
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-10), 'YYYYMM'),  ROUND(X.TRANS_MAMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS COST_10
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-10), 'YYYYMM'),  ROUND(X.CK_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS CK_10
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-10), 'YYYYMM'),  ROUND(X.JI_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS JI_10
				-- 기준월 - 11
				<isNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-11), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY), 0)) AS SALE_11
				</isNull>
				<isNotNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-11), 'YYYYMM'),  DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100))), 0)) AS SALE_11
				</isNotNull>
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-11), 'YYYYMM'),  ROUND(X.TRANS_MAMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS COST_11
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-11), 'YYYYMM'),  ROUND(X.CK_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS CK_11
				, SUM(DECODE(SUBSTR(X.TRANS_DATE, 1, 6),  TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-11), 'YYYYMM'),  ROUND(X.JI_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1)), 0)) AS JI_11
				-- TOT
				<isNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.SALE_PRICE * X.TRANS_QTY)) AS SALE_TOT				
				</isNull>
				<isNotNull col="CHK_3">
				, SUM(DECODE(SUBSTR(X.TRANS_TYPE,1,1),'I',1,-1) * ROUND(X.TRANS_QTY * ROUND(X.SALE_PRICE / (1 + X.SE_RATE/100)))) AS SALE_TOT
				</isNotNull>
				, SUM(ROUND(X.TRANS_MAMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1))) AS COST_TOT
				, SUM(ROUND(X.CK_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1))) AS CK_TOT
				, SUM(ROUND(X.JI_AMOUNT * DECODE(SUBSTR(X.TRANS_TYPE,1,1), 'I', 1, -1))) AS JI_TOT
			FROM
				(
				SELECT
					T.MAIN_UPJANG
					  , T.UPJANG
					  ,	T.TRANS_DATE
					  , T.ITEM_CODE
					  , T.ITEM_NAME
					  , T.ITEM_SIZE
					  , T.TRANS_UOM
					  , T.TRANS_TYPE
					  , T.TRANS_QTY
					  , T.TRANS_MPRICE
					  , T.TRANS_MAMOUNT
					  , T.TRANS_MVAT
					  , T.SALE_PRICE
					  , T.SALE_AMOUNT
					  , T.SALE_VAT
					  , T.TAX_CODE
					  , T.DEPT_ID
					  , T.PART_SALES_SABUN
					, CASE WHEN NVL(T.SALE_AMOUNT, 0) = 0 THEN 0
					  ELSE
							CASE WHEN NVL(T.C_SALE_RATE, 0) = 0 THEN  
								CASE WHEN NVL(T.C1_SALE_RATE, 0) = 0 THEN 0 
								ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.C1_SALE_RATE,0) / 100)))) END			    					
							ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.C_SALE_RATE,0) / 100))))
							END 
					   END AS CK_AMOUNT
					, CASE WHEN NVL(T.SALE_AMOUNT, 0) = 0 THEN 0
					  ELSE
								CASE WHEN NVL(T.J_SALE_RATE, 0) = 0 THEN 
									CASE WHEN NVL(T.J1_SALE_RATE, 0) = 0 THEN 0 
									ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.J1_SALE_RATE,0) / 100)))) END			    					
								ELSE (T.SALE_AMOUNT - ROUND(T.SALE_AMOUNT / (1 + (NVL(T.J_SALE_RATE,0) / 100))))
								END 
					  END AS JI_AMOUNT
		 			, DECODE(NVL(T.S_SALE_RATE,0), 0, NVL(T.S1_SALE_RATE,0), 0) AS SE_RATE			
				FROM
					(
					SELECT
						<isNotNull col="MAIN_UPJANG">
							/*+ PUSH_PRED(A) */
						</isNotNull>
						Z.MAIN_UPJANG	
						  , A.TRANS_UPJANG AS UPJANG
						  --,	A.TRANS_DATE	
						  -- FMS_TRANSACTION_V의 TRANS_DATE2 기준으로 조회 : 기간별 조건일 경우
						  ,	A.TRANS_DATE2 AS TRANS_DATE
						  , A.ITEM_CODE
						  , A.ITEM_NAME
						  , A.ITEM_SIZE
						  , A.TRANS_UOM
						  , A.TRANS_TYPE
						  , A.TRANS_QTY
						<isEqual col="SCH_PRICE" value="1">
						  , NVL(A.TRANS_MPRICE, 0) AS TRANS_MPRICE
						  , NVL(A.TRANS_MAMOUNT, 0) AS TRANS_MAMOUNT
						  , NVL(A.TRANS_MVAT, 0) AS TRANS_MVAT
						</isEqual> 
						<isEqual col="SCH_PRICE" value="2">
						  , NVL(A.UNIT_PRICE, 0) AS TRANS_MPRICE
						  , NVL(A.UNIT_AMOUNT, 0) AS TRANS_MAMOUNT
						  , ROUND(DECODE(A.TAX_CODE,'100',0.1,0) * NVL(A.UNIT_AMOUNT, 0)) AS TRANS_MVAT
						</isEqual> 
						  , NVL(A.SALE_PRICE, 0) AS SALE_PRICE
						  , NVL(A.SALE_AMOUNT, 0) AS SALE_AMOUNT
						  , NVL(A.SALE_VAT, 0) AS SALE_VAT
						  , A.TAX_CODE
						  , B2.DEPT_ID
						  , B2.UPJANGNM
						  , Z.PART_SALES_SABUN
						<isNotNull col="CHK_1">
						  , CASE WHEN A.TAX_CODE = '100' THEN
								(CASE WHEN NVL(C2.FM_SALE_RATE, 0) = 0 THEN NVL(C1.FM_SALE_RATE, 0)
								ELSE NVL(C2.FM_SALE_RATE, 0)
								END)
							ELSE 
								(CASE WHEN NVL(C2.FM_NOSALE_RATE, 0) = 0 THEN NVL(C1.FM_NOSALE_RATE, 0)
								ELSE NVL(C2.FM_NOSALE_RATE, 0)
								END)
							END AS C1_SALE_RATE									/* 분류 기준 CK 물류비율 */	
						  , FMS_ITEM_SALE_RATE_CODE_FUN(A.TAX_CODE, A.TRANS_UPJANG, A.SUBINV_CODE, '001', A.ITEM_CODE, A.TRANS_DATE) AS C_SALE_RATE		/* 자재별 CK 비율 */
						</isNotNull>
						<isNull col="CHK_1">
							, 0 AS C1_SALE_RATE								/* 분류 기준 CK 물류비율 */
							, 0 AS C_SALE_RATE									/* 자재 기준 CK 물류비율 */
						</isNull>
						<isNotNull col="CHK_2">
						  , CASE WHEN A.TAX_CODE = '100' THEN
								(CASE WHEN NVL(J2.FM_SALE_RATE, 0) = 0 THEN NVL(J1.FM_SALE_RATE, 0)
								ELSE NVL(J2.FM_SALE_RATE, 0)
								END)
							ELSE 
								(CASE WHEN NVL(J2.FM_NOSALE_RATE, 0) = 0 THEN NVL(J1.FM_NOSALE_RATE, 0)
								ELSE NVL(J2.FM_NOSALE_RATE, 0)
								END)
							END AS J1_SALE_RATE									/* 분류 기준 지급수수료 비율 */	
						  , FMS_ITEM_SALE_RATE_CODE_FUN(A.TAX_CODE, A.TRANS_UPJANG, A.SUBINV_CODE, '002', A.ITEM_CODE, A.TRANS_DATE) AS J_SALE_RATE		/* 자재별 지급수수료 비율 */
						</isNotNull>
						<isNull col="CHK_2">
							, 0 AS J1_SALE_RATE									/* 분류 기준 지급수수료 비율 */
							, 0 AS J_SALE_RATE										/* 자재별 지급수수료 비율 */
						</isNull>
						<isNotNull col="CHK_3">
						  , CASE WHEN A.TAX_CODE = '100' THEN
								(CASE WHEN NVL(S2.FM_SALE_RATE, 0) = 0 THEN NVL(S1.FM_SALE_RATE, 0)
								ELSE NVL(S2.FM_SALE_RATE, 0)
								END)
							ELSE 
								(CASE WHEN NVL(S2.FM_NOSALE_RATE, 0) = 0 THEN NVL(S1.FM_NOSALE_RATE, 0)
								ELSE NVL(S2.FM_NOSALE_RATE, 0)
								END)
							END AS S1_SALE_RATE									/* 분류 기준 장려금 비율 */	
						  , FMS_ITEM_SALE_RATE_CODE_FUN(A.TAX_CODE, A.TRANS_UPJANG, A.SUBINV_CODE, '003', A.ITEM_CODE, A.TRANS_DATE) AS S_SALE_RATE		/* 자재별 장려금 비율 */
						</isNotNull>
						<isNull col="CHK_3">
							, 0 AS S1_SALE_RATE									/* 분류 기준 장려금 비율 */	
							, 0 AS S_SALE_RATE										/* 자재별 장려금 비율 */
						</isNull>
					--FROM FMS_TRANSACTION_V A
					 FROM (SELECT A.TRANS_ID, A.TRANS_DATE, A.MG_DATE, A.SOURCE_TYPE, A.MVT, A.TRANS_TYPE,
                      A.TRANS_QTY, A.UNIT_PRICE, A.TRANS_MPRICE, A.TRANS_MVAT,
                      A.MARGIN_PRICE, A.UNIT_AMOUNT, A.TRANS_MAMOUNT, A.MARGIN_AMOUNT,
                      A.MARGIN_VAT, A.TRANS_MU_CD, A.TRANS_DEPT_ID, A.TRANS_UPJANG,
                      A.SUBINV_CODE, A.ACCTCD, A.ITEM_CODE, A.ITEM_NAME, A.ITEM_SIZE,
                      A.TAX_CODE, A.TRANS_UOM, A.UOM_CODE, A.UNIT_RATE, A.CUSTCD,
                      A.PO_TYPE, A.CENTER_CODE, A.GANO, A.BUDDEPT_ID, A.SALE_PRICE,
                      A.SALE_AMOUNT, A.SALE_VAT, SOURCE_ID, A.SAL_EVNT_PRICE,
                      A.SAL_STRA_PRICE, A.SAL_ENCO_PRICE, A.SAL_OPER_PRICE, '' AS REMARK,
                      A.PO_NO, A.PO_LNO, '1' AS FLAG,
                      DECODE (SUBSTR (A.TRANS_DATE, 1, 6),
                              SUBSTR (A.MG_DATE, 1, 6), A.TRANS_DATE,
                              A.MG_DATE
                             ) AS TRANS_DATE2
                 FROM EPROCUSR.VO_PO_TRANSACTION_SALE A
                 WHERE DECODE (SUBSTR (A.TRANS_DATE, 1, 6),
                              SUBSTR (A.MG_DATE, 1, 6), A.TRANS_DATE,
                              A.MG_DATE
                             ) BETWEEN TO_CHAR(ADD_MONTHS(#TRX_DATE#, -11), 'YYYYMMDD')  AND SUBSTR(#TRX_DATE#, 1, 6) || '31'
                <isNotNull col="MAIN_UPJANG">
           				AND  A.TRANS_UPJANG IN (SELECT UPJANG FROM FMS_UPJANG WHERE  MAIN_UPJANG = #MAIN_UPJANG#)
				</isNotNull> 
				<isNotNull col="PART_SALES_SABUN">
           				AND  A.TRANS_UPJANG IN (SELECT UPJANG FROM FMS_UPJANG WHERE  PART_SALES_SABUN = #PART_SALES_SABUN#) 
			    </isNotNull>
               UNION ALL
               SELECT B.TRANS_ID              /* 자재수불번호 : M+'0000000000' : 조정분 */
                                ,
                      B.TRANS_DATE, B.TRANS_DATE AS MG_DATE, B.SOURCE_TYPE, '조정' AS MVT, B.TRANS_TYPE,
                      B.TRANS_QTY, B.UNIT_PRICE                               /* 사용 X */
                                               ,
                      B.TRANS_MPRICE                                          /* 사용 X */
                                    ,
                      B.TRANS_MVAT                                            /* 사용 X */
                                  ,
                      B.MARGIN_PRICE                                          /* 사용 X */
                                    ,
                      B.UNIT_AMOUNT AS UNIT_AMOUNT                            /* 사용 X */
                                                  ,
                      B.TRANS_MAMOUNT AS TRANS_MAMOUNT                        /* 사용 X */
                                                      ,
                      B.MARGIN_AMOUNT                                         /* 사용 X */
                                     ,
                      B.MARGIN_VAT                                            /* 사용 X */
                                  ,
                      B.TRANS_MU_CD, B.TRANS_DEPT_ID,
                      TO_CHAR (B.TRANS_UPJANG) AS TRANS_UPJANG, B.SUBINV_CODE, B.ACCTCD,
                      B.ITEM_CODE, B.ITEM_NAME, B.ITEM_SIZE, B.TAX_CODE, B.TRANS_UOM,
                      B.UOM_CODE, NULL AS UNIT_RATE                           /* 사용 X */
                                                   ,
                      TO_CHAR (B.CUSTCD) AS CUSTCD                            /* 매입처 */
                                                  ,
                      B.PO_TYPE, B.CENTER_CODE, TO_CHAR (B.GANO) AS GANO,
                      B.BUDDEPT_ID                                            /* 사용 X */
                                  ,
                      B.SALE_PRICE, B.SALE_AMOUNT, B.SALE_VAT, B.SOURCE_ID,
                      B.SALE_PRICE AS SAL_EVNT_PRICE, B.SALE_PRICE AS SAL_STRA_PRICE,
                      B.SALE_PRICE AS SAL_ENCO_PRICE, B.SALE_PRICE AS SAL_OPER_PRICE,
                      B.REMARK, '' AS PO_NO, '' AS PO_LNO, '2' AS FLAG,
                      B.TRANS_DATE AS TRANS_DATE2
                 FROM FMS_TRANSACTION B) A
											INNER JOIN ST_UPJANG B2 ON 1 = 1
																						<isNotNull col="MAIN_UPJANG">
           																				AND B2.UPJANG IN (SELECT UPJANG FROM FMS_UPJANG WHERE  MAIN_UPJANG = #MAIN_UPJANG#)
																						</isNotNull>
																						AND A.TRANS_UPJANG = B2.UPJANG
											INNER JOIN FMS_UPJANG Z ON 1 = 1
																				<isNotNull col="PART_SALES_SABUN">
           																		  AND Z.PART_SALES_SABUN = #PART_SALES_SABUN#
																				</isNotNull>
																				  AND A.TRANS_UPJANG = Z.UPJANG
											INNER JOIN HLDC_SC_DEPT_V D ON 1 = 1
																						<isNotNull col="TM_CD">
           																				AND D.TM_CD = #TM_CD#
																						</isNotNull>
																						AND B2.DEPT_ID = D.DEPT_ID
											LEFT JOIN HLDC_PO_ITEM_MST M ON SUBSTR(M.ITEM_CODE, 1, 1) = 'F'
																	AND A.ITEM_CODE = M.ITEM_CODE
											 -- 추가 : 특약사항관련 : 중분류, 소분류
											<isNotNull col="CHK_1">
											LEFT JOIN FMS_SALE_RATE C1 ON C1.UPJANG = A.TRANS_UPJANG
																AND C1.SUBINV_CODE = A.SUBINV_CODE
																AND C1.CASH_CODE = '001'			/* CK물류비(001) */
																AND A.TRANS_DATE BETWEEN C1.SDATE AND C1.EDATE
																AND M.ITEM_CLASS3 = C1.ITEM_CLASS /* 중분류 */
											LEFT JOIN FMS_SALE_RATE C2 ON C2.UPJANG = A.TRANS_UPJANG
																AND C2.SUBINV_CODE = A.SUBINV_CODE
																AND C2.CASH_CODE = '001'			/* CK물류비(001) */
																AND A.TRANS_DATE BETWEEN C2.SDATE AND C2.EDATE
																AND M.ITEM_CLASS4 = C2.ITEM_CLASS	/* 소분류 */
											</isNotNull>
											<isNotNull col="CHK_2">
											LEFT JOIN FMS_SALE_RATE J1 ON J1.UPJANG = A.TRANS_UPJANG
																AND J1.SUBINV_CODE = A.SUBINV_CODE
																AND J1.CASH_CODE = '002'			/* 지급수수료(002) */
																AND A.TRANS_DATE BETWEEN J1.SDATE AND J1.EDATE
																AND M.ITEM_CLASS3 = J1.ITEM_CLASS /* 중분류 */
											LEFT JOIN FMS_SALE_RATE J2 ON J2.UPJANG = A.TRANS_UPJANG
																AND J2.SUBINV_CODE = A.SUBINV_CODE
																AND J2.CASH_CODE = '002'			/* 지급수수료(002) */
																AND A.TRANS_DATE BETWEEN J2.SDATE AND J2.EDATE
																AND M.ITEM_CLASS4 = J2.ITEM_CLASS	/* 소분류 */
											</isNotNull>
											<isNotNull col="CHK_3">
											LEFT JOIN FMS_SALE_RATE S1 ON S1.UPJANG = A.TRANS_UPJANG
																AND S1.SUBINV_CODE = A.SUBINV_CODE
																AND S1.CASH_CODE = '003'			/* 장려금(003) */
																AND A.TRANS_DATE BETWEEN S1.SDATE AND S1.EDATE
																AND M.ITEM_CLASS3 = S1.ITEM_CLASS /* 중분류 */
											LEFT JOIN FMS_SALE_RATE S2 ON S2.UPJANG = A.TRANS_UPJANG
																AND S2.SUBINV_CODE = A.SUBINV_CODE
																AND S2.CASH_CODE = '003'			/* 장려금(003) */
																AND A.TRANS_DATE BETWEEN S2.SDATE AND S2.EDATE
																AND M.ITEM_CLASS4 = S2.ITEM_CLASS /* 소분류 */
											</isNotNull>
					WHERE SUBSTR(A.SUBINV_CODE, 1, 2) = 'S1'
					AND (A.TRANS_TYPE IN '_002' OR A.TRANS_TYPE = 'I001' )
					AND A.TRANS_DATE2 BETWEEN TO_CHAR(ADD_MONTHS(#TRX_DATE#, -11), 'YYYYMMDD')  AND SUBSTR(#TRX_DATE#, 1, 6) || '31'		/* 조건 : 1년 단위 기준 */
				) T
			) X
			GROUP BY 	X.MAIN_UPJANG
				, X.UPJANG
				, X.PART_SALES_SABUN
				, X.DEPT_ID
		) S	

	) V INNER JOIN ST_UPJANG V1 ON V.MAIN_UPJANG = V1.UPJANG
		 INNER JOIN ST_UPJANG V2 ON V.UPJANG = V2.UPJANG
		 LEFT  JOIN HR_PERSONAL V3 ON V.PART_SALES_SABUN = V3.SABUN
ORDER BY V.MAIN_UPJANG
         


</statement>
	<input default-name="ds_cond">
		<col name="MU_CD" size="255" type="VARCHAR" description="" /> 
		<col name="TM_CD" size="255" type="VARCHAR" description="" /> 
		<col name="TM_NM" size="255" type="VARCHAR" description="" /> 
		<col name="PART_SALES_SABUN" size="255" type="VARCHAR" description="" /> 
		<col name="MAIN_UPJANG" size="6" type="NUMERIC" description="업장코드" /> 
		<col name="MAIN_UPJANG_NM" size="255" type="VARCHAR" description="" /> 
		<col name="TRX_DATE" size="255" type="VARCHAR" description="" /> 
		<col name="CHK_1" size="255" type="VARCHAR" description="" /> 
		<col name="CHK_2" size="255" type="VARCHAR" description="" /> 
		<col name="CHK_3" size="255" type="VARCHAR" description="" /> 
		<col name="SCH_PRICE" size="255" type="VARCHAR" description="" /> 
	</input>
	<output default-name="ds_list">   


	</output>
</query>	