<?xml version="1.0" encoding="euc-kr"?>
<query>
	<type>select</type>
	<description><![CDATA[--레시피검색및 등록(기간표준)
레시피자재조회]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
<![CDATA[
SELECT A.TERM_MENU_CD,
       B.RECIPE_CD,
       (SELECT RECIPE_NAME FROM FSR_STD_RECIPE_MST WHERE RECIPE_CD=B.RECIPE_CD) RECIPE_NAME,
       (SELECT RECIPE_COLOR FROM FSR_STD_RECIPE_MST WHERE RECIPE_CD=B.RECIPE_CD) RECIPE_COLOR,
       (SELECT CUISINE_TYPE FROM FSR_STD_RECIPE_MST WHERE RECIPE_CD=B.RECIPE_CD) CUISINE_TYPE,
       C.ITEM_CODE,
       E.ITEM_NAME,
       C.NEED_QTY,
       DECODE( NVL(F.DISUSE_RATE,0), 0, C.NEED_QTY, ROUND(C.NEED_QTY*(100-F.DISUSE_RATE)/100,2) ) EDIBLE_QTY,
       ROUND(C.NEED_QTY * (NVL(D.MARGIN_PRICE,0) / E.KG_CONVERT_RATE / 1000) ) RECIPE_COST,				--1인원가
       NVL(D.MARGIN_PRICE,0) MARGIN_PRICE,	--구매단가
       FN_ITEM_FEATURE_ICON(E.DUTY_YN, E.PB_YN, E.ECO_ITEM, E.MANUF_CD) AS FEATURE_ICON,
       E.ITEM_SIZE,	    --규격
       E.PO_UOM,	--구매단위
       C.CUT_SPEC,
                      I.RESTRICT_START,
                      I.RESTRICT_END,
                      I.RESTRICT_REASON,
                      I.RESTRICT_PERIOD,
       --개별 자재별 영양가
       NVL(ROUND((F.CAL     * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0)	CAL,    	--"열량",
       NVL(ROUND((F.WATER   * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0)	WATER,  	--"수분",
       NVL(ROUND((F.PROT    * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0)	PROT,   	--"단백질",
       NVL(ROUND((F.FAT     * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0)	FAT,    	--"지질",
       NVL(ROUND((F.CARBO   * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0)	CARBO,  	--"당질",
       NVL(ROUND((F.FIBER   * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0)	FIBER,  	--"섬유",
       NVL(ROUND((F.ASH     * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0)	ASH,    	--"회분",
       NVL(ROUND((F.CA      * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0)	CA,     	--"칼슘",
       NVL(ROUND((F.P       * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0)	P,      	--"인",
       NVL(ROUND((F.FE      * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0)	FE,     	--"철",
       NVL(ROUND((F.NA      * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0)	NA,     	--"나트륨",
       NVL(ROUND((F.K       * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0)	K,      	--"칼륨",
       NVL(ROUND((F.VITA_A  * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0)	VITA_A, 	--"비타민A",
       NVL(ROUND((F.RETIN   * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0)	RETIN,  	--"레티놀",
       NVL(ROUND((F.B_CAROT * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0)	B_CAROT,	--"B_카르틴",
       NVL(ROUND((F.THIA    * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0)	THIA,   	--"비타민B1",
       NVL(ROUND((F.RIBO    * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0)	RIBO,   	--"비타민B2",
       NVL(ROUND((F.NIACIN  * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0)	NIACIN, 	--"나이아신",
       NVL(ROUND((F.VITA_C  * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0)	VITA_C, 	--"비타민C",
       NVL(ROUND((F.CHOLE   * (C.NEED_QTY*(100-F.DISUSE_RATE)) / 100)/100,2),0)	CHOLE      	--"콜레스테롤"
FROM   FSM_TERM_MENU_MST A,
       FSM_TERM_MENU_RECIPE B,
       FSR_STD_RECIPE_ITEM C,
       FSI_STD_PRICE       D,
       (
       SELECT ITEM_CODE,
              ITEM_NAME,
              ITEM_SIZE,
              PO_UOM,
              KG_CONVERT_RATE
             , 'N' AS PB_YN
             , MANUF_CD
             , ECO_ITEM
             , (SELECT CASE WHEN COUNT(1) > 0 THEN 'Y' ELSE 'N' END
				  FROM FSI_DUTY_MST
				 WHERE ITEM_CODE = A.ITEM_CODE
				   AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN START_DATE AND END_DATE
				   AND USE_YN = 'Y') AS DUTY_YN
         FROM HLDC_PO_ITEM_MST A
        WHERE ITEM_CLASS1 = 'F'
       ) E,
       FSI_ITEM_NUT F,
       FSR_STD_RECIPE_MST H
       ,(
                SELECT A.ITEM_CODE
                      ,A.RESTRICT_START
                      ,A.RESTRICT_END
                      ,A.RESTRICT_REASON
                      ,TO_CHAR(TO_DATE(A.RESTRICT_START, 'YYYYMMDD' ) , 'YYYY.MM.DD' ) || '~' || TO_CHAR(TO_DATE(A.RESTRICT_END, 'YYYYMMDD' ) , 'YYYY.MM.DD' ) AS RESTRICT_PERIOD
                  FROM FSI_RESTRICT_MST A                            --FSI_RESTRICT_SET
                      ,HLDC_PO_ITEM_MST B
                 WHERE A.ITEM_CODE = B.ITEM_CODE
                   AND ((B.ITEM_CLASS2 BETWEEN 'F10' AND 'F26') OR B.ITEM_CLASS2 = 'F29')
                   AND ( (RESTRICT_START BETWEEN #MENU_DATE# AND #MENU_DATE#)
                       OR (RESTRICT_END BETWEEN #MENU_DATE# AND #MENU_DATE#)
                       OR (RESTRICT_START <= #MENU_DATE# AND RESTRICT_END >= #MENU_DATE#) )
        ) I
WHERE  A.TERM_MENU_CD=B.TERM_MENU_CD
AND    A.MENU_CLASS=#MENU_CLASS#
AND    A.COST_TYPE=#COST_TYPE#
AND    A.MENU_TYPE=#MENU_TYPE#
AND    A.MEAL=#MEAL#
AND    A.CORNER=#CORNER#
AND    A.MENU_DATE=#MENU_DATE#
AND    B.RECIPE_CD=C.RECIPE_CD
AND    C.ITEM_CODE=D.ITEM_CODE(+)
AND    C.ITEM_CODE=E.ITEM_CODE(+)
AND    C.ITEM_CODE=F.ITEM_CODE(+)
AND    C.ITEM_CODE=I.ITEM_CODE(+)
AND    B.RECIPE_CD=H.RECIPE_CD
ORDER BY B.RECIPE_CD,C.ITEM_SEQ	]]></statement>
	<input default-name="ds_Item">
	</input>
	<output default-name="ds_Item">
	</output>
</query>
