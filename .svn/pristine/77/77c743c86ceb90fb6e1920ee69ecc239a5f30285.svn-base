<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="OrgChoiceComponent" classname="OrgChoiceComponent" inheritanceid="" position="absolute 0 0 201 21" titletext="(삭제)조직을 선택하는 Component" onload="OrgChoiceComponent_onload">
    <Layouts>
      <Layout>
        <Edit id="edt_name" taborder="0" readonly="true" position="absolute 0 0 201 21" anchor="left top right"/>
        <Button id="btn_drop" taborder="1" onclick="btn_drop_onclick" class="btn_WF_downMove" position="absolute 180 0 201 21" anchor="top right" style="padding:2 0 0 0;"/>
        <PopupDiv id="pdv" visible="false" position="absolute 0 20 252 263" anchor="default" style="background:white;border:1 solid #808080ff ;align:left middle;">
          <Layouts>
            <Layout>
              <Grid id="Grid00" taborder="0" binddataset="ds_list" useinputpanel="false" autofittype="col" treeusecheckbox="false" treeinitstatus="collapse,all" position="absolute 0 0 250 241" style="border:0 none transparent ;" anchor="default">
                <Formats>
                  <Format id="default">
                    <Columns>
                      <Column size="184"/>
                    </Columns>
                    <Rows>
                      <Row size="24"/>
                    </Rows>
                    <Band id="body">
                      <Cell displaytype="tree" edittype="tree" style="line:0 none #808080ff ;background:transparent;background2:transparent;" text="bind:orgNm" treestartlevel="1" treelevel="bind:orgLevel"/>
                    </Band>
                  </Format>
                </Formats>
              </Grid>
            </Layout>
          </Layouts>
        </PopupDiv>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_list" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="orgMgmtCd" type="STRING" size="255"/>
          <Column id="orgCd" type="STRING" size="255"/>
          <Column id="orgNm" type="STRING" size="255"/>
          <Column id="orgLevel" type="BIGDECIMAL" size="255"/>
          <Column id="llevelYn" type="STRING" size="255"/>
          <Column id="buCd" type="STRING" size="255"/>
          <Column id="muCd" type="STRING" size="255"/>
          <Column id="fiscalPrvnCd" type="STRING" size="255"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript4.0"><![CDATA[/*
  화 면 명 : 팀 검색용 컴포넌트
  파 일 명 : TmSearchComponent.xfdl
  기    능 : 팀 검색 Composite 콤포넌트

    수정일     수정자                  수정내용
  ----------   -------  --------------------------------------------------
  2015.03.10   김재섭   최초 생성
*/

/************************************************************************************************
 * 공통 라이브러리 INCLUDE 영역 (필수)
************************************************************************************************/
include "lib::lib_com.xjs";

/*----------------------------------------------------------------------------------------------
 * 설명      : 초기설정한다.
 *---------------------------------------------------------------------------------------------*/
function OrgChoiceComponent_onload(obj:Form, e:LoadEventInfo)
{
	fn_search();
	//fn_setBindItem();
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 조회 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_search()
{
    var strSvcID    = "search";
    var strURL      = "/sc/cmn/orgChoice/selectList.xdo";
    var strInDs     = "";
    var strOutDs    = "ds_list=ds_list";
    var strArg      = "";
    var strCallback = "fn_callBack";
    var bAsync      = true;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 트랜잭션 콜백 함수 (필수)
 *---------------------------------------------------------------------------------------------*/
function fn_callBack(strSvcID, nErrorCode, strErrorMsg)
{
    switch(strSvcID)
    {
		// 조회
        case "search" :
            break;
    }
}

function fn_popupDiv()
{
	//pdv.position.right = edt_name.position.right; // + fv_gridSize;
	
	var nX = system.clientToScreenX(edt_name, 0);
	var nY = system.clientToScreenY(edt_name, 0) + edt_name.position.height;

	pdv.trackPopup(nX, nY);
}


/*----------------------------------------------------------------------------------------------
 * 설명      : 바인딩 정보를 처리한다.
 *---------------------------------------------------------------------------------------------*/
function fn_setBindItem()
{
	if (!gfn_isNull(this.bindDataset))
	{
		if (!gfn_isNull(this.bindTmNmColumn))
		{
			var bindItem0 = new BindItem("tmSearchBindItem0", "edt_tmNm", "value", this.bindDataset, this.bindTmNmColumn);
			this.addChild(bindItem0.name, bindItem0);
			bindItem0.bind();
		}
		
		if (!gfn_isNull(this.bindTmCdColumn))
		{
			var bindItem1 = new BindItem("userSearchBindItem1", "edt_tmNm", "tmCd", this.bindDataset, this.bindTmCdColumn);
			this.addChild(bindItem1.name, bindItem1);
			bindItem1.bind();
		}
	}
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 사번을 가져온다.
 *---------------------------------------------------------------------------------------------*/
function getTmCode()
{
	return edt_tmNm.tmCd;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 사번을 설정한다.
 *---------------------------------------------------------------------------------------------*/
function setTmCode(val)
{
	if (!gfn_isNull(this.bindDataset) && !gfn_isNull(this.bindTmCdColumn))
	{
		var ds = parent.objects[this.bindDataset];
		var nRow = ds.rowposition;
		ds.setColumn(nRow, this.bindTmCdColumn, val);
	}
	
	edt_tmNm.tmCd = val;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 사원명을 가져온다.
 *---------------------------------------------------------------------------------------------*/
function getTmName()
{
	return edt_tmNm.value;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 사원명을 설정한다.
 *---------------------------------------------------------------------------------------------*/
function setTmName(val)
{
	if (!gfn_isNull(this.bindDataset) && !gfn_isNull(this.bindTmNmColumn))
	{
		var ds = parent.objects[this.bindDataset];
		var nRow = ds.rowposition;
		ds.setColumn(nRow, this.bindTmNmColumn, val);
	}
	
	edt_tmNm.value = val;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 
 *---------------------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------------------------
 * 설명      : 
 *---------------------------------------------------------------------------------------------*/

/************************************************************************************************
 * 각 COMPONENT 별 EVENT 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 버튼에 대한 이벤트
 *---------------------------------------------------------------------------------------------*/
function btn_search_onclick(obj:Button,  e:ClickEventInfo)
{
	//[[Before Event를 정의한다.
	if (!gfn_isNull(this.eventBeforeTrigger))
	{
		var beforeEvent = eval("parent."+this.eventBeforeTrigger);
		var rtn = beforeEvent(this);
		
		if (!rtn) return;
	}
	//Before Event를 정의한다.]]
	
	//[[팝업창을 호출한다.
	var strId       = "TmSearch";
	var strURL      = "cmn::TmSearchPop.xfdl";
	var objArgument = {
		P_BU_CD : this.qoBuCd,
		P_MU_CD : this.qoMuCd,
		P_USE_YN: this.qoUseYn
	};
	var nWidth      = 513;
	var nHeight     = 495;
	var strStyle    = "";
	var nLeft       = -1;
	var nTop        = -1;
	var isModeless  = false;
	var bShowTitle  = true;
	var strAlign    = "-1";

	// 리턴값을 배열로 받을 경우	
	var arrRtn = gfn_dialog(strId, strURL, objArgument, nWidth, nHeight, strStyle, nLeft, nTop, isModeless, bShowTitle, strAlign);
	
	if (arrRtn instanceof Object)
	{
		setTmCode(arrRtn.tmCd);
		setTmName(arrRtn.tmNm);
		
		//[[After Event를 정의한다.
		if (!gfn_isNull(this.eventAfterTrigger))
		{
			var afterEvent = eval("parent."+this.eventAfterTrigger);
			afterEvent(this, arrRtn);
		}
		//After Event를 정의한다.]]
	}
	//팝업창을 호출한다.]]
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 
 *---------------------------------------------------------------------------------------------*/
function edt_tmNm_onkeydown(obj:Edit, e:KeyEventInfo)
{
	// Enter 키
	if(e.keycode == 13) 
	{		
        if (gfn_isNull(obj.tmCd))
        {
			btn_search.click();
		}
	}
	// Del 키
	else if(e.keycode == 46) 
	{		
		setTmCode("");
		setTmName("");
		
	}
}

function btn_drop_onclick(obj:Button,  e:ClickEventInfo)
{
	fn_popupDiv();
}
]]></Script>
  </Form>
</FDL>
