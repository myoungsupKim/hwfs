<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="..\..\..\default_typedef.xml"/>
  <Form id="ArYnPopup" classname="COMP_GUIDE_13" inheritanceid="" position="absolute 0 0 899 288" titletext="채권대체 상세 내역" scrollbars="autoboth" onload="form_onload">
    <Layouts>
      <Layout>
        <Static id="Static71" text="h15" class="Guide01_AreaRed" visible="false" position="absolute 15 272 663 287" anchor="left bottom"/>
        <Static id="Static09" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 884 15 899 530" anchor="top right"/>
        <Div id="div_cmnBtn" anchor="left top right" taborder="1" tabstop="false" url="cmn::CmnBtn.xfdl" text="Div00" scrollbars="none" position="absolute 15 15 884 45"/>
        <Static id="Static00" text="상 세 내 역" class="sta_WF_Title01" position="absolute 15 46 465 64" anchor="left top"/>
        <Static id="Static02" text="글자기준간격 h05" class="Guide01_AreaRed" visible="false" position="absolute 15 59 465 64" anchor="left top"/>
        <Grid id="grd_list" taborder="17" binddataset="ds_list" useinputpanel="false" position="absolute 14 64 884 272" anchor="left top" autofittype="col" autoenter="select" oncellclick="grd_list_oncellclick">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="100"/>
                <Column size="100"/>
                <Column size="200"/>
                <Column size="150"/>
                <Column size="150"/>
                <Column size="100"/>
                <Column size="100"/>
              </Columns>
              <Rows>
                <Row size="26" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="일자"/>
                <Cell col="1" text="유형"/>
                <Cell col="2" text="채권번호"/>
                <Cell col="3" text="고객사"/>
                <Cell col="4" text="적요"/>
                <Cell col="5" text="해당대비"/>
                <Cell col="6" text="대체유형명"/>
              </Band>
              <Band id="body">
                <Cell displaytype="date" style="align:center;" text="bind:occurDate" maskchar="XXXX-XX-XX"/>
                <Cell col="1" style="align:center;" text="bind:arTypeNm"/>
                <Cell col="2" displaytype="text" style="align:left;" text="bind:arNum"/>
                <Cell col="3" displaytype="text" style="align:left;" text="bind:custNm"/>
                <Cell col="4" displaytype="text" style="align:center;" text="bind:remark"/>
                <Cell col="5" displaytype="number" style="align:right;" text="bind:receiveAmt"/>
                <Cell col="6" displaytype="number" style="align:center;" text="bind:receiveTypeNm"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Static id="Static10" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 0 13 15 528" anchor="top right"/>
        <Static id="Static11" text="h15" class="Guide01_AreaRed" visible="false" position="absolute -2 0 646 15" anchor="left bottom"/>
        <Static id="Static04" text="h15" class="Guide01_AreaRed" visible="false" position="absolute 599 511 890 526"/>
      </Layout>
    </Layouts>
    <Bind/>
    <Objects>
      <Dataset id="ds_list" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false" oncolumnchanged="ds_list_oncolumnchanged">
        <ColumnInfo>
          <Column id="occurDate" type="STRING" size="256"/>
          <Column id="arTypeNm" type="STRING" size="256"/>
          <Column id="arNum" type="INT" size="256"/>
          <Column id="custNm" type="STRING" size="256"/>
          <Column id="remark" type="STRING" size="256"/>
          <Column id="arAmt" type="STRING" size="256"/>
          <Column id="receiveAmt" type="STRING" size="256"/>
          <Column id="receiveTypeNm" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_search" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="arNum" type="string" size="255"/>
          <Column id="occurDate" type="string" size="255"/>
          <Column id="upjangCd" type="string" size="255"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_cmnAuth" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="srcYn" type="STRING" size="256"/>
          <Column id="insYn" type="STRING" size="256"/>
          <Column id="delYn" type="STRING" size="256"/>
          <Column id="savYn" type="STRING" size="256"/>
          <Column id="prtYn" type="STRING" size="256"/>
          <Column id="exlYn" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="srcYn">1</Col>
            <Col id="insYn">0</Col>
            <Col id="delYn">0</Col>
            <Col id="savYn">0</Col>
            <Col id="prtYn">0</Col>
            <Col id="exlYn">1</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript4.0"><![CDATA[/*
  화 면 명 : Template
  파 일 명 : Template.xfdl
  기    능 : Design 및 Script Template 

    수정일    수정자                  수정내용
  ----------   -------  --------------------------------------------------
  2014.11.01   김윤기   최초 생성
*/

/************************************************************************************************
 * 공통 라이브러리 INCLUDE 영역 (필수)
************************************************************************************************/
include "lib::lib_com.xjs";


/************************************************************************************************
 * FORM 변수 선언 영역 (필수)
************************************************************************************************/
var fv_sToday = gfn_today();
var strMu	= "";

/************************************************************************************************
 * FORM EVENT 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : Form Load (필수)
 *---------------------------------------------------------------------------------------------*/
function form_onload(obj:Form, e:LoadEventInfo)
{	
	// Form Load 시 공통 기능 처리(obj:Form, bCreateEvent:이벤트 생성 여부)
	gfn_formOnLoad(this);
	
	// 초기값 셋팅
	fn_init();
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 초기값 셋팅
 *---------------------------------------------------------------------------------------------*/
function fn_init()
{
	// 업데이트여부를 체크할 DataSet, 여러개 있을 경우 ;로 구분
	v_ds_check = "ds_list";

	ds_search.addRow();
	
	//조회 셋팅값을 전달해 준다.			
	if(!gfn_isNull(arrSchVal[0])){

		ds_search.setColumn(0, "arNum", arrSchVal[0]);
		//ds_search.setColumn(0, "occurDate", arrSchVal[1]);
		//ds_search.setColumn(0, "upjangCd", arrSchVal[2]);
		
		fn_search();
	}	

}

/*----------------------------------------------------------------------------------------------
 * 설명      : 화면 닫기 전 변경 유무 체크 (필수-Frame에서 창 닫힐때 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_close()
{	
//	// v_ds_check 미사용시 변경사항 체크(입력 프로그램일때 변경되는 Dataset 전체 기술)
// 	if (gfn_dsIsUpdated(ds_list) == true) 
// 	{
// 		// 변경된 데이터가 있습니다. 현재 화면을 닫겠습니까?
//         if (!gfn_confirm("confirm.before.movepage")) return false;
//     }
//     
//	// 조회프로그램에도 Return true; 기술해 주세요!
// 	return true;

	// v_ds_check 사용시 변경사항 체크
// 	if(gfn_length(v_ds_check) != 0)
// 	{	
// 		// v_ds_check 설정기준 변경사항 체크
// 		if (gfn_isDataChange() == true) 
// 		{		
// 			// 변경된 데이터가 있습니다. 현재 화면을 닫겠습니까?
// 			if (!gfn_confirm("confirm.before.movepage")) return false;
// 		}
// 	}
    
	close();
    
    // 조회프로그램에도 Return true; 기술해 주세요!
	return true;
}


/************************************************************************************************
 * 공통기능 FUNCTION 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 조회 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_search()
{	
	// 조회시 Validation Check
	//if (gfn_validCheck(ds_search, ds_searchValid, true) == false) return;

    var strSvcID    = "search";
    var strURL      = "fs/fsl/arYnPopup/selectArYnList.xdo";
    var strInDs     = "ds_search=ds_search:A";
    var strOutDs    = "ds_list=ds_list";
    var strArg      = "";
    var strCallback = "fn_callBack";
    var bAsync      = true;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 신규 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_insert()
{	
// // 	// v_ds_check 사용시 변경사항 체크
//  	if (gfn_isDataChange() == false) 
//  	{		
//  		gfn_alert("msg.save.nochange");	// 변경된 내역이 없습니다.
//  		return;
//  	}
//     var ds = new Dataset;
// 
//     var rowIdx = 0;
// 	for ( var i = 0; i < ds_list.getRowCount(); i++ ) {
// 		if(ds_list.getColumn(i, "chk") == "1"){
// 			ds_return.addRow();
// 			ds_return.copyRow(rowIdx, ds_list, i);
// 			ds_return.setColumn(rowIdx, "arBalAmt", ds_list.getColumn(i, "arBalAmt"));
// 			rowIdx = rowIdx + 1;
// 		}
// 	}
// 	//조회 셋팅값을 전달해 준다.
// 	opener.ds_advanceData.setColumn(0, "inqueryStartDate", ds_search.getColumn(0, "inqueryStartDate"));
// 	opener.ds_advanceData.setColumn(0, "inqueryEndDate", ds_search.getColumn(0, "inqueryEndDate"));
// 	opener.ds_advanceData.setColumn(0, "inqueryMuCd", ds_search.getColumn(0, "inqueryMuCd"));
// 	opener.ds_advanceData.setColumn(0, "inqueryTmCd", ds_search.getColumn(0, "inqueryTmCd"));
// 	opener.ds_advanceData.setColumn(0, "inqueryCcCd", ds_search.getColumn(0, "inqueryCcCd"));
// 	opener.ds_advanceData.setColumn(0, "inqueryCcNm", ds_search.getColumn(0, "inqueryCcNm"));
// 	opener.ds_advanceData.setColumn(0, "inqueryCustCd", ds_search.getColumn(0, "inqueryCustCd"));
// 	opener.ds_advanceData.setColumn(0, "inqueryCustNm", ds_search.getColumn(0, "inqueryCustNm"));
// 		
// 	ds.copyData(ds_return);
//     close(ds);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 삭제 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_delete()
{
// 	var nRow = ds_list.rowposition;
// 	
// 	if(ds_list.rowposition == -1) 
// 	{
// 		gfn_alert("msg.err.grid.noselect", "삭제할 row");	// 선택된 항목이 없습니다.
// 		return;
// 	}
// 
// 	var rtVal = gfn_confirm("confirm.before.delete");	// 선택된 자료를 삭제 하시겠습니까?
// 	if (rtVal == true) 
// 	{	
// 		ds_list.deleteRow(nRow);
// 	}
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 저장 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_save()
{
// 	// v_ds_check 미사용시 변경사항 체크
// 	if (gfn_dsIsUpdated(ds_list) == false) 
// 	{
// 		gfn_alert("msg.save.nochange");	// 변경된 내역이 없습니다.
// 		return;
// 	}

// 	// v_ds_check 사용시 변경사항 체크
// 	if (gfn_isDataChange() == true) 
// 	{		
// 		gfn_alert("msg.save.nochange");	// 변경된 내역이 없습니다.
// 		return;
// 	}
	
	
	// ds_listValid Dataset에 Validation할 칼럼별로 구성
	// 항목 추가시에는 ','로 구분
	// 예)title:금액1,required:false,minlength:2,digits:true
	
	// Alert시 칼럼 표시 명칭               - title:아이디(메시지의 치환할 명칭) 
	// 필수체크                              - required:true(체크여부 true/false)
	// size 크기                              - length:7(size 숫자)
	// 최대 size 크기                        - maxlength:7(size 숫자)
	// 최소 size 크기                        - minlength:7(size 숫자)
	// 최대 size 크기(Byte)                  - maxlengthB:7(size 숫자)
	// 최소 size 크기(Byte)                  - minlengthB:7(size 숫자)
	// 숫자 여부                             - digits:true(체크여부 true/false)
	// 해당 숫자 이하                       - min:7(size 숫자)
	// 해당 숫자 이상                       - max:7(size 숫자)
	// 소숫점 자리수 비교                   - declimit:3(size 숫자)
	// 날짜 년월일 체크                     - date:true(체크여부 true/false)
	// 날짜 년월 체크                       - dateym:true(체크여부 true/false)
	// 타 칼럼값보다 큰지 비교             - comparemax:Column4(Dataset 칼럼ID):시작일(비교대상의 메시지 치환할 명칭)
	// 타 칼럼값보다 작은지 비교           - comparemin:Column6(Dataset 칼럼ID):종료일(비교대상의 메시지 치환할 명칭)
	// 타 칼럼값과 같은 값인지 비교        - equalto:Column5(Dataset 칼럼ID):금액1(비교대상의 메시지 치환할 명칭)
	// 사이의 값인지 비교                   - range:40(from 숫자):100(to 숫자)
	// 코드값이 목록내의 값인지 비교       - code:1(목록 숫자):2(목록 숫자):3(목록 숫자)
	// 이메일 여부 체크(함수 체크시 예제)  - isEmail:true(체크여부 true/false)
	
	// 오류시 focus 지정                      - focus:cal_toDate(Componet ID로 form에서부터의 경로)
	
	// 저장시 Validation Check	
	//if (gfn_validCheck(grd_list, ds_listValid) == false)	return;
	
	
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 출력 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_print()
{
	
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 도움말 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_help()
{
	
}

/************************************************************************************************
 * TRANSACTION 및 CallBack 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 트랜잭션 콜백 함수 (필수)
 *---------------------------------------------------------------------------------------------*/
function fn_callBack(strSvcID, nErrorCode, strErrorMsg)
{
	// 에러시 gfn_callBack에서 메시지 제공, 화면별 특정 에러 발생시에만 사용하세요.
	if (nErrorCode < 0) 
	{
		return;
	}
	
    switch(strSvcID)
    {
		// 코드분류 조회
        case "search" :
            //trace(ds_list.saveXML());
            break;
    }
}


/************************************************************************************************
 * 사용자 FUNCTION 영역 (필수)
************************************************************************************************/


/************************************************************************************************
 * 각 COMPONENT 별 EVENT 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : form에서 Key Down시 단축키들 지정(공통에서 자동생성, 화면에 스크립트 작성시 화면 스크립트만 실행됨)
 *---------------------------------------------------------------------------------------------*/
]]></Script>
  </Form>
</FDL>
