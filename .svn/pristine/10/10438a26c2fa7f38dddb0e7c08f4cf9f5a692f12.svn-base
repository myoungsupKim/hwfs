<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="rc.rrm.smlRecipeMasterMgntDAO">
	<desc>가상레시피 코드 HQML Query</desc>

	<!-- 가상레시피 코드 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.rc.rrm.smlRecipeMasterMgntDAO.selectList	*/
		<![CDATA[
		SELECT '0' AS CHK
		     , A.UPJANG_TYPE
		     , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'UPJANG_TYPE' AND CODE = A.UPJANG_TYPE) AS UPJANG_TYPE_NM
		     , A.STD_RECIPE_CD
		     , A.MU_CD
		     , (SELECT MU_NM FROM SCC_MU WHERE MU_CD = A.MU_CD) AS MU_NM
		     , A.SML_UPJANG
		     , (SELECT UPJANGNM FROM ST_UPJANG WHERE UPJANG = A.SML_UPJANG) AS SML_UPJANG_NM
		     , A.RECIPE_NM
		     , A.RECIPE_NM_ENGLISH
		     , A.RECIPE_NM_BYNM
		     , A.STAND
		     , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'STAND_TYPE' AND CODE = A.STAND) AS STAND_NM
		     , A.ORIGIN
		     , A.UNIT_CD
		     , A.OFFER_UNIT
		     , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'OFER_UNIT' AND CODE = A.OFER_UNIT) AS OFER_UNIT_NM
		     , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'OFFER_UNIT' AND CODE = A.OFFER_UNIT) AS OFFER_UNIT_NM
		     , A.COOK_UNIT
		     , A.OFER_NO
		     , A.OFER_UNIT
		     , A.GOAL_CSTRAT
		     , A.CSTRAT_DRCT_INPUT_YN
		     , A.DRCT_INPUT_CST_RATE
		     , A.STD_RECIPE_APPLY_BASIS
		     , A.MCALSS_CD
		     , A.SCLASS_CD
		     , A.SALE_PRICE
		     , A.RECIPE_DVLP_BY
		     , A.REMARK
		     , A.REG_DATE
		     , A.REF_SEQ
		     , A.APPEND_SEQ
		     , E.REL_PATH
		     , E.SAVE_FILE_NM
		     , E.ORGNL_FILE_NM
		     , A.USE_YN
		     , A.DETAIL_COUNT AS SUB_COUNT
		     , A.SET_RECIPE_CD
		     , A.SET_RECIPE_CD AS OLD_SET_RECIPE_CD
		     , DECODE((SELECT COUNT(*) FROM RSS_STD_RECIPE_CUISINE WHERE STD_RECIPE_CD = A.STD_RECIPE_CD), 0, 'N', 'Y') AS CUSINE_CNT
		  FROM RSS_STD_RECIPE_CD_MST A
		     , SCC_APPEND_FILE E
		 WHERE A.REF_SEQ = E.REF_SEQ(+)
		   AND A.APPEND_SEQ = E.APPEND_SEQ(+)
		<#if muCd?has_content>
		   AND A.MU_CD = :muCd
		</#if>
		<#if upjangType?has_content>
		   AND A.UPJANG_TYPE = :upjangType
		</#if>
		<#if mcalssCd?has_content>
		   AND A.MCALSS_CD = :mcalssCd
		</#if>
		<#if sclassCd?has_content>
		   AND A.SCLASS_CD = :sclassCd
		</#if>
		<#if recipeNm?has_content>
		   AND UPPER(A.RECIPE_NM) LIKE '%' || UPPER(:recipeNm) || '%'
		</#if>
		<#if smlUpjang?has_content>
		   AND A.SML_UPJANG = :smlUpjang
		</#if>
		   AND NVL(A.SML_YN, 'N') = 'Y'
		 ORDER BY A.STD_RECIPE_CD ASC

		]]>
	</statement>

	<!-- 가상레시피 코드 max+1 조회한다. -->
	<statement name="selectMaxStdRecipeCd" type="select">
		/*+ com.hwfs.rc.rrm.smlRecipeMasterMgntDAO.selectMaxStdRecipeCd	*/
		<![CDATA[
		SELECT LPAD(NVL(MAX(STD_RECIPE_CD) + 1, 1), 7, 0) AS STD_RECIPE_CD
		  FROM RSS_STD_RECIPE_CD_MST

		]]>
	</statement>

	<!-- 가상레시피 코드를 등록한다. -->
	<statement name="insert" type="insert">
		/*+ com.hwfs.rc.rrm.smlRecipeMasterMgntDAO.insert	*/
		<![CDATA[
		INSERT INTO RSS_STD_RECIPE_CD_MST
		(
		   UPJANG_TYPE
		 , STD_RECIPE_CD
		 , MU_CD
		 , RECIPE_NM
		 , RECIPE_NM_ENGLISH
		 , RECIPE_NM_BYNM
		 , STAND
		 , ORIGIN
		 , UNIT_CD
		 , OFFER_UNIT
		 , COOK_UNIT
		 , OFER_NO
		 , OFER_UNIT
		 , GOAL_CSTRAT
		 , CSTRAT_DRCT_INPUT_YN
		 , DRCT_INPUT_CST_RATE
		 , STD_RECIPE_APPLY_BASIS
		 , MCALSS_CD
		 , SCLASS_CD
		 , SALE_PRICE
		 , RECIPE_DVLP_BY
		 , REMARK
		 , REG_DATE
		 , REF_SEQ
		 , APPEND_SEQ
		 , UPJANG_MODIFY_ALLOW_YN
		 , RECIPE_STATUS
		 , USE_YN
		 , SML_UPJANG
		 , SML_YN
		 , CUSER
		 , CDATE
		 , UUSER
		 , UDATE
		)
		VALUES
		(
		   :upjangType
		 , :stdRecipeCd
		 , :muCd
		 , :recipeNm
		<#if recipeNmEnglish?exists> , :recipeNmEnglish<#else> , null</#if>
		<#if recipeNmBynm?exists> , :recipeNmBynm<#else> , null</#if>
		<#if stand?exists> , :stand<#else> , null</#if>
		<#if origin?exists> , :origin<#else> , null</#if>
		<#if unitCd?exists> , :unitCd<#else> , 'G'</#if>
		 , :offerUnit
		 , :cookUnit
		<#if oferNo?exists> , :oferNo<#else> , null</#if>
		<#if oferUnit?exists> , :oferUnit<#else> , null</#if>
		<#if goalCstrat?exists> , :goalCstrat<#else> , null</#if>
		<#if cstratDrctInputYn?exists> , :cstratDrctInputYn, <#else> , 'N'</#if>
		<#if drctInputCstRate?exists> , :drctInputCstRate<#else> , null</#if>
		<#if stdRecipeApplyBasis?exists> , :stdRecipeApplyBasis<#else> , null</#if>
		 , :mcalssCd
		 , :sclassCd
		<#if salePrice?exists> , :salePrice<#else> , null</#if>
		<#if recipeDvlpBy?exists> , :recipeDvlpBy<#else> , null</#if>
		<#if remark?exists> , :remark<#else> , null</#if>
		<#if regDate?exists> , :regDate<#else> , null</#if>
		<#if refSeq?exists> , :refSeq<#else> , null</#if>
		<#if appendSeq?exists> , :appendSeq<#else> , null</#if>
		 , 'N'
		/* <#if recipeStatus?exists> , :recipeStatus<#else> , null</#if> */
		 , 'A'
		 , 'Y'
		 , :smlUpjang
		 , 'Y'
		 , :loginSabun
		 , SYSDATE
		 , :loginSabun
		 , SYSDATE
		)

		]]>
	</statement>

	<!-- 가상레시피 관리를 등록한다. -->
	<statement name="insertMgmt" type="insert">
		/*+ com.hwfs.rc.rrm.smlRecipeMasterMgntDAO.insertMgmt	*/
		<![CDATA[
		INSERT INTO RSS_SML_RECIPE_CD_MGMT
		(
		   MU_CD
		 , UPJANG_CD
		 , STD_DATE
		 , UPJANG_TYPE
		 , STD_RECIPE_CD
		 , RECIPE_NM
		 , STATUS
		 , CUSER
		 , CDATE
		 , UUSER
		 , UDATE
		)
		VALUES
		(
		   :muCd
		 , :smlUpjang
		 , TO_CHAR(SYSDATE, 'YYYYMMDD')
		 , :upjangType
		 , :stdRecipeCd
		 , :recipeNm
		 , '00'  --00:작성중, 01:신규요청, 02:적용완료, 99:요청반려
		 , :loginSabun
		 , SYSDATE
		 , :loginSabun
		 , SYSDATE
		)

		]]>
	</statement>
	
	<!-- 가상레시피 코드를 수정한다. -->
	<statement name="update" type="update">
		/*+ com.hwfs.rc.rrm.dao.smlRecipeMasterMgntDAO.update */
		<![CDATA[
		UPDATE RSS_STD_RECIPE_CD_MST
		   SET RECIPE_NM = :recipeNm
		<#if recipeNmEnglish?exists>     , RECIPE_NM_ENGLISH = :recipeNmEnglish</#if>
		<#if recipeNmBynm?exists>     , RECIPE_NM_BYNM = :recipeNmBynm</#if>
		<#if stand?exists>     , STAND = :stand</#if>
		<#if origin?exists>     , ORIGIN = :origin</#if>
		<#if unitCd?exists>     , UNIT_CD = :unitCd</#if>
		     , OFFER_UNIT = :offerUnit
		     , COOK_UNIT = :cookUnit
		<#if oferNo?exists>     , OFER_NO = :oferNo</#if>
		<#if oferUnit?exists>     , OFER_UNIT = :oferUnit</#if>
		<#if goalCstrat?exists>     , GOAL_CSTRAT = :goalCstrat</#if>
		<#if cstratDrctInputYn?exists>     , CSTRAT_DRCT_INPUT_YN = :cstratDrctInputYn</#if>
		<#if drctInputCstRate?exists>     , DRCT_INPUT_CST_RATE = :drctInputCstRate</#if>
		<#if stdRecipeApplyBasis?exists>     , STD_RECIPE_APPLY_BASIS = :stdRecipeApplyBasis</#if>
		     , MCALSS_CD = :mcalssCd
		     , SCLASS_CD = :sclassCd
		<#if salePrice?exists>     , SALE_PRICE = :salePrice</#if>
		<#if recipeDvlpBy?exists>     , RECIPE_DVLP_BY = :recipeDvlpBy</#if>
		<#if remark?exists>     , REMARK = :remark</#if>
		<#if regDate?exists>     , REG_DATE = :regDate</#if>
		<#if refSeq?exists>     , REF_SEQ = :refSeq</#if>
		<#if appendSeq?exists>     , APPEND_SEQ = :appendSeq</#if>
		     , UUSER = :loginSabun
		     , UDATE = SYSDATE
		 WHERE UPJANG_TYPE = :upjangType
		   AND STD_RECIPE_CD = :stdRecipeCd
		   AND MU_CD = :muCd
		   AND NVL(SML_YN, 'N') = 'Y'

		]]>
	</statement>

	<!-- 가상레시피 관리코드를 삭제한다. -->
	<statement name="deleteMgmt" type="delete">
		/*+ com.hwfs.rc.rrm.dao.smlRecipeMasterMgntDAO.deleteMst */
		<![CDATA[
		DELETE
		  FROM RSS_SML_RECIPE_CD_MGMT
		 WHERE MU_CD = :muCd
		   AND STD_RECIPE_CD = :stdRecipeCd

		]]>
	</statement>

	<!-- 가상레시피 코드를 삭제한다. -->
	<statement name="deleteMst" type="delete">
		/*+ com.hwfs.rc.rrm.dao.smlRecipeMasterMgntDAO.deleteMst */
		<![CDATA[
		DELETE
		  FROM RSS_STD_RECIPE_CD_MST
		 WHERE UPJANG_TYPE = :upjangType
		   AND STD_RECIPE_CD = :stdRecipeCd
		   AND MU_CD = :muCd
		   AND NVL(SML_YN, 'N') = 'Y'

		]]>
	</statement>

	<!-- 가상레시피 상세를 삭제한다. -->
	<statement name="deleteDetail" type="delete">
		/*+ com.hwfs.rc.rrm.dao.smlRecipeMasterMgntDAO.deleteDetail */
		<![CDATA[
		DELETE
		  FROM RSS_STD_RECIPE_CD_DETAIL
		 WHERE UPJANG_TYPE = :upjangType
		   AND STD_RECIPE_CD = :stdRecipeCd
	
		]]>
	</statement>

	<!-- 가상레시피 조리법을 삭제한다. -->
	<statement name="deleteCuisine" type="delete">
		/*+ com.hwfs.rc.rrm.dao.smlRecipeMasterMgntDAO.deleteCuisine */
		<![CDATA[
		DELETE
		  FROM RSS_STD_RECIPE_CUISINE
		 WHERE UPJANG_TYPE = :upjangType
		   AND STD_RECIPE_CD = :stdRecipeCd

		]]>
	</statement>

	<!-- 반찬세트 목록을 조회한다. -->
	<statement name="selectRsr" type="update">
		/*+ com.hwfs.rc.rrm.dao.smlRecipeMasterMgntDAO.selectRsr */
		<![CDATA[
		SELECT STD_RECIPE_CD
		     , RECIPE_NM
		  FROM RSS_STD_RECIPE_CD_MST
		 WHERE SCLASS_CD = 'RSR'
		<#if upjangType?has_content>
		   AND UPJANG_TYPE = :upjangType
		</#if>
		   AND USE_YN = 'Y'
		
		]]>
	</statement>

	<!-- 가상레시피 여부를 체크한다. -->
	<statement name="smlRecipeYn" type="select">
		/*+ com.hwfs.rc.rrm.smlRecipeMasterMgntDAO.smlRecipeYn	*/
		<![CDATA[
		SELECT TO_CHAR(STD_RECIPE_CD) AS STD_RECIPE_CD
		     , RECIPE_NM
		     , NVL(SML_YN, 'N') AS SML_RECIPE_YN
		  FROM RSS_STD_RECIPE_CD_MST
		 WHERE UPJANG_TYPE = :upjangType
		   AND STD_RECIPE_CD = :stdRecipeCd
		 UNION ALL
		SELECT '' AS STD_RECIPE_CD
		     , '' AS  RECIPE_NM
		     , 'D' AS SML_RECIPE_YN
		  FROM DUAL

		]]>
	</statement>

</hqml>