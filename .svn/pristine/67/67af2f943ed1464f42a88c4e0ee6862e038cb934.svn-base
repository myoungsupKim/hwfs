<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[-레시피검색및 등록-
레시피수정조회]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
SELECT
               A.UPJANG
			  ,A.MENU_CD
              ,A.RECIPE_SEQ
              ,A.RECIPE_TYPE
              ,A.CUISINE_TYPE
              ,A.RECIPE_CD
              ,A.RECIPE_NAME
              ,(SELECT DISUSE_RATE FROM FSI_ITEM_NUT WHERE ITEM_CODE=A.ITEM_CODE) DISUSE_RATE
              ,A.ITEM_CODE
              ,A.ITEM_NAME
			  ,A.ITEM_SEQ		--자재순번
			  ,A.PHF
              ,A.FEATURE_NAME
              ,A.ITEM_SIZE
              ,A.PO_UOM
              ,(SELECT Z.ORIGIN_INFO FROM HLDC_PO_ITEM_HIST Z WHERE Z.CENTER_CODE = A.CENTER_CODE AND Z.CUSTCD = A.CUSTCD AND Z.ITEM_CODE = A.ITEM_CODE) AS ORIGIN_INFO
              ,A.EDIBLE_QTY
              ,A.CUT_SPEC
              ,A.NEED_QTY --1인량
              ,A.EXPECT_MEAL_QTY --예상식수
              ,A.EXPECT_SALE_QTY --** 예상판매량
              ,ROUND(A.NEED_QTY*A.EXPECT_SALE_QTY/1000,2) TOT_QTY2 --행사식 총소요량
	      <isEqual col="HALL_CLASS" value="005">
              ,ROUND(A.NEED_QTY*A.EXPECT_SALE_QTY/1000,2)  TOT_QTY --카페테리아 총소요량= 1인소요량*예상판매량/1000 
	      </isEqual>
      	      <isNotEqual col="HALL_CLASS" value="005">
              ,ROUND(A.NEED_QTY*A.EXPECT_MEAL_QTY/1000,2) TOT_QTY --카페테리아 이외--총소요량--1인소요량* 예상식수/1000 = 총소요량
              </isNotEqual>
	          ,A.CUR_PRICE --1인당단가
              ,A.ORDER_YN --발주여부
              ,A.MARGIN_PRICE --구매단가
              ,A.G_ITEM_PRICE -- g단가
              ,A.MARGIN_RATE --출하율(fsm_real_recipe_item 테이블 저장시만 사용)
              ,A.UNIT_PRICE --구매단가(매입단가 fsm_real_recipe_item 테이블 저장시만 사용)
              ,A.NEED_DATE
              ,NVL(LENGTH(DECODE(B.MON,'Y','Y','') || DECODE(B.TUE,'Y','Y','') || DECODE(B.WED,'Y','Y','') || DECODE(B.THU,'Y','Y','') || DECODE(B.FRI,'Y','Y','') || DECODE(B.SAT,'Y','Y','') || DECODE(B.SUN,'Y','Y','')),0) WEEK_CHK
              ,TRIM(DECODE(B.MON,'Y','월 ')||DECODE(B.TUE,'Y','화 ')||DECODE(B.WED,'Y','수 ')||DECODE(B.THU,'Y','목 ')||DECODE(B.FRI,'Y','금 ')||DECODE(B.SAT,'Y','토 ')||DECODE(B.SUN,'Y','일')) AS WEEK_DISP
              ,B.MON
              ,B.TUE
              ,B.WED
              ,B.THU
              ,B.FRI
              ,B.SAT
              ,B.SUN
              ,C.RESTRICT_START
              ,C.RESTRICT_END
              ,C.RESTRICT_REASON
              ,C.RESTRICT_PERIOD
              ,C.CNL_START
              ,C.CNL_END
              ,C.CNL_REASON
              ,C.CNL_PERIOD
              ,'D-' || DECODE(D.D_DAYS,0,1,'',1,DECODE(SIGN(DECODE(D.D_TIMES,'',24,0,24,D.D_TIMES) - TO_NUMBER(TO_CHAR(SYSDATE,'HH24'))),1,0,1) + D.D_DAYS + 1) D_DAYS
              ,DECODE(D.D_DAYS,0,1,'',1,DECODE(SIGN(DECODE(D.D_TIMES,'',24,0,24,D.D_TIMES) - TO_NUMBER(TO_CHAR(SYSDATE,'HH24'))),1,0,1) + D.D_DAYS + 1) D_DAY
              ,'N' AS CHEAP_YN
          FROM (
                SELECT 
                       A.RECIPE_SEQ
                      ,A.RECIPE_TYPE
                      ,A.CUISINE_TYPE
					  ,A.MENU_CD
                      ,A.RECIPE_CD
                      ,A.RECIPE_NAME
                      ,A.ITEM_CODE
                      ,A.ITEM_NAME
                      ,A.FEATURE_NAME
                      ,A.ITEM_SIZE
                      ,A.PO_UOM
                      ,A.EDIBLE_QTY
                      ,A.CUT_SPEC
                      ,A.NEED_QTY
					  ,A.ITEM_SEQ
					  ,A.PHF
                      ,A.EXPECT_MEAL_QTY
                      ,NVL(ROUND( (A.NEED_QTY * NVL(A.G_ITEM_PRICE,0))),0) CUR_PRICE
                      ,A.ORDER_YN
                      --,NVL(B.ITEM_PRICE,0) MARGIN_PRICE
                      --,NVL(B.G_ITEM_PRICE,0) G_ITEM_PRICE
                      --,NVL(B.MARGIN_RATE,0) MARGIN_RATE
                      --,NVL(B.CONTRACT_PRICE,0) UNIT_PRICE
                      ,A.MARGIN_PRICE
                      ,A.G_ITEM_PRICE
                      ,A.MARGIN_RATE
                      ,A.UNIT_PRICE
                      ,A.NEED_DATE
                      ,B.CUSTCD
                      ,B.CENTER_CODE
                      ,A.UPJANG
		      ,A.EXPECT_SALE_QTY --**
                  FROM
                       (
                         SELECT A.UPJANG,A.MENU_CD, A.RECIPE_SEQ, A.RECIPE_TYPE, A.CUISINE_TYPE, A.RECIPE_CD, A.RECIPE_NAME,
                                B.ITEM_CODE, C.ITEM_NAME, D.FEATURE_NAME, C.ITEM_SIZE, C.PO_UOM,
                                B.NEED_QTY, B.ORDER_YN, B.CUT_SPEC, B.EDIBLE_QTY, B.NEED_DATE, E.EXPECT_MEAL_QTY,B.ITEM_SEQ,A.PHF,
                                NVL(ROUND((B.NEED_QTY * NVL((B.MARGIN_PRICE / C.KG_CONVERT_RATE / 1000),0))),0) AS PAST_PRICE,A.EXPECT_SALE_QTY, --**
	        		            B.UNIT_PRICE, B.MARGIN_RATE, B.MARGIN_PRICE,
			                    C.KG_CONVERT_RATE,
			                    ROUND(B.MARGIN_PRICE/C.KG_CONVERT_RATE/1000,2) AS G_ITEM_PRICE
                           FROM FSM_REAL_RECIPE_MST A
                               ,FSM_REAL_RECIPE_ITEM B
                               ,HLDC_PO_ITEM_MST C
                               ,(
                                SELECT A.ITEM_CODE,
                                       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0033' AND CODE = A.ITEM_FEATURE) AS FEATURE_NAME
                                  FROM
                                       (
                                        SELECT CENTER_CODE, CUSTCD, ITEM_CODE, ITEM_FEATURE
                                          FROM FSI_ITEM_FEATURE
                                         WHERE (1=1)
                                          AND  (CENTER_CODE, CUSTCD, ITEM_CODE, APPLY_DATE) IN (
                                                SELECT
                                                       CENTER_CODE, CUSTCD, ITEM_CODE, MAX(APPLY_DATE) AS APPLY_DATE
                                                  FROM  FSI_ITEM_FEATURE
                                                 WHERE  CENTER_CODE  = (SELECT CENTER_CODE FROM HLDC_PO_UPJANG_CENTER WHERE UPJANG = (SELECT AP_UNITPRICE_UPJANG FROM HLDC_ST_UPJANG WHERE UPJANG = #UPJANG#))
                                                   AND #MENU_DATE#  BETWEEN APPLY_DATE AND TO_CHAR(ADD_MONTHS(TO_DATE(APPLY_DATE,'YYYYMMDD'),1)-1,'YYYYMMDD') 
						 GROUP BY CENTER_CODE, CUSTCD, ITEM_CODE
                                               )
                                        ) A,
                                        (
                                        SELECT CENTER_CODE, CUSTCD, ITEM_CODE
                                          FROM HLDC_PO_TREAT_UPJANG
                                         WHERE UPJANG = (SELECT AP_UNITPRICE_UPJANG FROM HLDC_ST_UPJANG WHERE UPJANG = #UPJANG#)
                                        ) B
                                 WHERE A.CENTER_CODE = B.CENTER_CODE
                                   AND A.CUSTCD = B.CUSTCD
                                   AND A.ITEM_CODE = B.ITEM_CODE
                                ) D --자재특성
                               ,FSM_REAL_MENU_MST E
                          WHERE A.UPJANG = B.UPJANG
                            AND A.MENU_CD = B.MENU_CD
                            AND A.RECIPE_CD = B.RECIPE_CD
                            AND B.ITEM_CODE = C.ITEM_CODE
                            AND B.ITEM_CODE = D.ITEM_CODE(+)
                            AND C.ITEM_CODE BETWEEN '010100000001' AND '019000000000'
                            AND E.UPJANG = A.UPJANG
                            AND E.MENU_CD = A.MENU_CD
                            AND E.UPJANG  = #UPJANG#
                            AND E.MENU_CD = #MENU_CD#
                       ) A
                      ,(
		       SELECT /*+ ORDERED USE_NL(B E F C A D) INDEX(C)*/ A.ITEM_CODE,
			      D.ITEM_NAME,
			      D.ITEM_SIZE,
			      D.PO_UOM,
			      A.CUSTCD,
			      DECODE(C.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (C.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (C.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) AS ITEM_PRICE,
			      KG_CONVERT_RATE,
			      ROUND((DECODE(C.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (C.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (C.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) )/KG_CONVERT_RATE/1000,2) AS G_ITEM_PRICE,
			      F.UPJANG,
			      F.CENTER_CODE,
			      A.CONTRACT_PRICE,
			      C.MARGIN_RATE
			 FROM HLDC_ST_UPJANG B,
			      HLDC_PO_SUBINVENTORY E,
			      HLDC_PO_UPJANG_CENTER F,
			      HLDC_PO_TREAT_UPJANG C,
			      HLDC_PO_CONTRACT_F A,
			      HLDC_PO_ITEM_MST D
			WHERE A.CENTER_CODE = C.CENTER_CODE
			  AND A.CUSTCD = C.CUSTCD
			  AND A.ITEM_CODE = C.ITEM_CODE
			  AND A.ITEM_CODE = D.ITEM_CODE
			  AND A.CENTER_CODE = F.CENTER_CODE
			  AND A.USE_YN = 'Y'
			  AND A.CONTRACT_PRICE > 0
			  AND C.UPJANG = B.AP_UNITPRICE_UPJANG
			  AND B.UPJANG = E.UPJANG
			  AND C.USE_YN = 'Y'
			  AND B.AP_UNITPRICE_UPJANG = F.UPJANG
			  AND B.UPJANG = #UPJANG#  --[업장코드]
			  AND E.SUBINV_CODE = #SUBINV_CODE#  --[창고코드] FSM_REAL_MENU_MST.SUBINV_CODE 사용(우선적용), FSA_HALL_MST.SUBINV_CODE 사용
			  AND #MENU_DATE# BETWEEN A.CONTRACT_START AND NVL(A.CONTRACT_END,'99999999')  --[메뉴일자]
                       ) B    --실시간 단가조회
                 WHERE A.ITEM_CODE = B.ITEM_CODE(+)
              ) A
             ,(
                SELECT A.CENTER_CODE, A.CUSTCD, #UPJANG# UPJANG, A.ITEM_CODE, A.MON, A.TUE, A.WED, A.THU, A.FRI, A.SAT, A.SUN
                  FROM HLDC_PO_ORDER_SCHEDULE A
			               ,(SELECT CENTER_CODE, CUSTCD, MAX(UPJANG) AS UPJANG
                         FROM HLDC_PO_ORDER_SCHEDULE
                        WHERE CENTER_CODE = (SELECT CENTER_CODE FROM HLDC_PO_UPJANG_CENTER WHERE UPJANG = (SELECT AP_UNITPRICE_UPJANG FROM HLDC_ST_UPJANG WHERE UPJANG = #UPJANG#))
			                    AND UPJANG IN (-1,(SELECT AP_UNITPRICE_UPJANG FROM HLDC_ST_UPJANG WHERE UPJANG = #UPJANG#))
			                  GROUP BY CENTER_CODE, CUSTCD) B
			           WHERE A.CENTER_CODE = B.CENTER_CODE
			             AND A.CUSTCD = B.CUSTCD
			             AND A.UPJANG = B.UPJANG
              ) B       --요일제한
             ,(
                SELECT A.UPJANG
                      ,A.ITEM_CODE
                      ,A.RESTRICT_START
                      ,A.RESTRICT_END
                      ,A.RESTRICT_REASON
                      ,TO_CHAR(TO_DATE(A.RESTRICT_START, 'YYYYMMDD' ) , 'YYYY.MM.DD' ) || '~' || TO_CHAR(TO_DATE(A.RESTRICT_END, 'YYYYMMDD' ) , 'YYYY.MM.DD' ) AS RESTRICT_PERIOD
                      ,CNL_START
                      ,CNL_END
                      ,CNL_REASON
                      ,NVL2(A.CNL_START,TO_CHAR(TO_DATE(A.CNL_START, 'YYYYMMDD' ) , 'YYYY.MM.DD' ) || '~' || TO_CHAR(TO_DATE(A.CNL_END, 'YYYYMMDD' ) , 'YYYY.MM.DD' ),'') AS CNL_PERIOD
                  FROM FSI_RESTRICT_SET A
                      ,HLDC_PO_ITEM_MST B
                 WHERE A.ITEM_CODE = B.ITEM_CODE
                   AND A.UPJANG = #UPJANG#
                   AND B.ITEM_CODE BETWEEN '010000000001' AND '018999999999'
                   AND ( (RESTRICT_START BETWEEN #MENU_DATE# AND #MENU_DATE#)
                       OR (RESTRICT_END BETWEEN #MENU_DATE# AND #MENU_DATE#)
                       OR (RESTRICT_START &lt;= #MENU_DATE# AND RESTRICT_END &gt;= #MENU_DATE#) )
                   AND NOT (
                             (CNL_START IS NOT NULL) AND ( (CNL_START BETWEEN #MENU_DATE# AND #MENU_DATE#)
                                                        OR (CNL_END BETWEEN #MENU_DATE# AND #MENU_DATE#)
                                                        OR (CNL_START &lt;= #MENU_DATE# AND CNL_END &gt;= #MENU_DATE#)
                             )
                           )
              ) C          --금지자재 
             ,HLDC_PO_PREORDER_LIST D  --선발주제한 
         WHERE A.CENTER_CODE = B.CENTER_CODE(+) 
           AND A.CUSTCD = B.CUSTCD(+)
           AND A.UPJANG = B.UPJANG(+)
           AND A.ITEM_CODE = B.ITEM_CODE(+)
           AND A.UPJANG = C.UPJANG(+)
           AND A.ITEM_CODE = C.ITEM_CODE(+)
           AND A.CENTER_CODE = D.CENTER_CODE(+)
           AND A.ITEM_CODE = D.ITEM_CODE(+)
 ORDER BY A.RECIPE_SEQ, A.RECIPE_TYPE, A.CUISINE_TYPE, A.RECIPE_CD, A.NEED_QTY DESC	</statement>
	<input default-name="ds_cond">
	</input>
	<output default-name="ds_Item">
	</output>
</query>