<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="fm.fms.hubInterfaceSalePriceDAO">
	<desc>허브메카 단가 디데이 설정 HQML Query</desc>

	<!-- 허브메카 user id 목록을 조회한다. -->
	<statement name="selectUser" type="select">
		/*+ com.hwfs.fm.fms.dao.HubInterfaceSalePriceDAO.selectUser */
		<![CDATA[
	SELECT USERID , USERNM, CUSTNM, PRICE_UPJANG ,(SELECT UPJANGNM FROM SCO_UPJANG_MST_V WHERE UPJANG = PRICE_UPJANG) AS UPJANGNM, '0' AS CHK
		 , (SELECT CENTER_NAME FROM HLDC_PO_CENTER WHERE CENTER_CODE = (SELECT CENTER_CODE FROM HLDC_PO_UPJANG_CENTER WHERE UPJANG = PRICE_UPJANG)) AS CENTER_NAME
		 , GUBUN
		 , DECODE(GUBUN,'caps','비즈메카(단체급식)','허브메카(유통)') AS GUBUNNM
		 , CS_SABUN --담당CS
		 , (SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = CS_SABUN) AS CS_SABUN_NM --담당CS명
  	  FROM HUB_UPJANG_MST 
	 WHERE TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS') BETWEEN TO_CHAR(START_DATE,'YYYYMMDDHH24MISS') AND TO_CHAR(END_DATE,'YYYYMMDDHH24MISS')
		<#if schCode?has_content>
		AND     USERID LIKE '%' || :schCode || '%'
		</#if>
		<#if schName?has_content>
		 AND    USERNM LIKE  '%' || :schName || '%'			
		</#if>
		<#if attr01?has_content>
			<#if attr01 == "Y">
			AND  PRICE_UPJANG IS NOT NULL
			</#if>
			<#if attr01 == "caps">
			AND GUBUN = 'caps'
			</#if>
			<#if attr01 == "is036">
			AND USERID != 'is036'
			</#if>
		</#if>
		ORDER BY GUBUN
		]]>
	</statement>
	

	<!-- 허브메카 사업장 단가 조회-->
	<statement name="selectList_old" type="select">
		/*+ com.hwfs.fm.fms.dao.HubInterfaceSalePriceDAO.selectList */
		<![CDATA[
		SELECT Z.CENTER_CODE, Z.USERID, Z.UPJANGNM, Z.UPJANG, Z.START_DAY, Z.CLASS_NAME2, Z.ITEM_CODE, Z.ITEM_NAME, Z.ITEM_SIZE, Z.PO_UOM, DECODE(Z.HUB_CONTRACT_PRICE,'',Z.CONTRACT_PRICE, Z.HUB_CONTRACT_PRICE)AS CONTRACT_PRICE, DECODE(Z.HUB_SALE_PRICE,'',Z.SALE_PRICE, Z.HUB_SALE_PRICE)AS SALE_PRICE,
		Z.TAX_YN, Z.MIN_QTY, Z.APPLY_QTY,  Z.DOT_YN, Z.LEAD_TIME, Z.CHK, Z.HUB_LEAD_TIME, Z.ERROR
		FROM (SELECT --/*+ INDEX(A PO_CONTRACT_FSALE_PK) */
					 A.CENTER_CODE,  
					 D.USERID,
					 (SELECT UPJANGNM FROM SCO_UPJANG_MST_V WHERE UPJANG = A.UPJANG) AS UPJANGNM,
					 A.UPJANG, 
					 A.CONTRACT_START AS START_DAY,
					 C.CLASS_NAME2, 
					 A.ITEM_CODE, 
					 B.ITEM_NAME,
					 B.ITEM_SIZE,
					 B.PO_UOM,
					 --A.CONTRACT_PRICE,
					 A.SALE_PRICE AS CONTRACT_PRICE, --본사단가 & 공급운영단가표 타입B 판매가
					 (SELECT LAST_VALUE(CONTRACT_PRICE) OVER (ORDER BY UDATE DESC) FROM HUB_UPJANG_CONTRACT_FSALE WHERE UPJANG = A.UPJANG AND START_DAY BETWEEN A.CONTRACT_START AND A.CONTRACT_END AND ITEM_CODE = A.ITEM_CODE AND ROWNUM = 1) AS HUB_CONTRACT_PRICE,
					
					<#if schTypeB?has_content>
						CASE WHEN CC.OP_PRICE IS NOT NULL OR CC.OP_RATE IS NOT NULL 
                       	 	 THEN DECODE(SIGN(NVL(CC.OP_PRICE,0) ),0, SCC_CEIL(A.SALE_PRICE + (A.SALE_PRICE * NVL(CC.OP_RATE,0) / 100),CC.CEIL_VAL), CC.OP_PRICE) 
                        	 WHEN DD.OP_PRICE IS NOT NULL OR DD.OP_RATE IS NOT NULL 
                        	 THEN DECODE(SIGN(NVL(DD.OP_PRICE,0) ),0, SCC_CEIL(A.SALE_PRICE + (A.SALE_PRICE * NVL(DD.OP_RATE,0) / 100),DD.CEIL_VAL), DD.OP_PRICE) 
                   	  	ELSE A.SALE_PRICE END AS SALE_PRICE , --공급운영단가표 타입B 운영단가
					<#else>
						A.SALE_PRICE AS SALE_PRICE,
					</#if>
					
					 (SELECT LAST_VALUE(SALE_PRICE) OVER (ORDER BY UDATE DESC) FROM HUB_UPJANG_CONTRACT_FSALE WHERE UPJANG = A.UPJANG AND START_DAY BETWEEN A.CONTRACT_START AND A.CONTRACT_END AND ITEM_CODE = A.ITEM_CODE AND ROWNUM = 1) AS HUB_SALE_PRICE,
				
					 DECODE(B.TAX_CODE,'100','Y','210','N','') AS TAX_YN,
					 B.MIN_ORD_QTY AS MIN_QTY,
					 0 AS APPLY_QTY, --불필요한 컬럼으로 일괄 0 협의
					 B.POINT_FLAG AS DOT_YN,
					 FCUS.FMS_PREORDER_FUN( (SELECT CENTER_CODE FROM VO_CENTER_UPJANG WHERE UPJANG = A.UPJANG),A.ITEM_CODE,'D_DAYS') AS LEAD_TIME,
					 '0' AS CHK,
				
					 (SELECT  DECODE(LAST_VALUE(PISTAT) OVER (ORDER BY UDATE DESC),'D','삭제',LAST_VALUE(LEAD_TIME) OVER (ORDER BY UDATE DESC)) FROM HUB_UPJANG_CONTRACT_FSALE WHERE UPJANG = A.UPJANG AND START_DAY BETWEEN A.CONTRACT_START AND A.CONTRACT_END AND ITEM_CODE = A.ITEM_CODE AND ROWNUM = 1) AS HUB_LEAD_TIME,
				
					 '' AS ERROR
				FROM FCUS.PO_CONTRACT_FSALE A, HLDC_PO_ITEM_MST B, HLDC_PO_ITEM_CLASS_V C
    				,(
    				 	 SELECT USERID,PRICE_UPJANG FROM FCUS.HUB_UPJANG_MST A WHERE PRICE_UPJANG IS NOT NULL GROUP BY USERID,PRICE_UPJANG
   				 	 ) D 
					/*, ( 
		               SELECT * 
		                 FROM FMU_OP_RATE 
		                WHERE UPJANG = (SELECT PRICE_UPJANG FROM HUB_UPJANG_MST WHERE USERID = :schUserId)
		                  AND :schDate BETWEEN SDATE AND EDATE 
		                  AND USE_YN = 'Y' 
		                  AND ITEM_TYPE = 'M' 
		               ) CC 
		              ,( 
		               SELECT * 
		                 FROM FMU_OP_RATE 
		                WHERE UPJANG = (SELECT PRICE_UPJANG FROM HUB_UPJANG_MST WHERE USERID = :schUserId)
		                  AND :schDate BETWEEN SDATE AND EDATE 
		                  AND USE_YN = 'Y' 
		                  AND ITEM_TYPE = 'C' 
		               ) DD 
		              */ 
				WHERE CONTRACT_START >= TO_CHAR(TO_DATE(:schDate),'YYYYMM')||'01'
				 AND TO_CHAR(TO_DATE(:schDate),'YYYYMMDD') BETWEEN CONTRACT_START AND CONTRACT_END 
				 AND A.UPJANG IN ( SELECT PRICE_UPJANG 
				  					 FROM FCUS.HUB_UPJANG_MST 
				 					 WHERE TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS') BETWEEN TO_CHAR(START_DATE,'YYYYMMDDHH24MISS') AND TO_CHAR(END_DATE,'YYYYMMDDHH24MISS')
				   					 AND PRICE_UPJANG IS NOT NULL
			   					 )	   

				 AND A.ITEM_CODE = B.ITEM_CODE 
				 AND B.ITEM_CLASS1 = C.CLASS_CODE1 
				 AND B.ITEM_CLASS2 = C.CLASS_CODE2 
				 AND B.ITEM_CLASS3 = C.CLASS_CODE3 
				 AND B.ITEM_CLASS4 = C.CLASS_CODE4 
				 AND A.UPJANG = D.PRICE_UPJANG
				<#if schCenter?has_content>
			 	 <#if schCenter!="*">
					AND A.CENTER_CODE = :schCenter
			 	 </#if>
				</#if>
				<#if schUserId?has_content>
					AND A.UPJANG = (SELECT PRICE_UPJANG FROM HUB_UPJANG_MST WHERE USERID = :schUserId)
				</#if>
				
				/*AND A.ITEM_CODE = CC.ITEM_CODE(+) 
           		AND B.ITEM_CLASS4 = DD.ITEM_CODE(+) 

           		AND :schDate BETWEEN CC.SDATE(+) AND CC.EDATE(+)
           		AND :schDate BETWEEN DD.SDATE(+) AND DD.EDATE(+)*/
			)Z	
   	    	ORDER BY CENTER_CODE, USERID, UPJANG
		]]>
	</statement>

	<!-- 허브메카 사업장 단가디데이 저장내역 조회-->
	<statement name="selectList" type="select">
		/*+ com.hwfs.fm.fms.dao.HubInterfaceSalePriceDAO.selectList */
		<![CDATA[
		SELECT (SELECT CENTER_CODE FROM HLDC_PO_UPJANG_CENTER WHERE UPJANG = A.UPJANG) AS CENTER_CODE, 
				A.USERID, (SELECT UPJANGNM FROM SCO_UPJANG_MST_V WHERE UPJANG = A.UPJANG) AS UPJANGNM, A.UPJANG,
				A.START_DAY, A.ITEM_CODE, MAX(UDATE), C.CLASS_NAME2,  B.ITEM_NAME,  B.ITEM_SIZE, B.PO_UOM, 
                A.CONTRACT_PRICE, A.SALE_PRICE, 
				DECODE(B.TAX_CODE,'100','Y','210','N','') AS TAX_YN,
				B.MIN_ORD_QTY AS MIN_QTY,
				0 AS APPLY_QTY, --불필요한 컬럼으로 일괄 0 협의
				B.POINT_FLAG AS DOT_YN,
				FCUS.FMS_PREORDER_FUN( (SELECT CENTER_CODE FROM VO_CENTER_UPJANG WHERE UPJANG = A.UPJANG),A.ITEM_CODE,'D_DAYS') AS LEAD_TIME,
				'0' AS CHK, DECODE(A.PISTAT,'D','삭제',A.LEAD_TIME) AS HUB_LEAD_TIME, '' ERROR, '' AS ROW_TYPE

			FROM HUB_UPJANG_CONTRACT_FSALE A, HLDC_PO_ITEM_MST B, HLDC_PO_ITEM_CLASS_V C
			WHERE A.ITEM_CODE = B.ITEM_CODE
			AND B.ITEM_CLASS1 = C.CLASS_CODE1 
			AND B.ITEM_CLASS2 = C.CLASS_CODE2 
			AND B.ITEM_CLASS3 = C.CLASS_CODE3 
			AND B.ITEM_CLASS4 = C.CLASS_CODE4 
                 
            AND START_DAY = :schDate
            AND USERID = :schUserId
		
		GROUP BY A.USERID, A.UPJANG, A.START_DAY, A.ITEM_CODE, C.CLASS_NAME2, B.ITEM_NAME, B.ITEM_SIZE, B.PO_UOM, A.CONTRACT_PRICE, A.SALE_PRICE, 
		DECODE(B.TAX_CODE,'100','Y','210','N',''), B.TAX_CODE, '100', 'Y', '210', 'N', '', B.MIN_ORD_QTY, 0, B.POINT_FLAG, '', DECODE(A.PISTAT,'D','삭제',A.LEAD_TIME) 

		]]>
	</statement>
	
	<!-- 허브메카 사업장 단가 i/f 로그 조회-->
	<statement name="selectLogList" type="select">
		/*+ com.hwfs.fm.fms.dao.HubInterfaceSalePriceDAO.selectLogList */
		<![CDATA[
		SELECT UPJANG, START_DATE, CLASS_NAME2, ITEM_CODE, ITEM_NAME, ITEM_SIZE
			, PO_UOM, CONTRACT_PRICE, SALE_PRICE, TAX_YN, LEAD_TIME, MIN_QTY, APPLY_QTY, DOT_YN, CDATE, CUSER
		FROM HUB_UPJANG_CONTRACT_IF_LOG 
		WHERE UPJANG = (SELECT PRICE_UPJANG FROM HUB_UPJANG_MST WHERE USERID = :schUserId)
          
		]]>
	</statement>

	<!-- 허브메카 단가 디데이 변경 저장-->
	<statement name="insert"><![CDATA[	
  	MERGE INTO HUB_UPJANG_CONTRACT_FSALE  A
			USING (SELECT  :userid AS USERID
						 , :upjang AS UPJANG
						 , :startDay AS START_DAY
						 , :itemCode AS ITEM_CODE
						 , :itemName AS ITEM_NAME
						 , :itemSize AS ITEM_SIZE
						 , :poUom AS PO_UOM
						 , :contractPrice AS CONTRACT_PRICE
						 , :salePrice AS SALE_PRICE
						 , :taxYn AS TAX_YN
						-- , DECODE(:hubLeadTime,'',:leadTime,:hubLeadTime) AS LEAD_TIME
						 , :hubLeadTime AS LEAD_TIME
						 , :minQty AS MIN_QTY
						 , :applyQty AS APPLY_QTY
						 , :dotYn AS DOT_YN
                     FROM  DUAL B
				) B
		   ON (A.USERID=B.USERID AND A.UPJANG = B.UPJANG AND A.START_DAY = B.START_DAY AND A.ITEM_CODE = B.ITEM_CODE) 
		  WHEN MATCHED THEN   	
		  
		  UPDATE
		  	SET LEAD_TIME = B.LEAD_TIME
		  		, CONTRACT_PRICE = B.CONTRACT_PRICE
		  		, SALE_PRICE = B.SALE_PRICE
		  		, PISTAT = 'R'
				, UDATE = SYSDATE
				, UUSER = :loginSabun
		  WHEN NOT MATCHED THEN 
            INSERT
            (	 USERID
				,UPJANG
				,START_DAY
				,ITEM_CODE
				,ITEM_NAME
				,ITEM_SIZE
				,PO_UOM
				,CONTRACT_PRICE
				,SALE_PRICE
				,TAX_YN
				,LEAD_TIME
				,MIN_QTY
				,APPLY_QTY
				,DOT_YN
				,PISTAT	
				,CDATE
				,CUSER
				,UDATE
				,UUSER
			) VALUES 
			(
				 B.USERID
				,B.UPJANG
				,B.START_DAY
				,B.ITEM_CODE
				,B.ITEM_NAME
				,B.ITEM_SIZE
				,B.PO_UOM
				,B.CONTRACT_PRICE
				,B.SALE_PRICE
				,B.TAX_YN
				,B.LEAD_TIME
				,B.MIN_QTY
				,B.APPLY_QTY
				,B.DOT_YN
				,'R'	
				,SYSDATE
				,:loginSabun
				,SYSDATE
				,:loginSabun
			)
			
		]]></statement>

		
		<!-- 허브메카 단가 디데이 삭제-->
	<statement name="deleteHubPrice"><![CDATA[	
  	MERGE INTO HUB_UPJANG_CONTRACT_FSALE  A
			USING (SELECT  :userid AS USERID
						 , :upjang AS UPJANG
						 , :startDay AS START_DAY
						 , :itemCode AS ITEM_CODE
						 , :itemName AS ITEM_NAME
						 , :itemSize AS ITEM_SIZE
						 , :poUom AS PO_UOM
						 , :contractPrice AS CONTRACT_PRICE
						 , :salePrice AS SALE_PRICE
						 , :taxYn AS TAX_YN
						 , DECODE(:hubLeadTime,'',:leadTime,:hubLeadTime) AS LEAD_TIME
						 , :minQty AS MIN_QTY
						 , :applyQty AS APPLY_QTY
						 , :dotYn AS DOT_YN
                     FROM  DUAL B
				) B
		   ON (A.USERID=B.USERID AND A.UPJANG = B.UPJANG AND A.START_DAY = B.START_DAY AND A.ITEM_CODE = B.ITEM_CODE) 
		  WHEN MATCHED THEN   	
		  
		  UPDATE
		  	SET PISTAT = 'D'
				,UDATE = SYSDATE
				,UUSER = :loginSabun
		  WHEN NOT MATCHED THEN 
            INSERT
            (	 USERID
				,UPJANG
				,START_DAY
				,ITEM_CODE
				,ITEM_NAME
				,ITEM_SIZE
				,PO_UOM
				,CONTRACT_PRICE
				,SALE_PRICE
				,TAX_YN
				,LEAD_TIME
				,MIN_QTY
				,APPLY_QTY
				,DOT_YN
				,PISTAT
				,CDATE
				,CUSER
				,UDATE
				,UUSER	
			) VALUES 
			(
				 B.USERID
				,B.UPJANG
				,B.START_DAY
				,B.ITEM_CODE
				,B.ITEM_NAME
				,B.ITEM_SIZE
				,B.PO_UOM
				,B.CONTRACT_PRICE
				,B.SALE_PRICE
				,B.TAX_YN
				,B.LEAD_TIME
				,B.MIN_QTY
				,B.APPLY_QTY
				,B.DOT_YN
				,'D'
				,SYSDATE
				,:loginSabun
				,SYSDATE
				,:loginSabun	
			)
			
		]]></statement>
		
		<!-- 허브메카 엑셀업로드 내역 조회-->
	<statement name="selectExcel" type="select">
		/*+ com.hwfs.fm.fms.dao.HubInterfaceSalePriceDAO.selectExcel */
		<![CDATA[
		SELECT 
		 A.CENTER_CODE AS CENTER_CODE, 
   	     C.USERID AS USERID,
   	     A.UPJANG AS UPJANG,
   	     (SELECT UPJANGNM FROM SCO_UPJANG_MST_V WHERE UPJANG = A.UPJANG) AS UPJANGNM,
   	    -- C.START_DAY AS START_DAY,
   	     A.CONTRACT_START AS START_DAY,
   	     C.ITEM_CODE AS ITEM_CODE,
   	     B.ITEM_NAME AS ITEM_NAME,
   	     B.ITEM_SIZE,
		 B.PO_UOM,
		 --A.CONTRACT_PRICE,
		 A.SALE_PRICE AS CONTRACT_PRICE,
		 A.SALE_PRICE AS SALE_PRICE,
		 --C.CONTRACT_PRICE AS CONTRACT_PRICE,
		 --C.SALE_PRICE AS SALE_PRICE,
		 DECODE(B.TAX_CODE,'100','Y','210','N','') AS TAX_YN,	
		 B.MIN_ORD_QTY AS MIN_QTY,
		 B.MAX_ORD_QTY AS APPLY_QTY,
		 B.POINT_FLAG AS DOT_YN,
		 FCUS.FMS_PREORDER_FUN( (SELECT CENTER_CODE FROM VO_CENTER_UPJANG WHERE UPJANG = A.UPJANG),A.ITEM_CODE,'D_DAYS') AS LEAD_TIME,
		 '1' AS CHK,
		 C.HUB_LEAD_TIME AS HUB_LEAD_TIME,
		 '' AS ERROR,
		 'I' AS ROW_TYPE
   	     FROM FCUS.PO_CONTRACT_FSALE A, HLDC_PO_ITEM_MST B, HUB_PRICE_DDAY_TEMP C
   	     WHERE CONTRACT_START >= TO_CHAR(TO_DATE(C.START_DAY),'YYYYMM')||'01'
		   AND TO_CHAR(TO_DATE(C.START_DAY),'YYYYMMDD') BETWEEN CONTRACT_START AND CONTRACT_END 
		   AND A.UPJANG = C.UPJANG
		   AND A.ITEM_CODE = C.ITEM_CODE
		   AND A.USE_YN = 'Y'
		   AND C.CUSER = :loginSabun
		   AND A.ITEM_CODE = B.ITEM_CODE 
		   
		]]>
	</statement>

	<!-- 허브메카 엑셀업로드 temp삭제-->
	<statement name="tempDelete"><![CDATA[	
	 DELETE FROM HUB_PRICE_DDAY_TEMP
	 WHERE CUSER = :loginSabun
	]]>
	</statement>
	
	<!-- 허브메카 엑셀업로드 데이터 임시테이블 저장-->
	<statement name="tempInsert"><![CDATA[	
	 INSERT INTO HUB_PRICE_DDAY_TEMP
	 (
		 USERID
		,UPJANG
		,START_DAY
		,ITEM_CODE
		--,CONTRACT_PRICE
		--,SALE_PRICE
		,HUB_LEAD_TIME
		,CUSER
		,CDATE
	 ) VALUES
	 (
		 :userid
		 ,:upjang
		 ,:startDay
		 ,:itemCode
		 --,:contractPrice
		 --,:salePrice
		 ,:hubLeadTime
		 ,:loginSabun
		 ,SYSDATE
	 )
	]]>
	</statement>
	
	
	
	<!-- 허브메카 사업장 단가 조회 (자재 추가 건)-->
	<statement name="selectListAdd" type="select">
		/*+ com.hwfs.fm.fms.dao.HubInterfaceSalePriceDAO.selectListAdd */
		<![CDATA[
	SELECT Z.CENTER_CODE, Z.USERID, Z.UPJANGNM, Z.UPJANG, Z.START_DAY, Z.CLASS_NAME2, Z.ITEM_CODE, Z.ITEM_NAME, Z.ITEM_SIZE, Z.PO_UOM, DECODE(Z.HUB_CONTRACT_PRICE,'',Z.CONTRACT_PRICE, Z.HUB_CONTRACT_PRICE)AS CONTRACT_PRICE, DECODE(Z.HUB_SALE_PRICE,'',Z.SALE_PRICE, Z.HUB_SALE_PRICE)AS SALE_PRICE,
		Z.TAX_YN, Z.MIN_QTY, Z.APPLY_QTY,  Z.DOT_YN, Z.LEAD_TIME, Z.CHK, Z.HUB_LEAD_TIME, Z.ERROR
		FROM (SELECT --/*+ INDEX(A PO_CONTRACT_FSALE_PK) */
					 A.CENTER_CODE,  
					 D.USERID,
					 (SELECT UPJANGNM FROM SCO_UPJANG_MST_V WHERE UPJANG = A.UPJANG) AS UPJANGNM,
					 A.UPJANG, 
					 A.CONTRACT_START AS START_DAY,
					 C.CLASS_NAME2, 
					 A.ITEM_CODE, 
					 B.ITEM_NAME,
					 B.ITEM_SIZE,
					 B.PO_UOM,

					 A.SALE_PRICE AS CONTRACT_PRICE, --본사단가 & 공급운영단가표 타입B 판매가
					 (SELECT LAST_VALUE(CONTRACT_PRICE) OVER (ORDER BY UDATE DESC) FROM HUB_UPJANG_CONTRACT_FSALE WHERE UPJANG = A.UPJANG AND START_DAY BETWEEN A.CONTRACT_START AND A.CONTRACT_END AND ITEM_CODE = A.ITEM_CODE AND ROWNUM = 1) AS HUB_CONTRACT_PRICE,
			
					A.SALE_PRICE AS SALE_PRICE,
					 (SELECT LAST_VALUE(SALE_PRICE) OVER (ORDER BY UDATE DESC) FROM HUB_UPJANG_CONTRACT_FSALE WHERE UPJANG = A.UPJANG AND START_DAY BETWEEN A.CONTRACT_START AND A.CONTRACT_END AND ITEM_CODE = A.ITEM_CODE AND ROWNUM = 1) AS HUB_SALE_PRICE,
				
					 DECODE(B.TAX_CODE,'100','Y','210','N','') AS TAX_YN,
					 B.MIN_ORD_QTY AS MIN_QTY,
					 0 AS APPLY_QTY, --불필요한 컬럼으로 일괄 0 협의
					 B.POINT_FLAG AS DOT_YN,
					 FCUS.FMS_PREORDER_FUN( (SELECT CENTER_CODE FROM VO_CENTER_UPJANG WHERE UPJANG = A.UPJANG),A.ITEM_CODE,'D_DAYS') AS LEAD_TIME,
					 '0' AS CHK,
				
					 (SELECT  DECODE(LAST_VALUE(PISTAT) OVER (ORDER BY UDATE DESC),'D','삭제',LAST_VALUE(LEAD_TIME) OVER (ORDER BY UDATE DESC)) FROM HUB_UPJANG_CONTRACT_FSALE WHERE UPJANG = A.UPJANG AND START_DAY BETWEEN A.CONTRACT_START AND A.CONTRACT_END AND ITEM_CODE = A.ITEM_CODE AND ROWNUM = 1) AS HUB_LEAD_TIME,
				
					 '' AS ERROR,
					 '' AS ROW_TYPE
				FROM FCUS.PO_CONTRACT_FSALE A, HLDC_PO_ITEM_MST B, HLDC_PO_ITEM_CLASS_V C
    				,(
    				 	 SELECT USERID,PRICE_UPJANG FROM FCUS.HUB_UPJANG_MST A WHERE PRICE_UPJANG IS NOT NULL GROUP BY USERID,PRICE_UPJANG
   				 	 ) D 
					
				WHERE CONTRACT_START >= TO_CHAR(TO_DATE(:schDate),'YYYYMM')||'01'
				 AND TO_CHAR(TO_DATE(:schDate),'YYYYMMDD') BETWEEN CONTRACT_START AND CONTRACT_END 
				 AND A.ITEM_CODE = :schItemCode
				 AND A.UPJANG = (SELECT PRICE_UPJANG FROM HUB_UPJANG_MST WHERE USERID = :schUserId)
				 AND A.ITEM_CODE = B.ITEM_CODE 
				 AND B.ITEM_CLASS1 = C.CLASS_CODE1 
				 AND B.ITEM_CLASS2 = C.CLASS_CODE2 
				 AND B.ITEM_CLASS3 = C.CLASS_CODE3 
				 AND B.ITEM_CLASS4 = C.CLASS_CODE4 
				 AND A.UPJANG = D.PRICE_UPJANG
				 AND D.USERID = :schUserId

			)Z	
   	    	ORDER BY CENTER_CODE, USERID, UPJANG
		]]>
	</statement>
</hqml>
