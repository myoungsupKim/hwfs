<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="rc.sle.outletDscnListDAO">
	<desc>영업장 DC 집계 현황</desc>


	<statement name="selectList" type="select"><![CDATA[

			SELECT    OUTLET_CD, MAX(OUTLET_NM) AS OUTLET_NM
			        , SUM(FOOD_AMT)  AS FOOD_TOT_AMT
			        , SUM(BEVR_AMT)  AS BEVG_TOT_AMT
			        , SUM(OTHER_AMT) AS ETC_TOT_AMT
			        , SUM(GODS_AMT)  AS GODS_TOT_AMT
			        , SUM(ETEC_AMT)  AS ETEC_TOT_AMT
			        , SUM(OCCUR_AMT) AS SUM_AMT
			        
			        , SUM(FOOD_DC)  AS FOOD_DSCN_AMT
			        , SUM(BEVR_DC)  AS BEVG_DSCN_AMT
			        , SUM(OTHER_DC) AS ETC_DSCN_AMT
			        , SUM(GODS_DC)  AS GODS_DSCN_AMT
			        , SUM(ETEC_DC)  AS ETEC_DSCN_AMT
			        , SUM(DISCNT_AMT)  AS SUM_DSCN_AMT
			        
			        , SUM(NET_AMT)  AS NET_SELL_AMT
			        , SUM(SVC_AMT)  AS SVC
			        , SUM(VAT_AMT)  AS VAT
			        , SUM(TOT_AMT)  AS TOT_SUM_AMT	
			FROM(
			    SELECT  GOODS.OUTLET_CD ,MAX(OUTLET.OUTLET_NM )  AS OUTLET_NM  
			          , DECODE(MENU_CLASS,'F', SUM(NET_AMT) + SUM(DISCNT_NET) , 0) AS FOOD_AMT
			          , DECODE(MENU_CLASS,'B', SUM(NET_AMT) + SUM(DISCNT_NET) , 0) AS BEVR_AMT
			          , DECODE(MENU_CLASS,'O', SUM(NET_AMT) + SUM(DISCNT_NET) , 0) AS OTHER_AMT
			          , DECODE(MENU_CLASS,'S', SUM(NET_AMT) + SUM(DISCNT_NET) , 0) AS GODS_AMT
			          , DECODE(MENU_CLASS,'F',0,DECODE(MENU_CLASS,'B',0,DECODE(MENU_CLASS,'O',0,DECODE(MENU_CLASS,'S',0,SUM(NET_AMT) + SUM(DISCNT_NET) )))) AS ETEC_AMT
			          , SUM(NET_AMT) + SUM(DISCNT_NET) AS OCCUR_AMT
					  --할인
			          , DECODE(MENU_CLASS,'F', SUM(DISCNT_NET) , 0) AS FOOD_DC
			          , DECODE(MENU_CLASS,'B', SUM(DISCNT_NET) , 0) AS BEVR_DC
			          , DECODE(MENU_CLASS,'O', SUM(DISCNT_NET) , 0) AS OTHER_DC
			          , DECODE(MENU_CLASS,'S', SUM(DISCNT_NET) , 0) AS GODS_DC
			          , DECODE(MENU_CLASS,'F',0,DECODE(MENU_CLASS,'B',0,DECODE(MENU_CLASS,'O',0,DECODE(MENU_CLASS,'S',0,SUM(DISCNT_NET) )))) AS ETEC_DC
			          , SUM(DISCNT_NET)  AS DISCNT_AMT 
					  
					  , SUM(NET_AMT) AS NET_AMT
			          , SUM(SVC)     AS SVC_AMT
			          , SUM(VAT)     AS VAT_AMT
			          , SUM(TOT_AMT) AS TOT_AMT	
			    FROM SLE_SALS_GOODS GOODS
			    INNER JOIN (SELECT MST.OUTLET_CD , MST.OUTLET_NM 
	                           FROM   SLE_OUTLET_MST MST
	                              INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
	                                         <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
	                                         <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
	              			 ) OUTLET ON OUTLET.OUTLET_CD = GOODS.OUTLET_CD
			    
			    WHERE 1=1
			      --SALS_YN        = 'Y'	--판매여부
			      --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
			      AND SELL_YN  = DECODE(RECEIPT_STATUS ,'E','N','Y')				--매출 여부
			      --종료
			      AND SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
			      AND MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
			      <#if internalYn == 'Y' > AND RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
				  <#if internalYn == 'N' > AND RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)			      
			      AND SALES_DATE BETWEEN :frSalesDt AND :toSalesDt
			     <#if outletCd?has_content> AND GOODS.OUTLET_CD = :outletCd </#if>                   
			 	GROUP BY GOODS.OUTLET_CD, MENU_CLASS
			) DUAL 
			GROUP BY OUTLET_CD

						
	
		]]></statement>
	<statement name="selectDayList" type="select"><![CDATA[
			--할인 상세내역
SELECT  OUTLET_CD, OUTLET_NM,SALES_DATE,
        RECEIPT_NUM,
        PRMT_CD,
        REMARK,
        REF_1,
        DISCNT_REF_NUM,
        DISCNT_RAT,
        TOT_NET, 
        DISCNT_AMT,
        NET_AMT,
        VAT_AMT,
        TOT_AMT,
        PSN_CNT
FROM ( 
      SELECT  OUTLET_CD, OUTLET_NM,SALES_DATE,
              RECEIPT_NUM,
              PRMT_CD,
              REMARK,
              REF_1,
              DISCNT_REF_NUM,
              DISCNT_RAT,
              TOT_NET, 
              DISCNT_AMT,
              NET_AMT,
              VAT_AMT,
              TOT_AMT,
              PSN_CNT
      FROM ( 
            SELECT  GOODS.OUTLET_CD,   MAX(OUTLET.OUTLET_NM) AS OUTLET_NM, GOODS.SALES_DATE,
                    GOODS.RECEIPT_NUM,
                    MAX(SS.PRMT_CD) AS PRMT_CD,
                    MAX(SS.REMARK)  AS REMARK,
                    MAX(SS.REF_1)   AS REF_1,
                    MAX(SS.DISCNT_REF_NUM) AS DISCNT_REF_NUM,
                    MAX(SS.DISCNT_RAT)     AS DISCNT_RAT,
                    SUM(GOODS.NET_AMT) + SUM(GOODS.DISCNT_NET) AS TOT_NET, 
                    SUM(GOODS.DISCNT_NET)  AS DISCNT_AMT,
                    SUM(GOODS.NET_AMT)     AS NET_AMT,
                    SUM(GOODS.VAT)         AS VAT_AMT,
                    SUM(GOODS.TOT_AMT)     AS TOT_AMT,
                    MAX(INFO.PSN_CNT)      AS PSN_CNT

            FROM SLE_SALS_GOODS GOODS	

                  INNER JOIN (SELECT MST.OUTLET_CD , MST.OUTLET_NM
                               FROM   SLE_OUTLET_MST MST
                                  INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
                                             <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
                                             <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
                             ) OUTLET ON OUTLET.OUTLET_CD = GOODS.OUTLET_CD
      			              			 
                  INNER JOIN (
                        SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM , INFO.PSN AS PSN_CNT
                        FROM SLE_SALS_INFO INFO
                        LEFT OUTER JOIN (
                                          SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
                                          INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
                                          <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
                                          ORDER BY  OUTLET_CD, POS_NUM
                                ) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
                                WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
                                  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                                  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
				  				  <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
                                  AND INFO.SALES_DATE BETWEEN :salesDateFr	AND :salesDateTo
                                  <#if outletCd?has_content> AND INFO.OUTLET_CD IN (${outletCd}) </#if>
                                  <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
                                ORDER BY    INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM
                    )  INFO ON INFO.OUTLET_CD = GOODS.OUTLET_CD 
                           AND INFO.SALES_DATE = GOODS.SALES_DATE
                           AND INFO.RECEIPT_NUM = GOODS.RECEIPT_NUM	
      		      INNER JOIN ( SELECT OUTLET_CD, SALES_DATE, RECEIPT_NUM, 
       							MAX(PRMT_CD) AS PRMT_CD,
                                MAX(REMARK)  AS REMARK,
                                MAX(REF_1)   AS REF_1,
                                MAX(DISCNT_REF_NUM) AS DISCNT_REF_NUM,
                                MAX(DISCNT_RAT)     AS DISCNT_RAT
                           FROM SLE_SALS_DISCNT 
                           GROUP BY OUTLET_CD, SALES_DATE, RECEIPT_NUM 
       					) SS ON SS.OUTLET_CD   = GOODS.OUTLET_CD 
                            AND SS.SALES_DATE  = GOODS.SALES_DATE
                            AND SS.RECEIPT_NUM = GOODS.RECEIPT_NUM
                            	 
                  WHERE 1=1
                    --GOODS.SALS_YN       = 'Y'		--판매여부
                    --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
			        AND GOODS.SELL_YN  = DECODE(GOODS.RECEIPT_STATUS ,'E','N','Y')				--매출 여부
			        --종료
                    AND GOODS.DATA_CLASS     = '1'  -- 1:메뉴 3:주문사항 
                    AND GOODS.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
                    AND GOODS.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                    <#if internalYn == 'Y' > AND GOODS.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
   				    <#if internalYn == 'N' > AND GOODS.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
                    AND GOODS.SALES_DATE BETWEEN :salesDateFr	AND :salesDateTo
                          
                   <#if outletCd?has_content> AND GOODS.OUTLET_CD IN  (${outletCd}) </#if>
                 GROUP BY GOODS.OUTLET_CD, GOODS.RECEIPT_NUM,GOODS.SALES_DATE
                 --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 조건 변경 처리자:김호석 CH201702_00668
                 HAVING   SUM(GOODS.DISCNT_NET) <> 0    
                 --종료
      ) KK
      	
      UNION ALL                     
                     
      SELECT  OUTLET_CD, MAX(OUTLET_NM) AS OUTLET_NM,
              SALES_DATE,
              '소계' AS RECEIPT_NUM,
              '' AS PRMT_CD,
              '' AS REMARK,
              '' AS REF_1,
              '' AS DISCNT_REF_NUM,
              --0  AS DISCNT_RAT,
              CASE WHEN SUM(TOT_NET) = 0 THEN 0 ELSE (SUM(DISCNT_AMT) * 100)/ SUM(TOT_NET) END AS DISCNT_RAT,
              SUM(TOT_NET) AS TOT_NET, 
              SUM(DISCNT_AMT) AS DISCNT_AMT,
              SUM(NET_AMT) AS NET_AMT,
              SUM(VAT_AMT) AS VAT_AMT,
              SUM(TOT_AMT) AS TOT_AMT,
              SUM(PSN_CNT) AS PSN_CNT
      FROM ( 
            SELECT  GOODS.OUTLET_CD,  MAX(OUTLET.OUTLET_NM) AS OUTLET_NM,  GOODS.SALES_DATE, GOODS.RECEIPT_NUM,
                    SUM(GOODS.NET_AMT) + SUM(GOODS.DISCNT_NET) AS TOT_NET, 
                    SUM(GOODS.DISCNT_NET)  AS DISCNT_AMT,
                    SUM(GOODS.NET_AMT)     AS NET_AMT,
                    SUM(GOODS.VAT)         AS VAT_AMT,
                    SUM(GOODS.TOT_AMT)     AS TOT_AMT,
                    MAX(INFO.PSN_CNT)      AS PSN_CNT

            FROM SLE_SALS_GOODS GOODS	

                  INNER JOIN (SELECT MST.OUTLET_CD , MST.OUTLET_NM
                               FROM   SLE_OUTLET_MST MST
                                  INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
                                             <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
                                             <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
                             ) OUTLET ON OUTLET.OUTLET_CD = GOODS.OUTLET_CD
      			              			 
                  INNER JOIN (
                        SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM , INFO.PSN AS PSN_CNT
                        FROM SLE_SALS_INFO INFO
                        LEFT OUTER JOIN (
                                          SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
                                          INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
                                          <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
                                          ORDER BY  OUTLET_CD, POS_NUM
                                ) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
                                WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
                                  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                                  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
   				    			  <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
                                  AND INFO.SALES_DATE BETWEEN :salesDateFr	AND :salesDateTo
                                  <#if outletCd?has_content> AND INFO.OUTLET_CD IN (${outletCd}) </#if>
                                  <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
                                ORDER BY    INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM
                    )  INFO ON INFO.OUTLET_CD = GOODS.OUTLET_CD 
                           AND INFO.SALES_DATE = GOODS.SALES_DATE
                           AND INFO.RECEIPT_NUM = GOODS.RECEIPT_NUM	
      		      INNER JOIN ( SELECT OUTLET_CD, SALES_DATE, RECEIPT_NUM, 
       							MAX(PRMT_CD) AS PRMT_CD,
                                MAX(REMARK)  AS REMARK,
                                MAX(REF_1)   AS REF_1,
                                MAX(DISCNT_REF_NUM) AS DISCNT_REF_NUM
                           FROM SLE_SALS_DISCNT 
                           GROUP BY OUTLET_CD, SALES_DATE, RECEIPT_NUM 
       					) SS ON SS.OUTLET_CD   = GOODS.OUTLET_CD 
                            AND SS.SALES_DATE  = GOODS.SALES_DATE
                            AND SS.RECEIPT_NUM = GOODS.RECEIPT_NUM
                            	 
                  WHERE 1=1
                    --GOODS.SALS_YN       = 'Y'		--판매여부
                    --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
			        --AND GOODS.SELL_YN  = DECODE(GOODS.RECEIPT_STATUS ,'E','N','Y')				--매출 여부
			        --종료
                    AND GOODS.DATA_CLASS     = '1'  -- 1:메뉴 3:주문사항 
                    AND GOODS.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
                    AND GOODS.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                    <#if internalYn == 'Y' > AND GOODS.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
   				    <#if internalYn == 'N' > AND GOODS.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
                    AND GOODS.SALES_DATE BETWEEN :salesDateFr	AND :salesDateTo
                          
                 <#if outletCd?has_content> AND GOODS.OUTLET_CD IN (${outletCd}) </#if>
                 GROUP BY GOODS.OUTLET_CD , GOODS.SALES_DATE, GOODS.RECEIPT_NUM
                 --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 조건 변경 처리자:김호석 CH201702_00668
                 HAVING   SUM(GOODS.DISCNT_NET) <> 0    
                 --종료    
       ) KK   
       GROUP BY OUTLET_CD , SALES_DATE
       
       
	) DUAL ORDER BY OUTLET_CD, SALES_DATE, RECEIPT_NUM 
                  
                  
		
		]]></statement>
	
	<statement name="dcSalesList" type="select"><![CDATA[
		SELECT   DENSE_RANK() OVER(ORDER BY DC.OUTLET_CD, DC.SALES_DATE, DC.RECEIPT_NUM) AS ROW_NUM
	         , DC.LVL
	         , DC.OUTLET_CD
	         , DC.OUTLET_NM
	         , DC.SALES_DATE
	         , DC.RECEIPT_NUM
	         , DC.PRMT_CD
	         , DC.REMARK
	         , DC.REF_1
	         , DC.DISCNT_REF_NUM
	         , DC.TOT_NET
	         , DC.DISCNT_AMT
	         , CASE WHEN DC.TOT_NET=0 THEN 0 ELSE ROUND((DC.DISCNT_AMT/DC.TOT_NET)*100,2) END AS DISCNT_RATE
		       , DC.NET_AMT
	         , DC.VAT_AMT
			     , DC.TOT_AMT
		       , DC.PSN_CNT
	         , '1' AS TREE_STATUS  --트리 펼침상태(0:닫힘, 1:펼침)
			
			FROM (
				SELECT  '1' AS LVL,
								GOODS.OUTLET_CD,   MAX(OUTLET.OUTLET_NM) AS OUTLET_NM, GOODS.SALES_DATE,
				                    GOODS.RECEIPT_NUM,
				                    '' AS PRMT_CD,
				                    ''  AS REMARK,
				                    ''   AS REF_1,
				                    '' AS DISCNT_REF_NUM,
				                    --SS.DISCNT_RAT     AS DISCNT_RAT,
								    --전체 할인 합계는 GOODS 테이블에서 가져옴
				                    SUM(GOODS.NET_AMT) + SUM(GOODS.DISCNT_AMT) AS TOT_NET,
				                    SUM(GOODS.DISCNT_AMT)  AS DISCNT_AMT,
				                    SUM(GOODS.NET_AMT)     AS NET_AMT,
				                    SUM(GOODS.VAT_AMT)         AS VAT_AMT,
				                    SUM(GOODS.TOT_AMT)     AS TOT_AMT,
				                    INFO.PSN_CNT      AS PSN_CNT
				
				            FROM (
				
										SELECT
				                    GOODS.OUTLET_CD, GOODS.RECEIPT_NUM,GOODS.SALES_DATE,
				                    SUM(GOODS.NET_AMT) + SUM(GOODS.DISCNT_NET) AS TOT_NET,
				                    SUM(GOODS.DISCNT_NET)  AS DISCNT_AMT,
				                    SUM(GOODS.NET_AMT)     AS NET_AMT,
				                    SUM(GOODS.VAT)         AS VAT_AMT,
				                    SUM(GOODS.TOT_AMT)     AS TOT_AMT
				            FROM SLE_SALS_GOODS GOODS
				            WHERE GOODS.SELL_YN  = DECODE(GOODS.RECEIPT_STATUS ,'E','N','Y')				--매출 여부
							        --종료
				                    AND GOODS.DATA_CLASS     = '1'  -- 1:메뉴 3:주문사항
				                    AND GOODS.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
				                    AND GOODS.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
				                    AND GOODS.RECEIPT_STATUS IN ('Q','R','E')  --영수증 상태 Q:정상 R:반품(-)
				   				    --영수증 상태 Q:정상 R:반품(-)
				   				    AND GOODS.SALES_DATE BETWEEN :salesDateFr	AND :salesDateTo
                                    <#if outletCd?has_content> AND GOODS.OUTLET_CD IN (${outletCd}) </#if>
				                    AND GOODS.SELL_YN = 'Y'				                  
				            			GROUP BY GOODS.OUTLET_CD, GOODS.RECEIPT_NUM,GOODS.SALES_DATE
				            ) GOODS
				
				                  INNER JOIN (SELECT MST.OUTLET_CD , MST.OUTLET_NM
				                               FROM   SLE_OUTLET_MST MST
				                                  INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
				                                             <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
				                                             <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
				                             ) OUTLET ON OUTLET.OUTLET_CD = GOODS.OUTLET_CD
				
				                  INNER JOIN (
				                        SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM , INFO.PSN AS PSN_CNT
				                        FROM SLE_SALS_INFO INFO
				                        LEFT OUTER JOIN (
				                                          SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
				                                          INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
				                                          <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
				                                          ORDER BY  OUTLET_CD, POS_NUM
				                                ) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
				                                WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
				                                  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
				                                   AND INFO.RECEIPT_STATUS IN ('Q','R','E')  --영수증 상태 Q:정상 R:반품(-)
								  				   --영수증 상태 Q:정상 R:반품(-)
								   				    AND INFO.SALES_DATE BETWEEN :salesDateFr	AND :salesDateTo
				                                    <#if outletCd?has_content> AND INFO.OUTLET_CD IN (${outletCd}) </#if>
				                                    <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
				
				                                ORDER BY    INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM
				                    )  INFO ON INFO.OUTLET_CD = GOODS.OUTLET_CD
				                           AND INFO.SALES_DATE = GOODS.SALES_DATE
				                           AND INFO.RECEIPT_NUM = GOODS.RECEIPT_NUM
													INNER JOIN ( SELECT OUTLET_CD, SALES_DATE, RECEIPT_NUM,
				                                                SUM(DISCNT_AMT) AS DISCNT_AMT
				                                           FROM SLE_SALS_DISCNT
				                                           GROUP BY OUTLET_CD, SALES_DATE, RECEIPT_NUM
				                                ) SS ON SS.OUTLET_CD   = GOODS.OUTLET_CD
				                                            AND SS.SALES_DATE  = GOODS.SALES_DATE
				                                            AND SS.RECEIPT_NUM = GOODS.RECEIPT_NUM
				                  WHERE 1=1

				                 GROUP BY GOODS.OUTLET_CD, GOODS.RECEIPT_NUM,GOODS.SALES_DATE,INFO.PSN_CNT
				                 
				/* 전체 트리를 조회할때 */   
				<#if schType == '1' >
				UNION ALL
				
				SELECT  '2' AS LVL,
								GOODS.OUTLET_CD,   MAX(OUTLET.OUTLET_NM) AS OUTLET_NM, GOODS.SALES_DATE,
				                    GOODS.RECEIPT_NUM,
				                    SS.PRMT_CD AS PRMT_CD,
				                    SS.REMARK  AS REMARK,
				                    SS.REF_1   AS REF_1,
				                    SS.DISCNT_REF_NUM AS DISCNT_REF_NUM,
				                    --SS.DISCNT_RAT     AS DISCNT_RAT,
				                    0 AS TOT_NET,
				                    --할인코드별 할인 합계는 할입집계 테이블에서 가져옴(할인키별로 가져오려면 이 테이블 밖에 없는데 NET금액이 없어 1.1로 나눠서 NET금액을 가져와야해서 전체 할인 합계와 단수차 생김)
				                    SUM(ROUND(SS.DISCNT_AMT/1.1,0))  AS DISCNT_AMT,
				                    0     AS NET_AMT,
				                    0         AS VAT_AMT,
				                    0     AS TOT_AMT,
				                    0      AS PSN_CNT
				
				            FROM (
				
										SELECT
				                    GOODS.OUTLET_CD, GOODS.RECEIPT_NUM,GOODS.SALES_DATE,
				                    SUM(GOODS.NET_AMT) + SUM(GOODS.DISCNT_NET) AS TOT_NET,
				                    SUM(GOODS.DISCNT_NET)  AS DISCNT_AMT,
				                    SUM(GOODS.NET_AMT)     AS NET_AMT,
				                    SUM(GOODS.VAT)         AS VAT_AMT,
				                    SUM(GOODS.TOT_AMT)     AS TOT_AMT
				            FROM SLE_SALS_GOODS GOODS
				            WHERE GOODS.SELL_YN  = DECODE(GOODS.RECEIPT_STATUS ,'E','N','Y')				--매출 여부
							        --종료
				                    AND GOODS.DATA_CLASS     = '1'  -- 1:메뉴 3:주문사항
				                    AND GOODS.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
				                    AND GOODS.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
				                     AND GOODS.RECEIPT_STATUS IN ('Q','R','E')  --영수증 상태 Q:정상 R:반품(-)
				   				     --영수증 상태 Q:정상 R:반품(-)
				   				    AND GOODS.SALES_DATE BETWEEN :salesDateFr	AND :salesDateTo
                                    <#if outletCd?has_content> AND GOODS.OUTLET_CD IN (${outletCd}) </#if>
				                    AND GOODS.SELL_YN = 'Y'				   
				            			GROUP BY GOODS.OUTLET_CD, GOODS.RECEIPT_NUM,GOODS.SALES_DATE
				            ) GOODS
				
				                  INNER JOIN (SELECT MST.OUTLET_CD , MST.OUTLET_NM
				                               FROM   SLE_OUTLET_MST MST
				                                  INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
				                                             <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
				                                             <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
				                             ) OUTLET ON OUTLET.OUTLET_CD = GOODS.OUTLET_CD
				
				                  INNER JOIN (
				                        SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM , INFO.PSN AS PSN_CNT
				                        FROM SLE_SALS_INFO INFO
				                        LEFT OUTER JOIN (
				                                          SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
				                                          INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
				                                          <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
				                                          ORDER BY  OUTLET_CD, POS_NUM
				                                ) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
				                                WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
				                                  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
				                                   AND INFO.RECEIPT_STATUS IN ('Q','R','E')  --영수증 상태 Q:정상 R:반품(-)
								  				   --영수증 상태 Q:정상 R:반품(-)
								   				    AND INFO.SALES_DATE BETWEEN :salesDateFr	AND :salesDateTo
				                                    <#if outletCd?has_content> AND INFO.OUTLET_CD IN (${outletCd}) </#if>
				                                    <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
				
				                                ORDER BY    INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM
				                    )  INFO ON INFO.OUTLET_CD = GOODS.OUTLET_CD
				                           AND INFO.SALES_DATE = GOODS.SALES_DATE
				                           AND INFO.RECEIPT_NUM = GOODS.RECEIPT_NUM
				      		      INNER JOIN ( SELECT OUTLET_CD, SALES_DATE, RECEIPT_NUM,
				                								PRMT_CD,
				                                REMARK,
				                                REF_1,
				                                DISCNT_REF_NUM,
				                                DISCNT_RAT,
				                                DISCNT_AMT
				                           FROM SLE_SALS_DISCNT				                         
				       					) SS ON SS.OUTLET_CD   = GOODS.OUTLET_CD
				                            AND SS.SALES_DATE  = GOODS.SALES_DATE
				                            AND SS.RECEIPT_NUM = GOODS.RECEIPT_NUM
				                  WHERE 1=1

				                 GROUP BY GOODS.OUTLET_CD, GOODS.RECEIPT_NUM,GOODS.SALES_DATE, SS.PRMT_CD,
				                    SS.REMARK,
				                    SS.REF_1,
				                    SS.DISCNT_REF_NUM,
				                    INFO.PSN_CNT
				      </#if>
			) DC
			ORDER BY ROW_NUM,LVL,OUTLET_CD, SALES_DATE,RECEIPT_NUM,PRMT_CD
	
	]]></statement>
	
		
	<statement name="selectDcSumList" type="select"><![CDATA[
			--할인 집계내역
SELECT DC_CD
, NVL((SELECT PRMT_NM FROM SLE_PRMT W WHERE W.PRMT_CD = DC_CD), '할인없음') AS DC_NM  -- 할인코드명
, QTY
, B.BILL_CNT
, B.PSN
, O_NET 
, O_NET - NET AS DC_NET
, NET
, CASE WHEN O_NET = 0 THEN 0 ELSE ROUND(((O_NET - NET) / O_NET) * 100, 2) END AS SALES_RATE
--, INVEST_AMT
--, CASE WHEN O_TOT_AMT = 0 THEN 0 ELSE ROUND((INVEST_AMT / O_TOT_AMT) * 100, 2) END AS MATERIAL_RATE
--, CASE WHEN INVEST_AMT = 0 THEN 0 ELSE ROUND(((O_NET - NET) / INVEST_AMT) * 100, 2) END AS MATERIAL_RATE

FROM (

SELECT 		       DC_CD
						     , SUM(QTY) AS QTY
						     --, ROUND(SUM(QTY * INVEST_AMT)) AS INVEST_AMT
						     , SUM(NET) AS NET
						     , SUM(TOT_AMT) AS TOT_AMT
						     , SUM(O_NET) AS O_NET
						     , SUM(O_TOT_AMT) AS O_TOT_AMT
						  FROM (
						        SELECT OUTLET_CD  -- 업장코드
						             , MENU_CD AS MENU_CD  -- 메뉴코드
						             , MAX(MENU_NM) AS MENU_NM  -- 메뉴명
						             , NVL(DC_CD, '') AS DC_CD  -- 할인코드
						            						             , MENU_UCST AS MENU_UCST  -- 판매금액
						             , MENU_CLASS AS MENU_CLASS  -- 메뉴구분(F:식료,B:음료,G:상품,O:기타)
						             , SUM(QTY) AS QTY  -- 판매수량
						             /*
						             --재료비를 가져올 경우 속도 문제 발생
						             , NVL((SELECT INVEST_AMT
						                      FROM SLE_OUTLET_MENU S
						                         , (SELECT UPJANG_CD
						                                 , MAIN_RECIPE_CD
						                                 , INVEST_AMT
						                              FROM RSS_UPJANG_RECIPE_DAILY_DTL						                             
						                             WHERE 1=1
						                               <#if outletCd?has_content> AND UPJANG_CD IN (${outletCd}) </#if>
						                               AND STD_DATE = TO_CHAR(SYSDATE, 'YYYYMMDD')
						                               AND SEMI_GOODS_YN = 'Y'
						                               AND LOSS_RATE IS NULL) D
						                     WHERE S.OUTLET_CD = A.OUTLET_CD
						                       AND S.MENU_CD = A.MENU_CD
						                       AND S.OUTLET_CD = D.UPJANG_CD
						                       AND S.RECP_CD = D.MAIN_RECIPE_CD), 0) AS INVEST_AMT
						             */
						             , NVL(SUM(NET_AMT), 0) AS NET  -- 할인후 총매출액(VAT제외)
						             , NVL(SUM(TOT_AMT), 0) AS TOT_AMT  -- 할인후 총매출액
						             , NVL(SUM(NET_AMT+DISCNT_NET), 0) AS O_NET  -- 할인전 총매출금액(VAT제외)
						             , SUM(OCCR_AMT) AS O_TOT_AMT  -- 할인전 총매출금액
						        FROM (
 										SELECT	DIS.PRMT_CD AS DC_CD
											 , DECODE('SELL', 'SALE', MST.OUTLET_CD, MST.ATTACH_OUTLET_CD) AS OUTLET_CD
						                     , MST.MENU_CD
						                     , MST.MENU_NM
						                     , MST.MENU_UPRICE AS MENU_UCST
						                     , MST.QUANTITY AS QTY
						                     , MST.OCCUR_AMT AS OCCR_AMT
						                     , MST.DISCNT_AMT AS DSCN_AMT
						                     , MST.NET_AMT
                                 			 , MST.DISCNT_NET
						                     , MST.SVC
						                     , MST.VAT
						                     , MST.TOT_AMT						                                                      
						                     , MST.MENU_CLASS
						                  FROM  (SELECT DISTINCT SALES_DATE, OUTLET_CD, RECEIPT_NUM, PRMT_CD FROM SLE_SALS_DISCNT
				                               			WHERE SALES_DATE BETWEEN :salesDateFr	AND :salesDateTo	 
										                <#if outletCd?has_content> AND OUTLET_CD IN (${outletCd}) </#if>										                			                                                                         
				                                   ) DIS
											 INNER JOIN SLE_SALS_GOODS MST ON DIS.SALES_DATE = MST.SALES_DATE
                                                             AND DIS.OUTLET_CD = MST.OUTLET_CD
                                                             AND DIS.RECEIPT_NUM = MST.RECEIPT_NUM
						                     INNER JOIN (
						                        SELECT INFO.OUTLET_CD
						                             , INFO.SALES_DATE
						                             , INFO.RECEIPT_NUM
						                             , NVL(INFO.TABLE_CD, '00') AS TABLE_CD
						                          FROM SLE_SALS_INFO INFO
						                             , (
						                                SELECT OUTLET_CD
						                                     , POS_NUM
						                                     , CODE_NAME
						                                  FROM SLE_POS_SET POS
						                                     , SCC_COMMON_CODE GRP
						                                 WHERE GRP.GROUP_CODE = 'SLE_0111'
						                                   AND GRP.CODE = 'null'
						                                   AND GRP.CODE = POS.OUTLET_SUB_CD
						                               ) POS
						                         WHERE POS.OUTLET_CD(+) = INFO.OUTLET_CD
						                           AND POS.POS_NUM(+) = INFO.POS_NUM
						                           AND INFO.SALS_CLASS     = '0'  -- 0:정상매출, 1:쿠폰(상품권)대행, 2:선수금수납, 3:후불정산, 4:영업곤리, 5:미포스
						                           AND INFO.MODIFY_STATUS  IN ('0','1')  -- 매출조정 0:정상, 1:조정
						                            AND INFO.RECEIPT_STATUS IN ('Q','R','E')  --영수증 상태 Q:정상 R:반품(-)
   				    							    --영수증 상태 Q:정상 R:반품(-)
                    	                           AND INFO.SALES_DATE BETWEEN :salesDateFr	AND :salesDateTo	
                    	                           <#if outletCd?has_content> AND INFO.OUTLET_CD IN (${outletCd}) </#if>
						                       ) INFO ON INFO.OUTLET_CD = MST.OUTLET_CD
										                   AND INFO.SALES_DATE = MST.SALES_DATE
										                   AND INFO.RECEIPT_NUM = MST.RECEIPT_NUM
						                 WHERE 1=1
						                   --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
			        					   AND MST.SELL_YN  = DECODE(MST.RECEIPT_STATUS ,'E','N','Y')				--매출 여부
			        					   --종료
						                   <#if internalYn == 'Y' > AND MST.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
   				    					   <#if internalYn == 'N' > AND MST.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
						                   AND MST.MODIFY_STATUS IN ('0', '1')  -- 매출조정 0:정상, 1:조정
						                   AND MST.SALS_CLASS = '0'  -- 0:정상매출, 1:쿠폰(상품권)대행, 2:선수금수납, 3:후불정산, 4:영업곤리, 5:미포스
						                   AND MST.DATA_CLASS IN ('1') -- 1:메뉴, 3:주문사항
						                   AND MST.SALES_DATE BETWEEN :salesDateFr	AND :salesDateTo  -- 매출일자
						                   AND DECODE('SELL', 'SALE', MST.OUTLET_CD, MST.ATTACH_OUTLET_CD) =  DECODE('SELL', 'SALE', MST.OUTLET_CD, MST.ATTACH_OUTLET_CD)
						               ) A
						         GROUP BY OUTLET_CD, MENU_CD, DC_CD, MENU_UCST, MENU_CLASS
						       ) A
GROUP BY DC_CD
)    
INNER JOIN (     
 SELECT PRMT_CD
--, COUNT(INFO.RECEIPT_NUM) AS BILL_CNT
, COUNT(RECEIPT_NUM) AS BILL_CNT
, SUM(PSN) AS  PSN

--SELECT INFO.PSN,DIS.*
FROM (
SELECT DISTINCT DIS.PRMT_CD,DIS.RECEIPT_NUM, DIS.SALES_DATE, DIS.OUTLET_CD, INFO.PSN
FROM SLE_SALS_DISCNT DIS
, SLE_SALS_INFO INFO
, (
  SELECT OUTLET_CD
       , POS_NUM
       , CODE_NAME
    FROM SLE_POS_SET POS
       , SCC_COMMON_CODE GRP
   WHERE GRP.GROUP_CODE = 'SLE_0111'
     AND GRP.CODE = 'null'
     AND GRP.CODE = POS.OUTLET_SUB_CD
 ) POS
WHERE 1=1
AND DIS.SALES_DATE = INFO.SALES_DATE
AND DIS.OUTLET_CD = INFO.OUTLET_CD
AND DIS.RECEIPT_NUM = INFO.RECEIPT_NUM 
AND POS.OUTLET_CD(+) = INFO.OUTLET_CD
AND POS.POS_NUM(+) = INFO.POS_NUM
AND INFO.SALS_CLASS     = '0'  -- 0:정상매출, 1:쿠폰(상품권)대행, 2:선수금수납, 3:후불정산, 4:영업곤리, 5:미포스
AND INFO.MODIFY_STATUS  IN ('0','1')  -- 매출조정 0:정상, 1:조정
AND INFO.RECEIPT_STATUS IN ('Q','R')  --영수증 상태 Q:정상 R:반품(-)
--영수증 상태 Q:정상 R:반품(-)
AND INFO.SALES_DATE BETWEEN :salesDateFr	AND :salesDateTo						                           
AND INFO.OUTLET_CD IN (${outletCd})
)
GROUP BY PRMT_CD
       
) B ON DC_CD = B.PRMT_CD 
		
		]]></statement>
</hqml>

