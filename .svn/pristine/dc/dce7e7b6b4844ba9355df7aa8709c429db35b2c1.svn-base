<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="rc.rcg.couponMgntDAO">
	<desc>쿠폰번호 HQML Query</desc>

	<!-- 쿠폰번호 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.rc.rcg.dao.CouponMgntDAO.selectList */
		<![CDATA[
		SELECT '0' AS CHK,
			   A.COUPON_NUM,
			   A.COUPON_KIND_CD,
			   B.COUPON_KIND_NM,
		       A.COUPON_AMT,
		       A.COUPON_NUM_SEQ,
		       A.START_DATE,
		       A.END_DATE,
		       A.MU_CD,
		       A.CC_CD,
		       C.CC_NM,
		       A.ACCT_CD,
		       A.SUPPLY_AMT,
		       A.VAT_INCLUDE_YN,
		       A.VAT_CD,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'VAT_CD' AND CODE = A.VAT_CD) VAT_NM,
		       A.VAT_AMT,
		       A.NEWHGHT_UPJANG,
		       A.SELF_BU_CLASS_CD,
		       A.SALS_VAT_ACCT,
		       A.ADVANCE,
		       A.FOC_CLASS,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FOC_CLASS' AND CODE = A.FOC_CLASS) FOC_CLASS_NM,
		       A.COUPON_TYPE,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'COUPON_TYPE' AND CODE = A.COUPON_TYPE) COUPON_TYPE_NM,
		       A.DISCNT_CLASS,
		       A.DISCNT_TYPE,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'DISCNT_TYPE' AND CODE = A.DISCNT_TYPE) DISCNT_TYPE_NM,
		       A.DISCNT_RATE,
		       A.DISCNT_AMT,
		       A.COUPON_CLASS,
		       A.COUPON_STATUS,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'COUPON_STATUS' AND CODE = A.COUPON_STATUS) COUPON_STATUS_NM,
		       A.DISUSE_STATUS,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'DISUSE_STATUS' AND CODE = A.DISUSE_STATUS) DISUSE_STATUS_NM,
		       A.REF_NUM,
		       A.PUBLISH_DATE,
		       A.DPLY_DATE,
		       A.SALE_DATE,
		       A.USE_DATE,
		       A.USE_AMT,
		       A.REFUND_DATE,
		       A.DISUSE_DATE,
		       A.DISUSE_REASON,
		       A.DISUSE_PROC_USER,
		       A.SALS_UPJANG_CD,
		       D.UPJANGNM AS SALS_UPJANG_NM,
		       A.ACCT_TYPE,
		       A.COUPON_NUM_OF_TIMES,
		       A.USE_NUM_OF_TIMES,
		       NVL(A.INSIDE_USE_YN, 'N') INSIDE_USE_YN,
		       A.PACKAGE_DESC,
		       A.COUPON_PROC_NUM,
		       A.ADVANCE_NUM,
		       A.COUPON_DISUSE_BEFORE_STATUS,
		       A.COUPON_SAL_AGED,
		       A.USE_YN,
		       A.CDATE CREATE_DATE,
		       B.COUPON_KIND_GRP_CD,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'POS_TYPE_CD' AND CODE = B.COUPON_KIND_GRP_CD) COUPON_KIND_GRP_NM,
		       (SELECT PUBLISH_REASON FROM SLA_COUPON_PUBLISH_MGMT WHERE COUPON_NUM_FR <= A.COUPON_NUM AND COUPON_NUM_TO >= A.COUPON_NUM AND ROWNUM = 1) PUBLISH_REASON,
		       A.EXTINCTION_DATE,
		       E.BILL_CC,
		       SCC_CC_NM_FUN(E.BILL_CC) AS BILL_NM,
		       E.ETC01,
		       E.ETC02,
		       SCC_CRYPTO.DEC_FUN(E.TR_NUM) AS CUST_HP_NO,
               TO_DATE(E.REQ_DATE || E.REQ_TIME, 'YYYYMMDD HH24MI') AS REQ_DATE,
               A.COUPON_NUM || SUBSTR(SCC_CRYPTO.DEC_FUN(E.TR_NUM), -4) AS MSG_KEY,
               SCC_GET_LMS_STATUS(E.REQ_DATE, E.REQ_TIME, A.COUPON_NUM || SUBSTR(SCC_CRYPTO.DEC_FUN(E.TR_NUM), -4), SCC_CRYPTO.DEC_FUN(E.TR_NUM), SCC_CRYPTO.DEC_FUN(E.CALLBACK_NUM)) AS SEND_STATUS, 
               E.SEND_CNT              
		FROM   SLA_COUPON_NUM_MST A,
			   SLA_COUPON_KIND_MST B,
			   SCC_CC C,
			   ST_UPJANG D,
			   (SELECT L.*
			   			, RANK() OVER(PARTITION BY L.COUPON_NUM  ORDER BY L.UDATE DESC) AS RN
			   			, COUNT(1) OVER(PARTITION BY L.COUPON_NUM ) AS SEND_CNT 
			   			FROM SLA_COUPON_SEND L) E 
		WHERE  A.COUPON_KIND_CD = B.COUPON_KIND_CD(+) 
		AND	   A.COUPON_NUM = E.COUPON_NUM(+)
		AND	   A.COUPON_TYPE = E.COUPON_TYPE(+)
		AND	   A.CC_CD = C.CC_CD(+)
		AND	   A.SALS_UPJANG_CD = D.UPJANG(+)
		AND    A.USE_YN = 'Y'
		AND	   E.RN(+) = 1
		<#if couponNumFr?has_content>
		AND	   A.COUPON_NUM >= :couponNumFr
		</#if>
		<#if couponNumTo?has_content>
		AND	   A.COUPON_NUM <= :couponNumTo
		</#if>
		<#if couponKindCd?has_content>
		AND	   A.COUPON_KIND_CD = :couponKindCd
		</#if>
		<#if posTypeCd?has_content>
		AND	   B.COUPON_KIND_GRP_CD = :posTypeCd
		</#if>
		<#if muCd?has_content>AND     A.MU_CD = :muCd</#if>
		<#if tmCd?has_content>
			AND     A.CC_CD IN (
			                SELECT  A.CC_CD
			                FROM    SCC_CC A
			                        ,HLDC_SC_DEPT_V B
			                WHERE   B.CC_CD = A.CC_CD
			                AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
			                AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
			                AND     B.TM_CD = :tmCd
			                )
        </#if>
		<#if focClass?has_content>
		AND	   A.FOC_CLASS = :focClass
		</#if>
		<#if couponGrpCd?has_content>
		AND	   B.COUPON_GRP_CD = :couponGrpCd
		</#if>
		<#if couponNum?has_content>
		AND	   A.COUPON_NUM = :couponNum
		</#if>
		<#if couponStatus?has_content>
		AND	   A.COUPON_STATUS = :couponStatus
		</#if>
		ORDER BY A.COUPON_NUM ASC
		]]>
	</statement>


	<statement name="selectCouponStatus" type="select">
		/*+ com.hwfs.rc.rcg.dao.CouponMgntDAO.selectCouponStatus */
		<![CDATA[
			SELECT '0' AS CHK,
			   A.COUPON_NUM,
			   A.COUPON_KIND_CD,
			   B.COUPON_KIND_NM,
		       A.COUPON_AMT,
		       A.COUPON_NUM_SEQ,
		       A.START_DATE,
		       A.END_DATE,
		       A.MU_CD,
		       A.CC_CD,
		       C.CC_NM,
		       A.ACCT_CD,
		       A.SUPPLY_AMT,
		       A.VAT_INCLUDE_YN,
		       A.VAT_CD,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'VAT_CD' AND CODE = A.VAT_CD) VAT_NM,
		       A.VAT_AMT,
		       A.NEWHGHT_UPJANG,
		       A.SELF_BU_CLASS_CD,
		       A.SALS_VAT_ACCT,
		       A.ADVANCE,
		       A.FOC_CLASS,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FOC_CLASS' AND CODE = A.FOC_CLASS) FOC_CLASS_NM,
		       A.COUPON_TYPE,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'COUPON_TYPE' AND CODE = A.COUPON_TYPE) COUPON_TYPE_NM,
		       A.DISCNT_CLASS,
		       A.DISCNT_TYPE,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'DISCNT_TYPE' AND CODE = A.DISCNT_TYPE) DISCNT_TYPE_NM,
		       A.DISCNT_RATE,
		       A.DISCNT_AMT,
		       A.COUPON_CLASS,
		       A.COUPON_STATUS,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'COUPON_STATUS' AND CODE = A.COUPON_STATUS) COUPON_STATUS_NM,
		       A.DISUSE_STATUS,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'DISUSE_STATUS' AND CODE = A.DISUSE_STATUS) DISUSE_STATUS_NM,
		       A.REF_NUM,
		       A.PUBLISH_DATE,
		       A.DPLY_DATE,
		       A.SALE_DATE,
		       A.USE_DATE,
		       A.USE_AMT,
		       A.REFUND_DATE,
		       A.DISUSE_DATE,
		       A.DISUSE_REASON,
		       A.DISUSE_PROC_USER,
		       A.SALS_UPJANG_CD,
		       D.UPJANGNM AS SALS_UPJANG_NM,
		       A.ACCT_TYPE,
		       A.COUPON_NUM_OF_TIMES,
		       A.USE_NUM_OF_TIMES,
		       NVL(A.INSIDE_USE_YN, 'N') INSIDE_USE_YN,
		       A.PACKAGE_DESC,
		       A.COUPON_PROC_NUM,
		       A.ADVANCE_NUM,
		       A.COUPON_DISUSE_BEFORE_STATUS,
		       A.COUPON_SAL_AGED,
		       A.USE_YN,
		       A.CDATE CREATE_DATE,
		       B.COUPON_KIND_GRP_CD,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'POS_TYPE_CD' AND CODE = B.COUPON_KIND_GRP_CD) COUPON_KIND_GRP_NM,
		       (SELECT PUBLISH_REASON FROM SLA_COUPON_PUBLISH_MGMT WHERE COUPON_NUM_FR <= A.COUPON_NUM AND COUPON_NUM_TO >= A.COUPON_NUM AND ROWNUM = 1) PUBLISH_REASON,
		       A.EXTINCTION_DATE,
		       E.BILL_CC,
		       SCC_CC_NM_FUN(E.BILL_CC) AS BILL_NM,
		       E.ETC01,
		       E.ETC02,
		       SCC_CRYPTO.DEC_FUN(E.TR_NUM) AS CUST_HP_NO,
               TO_DATE(E.REQ_DATE || E.REQ_TIME, 'YYYYMMDD HH24MI') AS REQ_DATE,
               A.COUPON_NUM || SUBSTR(SCC_CRYPTO.DEC_FUN(E.TR_NUM), -4) AS MSG_KEY,
               --SCC_GET_LMS_STATUS(E.REQ_DATE, E.REQ_TIME, A.COUPON_NUM || SUBSTR(SCC_CRYPTO.DEC_FUN(E.TR_NUM), -4), SCC_CRYPTO.DEC_FUN(E.TR_NUM), SCC_CRYPTO.DEC_FUN(E.CALLBACK_NUM)) AS SEND_STATUS, 
               E.SEND_CNT              
		FROM   SLA_COUPON_NUM_MST A,
			   SLA_COUPON_KIND_MST B,
			   SCC_CC C,
			   ST_UPJANG D,
			   (SELECT L.*
			   			, RANK() OVER(PARTITION BY L.COUPON_NUM ORDER BY L.UDATE DESC) AS RN
			   			, COUNT(1) OVER(PARTITION BY L.COUPON_NUM) AS SEND_CNT 
			   			FROM SLA_COUPON_SEND L) E 
		WHERE  A.COUPON_KIND_CD = B.COUPON_KIND_CD(+) 
		AND	   A.COUPON_NUM = E.COUPON_NUM(+)
		AND	   A.COUPON_TYPE = E.COUPON_TYPE(+)
		AND	   A.CC_CD = C.CC_CD(+)
		AND	   A.SALS_UPJANG_CD = D.UPJANG(+)
		AND    A.USE_YN = 'Y'
		AND	   E.RN(+) = 1
		AND    A.COUPON_NUM = :code
		]]>
	</statement>
	

	<statement name="insertList" type="insert">
		<![CDATA[ 
		/*+ com.hwfs.rc.rcg.dao.CouponMgntDAO.saveLogList */
		INSERT INTO SLA_COUPON_SEND ( 
			COUPON_NUM
			, COUPON_TYPE
			, REQ_DATE
			, REQ_TIME
			, CALLBACK_NUM
			, TR_NUM
			, TEXT_MSG
			, BILL_CC
			, MSG_KEY
			, ETC01
			, ETC02
			--, ETC03
			, CUSER
			, CDATE
			, UUSER
			, UDATE
		) VALUES (
			:couponNum
			, :couponType
			, SUBSTR(:trSendDate, 1, 8)
			, SUBSTR(:trSendDate, 9, 4)
			, SCC_CRYPTO.ENC_FUN(:trCallback)
			, SCC_CRYPTO.ENC_FUN(:custHpNo)
			, :trMsg
			, :billCc
			, :msgKey
			, :etc01
			, :etc02
			, :trSendUser
			, SYSDATE
			, :trSendUser
			, SYSDATE )
		
		]]>
	</statement>
</hqml>
