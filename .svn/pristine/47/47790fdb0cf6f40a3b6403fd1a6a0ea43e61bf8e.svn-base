<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="PersonalSearchComponent" classname="PersonalSearchComponent" inheritanceid="" position="absolute 0 0 196 21" titletext="사원 검색용 Component" bindDataset="" bindSabunColumn="" bindNmKorColumn="" qoMuCd="" qoTmCd="" qoTmNm="" onload="PersonalSearchComponent_onload" eventAfterTrigger="" eventBeforeTrigger="" qoCcCd="" qoCcNm="">
    <Layouts>
      <Layout>
        <Edit id="edt_nmKor" taborder="0" readonly="true" onkeydown="edt_nmKor_onkeydown" position="absolute 0 0 176 21" anchor="left top right" sabun="" nmKor=""/>
        <Button id="btn_search" taborder="1" onclick="btn_search_onclick" class="btn_WF_popSearch" position="absolute 175 0 196 21" anchor="top right" tabstop="false"/>
        <Edit id="edt_sabun" taborder="2" readonly="true" onkeydown="edt_nmKor_onkeydown" position="absolute 2 30 178 51" anchor="left top right" sabun="" nmKor="" visible="false"/>
      </Layout>
    </Layouts>
    <Script type="xscript4.0"><![CDATA[/*
  화 면 명 : 직원 검색용 컴포넌트
  파 일 명 : PersonalSearchComponent.xfdl
  기    능 : 직원 검색 Composite 콤포넌트

    수정일     수정자                  수정내용
  ----------   -------  --------------------------------------------------
  2015.03.10   김재섭   최초 생성
*/

/************************************************************************************************
 * 공통 라이브러리 INCLUDE 영역 (필수)
************************************************************************************************/
include "lib::lib_com.xjs";

var PersonalSearchComponent_Cc_Code = "";
var fv_clearEventName = "";

/*----------------------------------------------------------------------------------------------
 * 설명      : 초기설정한다.
 *---------------------------------------------------------------------------------------------*/
function PersonalSearchComponent_onload(obj:Form, e:LoadEventInfo)
{
	
	if (!gfn_isNull(this.class) && this.class == "edt_WF_Essential")
	{
		edt_nmKor.class = this.class;
		btn_search.class = "btn_WF_popSearchEssential";
	}
	
	fn_setBindItem();
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 바인딩 정보를 처리한다.
 *---------------------------------------------------------------------------------------------*/
function fn_setBindItem()
{
	if (!gfn_isNull(this.bindDataset))
	{
		if (!gfn_isNull(this.bindNmKorColumn))
		{
			var bindItem0 = new BindItem("personalSearchBindItem0", "edt_nmKor", "value", this.bindDataset, this.bindNmKorColumn);
			this.addChild(bindItem0.name, bindItem0);
			bindItem0.bind();
		}
		
		if (!gfn_isNull(this.bindSabunColumn))
		{
			//var bindItem1 = new BindItem("personalSearchBindItem1", "edt_nmKor", "sabun", this.bindDataset, this.bindSabunColumn);
			var bindItem1 = new BindItem("personalSearchBindItem1", "edt_sabun", "value", this.bindDataset, this.bindSabunColumn);
			this.addChild(bindItem1.name, bindItem1);
			bindItem1.bind();
		}
	}
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 값을 지울경우에 대한 이벤트
 *---------------------------------------------------------------------------------------------*/
function setValueClearEvent(val)
{
	fv_clearEventName = val;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 사번을 가져온다.
 *---------------------------------------------------------------------------------------------*/
function getSabun()
{
	//return edt_nmKor.sabun;
	return edt_sabun.value;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 사번을 설정한다.
 *---------------------------------------------------------------------------------------------*/
function setSabun(val)
{
// 	if (!gfn_isNull(this.bindDataset) && !gfn_isNull(this.bindSabunColumn))
// 	{
// 		var o = fn_FindForm();
// 		var ds = o.objects[this.bindDataset];
// 		var nRow = ds.rowposition;
// 		ds.setColumn(nRow, this.bindSabunColumn, val);
// 	}
	
	edt_nmKor.sabun = val;
	edt_sabun.value = val;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 사원명을 가져온다.
 *---------------------------------------------------------------------------------------------*/
function getNmKor()
{
	return edt_nmKor.value;
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 사원명을 설정한다.
 *---------------------------------------------------------------------------------------------*/
function setNmKor(val)
{
// 	if (!gfn_isNull(this.bindDataset) && !gfn_isNull(this.bindNmKorColumn))
// 	{
// 		var o = fn_FindForm();
// 		var ds = o.objects[this.bindDataset];
// 		var nRow = ds.rowposition;
// 		ds.setColumn(nRow, this.bindNmKorColumn, val);
// 	}
	
	edt_nmKor.value = val;
}

function setCcCode(val)
{
	this.qoCcCd = val;
}

function setCcName(val)
{
	this.qoCcNm = val;
}

// //Form Object를 찾는다.
// function fn_FindForm()
// {
// 	var findForm = true;
// 	var obj = "parent";
// 	var i = 0;
// 	var o;
// 
// 	while (findForm)
// 	{
// 		o = eval(obj);
// 		
// 		if (o.toString().toUpperCase() == "[OBJECT FORM]")
// 		{
// 			findForm = false;
// 		}
// 		else
// 		{
// 			obj = obj + ".parent";
// 		}
// 		
// 		if (i == 10) 
// 		{
// 			findForm = false;
// 		}
// 		
// 		i++;
// 	}
// 	
// 	return o;
// }

// /*----------------------------------------------------------------------------------------------
//  * 설명      : 사용자 아이디를 가져온다/
//  *---------------------------------------------------------------------------------------------*/
//  function getUserId()
//  {
// 	return edt_userName.userId;
//  }
//  
// /*----------------------------------------------------------------------------------------------
//  * 설명      : 사용자그룹(코드)을 가져온다.
//  *---------------------------------------------------------------------------------------------*/
//  function getUserGroupCode()
//  {
// 	return edt_userName.userGroupCode;
//  }
//  
// /*----------------------------------------------------------------------------------------------
//  * 설명      : 사용자그룹(명)을 가져온다.
//  *---------------------------------------------------------------------------------------------*/
//  function getUserGroupName()
//  {
// 	return edt_userName.userGroupName;
//  }
//  
// /*----------------------------------------------------------------------------------------------
//  * 설명      : 사용자 구분을 가져온다.
//  *---------------------------------------------------------------------------------------------*/
//  function getUserType()
//  {
// 	return edt_userName.userType;
//  }
//  
// /*----------------------------------------------------------------------------------------------
//  * 설명      : 소속코드를 가져온다.
//  *---------------------------------------------------------------------------------------------*/
//  function getSosokCode()
//  {
// 	return edt_userName.sosokCode;
//  }
//  
// /*----------------------------------------------------------------------------------------------
//  * 설명      : 소속명을 가져온다.
//  *---------------------------------------------------------------------------------------------*/
//  function getSosokName()
//  {
// 	return edt_userName.sosokName;
//  }
//  
// /*----------------------------------------------------------------------------------------------
//  * 설명      : 업장코드를 가져온다.
//  *---------------------------------------------------------------------------------------------*/
//  function getUpjangCode()
//  {
// 	return edt_userName.upjangCode;
//  }
//  
// /*----------------------------------------------------------------------------------------------
//  * 설명      : 업장명을 가져온다.
//  *---------------------------------------------------------------------------------------------*/
//  function getUpjangName()
//  {
// 	return edt_userName.upjangName;
//  }
//  
// /*----------------------------------------------------------------------------------------------
//  * 설명      : 협력업체코드를 가져온다.
//  *---------------------------------------------------------------------------------------------*/
//  function getCustCode()
//  {
// 	return edt_userName.custCode;
//  }
//  
// /*----------------------------------------------------------------------------------------------
//  * 설명      : 협력업체명을 가져온다.
//  *---------------------------------------------------------------------------------------------*/
//  function getCustName()
//  {
// 	return edt_userName.custName;
//  }
//  
// /*----------------------------------------------------------------------------------------------
//  * 설명      : 공급업체코드를 가져온다.
//  *---------------------------------------------------------------------------------------------*/
//  function getOtCustCode()
//  {
// 	return edt_userName.otCustCode;
//  }
//  
// /*----------------------------------------------------------------------------------------------
//  * 설명      : 공급업체명을 가져온다.
//  *---------------------------------------------------------------------------------------------*/
// function getOtCustName()
// {
// 	return edt_userName.otCustName;
// }

/*----------------------------------------------------------------------------------------------
 * 설명      : 
 *---------------------------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------------------------
 * 설명      : 
 *---------------------------------------------------------------------------------------------*/

/************************************************************************************************
 * 각 COMPONENT 별 EVENT 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 버튼에 대한 이벤트
 *---------------------------------------------------------------------------------------------*/
function btn_search_onclick(obj:Button,  e:ClickEventInfo)
{
	//[[Before Event를 정의한다.
	if (!gfn_isNull(this.eventBeforeTrigger))
	{
		var beforeEvent = eval("parent."+this.eventBeforeTrigger);
		var rtn = beforeEvent(this);
		
		if (!rtn) return;
	}
	//Before Event를 정의한다.]]
	
	//[[팝업창을 호출한다.
	var strId       = "PersonalSearch";
	var strURL      = "cmn::PersonalSearchPop.xfdl";
	var objArgument = {
		P_MU_CD : this.qoMuCd,
		P_TM_CD : this.qoTmCd,
		P_TM_NM : this.qoTmNm,
		P_CC_CD : this.qoCcCd,
		P_CC_NM : this.qoCcNm,
		P_ALL_MU : "FALSE"
	};
	var nWidth      = 726;
	var nHeight     = 495;
	var strStyle    = "";
	var nLeft       = -1;
	var nTop        = -1;
	var isModeless  = false;
	var bShowTitle  = true;
	var strAlign    = "-1";

	// 리턴값을 배열로 받을 경우	
	var arrRtn = gfn_dialog(strId, strURL, objArgument, nWidth, nHeight, strStyle, nLeft, nTop, isModeless, bShowTitle, strAlign);
	
	if (arrRtn instanceof Object)
	{
		setSabun(arrRtn.sabun);
		setNmKor(arrRtn.nmKor);
// 		edt_userName.userId = arrRtn.userid;
// 		edt_userName.sosokCode = arrRtn.sosokCode;
// 		edt_userName.sosokName = arrRtn.sosokName;
// 		edt_userName.upjangCode = arrRtn.upjang;
// 		edt_userName.upjangName = arrRtn.upjangnm;
// 		edt_userName.custCode = arrRtn.custcd;
// 		edt_userName.custName = arrRtn.custnm;
// 		edt_userName.otCustCode = arrRtn.otcustcd;
// 		edt_userName.otCustName = arrRtn.otcustnm;
// 		edt_userName.userType = arrRtn.userType;
// 		edt_userName.userGroupCode = arrRtn.userGroup;
// 		edt_userName.userGroupName = arrRtn.userGroupName;
		
		//[[After Event를 정의한다.
		if (!gfn_isNull(this.eventAfterTrigger))
		{
			var afterEvent = eval("parent."+this.eventAfterTrigger);
			afterEvent(this, arrRtn);
		}
		//After Event를 정의한다.]]
	}
	//팝업창을 호출한다.]]
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 
 *---------------------------------------------------------------------------------------------*/

function edt_nmKor_onkeydown(obj:Edit, e:KeyEventInfo)
{
	// Enter 키
	if(e.keycode == 13) 
	{		
        if (gfn_isNull(obj.sabun))
        {
			btn_search.click();
		}
	}
	// Del 키
	else if(e.keycode == 46) 
	{
		if (!gfn_isNull(fv_clearEventName))
		{
			var clearEvent = eval("parent." + fv_clearEventName);
			var ret = clearEvent(obj);
			
			if (!ret) return;
		}
		
		setSabun("");
		setNmKor("");
// 		obj.userId = "";
// 		obj.sosokCode = "";
// 		obj.sosokName = "";
// 		obj.upjangCode = "";
// 		obj.upjangName = "";
// 		obj.custCode = "";
// 		obj.custName = "";
// 		obj.otCustCode = "";
// 		obj.otCustName = "";
// 		obj.userType = "";
// 		obj.userGroupCode = "";
// 		obj.userGroupName = "";
	}
}
]]></Script>
  </Form>
</FDL>
