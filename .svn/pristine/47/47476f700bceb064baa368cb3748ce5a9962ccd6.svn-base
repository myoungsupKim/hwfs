<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[사업장식단검색]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
<isNotNull col="TOPCNT">
     SELECT * FROM (
</isNotNull>
SELECT /*+ LEADING(A B) USE_HASH(A B) NO_MERGE(A) NO_MERGE(B) */  A.UPJANG
      ,A.MENU_CD
      ,SUM(ROUND(PAST_PRICE)) AS PAST_PRICE --과거원가
      ,NVL(SUM(ROUND((A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0) CUR_PRICE --현재원가
      ,FSM_REAL_RECIPE_NAME_FUN(A.UPJANG, A.MENU_CD) AS RECIPE_INFO --구성
      ,A.MENU_DATE       --제공일
      ,A.WDESC           --날씨
      ,A.HALL_CD         --식당코드
      ,A.HALL_NAME       --식당
      ,A.MEAL            --끼니코드
      ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0023' AND CODE = A.MEAL) MEAL_NAME --끼니명
      ,A.CORNER          --코너코드
      ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0022' AND CODE = A.CORNER) CORNER_NAME --코너명
      ,0 AS CHK          --선택
      ,A.UPJANG ||  A.MENU_CD AS MENU_ID --코너코드
  FROM
       (
        SELECT A.UPJANG, A.MENU_CD, A.MENU_DATE, A.HALL_CD, D.HALL_NAME, A.MEAL, A.CORNER, E.WDESC, C.ITEM_CODE, C.NEED_QTY,
               NVL((C.NEED_QTY * NVL(ROUND((C.MARGIN_PRICE / F.KG_CONVERT_RATE / 1000),2),0)),0) AS PAST_PRICE
          FROM
               FSM_REAL_MENU_MST A
              ,FSM_REAL_RECIPE_MST B
              ,FSM_REAL_RECIPE_ITEM C
              ,FSA_HALL_MST D
              ,(
                SELECT B.UPJANG, A.CUR_DATE, A.WDESC
                  FROM UPOS_SC_WEATHER_INFO_V A,
                       SCO_UPJANG_MST B
                 WHERE A.AREA_CODE = B.LOC_CD
               ) E
              ,HLDC_PO_ITEM_MST F
         WHERE A.UPJANG = B.UPJANG
           AND A.MENU_CD = B.MENU_CD
           AND B.UPJANG = C.UPJANG
           AND B.MENU_CD = C.MENU_CD
           AND B.RECIPE_CD = C.RECIPE_CD
           AND A.UPJANG = D.UPJANG
           AND A.HALL_CD = D.HALL_CD
           AND A.UPJANG = E.UPJANG(+)
           AND A.MENU_DATE = E.CUR_DATE(+)
           AND C.ITEM_CODE = F.ITEM_CODE
           AND A.UPJANG = #UPJANG#        --사업장
           AND A.HALL_CD = #HALL_CD#      --식당코드
           AND A.MENU_DATE BETWEEN #MENU_F_DATE1# AND #MENU_T_DATE1# --기간
<isNotNull col="MEAL1">
           AND A.MEAL = #MEAL1#     --끼니
</isNotNull>
<isNotNull col="CORNER1">
           AND A.CORNER = #CORNER1#    --코너
</isNotNull>
<isNotNull col="MENU_FEATURE">
           AND A.MENU_FEATURE LIKE '%' || #MENU_FEATURE# || '%'  --식단특성
</isNotNull>
<isNotNull col="SCHEDULE">
           AND A.MENU_DATE IN (                    -- 고객사 일정
                                SELECT OP_DATE
                                  FROM MAF_OP_CALENDAR
                                 WHERE UPJANG = #UPJANG#
                                   AND OP_DATE BETWEEN #MENU_F_DATE1# AND #MENU_T_DATE1# --기간
                                   AND FCT_SCHEDULE || ACT_SCHEDULE LIKE '%' || #SCHEDULE# || '%'
                              )
</isNotNull>
<isNotNull col="RECIPE_NAME1">
           AND (A.UPJANG, A.MENU_CD) IN (             --레시피명
                                        SELECT DISTINCT G.UPJANG, G.MENU_CD
                                          FROM FSM_REAL_MENU_MST G,
                                               FSM_REAL_RECIPE_MST H
                                         WHERE G.UPJANG = H.UPJANG
                                           AND G.MENU_CD = H.MENU_CD
                                           AND G.UPJANG = A.UPJANG
                                           AND G.MENU_DATE = A.MENU_DATE
                                           AND G.MEAL = A.MEAL
                                           AND G.CORNER = A.CORNER
                                           AND H.RECIPE_NAME LIKE '%' || #RECIPE_NAME1# || '%'
                                        )
</isNotNull>
       ) A
      ,(
       SELECT /*+ LEADING(E) USE_HASH(A) */ A.ITEM_CODE,
              D.ITEM_NAME,
              D.ITEM_SIZE,
              D.PO_UOM,
              A.CUSTCD,
              DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) AS ITEM_PRICE,
              KG_CONVERT_RATE,
              ROUND((DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) )/KG_CONVERT_RATE/1000,2) AS G_ITEM_PRICE,
              A.UPJANG
         FROM HLDC_ST_UPJANG B,
              HLDC_PO_SUBINVENTORY E,
              HLDC_PO_CONTRACT_F A,
              HLDC_PO_ITEM_MST D
        WHERE A.ITEM_CODE = D.ITEM_CODE
          AND A.USE_YN = 'Y'
          AND A.CONTRACT_PRICE > 0
          AND A.UPJANG = B.AP_UNITPRICE_UPJANG
          AND B.UPJANG = E.UPJANG
          AND B.UPJANG = #fa_UPJANG#
          AND E.SUBINV_CODE = #fa_SUBINV_CODE#
          AND TO_CHAR(SYSDATE,'YYYYMMDD')  BETWEEN A.CONTRACT_START AND NVL(A.CONTRACT_END,'99999999')
       ) B
 WHERE A.ITEM_CODE = B.ITEM_CODE(+)
   AND A.UPJANG = B.UPJANG(+)
 GROUP BY A.UPJANG
         ,A.MENU_CD
         ,A.MENU_DATE
         ,A.HALL_CD
         ,A.HALL_NAME
         ,A.MEAL
         ,A.CORNER
         ,A.WDESC
<isNotNull col="TOPCNT">
ORDER BY A.MENU_DATE DESC,A.MEAL,A.CORNER
     )
 WHERE ROWNUM &lt;= #TOPCNT#
</isNotNull>	</statement>
	<input default-name="ds_input">
	</input>
	<output default-name="ds_Master">
	</output>
</query>