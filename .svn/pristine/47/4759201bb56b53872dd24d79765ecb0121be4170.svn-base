<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="sm.sar.giftBillingDAO">
	<desc>상품권 청구 HQML Query</desc>

	<!-- 상품권 청구 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.sm.sar.dao.GiftBillingDAO.selectList */
		<![CDATA[
		SELECT A.GIFT_BILLING_NUM,
		       A.AR_NUM,
		       A.GIFT_KIND_CD,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'GIFT_TYPE' AND CODE = A.GIFT_KIND_CD) AS GIFT_KIND_NM,
		       A.MU_CD,
		       (SELECT DISTINCT MU.MU_NM FROM HLDC_SC_DEPT_V MU WHERE MU.MU_CD = A.MU_CD)  AS MU_NM,
		       A.CC_CD,
		       (SELECT  CC_NM FROM SCC_CC WHERE CC_CD = A.CC_CD) AS CC_NM,
		       A.OCCUR_DATE,
		       A.OCCUR_DATE_FR,
		       A.OCCUR_DATE_TO,
		       A.CUST_CD,
		       A.AR_AMT,
		       A.COMM_ACCT_CD,
		       A.COMM_AMT,
		       A.DIFFER_ACCT_CD,
		       A.DIFFER_AMT,
		       DECODE(A.VAT_YN, 'Y', 1, 0) AS VAT_YN,
		       A.VAT_CD,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'TAX_CD' AND CODE = A.VAT_CD) AS VAT_NM,
		       A.VAT_ACCT_CD,
		       A.NEWHGHT_UPJANG,
		       A.TAX_SHET_DATE,
		       A.TAX_BILL_NUM,
		       A.SUPPLY_AMT,
		       A.VAT_AMT,
		       A.USE_AMT,
		       A.BATCH_ID,
		       A.REMARK,
		       A.RECD_STATUS,
		       A.CUSER,
		       A.CDATE,
		       A.UUSER,
		       A.UDATE,
		       B.CC_CD AS CC_CD_SCH,
		       (SELECT  CC_NM FROM SCC_CC WHERE CC_CD = B.CC_CD) AS CC_NM_SCH,
               A.JOURNALZ_YN,
			   A.JOURNALZ_NUM,
		       (SELECT  ORG_LEVEL_CD3 FROM SCC_CC WHERE CC_CD = B.CC_CD) AS TM_CD,
		       (SELECT  ORG_LEVEL_NM3 FROM SCC_CC WHERE CC_CD = B.CC_CD) AS TM_NM,
               (SELECT COUNT(*) FROM SLA_AR_RECEIVE_DETAIL AD WHERE AD.AR_NUM = A.AR_NUM AND AD.RECD_STATUS = 'L') AS ALT_CNT      		       
		FROM   SLA_GIFT_BILLING_MST A,
		       SLA_AR_MST B
		WHERE  1=1
		AND    A.AR_NUM = B.AR_NUM
			<#if giftBillingNum?has_content>AND A.GIFT_BILLING_NUM = :giftBillingNum	</#if>			
			<#if arNum?has_content>AND    A.AR_NUM = :arNum	</#if>	
			<#if occurDateFr?has_content>AND    A.OCCUR_DATE >= :occurDateFr	</#if>	
			<#if occurDateTo?has_content>AND    A.OCCUR_DATE <= :occurDateTo	</#if>	
			<#if giftKindCd?has_content>AND    A.GIFT_KIND_CD = :giftKindCd	</#if>
			<#if muCd?has_content>		AND    A.MU_CD = :muCd</#if>
			<#if ccCd?has_content>		AND    A.CC_CD = :ccCd</#if>
			<#if tmCd?has_content>
				AND     A.CC_CD IN (
				                SELECT  A.CC_CD
				                FROM    SCC_CC A
				                        ,HLDC_SC_DEPT_V B
				                WHERE   B.CC_CD = A.CC_CD
				                AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
				                AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
				                AND     B.TM_CD = :tmCd
				                )
	        </#if>
			AND A.RECD_STATUS = 'L'
		ORDER BY A.GIFT_BILLING_NUM DESC
		]]>
	</statement>
	
	<!-- 상품권환불금 잔액 조회한다. -->
	<statement name="selectBalanceList" type="select">
		
		<![CDATA[
			/*+ com.hwfs.sm.sar.dao.GiftBillingDAO.selectBalanceList */
			
		 	WITH T_BALANCE AS (SELECT S.TRNSDATE, SUM(S.WRBTR) AS WRBTR FROM SAP_IF.SAP_IFC_EXCH_CASH_TRANS	S, 
			    HLDC_SC_DEPT_V H 
			    WHERE 1=1 AND S.PRCTR = H.CC_CD	
			    <#if muCd?has_content>		AND    H.MU_CD = :muCd</#if>
			    <#if tmCd?has_content>		AND    H.TM_CD = :tmCd</#if>
				<#if ccCd?has_content>		AND    H.CC_CD = :ccCd</#if>
		 	 	GROUP BY S.TRNSDATE
		 	 	
		 	 	--외식인 경우 신조직 가져오기 20200219
			    <#if muCd == '2003'>
		 	 	UNION ALL

				SELECT S.TRNSDATE, SUM(S.WRBTR) AS WRBTR FROM SAP_IF.SAP_IFC_EXCH_CASH_TRANS	S, 
					HLDC_SC_DEPT_V H,
					SAP_IF.SAP_IFC_CC_MAP C
				WHERE 1=1 AND S.PRCTR = H.CC_CD	
        			AND    H.CC_CD = C.N_CC_CD
        			AND    H.MU_CD = '1600'
				<#if ccCd?has_content>		AND    C.O_CC_CD = :ccCd</#if>
				GROUP BY S.TRNSDATE
				
				</#if>
		 	 	)
			, T_BALANCE2 AS 
			 (
			 SELECT OCCUR_DATE AS SALES_DATE, SUM(EXCH_AMT) AS CHANGE_AMT 
				FROM SLA_IF_UPJANG_PAYMENT P 
				--LEFT OUTER JOIN SLA_COUPON_KIND_MST C ON P.EVIDENCE_1 = C.COUPON_KIND_CD,
			    , HLDC_SC_DEPT_V H
			    WHERE 1=1 AND P.CC_CD = H.CC_CD	 
				<#if muCd?has_content>		AND    P.MU_CD = :muCd</#if>
			    <#if tmCd?has_content>		AND    H.TM_CD = :tmCd</#if>
				<#if ccCd?has_content>		AND    P.CC_CD = :ccCd</#if>
				AND P.OCCUR_DATE >= '20170701'
				<#if occurDateTo?has_content>AND    P.OCCUR_DATE <= :occurDateTo	</#if>	
				AND (P.PAY_CD = '6' AND P.PAY_CD_NM = '타사상품권')
				AND P.EXCH_AMT <> 0
				AND P.RECD_STATUS = 'L' GROUP BY P.OCCUR_DATE
				
		        UNION ALL
		        
		        SELECT OCCUR_DATE AS SALES_DATE, SUM(EXCH_AMT) AS CHANGE_AMT 
						FROM SLA_IF_UPJANG_PAYMENT P 
						--LEFT OUTER JOIN SLA_COUPON_KIND_MST C ON P.EVIDENCE_1 = C.COUPON_KIND_CD,
						, SLA_COUPON_KIND_MST C
					    , HLDC_SC_DEPT_V H
					    WHERE 1=1 AND P.CC_CD = H.CC_CD	 
					    AND P.EVIDENCE_1 = C.COUPON_KIND_CD
						<#if muCd?has_content>		AND    P.MU_CD = :muCd</#if>
					    <#if tmCd?has_content>		AND    H.TM_CD = :tmCd</#if>
						<#if ccCd?has_content>		AND    P.CC_CD = :ccCd</#if>
						AND P.OCCUR_DATE >= '20170701'
						<#if occurDateTo?has_content>AND    P.OCCUR_DATE <= :occurDateTo	</#if>	
						AND (P.PAY_CD = '4' AND NOT (C.COUPON_GRP_CD = '1' AND FOC_CLASS = '1')) 
						AND P.EXCH_AMT <> 0
						AND P.RECD_STATUS = 'L' GROUP BY P.OCCUR_DATE
				
				)
			
			
			SELECT ROWNUM AS SEQ,
			       Y_AMT,
			       SALES_DATE,
			       REQUEST_AMT, 
			       CHANGE_AMT,
			       T_AMT			
			FROM (
				SELECT 
					(NVL((SELECT SUM(WRBTR) FROM T_BALANCE WHERE TRNSDATE between '20170701' AND C.SALES_DATE-1),0) --신청금액
         			+ NVL((SELECT SUM(TO_NUMBER(A.CODE_NAME)) FROM SCC_COMMON_CODE A, HLDC_SC_DEPT_V B  WHERE A.GROUP_CODE = 'SLE_0119' AND A.CODE = B.CC_CD 
					<#if muCd?has_content>		AND    B.MU_CD = :muCd</#if>
			    	<#if tmCd?has_content>		AND    B.TM_CD = :tmCd</#if>
					<#if ccCd?has_content>		AND    B.CC_CD = :ccCd</#if>
					AND A.USE_YN = 'Y'),0) --이월잔액
					- NVL((SELECT SUM(CHANGE_AMT) FROM T_BALANCE2 A WHERE 1=1
					AND A.SALES_DATE between '20170701' AND C.SALES_DATE-1),0)) AS Y_AMT,  
					C.SALES_DATE, 
					SUM(C.REQUEST_AMT) AS REQUEST_AMT, 
					SUM(C.CHANGE_AMT) AS CHANGE_AMT,
					(NVL((SELECT SUM(WRBTR) FROM T_BALANCE WHERE TRNSDATE between '20170701' AND C.SALES_DATE),0)  --신청금액
         			+ NVL((SELECT SUM(TO_NUMBER(A.CODE_NAME)) FROM SCC_COMMON_CODE A, HLDC_SC_DEPT_V B  WHERE A.GROUP_CODE = 'SLE_0119' AND A.CODE = B.CC_CD 
					<#if muCd?has_content>		AND    B.MU_CD = :muCd</#if>
			    	<#if tmCd?has_content>		AND    B.TM_CD = :tmCd</#if>
					<#if ccCd?has_content>		AND    B.CC_CD = :ccCd</#if> 
					AND A.USE_YN = 'Y'),0) --이월잔액
					- NVL((SELECT SUM(CHANGE_AMT) FROM T_BALANCE2 A WHERE 1=1    
					AND A.SALES_DATE between '20170701' AND C.SALES_DATE),0)) AS T_AMT 
				
				FROM (
					SELECT P.OCCUR_DATE AS SALES_DATE, 0 AS REQUEST_AMT, P.EXCH_AMT AS CHANGE_AMT
				    FROM SLA_IF_UPJANG_PAYMENT  P
				    	,HLDC_SC_DEPT_V H
				    WHERE 1=1
				    AND P.CC_CD = H.CC_CD	
				    <#if muCd?has_content>		AND    P.MU_CD = :muCd</#if>
				    <#if tmCd?has_content>		AND    H.TM_CD = :tmCd</#if>
					<#if ccCd?has_content>		AND    P.CC_CD = :ccCd</#if>	
				    <#if occurDateFr?has_content>AND    P.OCCUR_DATE >= :occurDateFr	</#if>	
					<#if occurDateTo?has_content>AND    P.OCCUR_DATE <= :occurDateTo	</#if>	
				    AND (P.PAY_CD = '6' AND P.PAY_CD_NM = '타사상품권')
				    AND P.EXCH_AMT <> 0
				    AND P.RECD_STATUS = 'L'
				    
				    UNION ALL
				
				    SELECT P.OCCUR_DATE AS SALES_DATE, 0 AS REQUEST_AMT, P.EXCH_AMT AS CHANGE_AMT
				    FROM SLA_IF_UPJANG_PAYMENT  P
            			,SLA_COUPON_KIND_MST C 
				    	,HLDC_SC_DEPT_V H
				    WHERE 1=1
				    AND P.CC_CD = H.CC_CD	
            		AND P.EVIDENCE_1 = C.COUPON_KIND_CD
				    <#if muCd?has_content>		AND    P.MU_CD = :muCd</#if>
				    <#if tmCd?has_content>		AND    H.TM_CD = :tmCd</#if>
					<#if ccCd?has_content>		AND    P.CC_CD = :ccCd</#if>	
				    <#if occurDateFr?has_content>AND    P.OCCUR_DATE >= :occurDateFr	</#if>	
					<#if occurDateTo?has_content>AND    P.OCCUR_DATE <= :occurDateTo	</#if>	
				    AND (P.PAY_CD = '4' AND NOT (C.COUPON_GRP_CD = '1' AND FOC_CLASS = '1'))
				    AND P.EXCH_AMT <> 0
				    AND P.RECD_STATUS = 'L'						    
				
				    UNION ALL
				
				    SELECT S.TRNSDATE SALES_DATE, S.WRBTR AS REQUEST_AMT, 0 AS CHANGE_AMT
				    FROM SAP_IF.SAP_IFC_EXCH_CASH_TRANS S,
				    HLDC_SC_DEPT_V H
				    WHERE 1=1
				    AND S.PRCTR = H.CC_CD	
				    <#if muCd?has_content>		AND    H.MU_CD = :muCd</#if>
				    <#if tmCd?has_content>		AND    H.TM_CD = :tmCd</#if>
					<#if ccCd?has_content>		AND    H.CC_CD = :ccCd</#if>
				    <#if occurDateFr?has_content>AND    S.TRNSDATE >= :occurDateFr	</#if>	
					<#if occurDateTo?has_content>AND    S.TRNSDATE <= :occurDateTo	</#if>	
					
					--외식인 경우 신조직 가져오기 20200219
			    	<#if muCd == '2003'>
		 	 			UNION ALL
				
				    	SELECT S.TRNSDATE SALES_DATE, S.WRBTR AS REQUEST_AMT, 0 AS CHANGE_AMT
				    	FROM SAP_IF.SAP_IFC_EXCH_CASH_TRANS S,
				    		HLDC_SC_DEPT_V H,
							SAP_IF.SAP_IFC_CC_MAP C
								WHERE 1=1 AND S.PRCTR = H.CC_CD	
        							AND    H.CC_CD = C.N_CC_CD
        							AND    H.MU_CD = '1600'
									<#if ccCd?has_content>		AND    C.O_CC_CD = :ccCd</#if>
				    				<#if occurDateFr?has_content>AND    S.TRNSDATE >= :occurDateFr	</#if>	
									<#if occurDateTo?has_content>AND    S.TRNSDATE <= :occurDateTo	</#if>	
					</#if>
					
				) C
				GROUP BY C.SALES_DATE
				ORDER BY C.SALES_DATE
			)
			
			
		]]>
	</statement>

	<!-- 상품권 청구(을)를 등록한다. -->
	<statement name="insert" type="insert">
		/*+ com.hwfs.sm.sar.dao.GiftBillingDAO.insert */
		<![CDATA[
		INSERT INTO TABLE_NAME 
		(
		       COLUMN_NAME1,
			   COLUMN_NAME2,
		       CUSER,
		       CDATE
		)
		VALUES
		(
		       :columnName1,
			   <#if columnName2?has_content> :columnName2, <#else> null, </#if>
		       :loginSabun,
		       SYSDATE
		)
		]]>
	</statement>
	
	<!-- 상품권 청구(을)를 수정한다. -->
	<statement name="update" type="update">
		/*+ com.hwfs.sm.sar.dao.GiftBillingDAO.update */
		<![CDATA[
		UPDATE TABLE_NAME 
		SET    COLUMN_NAME1 = :columnName1,
		       COLUMN_NAME2 = :columnName2,
		       UUSER = :loginSabun,
		       UDATE = SYSDATE
		WHERE  COLUMN_NAME = :columnName
		]]>
	</statement>

	<!-- 상품권 청구(을)를 삭제한다. -->
	<statement name="delete" type="delete">
		/*+ com.hwfs.sm.sar.dao.GiftBillingDAO.delete */
		<![CDATA[
		DELETE 
		FROM   TABLE_NAME 
		WHERE  COLUMN_NAME = :columnName
		]]>
	</statement>

</hqml>
