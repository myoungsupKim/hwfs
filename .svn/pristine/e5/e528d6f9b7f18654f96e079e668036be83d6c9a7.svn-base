<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="../../../default_typedef.xml"/>
  <Form id="form" onkeydown="fn_form_OnKeyDown" onload="form_onload" titletext="병원식수예측" position="absolute 0 0 1252 725" scrollbars="none">
    <Layouts>
      <Layout>
        <Static id="sta_detail05" onclick="sta_detail05_onclick" class="sta_WFDA_Labelbg" position="absolute 0 76 1237 103" anchor="left top right"/>
        <Static id="Static08" class="sta_WFSA_Labelbg" position="absolute 0 30 1237 71" anchor="left top right"/>
        <Static id="Static0" text="식단주기" position="absolute 212 81 296 102"/>
        <Edit id="ed_UPJANG_NM" ontextchanged="ed_UPJANG_NM_OnChanged" onkeydown="ed_UPJANG_NM_OnKeyDown" readonly="true" taborder="1" tooltiptext="업장" position="absolute 72 40 200 61" class="edt_WF_Essential"/>
        <Button id="btn_UPJANG" onclick="btn_UPJANG_OnClick" taborder="2" tabstop="false" text="" position="absolute 199 40 221 61" class="btn_WF_popSearchEssential" image=""/>
        <Combo codecolumn="HALL_CD" datacolumn="HALL_NAME" id="cbo_upjang_hall" index="0" innerdataset="ds_upjang_hall" onitemchanged="cbo_upjang_hall_OnChanged" taborder="3" tooltiptext="식당명" position="absolute 305 40 433 61" class="cmb_WF_Essential"/>
        <Static id="st10" text="사업장" position="absolute 16 39 98 65" class="sta_WFSA_label"/>
        <Static id="Static1" text="식당명" position="absolute 251 39 321 65" class="sta_WFSA_label"/>
        <Static id="Static2" text="제공일" position="absolute 463 39 533 65" class="sta_WFSA_label"/>
        <Calendar enable="false" id="cal_START_DATE" taborder="7" tabstop="false" position="absolute 380 79 480 100" dateformat="yyyy-MM-dd" type="normal"/>
        <Calendar enable="false" id="cal_END_DATE" taborder="8" tabstop="false" position="absolute 484 79 584 100" dateformat="yyyy-MM-dd" type="normal"/>
        <Grid selecttype="cell" autoenter="select" binddataset="ds_EXPECT_MEAL_Pivot" cellmovingtype="col" cellsizingtype="both" readonly="false" enable="true" id="grd_FSH_CYCLE_Pivot" useinputpanel="false" taborder="14" tabstop="true" usecontextmenu="true" useselcolor="false" visible="true" wheelscrollrow="1" position="absolute 0 116 1237 520" anchor="left top right">
          <Formats>
            <Format id="Default">
              <Columns>
                <Column size="110" band="left"/>
                <Column size="50" band="left"/>
              </Columns>
              <Rows>
                <Row size="30" band="head"/>
                <Row size="30"/>
              </Rows>
              <Band id="head">
                <Cell displaytype="text" text="코   너"/>
                <Cell col="1" displaytype="text" text="끼 니"/>
              </Band>
              <Band id="body">
                <Cell displaytype="text" style="align:center;background:#99ccffff;background2:#99ccffff;font:Gulim,9,bold;" text="bind:CORNER_NAME" suppress="1" suppressalign="middle,over"/>
                <Cell col="1" displaytype="text" style="align:center;background:#ffff99ff;background2:#ffff99ff;font:Gulim,9,bold;" text="bind:MEAL_NAME" suppress="3"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Static id="Static01" text="식단목표 식재료율" position="absolute 0 76 143 103" class="sta_WFDA_Label01"/>
        <MaskEdit id="me_GOAL_COST_RATE" mask="###.#" taborder="6" tooltiptext="식단목표 식재료율" position="absolute 145 79 190 100" class="msk_WF_Essential" canchange="me_GOAL_COST_RATE_canchange"/>
        <Static id="Static5" text="%" position="absolute 195 82 208 103"/>
        <Edit enable="false" id="ed_MENU_CYCLE" taborder="22" tabstop="false" tooltiptext="식단주기" visible="false" position="absolute 306 80 313 102" style="align:right;"/>
        <Static id="Static6" text="주기식단일" position="absolute 316 85 385 97"/>
        <Combo codecolumn="CORNER" datacolumn="CORNER_NAME" id="cbo_upjang_corner" index="0" innerdataset="ds_upjang_hall_corner" onitemchanged="cbo_upjang_corner_OnChanged" taborder="10" position="absolute 646 79 742 100"/>
        <Combo codecolumn="MEAL" datacolumn="MEAL_NAME" id="cbo_upjang_hall_meal" index="0" innerdataset="ds_upjang_hall_meal" taborder="11" position="absolute 777 79 853 100"/>
        <Edit id="ed_EXPECT_MEAL_QTY" inputtype="number" taborder="12" tooltiptext="적용식수" position="absolute 977 79 1016 100" style="align:right;" class="edt_WF_Essential"/>
        <Static id="Static8" text="적용코너" position="absolute 597 85 646 97"/>
        <Button id="btn_APPLY_EXPECT_MEAL_QTY" onclick="btn_APPLY_EXPECT_MEAL_QTY_OnClick" taborder="13" text="식수일괄적용" position="absolute 1018 78 1118 101" class="btn_WF_Custom" image=""/>
        <Grid selecttype="cell" autoenter="select" binddataset="ds_PRE_EXPECT_MEAL_Pivot" cellmovingtype="col" cellsizingtype="both" readonly="false" enable="true" id="grd_PRE_FSH_CYCLE_Pivot" useinputpanel="false" taborder="15" tabstop="false" usecontextmenu="true" useselcolor="false" visible="true" wheelscrollrow="1" position="absolute 0 581 1237 710" anchor="all">
          <Formats>
            <Format id="Default">
              <Columns>
                <Column size="110" band="left"/>
                <Column size="50" band="left"/>
              </Columns>
              <Rows>
                <Row size="30" band="head"/>
                <Row size="30"/>
              </Rows>
              <Band id="head">
                <Cell displaytype="text" text="코   너"/>
                <Cell col="1" displaytype="text" text="끼 니"/>
              </Band>
              <Band id="body">
                <Cell displaytype="text" style="align:center;background:#99ccffff;background2:#99ccffff;font:Gulim,9,bold;" text="bind:CORNER_NAME" suppress="1" suppressalign="middle,over"/>
                <Cell col="1" displaytype="text" style="align:center;background:#ffff99ff;background2:#ffff99ff;font:Gulim,9,bold;" text="bind:MEAL_NAME" suppress="3"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btn_PRE_Search" onclick="btn_PRE_Search_OnClick" taborder="17" tabstop="false" text="식수 조회" position="absolute 1036 557 1112 580" class="btn_WF_Custom" image="" anchor="top right"/>
        <Static id="Static12" text="발주자재가 있는 식단, 식단(실재식단)에 실식수 인원이 등록되어 있는 경우 입력 또는 수정 할 수 없습니다." position="absolute 1 539 965 552" class="sta_WF_DiscPoint"/>
        <MaskEdit id="cal_PRE_START_DATE" mask="####-##-##" oneditclick="g_Date_OnFocus" onsetfocus="g_Date_OnFocus" onkeydown="ed_pop_OnKeyDown" onkillfocus="g_Date_OnKillFocus" taborder="18" tabstop="false" type="string" userdata="btn_PRE_START_DATE" position="absolute 814 558 914 580" class="msk_WF_Cal" anchor="top right"/>
        <Button id="btn_PRE_START_DATE" onclick="g_CalButton_OnClick" taborder="19" tabstop="false" userdata="cal_PRE_START_DATE" position="absolute 893 558 914 580" class="btn_WF_cal" text="" image="" anchor="top right"/>
        <MaskEdit id="cal_PRE_END_DATE" mask="####-##-##" oneditclick="g_Date_OnFocus" onsetfocus="g_Date_OnFocus" onkeydown="ed_pop_OnKeyDown" onkillfocus="g_Date_OnKillFocus" taborder="20" tabstop="false" type="string" userdata="btn_PRE_END_DATE" position="absolute 934 558 1034 580" class="msk_WF_Cal" anchor="top right"/>
        <Button id="btn_PRE_END_DATE" onclick="g_CalButton_OnClick" taborder="21" tabstop="false" userdata="cal_PRE_END_DATE" position="absolute 1012 558 1034 580" class="btn_WF_cal" text="" image="" anchor="top right"/>
        <Static id="Static10" text="~" position="absolute 920 567 929 572" anchor="top right"/>
        <Combo codecolumn="CORNER" datacolumn="CORNER_NAME" id="cbo_SEARCH_CORNER" index="0" innerdataset="ds_upjang_hall_corner" onitemchanged="cbo_SEARCH_CORNER_OnChanged" taborder="5" position="absolute 766 40 890 61"/>
        <Static id="Static11" text="코너" position="absolute 725 39 779 65" class="sta_WFSA_label"/>
        <Calendar canchange="cal_MENU_DATE_CanChange" id="cal_MENU_DATE" onchanged="cal_MENU_DATE_OnChanged" taborder="4" tooltiptext="제공일" position="absolute 517 40 617 61" dateformat="yyyy-MM-dd" type="normal" class="cal_WF_Essential"/>
        <Static id="Static13" text="끼니" position="absolute 920 39 962 65" class="sta_WFSA_label"/>
        <Combo codecolumn="MEAL" datacolumn="MEAL_NAME" id="cbo_SEARCH_MEAL" index="-1" innerdataset="ds_upjang_hall_meal" taborder="37" position="absolute 961 40 1041 61"/>
        <Static id="Static9" text="기  간" position="absolute 743 558 813 580" class="sta_WFDA_Label01" anchor="top right"/>
        <Button id="btn_APPLY_PRE_EXPECT_MEAL_QTY" onclick="btn_APPLY_PRE_EXPECT_MEAL_QTY_OnClick" taborder="40" tabstop="false" text="과거식수 적용하기" position="absolute 1113 557 1237 580" class="btn_WF_Custom" image="" anchor="top right"/>
        <Static id="Static7" text="적용식수" position="absolute 915 76 975 103" class="sta_WFDA_Label01"/>
        <Edit enable="false" id="ed_MENU_CYCLE_NAME" taborder="44" tabstop="false" tooltiptext="업장주기" position="absolute 264 80 307 102" style="align:right;"/>
        <Static id="Static14" text="끼니" position="absolute 749 85 778 97"/>
        <CheckBox id="chk_MONTH" onclick="chk_MONTH_OnClick" taborder="49" text="한달조회" tooltiptext="한달조회를 하시면 제공일부터 해당월 마지막 날까지 조회가 됩니다." value="false" position="absolute 619 40 690 61"/>
        <Div id="div_cmnBtn" anchor="left top right" taborder="51" url="cmn::CmnBtn.xfdl" text="Div00" scrollbars="none" position="absolute 0 0 1237 30"/>
        <Static id="Static15" text="h06" onclick="Static03_onclick" class="Guide01_AreaRed" visible="false" position="absolute 0 71 144 84" anchor="top right"/>
        <Static id="Static16" text="h06" onclick="Static03_onclick" class="Guide01_AreaRed" visible="false" position="absolute 1093 71 1237 77" anchor="top right"/>
        <Static id="Static23" text="W15" visible="false" position="absolute 1 40 16 61" style="background:#ff000055;align:center middle;"/>
        <Static id="Static18" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 62 40 72 61"/>
        <Static id="Static20" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 221 40 251 61"/>
        <Static id="Static21" text="W10" visible="false" position="absolute 0 30 1237 40" style="background:#ff000055;align:center middle;"/>
        <Static id="Static05" text="W10" visible="false" position="absolute 0 61 1237 71" style="background:#ff000055;align:center middle;"/>
        <Static id="Static24" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 295 40 305 61"/>
        <Static id="Static25" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 433 40 463 61"/>
        <Static id="Static26" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 507 40 517 61"/>
        <Static id="Static27" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 695 40 725 61"/>
        <Static id="Static28" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 756 40 766 61"/>
        <Static id="Static17" text="w15" onclick="Static06_onclick" class="Guide01_AreaRed" visible="false" position="absolute 1237 0 1252 710" anchor="top right"/>
        <Static id="Static71" text="h15" onclick="Static71_onclick" class="Guide01_AreaRed" visible="false" position="absolute 0 710 1252 725" anchor="left bottom"/>
        <Static id="Static22" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 890 40 920 61"/>
        <Static id="Static29" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 951 40 961 61"/>
        <Static id="Static03" text="h06" onclick="Static03_onclick" class="Guide01_AreaRed" visible="false" position="absolute 1093 103 1237 109" anchor="top right"/>
        <Static id="Static04" text="h05" class="Guide01_AreaRed" visible="false" position="absolute 1093 129 1237 134" anchor="top right"/>
        <Static id="Static30" text="h06" onclick="Static03_onclick" class="Guide01_AreaRed" visible="false" position="absolute 0 103 144 116" anchor="top right"/>
        <Static id="Static31" text="과거식단 예측식수/실식수 조회" onclick="Static22_onclick" class="sta_WF_Title01" position="absolute 0 566 328 597" anchor="left top"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_upjang_hall"/>
      <Dataset id="ds_input">
        <ColumnInfo>
          <Column id="UPJANG" size="256" type="STRING"/>
          <Column id="UPJANG_NM" size="256" type="STRING"/>
          <Column id="HALL_CD" size="256" type="STRING"/>
          <Column id="MENU_DATE" size="256" type="STRING"/>
          <Column id="MENU_SDATE" size="256" type="STRING"/>
          <Column id="MENU_EDATE" size="256" type="STRING"/>
          <Column id="CURR_DATE" size="256" type="STRING"/>
          <Column id="COPY_FLAG" size="256" type="STRING"/>
          <Column id="EMP_NO" size="256" type="STRING"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="COPY_FLAG"/>
            <Col id="CURR_DATE"/>
            <Col id="EMP_NO"/>
            <Col id="HALL_CD"/>
            <Col id="MENU_DATE"/>
            <Col id="MENU_EDATE"/>
            <Col id="MENU_SDATE"/>
            <Col id="UPJANG"/>
            <Col id="UPJANG_NM"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_upjang_hall_corner">
        <ColumnInfo>
          <Column id="CORNER" size="256" type="STRING"/>
          <Column id="CORNER_NAME" size="256" type="STRING"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CORNER"/>
            <Col id="CORNER_NAME"/>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_EXPECT_MEAL" oncolumnchanged="ds_EXPECT_MEAL_OnColumnChanged">
        <ColumnInfo>
          <Column id="CYCLE_CD" size="12" type="STRING"/>
          <Column id="MENU_CD" size="71" type="STRING"/>
          <Column id="MENU_DATE" size="10" type="STRING"/>
          <Column id="MENU_DAYS" size="100" type="STRING"/>
          <Column id="UPJANG" size="22" type="BIGDECIMAL"/>
          <Column id="HALL_CD" size="20" type="STRING"/>
          <Column id="MEAL" size="20" type="STRING"/>
          <Column id="MEAL_NAME" size="100" type="STRING"/>
          <Column id="CORNER" size="20" type="STRING"/>
          <Column id="CORNER_NAME" size="100" type="STRING"/>
          <Column id="SUBINV_CODE" size="8" type="STRING"/>
          <Column id="SALE_PRICE" size="22" type="BIGDECIMAL"/>
          <Column id="EXPECT_MEAL_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="MODIFY_YN1" size="2" type="STRING"/>
          <Column id="MODIFY_YN2" size="2" type="STRING"/>
          <Column id="FLAG" size="2" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_GOAL_COST_RATE" oncolumnchanged="ds_GOAL_COST_RATE_OnColumnChanged">
        <ColumnInfo>
          <Column id="MENU_DATE" size="10" type="STRING"/>
          <Column id="UPJANG" size="22" type="BIGDECIMAL"/>
          <Column id="HALL_CD" size="20" type="STRING"/>
          <Column id="GOAL_COST_RATE" size="22" type="BIGDECIMAL"/>
          <Column id="FLAG" size="1" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_upjang_hall_meal">
        <ColumnInfo>
          <Column id="MEAL" size="256" type="STRING"/>
          <Column id="MEAL_NAME" size="256" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_PRE_EXPECT_MEAL" oncolumnchanged="ds_EXPECT_MEAL_OnColumnChanged">
        <ColumnInfo>
          <Column id="CYCLE_CD" size="12" type="STRING"/>
          <Column id="MENU_CD" size="71" type="STRING"/>
          <Column id="MENU_DATE" size="10" type="STRING"/>
          <Column id="MENU_DAYS" size="100" type="STRING"/>
          <Column id="UPJANG" size="22" type="BIGDECIMAL"/>
          <Column id="HALL_CD" size="20" type="STRING"/>
          <Column id="MEAL" size="20" type="STRING"/>
          <Column id="MEAL_NAME" size="100" type="STRING"/>
          <Column id="CORNER" size="20" type="STRING"/>
          <Column id="CORNER_NAME" size="100" type="STRING"/>
          <Column id="SUBINV_CODE" size="8" type="STRING"/>
          <Column id="SALE_PRICE" size="22" type="BIGDECIMAL"/>
          <Column id="EXPECT_MEAL_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="REAL_MEAL_QTY" size="22" type="BIGDECIMAL"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_EXPECT_MEAL_Pivot" oncolumnchanged="ds_EXPECT_MEAL_Pivot_oncolumnchanged"/>
      <Dataset id="ds_PRE_EXPECT_MEAL_Pivot"/>
    </Objects>
    <Bind>
      <BindItem id="ed_UPJANG_NM_value" compid="ed_UPJANG_NM" propid="value" datasetid="ds_input" columnid="UPJANG_NM"/>
      <BindItem id="cbo_upjang_hall_value" compid="cbo_upjang_hall" propid="value" datasetid="ds_input" columnid="HALL_CD"/>
      <BindItem id="cal_PRE_START_DATE_value" compid="cal_PRE_START_DATE" propid="value" datasetid="ds_input" columnid="MENU_SDATE"/>
      <BindItem id="cal_PRE_END_DATE_value" compid="cal_PRE_END_DATE" propid="value" datasetid="ds_input" columnid="MENU_EDATE"/>
      <BindItem id="item5" compid="sta_detail05" propid="text" datasetid="ds_view" columnid="D_1"/>
    </Bind>
    <Script type="xscript4.0"><![CDATA[include "U_lib::lib_conversionCom.xjs";
/*
 ******************************************************************************************
 * 시스템구분: IFIS/식단관리/식단등록(병원)
 * 프로그램명: FSM00223E.XML
 * 기ㅡㅡㅡ능: 식단등록(병원)-병원식수예측
 * 작ㅡ성ㅡ자: 한화S&C 박종세
 * 작성ㅡ일자: 2008-05-13
 * ----------------------------------------------------------------------------------------
 * HISTORY    : 
 ******************************************************************************************
 */
//=========================================================================================
// [ PART 1 ]
// Form에서 Include 할 내용을 정의
//
//========================================================================================= 
//@@컨버터에서 주석처리 #include "lib::tit_comm_0001.js"
//@@컨버터에서 주석처리 #include "LIB::lib_comm_0001.js"
//@@컨버터에서 주석처리 #include "lib::sc_comon.js"
//@@컨버터에서 주석처리 #include "lib::sc_sql_common.js"		// 사업장팝업용 Lib
//@@컨버터에서 주석처리 #include "lib::fs_common.js"

//=========================================================================================
// [ PART 2 ]
// Form에서 사용될 전역변수를 선언
//
//=========================================================================================
//=========================================================================================
// [ PART 3 ]
// Form Loading 시 작업 정의
//
//=========================================================================================
function form_onload(obj:Form, e:LoadEventInfo)
{
	gfn_formOnLoad(obj, false);

	   //폼 초기화
		fn_InitForm(obj);
}

//폼 초기화
function fn_InitForm(obj)
{
	// action 정보 생성 초기화 
	fsp_init(this);		
	
	
	//사업장 권한 셋팅
	fn_SetAuth("","","ed_UPJANG_NM", "btn_UPJANG");
	
	
	// 폼 데이터 초기화
	fn_InitData(false);
	
	
	//////////////////////////////////////////////////////
	/// 식단등록 화면은 점에 속해 있는 인원외에는 불가능하다
	/// 2008.05.16
	/////////////////////////////////////////////////////
   	if(toNumber(g_AuthLevel) < 99)
	{
		ed_UPJANG_NM.enable = false;
		btn_UPJANG.enable = false;
	}
}

// 폼데이터 초기화 
function fn_InitData(blnAllClear)
{
   	/////////////////////////////////////////////////////
	/// 식단등록은 2008년 7월 1일부터 가능하다.
	////////////////////////////////////////////////////
	if(gfn_today()<"20080701")
	{
		cal_MENU_DATE.value ="20080701";
	}
	else
	{
		cal_MENU_DATE.value=gfn_today();   
	}
    
    
    
	//로그인한 사용자 업장 셋팅
	ds_input.setColumn(0,"UPJANG_NM",g_UpjangNm);	
	ds_input.setColumn(0,"UPJANG",g_Upjang);	
	
	//초기화 후
	fn_After_InitData();
}

//초기화 콜백함수
function fn_After_InitData()
{
    //식당조회
	fn_Upjang_HallSearch();
}


//=========================================================================================
// [ PART 4 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,도움말,form닫기)
//
//=========================================================================================
/*------------------------------------------------------------
	1. Function ID : fn_Search()
	2. 개       요 : 업무프로세스에 따른 조회작업
	3. 기       능 : 검색버튼 입력 시 처리되는 작업
	4. 인 수 설 명:
*------------------------------------------------------------*/
function fn_search()
{
	  //필수 입력사항 체크-----------------------------------------------------------------------
	   if (!fn_Chk_SearchKey()) return false;
	
	  //조회 조건만들기-----------------------------------------------------------------------
	   var otherArg;
	   otherArg		= otherArg + " UPJANG="+wrapQuote(ds_input.getColumn(0,"UPJANG"));
	   otherArg		= otherArg + " HALL_CD="+wrapQuote(gfn_trim(cbo_upjang_hall.value));
	   otherArg		= otherArg + " CORNER="+wrapQuote(gfn_trim(cbo_SEARCH_CORNER.value));
	   otherArg		= otherArg + " MEAL="+wrapQuote(gfn_trim(cbo_SEARCH_MEAL.value));
	   
	   
	   //한달조회가 체크되어 있다면 - 한달 단위로 조회한다.
	   if(chk_MONTH.value==1)
	   {	
		otherArg		= otherArg + " START_DATE="+wrapQuote(gfn_subStr(cal_START_DATE.value,0,6)+"01");
	  	otherArg		= otherArg + " END_DATE="+wrapQuote(getLastDay(gfn_subStr(this.cal_MENU_DATE.value,0,6)));
	   }
	   //한달조회가 체크되어 있지 않다면 -- 주기식단 주기로 조회한다.
	   else
	   {
		otherArg		= otherArg + " START_DATE="+wrapQuote(cal_START_DATE.value);
	  	otherArg		= otherArg + " END_DATE="+wrapQuote(cal_END_DATE.value);
	   }
	   
	  // action 정보 삭제 초기화 
	   fsp_clear(this);
		
	  // 서버에서 조회할 정보 추가 -->> 식수예측
	  fsp_addSearch(this, "fs/fsm:FSM00223E_S001");
			
	  // 서버 호출 
	  http.Sync = true;
	  fsp_callService(this, "", "", "", "ds_EXPECT_MEAL=ds_EXPECT_MEAL" , otherArg, "fn_After_Search");	
	  //조회 실행-----------------------------------------------------------------------------
	  http.Sync = false;	  
	  
}

// 조회 후 콜백 함수 
function fn_After_Search()
{

   //식당 식재료율을 가져온다.
	fn_Search_Hall_Goal_cost_rate();

   // 데이터셋 플래그 클리어
    ds_EXPECT_MEAL.applyChange();
    ds_PRE_EXPECT_MEAL.applyChange();
    
    
    
    //초기화
    for (var i=grd_FSH_CYCLE_Pivot.getFormatColCount()-1; i>1; i--) {
		grd_FSH_CYCLE_Pivot.deleteContentsCol("body", i, false);
    }   
    
    
    // 컬럼 구조 생성 및 값 셋팅
    ds_EXPECT_MEAL_Pivot.enableevent = false;
    
    ds_EXPECT_MEAL.keystring = "S:+CORNER+MEAL+MENU_DATE";
        
    ds_EXPECT_MEAL_Pivot.clear();    
    ds_EXPECT_MEAL_Pivot.addColumn("CORNER","string");
    ds_EXPECT_MEAL_Pivot.addColumn("CORNER_NAME","string");
    ds_EXPECT_MEAL_Pivot.addColumn("MEAL","string");
    ds_EXPECT_MEAL_Pivot.addColumn("MEAL_NAME","string");    
        
    var sCurMeal = "";
    var sOrgMeal = "";
    for (var i=0; i<ds_EXPECT_MEAL.rowcount; i++) {
		
		var sCorner = ds_EXPECT_MEAL.getColumn(i, "CORNER");
		sCurMeal = ds_EXPECT_MEAL.getColumn(i, "MEAL");
		
		var sMenuDate = ds_EXPECT_MEAL.getColumn(i, "MENU_DATE");		
		var nAddRow = -1;
		if (sCurMeal != sOrgMeal) {
			nAddRow = ds_EXPECT_MEAL_Pivot.addRow();
			ds_EXPECT_MEAL_Pivot.setColumn(nAddRow, "CORNER", ds_EXPECT_MEAL.getColumn(i, "CORNER"));
			ds_EXPECT_MEAL_Pivot.setColumn(nAddRow, "CORNER_NAME", ds_EXPECT_MEAL.getColumn(i, "CORNER_NAME"));
			ds_EXPECT_MEAL_Pivot.setColumn(nAddRow, "MEAL", ds_EXPECT_MEAL.getColumn(i, "MEAL"));
			ds_EXPECT_MEAL_Pivot.setColumn(nAddRow, "MEAL_NAME", ds_EXPECT_MEAL.getColumn(i, "MEAL_NAME"));			
			
		}
		if (ds_EXPECT_MEAL_Pivot.rowcount == 1) {
			ds_EXPECT_MEAL_Pivot.addColumn("date"+sMenuDate, "string");	
						
			var nAppendCol = grd_FSH_CYCLE_Pivot.appendContentsCol();
			if (nAppendCol > -1) {
				grd_FSH_CYCLE_Pivot.setFormatColProperty(nAppendCol, "size", 70);
				grd_FSH_CYCLE_Pivot.setCellProperty("head", nAppendCol, "text", gfn_right(sMenuDate,2)+"일("+ds_EXPECT_MEAL.getColumn(i, "MENU_DAYS")+")");
				grd_FSH_CYCLE_Pivot.setCellProperty("body", nAppendCol, "text", "bind:date"+sMenuDate);
				grd_FSH_CYCLE_Pivot.setCellProperty("body", nAppendCol, "displaytype", "number");
				grd_FSH_CYCLE_Pivot.setCellProperty("body", nAppendCol, "editautoselect", "true");
				grd_FSH_CYCLE_Pivot.setCellProperty("body", nAppendCol, "edittype", "expr:setEditExpr(fn_ExprEditType('"+sMenuDate+"',CORNER,MEAL))");
				grd_FSH_CYCLE_Pivot.setCellProperty("body", nAppendCol, "mask", "#,##0");
				grd_FSH_CYCLE_Pivot.setCellProperty("body", nAppendCol, "align", "middle");
				grd_FSH_CYCLE_Pivot.setCellProperty("body", nAppendCol, "editfilter", "expr:setfilterExpr(fn_ExprEditType('"+sMenuDate+"',CORNER,MEAL))");
				grd_FSH_CYCLE_Pivot.setCellProperty("body", nAppendCol, "background", "EXPR(fn_ExprBkColor('"+sMenuDate+"',CORNER,MEAL))");
				grd_FSH_CYCLE_Pivot.setCellProperty("body", nAppendCol, "background2", "EXPR(fn_ExprBkColor('"+sMenuDate+"',CORNER,MEAL))");
			}
		}
		ds_EXPECT_MEAL_Pivot.setColumn(ds_EXPECT_MEAL_Pivot.rowposition, "date"+sMenuDate, ds_EXPECT_MEAL.getColumn(i, "EXPECT_MEAL_QTY"));		
		
		
		sOrgMeal = sCurMeal;		
    }
    
    ds_EXPECT_MEAL.keystring = "";
    ds_EXPECT_MEAL_Pivot.enableevent = true;    
}

function fn_ExprEditType(sDate, sCorner, sMeal)
{
	var nFindRow = ds_EXPECT_MEAL.findRowExpr("MENU_DATE=='"+sDate+"' && CORNER=='"+sCorner+"' && MEAL=='"+sMeal+"'");
	if (nFindRow > -1) {
		var sModify1 = ds_EXPECT_MEAL.getColumn(nFindRow, "MODIFY_YN1");
		var sModify2 = ds_EXPECT_MEAL.getColumn(nFindRow, "MODIFY_YN2");
		//trace(sDate + ":" + sCorner + ":" + sMeal + ":" + sModify1 + ":" + sModify2);
		if (sModify1 == "Y" && sModify2 == "Y") {
			return "maskinteger";
		}
	}
}

function fn_ExprBkColor(sDate, sCorner, sMeal)
{
	var nFindRow = ds_EXPECT_MEAL.findRowExpr("MENU_DATE=='"+sDate+"' && CORNER=='"+sCorner+"' && MEAL=='"+sMeal+"'");
	if (nFindRow > -1) {
		var sModify1 = ds_EXPECT_MEAL.getColumn(nFindRow, "MODIFY_YN1");
		var sModify2 = ds_EXPECT_MEAL.getColumn(nFindRow, "MODIFY_YN2");
		var sMenuDays = ds_EXPECT_MEAL.getColumn(nFindRow, "MENU_DAYS");
		//trace(sDate + ":" + sCorner + ":" + sMeal + ":" + sModify1 + ":" + sModify2);
		if (sModify1 != "Y" || sModify2 != "Y") {
			return "#EEEEEE";
		} else {
			if (sMenuDays == "일") {
				return "#FFDCFF";
			} else if (sMenuDays == "토") {
				return "#E8F5FF";
			} else {
				return "#FFFFFF"
			}
		}
	}
}



// 조회 조건 검색
function fn_Chk_SearchKey()
{
   //체크로직- 틀리면 return false;    
   //업장
   if(!mfn_Chk_Obj_MustInput(ed_UPJANG_NM)) return false;
   
   //식당명
   if(!mfn_Chk_Obj_MustInput(cbo_upjang_hall)) return false;   
   
   //업장주기
   //if(!mfn_Chk_Obj_MustInput(ed_MENU_CYCLE)) return false;
   if(gfn_length(ed_MENU_CYCLE.value)==0)
   {
	  g_Message("EE","식단주기가 설정되어 있지 않습니다.\n\n식단주기를 설정한 후 사용하여 주십시요.");
 	  return false;
   }
   
   
   return true;
}


/*------------------------------------------------------------
	1. Function ID : fn_Insert()
	2. 개       요 : 업무프로세스에 따른 입력작업
	3. 기       능 : 입력버튼 입력 시 처리되는 작업
	4. 인 수 설 명:
*------------------------------------------------------------*/
function fn_insert()
{
   //데이터셋 로우 추가
   //ds_template_obj.AddRow();		
   //신규추가시 기본값 설정
   //fn_SetDefaultNewRow();
}

// 신규추가시 기본값 설정
function fn_SetDefaultNewRow()
{   
}

/*------------------------------------------------------------
	1. Function ID : fn_Delete()
	2. 개       요 : 업무프로세스에 따른 정보 삭제작업
	3. 기       능 : 삭제버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
*------------------------------------------------------------*/
function fn_delete()
{
    // 삭제 확인메세지 호출
	//if (!fn_Call_DeleteMsg()){ return false; }							
    // 데이터셋이 Insert일 경우는 DeleteRow만 실행한다. 
    //if(fn_chk_rowtypeInsert_deleteRow(ds_template_obj)){return false;}
	// TO DO 식당마스터를 삭제하기전에  지울수 있는지 확인한다.				
	//if(!fn_chk_canDeleteRow(ds_template_obj)){return false;}				
	// 데이터셋 삭제
	//ds_template_obj.DeleteRow(ds_template_obj.row);
	// 트랜잭션 시작 
	//tit_clearActionInfo(this);
	//삭제
	//tit_addSaveActionInfo(this, "", "","fs/fsa:FSA00050E_D003", "", "", "", "");
	// 서버 호출 
	//tit_callService(this, "", "", "ds_in=ds_template_obj:U", "", "", "fn_After_Delete()");
	// 트랜잭션 종료 
	//}
}
//삭제 후 콜백 함수 
function fn_After_Delete()
{
}

//삭제 가능여부 체크
function fn_chk_canDeleteRow(ds_template_obj)
{
	//체크로직- 틀리면 return false;
	return true;
}
/*------------------------------------------------------------
	1. Function ID : fn_Save()
	2. 개       요 : 업무프로세스에 따른 정보 저장작업
	3. 기       능 : 저장버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
*------------------------------------------------------------*/
function fn_save()
{
 	// 데이터 유효성 검사
	 if (!fn_DataValidation()){	return false; }
	 			
	// action 정보 초기화 
	fsp_clear(this);
			
	//FLAG 컬럼을 가져와서 처리한다.
	//실제식단 insert / update		
	fsp_addSave(this
			, "fs/fsm:FSM00223E_I001"
			, "fs/fsm:FSM00223E_U001"
			, ""
			, "FLAG"
			, ""
			, ""
			, ""
			);
	//주기식단 insert / update
	fsp_addSave(this
			, "fs/fsm:FSM00223E_I002"
			, "fs/fsm:FSM00223E_U002"
			, ""
			, "FLAG"
			, ""
			, ""
			, ""
			);
						
    //식재료율 insert / update
	fsp_addSave(this
			, "fs/fsm:FSM00223E_I003"
			, "fs/fsm:FSM00223E_U003"
			, ""
			, "FLAG"
			, ""
			, ""
			, ""
			);						
						
	// 서버 호출 후 조회 
	fsp_callService(this, "", "", "ds_EXPECT_MEAL=ds_EXPECT_MEAL:U ds_GOAL_COST_RATE=ds_GOAL_COST_RATE:U", "" , "", "fn_After_Save()");
	// 트랜잭션 종료 
}

//저장 후 콜백 함수 
function fn_After_Save()
{
	//다시조회 - 입력후 바로 수정시 에러발생
	fn_search(); 
}

//데이터 유효성검사
function fn_DataValidation()
{
    //체크로직- 틀리면 return false;
    //변경데이터 검사
	if((!gfn_dsIsUpdated(ds_EXPECT_MEAL))&&(!gfn_dsIsUpdated(ds_GOAL_COST_RATE))){gfn_alert("변경된 데이터가 없습니다."); return false;}
  
    if(!mfn_Chk_Obj_MustInput(me_GOAL_COST_RATE)) return false;   
    
    return true;
}

/*------------------------------------------------------------
	1. Function ID : fn_Print()
	2. 개       요 : 업무프로세스에 따른 인쇄 처리
	3. 기       능 : 인쇄버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
*------------------------------------------------------------*/
function fn_print()
{
}

/*------------------------------------------------------------
	1. Function ID : fn_Close()
	2. 개       요 : 업무프로세스에 따른 폼 종료 
	3. 기       능 : 닫기버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
*------------------------------------------------------------*/
function fn_Close()
{
	this.close();
}

/*------------------------------------------------------------
	1. Function ID : fn_Help()
	2. 개       요 : 업무프로세스에 따른 도움말 
	3. 기       능 : 도움말버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
*------------------------------------------------------------*/
function fn_help()
{
}

//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
//
//=========================================================================================

//=========================================================================================
// [ PART 6 ]
// component Event 정의 ( User Define function )
// --> component Event의 기요,기능,동작 등 상세내용은 MiPlatform 메뉴얼을 참조하시기 바랍니다.
//=========================================================================================

/*
 ******************************************************************************************
 * 함  수  명   : btn_UPJANG_OnClick(obj)
 * 기      능   : 팝업버튼 클릭 -> 사업장 조회
 * 작  성  자   : 박종세
 * 작성  일자   : 2007-01-16  
 ******************************************************************************************
 */
function btn_UPJANG_OnClick(obj:Button, e:ClickEventInfo)
{	
	fn_sql_common_setup(fn_MakeUpjangSQL(), 
						strMAQuery_UpjangKeyField, 
						strMAQuery_UpjangValueField, 
						strMAQuery_UpjangKeyFieldNM, 
						strMAQuery_UpjangValueFieldNM, 
						"", 
						"",
						"",   // 팀 비교
						strMAQuery_UpjangCaption
						,"UPJANG;UPJANGNM");
		
    if (gds_sql_common.getColumn(0, "ret_code") != "")
    {
		ds_input.setColumn(0,"UPJANG",gds_sql_common.getColumn(0, "ret_code"));
		ds_input.setColumn(0,"UPJANG_NM",gds_sql_common.getColumn(0, "ret_name"));

		//업장 식당조회
		fn_Upjang_HallSearch();
		//업장식당으로 Focus
		cbo_upjang_hall.setFocus();
    }
    else
    {
    	ds_input.setColumn(0,"UPJANG","");
		ds_input.setColumn(0,"UPJANG_NM","");
		ds_upjang_hall.filter("");
    }
}
function ed_UPJANG_NM_OnKeyDown(obj:Edit, e:KeyEventInfo)
{
	if(e.keycode == "13") {
		btn_UPJANG.click();
		return;
	}
	
}
function ed_UPJANG_NM_OnChanged(obj:Edit, e:TextChangedEventInfo)
{
	fn_Upjang_HallSearch();
}

/*
 ******************************************************************************************
 * 함  수  명   : fn_Upjang_HallSearch()
 * 입      력   : 
 * 반      환   : 없음
 * 기      능   : 식당 정보를 콤보에 연결
 * 작  성  자   : 박종세
 * 작성  일자   : 2007-12-20 
 ******************************************************************************************
 */
function fn_Upjang_HallSearch()
{
	// 식당 조회
	var actionName, cmdName, inData, outData, otherArg, callBackFnc;
	
	inData			= "";
	outData			= "ds_upjang_hall=gds_Csqlout";
	callBackFnc		= "fn_Upjang_HallSearch_After";
	otherArg		= "UPJANG="+wrapQuote(ds_input.getColumn(0,"UPJANG"));

	fsp_clear(this); 
    fsp_addSearch(this, "fs/fsc:FSA_HALL_MST_S001");								// 조회 
	http.Sync = true;
    fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);		// 서비스 호출 
	http.Sync = false;
	
	
	 
}

// 식당조회 후 
function fn_Upjang_HallSearch_After(errCode, errMsg)
{
	if(errCode!=0)
	{	g_Message("EE",	"서비스 오류:시스템 관리자에게 문의하십시오");
		return;
	}
	
	////////////////////////////////////////////	
	//메뉴사이클이 지정된 식당만 조회한다.
	ds_upjang_hall.filter("gfn_length(MENU_CYCLE)>0");
	/////////////////////////////////////////////
	
	// 초기값 셋팅
	cbo_upjang_hall.index = 0;
	//코너 값 셋팅
	fn_Upjang_Hall_CornerSearch();
	// 식당의 주기식단데이터 값 셋팅
	//fn_MENU_CYCLE_to_DAYS(ds_upjang_hall.GetColumn(0,"MENU_CYCLE"),"1");
	ed_MENU_CYCLE.value = ds_upjang_hall.getColumn(0,"MENU_CYCLE");
	//메뉴사이클로 시작일 종료일 셋팅
	fn_MENU_CYCLE(ed_MENU_CYCLE.value);
	//과거 제공일-->> 주기 시작일을 구한 후 ==>> 과저데이터를 Setting 한다.
	fn_Set_Pre_Date();
}


////////////////////식당 변경시 이벤트///////////////////////
function cbo_upjang_hall_OnChanged(obj:Combo, e:ItemChangeEventInfo)
{
	//초기화
    for (var i=grd_FSH_CYCLE_Pivot.getFormatColCount()-1; i>1; i--) {
		grd_FSH_CYCLE_Pivot.deleteContentsCol("body", i, false);
    }   
    for (var i=grd_PRE_FSH_CYCLE_Pivot.getFormatColCount()-1; i>1; i--) {
		grd_PRE_FSH_CYCLE_Pivot.deleteContentsCol("body", i, false);
    }   

	//식당의 코너 값 셋팅
	fn_Upjang_Hall_CornerSearch();
	
	//식당의 식재료율을 가져온다.
	fn_Search_Hall_Goal_cost_rate();
		
	
	//식당의 주기를 다시 가져온다.
	ed_MENU_CYCLE.value = ds_upjang_hall.getColumn(e.postindex,"MENU_CYCLE");

	//메뉴사이클로 시작일 종료일 셋팅
	fn_MENU_CYCLE(ed_MENU_CYCLE.value);

	//제공일-->> 주기 시작일을 구한 후 ==>> 과거데이터를 Setting 한다.
	fn_Set_Pre_Date();
	
		
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	//****** 중요.:::::: 조회 데이터를 Clear 시킨다.
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	ds_PRE_EXPECT_MEAL_Pivot.clear();
	ds_EXPECT_MEAL_Pivot.clear();
	ds_EXPECT_MEAL.clearData();
	ds_PRE_EXPECT_MEAL.clearData();		
}



//주기식단에 맞추어 식수예측 화면 데이터 가져오기 
function fn_MENU_CYCLE(MENU_CYCLE)
{  	
	//주기가 없으면 함수를 실행하지 않음.
	if(gfn_length(MENU_CYCLE)==0){ed_MENU_CYCLE_NAME.value="없음"; return;} 

	var dbl_MENU_CYCLE;         //식단주기 일수
	var dbl_MENU_DATE_DAY;     //제공일의 일(day) 
	var dbl_START_DAY;         //제공일이 속한 날짜 주기의 시작일(day)
	var dbl_START_DATE;        //주기시작일

	
	switch (MENU_CYCLE)
	{
		case "001": //--> 07 일		
			 dbl_MENU_CYCLE=7;	        
			 ed_MENU_CYCLE_NAME.value="07일";
			 break;
		case "002": //--> 10 일
			 dbl_MENU_CYCLE=10;
			 ed_MENU_CYCLE_NAME.value="10일";
			 break;
		case "003": //--> 14 일
			 dbl_MENU_CYCLE=14;
			 ed_MENU_CYCLE_NAME.value="14일";
			 break;
		case "004": //--> 15 일
			 dbl_MENU_CYCLE=15;
			 ed_MENU_CYCLE_NAME.value="15일";
			 break;
		case "005": //--> 한달
			 dbl_MENU_CYCLE=31;
			 ed_MENU_CYCLE_NAME.value="한달";
			 //한달일 경우 시작일이 무조건 1로 셋팅
			 //종료일은 해당월의 마지막날로   셋팅
			 break;
		default:
			 break;
	}
	
	//주기일의 시작일, 종료일 구하는 공식
	// 메뉴날짜입력일 / 주기일 의 올림 * 주기날짜.....
	// 3일  / 7일 의 올림은 1 * 7 ==> 7일  - 6 ===> 1
	// 15일 / 7일 의 올림은 3 * 7 ==> 21일 - 6 ===> 15
	// 27일 / 7일 의 올림은 4 * 7 ==> 28일 - 6 ===> 22
	// 29일 / 7일 의 올림은 5 * 7 ==> 35일 - 6 ===> 29
	
	// 3일  / 15일 의 올림은 1 * 15==> 15일 -14 ===> 1
	// 15일 / 15일 의 올림은 1 * 15==> 15일 -14 ===> 1
	// 27일 / 15일 의 올림은 2 * 15==> 30일 -14 ===> 16
	// 29일 / 15일 의 올림은 2 * 15==> 30일 -14 ===> 16 
	// 31일 / 15일 의 올림은 3 * 15==> 45일 -14 ===> 31

	dbl_MENU_DATE_DAY = toNumber(cal_MENU_DATE.getDay());		              							//일만 구한다.	
	dbl_START_DAY  = Math.ceil(dbl_MENU_DATE_DAY/dbl_MENU_CYCLE) * dbl_MENU_CYCLE-dbl_MENU_CYCLE+1;  // 주기일의 시작일

	dbl_START_DATE = gfn_subStr(this.cal_MENU_DATE.value,0,6)+ gfn_lPad(dbl_START_DAY,"0",2); 				//시작날짜
	
	cal_START_DATE.value = dbl_START_DATE;           //시작일
	cal_END_DATE.value   = cal_START_DATE.value;     //종료일
	
	switch (MENU_CYCLE)
	{
		case "001": //--> 07 일		
		 	 END_DATE=7;	        
	         //종료일은 주기식단의 종료일로 설정한다.
		     cal_END_DATE.value	  = gfn_addDate(cal_END_DATE.value, 6);
		 	 break;
		case "002": //--> 10 일
			 END_DATE=10;
	         //종료일은 주기식단의 종료일로 설정한다.
		     cal_END_DATE.value	  = gfn_addDate(cal_END_DATE.value, 9);
		     break;
		case "003": //--> 14 일
			 END_DATE=14;
	         //종료일은 주기식단의 종료일로 설정한다.
		     cal_END_DATE.value	  = gfn_addDate(cal_END_DATE.value, 13);
		     break;

		case "004": //--> 15 일
		 	 END_DATE=15;
	         //종료일은 주기식단의 종료일로 설정한다.
		     cal_END_DATE.value	  = gfn_addDate(cal_END_DATE.value, 14);		 	 
		 	 break;

		case "005": //--> 한달
			  //종료일은 해당일의 마지막 날을 설정한다.
		     cal_END_DATE.value	  = getLastDay(gfn_subStr(this.cal_MENU_DATE.value,0,6));	   			 	 
		 	 break;
		default :
			 break;
	}	
			 	 
	//종료일과 해당월의 마지막 날을 비교합니다.		 	 
	if(cal_END_DATE.value> getLastDay(gfn_subStr(this.cal_MENU_DATE.value,0,6)))
	{
		cal_END_DATE.value = getLastDay(gfn_subStr(this.cal_MENU_DATE.value,0,6));
	}	
}

//마지막날을 구하는 함수
function getLastDay(yyyymm)
{
   var tDay = gfn_addMonth(yyyymm+"01",1);
   return gfn_addDate(tDay,-1);
}  

//제공일이 변했을 경우
function cal_MENU_DATE_OnChanged(obj:Calendar, e:ChangeEventInfo)
{
	 fn_MENU_CYCLE(this.ed_MENU_CYCLE.text);
}





///////////////////////////////////////////////////////////////////////
////// 식재료율
///////////////////////////////////////////////////////////////////////

//식재료율 가져오는 함수
function fn_Search_Hall_Goal_cost_rate()
{
	  //필수 입력사항 체크-----------------------------------------------------------------------
	   if (!fn_Chk_Search_Hall_Goal_cost_rate()) return false;
	
	  //조회 조건만들기-----------------------------------------------------------------------
	   var otherArg;
	   otherArg		= otherArg + " UPJANG="+wrapQuote(ds_input.getColumn(0,"UPJANG"));
	   otherArg		= otherArg + " HALL_CD="+wrapQuote(cbo_upjang_hall.value);
	   otherArg		= otherArg + " START_DATE="+wrapQuote(cal_START_DATE.value);
	   
	   //한달조회가 체크되어 있다면 - 한달 단위로 조회한다.
	   if(chk_MONTH.value==1)
	   {	
			otherArg		= otherArg + " END_DATE="+wrapQuote(getLastDay(gfn_subStr(this.cal_MENU_DATE.value,0,6)));
	   }
	   //한달조회가 체크되어 있지 않다면 -- 주기식단 주기로 조회한다.
	   else
	   {
			otherArg		= otherArg + " END_DATE="+wrapQuote(cal_END_DATE.value);
	   }
	   
	  // action 정보 삭제 초기화 
	   fsp_clear(this);
			
	 // 서버에서 조회할 정보 추가  -->> 주간식단식재료율
	  fsp_addSearch(this, "fs/fsm:FSM00223E_S002");
	
	  // 서버 호출 
	  http.Sync = true;
	  fsp_callService(this, "", "", "", "ds_GOAL_COST_RATE=ds_GOAL_COST_RATE" , otherArg, "fn_After_Search_Hall_Goal_cost_rate");	
	  //조회 실행-----------------------------------------------------------------------------
	  http.Sync = false;	  
	  
}
function fn_After_Search_Hall_Goal_cost_rate()
{
	//식재료 목표율 셋팅
	me_GOAL_COST_RATE.value = ds_GOAL_COST_RATE.getColumn(0,"GOAL_COST_RATE");
	//FLAG Clear
	ds_GOAL_COST_RATE.applyChange();
}

// 조회 조건 검색
function fn_Chk_Search_Hall_Goal_cost_rate()
{
   //체크로직- 틀리면 return false;    
   //업장
   if(!mfn_Chk_Obj_MustInput(ed_UPJANG_NM)) return false;
   //식당명
   if(!mfn_Chk_Obj_MustInput(cbo_upjang_hall)) return false;   
   
   
   return true;
}


//플래그 강제 업데이트 --->>>>>> 변경안된 데이터는 바꾸지 않는다.
function ds_EXPECT_MEAL_OnColumnChanged(obj:Dataset, e:DSColChangeEventInfo)
{
	if(e.columnid=="EXPECT_MEAL_QTY")
	{
		if(ds_EXPECT_MEAL.getColumn(e.row,"FLAG")=="S")
		{
			ds_EXPECT_MEAL.setColumn(e.row,"FLAG","U");
		}
		
		//Pivot 데이터셋에 적용
		var sMenuDate = ds_EXPECT_MEAL.getColumn(e.row,"MENU_DATE");
		var sCorner = ds_EXPECT_MEAL.getColumn(e.row,"CORNER");
		var sMeal = ds_EXPECT_MEAL.getColumn(e.row,"MEAL");
		
		var nFindRow = ds_EXPECT_MEAL_Pivot.findRowExpr("CORNER=='"+sCorner+"' && MEAL=='"+sMeal+"'");
		if (nFindRow > -1) {
			ds_EXPECT_MEAL_Pivot.enableevent = false;
			ds_EXPECT_MEAL_Pivot.setColumn(nFindRow, "date"+sMenuDate, e.newvalue);
			ds_EXPECT_MEAL_Pivot.enableevent = true;
		}
	}
}

function ds_EXPECT_MEAL_Pivot_oncolumnchanged(obj:Dataset, e:DSColChangeEventInfo)
{
	if(e.columnid.substr(0,4) == "date") {
		
		//Pivot 데이터셋에 적용
		var sMenuDate = e.columnid.substr(4,8);
		var sCorner = obj.getColumn(e.row,"CORNER");
		var sMeal = obj.getColumn(e.row,"MEAL");
		
		//trace(">>>>>"+"MENU_DATE=='"+sMenuDate+"' && CORNER=='"+sCorner+"' && MEAL=='"+sMeal+"'");
		var nFindRow = ds_EXPECT_MEAL.findRowExpr("MENU_DATE=='" + sMenuDate + "' && CORNER=='" + sCorner + "' && MEAL=='" + sMeal + "'");
		if (nFindRow > -1) {
			ds_EXPECT_MEAL.enableevent = false;
			ds_EXPECT_MEAL.setColumn(nFindRow, "EXPECT_MEAL_QTY", e.newvalue);
			ds_EXPECT_MEAL.setColumn(nFindRow, "FLAG", "U");
			ds_EXPECT_MEAL.enableevent = true;
		}
	}
}


//식단 목표 식재료율이 변경이 될  때....


function ds_GOAL_COST_RATE_OnColumnChanged(obj:Dataset, e:DSColChangeEventInfo)
{
	if(e.columnid=="GOAL_COST_RATE")
	{
		if(ds_GOAL_COST_RATE.getColumn(e.row,"FLAG")=="S")
		{
			ds_GOAL_COST_RATE.setColumn(e.row,"FLAG","U");
		}	
	}
}


///////////////////////////////////////////////////////////////////////
// 예상식수 적용하기
///////////////////////////////////////////////////////////////////////

//코너 가져오기 
function fn_Upjang_Hall_CornerSearch()
{
	// 식당 조회
	var actionName, cmdName, inData, outData, otherArg, callBackFnc;
	
	inData			= "";
	outData			= "ds_upjang_hall_corner=ds_upjang_hall_corner";
	callBackFnc		= "";
	otherArg		= "UPJANG="+wrapQuote(ds_input.getColumn(0,"UPJANG"));
	otherArg		= otherArg + " HALL_CD="+wrapQuote(gfn_trim(cbo_upjang_hall.value));
	otherArg		= otherArg + " BLANK='A'";
	
	fsp_clear(this); 
    fsp_addSearch(this, "fs/fsc:FSC_UPJANG_HALL_CORNER_S001");								// 조회 
	http.Sync = true;
    fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);		// 서비스 호출 
	http.Sync = false;
	
	// 초기값 셋팅
	cbo_upjang_corner.index = 0;
}


function btn_APPLY_EXPECT_MEAL_QTY_OnClick(obj:Button, e:ClickEventInfo)
{
   //적용식수 입력 체크확인
   if(!mfn_Chk_Obj_MustInput(ed_EXPECT_MEAL_QTY)) return false;  

	//코너
	var selCorner;
	//끼니
	var selMeal;
	//리턴
	var retRtn = false;
	//케이스
	var strCASE="";
	
	selCorner = cbo_upjang_corner.value;
	selMeal   = cbo_upjang_hall_meal.value;
	
	if((gfn_length(selCorner)==0)&&(gfn_length(selMeal)==0))
	{
		retRtn = confirm("전체 식단에 적용식수 인원을 적용하시겠습까?");
		strCASE = "ALL";
	}
	
	if((gfn_length(selCorner)<>0)&&(gfn_length(selMeal)==0))
	{
		retRtn = confirm("선택하신 코너 ["+ cbo_upjang_corner.text+"] 에 적용식수 인원을 적용하시겠습까?");
		strCASE = "CORNER";
	}
	
	if((gfn_length(selCorner)==0)&&(gfn_length(selMeal)<>0))
	{
		retRtn = confirm("선택하신 끼니 ["+ cbo_upjang_hall_meal.text+"] 에 적용식수 인원을 적용하시겠습까?");
		strCASE = "MEAL";
	}
	
	if((gfn_length(selCorner)<>0)&&(gfn_length(selMeal)<>0))
	{
		retRtn = confirm("선택하신 코너 ["+ cbo_upjang_corner.text+"] 끼니 ["+ cbo_upjang_hall_meal.text+"] 에 적용식수 인원을 적용하시겠습까?");
		strCASE = "CORNERMEAL";
	}
	
	//예가 아니면 나간다.
	if(!retRtn){ return false;}
	
	switch (strCASE)
	{
		case "ALL":	
				for(i=0; i<=this.ds_EXPECT_MEAL.rowcount;i++)
				{
				//	if(ds_EXPECT_MEAL.GetColumn(i,"MENU_DATE")<today()){continue;}
					if(ds_EXPECT_MEAL.getColumn(i,"MODIFY_YN1")!="Y"){continue;}
					if(ds_EXPECT_MEAL.getColumn(i,"MODIFY_YN2")!="Y"){continue;}
					
					ds_EXPECT_MEAL.setColumn(i,"EXPECT_MEAL_QTY", ed_EXPECT_MEAL_QTY.value);
				}
				break;
		case "CORNER":
				for(i=0; i<=this.ds_EXPECT_MEAL.rowcount;i++)
				{
				//	if(ds_EXPECT_MEAL.GetColumn(i,"MENU_DATE")<today()){continue;}
					if(ds_EXPECT_MEAL.getColumn(i,"MODIFY_YN1")!="Y"){continue;}
					if(ds_EXPECT_MEAL.getColumn(i,"MODIFY_YN2")!="Y"){continue;}
					
					if(ds_EXPECT_MEAL.getColumn(i,"CORNER")!=selCorner){continue;}
					
					ds_EXPECT_MEAL.setColumn(i,"EXPECT_MEAL_QTY", ed_EXPECT_MEAL_QTY.value);
				}
				break;
		case "MEAL":
				for(i=0; i<=this.ds_EXPECT_MEAL.rowcount;i++)
				{
				//	if(ds_EXPECT_MEAL.GetColumn(i,"MENU_DATE")<today()){continue;}
					if(ds_EXPECT_MEAL.getColumn(i,"MODIFY_YN1")!="Y"){continue;}
					if(ds_EXPECT_MEAL.getColumn(i,"MODIFY_YN2")!="Y"){continue;}
					
					if(ds_EXPECT_MEAL.getColumn(i,"MEAL")!=selMeal){continue;}
					
					ds_EXPECT_MEAL.setColumn(i,"EXPECT_MEAL_QTY", ed_EXPECT_MEAL_QTY.value);
				}
				break;
		case "CORNERMEAL":
				for(i=0; i<=this.ds_EXPECT_MEAL.rowcount;i++)
				{
				//	if(ds_EXPECT_MEAL.GetColumn(i,"MENU_DATE")<today()){continue;}
					if(ds_EXPECT_MEAL.getColumn(i,"MODIFY_YN1")!="Y"){continue;}
					if(ds_EXPECT_MEAL.getColumn(i,"MODIFY_YN2")!="Y"){continue;}
					
					if(ds_EXPECT_MEAL.getColumn(i,"CORNER")!=selCorner){continue;}
					if(ds_EXPECT_MEAL.getColumn(i,"MEAL")!=selMeal){continue;}
					
					ds_EXPECT_MEAL.setColumn(i,"EXPECT_MEAL_QTY", ed_EXPECT_MEAL_QTY.value);
				}
				break;
		default:
				break;
	}
}


////////////////////////////////////////
////// 과거 식단 식수예측/실식수 조회
///////////////////////////////////////
function btn_PRE_Search_OnClick(obj:Button, e:ClickEventInfo)
{
	
	 //필수 입력사항 체크-----------------------------------------------------------------------
	   if (!fn_Chk_Pre_SearchKey()) return false;
	
	  //조회 조건만들기-----------------------------------------------------------------------
	   var otherArg;
	   otherArg		= otherArg + " UPJANG="+wrapQuote(ds_input.getColumn(0,"UPJANG"));
	   otherArg		= otherArg + " HALL_CD="+wrapQuote(cbo_upjang_hall.value);
	   otherArg		= otherArg + " CORNER="+wrapQuote(gfn_trim(cbo_SEARCH_CORNER.value));
	   otherArg		= otherArg + " MEAL="+wrapQuote(gfn_trim(cbo_SEARCH_MEAL.value));  
	   otherArg		= otherArg + " PRE_START_DATE="+wrapQuote(gfn_trim(cal_PRE_START_DATE.value));
	   otherArg		= otherArg + " PRE_END_DATE="+wrapQuote(gfn_trim(cal_PRE_END_DATE.value));   


	  // action 정보 삭제 초기화 
	   fsp_clear(this);
		
	  // 서버에서 조회할 정보 추가 -->> 식수예측
	  // 서버에서 조회할 정보 추가 -->> 전주식수예측/실식수
	  fsp_addSearch(this, "fs/fsm:FSM00223E_S003");
		
	  // 서버 호출 
	  http.Sync = true;
	  fsp_callService(this, "", "", "", "ds_PRE_EXPECT_MEAL=ds_PRE_EXPECT_MEAL" , otherArg, "");	
	  //조회 실행-----------------------------------------------------------------------------
	  http.Sync = false;
	  
	  
	  
	  
	  
	   //초기화
    for (var i=grd_PRE_FSH_CYCLE_Pivot.getFormatColCount()-1; i>1; i--) {
		grd_PRE_FSH_CYCLE_Pivot.deleteContentsCol("body", i, false);
    }   
    
    
    // 컬럼 구조 생성 및 값 셋팅
    ds_PRE_EXPECT_MEAL_Pivot.enableevent = false;
    
    ds_PRE_EXPECT_MEAL.keystring = "S:+CORNER+MEAL+MENU_DATE";
        
    ds_PRE_EXPECT_MEAL_Pivot.clear();    
    ds_PRE_EXPECT_MEAL_Pivot.addColumn("CORNER","string");
    ds_PRE_EXPECT_MEAL_Pivot.addColumn("CORNER_NAME","string");
    ds_PRE_EXPECT_MEAL_Pivot.addColumn("MEAL","string");
    ds_PRE_EXPECT_MEAL_Pivot.addColumn("MEAL_NAME","string");    
        
    var sCurMeal = "";
    var sOrgMeal = "";
    for (var i=0; i<ds_PRE_EXPECT_MEAL.rowcount; i++) {
		
		var sCorner = ds_PRE_EXPECT_MEAL.getColumn(i, "CORNER");
		sCurMeal = ds_PRE_EXPECT_MEAL.getColumn(i, "MEAL");
		
		var sMenuDate = ds_PRE_EXPECT_MEAL.getColumn(i, "MENU_DATE");		
		var nAddRow = -1;
		if (sCurMeal != sOrgMeal) {
			nAddRow = ds_PRE_EXPECT_MEAL_Pivot.addRow();
			ds_PRE_EXPECT_MEAL_Pivot.setColumn(nAddRow, "CORNER", ds_PRE_EXPECT_MEAL.getColumn(i, "CORNER"));
			ds_PRE_EXPECT_MEAL_Pivot.setColumn(nAddRow, "CORNER_NAME", ds_PRE_EXPECT_MEAL.getColumn(i, "CORNER_NAME"));
			ds_PRE_EXPECT_MEAL_Pivot.setColumn(nAddRow, "MEAL", ds_PRE_EXPECT_MEAL.getColumn(i, "MEAL"));
			ds_PRE_EXPECT_MEAL_Pivot.setColumn(nAddRow, "MEAL_NAME", ds_PRE_EXPECT_MEAL.getColumn(i, "MEAL_NAME"));			
			
		}
		if (ds_PRE_EXPECT_MEAL_Pivot.rowcount == 1) {
			ds_PRE_EXPECT_MEAL_Pivot.addColumn("date"+sMenuDate, "string");	
						
			var nAppendCol = grd_PRE_FSH_CYCLE_Pivot.appendContentsCol();
			if (nAppendCol > -1) {
				grd_PRE_FSH_CYCLE_Pivot.setFormatColProperty(nAppendCol, "size", 70);
				grd_PRE_FSH_CYCLE_Pivot.setCellProperty("head", nAppendCol, "text", gfn_right(sMenuDate,2)+"일("+ds_PRE_EXPECT_MEAL.getColumn(i, "MENU_DAYS")+")");
				grd_PRE_FSH_CYCLE_Pivot.setCellProperty("body", nAppendCol, "text", "bind:date"+sMenuDate);				
				grd_PRE_FSH_CYCLE_Pivot.setCellProperty("body", nAppendCol, "align", "right");				
				grd_PRE_FSH_CYCLE_Pivot.setCellProperty("body", nAppendCol, "background", "EXPR(fn_ExprBkColor2('"+sMenuDate+"',CORNER,MEAL))");
				grd_PRE_FSH_CYCLE_Pivot.setCellProperty("body", nAppendCol, "background2", "EXPR(fn_ExprBkColor2('"+sMenuDate+"',CORNER,MEAL))");
			}
		}
		ds_PRE_EXPECT_MEAL_Pivot.setColumn(ds_PRE_EXPECT_MEAL_Pivot.rowposition, "date"+sMenuDate, gfn_trim(ds_PRE_EXPECT_MEAL.getColumn(i, "EXPECT_MEAL_QTY")) + " / " + gfn_trim(ds_PRE_EXPECT_MEAL.getColumn(i, "REAL_MEAL_QTY")));		
		
		
		sOrgMeal = sCurMeal;		
    }
    
    ds_PRE_EXPECT_MEAL.keystring = "";
    ds_PRE_EXPECT_MEAL_Pivot.enableevent = true; 

}


function fn_ExprBkColor2(sDate, sCorner, sMeal)
{
	var nFindRow = ds_PRE_EXPECT_MEAL.findRowExpr("MENU_DATE=='"+sDate+"' && CORNER=='"+sCorner+"' && MEAL=='"+sMeal+"'");
	if (nFindRow > -1) {		
		var sMenuDays = ds_PRE_EXPECT_MEAL.getColumn(nFindRow, "MENU_DAYS");		
		if (sMenuDays == "일") {
			return "#FFDCFF";
		} else if (sMenuDays == "토") {
			return "#E8F5FF";
		} else {
			return "#EEEEEE"
		}
	}
}

// 조회 조건 검색
function fn_Chk_Pre_SearchKey()
{
   //체크로직- 틀리면 return false;    
   //업장
   if(!mfn_Chk_Obj_MustInput(ed_UPJANG_NM)) return false;   
   //과거 시작일
   if(!mfn_Chk_Obj_MustInput(cal_PRE_START_DATE)) return false;   
   //과거 종료일
   if(!mfn_Chk_Obj_MustInput(cal_PRE_END_DATE)) return false;
   
   return true;
}


//과거 일주일 데이터를 조회한다.ㅎ
function fn_Set_Pre_Date()
{
	
	if(gfn_isNull(cal_END_DATE.value)){return false;}
	
	this.cal_PRE_START_DATE.value= gfn_addDate(cal_START_DATE.value, -7);
	this.cal_PRE_END_DATE.value= gfn_addDate(cal_START_DATE.value, -1);

}


/////////////////////////////////////
////***************************//////
////  Expression ---------------------
////
////  iif(MENU_DATE<today(),'none','maskinteger')


//조회조건 코너가 변경될 경우
function cbo_SEARCH_CORNER_OnChanged(obj:Combo, e:ItemChangeEventInfo)
{
	//식당의 끼니값 셋팅
	fn_Upjang_Hall_MealSearch(obj, "S");
}


//적용식수 코너가 변경될 경우
function cbo_upjang_corner_OnChanged(obj:Combo, e:ItemChangeEventInfo)
{
	//식당의 끼니값 셋팅
	fn_Upjang_Hall_MealSearch(obj, "A");
}


//끼니 정의
function fn_Upjang_Hall_MealSearch(obj, strTYPE)
{
	// 식당 조회
	var actionName, cmdName, inData, outData, otherArg, callBackFnc;
	
	inData			= "";
	outData			= "ds_upjang_hall_meal=ds_upjang_hall_meal";
	callBackFnc		= "";
	otherArg		= "UPJANG="+wrapQuote(ds_input.getColumn(0,"UPJANG"));
	otherArg		= otherArg + " HALL_CD="+wrapQuote(gfn_trim(cbo_upjang_hall.value));
	otherArg		= otherArg + " CORNER="+wrapQuote(gfn_trim(obj.value));
	otherArg		= otherArg + " BLANK='A'";
	
	fsp_clear(this); 
    fsp_addSearch(this, "fs/fsc:FSC_UPJANG_HALL_MEAL_S001");						// 조회 
	http.Sync = true;
    fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);		// 서비스 호출 
	http.Sync = false;
	
	//식수적용일 경우
	if(strTYPE=="A")
	{
		// 초기값 셋팅
		cbo_upjang_hall_meal.index = 0;
		cbo_SEARCH_MEAL.index = 0;
	}
	
	//조회조건일 경우
	if(strTYPE=="S")
	{
		cbo_SEARCH_MEAL.index = 0;
	}
}





// 과거 식단 식수 인원 적용하기
function btn_APPLY_PRE_EXPECT_MEAL_QTY_OnClick(obj:Button, e:ClickEventInfo)
{

	//과거 식단 식수 인원 데이터가 있는지 체크한다.
	if(ds_PRE_EXPECT_MEAL.rowcount<=0)
	{
		g_Message("EE","과거식단 예측식수/실식수를 조회한 후 사용하십시요.");
		return false;
	}
	
	
	//확인
	var retRtn = false;
	retRtn = confirm("과거식단 예측식수를 현재 식단 식수예측에 적용하시겠습니까?");
	if(!retRtn) 
	{
		return false;
	}
	
	
	//식수인원 예측 복사
	var i=0;
	for(i=0;i<ds_EXPECT_MEAL.rowcount;i++)
	{
		//지난 날짜 등 에러는 건너뛴다.
		//if(ds_EXPECT_MEAL.GetColumn(i,"MENU_DATE")<today()){continue;}
		if(ds_EXPECT_MEAL.getColumn(i,"MODIFY_YN1")!="Y"){continue;}
		if(ds_EXPECT_MEAL.getColumn(i,"MODIFY_YN2")!="Y"){continue;}
		
		ds_EXPECT_MEAL.setColumn(i, "EXPECT_MEAL_QTY", Number(gfn_trim(ds_PRE_EXPECT_MEAL.getColumn(i, "EXPECT_MEAL_QTY"))));
	}

}


//한달조회 클릭시 메세지 
function chk_MONTH_OnClick(obj:CheckBox, e:ClickEventInfo)
{
	 mfn_chk_display_warning(obj, obj.isChecked(), 1, "한달조회를 하시면 해당월 시작일부터 해당월 마지막날까지 조회가 됩니다.");
}

function cal_MENU_DATE_CanChange(obj:Calendar, e:ChangeEventInfo)
{
	if(e.posttext<'20080701')
	{
		g_Message("EE", "식단은 2008년 07월01일 부터 작성하실 수 있습니다.\n\n2008년 07월01일 이후 날짜를 선택하여 주십시요.");
		return false;	
	}
}

function me_GOAL_COST_RATE_canchange(obj:MaskEdit,  e:ChangeEventInfo)
{
	//식단목표식재표율
   if(!mfn_Chk_Obj_MustInput(obj)) return false;  
	
	var i=0;
	for(i=0;i<=ds_GOAL_COST_RATE.rowcount;i++)
	{
		ds_GOAL_COST_RATE.setColumn(i,"GOAL_COST_RATE", e.posttext);
	}
}


]]></Script>
  </Form>
</FDL>
