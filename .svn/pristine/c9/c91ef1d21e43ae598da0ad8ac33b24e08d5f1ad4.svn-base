<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="../../../default_typedef.xml"/>
  <Form id="FMM00205P" onkeydown="frm_OnKeyDown" onload="form_onload" titletext="영양분석" position="absolute 0 0 1000 693" scrollbars="none">
    <Layouts>
      <Layout>
        <Grid autoenter="select" binddataset="ds_List" cellmovingtype="col" cellsizingtype="both" readonly="false" enable="true" id="grd_List" useinputpanel="false" onheadclick="grd_List_OnHeadClick" taborder="8" tabstop="true" usecontextmenu="true" useselcolor="true" visible="true" wheelscrollrow="1" position="absolute 15 112 985 678" selecttype="row" autofittype="col">
          <Formats>
            <Format id="Default">
              <Columns>
                <Column size="30"/>
                <Column size="100"/>
                <Column size="123"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="70"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24" band="head"/>
                <Row size="24"/>
                <Row size="24" band="summ"/>
                <Row size="24" band="summ"/>
                <Row size="24" band="summ"/>
                <Row size="24" band="summ"/>
                <Row size="24" band="summ"/>
              </Rows>
              <Band id="head">
                <Cell rowspan="2" displaytype="text" class="head_Excel"/>
                <Cell col="1" rowspan="2" displaytype="text" text="제공일자" wordwrap="word"/>
                <Cell col="2" rowspan="2" displaytype="text" text="식  단"/>
                <Cell col="3" rowspan="2" displaytype="text" text="에너지&#10;(Kcal)"/>
                <Cell col="4" rowspan="2" displaytype="text" text="당질&#10;(g)"/>
                <Cell col="5" rowspan="2" displaytype="text" text="단백질&#10;(g)"/>
                <Cell col="6" rowspan="2" displaytype="text" text="지질&#10;(g)"/>
                <Cell col="7" rowspan="2" displaytype="text" text="비타민A&#10;(R.E)"/>
                <Cell col="8" rowspan="2" displaytype="text" text="비타민B1&#10;(mg)"/>
                <Cell col="9" rowspan="2" displaytype="text" text="비타민B2&#10;(mg)"/>
                <Cell col="10" rowspan="2" displaytype="text" text="비타민C&#10;(mg)"/>
                <Cell col="11" rowspan="2" displaytype="text" text="칼슘&#10;(mg)"/>
                <Cell col="12" rowspan="2" displaytype="text" text="철&#10;(mg)"/>
              </Band>
              <Band id="body">
                <Cell displaytype="text" style="align:center;" expr="expr:currow+1"/>
                <Cell col="1" displaytype="date" style="background:white;background2:white;" text="bind:MENU_DATE" subsumtext="expr:getColumn(currow-1,&quot;MENU_DATE&quot;)" suppress="1"/>
                <Cell col="2" displaytype="text" style="align:left;background:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));background2:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));" text="bind:MENU_DESC" expr="expr:decode(GetRowType(ds_List,currow), &quot;logical&quot;, &quot;평  균&quot;, MENU_DESC)" suppress="2"/>
                <Cell col="3" displaytype="number" style="align:right;background:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));background2:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));" text="bind:CAL" subsumtext="expr:Math.round(getCaseAvg(&quot;MENU_DATE=='&quot;+getColumn(currow-1,&quot;MENU_DATE&quot;)+&quot;'&quot;,&quot;CAL&quot;),2)" mask="###,##0.00"/>
                <Cell col="4" displaytype="number" style="align:right;background:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));background2:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));" text="bind:CARBO" subsumtext="expr:Math.round(getCaseAvg(&quot;MENU_DATE=='&quot;+getColumn(currow-1,&quot;MENU_DATE&quot;)+&quot;'&quot;,&quot;CARBO&quot;),2)" mask="###,##0.00"/>
                <Cell col="5" displaytype="number" style="align:right;background:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));background2:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));" text="bind:PROT" subsumtext="expr:Math.round(getCaseAvg(&quot;MENU_DATE=='&quot;+getColumn(currow-1,&quot;MENU_DATE&quot;)+&quot;'&quot;,&quot;PROT&quot;),2)" mask="###,##0.00"/>
                <Cell col="6" displaytype="number" style="align:right;background:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));background2:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));" text="bind:FAT" subsumtext="expr:Math.round(getCaseAvg(&quot;MENU_DATE=='&quot;+getColumn(currow-1,&quot;MENU_DATE&quot;)+&quot;'&quot;,&quot;FAT&quot;),2)" mask="###,##0.00"/>
                <Cell col="7" displaytype="number" style="align:right;background:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));background2:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));" text="bind:VITA_A" subsumtext="expr:Math.round(getCaseAvg(&quot;MENU_DATE=='&quot;+getColumn(currow-1,&quot;MENU_DATE&quot;)+&quot;'&quot;,&quot;VITA_A&quot;),2)" mask="###,##0.00"/>
                <Cell col="8" displaytype="number" style="align:right;background:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));background2:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));" text="bind:THIA" subsumtext="expr:Math.round(getCaseAvg(&quot;MENU_DATE=='&quot;+getColumn(currow-1,&quot;MENU_DATE&quot;)+&quot;'&quot;,&quot;THIA&quot;),2)" mask="###,##0.00"/>
                <Cell col="9" displaytype="number" style="align:right;background:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));background2:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));" text="bind:RIBO" subsumtext="expr:Math.round(getCaseAvg(&quot;MENU_DATE=='&quot;+getColumn(currow-1,&quot;MENU_DATE&quot;)+&quot;'&quot;,&quot;RIBO&quot;),2)" mask="###,##0.00"/>
                <Cell col="10" displaytype="number" style="align:right;background:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));background2:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));" text="bind:VITA_C" subsumtext="expr:Math.round(getCaseAvg(&quot;MENU_DATE=='&quot;+getColumn(currow-1,&quot;MENU_DATE&quot;)+&quot;'&quot;,&quot;VITA_C&quot;),2)" mask="###,##0.00"/>
                <Cell col="11" displaytype="number" style="align:right;background:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));background2:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));" text="bind:CA" subsumtext="expr:Math.round(getCaseAvg(&quot;MENU_DATE=='&quot;+getColumn(currow-1,&quot;MENU_DATE&quot;)+&quot;'&quot;,&quot;CA&quot;),2)" mask="###,##0.00"/>
                <Cell col="12" displaytype="number" style="align:right;background:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));background2:EXPR(decode(getRowLevel(currow),1,'#e7e7ffff',''));" text="bind:FE" subsumtext="expr:Math.round(getCaseAvg(&quot;MENU_DATE=='&quot;+getColumn(currow-1,&quot;MENU_DATE&quot;)+&quot;'&quot;,&quot;FE&quot;),2)" mask="###,##0.00"/>
              </Band>
              <Band id="summary">
                <Cell colspan="3" displaytype="text" style="align:center;" class="grd_WF_SummaryBody4" text="기간평균"/>
                <Cell col="3" displaytype="number" style="align:right;" class="grd_WF_SummaryBody4" expr="expr:fn_clearNaN(Math.round(getAvg(&quot;CAL&quot;),2))" mask="###,##0.00"/>
                <Cell col="4" displaytype="number" style="align:right;" class="grd_WF_SummaryBody4" expr="expr:fn_clearNaN(Math.round(getAvg(&quot;CARBO&quot;),2))" mask="###,##0.00"/>
                <Cell col="5" displaytype="number" style="align:right;" class="grd_WF_SummaryBody4" expr="expr:fn_clearNaN(Math.round(getAvg(&quot;PROT&quot;),2))" mask="###,##0.00"/>
                <Cell col="6" displaytype="number" style="align:right;" class="grd_WF_SummaryBody4" expr="expr:fn_clearNaN(Math.round(getAvg(&quot;FAT&quot;),2))" mask="###,##0.00"/>
                <Cell col="7" displaytype="number" style="align:right;" class="grd_WF_SummaryBody4" expr="expr:fn_clearNaN(Math.round(getAvg(&quot;VITA_A&quot;),2))" mask="###,##0.00"/>
                <Cell col="8" displaytype="number" style="align:right;" class="grd_WF_SummaryBody4" expr="expr:fn_clearNaN(Math.round(getAvg(&quot;THIA&quot;),2))" mask="###,##0.00"/>
                <Cell col="9" displaytype="number" style="align:right;" class="grd_WF_SummaryBody4" expr="expr:fn_clearNaN(Math.round(getAvg(&quot;RIBO&quot;),2))" mask="###,##0.00"/>
                <Cell col="10" displaytype="number" style="align:right;" class="grd_WF_SummaryBody4" expr="expr:fn_clearNaN(Math.round(getAvg(&quot;VITA_C&quot;),2))" mask="###,##0.00"/>
                <Cell col="11" displaytype="number" style="align:right;" class="grd_WF_SummaryBody4" expr="expr:fn_clearNaN(Math.round(getAvg(&quot;CA&quot;),2))" mask="###,##0.00"/>
                <Cell col="12" displaytype="number" style="align:right;" class="grd_WF_SummaryBody4" expr="expr:fn_clearNaN(Math.round(getAvg(&quot;FE&quot;),2))" mask="###,##0.00"/>
                <Cell row="1" colspan="3" displaytype="text" style="align:center;" class="grd_WF_SummaryBody3" text="기 준 량"/>
                <Cell row="1" col="3" displaytype="number" style="align:right;" class="grd_WF_SummaryBody3" expr="expr:fn_clearNaN(fn_SetNutStd(&quot;CAL_QTY&quot;))" mask="#,##0.00"/>
                <Cell row="1" col="4" displaytype="number" style="align:right;" class="grd_WF_SummaryBody3" expr="expr:fn_clearNaN(fn_SetNutStd(&quot;CARBO_RCMD_QTY&quot;))" mask="#,##0.00"/>
                <Cell row="1" col="5" displaytype="number" style="align:right;" class="grd_WF_SummaryBody3" expr="expr:fn_clearNaN(fn_SetNutStd(&quot;PROT_QTY&quot;))" mask="#,##0.00"/>
                <Cell row="1" col="6" displaytype="number" style="align:right;" class="grd_WF_SummaryBody3" expr="expr:fn_clearNaN(fn_SetNutStd(&quot;FAT_RCMD_QTY&quot;))" mask="#,##0.00"/>
                <Cell row="1" col="7" displaytype="number" style="align:right;" class="grd_WF_SummaryBody3" expr="expr:fn_clearNaN(fn_SetNutStd(&quot;VITA_RCMD_QTY&quot;))" mask="#,##0.00"/>
                <Cell row="1" col="8" displaytype="number" style="align:right;" class="grd_WF_SummaryBody3" expr="expr:fn_clearNaN(fn_SetNutStd(&quot;THIA_RCMD_QTY&quot;))" mask="#,##0.00"/>
                <Cell row="1" col="9" displaytype="number" style="align:right;" class="grd_WF_SummaryBody3" expr="expr:fn_clearNaN(fn_SetNutStd(&quot;RIBO_RCMD_QTY&quot;))" mask="#,##0.00"/>
                <Cell row="1" col="10" displaytype="number" style="align:right;" class="grd_WF_SummaryBody3" expr="expr:fn_clearNaN(fn_SetNutStd(&quot;VITAC_RCMD_QTY&quot;))" mask="#,##0.00"/>
                <Cell row="1" col="11" displaytype="number" style="align:right;" class="grd_WF_SummaryBody3" expr="expr:fn_clearNaN(fn_SetNutStd(&quot;CA_RCMD_QTY&quot;))" mask="#,##0.00"/>
                <Cell row="1" col="12" displaytype="number" style="align:right;" class="grd_WF_SummaryBody3" expr="expr:fn_clearNaN(fn_SetNutStd(&quot;FE_RCMD_QTY&quot;))" mask="#,##0.00"/>
                <Cell row="2" colspan="3" displaytype="text" style="align:center;" class="grd_WF_SummaryBody2" text="기준대비 차이량"/>
                <Cell row="2" col="3" displaytype="text" style="align:right;" class="grd_WF_SummaryBody2" expr="expr:fn_StdDif(&quot;CAL&quot;, &quot;CAL_QTY&quot;)"/>
                <Cell row="2" col="4" displaytype="text" style="align:right;" class="grd_WF_SummaryBody2" expr="expr:fn_StdDif(&quot;CARBO&quot;, &quot;CARBO_RCMD_QTY&quot;)"/>
                <Cell row="2" col="5" displaytype="text" style="align:right;" class="grd_WF_SummaryBody2" expr="expr:fn_StdDif(&quot;PROT&quot;, &quot;PROT_QTY&quot;)"/>
                <Cell row="2" col="6" displaytype="text" style="align:right;" class="grd_WF_SummaryBody2" expr="expr:fn_StdDif(&quot;FAT&quot;, &quot;FAT_RCMD_QTY&quot;)"/>
                <Cell row="2" col="7" displaytype="text" style="align:right;" class="grd_WF_SummaryBody2" expr="expr:fn_StdDif(&quot;VITA_A&quot;, &quot;VITA_RCMD_QTY&quot;)"/>
                <Cell row="2" col="8" displaytype="text" style="align:right;" class="grd_WF_SummaryBody2" expr="expr:fn_StdDif(&quot;THIA&quot;, &quot;THIA_RCMD_QTY&quot;)"/>
                <Cell row="2" col="9" displaytype="text" style="align:right;" class="grd_WF_SummaryBody2" expr="expr:fn_StdDif(&quot;RIBO&quot;, &quot;RIBO_RCMD_QTY&quot;)"/>
                <Cell row="2" col="10" displaytype="text" style="align:right;" class="grd_WF_SummaryBody2" expr="expr:fn_StdDif(&quot;VITA_C&quot;, &quot;VITAC_RCMD_QTY&quot;)"/>
                <Cell row="2" col="11" displaytype="text" style="align:right;" class="grd_WF_SummaryBody2" expr="expr:fn_StdDif(&quot;CA&quot;, &quot;CA_RCMD_QTY&quot;)"/>
                <Cell row="2" col="12" displaytype="text" style="align:right;" class="grd_WF_SummaryBody2" expr="expr:fn_StdDif(&quot;FE&quot;, &quot;FE_RCMD_QTY&quot;)"/>
                <Cell row="3" colspan="3" displaytype="text" style="align:center;" class="grd_WF_SummaryBody1" text="기준대비 섭취비율"/>
                <Cell row="3" col="3" displaytype="text" style="align:right;" class="grd_WF_SummaryBody1" expr="expr:fn_StdPer(&quot;CAL&quot;, &quot;CAL_QTY&quot;)"/>
                <Cell row="3" col="4" displaytype="text" style="align:right;" class="grd_WF_SummaryBody1" expr="expr:fn_StdPer(&quot;CARBO&quot;, &quot;CARBO_RCMD_QTY&quot;)"/>
                <Cell row="3" col="5" displaytype="text" style="align:right;" class="grd_WF_SummaryBody1" expr="expr:fn_StdPer(&quot;PROT&quot;, &quot;PROT_QTY&quot;)"/>
                <Cell row="3" col="6" displaytype="text" style="align:right;" class="grd_WF_SummaryBody1" expr="expr:fn_StdPer(&quot;FAT&quot;, &quot;FAT_RCMD_QTY&quot;)"/>
                <Cell row="3" col="7" displaytype="text" style="align:right;" class="grd_WF_SummaryBody1" expr="expr:fn_StdPer(&quot;VITA_A&quot;, &quot;VITA_RCMD_QTY&quot;)"/>
                <Cell row="3" col="8" displaytype="text" style="align:right;" class="grd_WF_SummaryBody1" expr="expr:fn_StdPer(&quot;THIA&quot;, &quot;THIA_RCMD_QTY&quot;)"/>
                <Cell row="3" col="9" displaytype="text" style="align:right;" class="grd_WF_SummaryBody1" expr="expr:fn_StdPer(&quot;RIBO&quot;, &quot;RIBO_RCMD_QTY&quot;)"/>
                <Cell row="3" col="10" displaytype="text" style="align:right;" class="grd_WF_SummaryBody1" expr="expr:fn_StdPer(&quot;VITA_C&quot;, &quot;VITAC_RCMD_QTY&quot;)"/>
                <Cell row="3" col="11" displaytype="text" style="align:right;" class="grd_WF_SummaryBody1" expr="expr:fn_StdPer(&quot;CA&quot;, &quot;CA_RCMD_QTY&quot;)"/>
                <Cell row="3" col="12" displaytype="text" style="align:right;" class="grd_WF_SummaryBody1" expr="expr:fn_StdPer(&quot;FE&quot;, &quot;FE_RCMD_QTY&quot;)"/>
                <Cell row="4" colspan="3" displaytype="text" style="align:center;" text="CPF 비율"/>
                <Cell row="4" col="3" displaytype="text" style="align:left;"/>
                <Cell row="4" col="4" displaytype="text" style="align:right;" expr="expr:fn_GetPerCPF(&quot;CARBO&quot;)"/>
                <Cell row="4" col="5" displaytype="text" style="align:right;" expr="expr:fn_GetPerCPF(&quot;PROT&quot;)"/>
                <Cell row="4" col="6" displaytype="text" style="align:right;" expr="expr:fn_GetPerCPF(&quot;FAT&quot;)"/>
                <Cell row="4" col="7" colspan="6" displaytype="text" style="align:left;" expr="expr:fn_GetCPF()"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btn_Graph" onclick="fn_Graph" taborder="11" text="그래프보기" position="absolute 898 87 985 107" class="btn_WF_Custom" image=""/>
        <Static id="Static15" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 15 0 815 10"/>
        <Static id="Static01" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 0 0 15 685"/>
        <Static id="Static02" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 985 0 1000 685"/>
        <Static id="Static04" text="h15" class="Guide01_AreaRed" visible="false" position="absolute 23 678 991 693"/>
        <Static id="Static05" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 15 0 991 10"/>
        <Button id="btn_search" taborder="21" text="조회" onclick="fn_Search" class="btn_WF_searchCm" position="absolute 879 10 938 35"/>
        <Button id="btn_close" taborder="22" text="닫기" onclick="fn_close" class="btn_WF_CRUD" position="absolute 940 10 985 35"/>
        <Static id="sta_title" text="영양분석" class="sta_WF_Title" position="absolute 14 14 184 33"/>
        <Static id="Static06" text="h05" class="Guide01_AreaRed" visible="false" position="absolute 332 35 994 40"/>
        <Static id="Static07" class="sta_WFSA_Labelbg" position="absolute 15 40 985 81" anchor="left top right"/>
        <Static id="Static12" text="W10" visible="false" position="absolute 77 50 87 71" style="background:#ff000055;align:center middle;"/>
        <Static id="Static21" text="W10" visible="false" position="absolute 30 40 947 50" style="background:#ff000055;align:center middle;"/>
        <Static id="Static23" text="W10" visible="false" position="absolute 30 71 947 81" style="background:#ff000055;align:center middle;"/>
        <Static id="Static24" text="W15" visible="false" position="absolute 15 50 30 71" style="background:#ff000055;align:center middle;"/>
        <Static id="Static35" text="W30" visible="false" position="absolute 298 50 328 71" style="background:#ff000055;align:center middle;"/>
        <Static id="Static03" text="기  간" position="absolute 32 50 78 71" class="sta_WFSA_label"/>
        <Combo codecolumn="CODE" datacolumn="CORNER_DESC" displayrowcount="10" id="cbo_Corner" index="0" innerdataset="ds_Corner" taborder="5" position="absolute 565 50 665 71"/>
        <Static id="Static0" text="코  너" position="absolute 513 50 558 71" class="sta_WFSA_label"/>
        <MaskEdit id="me_FromMenuDate" mask="####-##-##" oneditclick="g_Date_OnFocus" onsetfocus="g_Date_OnFocus" onkillfocus="g_Date_OnKillFocus" taborder="0" type="string" position="absolute 87 50 166 71"/>
        <Static id="Static1" text="끼  니" position="absolute 329 50 374 71" class="sta_WFSA_label"/>
        <Combo codecolumn="CODE" datacolumn="CODE_NAME" displayrowcount="10" id="cbo_Meal" index="0" innerdataset="ds_Meal" onitemchanged="cbo_Meal_OnChanged" taborder="4" position="absolute 381 50 481 71"/>
        <Static id="Static2" text="~" position="absolute 189 50 198 71"/>
        <MaskEdit id="me_ToMenuDate" mask="####-##-##" oneditclick="g_Date_OnFocus" onsetfocus="g_Date_OnFocus" onkillfocus="g_Date_OnKillFocus" taborder="2" type="string" position="absolute 199 50 278 71"/>
        <CheckBox id="chk_Gubun" taborder="6" text="폐기율 적용" value="false" position="absolute 695 50 782 71" truevalue="1" falsevalue="0"/>
        <Button id="btn_ToDate" onclick="btn_Date_OnClick" taborder="3" userdata="me_ToMenuDate" position="absolute 277 50 298 71" class="btn_WF_cal" text="" image=""/>
        <Button id="btn_FromDate" onclick="btn_Date_OnClick" taborder="1" userdata="me_FromMenuDate" position="absolute 165 50 186 71" class="btn_WF_cal" text="" image=""/>
        <Static id="Static08" text="W10" visible="false" position="absolute 371 50 381 71" style="background:#ff000055;align:center middle;"/>
        <Static id="Static09" text="W30" visible="false" position="absolute 481 50 511 71" style="background:#ff000055;align:center middle;"/>
        <Static id="Static10" text="W10" visible="false" position="absolute 555 50 565 71" style="background:#ff000055;align:center middle;"/>
        <Static id="Static11" text="W30" visible="false" position="absolute 665 50 695 71" style="background:#ff000055;align:center middle;"/>
        <Static id="Static13" text="W6" visible="false" position="absolute 728 81 989 87" style="background:#ff000055;align:center middle;"/>
        <Static id="Static14" text="h05" class="Guide01_AreaRed" visible="false" position="absolute 728 107 989 112"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_List" keystring="G:-MENU_DATE"/>
      <Dataset id="ds_Meal"/>
      <Dataset id="ds_Corner"/>
      <Dataset id="ds_Input">
        <ColumnInfo>
          <Column id="UPJANG" size="256" type="INT"/>
          <Column id="SUBINV_CODE" size="256" type="STRING"/>
          <Column id="FROM_MENU_DATE" size="256" type="STRING"/>
          <Column id="TO_MENU_DATE" size="256" type="STRING"/>
          <Column id="MEAL" size="256" type="STRING"/>
          <Column id="CORNER" size="256" type="STRING"/>
          <Column id="GUBUN" size="256" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_NutStd">
        <ColumnInfo>
          <Column id="ATTR01" size="300" type="STRING"/>
          <Column id="ATTR02" size="300" type="STRING"/>
          <Column id="ATTR03" size="300" type="STRING"/>
          <Column id="ATTR04" size="300" type="STRING"/>
          <Column id="ATTR05" size="300" type="STRING"/>
          <Column id="ATTR06" size="300" type="STRING"/>
          <Column id="ATTR07" size="300" type="STRING"/>
          <Column id="ATTR08" size="300" type="STRING"/>
          <Column id="ATTR09" size="300" type="STRING"/>
          <Column id="ATTR10" size="300" type="STRING"/>
          <Column id="CA_AVG_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="CA_RCMD_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="CAL_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="CARBO_AVG_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="CARBO_RCMD_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="CDATE" size="7" type="DATE"/>
          <Column id="CPF_C" size="22" type="BIGDECIMAL"/>
          <Column id="CPF_F" size="22" type="BIGDECIMAL"/>
          <Column id="CPF_P" size="22" type="BIGDECIMAL"/>
          <Column id="CUSER" size="9" type="STRING"/>
          <Column id="END_AGE" size="22" type="BIGDECIMAL"/>
          <Column id="FAT_AVG_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="FAT_RCMD_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="FE_AVG_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="FE_RCMD_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="HEIGHT" size="22" type="BIGDECIMAL"/>
          <Column id="NIACIN_AVG_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="NIACIN_RCMD_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="NUT_DESC" size="50" type="STRING"/>
          <Column id="PROT_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="REMARK" size="300" type="STRING"/>
          <Column id="RIBO_AVG_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="RIBO_RCMD_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="START_AGE" size="22" type="BIGDECIMAL"/>
          <Column id="SUBINV_CODE" size="8" type="STRING"/>
          <Column id="THIA_AVG_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="THIA_RCMD_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="UDATE" size="7" type="DATE"/>
          <Column id="USE_YN" size="1" type="STRING"/>
          <Column id="UUSER" size="9" type="STRING"/>
          <Column id="VITA_AVG_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="VITA_RCMD_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="VITAC_AVG_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="VITAC_RCMD_QTY" size="22" type="BIGDECIMAL"/>
          <Column id="WEIGHT" size="22" type="BIGDECIMAL"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="me_FromMenuDate_value" compid="me_FromMenuDate" propid="value" datasetid="ds_Input" columnid="FROM_MENU_DATE"/>
      <BindItem id="me_ToMenuDate_value" compid="me_ToMenuDate" propid="value" datasetid="ds_Input" columnid="TO_MENU_DATE"/>
      <BindItem id="chk_Gubun_value" compid="chk_Gubun" propid="value" datasetid="ds_Input" columnid="GUBUN"/>
    </Bind>
    <Script type="xscript4.0"><![CDATA[/*
 ******************************************************************************************
 * 시스템구분   : 메뉴관리 > 식단관리 > 식단등록
 * 프로그램명   : FMM00205P.XML
 * 기      능   : 영양분석
 * 작  성  자   : 박지영
 * 작성  일자   : 2008-02-01
 * 비      고   : 
 *		- ds_List				: [Main DS] 영양평가 리스트 데이터셋
 *      - ds_Meal				: [DS] 검색 조건 끼니 콤보 데이터셋
 *      - ds_Corner				: [DS] 검색 조건 코너 콤보 데이터셋
 *      - ds_Input				: [DS] 검색 조건 데이터셋
 *      - ds_NutStd				: [DS] 기준 영양소 데이터셋
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
//=========================================================================================
// [ PART 1 ]
// Form에서 Include 할 내용을 정의
//
//=========================================================================================
include "U_lib::lib_conversionCom.xjs";
//@@컨버터에서 주석처리 #include "LIB::sc_comon.js";			// 시스템공통 함수
//@@컨버터에서 주석처리 #include "LIB::lib_comm_0001.js";
//@@컨버터에서 주석처리 #include "LIB::tit_comm_0001.js";		// X-Framework Lib
//=========================================================================================
// [ PART 2 ]
// Form에서 사용될 전역변수를 선언
//
//=========================================================================================
var f_Upjang, f_SubinvCd, f_FromMenuDate, f_ToMenuDate;
//=========================================================================================
// [ PART 3 ]
// Form Loading 시 작업 정의
//
//=========================================================================================
function form_onload(obj:Form, e:LoadEventInfo)
{
	gfn_formOnLoad(obj, false);

	// X-Framework : Action 정보 생성 
	fsp_init(this);
	
	// 부모창에서 넘겨주는 Args
	f_Upjang       = fa_UPJANG;			// 업장코드
	f_SubinvCd     = fa_SUBINV_CODE;	// 식당코드
	f_FromMenuDate = fa_FROM_MENU_DATE;	// 제공일자 시작일
	f_ToMenuDate   = fa_TO_MENU_DATE;	// 제공일자 종료일
	
	// Test Data
	// f_Upjang       = 106246;
	// f_SubinvCd       = "S1000376";
	// f_FromMenuDate = "20071120";
	// f_ToMenuDate   = "20071231";
	
	// Default Data Check
	if( gfn_length(gfn_trim(f_Upjang))== 0 || gfn_trim(f_Upjang)== null ) {
		g_Message("EE", "업장코드가 존재하지 않습니다.\n창을 닫습니다.");
		this.close();
	}
	if( gfn_length(gfn_trim(f_SubinvCd))== 0 || gfn_trim(f_SubinvCd)== null ) {
		g_Message("EE", "식당코드가 존재하지 않습니다.\n창을 닫습니다.");
		this.close();
	}
	if( gfn_length(gfn_trim(f_FromMenuDate))== 0 || gfn_trim(f_FromMenuDate)== null ) {
		g_Message("EE", "제공일자 시작일이 존재하지 않습니다.\n창을 닫습니다.");
		this.close();
	}
	if( gfn_length(gfn_trim(f_ToMenuDate))== 0 || gfn_trim(f_ToMenuDate)== null ) {
		g_Message("EE", "제공일자 종료일이 존재하지 않습니다.\n창을 닫습니다.");
		this.close();
	}
	
	// Default Data Setting
	ds_Input.clearData();
	ds_Input.addRow();
	ds_Input.setColumn(0, "UPJANG",         f_Upjang      );
	ds_Input.setColumn(0, "SUBINV_CODE",    f_SubinvCd      );
	ds_Input.setColumn(0, "FROM_MENU_DATE", f_FromMenuDate);
	ds_Input.setColumn(0, "TO_MENU_DATE",   f_ToMenuDate  );
	ds_Input.setColumn(0, "GUBUN",          "0"           ); // "1" : 폐기율 미적용, "0" : 폐기율 적용
	
	// 끼니 조회
	fn_SearchCommon("fm/fmz:FMS_MEAL_CORNER_S001","","ds_Meal=gds_Csqlout","USE_YN='Y' nullyn='Y' SUBINV_CODE="+wrapQuote(f_SubinvCd));
	
	// 코너 조회
	fn_SearchCommon("fm/fmz:FMS_MEAL_CORNER_S002","","ds_Corner=gds_Csqlout","USE_YN='Y' nullyn='Y' SUBINV_CODE="+wrapQuote(f_SubinvCd));
	
	// 영양소 기준
	fsp_clear(this);
	ds_NutStd.clearData();
	fsp_addSearch(this,"fm/fmm:FMM00205P_S003");
	http.Sync = true;
	fsp_callService(this,"","","ds_Input=ds_Input","ds_NutStd=ds_NutStd","","fn_callBackCorner","",true);
	http.Sync = false;
	
	cbo_Meal.index = 0;
	cbo_Corner.index = 0;
	
	// Focus Setting
	me_FromMenuDate.setFocus();
	
	fn_Search();
}

function fn_callBackCorner ( eCode, eMsg )
{

}

function frm_OnKeyDown(obj:Form, e:KeyEventInfo)
{
	gfn_formKeyDown(obj, e); //(obj,e.fromreferenceobject,e.keycode,e.shiftKey,e.ctrlKey,e.altKey,-1,-1);
}
//=========================================================================================
// [ PART 4 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,도움말,form닫기)
//
//=========================================================================================
/*
 ******************************************************************************************
 * 함  수  명   : fn_Search()
 * 기      능   : [조회버튼] 검색조건에 해당하는 정보를 조회
 ******************************************************************************************
 */
function fn_Search(obj:Button, e:ClickEventInfo)
{
	// 검색조건 체크
	// 제공일자 범위 체크
	var v_FromDate = ds_Input.getColumn(0, "FROM_MENU_DATE");
	if( gfn_length(gfn_trim(v_FromDate))== 0 || gfn_trim(v_FromDate)== null ) {
		ds_Input.setColumn(0, "FROM_MENU_DATE", f_FromMenuDate);
	} else {
		if( parseInt(v_FromDate) < parseInt(f_FromMenuDate) ) {
			g_Message("EE", "제공일자 시작일은 ["+ gfn_subStr(f_FromMenuDate,0, 4)+ "-" + gfn_subStr(f_FromMenuDate,4, 2)+ "-" + gfn_subStr(f_FromMenuDate,6, 2)+"]보다\n작을 수 없습니다.");
			me_FromMenuDate.setFocus();
			return;
		}
	}
	var v_ToDate = ds_Input.getColumn(0, "TO_MENU_DATE");
	if( gfn_length(gfn_trim(ds_Input.getColumn(0, "TO_MENU_DATE")))== 0 || gfn_trim(ds_Input.getColumn(0, "TO_MENU_DATE"))== null ) {
		ds_Input.setColumn(0, "TO_MENU_DATE", f_ToMenuDate);
	} else {
		if( parseInt(v_ToDate) > parseInt(f_ToMenuDate) ) {
			g_Message("EE", "제공일자 종료일은 ["+ gfn_subStr(f_FromMenuDate,0, 4)+ "-" + gfn_subStr(f_FromMenuDate,4, 2)+ "-" + gfn_subStr(f_FromMenuDate,6, 2)+"]을\n넘길 수 없습니다.");
			me_ToMenuDate.setFocus();
			return;
		}
	}
	if (v_FromDate>v_ToDate)
	{
		g_Message("EE", "검색기간을 확인해 주십시오.");
		me_FromMenuDate.setFocus();
		return false;
	}
	
	ds_Input.setColumn(0, "MEAL",   gfn_trim(cbo_Meal.value));
	ds_Input.setColumn(0, "CORNER", gfn_trim(cbo_Corner.value));
	
	// Result DataSet Clear
	ds_List.clearData();
	
	// DataSet & callBack함수 정의 
	var actionName, cmdName, inData, outData, otherArg, callBackFnc;
	inData			= "ds_Input=ds_Input";
	outData			= "ds_List=ds_List";
	otherArg		= "";
	callBackFnc		= "fn_callBackSearch";
	
	fsp_clear(this);
	if( ds_Input.getColumn(0, "GUBUN") == "1" ) {
		fsp_addSearch(this, "fm/fmm:FMM00205P_S004");
	} else {
		fsp_addSearch(this, "fm/fmm:FMM00205P_S005");
	}
    fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);		// 서비스 호출
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_Insert()
 * 기      능   : [등록버튼] 등록 버튼 클릭 시 처리되는 작업
 ******************************************************************************************
 */
function fn_insert()
{
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_Save()
 * 기      능   : [저장버튼] 저장 버튼 클릭 시 처리되는 작업
 ******************************************************************************************
 */
function fn_save()
{
}
/* 
 ******************************************************************************************
 * 함  수  명   : fn_Delete()
 * 기      능   : [삭제버튼] 삭제 시 처리되는 작업
 ******************************************************************************************
 */
function fn_delete(nRow)
{
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_Print()
 * 기      능   : [출력버튼] 출력 시 처리되는 작업
 ******************************************************************************************
 */
function fn_print()
{
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_close()
 * 기      능   : [닫기버튼] 화면을 닫을때 처리되는 작업
 ******************************************************************************************
 */
function fn_close(obj:Button, e:ClickEventInfo)
{
	this.close();
}
//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
//
//=========================================================================================
/*
 ******************************************************************************************
 * 함  수  명   : fn_callBackSearch()
 * 입      력   : errCode 	= 에러코드
				  errMsg	= 에러메세지
 * 반      환   : 없음
 * 기      능   : 리스트 조회 후 콜백 함수
 * 작  성  자   : 박지영
 * 작성  일자   : 2008-02-01
 ******************************************************************************************
 */
function fn_callBackSearch(errCode, errMsg)
{	
	if( errCode != 0 ) {
		return;
	} else {
		//trace(ds_List.SaveXML());
	}
}

/*
 ******************************************************************************************
 * 함  수  명   : fn_SearchCommon(sqlId,inDS,outDS,otherArg)
 * 입      력   : sqlId = 실행할 sqlID
				  inDS	= input DS
				  outDS	= out DS
				  otherArg = arg
 * 반      환   : 없음
 * 기      능   : 코드조회
 * 작  성  자   : 박지영
 * 작성  일자   : 2007-12-12  
 ******************************************************************************************
 */
function fn_SearchCommon(sqlId,inDS,outDS,otherArg)
{
	fsp_clear(this);
	fsp_addSearch(this, sqlId);
	http.Sync = true;
	fsp_callService(this, "", "", inDS, outDS ,otherArg, "");
	http.Sync = false;
}

/*
 ******************************************************************************************
 * 함  수  명   : fn_StdDif(strColumnId, strStdColumnId)
 * 입      력   : strColumnId : 영양소 컬럼 아이디
                  strStdColumnId : 영양소 기준 컬럼 아이디
 * 반      환   : 기준대비 차이량
 * 기      능   : 기준대비 차이량 계산
 * 작  성  자   : 박지영
 * 작성  일자   : 2008-02-01
 ******************************************************************************************
 */
function fn_StdDif(strColumnId, strStdColumnId)
{
	if( ds_List.getRowCount() > 0 && ds_NutStd.getRowCount() > 0 ) {
		var iDif = numFormat(ds_List.getAvg(strColumnId) - ds_NutStd.getColumn(0, strStdColumnId), 2);
		if( iDif > 0 )
			return "+" + gfn_toString(iDif);			// 기준 대비 +인경우 '+' 추가
		else
			return gfn_toString(iDif);
	} else {
		return "-";
	}
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_StdPer(strColumnId, strStdColumnId)
 * 입      력   : strColumnId : 영양소 컬럼 아이디
                  strStdColumnId : 영양소 기준 컬럼 아이디
 * 반      환   : 기준대비 섭취비율
 * 기      능   : 기준대비 섭취비율 계산
 * 작  성  자   : 박지영
 * 작성  일자   : 2008-02-01
 ******************************************************************************************
 */
function fn_StdPer(strColumnId, strStdColumnId)
{
	if( ds_List.getRowCount() > 0 && ds_NutStd.getRowCount() > 0 ) {
		var iPer = numFormat((ds_List.getAvg(strColumnId) / ds_NutStd.getColumn(0, strStdColumnId)) * 100, 2);
		if ( iPer > 0 ) {
			return gfn_toString(iPer)+ "%";
		} else {
			return "0.00%";
		}
	} else {
		return "-";
	}
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_GetPerCPF(strColumnId)
 * 입      력   : strColumnId : 영양소 컬럼 아이디
 * 반      환   : CPF 비율
 * 기      능   : CPF 비율 계산
 * 작  성  자   : 박지영
 * 작성  일자   : 2008-02-01
 ******************************************************************************************
 */
function fn_GetPerCPF(strColumnId)
{
	// CARBO : 당질
	// PROT : 단백질
	// FAT : 지질
	if( ds_List.getRowCount() > 0 ) {
		var v_temp = 0;
		switch(strColumnId) {
			case "CARBO" :
				v_temp = ds_List.getAvg("CARBO") * 4;
				break;
			case "PROT" :
				v_temp = ds_List.getAvg("PROT") * 4;
				break;
			case "FAT" :
				v_temp = ds_List.getAvg("FAT") * 9;
				break;
			default :
				return "-";
		}
		if( v_temp == 0 )
			return "-";
		else
			return gfn_toString(numFormat((v_temp / ((ds_List.getAvg("CARBO") * 4) + (ds_List.getAvg("PROT") * 4) + (ds_List.getAvg("FAT") * 9))) * 100, 2))+ "%";
	} else {
		return "-";
	}
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_GetCPF()
 * 입      력   : 없음
 * 반      환   : 없음
 * 기      능   : CPF 기준 텍스트 가져오기
 * 작  성  자   : 박지영
 * 작성  일자   : 2008-02-01
 ******************************************************************************************
 */
function fn_GetCPF()
{
	if( ds_List.getRowCount() > 0 && ds_NutStd.getRowCount() > 0 ) {
		return "CPF 기준 = " + ds_NutStd.getColumn(0, "CPF_C") + " : " + ds_NutStd.getColumn(0, "CPF_P") + " : " + ds_NutStd.getColumn(0, "CPF_F");
	} else {
		return "CPF 기준 = 데이터 없음";
	}
}

/*------------------------------------------------------------
	1. Function    : fn_SetNutStd(strColumnID)
	2. Description : 영양소 기준량 셋팅
	3. Arguments   : 
	4. History     : 2008. 04. 07 - 최초작성
*------------------------------------------------------------*/
function fn_SetNutStd(strColumnID)
{
	if( ds_NutStd.getRowCount() == 1 ) {
		return ds_NutStd.getColumn(0, strColumnID);
	} else {
		return 0;
	}
}
//=========================================================================================
// [ PART 6 ]
// component Event 정의 ( User Define function )
// --> component Event의 기요,기능,동작 등 상세내용은 MiPlatform 메뉴얼을 참조하시기 바랍니다.
//=========================================================================================
/******************************************************************************************
 * 함  수  명   : btn_Date_OnClick(obj,nX,nY)
 * 기      능   : 달력 팝업 호출
 * 작  성  자   : 박지영
 * 작성  일자   : 2008-01-08
 ******************************************************************************************
 */
function btn_Date_OnClick(obj:Button, e:ClickEventInfo)
{
	g_CalButton_OnClick(obj);
}
/******************************************************************************************
 * 함  수  명   : fn_Graph(obj)
 * 기      능   : 그래프 팝업
 * 작  성  자   : 박지영
 * 작성  일자   : 2008-01-08
 ******************************************************************************************
 */
function fn_Graph(obj:Button, e:ClickEventInfo)
{
	// 영양소 기준정보 DataSet Check
	if( ds_NutStd.getRowCount() == 0 ) {
		g_Message("EE", "영양소 기준 정보가 존재하지 않습니다.");
		return;
	}
	// 영양평가 리스트 DataSet Check
	if( ds_List.getRowCount() == 0 ) {
		g_Message("EE", "데이터가 존재하지 않습니다.");
		return;
	}
	
	// 그래프 팝업 호출
	var args = {ds_List:ds_List, ds_NutStd:ds_NutStd};
	gfn_dialog("", "U_FSM::FSM00180V.xfdl",args);
}
/******************************************************************************************
 * 함  수  명   : cbo_Meal_OnChanged(obj,strCode,strText,nOldIndex,nNewIndex)
 * 기      능   : 끼니 선택시 코너 콤보리스트 조회
 * 작  성  자   : 박지영
 * 작성  일자   : 2008-01-10
 ******************************************************************************************
 */
function cbo_Meal_OnChanged(obj:Combo, e:ItemChangeEventInfo)
{
	ds_Input.setColumn(0, "MEAL", e.postvalue);

	if (gfn_length(e.postvalue)== 0)
	{
		ds_Corner.filter("");
	}
	else
	{
		ds_Corner.filter("gfn_isNull(CODE) || MEAL=='"+e.postvalue+"'");
	}
	cbo_Corner.index = 0;
}

/******************************************************************************************
 * 함  수  명   : grd_List_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
 * 기      능   : 그리드헤드 더블클릭시 Sort
 * 작  성  자   : 박지영
 * 작성  일자   : 2008-01-30
 ******************************************************************************************
 */
function grd_List_OnHeadClick(obj:Grid, e:GridClickEventInfo)
{
	gfn_gridSort(obj, e); //(eval(obj.binddataset), obj, e.cell);
}]]></Script>
  </Form>
</FDL>
