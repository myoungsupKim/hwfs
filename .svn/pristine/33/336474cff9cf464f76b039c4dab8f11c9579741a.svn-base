<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[식수오차율 조회]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
SELECT T.MENU_DATE, T.MEAL, T.CORNER, T.SCHEDULE, T.WDESC, T.MENU_DESC, T.MENU_FEATURE
     , T.EXPECT_MEAL_QTY, T.COOK_MEAL_QTY, T.REAL_MEAL_QTY
     , T.REAL_MEAL_QTY - T.EXPECT_MEAL_QTY AS EXPECT_QTY_DIFF 
     , T.REAL_MEAL_QTY - T.COOK_MEAL_QTY AS COOK_QTY_DIFF 
     , ABS(T.REAL_MEAL_QTY - T.EXPECT_MEAL_QTY) AS EXPECT_QTY_DIFF_ABS 
     , ABS(T.REAL_MEAL_QTY - T.COOK_MEAL_QTY) AS COOK_QTY_DIFF_ABS
     , DECODE(T.EXPECT_MEAL_QTY, 0, 100, ROUND((T.REAL_MEAL_QTY - T.EXPECT_MEAL_QTY) / T.EXPECT_MEAL_QTY * 100, 1)) AS EXPECT_QTY_RATE 
     , DECODE(T.COOK_MEAL_QTY, 0, 100, ROUND((T.REAL_MEAL_QTY - T.COOK_MEAL_QTY) / T.COOK_MEAL_QTY * 100, 1)) AS COOK_QTY_RATE 
  FROM (
        SELECT T1.MEAL, T1.CORNER, T1.MENU_DATE, T1.SCHEDULE, T1.WDESC,
               (T2.CODE_NAME || T3.CODE_NAME) || DECODE(T1.CORNER_DESC, NULL, '', '(' || T1.CORNER_DESC || ')') AS MENU_DESC, T1.MENU_FEATURE,
               T1.EXPECT_MEAL_QTY, T1.COOK_MEAL_QTY, T1.REAL_MEAL_QTY
          FROM (
                SELECT A.HALL_CD, A.MEAL, A.CORNER, TO_CHAR(TO_DATE(A.MENU_DATE, 'RRRR-MM-DD'),'YYYY.MM.DD') || '(' || TO_CHAR(TO_DATE(A.MENU_DATE, 'RRRR-MM-DD'),'dy','NLS_DATE_LANGUAGE=KOREAN') || ')' AS MENU_DATE,
                       DECODE(B.ACT_SCHEDULE, NULL, B.FCT_SCHEDULE, B.ACT_SCHEDULE) AS SCHEDULE, C.WDESC,
                       A.EXPECT_MEAL_QTY, A.COOK_MEAL_QTY, A.REAL_MEAL_QTY,
                       (SELECT AB.CORNER_DESC FROM FSA_HALL_DTL AB
                         WHERE AB.UPJANG  = A.UPJANG
                           AND AB.HALL_CD = A.HALL_CD
                           AND AB.MEAL    = A.MEAL
                           AND AB.CORNER  = A.CORNER) AS CORNER_DESC, A.MENU_FEATURE
                  FROM FSM_REAL_MENU_MST A,
                       MAF_OP_CALENDAR B,
                       (SELECT A.CUR_DATE, A.WCODE, A.WDESC
                          FROM UPOS_SC_WEATHER_INFO_V A,
                               SCO_UPJANG_MST B
                         WHERE A.AREA_CODE = B.LOC_CD
                           AND A.CUR_DATE BETWEEN #FROM_MENU_DATE# AND #TO_MENU_DATE#
                           AND B.UPJANG = #UPJANG#) C
                 WHERE 1 = 1
                   AND A.UPJANG = #UPJANG# --필수 검색조건(사업장)
                   AND A.HALL_CD = #HALL_CD# --필수검색조건(식당)
                  <isNotEqual col="MEAL" value="000">
                   AND A.MEAL = #MEAL# --선택 검색조건(끼니)
                  </isNotEqual>
                  <isNotEqual col="CORNER" value="000">
                   AND A.CORNER = #CORNER# --선택 검색조건(코너)
                  </isNotEqual>
                  <isNotEqual col="WEEK_DAY" value="0">
                   AND TO_CHAR(TO_DATE(A.MENU_DATE, 'RRRR-MM-DD'), 'D') = #WEEK_DAY# --선택 검색조건(요일 1:일~7:토)
                  </isNotEqual>
                   AND A.MENU_DATE BETWEEN #FROM_MENU_DATE# AND #TO_MENU_DATE# --필수 검색조건(제공일)
                   AND A.UPJANG = B.UPJANG(+)
                   AND A.MENU_DATE = B.OP_DATE(+)
                   AND A.MENU_DATE = C.CUR_DATE(+)
                   AND EXISTS (SELECT 1 FROM FSM_REAL_RECIPE_ITEM X WHERE X.UPJANG = A.UPJANG AND X.MENU_CD = A.MENU_CD AND ROWNUM = 1) ) T1, 
               (SELECT CODE, CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0023') T2,
               (SELECT CODE, CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0022') T3
         WHERE T1.MEAL = T2.CODE(+)
           AND T1.CORNER = T3.CODE(+) 
       ) T
 ORDER BY T.MENU_DATE, T.MEAL, T.CORNER	</statement>
	<input default-name="ds_Input">
	</input>
	<output default-name="ds_List">
	</output>
</query>