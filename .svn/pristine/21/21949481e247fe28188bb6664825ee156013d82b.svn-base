<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="ft.fts.saleOrderItemMgmtDAO">
    <desc>입고(재고)를 판매 주문(품목)에 대하여 관리 HQML Query</desc>

    <!-- 입고(재고)를 판매 주문(품목)에 대하여 관리 목록을 조회한다. -->
    <statement name="selectList" type="select">
        /*+ com.hwfs.ft.fts.dao.SaleOrderItemMgmtDAO.selectList */
        <![CDATA[
        SELECT SALE_ORDER_NUM,
               SALE_ORDER_NUM_SEQ,
               SALE_ORDER_STATUS,
               DELIVER_NUM,
               PO_ORDER_NUM,
               ITEM_SEQ,
               ITEM_CD,
               ITEM_NM,
               HS_CD,
               UNIT,
               ORDER_QUANTITY,
               ORDER_WGT,
               RELEASE_APPRV_REQ_QUANTITY,
               RELEASE_APPRV_REQ_WGT,
               RELEASE_APPRV_QUANTITY,
               RELEASE_APPRV_WGT,
               RELEASE_QUANTITY,
               RELEASE_WGT,
               BEFORE_INVENTORY,
               BUY_CST,
               SALE_CST,
               OTHER_AMT_TOT_AMT,
               IOUT_COST,
               WH_CHARG_COST,
               WTRLRG_TARIFF_INT,
               SALES_GAIN_AMT,
               BLCK_MARK,
               DECODE(RECEIVE_REQDOC_PUBLISH_YN, 'Y', 1, 0) AS RECEIVE_REQDOC_PUBLISH_YN,
               RELEASE_CERTIFICAT_PUBLISH_DTM,
               CDATE,
               CUSER,
               UUSER,
               UDATE
        FROM   SALE_ORDER_ITEM_MGMT
        WHERE  SALE_ORDER_NUM = :saleOrderNum
        AND    SALE_ORDER_NUM_SEQ = :saleOrderNumSeq

        ]]>
    </statement>

   <!-- 입고(재고)를 판매 주문(품목)에 대하여 관리 목록을 조회한다. -->
    <statement name="selectList2" type="select">
        /*+ com.hwfs.ft.fts.dao.SaleOrderItemMgmtDAO.selectList2 */
        <![CDATA[
        SELECT SALE_ORDER_NUM,
               SALE_ORDER_NUM_SEQ,
               SALE_ORDER_STATUS,
               DELIVER_NUM,
               PO_ORDER_NUM,
               ITEM_SEQ,
               ITEM_CD,
               ITEM_NM,
               HS_CD,
               UNIT,
               ORDER_QUANTITY,
               ORDER_WGT,
               RELEASE_APPRV_REQ_QUANTITY,
               RELEASE_APPRV_REQ_WGT,
               RELEASE_APPRV_QUANTITY,
               RELEASE_APPRV_WGT,
               NVL(RELEASE_QUANTITY,0) RELEASE_QUANTITY,
               RELEASE_WGT,
               BEFORE_INVENTORY,
               BUY_CST,
               SALE_CST,
               OTHER_AMT_TOT_AMT,
               IOUT_COST,
               WH_CHARG_COST,
               WTRLRG_TARIFF_INT,
               SALES_GAIN_AMT,
               BLCK_MARK,
               DECODE(RECEIVE_REQDOC_PUBLISH_YN, 'Y', 1, 0) AS RECEIVE_REQDOC_PUBLISH_YN,
               RELEASE_CERTIFICAT_PUBLISH_DTM,
               CDATE,
               CUSER,
               UUSER,
               UDATE
        FROM   SALE_ORDER_ITEM_MGMT
        WHERE  DELIVER_NUM = :deliverNum
        ]]>
    </statement>



   <!-- 입고(재고)를 판매 주문(품목)에 대하여 총주문수 을 조회한다. -->
    <statement name="getTotOrderQuantity" type="select">
        /*+ com.hwfs.ft.fts.dao.SaleOrderItemMgmtDAO.getTotOrderQuantity */
        <![CDATA[
        SELECT
               SUM(ORDER_QUANTITY) TOT_ORDER_QUANTITY
        FROM   SALE_ORDER_ITEM_MGMT
        WHERE  DELIVER_NUM = :deliverNum
        ]]>
    </statement>
    <!-- 입고(재고)를 판매 주문(품목)에 대하여 관리(을)를 등록한다. -->
    <statement name="insert" type="insert">
        /*+ com.hwfs.ft.fts.dao.SaleOrderItemMgmtDAO.insert */
        <![CDATA[
        INSERT INTO SALE_ORDER_ITEM_MGMT
        (
         SALE_ORDER_NUM,
         SALE_ORDER_NUM_SEQ,
         SALE_ORDER_STATUS,
         DELIVER_NUM,
         PO_ORDER_NUM,
         ITEM_SEQ,
         ITEM_CD,
         ITEM_NM,
         HS_CD,
         UNIT,
         ORDER_QUANTITY,
         ORDER_WGT,
         RELEASE_APPRV_REQ_QUANTITY,
         RELEASE_APPRV_REQ_WGT,
         RELEASE_APPRV_QUANTITY,
         RELEASE_APPRV_WGT,
         RELEASE_QUANTITY,
         RELEASE_WGT,
         BEFORE_INVENTORY,
         BUY_CST,
         SALE_CST,
         OTHER_AMT_TOT_AMT,
         IOUT_COST,
         WH_CHARG_COST,
         WTRLRG_TARIFF_INT,
         SALES_GAIN_AMT,
         BLCK_MARK,
         RECEIVE_REQDOC_PUBLISH_YN,
         RELEASE_CERTIFICAT_PUBLISH_DTM,
         SALE_UPRICE,
         CDATE,
         CUSER,
         UUSER,
         UDATE
        ) VALUES (
         :saleOrderNum,
         :saleOrderNumSeq,
        <#if saleOrderStatus?exists> :saleOrderStatus, <#else> null, </#if>
         :deliverNum,
         :poOrderNum,
         :itemSeq,
        <#if itemCd?exists> :itemCd, <#else> null, </#if>
        <#if itemNm?exists> :itemNm, <#else> null, </#if>
        <#if hsCd?exists> :hsCd, <#else> null, </#if>
        <#if unit?exists> :unit, <#else> null, </#if>
        <#if orderQuantity?exists> :orderQuantity, <#else> null, </#if>
        <#if orderWgt?exists> :orderWgt, <#else> null, </#if>
        <#if releaseApprvReqQuantity?exists> :releaseApprvReqQuantity, <#else> null, </#if>
        <#if releaseApprvReqWgt?exists> :releaseApprvReqWgt, <#else> null, </#if>
        <#if releaseApprvQuantity?exists> :releaseApprvQuantity, <#else> null, </#if>
        <#if releaseApprvWgt?exists> :releaseApprvWgt, <#else> null, </#if>
        <#if releaseQuantity?exists> :releaseQuantity, <#else> null, </#if>
        <#if releaseWgt?exists> :releaseWgt, <#else> null, </#if>
        <#if beforeInventory?exists> :beforeInventory, <#else> null, </#if>
        <#if buyCst?exists> :buyCst, <#else> null, </#if>
        <#if saleCst?exists> :saleCst, <#else> null, </#if>
        <#if otherAmtTotAmt?exists> :otherAmtTotAmt, <#else> null, </#if>
        <#if ioutCost?exists> :ioutCost, <#else> null, </#if>
        <#if whChargCost?exists> :whChargCost, <#else> null, </#if>
        <#if wtrlrgTariffInt?exists> :wtrlrgTariffInt, <#else> null, </#if>
        <#if salesGainAmt?exists> :salesGainAmt, <#else> null, </#if>
        <#if blckMark?exists> :blckMark, <#else> null, </#if>
        <#if receiveReqdocPublishYn?exists> DECODE(:receiveReqdocPublishYn, '1', 'Y', 'N'), <#else> null, </#if>
        <#if releaseCertificatPublishDtm?exists> :releaseCertificatPublishDtm, <#else> null, </#if>
        <#if saleUprice?exists> :saleUprice, <#else> null, </#if>
         SYSDATE,
         :loginSabun,
         :loginSabun,
         SYSDATE
        )

        ]]>
    </statement>

    <!-- 입고(재고)를 판매 주문(품목)에 대하여 관리(을)를 수정한다. -->
    <statement name="update" type="update">
        /*+ com.hwfs.ft.fts.dao.SaleOrderItemMgmtDAO.update */
        <![CDATA[
        UPDATE SALE_ORDER_ITEM_MGMT SET
        <#if saleOrderStatus?exists> SALE_ORDER_STATUS = :saleOrderStatus, </#if>
               DELIVER_NUM = :deliverNum,
               PO_ORDER_NUM = :poOrderNum,
               ITEM_SEQ = :itemSeq,
        <#if itemCd?exists> ITEM_CD = :itemCd, </#if>
        <#if itemNm?exists> ITEM_NM = :itemNm, </#if>
        <#if hsCd?exists> HS_CD = :hsCd, </#if>
        <#if unit?exists> UNIT = :unit, </#if>
        <#if orderQuantity?exists> ORDER_QUANTITY = :orderQuantity, </#if>
        <#if orderWgt?exists> ORDER_WGT = :orderWgt, </#if>
        <#if releaseApprvReqQuantity?exists> RELEASE_APPRV_REQ_QUANTITY = :releaseApprvReqQuantity, </#if>
        <#if releaseApprvReqWgt?exists> RELEASE_APPRV_REQ_WGT = :releaseApprvReqWgt, </#if>
        <#if releaseApprvQuantity?exists> RELEASE_APPRV_QUANTITY = :releaseApprvQuantity, </#if>
        <#if releaseApprvWgt?exists> RELEASE_APPRV_WGT = :releaseApprvWgt, </#if>
        <#if releaseQuantity?exists> RELEASE_QUANTITY = :releaseQuantity, </#if>
        <#if releaseWgt?exists> RELEASE_WGT = :releaseWgt, </#if>
        <#if beforeInventory?exists> BEFORE_INVENTORY = :beforeInventory, </#if>
        <#if buyCst?exists> BUY_CST = :buyCst, </#if>
        <#if saleCst?exists> SALE_CST = :saleCst, </#if>
        <#if otherAmtTotAmt?exists> OTHER_AMT_TOT_AMT = :otherAmtTotAmt, </#if>
        <#if ioutCost?exists> IOUT_COST = :ioutCost, </#if>
        <#if whChargCost?exists> WH_CHARG_COST = :whChargCost, </#if>
        <#if wtrlrgTariffInt?exists> WTRLRG_TARIFF_INT = :wtrlrgTariffInt, </#if>
        <#if salesGainAmt?exists> SALES_GAIN_AMT = :salesGainAmt, </#if>
        <#if blckMark?exists> BLCK_MARK = :blckMark, </#if>
        <#if receiveReqdocPublishYn?exists> RECEIVE_REQDOC_PUBLISH_YN = DECODE(:receiveReqdocPublishYn, '1', 'Y', 'N'), </#if>
        <#if releaseCertificatPublishDtm?exists> RELEASE_CERTIFICAT_PUBLISH_DTM = :releaseCertificatPublishDtm, </#if>
        <#if saleUprice?exists> SALE_UPRICE = :saleUprice, </#if>
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  SALE_ORDER_NUM = :saleOrderNum
        AND    SALE_ORDER_NUM_SEQ = :saleOrderNumSeq

        ]]>
    </statement>

    <!-- 입고(재고)를 판매 주문(품목)에 대하여 관리(을)를 삭제한다. -->
    <statement name="delete" type="delete">
        /*+ com.hwfs.ft.fts.dao.SaleOrderItemMgmtDAO.delete */
        <![CDATA[
        DELETE
        FROM   SALE_ORDER_ITEM_MGMT
        WHERE  SALE_ORDER_NUM = :saleOrderNum
        AND    SALE_ORDER_NUM_SEQ = :saleOrderNumSeq

        ]]>
    </statement>

    <!-- 입고(재고)를 판매 주문(품목)에 대하여 관리(을)를 삭제한다. -->
    <statement name="deleteAll" type="delete">
        /*+ com.hwfs.ft.fts.dao.SaleOrderItemMgmtDAO.deleteAll */
        <![CDATA[
        DELETE
        FROM   SALE_ORDER_ITEM_MGMT
        WHERE  SALE_ORDER_NUM = :saleOrderNum
        ]]>
    </statement>

    <!-- 입고(재고)를 판매 주문(품목)에 대하여 관리 목록을 조회한다. -->
    <statement name="selectSaleOrderItemMgmt" type="select">
        /*+ com.hwfs.ft.fts.dao.SaleOrderItemMgmtDAO.selectSaleOrderItemMgmt */
        <![CDATA[
        SELECT  A.SALE_ORDER_NUM,
               A.SALE_ORDER_NUM_SEQ,
               A.SALE_ORDER_STATUS,
               (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'SALE_ORDER_STATUS' AND CODE = A.SALE_ORDER_STATUS ) AS SALE_ORDER_STATUS_NM,
               A.DELIVER_NUM,
               A.PO_ORDER_NUM,
               A.ITEM_SEQ,
               A.ITEM_CD,
               A.ITEM_NM,
               A.HS_CD,
               A.UNIT,

               NVL(A.ORDER_QUANTITY,0) ORDER_QUANTITY,
               NVL(A.ORDER_WGT,0) ORDER_WGT,

               NVL(A.RELEASE_APPRV_REQ_QUANTITY,0) RELEASE_WAIT_QUANTITY,		--출고대기수량
               NVL(A.RELEASE_APPRV_REQ_WGT,0) RELEASE_WAIT_WGT,				    --출고대기중량

               NVL(A.RELEASE_QUANTITY,0) RELEASE_END_QUANTITY,					--출고완료수량
               NVL(A.RELEASE_WGT,0) RELEASE_END_WGT,							--출고완료중량

               NVL(A.ORDER_QUANTITY,0) - ( NVL(A.RELEASE_APPRV_REQ_QUANTITY,0) + NVL(A.RELEASE_QUANTITY,0) + NVL(A.CANCEL_QUANTITY,0) ) REMAIN_QUANTITY,  /*잔여수량*/
               CASE WHEN NVL(A.ORDER_QUANTITY,0) - ( NVL(A.RELEASE_APPRV_REQ_QUANTITY,0) + NVL(A.RELEASE_QUANTITY,0) + NVL(A.CANCEL_QUANTITY,0) ) = 0 THEN
                    0
               ELSE
                    NVL(A.ORDER_WGT,0)      - ( NVL(A.RELEASE_APPRV_REQ_WGT,0) + NVL(A.RELEASE_WGT,0) + NVL(A.CANCEL_WGT,0) )
               END REMAIN_WGT,  /*잔여중량*/

               A.BEFORE_INVENTORY,

               A.BUY_CST,
               A.SALE_CST,
               A.OTHER_AMT_TOT_AMT,
               A.IOUT_COST,
               A.WH_CHARG_COST,
               A.WTRLRG_TARIFF_INT,
               A.SALES_GAIN_AMT,
               A.BLCK_MARK,
               A.RECEIVE_REQDOC_PUBLISH_YN,
               A.RELEASE_CERTIFICAT_PUBLISH_DTM,

               B.ENTRY_NUM,
               B.ENTRY_ITEM_SEQ,
               (SELECT ORDER_DATE FROM SALE_ORDER WHERE SALE_ORDER_NUM = A.SALE_ORDER_NUM) ORDER_DATE,
               A.CDATE,
               A.CUSER,
               A.UUSER,
               A.UDATE,
               (SELECT COUNT(T.RELEASE_NUM) FROM RELEASE_ITEM_MGMT T WHERE T.SALE_ORDER_NUM = A.SALE_ORDER_NUM ) RELEASE_CNT
        FROM   SALE_ORDER_ITEM_MGMT A
              ,INVENTORY_MGMT_DELIVER B
        WHERE  A.DELIVER_NUM = B.DELIVER_NUM
        AND A.PO_ORDER_NUM = B.PO_ORDER_NUM
        AND A.ITEM_SEQ= B.ITEM_SEQ
        AND A.ITEM_CD = B.ITEM_CD
        AND A.SALE_ORDER_NUM = :saleOrderNum
        ORDER BY A.PO_ORDER_NUM, A.SALE_ORDER_NUM, A.SALE_ORDER_NUM_SEQ DESC
        ]]>
    </statement>

    <!-- 입고(재고)를 판매 주문 순번  조회한다. -->
    <statement name="getSaleOrderNumSeq" type="select">
        /*+ com.hwfs.ft.fts.dao.SaleOrderItemMgmtDAO.getSaleOrderNumSeq */
        <![CDATA[
        SELECT NVL(MAX(SALE_ORDER_NUM_SEQ),0) +1 AS SALE_ORDER_NUM_SEQ FROM SALE_ORDER_ITEM_MGMT WHERE SALE_ORDER_NUM=:saleOrderNum
        ]]>
    </statement>

    <!-- 출고 승인 요청 수량,중량  수정한다. -->
    <statement name="updateReleaseApprvReqQuantity" type="update">
        /*+ com.hwfs.ft.fts.dao.SaleOrderItemMgmtDAO.updateReleaseApprvReqQuantity */
        <![CDATA[
            UPDATE SALE_ORDER_ITEM_MGMT SET
                   RELEASE_APPRV_REQ_QUANTITY = NVL(RELEASE_APPRV_REQ_QUANTITY,0) + :releaseExpectQuantity
                   <#if saleOrderStatus?exists>, SALE_ORDER_STATUS = :saleOrderStatus </#if>
                 , RELEASE_APPRV_REQ_WGT = NVL(RELEASE_APPRV_REQ_WGT,0) + :releaseExpectWgt
                 , UUSER = :loginSabun
                 , UDATE = SYSDATE
            WHERE SALE_ORDER_NUM = :saleOrderNum
            AND SALE_ORDER_NUM_SEQ = :saleOrderNumSeq
        ]]>
    </statement>


    <!-- 출고 승인 요청 수량,중량  수정한다. -->
    <statement name="updateWhgChgReleaseApprvReqQuantity" type="update">
        /*+ com.hwfs.ft.fts.dao.SaleOrderItemMgmtDAO.updateWhgChgReleaseApprvReqQuantity */
        <![CDATA[
            UPDATE SALE_ORDER_ITEM_MGMT SET
                   ORDER_WGT = NVL(ORDER_WGT,0) + :orderWgt
                  ,RELEASE_APPRV_REQ_QUANTITY = NVL(RELEASE_APPRV_REQ_QUANTITY,0) + :releaseExpectQuantity
                   <#if saleOrderStatus?exists>, SALE_ORDER_STATUS = :saleOrderStatus </#if>
                 , RELEASE_APPRV_REQ_WGT = RELEASE_APPRV_REQ_WGT + :releaseExpectWgt
                 , UUSER = :loginSabun
                 , UDATE = SYSDATE
            WHERE SALE_ORDER_NUM = :saleOrderNum
            AND SALE_ORDER_NUM_SEQ = :saleOrderNumSeq
        ]]>
    </statement>

    <!-- 출고 승인수량,중량  수정한다. -->
    <statement name="updateReleaseApprvQuantity" type="update">
        /*+ com.hwfs.ft.fts.dao.SaleOrderItemMgmtDAO.updatereLeaseApprvQuantity */
        <![CDATA[
            UPDATE SALE_ORDER_ITEM_MGMT SET
                   RELEASE_APPRV_QUANTITY = NVL(RELEASE_APPRV_QUANTITY,0) + :releaseApprvQuantity
                 , RELEASE_APPRV_WGT = NVL(RELEASE_APPRV_WGT,0) + :releaseApprvWgt
                 , UUSER = :loginSabun
                 , UDATE = SYSDATE
            WHERE SALE_ORDER_NUM = :saleOrderNum
            AND SALE_ORDER_NUM_SEQ = :saleOrderNumSeq
        ]]>
    </statement>

    <!-- 출고 수량,중량  수정한다. -->
    <statement name="updateReleaseQuantity" type="update">
        /*+ com.hwfs.ft.fts.dao.SaleOrderItemMgmtDAO.updateReleaseQuantity */
        <![CDATA[
            UPDATE SALE_ORDER_ITEM_MGMT SET
                   RELEASE_QUANTITY = NVL(RELEASE_QUANTITY,0) + :releaseQuantity
                 , RELEASE_WGT = NVL(RELEASE_WGT,0) + :releaseWgt
                 , UUSER = :loginSabun
                 , UDATE = SYSDATE
            WHERE SALE_ORDER_NUM = :saleOrderNum
            AND SALE_ORDER_NUM_SEQ = :saleOrderNumSeq
        ]]>
    </statement>

    <!-- 주문 수량,중량  수정한다. -->
    <statement name="updateOrderQuantity" type="update">
        /*+ com.hwfs.ft.fts.dao.SaleOrderItemMgmtDAO.updateOrderQuantity */
        <![CDATA[
            UPDATE SALE_ORDER_ITEM_MGMT SET
                   ORDER_QUANTITY = :releaseQuantity
                 , ORDER_WGT = :releaseWgt
                 , UUSER = :loginSabun
                 , UDATE = SYSDATE
            WHERE SALE_ORDER_NUM = :saleOrderNum
            AND SALE_ORDER_NUM_SEQ = :saleOrderNumSeq
        ]]>
    </statement>

    <!-- 판매주문테이블의 판매단가,판매금액 변경. -->
    <statement name="updateSaleOrderUpriceChg" type="update">
        /*+ com.hwfs.ft.fts.dao.SaleOrderItemMgmtDAO.updateSaleOrderUpriceChg */
        <![CDATA[
            UPDATE SALE_ORDER_ITEM_MGMT SET
                   SALE_UPRICE = :saleUprice,
                   SALE_CST = :saleAmt,
                   UUSER = :loginSabun,
                   UDATE = SYSDATE
            WHERE SALE_ORDER_NUM = :saleOrderNum
            AND SALE_ORDER_NUM_SEQ = :saleOrderNumSeq
        ]]>
    </statement>

    <!-- 취소 수량(중량) 수정한다. -->
    <statement name="updateCancelQuantity" type="update">
        /*+ com.hwfs.ft.fts.dao.SaleOrderItemMgmtDAO.updateCancelQuantity */
        <![CDATA[
            UPDATE SALE_ORDER_ITEM_MGMT SET
                   CANCEL_QUANTITY = NVL(CANCEL_QUANTITY,0) + :cancelQuantity
                 , CANCEL_WGT = NVL(CANCEL_WGT,0) + :cancelWgt
                 , UUSER = :loginSabun
                 , UDATE = SYSDATE
            WHERE SALE_ORDER_NUM = :saleOrderNum
            AND SALE_ORDER_NUM_SEQ = :saleOrderNumSeq
        ]]>
    </statement>


    <!-- 판매 주문 상태 수정한다. -->
    <statement name="updateSaleOrderStatus" type="update">
        /*+ com.hwfs.ft.fts.dao.SaleOrderItemMgmtDAO.updateSaleOrderStatus */
        <![CDATA[
            UPDATE SALE_ORDER_ITEM_MGMT SET
                   SALE_ORDER_STATUS =:saleOrderStatus
                 , UUSER = :loginSabun
                 , UDATE = SYSDATE
            WHERE SALE_ORDER_NUM = :saleOrderNum
            AND SALE_ORDER_NUM_SEQ = :saleOrderNumSeq
        ]]>
    </statement>

    <!-- 주문 취소 건수 업데이트. -->
    <statement name="updateSaleOrderCancelQuantity" type="update">
        /*+ com.hwfs.ft.fts.dao.SaleOrderItemMgmtDAO.updateSaleOrderCancelQuantity */
        <![CDATA[
            UPDATE SALE_ORDER_ITEM_MGMT SET
                   CANCEL_QUANTITY = (
                                        SELECT SUM(A.CANCEL_QUANTITY) SUM_CANCEL_QUANTITY FROM SALE_ORDER_CANCEL_LOG A
                                        WHERE SALE_ORDER_NUM = :saleOrderNum
                                        AND SALE_ORDER_NUM_SEQ = :saleOrderNumSeq
                                     )
                 , CANCEL_WGT = (
                                        SELECT SUM(A.CANCEL_WGT) SUM_CANCEL_WGT FROM SALE_ORDER_CANCEL_LOG A
                                        WHERE SALE_ORDER_NUM = :saleOrderNum
                                        AND SALE_ORDER_NUM_SEQ = :saleOrderNumSeq
                                     )
                 , UUSER = :loginSabun
                 , UDATE = SYSDATE
            WHERE SALE_ORDER_NUM = :saleOrderNum
            AND SALE_ORDER_NUM_SEQ = :saleOrderNumSeq
        ]]>
    </statement>

</hqml>
