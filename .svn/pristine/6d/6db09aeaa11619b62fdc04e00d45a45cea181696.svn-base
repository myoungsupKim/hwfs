<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
SELECT
--  시나리오별 손익비교
         A.MGMT_ACCT_CD
        ,A.MGMT_ACCT_NAME
        , A.PC_CLASS
        , A.ACCT_LEVEL
        , ROUND(CASE WHEN B.AMT IS NULL THEN 0 ELSE ROUND(B.AMT) END) BASE_AMT
        , ROUND(CASE WHEN C.AMT IS NULL THEN 0 ELSE ROUND(C.AMT) END) OBJECT_AMT
        , ROUND(CASE WHEN B.AMT IS NULL THEN 0 ELSE ROUND(B.AMT) END) - ROUND(CASE WHEN C.AMT IS NULL THEN 0 ELSE ROUND(C.AMT) END) DIFF_AMT
        , ROUND(DECODE((CASE WHEN C.AMT IS NULL THEN 0 ELSE ROUND(C.AMT) END),0,0,(CASE WHEN B.AMT IS NULL THEN 0 ELSE ROUND(B.AMT) END) / (CASE WHEN C.AMT IS NULL THEN 0 ELSE ROUND(C.AMT) END)) * 100 ,1) DIFF_RATE
  FROM (
            SELECT DISTINCT B.MGMT_ACCT_CD
                          , B.MGMT_ACCT_NAME
                          , B.PC_CLASS
                          , B.ACCT_LEVEL
              FROM (    SELECT B.SCENARIO_CODE
	                         , B.MGMT_ACCT_CD
	                      FROM MAP_MST B,
	                           MAC_UPJANG_V C
	                     WHERE B.SCENARIO_CODE = #SCENARIO_1#
	                       AND B.YY = #YY#
	                       <isNotNull col="TM_CD">
		                   AND B.TM_CD = #TM_CD#
		                   </isNotNull>
		                   <isNotNull col="UPJANG">
		                   AND B.UPJANG = #UPJANG#
		                   </isNotNull>
	                       AND B.MM BETWEEN #SMM# AND #EMM#
	                       <isNotNull col="SUB_JOB_CD">
						   AND B.UPJANG = C.UPJANG
	                       AND C.SUB_JOB_CD = #SUB_JOB_CD#
						   </isNotNull>
						   <isNotNull col="SAUP_TYPE">
						   AND C.SAUP_TYPE = #SAUP_TYPE#
						   </isNotNull>
						   <isEqual col="CLOSE_TYPE" value="C05C">
						   AND NVL(B.DATA_TYPE,'0') IN ('C05C','0')
						   </isEqual>
						   <isEqual col="CLOSE_TYPE" value="C05D">
						   AND NVL(B.DATA_TYPE,'0') IN ('C05D','0')
						   </isEqual>
		                UNION ALL
		                  SELECT B.SCENARIO_CODE
		                        ,B.MGMT_ACCT_CD
		                     FROM MAP_MST B,
		                         MAC_UPJANG_V C
		                   WHERE B.YY = #YY#
		                     AND B.SCENARIO_CODE = #SCENARIO_2#   -- edt_Sce
		                     <isNotNull col="TM_CD">
		                     AND B.TM_CD = #TM_CD#
		                     </isNotNull>
		                     <isNotNull col="UPJANG">
		                     AND B.UPJANG = #UPJANG#
		                     </isNotNull>
		                     AND B.MM BETWEEN #SMM# AND #EMM#
		                     AND B.UPJANG = C.UPJANG
		                     <isNotNull col="SUB_JOB_CD">
						     AND C.SUB_JOB_CD = #SUB_JOB_CD#
						     </isNotNull>
						     <isNotNull col="SAUP_TYPE">
						     AND C.SAUP_TYPE = #SAUP_TYPE#
						     </isNotNull> 
						     <isEqual col="CLOSE_TYPE" value="C05C">
							 AND NVL(B.DATA_TYPE,'0') IN ('C05C','0')
							 </isEqual>
							 <isEqual col="CLOSE_TYPE" value="C05D">
							 AND NVL(B.DATA_TYPE,'0') IN ('C05D','0')
							 </isEqual>
						     ) A,
                     MAC_MGMT_ACCT B
              WHERE A.MGMT_ACCT_CD(+) = B.MGMT_ACCT_CD
                AND B.ACCT_TYPE = 'PL'
                <isNotNull col="PC_CLASS">
                AND B.PC_CLASS = 'P'  -- 요약, 상세선택일 경우 조건 제외
                </isNotNull>
            ) A,
           (
            SELECT B.MGMT_ACCT_CD
                 , SUM(NVL(B.AMT1,0))/TO_NUMBER(#DANWI#)  AS AMT    -- 천원 : /1000, 백만원 /1000000
              FROM MAP_MST B,
                   MAC_UPJANG_V C
             WHERE B.SCENARIO_CODE = #SCENARIO_1#
               AND B.YY = #YY# 
               <isNotNull col="TM_CD">
               AND B.TM_CD = #TM_CD#
               </isNotNull>
               <isNotNull col="UPJANG">
               AND B.UPJANG = #UPJANG#
               </isNotNull>
               AND B.MM BETWEEN #SMM# AND #EMM#
               AND B.UPJANG = C.UPJANG
               <isNotNull col="SUB_JOB_CD">
		       AND C.SUB_JOB_CD = #SUB_JOB_CD#
		       </isNotNull>
		       <isNotNull col="SAUP_TYPE">
		       AND C.SAUP_TYPE = #SAUP_TYPE#
		       </isNotNull>
		       <isEqual col="CLOSE_TYPE" value="C05C">
			   AND NVL(B.DATA_TYPE,'0') IN ('C05C','0')
			   </isEqual>
			   <isEqual col="CLOSE_TYPE" value="C05D">
			   AND NVL(B.DATA_TYPE,'0') IN ('C05D','0')
			   </isEqual> 
             GROUP BY B.MGMT_ACCT_CD
            ) B,
           (
            SELECT B.MGMT_ACCT_CD
                 , SUM(NVL(B.AMT1,0))/TO_NUMBER(#DANWI#)  AS AMT    -- 천원 : /1000, 백만원 /1000000
              FROM MAP_MST B,
                   MAC_UPJANG_V C
             WHERE B.YY = #YY#
               AND B.SCENARIO_CODE = #SCENARIO_2#  -- edt_Sce  
               <isNotNull col="TM_CD">
               AND B.TM_CD = #TM_CD#
               </isNotNull>
               <isNotNull col="UPJANG">
               AND B.UPJANG = #UPJANG#
               </isNotNull>
               AND B.MM BETWEEN #SMM# AND #EMM#
               AND B.UPJANG = C.UPJANG
               <isNotNull col="SUB_JOB_CD">
		       AND C.SUB_JOB_CD = #SUB_JOB_CD#
		       </isNotNull>
		       <isNotNull col="SAUP_TYPE">
		       AND C.SAUP_TYPE = #SAUP_TYPE#
		       </isNotNull> 
		       <isEqual col="CLOSE_TYPE" value="C05C">
			   AND NVL(B.DATA_TYPE,'0') IN ('C05C','0')
			   </isEqual>
			   <isEqual col="CLOSE_TYPE" value="C05D">
			   AND NVL(B.DATA_TYPE,'0') IN ('C05D','0')
			   </isEqual>
             GROUP BY B.MGMT_ACCT_CD
            ) C
     WHERE A.MGMT_ACCT_CD = B.MGMT_ACCT_CD(+)
       AND A.MGMT_ACCT_CD = C.MGMT_ACCT_CD(+)
  ORDER BY A.MGMT_ACCT_CD	</statement>
	<input default-name="ds_input">
		<col name="SCENARIO_1" size="255" type="VARCHAR" description="" /> 
		<col name="YY" size="255" type="VARCHAR" description="" /> 
		<col name="TM_CD" size="255" type="VARCHAR" description="" /> 
		<col name="UPJANG" size="255" type="VARCHAR" description="" /> 
		<col name="SMM" size="255" type="VARCHAR" description="" /> 
		<col name="EMM" size="255" type="VARCHAR" description="" /> 
		<col name="SCENARIO_2" size="255" type="VARCHAR" description="" /> 
		<col name="DANWI" size="255" type="VARCHAR" description="" />
		<col name="SUB_JOB_CD" size="255" type="VARCHAR" description="" />
		<col name="SAUP_TYPE" size="255" type="VARCHAR" description="" /> 
		<col name="PC_CLASS" size="255" type="VARCHAR" description="" /> 
		<col name="CLOSE_TYPE" size="10" type="VARCHAR" description="" /> 
	</input>
	<output default-name="ds_list">
	</output>
</query>
