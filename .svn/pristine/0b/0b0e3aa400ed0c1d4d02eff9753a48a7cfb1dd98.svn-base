<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="sc.scu.userIdReqListDAO">
	<desc>사용자ID 신청현황 HQML Query</desc>

	<!-- 사용자ID 신청현황 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.sc.scu.dao.UserIdReqListDAO.selectList */
		<![CDATA[
SELECT A.REQ_USER_SABUN,
       (SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = A.REQ_USER_SABUN) AS REQ_USER_NAME,
       A.UPJANG,
       C.UPJANGNM,
       A.OTCUSTCD,
       D.OTCUSTNM,
       A.USER_ID,
       B.NM_KOR AS USER_NAME,
       B.SABUN,
       A.REQUEST_CLASS,
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = '사용자군' AND SET1 = '외부' AND CODE = A.REQUEST_CLASS) AS REQUEST_NM,
       A.REQUEST_CD,
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'REQUEST_CD' AND CODE = A.REQUEST_CD) AS REQUEST_NAME,
       TO_CHAR(TO_DATE(A.REQUEST_DATE, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS') AS REQUEST_DATE,
       A.APPROV_USER_SABUN,
       (SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = A.APPROV_USER_SABUN) AS APPROV_USER_NAME,
       TO_CHAR(A.APPRV_DATE, 'YYYY-MM-DD HH24:MI:SS') AS APPRV_DATE,
       A.REQUEST_REASON AS REMARK,
       A.STATUS_CD,
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'STATUS_CD' AND CODE = A.STATUS_CD) AS STATUS_NM,
       TO_CHAR(TO_DATE(A.REQUEST_DATE, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') AS REQUEST_VIEW_DATE,
       A.RTN_REASON,
       B.MAIN_TYPE,
       (SELECT MAX(AUTHLEVEL) AS AUTHLEVEL FROM SCC_USER_AUTHLEVEL WHERE SABUN = B.SABUN) AS USER_AUTH_LEVEL,
       B.SIMPLE_PO_YN
FROM   SCC_USERID_REQUEST A,
       SCC_USERINFO B,
       ST_UPJANG C,
       FMP_OTHER_CUST D
WHERE  B.USERID = A.USER_ID
AND    C.UPJANG(+) = A.UPJANG
AND    D.OTCUSTCD(+) = A.OTCUSTCD
<#if requestSabun?has_content>
AND    A.REQ_USER_SABUN = :requestSabun
</#if>

<#if requestDateFrom?has_content>
AND    A.REQUEST_DATE >= :requestDateFrom||'000000'
</#if>
<#if requestDateTo?has_content>
AND    A.REQUEST_DATE <= :requestDateTo||'235959'
</#if>
<#if requestCd?has_content>
AND    A.REQUEST_CD = :requestCd
</#if>
<#if statusCd?has_content>
AND    A.STATUS_CD = :statusCd
</#if>

ORDER BY A.STATUS_CD, A.REQUEST_DATE
		]]>
	</statement>

	<!-- 사용자권한목록을 조회한다. -->
	<statement name="selectUserAuthList" type="select">
		/*+ com.hwfs.sc.scu.dao.UserIdReqListDAO.selectUserAuthList */
		<![CDATA[
SELECT A.SYS_TYPE,
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = '시스템구분' AND CODE = A.SYS_TYPE) AS SYS_TYPE_NAME,
       A.ROLE,
       A.ROLE_NAME,
       '' AS REMARK,
       '1' AS USE_YN,
       '' AS ATTR01,
       '' AS ATTR02,
       '' AS ATTR03,
       '' AS ATTR04,
       '' AS ATTR05,
       '' AS ATTR06,
       '' AS ATTR07,
       '' AS ATTR08,
       '' AS ATTR09,
       '' AS ATTR10,
       :sabun AS SABUN
FROM   SCC_ROLE A
WHERE  A.SYS_TYPE IN ('FICS', 'SPOON', 'FSMOBILE')
AND    DECODE(A.SYS_TYPE, 'FSMOBILE', A.ROLE, '1') = DECODE(A.SYS_TYPE, 'FSMOBILE', 'm008', '1')
AND    A.USE_CD = 'USER'
AND    A.USE_YN = 'Y'
ORDER BY A.SYS_TYPE, A.ROLE
		]]>
	</statement>

	<!-- 사용자군 권한 목록을 조회한다. -->
	<statement name="selectUserGroupAuthList" type="select">
		/*+ com.hwfs.sc.scu.dao.UserIdReqListDAO.selectUserGroupAuthList */
		<![CDATA[
SELECT A.SYS_TYPE,
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = '시스템구분' AND CODE = A.SYS_TYPE) AS SYS_TYPE_NAME,
       A.ROLE,
       A.ROLE_NAME,
       A.ROLE_TYPE,
       A.REMARK
FROM   SCC_ROLE A
WHERE  (A.SYS_TYPE, A.ROLE) IN (SELECT SYS_TYPE,
                                       ROLE
                                FROM   SCC_USER_GROUP_ROLE A,
                                       SCC_USERINFO B
                                WHERE  B.USER_GROUP = A.USER_GROUP
                                AND    B.SABUN = :sabun)
AND    A.USE_CD = 'UGRP'
AND    A.USE_YN = 'Y'
		]]>
	</statement>

	<!-- 사용자ID 신청현황(을)를 등록한다. -->
	<statement name="insertUserAuth" type="insert">
		/*+ com.hwfs.sc.scu.dao.UserIdReqListDAO.insertUserAuth */
		<![CDATA[
INSERT INTO SCC_USER_ROLE
(
 SYS_TYPE,
 SABUN,
 ROLE,
 REMARK,
 USE_YN,
 ATTR01,
 ATTR02,
 ATTR03,
 ATTR04,
 ATTR05,
 ATTR06,
 ATTR07,
 ATTR08,
 ATTR09,
 ATTR10,
 CUSER,
 CDATE,
 UUSER,
 UDATE
) VALUES (
 :sysType,
 :sabun,
 :role,
<#if remark?exists> :remark, <#else> null, </#if>
<#if useYn?exists> DECODE(:useYn, '1', 'Y', 'N'), <#else> null, </#if>
<#if attr01?exists> :attr01, <#else> null, </#if>
<#if attr02?exists> :attr02, <#else> null, </#if>
<#if attr03?exists> :attr03, <#else> null, </#if>
<#if attr04?exists> :attr04, <#else> null, </#if>
<#if attr05?exists> :attr05, <#else> null, </#if>
<#if attr06?exists> :attr06, <#else> null, </#if>
<#if attr07?exists> :attr07, <#else> null, </#if>
<#if attr08?exists> :attr08, <#else> null, </#if>
<#if attr09?exists> :attr09, <#else> null, </#if>
<#if attr10?exists> :attr10, <#else> null, </#if>
 :loginSabun,
 SYSDATE,
 :loginSabun,
 SYSDATE
)
		]]>
	</statement>

	<!-- 사용자 정보를 수정한다. -->
	<statement name="updateUserInfo" type="update">
		/*+ com.hwfs.sc.scu.dao.UserIdReqListDAO.updateUserInfo */
		<![CDATA[
UPDATE SCC_USERINFO
SET    SDATE = TO_CHAR(SYSDATE, 'YYYYMMDD'),
       EDATE = '21001231',
       MAIN_TYPE = :mainType,
       USE_YN = 'Y',
       PERS_INFO_PROC_LEVEL = '1',
       PERS_INFO_PROC_GRADE = 'A',
       ACCT_STATUS = 'NORMAL',
       UUSER = :loginSabun,
       UDATE = SYSDATE,
       SIMPLE_PO_YN = :simplePoYn
WHERE  SABUN = :sabun
		]]>
	</statement>

	<!-- 사용자 권한레벨(을)를 삭제한다. -->
	<statement name="deleteAuthLevel" type="delete">
		/*+ com.hwfs.sc.scu.dao.UserIdReqListDAO.deleteAuthLevel */
		<![CDATA[
DELETE
FROM   SCC_USER_AUTHLEVEL
WHERE  SABUN = :sabun
		]]>
	</statement>

	<!-- 사용자 권한레벨(을)를 등록한다. -->
	<statement name="insertAuthLevel" type="insert">
		/*+ com.hwfs.sc.scu.dao.UserIdReqListDAO.insertAuthLevel */
		<![CDATA[
INSERT INTO SCC_USER_AUTHLEVEL
(
 SABUN,
 AUTHLEVEL,
 CUSER,
 CDATE,
 UUSER,
 UDATE
) VALUES (
 :sabun,
 :userAuthLevel,
 :loginSabun,
 SYSDATE,
 :loginSabun,
 SYSDATE
)
		]]>
	</statement>

	<!-- 사용자ID 신청현황(을)를 수정한다. -->
	<statement name="update" type="update">
		/*+ com.hwfs.sc.scu.dao.UserIdReqListDAO.update */
		<![CDATA[
UPDATE SCC_USERID_REQUEST
SET    APPROV_USER_SABUN = :loginSabun,
       APPRV_DATE = SYSDATE,
       STATUS_CD = '99',
       UUSER = :loginSabun,
       UDATE = SYSDATE
WHERE  REQUEST_CLASS = :requestClass
AND    REQUEST_DATE = TO_CHAR(TO_DATE(:requestDate, 'YYYY-MM-DD HH24:MI:SS'), 'YYYYMMDDHH24MISS')
AND    REQUEST_CD = :requestCd
AND    USER_ID = :userId
		]]>
	</statement>

	<!-- 사용자 정보를 수정한다. -->
	<statement name="updateStopUserInfo" type="update">
		/*+ com.hwfs.sc.scu.dao.UserIdReqListDAO.updateStopUserInfo */
		<![CDATA[
UPDATE SCC_USERINFO
SET    EDATE = TO_CHAR(SYSDATE, 'YYYYMMDD'),
       USE_YN = 'N',
       ACCT_STATUS = 'STOP',
       UUSER = :loginSabun,
       UDATE = SYSDATE
WHERE  SABUN = :sabun
		]]>
	</statement>

	<!-- 사용자ID 신청현황(을)를 반려처리한다. -->
	<statement name="updateReturn" type="update">
		/*+ com.hwfs.sc.scu.dao.UserIdReqListDAO.updateReturn */
		<![CDATA[
UPDATE SCC_USERID_REQUEST
SET    STATUS_CD = '80',
       RTN_REASON = :rtnReason,
       UUSER = :loginSabun,
       UDATE = SYSDATE
WHERE  REQUEST_CLASS = :requestClass
AND    REQUEST_DATE = TO_CHAR(TO_DATE(:requestDate, 'YYYY-MM-DD HH24:MI:SS'), 'YYYYMMDDHH24MISS')
AND    REQUEST_CD = :requestCd
AND    USER_ID = :userId
		]]>
	</statement>

	<!-- 사용자 정보를 수정한다. -->
	<statement name="updateReturnUserInfo" type="update">
		/*+ com.hwfs.sc.scu.dao.UserIdReqListDAO.updateReturnUserInfo */
		<![CDATA[
UPDATE SCC_USERINFO
SET    USE_YN = :useYn,
       ACCT_STATUS = :acctStatus,
       UUSER = :loginSabun,
       UDATE = SYSDATE
WHERE  SABUN = :sabun
		]]>
	</statement>

	<!-- 사용자 권한을 삭제한다. -->
	<statement name="deleteUserAuth" type="delete">
		/*+ com.hwfs.sc.scu.dao.UserIdReqListDAO.deleteUserAuth */
		<![CDATA[
DELETE FROM SCC_USER_ROLE WHERE SABUN = :sabun
		]]>
	</statement>

	<!-- 사용자 예외 권한을 삭제한다. -->
	<statement name="deleteUserMenu" type="delete">
		/*+ com.hwfs.sc.scu.dao.UserIdReqListDAO.deleteUserMenu */
		<![CDATA[
DELETE FROM SCC_USER_MENU WHERE SABUN = :sabun
		]]>
	</statement>

	<!-- 사용자 게시판 권한을 조회한다. -->
	<statement name="selectBoardAuthList" type="select">
		/*+ com.hwfs.sc.scu.dao.UserIdReqListDAO.selectBoardAuthList */
		<![CDATA[
SELECT DISTINCT
       A.BBSROLE,
       A.ROLE_NAME,
       A.REMARK,
       CASE WHEN D.SABUN IS NULL THEN '0' ELSE '1' END AS INC_USER_ROLE,
       CASE WHEN D.SABUN IS NULL THEN '0' ELSE '1' END AS OLD_INC_USER_ROLE,
       :sabun AS SABUN
FROM   SCC_BBSROLE A,
       SCC_BBS B,
       SCC_BBSROLE_BBS C,
       SCC_USER_BBSROLE D
WHERE  C.BBSROLE = A.BBSROLE
AND    B.BBS_ID = C.BBS_ID
AND    D.BBSROLE(+) = A.BBSROLE
AND    D.SABUN(+) = :sabun
AND    A.USE_YN = 'Y'
AND    B.BBS_TYPE = '200'
ORDER BY A.ROLE_NAME
		]]>
	</statement>

	<!-- 게시판 권한을 삭제한다. -->
	<statement name="deleteBbsAuth" type="delete">
		/*+ com.hwfs.sc.scu.dao.UserIdReqListDAO.deleteBbsAuth */
		<![CDATA[
DELETE
FROM   SCC_USER_BBSROLE
WHERE  SABUN = :sabun
AND    BBSROLE = :bbsrole
		]]>
	</statement>

	<!-- 게시판 권한을 등록한다. -->
	<statement name="insertBbsAuth" type="insert">
		/*+ com.hwfs.sc.scu.dao.UserIdReqListDAO.insertBbsAuth */
		<![CDATA[
INSERT INTO SCC_USER_BBSROLE
(
 SABUN,
 BBSROLE,
 USE_YN,
 CUSER,
 CDATE,
 UUSER,
 UDATE
) VALUES (
 :sabun,
 :bbsrole,
 'Y',
 :loginSabun,
 SYSDATE,
 :loginSabun,
 SYSDATE
)
		]]>
	</statement>

</hqml>
