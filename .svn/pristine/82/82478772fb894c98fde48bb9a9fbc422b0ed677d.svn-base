<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="../../../default_typedef.xml"/>
  <Form id="FSM00110E" onload="form_onload" onclose="frm_OnUnloadCompleted" titletext="MY 레시피 구성" position="absolute 0 0 976 380" scrollbars="none">
    <Layouts>
      <Layout>
        <Static id="sta_detail05" class="sta_WFDA_Labelbg" position="absolute 15 10 961 37"/>
        <Static id="Static03" text="사업장" position="absolute 6 10 64 37" class="sta_WFDA_Label01"/>
        <Static id="Static5" text="식당명" position="absolute 238 10 296 37" class="sta_WFDA_Label01"/>
        <Edit enable="false" id="ed_UpjangNm" taborder="11" position="absolute 66 13 236 34"/>
        <Button id="btn_Close" onclick="fn_Close" taborder="2" text="닫기" position="absolute 908 13 959 34" class="btn_WF_Custom" image=""/>
        <Button id="btn_Delete" onclick="fn_delete" taborder="3" text="삭제" position="absolute 855 13 906 34" class="btn_WF_Custom" image=""/>
        <Button id="btn_Copy" onclick="fn_Copy" taborder="4" text="복사" position="absolute 802 13 853 34" class="btn_WF_Custom" image=""/>
        <Button id="btn_Save" onclick="fn_save" taborder="5" text="저장" position="absolute 749 13 800 34" class="btn_WF_Custom" image=""/>
        <Button id="btn_Insert" onclick="fn_insert" taborder="6" text="등록" position="absolute 696 13 747 34" class="btn_WF_Custom" image=""/>
        <Button id="btn_GroupInsert" onclick="fn_GroupInsert" taborder="7" text="그룹추가" position="absolute 631 13 694 34" class="btn_WF_Custom" image=""/>
        <Grid autoenter="select" binddataset="ds_List" cellmovingtype="col" cellsizingtype="both" readonly="false" enable="true" id="grd_List" useinputpanel="false" onheadclick="grd_List_OnHeadClick" taborder="12" tabstop="true" usecontextmenu="true" useselcolor="true" visible="true" wheelscrollrow="1" position="absolute 15 50 961 365" selecttype="row">
          <Formats>
            <Format id="Default">
              <Columns>
                <Column size="60"/>
                <Column size="60"/>
                <Column size="170"/>
                <Column size="1000"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell displaytype="text" text="사용"/>
                <Cell col="1" displaytype="text" text="NO"/>
                <Cell col="2" displaytype="text" text="그룹명"/>
                <Cell col="3" displaytype="text" text="구    성"/>
              </Band>
              <Band id="body">
                <Cell displaytype="checkbox" edittype="checkbox" style="align:center;" text="bind:USE_CK"/>
                <Cell col="1" displaytype="text" style="align:center;" expr="expr:currow+1"/>
                <Cell col="2" displaytype="text" edittype="normal" style="align:left;" text="bind:GRP_NAME" editimemode="hangul"/>
                <Cell col="3" displaytype="text" style="align:left;" text="bind:RECIPE_DESC"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Edit enable="false" id="ed_HallName" taborder="13" position="absolute 298 13 468 34"/>
        <CheckBox id="chk_Cost" onclick="chk_Cost_OnClick" taborder="14" text="원가 포함" value="false" position="absolute 498 14 580 35" truevalue="1" falsevalue="0"/>
        <Static id="Static15" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 15 0 485 10"/>
        <Static id="Static01" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 0 0 15 476"/>
        <Static id="Static00" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 961 0 976 476"/>
        <Static id="Static09" text="h13" class="Guide01_AreaRed" visible="false" position="absolute 15 37 215 50"/>
        <Static id="Static07" text="h15" class="Guide01_AreaRed" visible="false" position="absolute 15 365 485 380"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_Input">
        <ColumnInfo>
          <Column id="UPJANG" size="256" type="INT"/>
          <Column id="UPJANG_NM" size="256" type="STRING"/>
          <Column id="HALL_CD" size="256" type="STRING"/>
          <Column id="HALL_NAME" size="256" type="STRING"/>
          <Column id="HALL_CLASS" size="256" type="STRING"/>
          <Column id="MENU_DATE" size="256" type="STRING"/>
          <Column id="CHK_COST" size="256" type="STRING"/>
          <Column id="SUBINV_CODE" size="256" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_List" cancolumnchange="ds_List_CanColumnChange" onrowposchanged="ds_List_OnRowPosChanged"/>
      <Dataset id="ds_HallClass"/>
    </Objects>
    <Bind>
      <BindItem id="ed_UpjangNm_value" compid="ed_UpjangNm" propid="value" datasetid="ds_Input" columnid="UPJANG_NM"/>
      <BindItem id="ed_HallName_value" compid="ed_HallName" propid="value" datasetid="ds_Input" columnid="HALL_NAME"/>
      <BindItem id="chk_Cost_value" compid="chk_Cost" propid="value" datasetid="ds_Input" columnid="CHK_COST"/>
      <BindItem id="item5" compid="sta_detail05" propid="text" datasetid="ds_view" columnid="D_1"/>
    </Bind>
    <Script type="xscript4.0"><![CDATA[include "U_lib::lib_conversionCom.xjs";
/*
 ******************************************************************************************
 * 시스템구분   : 메뉴관리 > 식단관리 > 식단등록
 * 프로그램명   : FSM00110E.XML
 * 기      능   : MY 레시피 구성
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-03
 * 비      고   : 
 *		- ds_Input				: 검색조건 DataSet
 *		- ds_List				: [Main DS] 자재 리스트
 *		- ds_HallClass			: 식당군 DataSet
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
//=========================================================================================
// [ PART 1 ]
// Form에서 Include 할 내용을 정의
//
//=========================================================================================
//@@컨버터에서 주석처리 #include "LIB::sc_comon.js";			// 시스템공통 함수
//@@컨버터에서 주석처리 #include "LIB::lib_comm_0001.js";
//@@컨버터에서 주석처리 #include "LIB::tit_comm_0001.js";		// X-Framework Lib
//=========================================================================================
// [ PART 2 ]
// Form에서 사용될 전역변수를 선언
//
//=========================================================================================
//  var f_Upjang, f_UpjangNm, f_HallCd, f_HallName, f_MenuDate, f_SubinvCode;
// //=========================================================================================
// [ PART 3 ]
// Form Loading 시 작업 정의
//
//=========================================================================================
function form_onload(obj:Form, e:LoadEventInfo)
{
	gfn_formOnLoad(obj, false);

	// 폼이 종료될때 Check할 DataSet
	v_ds_check = "ds_List";
	
	// X-Framework : Action 정보 생성 
	fsp_init(this); 
	 
	
	// 부모창에서 넘겨주는 Args
// 	f_Upjang    = fa_UPJANG;
// 	f_UpjangNm  = fa_UPJANG_NM;
// 	f_HallCd    = fa_HALL_CD;
// 	f_HallName  = fa_HALL_NAME;
// 	f_MenuDate  = fa_MENU_DATE;
// 	f_SubinvCode = fa_SUBINV_CODE;
	
	// Tast Data
	/*f_Upjang    = "100771";
	f_UpjangNm  = "성원중점";
	f_HallCd    = "00102";
	f_HallName  = "일반식당02";
	f_MenuDate  = "20071226";*/
	
	// Default Data Check
	if( gfn_length(gfn_trim(fa_Upjang))== 0 || gfn_trim(fa_Upjang)== null ) {
		g_Message("EE", "업장코드가 존재하지 않습니다.\n창을 닫습니다.");
		this.close();
	}
	if( gfn_length(gfn_trim(fa_HallCd))== 0 || gfn_trim(fa_HallCd)== null ) {
		g_Message("EE", "식당코드가 존재하지 않습니다.\n창을 닫습니다.");
		this.close();
	}
	if( gfn_length(gfn_trim(fa_MenuDate))== 0 || gfn_trim(fa_MenuDate)== null ) {
		g_Message("EE", "제공일자가 존재하지 않습니다.\n창을 닫습니다.");
		this.close();
	}
	if( gfn_length(gfn_trim(fa_SubinvCode))== 0 || gfn_trim(fa_SubinvCode)== null ) {
		g_Message("EE", "창고코드가 존재하지 않습니다.\n창을 닫습니다.");
		this.close();
	}
	
	ds_Input.clearData();
	ds_Input.addRow();
	ds_Input.setColumn(0, "UPJANG",      fa_Upjang    );
	ds_Input.setColumn(0, "UPJANG_NM",   fa_UpjangNm  );
	ds_Input.setColumn(0, "HALL_CD",     fa_HallCd    );
	ds_Input.setColumn(0, "HALL_NAME",   fa_HallName  );
	ds_Input.setColumn(0, "MENU_DATE",   fa_MenuDate  );
	ds_Input.setColumn(0, "CHK_COST",    "0"         );
	ds_Input.setColumn(0, "SUBINV_CODE", fa_SubinvCode);
	
	fn_SearchHallClass();
}
function frm_OnUnloadCompleted(obj:Form, e:CloseEventInfo)
{
	if( !g_Form_OnUnloadCompleted(obj) ) {
		return false;
	}
}
//=========================================================================================
// [ PART 4 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,도움말,form닫기)
//
//=========================================================================================
/*
 ******************************************************************************************
 * 함  수  명   : fn_Search()
 * 기      능   : [조회버튼] 검색조건에 해당하는 정보를 조회
 ******************************************************************************************
 */
function fn_search()
{
	// Result DataSet Clear
	ds_List.clearData();
	
	// DataSet & callBack함수 정의
	var actionName, cmdName, inData, outData, otherArg, callBackFnc;
	inData			= "ds_Input=ds_Input";
	outData			= "ds_List=ds_List";
	otherArg		= "";
	callBackFnc		= "fn_callBackSearch";
	
	fsp_clear(this);
	fsp_addSearch(this, "fs/fsm:FSM00110E_S002");
    fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);		// 서비스 호출
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_GroupInsert()
 * 기      능   : [그룹추가버튼] 그룹추가 버튼 클릭 시 처리되는 작업
 ******************************************************************************************
 */
function fn_GroupInsert(obj:Button, e:ClickEventInfo)
{
	// DataSet Row 추가
	var v_row = ds_List.addRow();
	
	// Default Info Set
	ds_List.setColumn(v_row, "USE_CK",  1);
	ds_List.setColumn(v_row, "UPJANG",  ds_Input.getColumn(0, "UPJANG"));
	ds_List.setColumn(v_row, "HALL_CD", ds_Input.getColumn(0, "HALL_CD"));
	
	// Cursor "GRP_NAME" Column Set
	grd_List.setCellPos(2);
	grd_List.setFocus();
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_Insert()
 * 기      능   : [등록버튼] 등록 버튼 클릭 시 처리되는 작업
 ******************************************************************************************
 */
function fn_insert(obj:Button, e:ClickEventInfo)
{
	if( g_Form_OnUnloadCompleted(this) ) { 
	
		var v_Args  = "";
			v_Args  = {UPJANG:ds_Input.getColumn(0, "UPJANG")
			          ,HALL_CD:ds_Input.getColumn(0, "HALL_CD")
			          ,HALL_CLASS:ds_Input.getColumn(0, "HALL_CLASS")
			          ,MENU_DATE:ds_Input.getColumn(0, "MENU_DATE")
			          ,MY_GRP_CD:ds_List.getColumn(ds_List.rowposition, "MY_GRP_CD")
			          ,SUBINV_CODE:ds_Input.getColumn(0, "SUBINV_CODE")};
			
		gfn_dialog("", "U_FSM::FSM00120E.xfdl", v_Args, -1, -1, "Title=true Status=false AutoSize=true Resize=false");
	}
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_Save()
 * 기      능   : [저장버튼] 저장 버튼 클릭 시 처리되는 작업
 ******************************************************************************************
 */
function fn_save(obj:Button, e:ClickEventInfo)
{
	// 변경내역 체크
	if( !gfn_dsIsUpdated(ds_List)) {
		g_Message("EE", "변경된 내역이 없습니다.");
		return;
	}
	
	// 필수 입력 체크
	for( var i=0; i<=GetLastRow(ds_List)     ; i++ ) {
		// 그룹명 체크
		if( gfn_length(ds_List.getColumn(i, "GRP_NAME"))== 0 ) {
			g_Message("EE", "그룹명을 입력하세요.");
			ds_List.rowposition = i;
			grd_List.setCellPos(2);
			grd_List.setFocus();
			return;
		}
		// 그룹명 중복 체크
		if( GetRowType(ds_List,i)== "insert" ) {
			if( gfn_length(ds_List.getColumn(i, "GRP_NAME"))== 0 ) {
				g_Message("EE", "그룹명을 입력하세요.");
				ds_List.rowposition = i;
				grd_List.setCellPos(2);
				grd_List.setFocus();
				return;
			}
		}
	}
	
	if( g_Confirm("02") ) {
		// 미선택 ROW 원래 값으로 복원
		for( var i=0; i<=GetLastRow(ds_List)     ; i++ ) {
			// 체크박스 선택 여부에 따라 "USE_YN" 컬럼 값 셋팅
			if( ds_List.getColumn(i, "USE_CK") == "1" )
				ds_List.setColumn(i, "USE_YN", "Y");
			else
				ds_List.setColumn(i, "USE_YN", "N");
		}
		// 서비스셋팅
		var actionName, cmdName, inData, outData, otherArg, callBackFnc;
		var insertSql, updateSql, deleteSql, saveFlagColumn, keySqlName, keyIncrement, callbackSql;
		
		inData		 = "ds_Input=ds_Input ds_List=ds_List:U";
		outData		 = "ds_List=ds_List";
		callBackFnc	 = "fn_callBackSave";
		insertSql 	 = "fs/fsm:FSM00110E_I001";
		updateSql    = "fs/fsm:FSM00110E_U001";
		deleteSql    = "";
		keySqlName   = "fs/fsm:FSM00110E_S003";
		keyIncrement = 1;
		callbackSql	 = "fs/fsm:FSM00110E_S002";
		
		fsp_clear(this);
		fsp_addSave(this, insertSql, updateSql, deleteSql, saveFlagColumn, keySqlName, keyIncrement, callbackSql);
		fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);		// 서비스 호출
	}
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_Copy()
 * 기      능   : [복사버튼] 복사 버튼 클릭 시 처리되는 작업
 ******************************************************************************************
 */
function fn_Copy(obj:Button, e:ClickEventInfo)
{

    var sArg = '';
    
    f_Upjang    = ds_Input.getColumn(0, "UPJANG")    ;
	f_HallCd    = ds_Input.getColumn(0, "HALL_CD")   ;
	f_HallName  = ds_Input.getColumn(0, "HALL_NAME") ;
	f_HallClass = ds_Input.getColumn(0, "HALL_CLASS");	
	
    
    sArg = { f_Upjang:ds_Input.getColumn(0, "UPJANG")
            ,f_HallCd:ds_Input.getColumn(0, "HALL_CD")
            ,f_HallName:ds_Input.getColumn(0, "HALL_NAME")
            ,f_HallClass:ds_Input.getColumn(0, "HALL_CLASS")}  

	gfn_dialog("", "U_FSM::FSM00111P.xfdl",sArg,-1,-1,"Title=true Status=false AutoSize=true Resize=false");
}
/* 
 ******************************************************************************************
 * 함  수  명   : fn_Delete()
 * 기      능   : [삭제버튼] 삭제 시 처리되는 작업
 ******************************************************************************************
 */
function fn_delete(obj:Button, e:ClickEventInfo)
{
	// 삭제 내역 체크
	if( ds_List.getRowCount() == 0 ) {
		g_Message("EE", "삭제할 MY 레시피가 존재하지 않습니다.");
		return;
	}
	
	// 삭제 여부 Confirm
	if( g_Confirm("01") ) {
		ds_List.deleteRow(ds_List.rowposition);
		
		// 서비스셋팅
		var actionName, cmdName, inData, outData, otherArg, callBackFnc;
		var insertSql, updateSql, deleteSql, saveFlagColumn, keySqlName, keyIncrement, callbackSql;
		
		inData		= "ds_Input=ds_Input ds_List=ds_List:U";
		outData		= "ds_List=ds_List";
		callBackFnc	= "fn_callBackDelete";
		insertSql 	= "";
		updateSql   = "";
		deleteSql   = "fs/fsm:FSM00110E_D001";
		keyIncrement= -1;
		callbackSql	= "";
		
		fsp_clear(this);
		fsp_addSave(this, insertSql, updateSql, deleteSql, saveFlagColumn, keySqlName, keyIncrement, callbackSql);	// MY 레시피 마스터 테이블 삭제
		fsp_addSave(this, insertSql, updateSql, "fs/fsm:FSM00110E_D002", saveFlagColumn, keySqlName, keyIncrement, "fs/fsm:FSM00110E_S002");	// MY 레시피 디테일 테이블 삭제
		http.Sync = true;
		fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);		// 서비스 호출
		http.Sync = false;
	}
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_Close()
 * 기      능   : [닫기버튼] 화면을 닫을때 처리되는 작업
 ******************************************************************************************
 */
function fn_Close(obj:Button, e:ClickEventInfo)
{
	this.close();
}
//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
//
//=========================================================================================
/*
 ******************************************************************************************
 * 함  수  명   : fn_SearchHallClass()
 * 입      력   : 없음
 * 반      환   : 없음
 * 기      능   : 업장코드, 식당코드를 이용한 식당군 코드 조회
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-03
 ******************************************************************************************
 */
function fn_SearchHallClass() {
	// Result DataSet Clear
	ds_HallClass.clearData();
	
	// 조회
	var actionName, cmdName, inData, outData, otherArg, callBackFnc;
	
	// DataSet & callBack함수 정의
	inData		= "ds_Input=ds_Input";
	outData		= "ds_HallClass=ds_HallClass";
	callBackFnc = "fn_callBackSearchHallClass";
	
	fsp_clear(this); 
    fsp_addSearch(this, "fs/fsm:FSM00110E_S001");									// 조회
    fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);		// 서비스 호출
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_callBackSearchHallClass()
 * 입      력   : errCode 	= 에러코드
				  errMsg	= 에러메세지
 * 반      환   : 없음
 * 기      능   : 식당군 조회 후 콜백 함수
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-03
 ******************************************************************************************
 */
function fn_callBackSearchHallClass(errCode, errMsg)
{	
	if( errCode != 0 ) {
		return;
	} else {
		//trace(ds_HallClass.SaveXML());
		if( ds_HallClass.getRowCount() == 1 ) {
			ds_Input.setColumn(0, "HALL_CLASS", ds_HallClass.getColumn(0, "HALL_CLASS"));
			fn_search();
		} else if( ds_HallClass.getRowCount() == 0 ) {
			g_Message("EE", "식당군 코드가 존재하지 않습니다.");
			return;
		} else {
			g_Message("EE", "식당군 코드가 한개 이상 존재합니다.");
			return;
		}
	}
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_callBackSearch()
 * 입      력   : errCode 	= 에러코드
				  errMsg	= 에러메세지
 * 반      환   : 없음
 * 기      능   : 리스트 조회 후 콜백 함수
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-03
 ******************************************************************************************
 */
function fn_callBackSearch(errCode, errMsg)
{	
	if( errCode != 0 ) {
		return;
	} else {
		//trace(ds_List.SaveXML());
	}
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_callBackSave()
 * 입      력   : errCode 	= 에러코드
				  errMsg	= 에러메세지
 * 반      환   : 없음
 * 기      능   : 그룹 저장 후 콜백 함수
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-04
 ******************************************************************************************
 */
function fn_callBackSave(errCode, errMsg)
{	
	if( errCode != 0 ) {
		return;
	} else {
		g_Message("02");
		//trace(ds_List.SaveXML());
	}
}
/*
 ******************************************************************************************
 * 함  수  명   : fn_callBackDelete()
 * 입      력   : errCode 	= 에러코드
				  errMsg	= 에러메세지
 * 반      환   : 없음
 * 기      능   : 그룹 삭제 후 콜백 함수
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-04
 ******************************************************************************************
 */
function fn_callBackDelete(errCode, errMsg)
{	
	if( errCode != 0 ) {
		return;
	} else {
		g_Message("01");
		//trace(ds_List.SaveXML());
	}
}
//=========================================================================================
// [ PART 6 ]
// component Event 정의 ( User Define function )
// --> component Event의 기요,기능,동작 등 상세내용은 MiPlatform 메뉴얼을 참조하시기 바랍니다.
//=========================================================================================
/******************************************************************************************
 * 함  수  명   : grd_List_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
 * 기      능   : 그리드헤드 더블클릭시 Sort
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-04
 ******************************************************************************************
 */
function grd_List_OnHeadClick(obj:Grid, e:GridClickEventInfo)
{
	if( e.cell != 0 && e.cell != 1 )
		gfn_gridSort(obj, e); //(eval(obj.binddataset), obj, e.cell);
}
/******************************************************************************************
 * 함  수  명   : ds_List_OnRowPosChanged(obj,nOldRow,nRow)
 * 기      능   : DataSet Row Position Change Event
 *                Insert Row => Editable : True
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-04
 ******************************************************************************************
 */
function ds_List_OnRowPosChanged(obj:Dataset, e:DSRowPosChangeEventInfo)
{
	if( GetRowType(ds_List,e.newrow)== "insert" ) {
		grd_List.setCellProperty("body", 0, "edittype", setCellEditVal(grd_List,"body",0,"none"));
	} else {
		grd_List.setCellProperty("body", 0, "edittype", setCellEditVal(grd_List,"body",0,"checkbox"));
	}
}
/******************************************************************************************
 * 함  수  명   : ds_List_CanColumnChange(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
 * 기      능   : DataSet CanColumn Change Event
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-01-04
 ******************************************************************************************
 */
function ds_List_CanColumnChange(obj:Dataset, e:DSColChangeEventInfo)
{
	if( obj.findRow("GRP_NAME", e.newvalue) != -1 ) {
		g_Message("EE", "중복되는 그룹명이 존재합니다.\n다른 그룹명을 입력하세요.");
		return false;
	}
}
/******************************************************************************************
 * 함  수  명   : chk_Cost_OnClick(obj,strValue)
 * 기      능   : 원가 포함 클릭시 검색
 * 작  성  자   : 손창덕
 * 작성  일자   : 2008-04-28
 ******************************************************************************************
 */
function chk_Cost_OnClick(obj:CheckBox, e:ClickEventInfo)
{
	if( obj.isChecked() == "0" ) {
		fn_search();
	} else {
		if( g_Confirm("04", "원가 포함 검색시 시간이 오래 걸릴 수가 있습니다.\n계속 하시겠습니까?") ) {
			fn_search();
		}
	}
}
]]></Script>
  </Form>
</FDL>
