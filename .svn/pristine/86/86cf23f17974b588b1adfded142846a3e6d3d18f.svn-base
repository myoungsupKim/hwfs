<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="rc.sle.hotMenuRankOutletDAO">
	<desc>업장인기메뉴</desc>




	<statement name="selectList" type="select"><![CDATA[
			SELECT   OUTLET_CD
			      ,  OUTLET_NM
			      ,  RANKING
			      ,  MENU_CD
			      ,  MENU_NM
			      ,  MENU_UCST
			      ,  MENU_CLASS, MENU_CLSFI, MENU_SCLASS
			      ,  AA.MENU_CLASS || AA.MENU_CLSFI || AA.MENU_SCLASS AS MENU_CLSFI_CD, MENU_CLSFI_NM
			      ,  QTY
			      ,  OCCR_AMT
			      ,  DSCN_AMT
			      ,  NET_AMT
			      ,  SVC
			      ,  VAT
			      ,  TOT_AMT
			      ,  PCT
			  FROM (  
			    SELECT C.OUTLET_CD AS OUTLET_CD, C.OUTLET_NM, C.RANKING AS RANKING, C.MENU_CD AS MENU_CD, TRIM(D.MENU_NM) AS MENU_NM, MENU_UCST,
			    			   D.MENU_CLASS,D.MENU_CLSFI,D.MENU_SCLASS,	D.MENU_CLSFI_NM,
						       QTY, OCCR_AMT, DSCN_AMT, NET_AMT, SVC, VAT, TOT_AMT, PCT
						  FROM
						  (
						  SELECT OUTLET_CD, OUTLET_NM, MENU_CD, RANKING, MENU_NM, MENU_UCST, QTY, OCCR_AMT, DSCN_AMT, NET_AMT, SVC, VAT, TOT_AMT,
						         DECODE( :rankDiv , 'T' , NVL(ROUND((TOT_AMT / DECODE(NVL(B.GRAND_TOT, 0),0,NULL,NVL(B.GRAND_TOT, 0))) * 100,2),0)
						                                , NVL(ROUND((QTY / DECODE(NVL(B.GRAND_TOT, 0),0,NULL,NVL(B.GRAND_TOT, 0))) * 100,2),0)
						         		) AS PCT
						    FROM
						     (
						     SELECT 1 AS GUBUN, OUTLET_CD, OUTLET_NM, MENU_CD, RANKING, MENU_NM, MENU_UCST, QTY, OCCR_AMT, DSCN_AMT, NET_AMT, SVC, VAT, TOT_AMT
						       FROM (
					             SELECT OUTLET_CD AS OUTLET_CD,  MAX(OUTLET_NM) AS OUTLET_NM, MENU_CD AS MENU_CD,
					                    DECODE( :rankDiv , 'T' , RANK() OVER(ORDER BY SUM(TOT_AMT)  DESC)
					                                           , RANK() OVER(ORDER BY SUM(QTY) DESC)
		                                       ) AS RANKING,
					                    MENU_NM AS MENU_NM,  MENU_UCST AS MENU_UCST,
					                    SUM(QTY) AS QTY, SUM(OCCR_AMT) AS OCCR_AMT,
		                                SUM(DSCN_AMT) AS DSCN_AMT,
		                                SUM(NET_AMT) AS NET_AMT, SUM(SVC) AS SVC, SUM(VAT) AS VAT, SUM(NVL(TOT_AMT,0)) AS TOT_AMT
					               FROM (
				                      SELECT DECODE( :outletSet , 'SALE' , MST.OUTLET_CD, MST.ATTACH_OUTLET_CD ) AS OUTLET_CD,
				                             MST.MENU_CD, MENU.MENU_NM, MST.MENU_UPRICE AS MENU_UCST, MST.QUANTITY AS QTY,
				                             MST.OCCUR_AMT AS OCCR_AMT, MST.DISCNT_AMT AS DSCN_AMT,
	                                         MST.NET_AMT, MST.SVC, MST.VAT, MST.TOT_AMT, 
	                                         OUTLET.OUTLET_TYPE, OUTLET.OUTLET_NM
				                             FROM SLE_SALS_GOODS MST
                                   			 LEFT OUTER JOIN SLE_OUTLET_MENU MENU ON MST.OUTLET_CD = MENU.OUTLET_CD AND MST.MENU_CD = MENU.MENU_CD
	                                         INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
								                           FROM   SLE_OUTLET_MST MST
								                              INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
								                                         <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
								                                         <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
								                                         <#if outletType?has_content > AND MST.OUTLET_TYPE   = :outletType </#if>
								              			 ) OUTLET ON OUTLET.OUTLET_CD =  DECODE( :outletSet , 'SALE' , MST.OUTLET_CD, MST.ATTACH_OUTLET_CD ) 
								            INNER JOIN (
													SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM ,NVL(INFO.TABLE_CD,'00') AS TABLE_CD
													FROM SLE_SALS_INFO INFO
													LEFT OUTER JOIN (
													      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
													      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
													      <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
													      ORDER BY  OUTLET_CD, POS_NUM
													) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
													WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
													  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
													  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
   				      			    				  <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)			          				
                                        			  AND INFO.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt
													  <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
													  <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
													
							    				)  INFO ON INFO.OUTLET_CD = MST.OUTLET_CD 
							    				       AND INFO.SALES_DATE = MST.SALES_DATE
							    				       AND INFO.RECEIPT_NUM = MST.RECEIPT_NUM	     
								            
								            
				                            WHERE    1=1
                                    			<#if internalYn == 'Y' > AND MST.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
   				      			    			<#if internalYn == 'N' > AND MST.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)			          				
                                       		  AND MST.MODIFY_STATUS IN ('0','1') --매출조정 0:정상 , 1:조정
				                              AND MST.DATA_CLASS     = '1'  -- 1:메뉴 3:주문사항 
				                              AND MST.SALS_CLASS = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
	                                          AND MST.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt						--매출일자
	                                          --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
											  AND MST.SELL_YN  = DECODE(MST.RECEIPT_STATUS ,'E','N','Y')				--매출 여부
										      --종료
	                              			  
	                              			  AND DECODE( :outletSet , 'SALE' , MST.OUTLET_CD, MST.ATTACH_OUTLET_CD ) = <#if outletCd?has_content> :outletCd 
	                              			                                                                           <#else> DECODE( :outletSet , 'SALE' , MST.OUTLET_CD, MST.ATTACH_OUTLET_CD )
	                              			                                                                            </#if>  
	                              			  
	                              			  <#if adjtStat?has_content >   AND MST.MODIFY_STATUS = :adjtStat   </#if>	--0:매출 1:조정
	                              			  <#if outletType?has_content > AND LOC.OUTLET_TYPE   = :outletType </#if>  --업장종류
	                              			  <#if sellYn?has_content >     
			                                    	<#if internalYn == 'N' >
			                                    		AND MST.SELL_YN = 'Y'	--매출여부
			                                    	</#if>  
		                                      </#if>
				                              <#if salsYn?has_content >     AND MST.SALS_YN = 'Y'  				</#if>  --판매여부  
	                              			  
	                              			  
					                     ) GROUP BY OUTLET_CD, MENU_CD, MENU_NM, MENU_UCST
					             )  WHERE 1=1
					                 <#if rank?has_content > AND RANKING <= :rank </#if>
						     )A
			
						  LEFT OUTER JOIN
						    (
						    SELECT 1 AS GUBUN, DECODE( :rankDiv , 'T' , SUM(TOT_AMT)  , SUM(QTY)  ) AS GRAND_TOT
						      FROM (
						       	 SELECT OUTLET_CD AS OUTLET_CD, MAX(OUTLET_NM) AS OUTLET_NM, MENU_CD AS MENU_CD,
						               DECODE( :rankDiv, 'T' , RANK() OVER(ORDER BY SUM(TOT_AMT) DESC)
						                                     , RANK() OVER(ORDER BY SUM(QTY) DESC)
			                           		  ) AS RANKING,
						              MENU_NM AS MENU_NM, MENU_UCST AS MENU_USCT,
						              SUM(QTY) AS QTY, SUM(OCCR_AMT) AS OCCR_AMT,  SUM(DSCN_AMT) AS DSCN_AMT, 
						              SUM(NET_AMT) AS NET_AMT, SUM(VAT) AS VAT, SUM(NVL(TOT_AMT,0)) AS TOT_AMT
						         FROM (
				                      SELECT DECODE( :outletSet , 'SALE' , MST.OUTLET_CD, MST.ATTACH_OUTLET_CD ) AS OUTLET_CD,
				                             MST.MENU_CD, MST.MENU_NM, MST.MENU_UPRICE AS MENU_UCST, MST.QUANTITY AS QTY,
				                             MST.OCCUR_AMT AS OCCR_AMT, MST.DISCNT_AMT AS DSCN_AMT,
	                                         MST.NET_AMT, MST.VAT, MST.TOT_AMT, 
	                                         OUTLET.OUTLET_TYPE, OUTLET.OUTLET_NM
				                             FROM SLE_SALS_GOODS MST
	                                         INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
								                           FROM   SLE_OUTLET_MST MST
								                              INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
								                                         <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
								                                         <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
								                                         <#if outletType?has_content > AND UPJANG.OUTLET_TYPE   = :outletType </#if>
								              			 ) OUTLET ON OUTLET.OUTLET_CD =  DECODE( :outletSet , 'SALE' , MST.OUTLET_CD, MST.ATTACH_OUTLET_CD )  
								             
								             INNER JOIN (
													SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM ,NVL(INFO.TABLE_CD,'00') AS TABLE_CD
													FROM SLE_SALS_INFO INFO
													LEFT OUTER JOIN (
													      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
													      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
													      <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
													      ORDER BY  OUTLET_CD, POS_NUM
													) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
													WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
													  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
													  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
   				      			    				  <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)			          				
                                        			  AND INFO.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt
													  <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
													  <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
													
							    				)  INFO ON INFO.OUTLET_CD = MST.OUTLET_CD 
							    				       AND INFO.SALES_DATE = MST.SALES_DATE
							    				       AND INFO.RECEIPT_NUM = MST.RECEIPT_NUM	     
								             
				                            WHERE  1=1
                                    			<#if internalYn == 'Y' > AND MST.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
   				      			    			<#if internalYn == 'N' > AND MST.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)			          				
                                       		  AND MST.MODIFY_STATUS IN ('0','1') --매출조정 0:정상 , 1:조정
											  AND MST.DATA_CLASS    = '1'  -- 1:메뉴 3:주문사항 
				                              AND MST.SALS_CLASS    = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
	                                          AND MST.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt					--매출일자
	                              			  
	                              			 
	                              			  
	                              			   AND DECODE( :outletSet , 'SALE' , MST.OUTLET_CD, MST.ATTACH_OUTLET_CD ) = <#if outletCd?has_content> :outletCd 
	                              			                                                                           <#else> DECODE( :outletSet , 'SALE' , MST.OUTLET_CD, MST.ATTACH_OUTLET_CD )
	                              			                                                                            </#if>  
	                              			  
	                              			  
	                              			  <#if adjtStat?has_content >   AND MST.MODIFY_STATUS = :adjtStat   </#if>	--0:매출 2:조정
	                              			  <#if outletType?has_content > AND LOC.OUTLET_TYPE   = :outletType </#if>  --매장
	                              			  <#if sellYn?has_content >     
			                                    	<#if internalYn == 'N' >
			                                    		AND MST.SELL_YN = 'Y'	--매출여부
			                                    	</#if>  
		                                      </#if>				                              
				                              <#if salsYn?has_content >     AND MST.SALS_YN = 'Y'  				</#if>  --판매여부
	                                  
						                    
						               ) GROUP BY OUTLET_CD, MENU_CD, MENU_NM, MENU_UCST
						       ) WHERE 1=1
						         <#if rank?has_content >AND RANKING <= :rank </#if>
						         
						      )B ON A.GUBUN = B.GUBUN
						  )C
			
						  LEFT OUTER JOIN
						  (
						  
						    
						    SELECT A.OUTLET_CD, A.MENU_CD,  A.MENU_CLASS, A.MENU_CLSFI, A.MENU_SCLASS, B.MENU_CLSFI_NM,  A.MENU_NM 
						 	  FROM SLE_OUTLET_MENU A
						      INNER  JOIN SLE_MENU_CLSFI B ON B.MENU_CLASS  = A.MENU_CLASS
						                                  AND B.MENU_CLSFI  = A.MENU_CLSFI
						                                  AND B.MENU_SCLASS = A.MENU_SCLASS
			                    
			                    <#if outletCd?has_content >   WHERE  A.OUTLET_CD = :outletCd  </#if>--업장
							  GROUP BY A.OUTLET_CD, A.MENU_CD,  A.MENU_CLASS, A.MENU_CLSFI, A.MENU_SCLASS, B.MENU_CLSFI_NM,  A.MENU_NM 
						    
						    
						  )D
						  ON C.OUTLET_CD = D.OUTLET_CD AND C.MENU_CD = D.MENU_CD
		
					ORDER BY RANKING, OUTLET_CD
			) AA
			WHERE 1 = 1
				<#if menuClass?has_content >   AND AA.MENU_CLASS   = :menuClass  </#if> 
			    <#if menuClsfi?has_content >   AND AA.MENU_CLSFI   = :menuClsfi  </#if> 
			    <#if menuSclass?has_content >  AND AA.MENU_SCLASS  = :menuSclass </#if> 
	        ORDER BY RANKING, OUTLET_CD
				   
						
	
		]]></statement>



</hqml>
