<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="form" classname="sam_MasterDetail" position="absolute 0 0 996 593" onload="form_onload">
    <Layouts>
      <Layout>
        <Static id="Static06" text="w15" visible="false" position="absolute 981 0 996 593" class="Guide01_AreaRed" anchor="top right"/>
        <Static id="Static71" visible="false" position="absolute 0 578 981 593" class="Guide01_AreaRed" text="h15" anchor="left bottom"/>
        <Div id="div_cmnBtn" taborder="6" url="cmn::CmnBtn.xfdl" text="Div00" scrollbars="none" anchor="left top right" position="absolute 0 0 981 30" positiontype="position"/>
        <Static id="Static08" class="sta_WFSA_Labelbg" anchor="left top right" position="absolute 0 30 981 71" positiontype="position"/>
        <Static id="Static04" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 0 30 93 40"/>
        <Static id="Static05" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 0 61 93 71"/>
        <Static id="Static07" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 0 40 15 61"/>
        <Static id="Static09" text="w30" class="Guide01_AreaRed" visible="false" position="absolute 231 40 261 61"/>
        <Static id="Static11" text="글자간격기준 w10" class="Guide01_AreaRed" visible="false" position="absolute 60 40 70 61"/>
        <Static id="Static16" text="글자기준간격 h05" class="Guide01_AreaRed" visible="false" position="absolute 0 97 450 102"/>
        <Static id="Static22" text="서브타이틀" class="sta_WF_Title01" position="absolute 0 84 450 102"/>
        <Static id="Static15" text="h13" class="Guide01_AreaRed" visible="false" position="absolute 0 71 450 84"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_search" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false" enableevent="true">
        <ColumnInfo>
          <Column id="GUBUN" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
          <Column id="MONTH_FROM" type="STRING" size="256"/>
          <Column id="DATE_FROM" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_searchValid" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="GUBUN" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="GUBUN">title:분류코드,length:2,focus:edt_gubunCode</Col>
            <Col id="NAME">title:코드명,required:true,focus:edt_name</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_list" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="GUBUN" type="STRING" size="256"/>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
          <Column id="DESC" type="STRING" size="256"/>
          <Column id="USE" type="INT" size="1"/>
          <Column id="USER" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="GUBUN">AA</Col>
            <Col id="CODE">01</Col>
            <Col id="NAME">사원</Col>
            <Col id="DESC">사원</Col>
            <Col id="USE">1</Col>
            <Col id="USER">A000000</Col>
          </Row>
          <Row>
            <Col id="GUBUN">AA</Col>
            <Col id="CODE">02</Col>
            <Col id="NAME">대리</Col>
            <Col id="DESC">대리</Col>
            <Col id="USE">1</Col>
            <Col id="USER">A000000</Col>
          </Row>
          <Row>
            <Col id="GUBUN">AA</Col>
            <Col id="CODE">03</Col>
            <Col id="NAME">과장</Col>
            <Col id="DESC">과장</Col>
            <Col id="USE">1</Col>
            <Col id="USER">A000000</Col>
          </Row>
          <Row>
            <Col id="GUBUN">AA</Col>
            <Col id="CODE">04</Col>
            <Col id="NAME">부장</Col>
            <Col id="DESC">부장</Col>
            <Col id="USE">1</Col>
            <Col id="USER">A000000</Col>
          </Row>
          <Row>
            <Col id="GUBUN">AB</Col>
            <Col id="CODE">01</Col>
            <Col id="NAME">팀원</Col>
            <Col id="DESC">팀원</Col>
            <Col id="USE">1</Col>
            <Col id="USER">A000000</Col>
          </Row>
          <Row>
            <Col id="GUBUN">AB</Col>
            <Col id="CODE">02</Col>
            <Col id="NAME">팀장</Col>
            <Col id="DESC">팀장</Col>
            <Col id="USE">1</Col>
            <Col id="USER">A000000</Col>
          </Row>
          <Row>
            <Col id="GUBUN">AB</Col>
            <Col id="CODE">03</Col>
            <Col id="NAME">본부장</Col>
            <Col id="DESC">본부장</Col>
            <Col id="USE">1</Col>
            <Col id="USER">A000000</Col>
          </Row>
          <Row>
            <Col id="GUBUN">AC</Col>
            <Col id="CODE">05</Col>
            <Col id="NAME">5급</Col>
            <Col id="DESC">5급</Col>
            <Col id="USE">0</Col>
            <Col id="USER">A000000</Col>
          </Row>
          <Row>
            <Col id="GUBUN">AC</Col>
            <Col id="CODE">04</Col>
            <Col id="NAME">4급</Col>
            <Col id="DESC">4급</Col>
            <Col id="USE">0</Col>
            <Col id="USER">A000000</Col>
          </Row>
          <Row>
            <Col id="GUBUN">AC</Col>
            <Col id="CODE">03</Col>
            <Col id="NAME">3급</Col>
            <Col id="DESC">3급</Col>
            <Col id="USE">0</Col>
            <Col id="USER">A000000</Col>
          </Row>
          <Row>
            <Col id="GUBUN">AC</Col>
            <Col id="CODE">02</Col>
            <Col id="NAME">2급</Col>
            <Col id="DESC">2급</Col>
            <Col id="USE">0</Col>
            <Col id="USER">A000000</Col>
          </Row>
          <Row>
            <Col id="GUBUN">AC</Col>
            <Col id="CODE">01</Col>
            <Col id="NAME">1급</Col>
            <Col id="DESC">1급</Col>
            <Col id="USE">0</Col>
            <Col id="USER">A000000</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_listValid" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="clCode" type="STRING" size="256"/>
          <Column id="codeId" type="STRING" size="256"/>
          <Column id="codeIdNm" type="STRING" size="256"/>
          <Column id="codeIdDc" type="STRING" size="256"/>
          <Column id="useAt" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_useYn" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">0</Col>
            <Col id="NAME">미사용</Col>
          </Row>
          <Row>
            <Col id="CODE">1</Col>
            <Col id="NAME">사용</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="ds_gubunList" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="CODE" type="STRING" size="256"/>
          <Column id="NAME" type="STRING" size="256"/>
          <Column id="INPUT_USER" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="CODE">AA</Col>
            <Col id="NAME">직위</Col>
            <Col id="INPUT_USER">A000000</Col>
          </Row>
          <Row>
            <Col id="CODE">AB</Col>
            <Col id="NAME">직책</Col>
            <Col id="INPUT_USER">A000000</Col>
          </Row>
          <Row>
            <Col id="CODE">AC</Col>
            <Col id="NAME">직급</Col>
            <Col id="INPUT_USER">A000000</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind/>
    <Script type="xscript4.0"><![CDATA[/*
  화 면 명 : Template
  파 일 명 : Template.xfdl
  기    능 : Design 및 Script Template 

    수정일    수정자                  수정내용
  ----------   -------  --------------------------------------------------
  2014.11.01   김윤기   최초 생성
*/

/************************************************************************************************
 * 공통 라이브러리 INCLUDE 영역 (필수)
************************************************************************************************/
include "lib::lib_com.xjs";


/************************************************************************************************
 * FORM 변수 선언 영역 (필수)
************************************************************************************************/
var fv_sToday = gfn_today();


/************************************************************************************************
 * FORM EVENT 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : Form Load (필수)
 *---------------------------------------------------------------------------------------------*/
function form_onload(obj:Form, e:LoadEventInfo)
{	
	// Form Load 시 공통 기능 처리(obj:Form, bCreateEvent:이벤트 생성 여부)
	gfn_formOnLoad(this);
	
	// 초기값 셋팅
	fn_init();
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 초기값 셋팅
 *---------------------------------------------------------------------------------------------*/
function fn_init()
{	
	// 월력 초기화(해당Form, 값지정, 값변경시 실행할 callBack함수, dataset과 bind)
	cal_month.fn_initMonthCal(this, gfn_getYear()+"11", "fn_monthCallBack", ds_search, "MONTH_FROM");
	
	// calendar 초기화(해당Form, 값지정, 값변경시 실행할 callBack함수, dataset과 bind)
	cal_from.fn_initMonthCal(this, gfn_today(), "fn_calendarCallBack", ds_search, "DATE_FROM");	
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 월력 값 변경시 호출되는 callBack 함수
 *---------------------------------------------------------------------------------------------*/
function fn_monthCallBack()
{
	trace("cal_month 값 : " + cal_month.fn_getValue());
	trace(this.ds_search.saveXML());
}

/*----------------------------------------------------------------------------------------------
 * 설명      : calendar 값 변경시 호출되는 callBack 함수
 *---------------------------------------------------------------------------------------------*/
function fn_calendarCallBack()
{
	trace("cal_from 값 : " + cal_from.fn_getValue());
	trace(this.ds_search.saveXML());
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 화면 닫기 전 변경 유무 체크 (필수-Frame에서 창 닫힐때 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_close()
{
	// 변경사항 체크(입력 프로그램일때 변경되는 Dataset 전체 기술)
	if (gfn_dsIsUpdated(ds_list) == true) 
	{
		// 변경된 데이터가 있습니다. 현재 화면을 닫겠습니까?
        if (!gfn_confirm("confirm.before.movepage")) return false;
    }
    
    // 조회프로그램에도 Return true; 기술해 주세요!
	return true;
}


/************************************************************************************************
 * 공통기능 FUNCTION 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 조회 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_search()
{
	// 변경사항 체크
	if (gfn_dsIsUpdated(ds_list) == true) 
	{
		var retValue = gfn_confirm("confirm.before.search");	// 검색을 진행하면 변경된 데이터가 사라집니다. 계속 진행 하시겠습니까?
		if (retValue == false) return;
	}

	// 조회시 Validation Check
	if (gfn_validCheck(ds_search, ds_searchValid, true) == false) return;

    // Grid sort 표시 초기화(필수)
    gfn_clearSortMark(grd_list);

    var strSvcID    = "search";
    var strURL      = "svc::selectStmnCdMngPaging.do";
    var strInDs     = "dsInput=ds_search:A";
    var strOutDs    = "ds_list=dsOutput";
    var strArg      = "";
    var strCallback = "fn_callBack";
    var bAsync      = true;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 신규 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_insert()
{	
	var nRow = ds_list.addRow();	
	
	ds_list.setColumn(nRow, "GUBUN", 'AD');
	ds_list.setColumn(nRow, "INPUT_USER", gfn_getUserId());
	
	// Grid 입력 cell 지정
	grd_list.setFocus();
	grd_list.setCellPos(1);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 삭제 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_delete()
{
	var nRow = ds_list.rowposition;
	
	if(ds_list.rowposition == -1) 
	{
		gfn_alert("msg.err.grid.noselect", "삭제할 row");	// 선택된 항목이 없습니다.
		return;
	}

	var rtVal = gfn_confirm("confirm.before.delete");	// 선택된 자료를 삭제 하시겠습니까?
	if (rtVal == true) 
	{	
		ds_list.deleteRow(nRow);
	}
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 저장 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_save()
{
	// 변경사항 체크
	if (gfn_dsIsUpdated(ds_list) == false) 
	{
		gfn_alert("msg.save.nochange");	// 변경된 내역이 없습니다.
		return;
	}
	
	// ds_listValid Dataset에 Validation할 칼럼별로 구성
	// 항목 추가시에는 ','로 구분
	// 예)title:금액1,required:false,minlength:2,digits:true
	
	// Alert시 칼럼 표시 명칭               - title:아이디(메시지의 치환할 명칭) 
	// 필수체크                              - required:true(체크여부 true/false)
	// size 크기                              - length:7(size 숫자)
	// 최대 size 크기                        - maxlength:7(size 숫자)
	// 최소 size 크기                        - minlength:7(size 숫자)
	// 최대 size 크기(Byte)                  - maxlengthB:7(size 숫자)
	// 최소 size 크기(Byte)                  - minlengthB:7(size 숫자)
	// 숫자 여부                             - digits:true(체크여부 true/false)
	// 해당 숫자 이하                       - min:7(size 숫자)
	// 해당 숫자 이상                       - max:7(size 숫자)
	// 소숫점 자리수 비교                   - declimit:3(size 숫자)
	// 날짜 년월일 체크                     - date:true(체크여부 true/false)
	// 날짜 년월 체크                       - dateym:true(체크여부 true/false)
	// 타 칼럼값보다 큰지 비교             - comparemax:Column4(Dataset 칼럼ID):시작일(비교대상의 메시지 치환할 명칭)
	// 타 칼럼값보다 작은지 비교           - comparemin:Column6(Dataset 칼럼ID):종료일(비교대상의 메시지 치환할 명칭)
	// 타 칼럼값과 같은 값인지 비교        - equalto:Column5(Dataset 칼럼ID):금액1(비교대상의 메시지 치환할 명칭)
	// 사이의 값인지 비교                   - range:40(from 숫자):100(to 숫자)
	// 코드값이 목록내의 값인지 비교       - code:1(목록 숫자):2(목록 숫자):3(목록 숫자)
	// 이메일 여부 체크(함수 체크시 예제)  - isEmail:true(체크여부 true/false)
	
	// 오류시 focus 지정                      - focus:cal_toDate(Componet ID로 form에서부터의 경로)
	
	// 저장시 Validation Check	
	if (gfn_validCheck(grd_list, ds_listValid) == false)	return;
	
    var strSvcID    = "save";
    var strURL      = "svc::updateStmnCmmnCodeList.do";
    var strInDs     = "ds_list=ds_list:U";
    var strOutDs    = "";
    var strArg      = "";
    var strCallback = "fn_callBack";
    var bAsync      = true;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 출력 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_print()
{
	
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 도움말 버튼 클릭 시 (필수-공통버튼에서 호출됨)
 *---------------------------------------------------------------------------------------------*/
function fn_help()
{
	
}

/************************************************************************************************
 * TRANSACTION 및 CallBack 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : 트랜잭션 콜백 함수 (필수)
 *---------------------------------------------------------------------------------------------*/
function fn_callBack(strSvcID, nErrorCode, strErrorMsg)
{
	// 에러시 gfn_callBack에서 메시지 제공, 화면별 특정 에러 발생시에만 사용하세요.
	if (nErrorCode < 0) 
	{
		return;
	}
	
    switch(strSvcID)
    {
        case "search" :    		// 코드분류 조회
            //trace(ds_list.saveXML());
            break;
            		
        case "save" :			// 저장
			gfn_alert("msg.save.success");	// 저장 되었습니다.
            break;    
    }
}


/************************************************************************************************
 * 사용자 FUNCTION 영역 (필수)
************************************************************************************************/


/************************************************************************************************
 * 각 COMPONENT 별 EVENT 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : form에서 Key Down시 단축키들 지정(공통에서 자동생성, 화면에 스크립트 작성시 화면 스크립트만 실행됨)
 *---------------------------------------------------------------------------------------------*/
// function form_onkeydown(obj:Form, e:KeyEventInfo)
// {
// 	gfn_formKeyDown(obj, e);
// }

/*----------------------------------------------------------------------------------------------
 * 설명      : Grid Header Click시 정렬(공통에서 자동생성, 화면에 스크립트 작성시 화면 스크립트만 실행됨)
 *---------------------------------------------------------------------------------------------*/
// function grd_list_onheadclick(obj:Grid, e:GridClickEventInfo)
// {
// 	gfn_gridSort(obj, e);
// }

/*----------------------------------------------------------------------------------------------
 * 설명      : 분류코드 팝업 버튼 Click시
 *---------------------------------------------------------------------------------------------*/
function btn_gubun_onclick(obj:Button,  e:ClickEventInfo)
{
	var arrArg = new Array();
	arrArg[0] = "ccc";
	arrArg[1] = "ddd";
	
	var strId       = "popUpTemplate";
	var strURL      = "sample::TemplatePop.xfdl";
	var objArgument = {arg1:"aaa",arg2:"bbb",arg3:arrArg,arg4:ds_list};
	//var objArgument = "arg1=aaa    arg2=bbb";	// 기존 Miplatform 방식
	var nWidth      = -1;
	var nHeight     = -1;
	var strStyle    = "";	
	var nLeft       = -1;
	var nTop        = -1;
	var isModeless  = false;
	var bShowTitle  = true;
	var strAlign    = "-1";

	// 리턴값을 배열로 받을 경우	
	//var arrRtn = gfn_dialog("popUpTemplate", "sample::TemplatePop.xfdl", {arg1:"aaa",arg2:"bbb",arg3:arrArg,arg4:ds_gubunList});
	var arrRtn = gfn_dialog(strId, strURL, objArgument);
			
	if ( arrRtn instanceof Object )
	{
		edt_gubun.value    = arrRtn["NAME"];
		edt_gubun.userdata = arrRtn["CODE"];
		
		obj.userdata       = arrRtn["NAME"];
	}

	// 리턴값을  Dataset으로 받을 경우
// 	var dsRtn = new Dataset();
// 	var dsObj = gfn_dialog(strId, strURL, objArgument, nWidth, nHeight, strStyle, nLeft, nTop, isModeless, bShowTitle, strAlign);
// 
// 	dsRtn.copyData(dsObj);
// 	
// 	if(dsRtn.rowcount > 0) {
// 		trace(dsRtn.saveXML());
// 	}
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 코드 key Down시
 *---------------------------------------------------------------------------------------------*/
function edt_gubun_onkeydown(obj:Edit, e:KeyEventInfo)
{
	//trace("edt_gubun_onkeydown : e.altKey : " + e.altKey + " / e.ctrlKey : " + e.ctrlKey + " / e.keycode : " + e.keycode);
	// function fs_fn_edt_OnKeyDown(obj, nChar, strTabObj) 함수와 동일

	gfn_edtKeyDown(obj, e);
	
	// Enter 키 시 추가 기능
	if(e.keycode == 13) 
	{
		// 조회
		//fn_search();
		//return true;		// gfn_formKeyDown 실행 안함
	}
}
]]></Script>
  </Form>
</FDL>
