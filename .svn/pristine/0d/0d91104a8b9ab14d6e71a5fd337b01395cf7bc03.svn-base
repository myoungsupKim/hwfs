<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="form" classname="COMP_GUIDE_13" inheritanceid="" position="absolute 0 0 1238 1684" scrollbars="autoboth" onload="form_onload">
    <Layouts>
      <Layout>
        <Static id="Static02" class="sta_WFDA_Labelbg" position="absolute 93 448 1225 1675" anchor="left top"/>
        <Static id="Static04" class="sta_WFDA_Labelbg" position="absolute 393 803 1225 885" anchor="left top"/>
        <Static id="Static49" class="sta_WFDA_Labelbg" position="absolute 93 0 1225 804" anchor="left top"/>
        <Static id="Static50" text="- 설명" class="sta_WFDA_Label01" position="absolute 0 0 94 804" anchor="left top" style="font:Gulim,9,bold;"/>
        <Static id="Static00" position="absolute 100 7 1203 800" text="문법 : SCCheckbox.bind(object form, string qid, string checkboxGrpDivId, json option, json properties[, json event]);&#13;&#10;&#13;&#10; Parameter :  - form : 항상 this로 선언한다.  &#13;&#10;                    - qid : (문자열) 조회하고자 하는 대상의 쿼리아이디를 기술한다.(예, &quot;ComCode&quot;는 공통코드)&#13;&#10;                             1-공통쿼리아이디 화면을 실행해서 확인이 가능하다.&#13;&#10;                    - checkboxGrpDivId : (문자열) qid(쿼리아이디)의 결과를 체크박스로 생성할 그룹이 되는 Div 콤포넌트의 name을 기술한다.&#13;&#10;                    - option : (JSON형태) qid(쿼리아이디)의 조회조건으로 값을 JSON형태의 KEY:VALUE로 정의할 수 있다.(예, {groupCode:&quot;FM0002&quot;, useYn:&quot;Y&quot;, ...})&#13;&#10;                                 1-공통쿼리아이디 화면을 실행하여 좌측 쿼리아이디 목록의 그리드에서 사용하고자하는 쿼리아이디를 클릭하여 우측 상단에 조회된 &#13;&#10;                                 사용가능 옵션(조건) 그리드의 조건KEY 열의 값을 사용할 수 있다.&#13;&#10;                    - properties : (JSON형태) 체크박스의 속성을 정의한다. properties는 현재 아래만 지원 가능하다.&#13;&#10;                                        * width : 각 체크박스의 폭을 정의한다.(기본값은 0으로 정의되고, 데이터의 크기에 따라 자동조정된다.)&#13;&#10;                                        * height : 각 체크박스의 높이를 정의한다.(기본값은 20으로 정이되고, 궂이 사용할 필요가 없다.)&#13;&#10;                                        * space : 체크박스와 체크박스간의 간격을 정의한다.(기본값은 15이다.)&#13;&#10;                                        * appearance : (JSON형태) 체크박스의 바인딩할 속성으로서 아래의 값을 사용가능하다. (생략이 가능하며, 생략시 아래의 속성의 값은 기본값을 따른다.)&#13;&#10;                                                              * usingDb : true/false를 사용하며, 기본값은 false이다. &#13;&#10;                                                                               만약, true로 설정할 경우에는 truevalue는 Db Data의 코드값으로 설정된다. falsevalue는 &quot; &quot;으로 정의된다.&#13;&#10;                                                              * truevalue : 체크박스가 체크될 때의 값을 정의한다.(기본값은 &quot;Y&quot;이다.) - usingDb가 false인 경우에만 적용된다.&#13;&#10;                                                              * falsevalue : 체크박스의 체크가 해제될 때의 값을 정의한다.(기본값은 &quot;N&quot;이다.) - usingDb가 false인 경우에만 적용된다.&#13;&#10;                    - event : (JSON형태) 체크박스의 click 이벤트 및 체크박스를 생성한 이후의 trigger 이벤트를 기술한다.&#13;&#10;                                 * onclick : (문자열) 각 체크박스를 클릭할 시에 호출되는 함수명을 기술한다. 함수는 아래와 같은 Argument를 갖는다.&#13;&#10;                                                  function fn_onClick(obj, evt, data)&#13;&#10;                                                  {&#13;&#10;                                                      trace(obj);  //클릭 이벤트가 발생한 Checkbox Object&#13;&#10;                                                      trace(evt);  //클릭 이벤트의 정보.&#13;&#10;                                                      trace(data.code);  //클릭 이벤트가 발생한 Checkbox의 코드값.&#13;&#10;                                                      trace(data.value); //클릭 이벤트가 발생한 Checkbox의 value 값.&#13;&#10;                                                  }&#13;&#10;                                 * trigger : (문자열) 체크박스를 생성한 이후에 호출하고자 하는 함수명을 기술한다.(Argument가 하나가 있으며 JSON형태로 전달할 예정이다. 현재는 {}을 넘겨준다.)&#13;&#10;&#13;&#10;        ※ option, properties, event는 null로 대체될 수 있다.&#13;&#10;&#13;&#10;문법 : SCCheckbox.getValue(string checkboxGrpDivId [, string 취합형태]);&#13;&#10;   &#13;&#10;    Parameter : - checkboxGrpDivId : (문자열) 현재 체크된 값을 반환하고자 하는 체크박스의 그룹 Div 콤포넌트 name을 기술한다.&#13;&#10;                      - 취합형태 : (문자열) 체크된 결과를 반환하는 유형(취합형태)를 기술하며, 미리 정의된 값만 사용할 수 있다.&#13;&#10;                                      생략시에는 SCCheckbox.ALL이 기본값으로 사용된다.&#13;&#10;                              미리정의된 값&gt;   SCCheckbox.ONLY_VALUE : 체크된 체크박스의 value만 반환하며, 값과 값의 구분자는 콤마(,)로 구분되어 반환한다.&#13;&#10;                                                      SCCheckbox.CODE_VALUE : 체크된 체크박스의 코드와 value를 반환하며, 코드와 value의 구분자는 같다(=)로 구분되고, 쌍(코드=value)간의 구분은 &#13;&#10;                                                                                                콤마(,)로 구분되어 반환한다.&#13;&#10;                                                      SCCheckbox.ALL : 체크박스의 체크유무와 관계없이 전체를 반화하며, 반환되는 데이터의 구조는 SCCheckbox.CODE_VALUE와 동일하다.&#13;&#10;                                                                                 (참고 : 체크박스의 체크시는 value가 체크가 되지 않을시에는 falsevalue가 값으로 사용된다.)&#13;&#10;&#13;&#10;문법 : SCCheckbox.setValue(string checkboxGrpDivId, string value [,string 취합형태]);&#13;&#10;&#13;&#10;    Parameter :  - checkboxGrpDivId : (문자열) 현재 체크된 값을 반환하고자 하는 체크박스의 그룹 Div 콤포넌트 name을 기술한다.&#13;&#10;                      - value : (문자열) 체크박스의 값을 설정할 value를 기술한다.(데이터의 구조는 다음의 Parameter(취합형태)의 유형을 따른다.&#13;&#10;                      - 취합형태 : (문자열) 체크된 결과를 반환하는 유형(취합형태)를 기술하며, 미리 정의된 값만 사용할 수 있다.&#13;&#10;                                      생략시에는 SCCheckbox.ALL이 기본값으로 사용된다.&#13;&#10;                              미리정의된 값&gt;   SCCheckbox.ONLY_VALUE : 체크된 체크박스의 value만 반환하며, 값과 값의 구분자는 콤마(,)로 구분되어 반환한다.&#13;&#10;                                                      SCCheckbox.CODE_VALUE : 체크된 체크박스의 코드와 value를 반환하며, 코드와 value의 구분자는 같다(=)로 구분되고, 쌍(코드=value)간의 구분은 &#13;&#10;                                                                                                콤마(,)로 구분되어 반환한다.&#13;&#10;                                                      SCCheckbox.ALL : 체크박스의 체크유무와 관계없이 전체를 반환하며, 반환되는 데이터의 구조는 SCCheckbox.CODE_VALUE와 동일하다.&#13;&#10;                                                                                 (참고 : 체크박스의 체크시는 value가 체크가 되지 않을시에는 falsevalue가 값으로 사용된다.)&#13;&#10;" style="align:left top;"/>
        <Static id="Static01" text="- 예제" class="sta_WFDA_Label01" position="absolute 0 803 94 1675" anchor="left top" style="font:Gulim,9,bold;"/>
        <Static id="Static03" text="1. 기본" class="sta_WFDA_Label01" position="absolute 93 803 394 885" anchor="left top"/>
        <Static id="Static05" text="SCCheckbox.bind(this, &quot;ComCode&quot;, &quot;div_CheckboxGrp01&quot;, {groupCode:&quot;FM0001&quot;, useYn:&quot;Y&quot;});" position="absolute 402 840 1215 880"/>
        <Div id="div_CheckboxGrp01" taborder="7" text="div_CheckboxGrp01" position="absolute 399 811 1220 836" style="border:2 solid coral ;"/>
        <Static id="Static06" class="sta_WFDA_Labelbg" position="absolute 393 884 1225 966" anchor="left top"/>
        <Static id="Static07" text="2. 기본(바인딩 값을 DB로 사용할 경우)" class="sta_WFDA_Label01" position="absolute 93 884 394 966" anchor="left top"/>
        <Static id="Static08" text="SCCheckbox.bind(this, &quot;ComCode&quot;, &quot;div_CheckboxGrp02&quot;, {groupCode:&quot;FM0002&quot;, useYn:&quot;Y&quot;}, {appearance:{usingDb:true}});" position="absolute 402 921 1215 961"/>
        <Div id="div_CheckboxGrp02" taborder="8" style="border:2 solid coral ;" text="div_CheckboxGrp02" position="absolute 399 892 1220 917"/>
        <Static id="Static09" class="sta_WFDA_Labelbg" position="absolute 393 965 1225 1047" anchor="left top"/>
        <Static id="Static10" text="3. Checkbox의 width를 지정한 경우(110)" class="sta_WFDA_Label01" position="absolute 93 965 394 1047" anchor="left top"/>
        <Static id="Static11" text="SCCheckbox.bind(this, &quot;ComCode&quot;, &quot;div_CheckboxGrp03&quot;, {groupCode:&quot;FM0001&quot;, useYn:&quot;Y&quot;}, {width:110});" position="absolute 402 1002 1215 1042"/>
        <Div id="div_CheckboxGrp03" taborder="9" style="border:2 solid coral ;" text="div_CheckboxGrp03" position="absolute 399 973 1220 998"/>
        <Static id="Static12" class="sta_WFDA_Labelbg" position="absolute 393 1046 1225 1245" anchor="left top"/>
        <Static id="Static13" text="4. Checkbox의 click 이벤트 정의" class="sta_WFDA_Label01" position="absolute 93 1046 394 1245" anchor="left top"/>
        <Static id="Static14" text="SCCheckbox.bind(this, &quot;ComCode&quot;, &quot;div_CheckboxGrp04&quot;, {groupCode:&quot;FM0001&quot;, useYn:&quot;Y&quot;}, null, {onclick:&quot;fn_OnClickEvent04&quot;});" position="absolute 402 1083 1215 1123"/>
        <Div id="div_CheckboxGrp04" taborder="10" style="border:2 solid coral ;" text="div_CheckboxGrp04" position="absolute 399 1054 1220 1079"/>
        <TextArea id="TextArea01" taborder="11" position="absolute 402 1131 1220 1235"/>
        <Static id="Static15" class="sta_WFDA_Labelbg" position="absolute 393 1244 1225 1443" anchor="left top"/>
        <Static id="Static16" text="5. trigger (체크박스가 완료된 이후의 이벤트) 정의" class="sta_WFDA_Label01" position="absolute 93 1244 394 1443" anchor="left top"/>
        <Static id="Static17" text="SCCheckbox.bind(this, &quot;ComCode&quot;, &quot;div_CheckboxGrp05&quot;, {groupCode:&quot;FM0001&quot;, useYn:&quot;Y&quot;}, null, {trigger:&quot;fn_TriggerEvent05&quot;});" position="absolute 402 1281 1215 1321"/>
        <Div id="div_CheckboxGrp05" taborder="12" style="border:2 solid coral ;" text="div_CheckboxGrp05" position="absolute 399 1252 1220 1277"/>
        <TextArea id="TextArea02" taborder="13" position="absolute 402 1329 1220 1435"/>
        <Static id="Static18" class="sta_WFDA_Labelbg" position="absolute 393 1442 1225 1675" anchor="left top"/>
        <Static id="Static19" text="6. 데이터 취합 / 설정" class="sta_WFDA_Label01" position="absolute 93 1442 394 1675" anchor="left top"/>
        <Static id="Static20" text="SCCheckbox.bind(this, &quot;ComCode&quot;, &quot;div_CheckboxGrp06&quot;, {groupCode:&quot;FM0002&quot;, useYn:&quot;Y&quot;}, {appearance:{usingDb:true}});" position="absolute 402 1479 1215 1519"/>
        <Div id="div_CheckboxGrp06" taborder="14" style="border:2 solid coral ;" text="div_CheckboxGrp06" position="absolute 399 1450 1220 1475"/>
        <TextArea id="TextArea03" taborder="15" position="absolute 402 1572 1220 1635"/>
        <Combo id="Combo01" taborder="16" text="Combo01" position="absolute 120 1572 346 1592" index="-1" innerdataset="@Dataset01" datacolumn="Column0" codecolumn="Column1"/>
        <Button id="Button00" taborder="17" text="SCCheckbox.getValue(&quot;div_CheckboxGrp06&quot;, ...);" position="absolute 403 1546 1215 1565" onclick="Button00_onclick"/>
        <Button id="Button01" taborder="18" text="SCCheckbox.setValue(&quot;div_CheckboxGrp06&quot;, TextArea03.value, ...);" position="absolute 402 1641 1214 1665" onclick="Button01_onclick"/>
        <Static id="Static32" position="absolute 932 929 1105 952" style="border:2 solid crimson ;"/>
        <Static id="Static21" position="absolute 935 1009 1003 1032" style="border:2 solid crimson ;"/>
        <Static id="Static22" position="absolute 937 1090 1135 1113" style="border:2 solid crimson ;"/>
        <Static id="Static23" position="absolute 927 1292 1125 1315" style="border:2 solid crimson ;"/>
      </Layout>
    </Layouts>
    <Bind/>
    <Objects>
      <Dataset id="Dataset01" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="Column0" type="STRING" size="256"/>
          <Column id="Column1" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="Column0">SCCheckbox.ALL</Col>
            <Col id="Column1">1</Col>
          </Row>
          <Row>
            <Col id="Column0">SCCheckbox.ONLY_VALUE</Col>
            <Col id="Column1">2</Col>
          </Row>
          <Row>
            <Col id="Column0">SCCheckbox.CODE_VALUE</Col>
            <Col id="Column1">3</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Script type="xscript4.0"><![CDATA[/*
  화 면 명 : Template
  파 일 명 : Template.xfdl
  기    능 : Design 및 Script Template 

    수정일    수정자                  수정내용
  ----------   -------  --------------------------------------------------
  2014.11.01   김윤기   최초 생성
*/

/************************************************************************************************
 * 공통 라이브러리 INCLUDE 영역 (필수)
************************************************************************************************/
include "lib::lib_com.xjs";

/************************************************************************************************
 * FORM 변수 선언 영역 (필수)
************************************************************************************************/
/************************************************************************************************
 * FORM EVENT 영역 (필수)
************************************************************************************************/
/*----------------------------------------------------------------------------------------------
 * 설명      : Form Load (필수)
 *---------------------------------------------------------------------------------------------*/
function form_onload(obj:Form, e:LoadEventInfo)
{	
	// Form Load 시 공통 기능 처리(obj:Form, bCreateEvent:이벤트 생성 여부)
	gfn_formOnLoad(this);
	
	// 초기값 셋팅
	fn_init();
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 초기값 셋팅
 *---------------------------------------------------------------------------------------------*/
function fn_init()
{
	TextArea01.value = "";
	Combo01.value = "1";
	
	SCCheckbox.bind(this, "ComCode", "div_CheckboxGrp01", {groupCode:"FM0001", useYn:"Y"}); //1. 기본
 	SCCheckbox.bind(this, "ComCode", "div_CheckboxGrp02", {groupCode:"FM0002", useYn:"Y"}, {appearance:{usingDb:true}}); //2. 기본(바인딩 값을 DB로 사용할 경우)
 	SCCheckbox.bind(this, "ComCode", "div_CheckboxGrp03", {groupCode:"FM0001", useYn:"Y"}, {width:110}); //3. Checkbox의 width를 지정한 경우(110)
 	SCCheckbox.bind(this, "ComCode", "div_CheckboxGrp04", {groupCode:"FM0001", useYn:"Y"}, null, {onclick:"fn_OnClickEvent04"}); //4. Checkbox의 click 이벤트 정의
 	SCCheckbox.bind(this, "ComCode", "div_CheckboxGrp05", {groupCode:"FM0001", useYn:"Y"}, null, {trigger:"fn_TriggerEvent05"}); //5. trigger (체크박스가 완료된 이후의 이벤트) 정의
 	SCCheckbox.bind(this, "ComCode", "div_CheckboxGrp06", {groupCode:"FM0002", useYn:"Y"}, {appearance:{usingDb:true}}); //6. 데이터 취합 / 설정
}

//4. Checkbox의 click 이벤트 정의
function fn_OnClickEvent04(obj, evt, data)
{
	TextArea01.value = "체크박스 <" + obj.name + ">에서 onclick event 발생 / data.code는 <" + data.code + ">이며 data.value는 <" + data.value + ">입니다.\r" + TextArea01.value ;
}

//5. trigger (체크박스가 완료된 이후의 이벤트) 정의
function fn_TriggerEvent05(p)
{
	TextArea02.value = "Trigger Event가 발생했습니다.";
}

//6. 데이터 취합 / 설정
function Button00_onclick(obj:Button,  e:ClickEventInfo)
{
	var val = "";
	
	switch (Combo01.value)
	{
		case "1" :
			val = SCCheckbox.getValue("div_CheckboxGrp06", SCCheckbox.ALL); // 혹은 SCCheckbox.getValue("div_CheckboxGrp06");
			break;
		case "2" :
			val = SCCheckbox.getValue("div_CheckboxGrp06", SCCheckbox.ONLY_VALUE);
			break;
		case "3" :
			val = SCCheckbox.getValue("div_CheckboxGrp06", SCCheckbox.CODE_VALUE);
			break;
	}

	TextArea03.value = val;
}

//6. 데이터 취합 / 설정
function Button01_onclick(obj:Button,  e:ClickEventInfo)
{
	switch (Combo01.value)
	{
		case "1" :
			SCCheckbox.setValue("div_CheckboxGrp06", TextArea03.value, SCCheckbox.ALL); // 혹은 SCCheckbox.setValue("div_CheckboxGrp06", TextArea03.value);
			break;
		case "2" :
			SCCheckbox.setValue("div_CheckboxGrp06", TextArea03.value, SCCheckbox.ONLY_VALUE);
			break;
		case "3" :
			SCCheckbox.setValue("div_CheckboxGrp06", TextArea03.value, SCCheckbox.CODE_VALUE);
			break;
	}
}
]]></Script>
  </Form>
</FDL>
