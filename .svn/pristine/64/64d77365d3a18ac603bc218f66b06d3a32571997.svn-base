<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="rc.rcm.closeMgnt01DAO">
    <desc>업장 마감 HQML Query</desc>

    <!-- 업장 마감 (매출목록)을 조회한다. -->
    <statement name="salsList" type="select">
        /*+ com.hwfs.rc.rcm.dao.CloseMgnt01DAO.salsList */
        <![CDATA[
            SELECT  D.LVL
                    ,D.INTERNAL_USE_CLASS
                    ,D.OCCUR_DATE
                    ,D.SYS_CLASS
                    ,D.MU_CD
                    ,D.SALS_CLASS
                    ,D.VAT_CLASS
                    ,D.SAL_QUANTITY
                    ,D.UPRICE
                    ,D.NET_AMT
                    ,D.SVC_AMT
                    ,D.VAT_AMT
                    ,D.SAL_AMT
                    ,D.DDDD_CLOSE_YN
                    ,CASE WHEN D.INTERNAL_USE_CLASS = 'N' THEN
                        DECODE(D.SALS_CLASS,'',DECODE(DDDD_CLOSE_YN,'Y','전체(마감)','전체')
                            ,(
                            SELECT  DISTINCT ST.SALS_TYPE_NM
                            FROM    SLA_SALES_SALS_TYPE ST
                            WHERE   ST.SYS_CLASS = D.SYS_CLASS
                            AND     ST.SALS_TYPE = D.SALS_CLASS
                            ))
                    ELSE
                        DECODE(D.SALS_CLASS,'',DECODE(DDDD_CLOSE_YN,'Y','내부이용 전체(마감)','내부이용전체') 
                            ,(
                            SELECT  DISTINCT ST.SALS_TYPE_NM
                            FROM    SLA_SALES_SALS_TYPE ST
                            WHERE   ST.SYS_CLASS = D.SYS_CLASS
                            AND     ST.SALS_TYPE = D.SALS_CLASS
                            ))
                    END SALS_CLASS_NM
            FROM    (
                    SELECT  0 LVL
                            ,M.INTERNAL_USE_CLASS
                            ,D.OCCUR_DATE
                            ,D.SYS_CLASS
                            ,D.MU_CD
                            ,'' SALS_CLASS
                            ,'' VAT_CLASS
                            ,D.DDDD_CLOSE_YN
                            ,NVL(SUM(D.SAL_QUANTITY),0) SAL_QUANTITY
                            ,NVL(SUM(D.UPRICE),0) UPRICE
                            ,NVL(SUM(D.NET_AMT),0) NET_AMT
                            ,NVL(SUM(D.SVC_AMT),0) SVC_AMT
                            ,NVL(SUM(D.VAT_AMT),0) VAT_AMT
                            ,NVL(SUM(D.SAL_AMT),0) SAL_AMT
                    FROM    SLA_IF_UPJANG_SALS_DETAIL D
                            ,SLA_IF_UPJANG_SALS_MST M
                    WHERE   M.OCCUR_DATE = D.OCCUR_DATE
                    AND     M.SYS_CLASS = D.SYS_CLASS
                    AND     M.UPJANG_CD = D.UPJANG_CD
                    AND     M.RECEIPT_NUM = D.RECEIPT_NUM
                    AND     M.RECD_STATUS = 'L'
                    -- AND     M.MODIFY_SALS_YN = 'N'
                    AND     M.INTERNAL_USE_CLASS = 'N'
                    AND     D.RECD_STATUS = 'L'
                    --  AND     D.MODIFY_SALS_YN = 'N'
                    AND     D.OCCUR_DATE = :occurDate
                    AND     D.SYS_CLASS = :sysClass
                    AND     D.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     D.CC_CD IN (
                                    SELECT  A.CC_CD
                                    FROM    SCC_CC A
                                            ,HLDC_SC_DEPT_V B
                                    WHERE   B.CC_CD = A.CC_CD
                                    AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                                    AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
                                    AND     (B.TM_CD = :tmCd OR B.PT_CD = :tmCd)
                                    )
                </#if>
                <#if ccCd?has_content>
                    AND     D.CC_CD = :ccCd
                </#if>
                <#if upjangCd?has_content>
                    AND     TO_CHAR(D.UPJANG_CD) = :upjangCd
                </#if>
                    GROUP BY M.INTERNAL_USE_CLASS
                            ,D.OCCUR_DATE
                            ,D.SYS_CLASS
                            ,D.MU_CD
                            ,D.DDDD_CLOSE_YN
                    UNION ALL
                    SELECT  1
                            ,M.INTERNAL_USE_CLASS
                            ,D.OCCUR_DATE
                            ,D.SYS_CLASS
                            ,D.MU_CD
                            ,D.SALS_CLASS
                            ,D.VAT_CLASS
                            ,D.DDDD_CLOSE_YN
                            ,NVL(SUM(D.SAL_QUANTITY),0) SAL_QUANTITY
                            ,NVL(SUM(D.UPRICE),0) UPRICE
                            ,NVL(SUM(D.NET_AMT),0) NET_AMT
                            ,NVL(SUM(D.SVC_AMT),0) SVC_AMT
                            ,NVL(SUM(D.VAT_AMT),0) VAT_AMT
                            ,NVL(SUM(D.SAL_AMT),0) SAL_AMT
                    FROM    SLA_IF_UPJANG_SALS_DETAIL D
                            ,SLA_IF_UPJANG_SALS_MST M
                    WHERE   M.OCCUR_DATE = D.OCCUR_DATE
                    AND     M.SYS_CLASS = D.SYS_CLASS
                    AND     M.UPJANG_CD = D.UPJANG_CD
                    AND     M.RECEIPT_NUM = D.RECEIPT_NUM
                    AND     M.RECD_STATUS = 'L'
                    -- AND     M.MODIFY_SALS_YN = 'N'
                    AND     M.INTERNAL_USE_CLASS = 'N'
                    AND     D.RECD_STATUS = 'L'
                    --  AND     D.MODIFY_SALS_YN = 'N'
                    AND     D.OCCUR_DATE = :occurDate
                    AND     D.SYS_CLASS = :sysClass
                    AND     D.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     D.CC_CD IN (
                                    SELECT  A.CC_CD
                                    FROM    SCC_CC A
                                            ,HLDC_SC_DEPT_V B
                                    WHERE   B.CC_CD = A.CC_CD
                                    AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                                    AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
                                    AND     (B.TM_CD = :tmCd OR B.PT_CD = :tmCd)
                                    )
                </#if>
                <#if ccCd?has_content>
                    AND     D.CC_CD = :ccCd
                </#if>
                <#if upjangCd?has_content>
                    AND     TO_CHAR(D.UPJANG_CD) = :upjangCd
                </#if>
                    GROUP BY M.INTERNAL_USE_CLASS
                            ,D.OCCUR_DATE
                            ,D.SYS_CLASS
                            ,D.MU_CD
                            ,D.SALS_CLASS
                            ,D.VAT_CLASS
                            ,D.DDDD_CLOSE_YN
                    UNION ALL
                    SELECT  0 LVL
                            ,M.INTERNAL_USE_CLASS
                            ,D.OCCUR_DATE
                            ,D.SYS_CLASS
                            ,D.MU_CD
                            ,'' SALS_CLASS
                            ,'' VAT_CLASS
                            ,D.DDDD_CLOSE_YN
                            ,NVL(SUM(D.SAL_QUANTITY),0) SAL_QUANTITY
                            ,NVL(SUM(D.UPRICE),0) UPRICE
                            ,NVL(SUM(D.NET_AMT),0) NET_AMT
                            ,NVL(SUM(D.SVC_AMT),0) SVC_AMT
                            ,NVL(SUM(D.VAT_AMT),0) VAT_AMT
                            ,NVL(SUM(D.SAL_AMT),0) SAL_AMT
                    FROM    SLA_IF_UPJANG_SALS_DETAIL D
                            ,SLA_IF_UPJANG_SALS_MST M
                    WHERE   M.OCCUR_DATE = D.OCCUR_DATE
                    AND     M.SYS_CLASS = D.SYS_CLASS
                    AND     M.UPJANG_CD = D.UPJANG_CD
                    AND     M.RECEIPT_NUM = D.RECEIPT_NUM
                    AND     M.RECD_STATUS = 'L'
                    -- AND     M.MODIFY_SALS_YN = 'N'
                    AND     M.INTERNAL_USE_CLASS = 'Y'
                    AND     D.RECD_STATUS = 'L'
                    --  AND     D.MODIFY_SALS_YN = 'N'
                    AND     D.OCCUR_DATE = :occurDate
                    AND     D.SYS_CLASS = :sysClass
                    AND     D.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     D.CC_CD IN (
                                    SELECT  A.CC_CD
                                    FROM    SCC_CC A
                                            ,HLDC_SC_DEPT_V B
                                    WHERE   B.CC_CD = A.CC_CD
                                    AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                                    AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
                                    AND     (B.TM_CD = :tmCd OR B.PT_CD = :tmCd)
                                    )
                </#if>
                <#if ccCd?has_content>
                    AND     D.CC_CD = :ccCd
                </#if>
                <#if upjangCd?has_content>
                    AND     TO_CHAR(D.UPJANG_CD) = :upjangCd
                </#if>
                    GROUP BY M.INTERNAL_USE_CLASS
                            ,D.OCCUR_DATE
                            ,D.SYS_CLASS
                            ,D.MU_CD
                            ,D.DDDD_CLOSE_YN
                    UNION ALL
                    SELECT  1
                            ,M.INTERNAL_USE_CLASS
                            ,D.OCCUR_DATE
                            ,D.SYS_CLASS
                            ,D.MU_CD
                            ,D.SALS_CLASS
                            ,D.VAT_CLASS
                            ,D.DDDD_CLOSE_YN
                            ,NVL(SUM(D.SAL_QUANTITY),0) SAL_QUANTITY
                            ,NVL(SUM(D.UPRICE),0) UPRICE
                            ,NVL(SUM(D.NET_AMT),0) NET_AMT
                            ,NVL(SUM(D.SVC_AMT),0) SVC_AMT
                            ,NVL(SUM(D.VAT_AMT),0) VAT_AMT
                            ,NVL(SUM(D.SAL_AMT),0) SAL_AMT
                    FROM    SLA_IF_UPJANG_SALS_DETAIL D
                            ,SLA_IF_UPJANG_SALS_MST M
                    WHERE   M.OCCUR_DATE = D.OCCUR_DATE
                    AND     M.SYS_CLASS = D.SYS_CLASS
                    AND     M.UPJANG_CD = D.UPJANG_CD
                    AND     M.RECEIPT_NUM = D.RECEIPT_NUM
                    AND     M.RECD_STATUS = 'L'
                    -- AND     M.MODIFY_SALS_YN = 'N'
                    AND     M.INTERNAL_USE_CLASS = 'Y'
                    AND     D.RECD_STATUS = 'L'
                    --  AND     D.MODIFY_SALS_YN = 'N'
                    AND     D.OCCUR_DATE = :occurDate
                    AND     D.SYS_CLASS = :sysClass
                    AND     D.MU_CD = :muCd
                <#if tmCd?has_content>
                    AND     D.CC_CD IN (
                                    SELECT  A.CC_CD
                                    FROM    SCC_CC A
                                            ,HLDC_SC_DEPT_V B
                                    WHERE   B.CC_CD = A.CC_CD
                                    AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                                    AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
                                    AND     (B.TM_CD = :tmCd OR B.PT_CD = :tmCd)
                                    )
                </#if>
                <#if ccCd?has_content>
                    AND     D.CC_CD = :ccCd
                </#if>
                <#if upjangCd?has_content>
                    AND     TO_CHAR(D.UPJANG_CD) = :upjangCd
                </#if>
                    GROUP BY M.INTERNAL_USE_CLASS
                            ,D.OCCUR_DATE
                            ,D.SYS_CLASS
                            ,D.MU_CD
                            ,D.SALS_CLASS
                            ,D.VAT_CLASS
                            ,D.DDDD_CLOSE_YN
                    ) D
            ORDER BY D.DDDD_CLOSE_YN
                    ,D.INTERNAL_USE_CLASS
                    ,D.LVL
                    ,D.OCCUR_DATE
                    ,D.SYS_CLASS
                    ,D.MU_CD
                    ,D.SALS_CLASS
        ]]>
    </statement>

    <!-- 업장 마감 (지불목록)을 조회한다. -->
    <statement name="paymentList" type="select">
        /*+ com.hwfs.rc.rcm.dao.CloseMgnt01DAO.paymentList */
        <![CDATA[
        WITH CLOSE_INFO AS (
            /*
             * 1 :현금
             * 4 :쿠폰
             * 5 :타점마감
             * 6 :타사상품권
             * 7 :후불(외상)
             * 8 :후불
             * P1:선수금
             * P2:선수금(식권)
             * P3:외상(식권)
             * Z :내부이용
             */
            SELECT  OCCUR_DATE
                    ,SYS_CLASS
                    ,MU_CD
                    ,UPJANG_CD
                    ,PAY_CD
                    ,PAY_CD_NM
                    ,CASE WHEN PAY_CD = 'Z' THEN EVIDENCE_2
                        ELSE EVIDENCE_1
                        END PAY_TYPE_CD
                    ,CASE WHEN PAY_CD = '1' OR PAY_CD = '5' THEN DECODE(EVIDENCE_1,NULL,NULL,'현금영수증')
                        WHEN PAY_CD = '4' THEN
                            CASE WHEN EVIDENCE_2 = 'C' THEN (  -- 쿠폰
                                                        SELECT  DISTINCT COUPON_KIND_NM
                                                        FROM    SLA_COUPON_KIND_MST
                                                        WHERE   COUPON_KIND_CD = EVIDENCE_1
                                                        )
                                WHEN EVIDENCE_2 = 'G' THEN (    -- 상품권
                                                        SELECT  DISTINCT CODE_NAME
                                                        FROM    SCC_COMMON_CODE
                                                        WHERE   GROUP_CODE = 'GIFT_TYPE'
                                                        AND     CODE = EVIDENCE_1
                                                        )
                            END
                        WHEN PAY_CD = '6' THEN
                            (
                            SELECT  DISTINCT CODE_NAME
                            FROM    SCC_COMMON_CODE
                            WHERE   GROUP_CODE = 'GIFT_TYPE'
                            AND     CODE = EVIDENCE_1
                            )
                        WHEN PAY_CD = '7' OR PAY_CD = '8' THEN
                            (
                            SELECT  DISTINCT CUSTNM
                            FROM    HLDC_ST_CUST
                            WHERE   CUSTCD = EVIDENCE_1
                            )
                        WHEN PAY_CD = 'P1' OR PAY_CD = 'P2' OR PAY_CD = 'P3' THEN
                            (
                            SELECT  DISTINCT CUST_NM
                            FROM    SLA_ADVANCE_MST
                            WHERE   ADVANCE_NUM = EVIDENCE_1
                            )
                        WHEN PAY_CD = 'Z' THEN
                            (
                            SELECT  DISTINCT CC_NM
                            FROM    SCO_FS_HR_PERSONAL_V
                            WHERE   SABUN = EVIDENCE_2
                            )
                        END PAY_TYPE_NM
                    ,DDDD_CLOSE_YN
                    ,COUNT(PAY_CD) CNT
                    ,SUM(NVL(AMT,0)) AMT
            FROM    SLA_IF_UPJANG_PAYMENT
            WHERE   RECD_STATUS = 'L'
            AND     PAY_CD NOT IN ('2')            
            -- AND     MODIFY_SALS_YN = 'N'
            AND     OCCUR_DATE = :occurDate
            AND     SYS_CLASS = :sysClass
            AND     MU_CD = :muCd
        <#if tmCd?has_content>
            AND     CC_CD IN (
                            SELECT  A.CC_CD
                            FROM    SCC_CC A
                                    ,HLDC_SC_DEPT_V B
                            WHERE   B.CC_CD = A.CC_CD
                            AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                            AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
                            AND     (B.TM_CD = :tmCd OR B.PT_CD = :tmCd)
                            )
        </#if>
        <#if ccCd?has_content>
            AND     CC_CD = :ccCd
        </#if>
        <#if upjangCd?has_content>
            AND     TO_CHAR(UPJANG_CD) = :upjangCd
        </#if>
            GROUP BY OCCUR_DATE
                    ,SYS_CLASS
                    ,MU_CD
                    ,UPJANG_CD
                    ,PAY_CD
                    ,PAY_CD_NM
                    ,DDDD_CLOSE_YN
                    ,EVIDENCE_1
                    ,EVIDENCE_2
            UNION ALL
            /* 2:카드 */
            SELECT  OCCUR_DATE
                    ,SYS_CLASS
                    ,MU_CD
                    ,UPJANG_CD
                    ,'2'
                    ,(
                    SELECT  DISTINCT P.PAY_TYPE_NM
                    FROM    SLA_SALES_PAY_TYPE P
                    WHERE   P.SYS_CLASS = SYS_CLASS
                    AND     P.PAY_TYPE = '2'
                    )
                    ,NULL
                    ,NULL
                    ,DDDD_CLOSE_YN
                    ,COUNT(CARD_COM_CD)
                    ,SUM(NVL(USE_AMT,0))
            FROM    SLA_IF_CARD_APPRV_INFO
            WHERE   RECD_STATUS = 'L'
            AND     DEAL_TYPE = '1'
            -- AND     MODIFY_SALS_YN = 'N'
            AND     OCCUR_DATE = :occurDate
            AND     SYS_CLASS = :sysClass
            AND     MU_CD = :muCd
        <#if tmCd?has_content>
            AND     CC_CD IN (
                            SELECT  A.CC_CD
                            FROM    SCC_CC A
                                    ,HLDC_SC_DEPT_V B
                            WHERE   B.CC_CD = A.CC_CD
                            AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                            AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
                            AND     (B.TM_CD = :tmCd OR B.PT_CD = :tmCd)
                            )
        </#if>
        <#if ccCd?has_content>
            AND     CC_CD = :ccCd
        </#if>
        <#if upjangCd?has_content>
            AND     TO_CHAR(UPJANG_CD) = :upjangCd
        </#if>
            GROUP BY OCCUR_DATE
                    ,SYS_CLASS
                    ,MU_CD
                    ,UPJANG_CD
                    --,CARD_COM_CD
                    ,DDDD_CLOSE_YN
        )
        SELECT  0 LVL   -- 전체
                ,OCCUR_DATE
                ,SYS_CLASS
                ,MU_CD
                ,NULL UPJANG_CD
                ,DECODE(DDDD_CLOSE_YN,'Y','전체(마감)','전체') UPJANG_NM
                ,NULL PAY_CD
                ,NULL PAY_CD_NM
                ,NULL PAY_TYPE_CD
                ,NULL PAY_TYPE_NM
                ,DDDD_CLOSE_YN
                ,SUM(NVL(CNT,0)) CNT
                ,SUM(NVL(AMT,0)) AMT
        FROM    CLOSE_INFO
        GROUP BY OCCUR_DATE
                ,SYS_CLASS
                ,MU_CD
                ,DDDD_CLOSE_YN
        UNION ALL
        SELECT  1 LVL
                ,OCCUR_DATE
                ,SYS_CLASS
                ,MU_CD
                ,UPJANG_CD
                ,SCC_UPJANGNM_FUN(UPJANG_CD)
                ,NULL PAY_CD
                ,NULL PAY_CD_NM
                ,NULL PAY_TYPE_CD
                ,NULL PAY_TYPE_NM
                ,DDDD_CLOSE_YN
                ,SUM(CNT)
                ,SUM(AMT)
        FROM    CLOSE_INFO
        GROUP BY OCCUR_DATE
                ,SYS_CLASS
                ,MU_CD
                ,UPJANG_CD
                ,DDDD_CLOSE_YN
        UNION ALL
        SELECT  2 LVL
                ,OCCUR_DATE
                ,SYS_CLASS
                ,MU_CD
                ,UPJANG_CD
                ,SCC_UPJANGNM_FUN(UPJANG_CD)
                ,PAY_CD
                ,PAY_CD_NM
                ,PAY_TYPE_CD
                ,PAY_TYPE_NM
                ,DDDD_CLOSE_YN
                ,CNT
                ,AMT
        FROM    CLOSE_INFO
        ORDER BY DDDD_CLOSE_YN
                ,UPJANG_CD NULLS FIRST
                ,UPJANG_CD
                ,LVL
                ,PAY_CD
                ,PAY_TYPE_CD
        ]]>
    </statement>
    
    <!-- 선수금 발생내역 조회(선수금, 쿠폰, 식권) -->
    <statement name="selectAdvanceOccurList" type="select">
    /*+ com.hwfs.rc.rcm.dao.CloseMgnt01DAO.selectAdvanceOccurList */
        <![CDATA[
        WITH ADVANCE_OCCUR AS (
	        SELECT 1 LVL
	        	  ,'선수금' SETTLE_CLASS
	        	  ,COUNT(OCCUR_DATE) CNT
	        	  ,SUM(SETTLE_AMT) AMT
	        	  ,DDDD_CLOSE_YN
	        FROM   SLA_IF_ADVANCE_SETTLE_WAY
	        WHERE  SYS_CLASS = :sysClass
	        AND	   OCCUR_DATE = :occurDate
	        <#if upjangCd?has_content>
	        AND	   UPJANG_CD = :upjangCd
	        </#if>
	        <#if muCd?has_content>
	        AND	   MU_CD = :muCd
	        </#if>
	        <#if ccCd?has_content>
	        AND	   CC_CD = :ccCd
	        </#if>
	        <#if tmCd?has_content>
	        AND	   CC_CD IN (
	                         SELECT  A.CC_CD
	                         FROM    SCC_CC A
	                                ,HLDC_SC_DEPT_V B
	                         WHERE   B.CC_CD = A.CC_CD
	                         AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
	                         AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
	                         AND     (B.TM_CD = :tmCd OR B.PT_CD = :tmCd)
	                         )
	        </#if>
	        GROUP BY SYS_CLASS
	        		,OCCUR_DATE
	        		,DDDD_CLOSE_YN
	        UNION ALL
	        SELECT 2 LVL
	        	  ,SETTLE_CLASS
	        	  ,COUNT(SETTLE_CLASS) CNT
	        	  ,SUM(SETTLE_AMT) AMT
	        	  ,DDDD_CLOSE_YN
	        FROM   SLA_IF_ADVANCE_SETTLE_WAY
	        WHERE  SYS_CLASS = :sysClass
	        AND	   OCCUR_DATE = :occurDate
	        <#if upjangCd?has_content>
	        AND	   UPJANG_CD = :upjangCd
	        </#if>
	        <#if muCd?has_content>
	        AND	   MU_CD = :muCd
	        </#if>
	        <#if ccCd?has_content>
	        AND	   CC_CD = :ccCd
	        </#if>
	        <#if tmCd?has_content>
	        AND	   CC_CD IN (
	                         SELECT  A.CC_CD
	                         FROM    SCC_CC A
	                                ,HLDC_SC_DEPT_V B
	                         WHERE   B.CC_CD = A.CC_CD
	                         AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
	                         AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
	                         AND     (B.TM_CD = :tmCd OR B.PT_CD = :tmCd)
	                         )
	        </#if>
	        GROUP BY SYS_CLASS
	        		,OCCUR_DATE
	        		,SETTLE_CLASS
	        		,DDDD_CLOSE_YN
	        UNION ALL
	        SELECT 1 LVL
	        	  ,'쿠폰' SETTLE_CLASS
	        	  ,COUNT(SALE_DATE) CNT
	        	  ,SUM(SETTLE_AMT) AMT
	        	  ,DDDD_CLOSE_YN
	        FROM   SLA_IF_COUPON_SETTLE_WAY
	        WHERE  SYS_CLASS = :sysClass
	        AND	   SALE_DATE = :occurDate
	        <#if upjangCd?has_content>
	        AND	   UPJANG_CD = :upjangCd
	        </#if>
	        <#if muCd?has_content>
	        AND	   MU_CD = :muCd
	        </#if>
	        <#if ccCd?has_content>
	        AND	   CC_CD = :ccCd
	        </#if>
	        <#if tmCd?has_content>
	        AND	   CC_CD IN (
	                         SELECT  A.CC_CD
	                         FROM    SCC_CC A
	                                ,HLDC_SC_DEPT_V B
	                         WHERE   B.CC_CD = A.CC_CD
	                         AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
	                         AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
	                         AND     (B.TM_CD = :tmCd OR B.PT_CD = :tmCd)
	                         )
	        </#if>
	        GROUP BY SYS_CLASS
	        		,SALE_DATE
	        		,DDDD_CLOSE_YN
	        UNION ALL
	        SELECT 2 LVL
	        	  ,SETTLE_CLASS
	        	  ,COUNT(SETTLE_CLASS) CNT
	        	  ,SUM(SETTLE_AMT) AMT
	        	  ,DDDD_CLOSE_YN
	        FROM   SLA_IF_COUPON_SETTLE_WAY
	        WHERE  SYS_CLASS = :sysClass
	        AND	   SALE_DATE = :occurDate
	        <#if upjangCd?has_content>
	        AND	   UPJANG_CD = :upjangCd
	        </#if>
	        <#if muCd?has_content>
	        AND	   MU_CD = :muCd
	        </#if>
	        <#if ccCd?has_content>
	        AND	   CC_CD = :ccCd
	        </#if>
	        <#if tmCd?has_content>
	        AND	   CC_CD IN (
	                         SELECT  A.CC_CD
	                         FROM    SCC_CC A
	                                ,HLDC_SC_DEPT_V B
	                         WHERE   B.CC_CD = A.CC_CD
	                         AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
	                         AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
	                         AND     (B.TM_CD = :tmCd OR B.PT_CD = :tmCd)
	                         )
	        </#if>
	        GROUP BY SYS_CLASS
	        		,SALE_DATE
	        		,SETTLE_CLASS
	        		,DDDD_CLOSE_YN
	        UNION ALL
	        SELECT 1 LVL
	        	  ,'식권' SETTLE_CLASS
	        	  ,COUNT(SALE_DATE) CNT
	        	  ,SUM(SETTLE_AMT) AMT
	        	  ,DDDD_CLOSE_YN
	        FROM   SLA_IF_MEAL_TICKET_SETTLE_WAY
	        WHERE  SYS_CLASS = :sysClass
	        AND	   SALE_DATE = :occurDate
	        <#if upjangCd?has_content>
	        AND	   UPJANG_CD = :upjangCd
	        </#if>
	        <#if muCd?has_content>
	        AND	   MU_CD = :muCd
	        </#if>
	        <#if ccCd?has_content>
	        AND	   CC_CD = :ccCd
	        </#if>
	        <#if tmCd?has_content>
	        AND	   CC_CD IN (
	                         SELECT  A.CC_CD
	                         FROM    SCC_CC A
	                                ,HLDC_SC_DEPT_V B
	                         WHERE   B.CC_CD = A.CC_CD
	                         AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
	                         AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
	                         AND     (B.TM_CD = :tmCd OR B.PT_CD = :tmCd)
	                         )
	        </#if>
	        GROUP BY SYS_CLASS
	        		,SALE_DATE
	        		,DDDD_CLOSE_YN
	        UNION ALL
	        SELECT 2 LVL
	        	  ,SETTLE_CLASS
	        	  ,COUNT(SETTLE_CLASS) CNT
	        	  ,SUM(SETTLE_AMT) AMT
	        	  ,DDDD_CLOSE_YN
	        FROM   SLA_IF_MEAL_TICKET_SETTLE_WAY
	        WHERE  SYS_CLASS = :sysClass
	        AND	   SALE_DATE = :occurDate
	        <#if upjangCd?has_content>
	        AND	   UPJANG_CD = :upjangCd
	        </#if>
	        <#if muCd?has_content>
	        AND	   MU_CD = :muCd
	        </#if>
	        <#if ccCd?has_content>
	        AND	   CC_CD = :ccCd
	        </#if>
	        <#if tmCd?has_content>
	        AND	   CC_CD IN (
	                         SELECT  A.CC_CD
	                         FROM    SCC_CC A
	                                ,HLDC_SC_DEPT_V B
	                         WHERE   B.CC_CD = A.CC_CD
	                         AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
	                         AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
	                         AND     (B.TM_CD = :tmCd OR B.PT_CD = :tmCd)
	                         )
	        </#if>
	        GROUP BY SYS_CLASS
	        		,SALE_DATE
	        		,SETTLE_CLASS
	        		,DDDD_CLOSE_YN
	    )
	    SELECT 0 LVL
	    	  ,DECODE(DDDD_CLOSE_YN, 'Y', '전체(마감)', '전체') SETTLE_CLASS
	    	  ,SUM(CNT) CNT
	    	  ,SUM(AMT) AMT
	    	  ,DDDD_CLOSE_YN
	    FROM   ADVANCE_OCCUR
	    WHERE  LVL = 1
	    GROUP BY LVL
	    		,DDDD_CLOSE_YN
	    UNION ALL
	    SELECT LVL
	    	  ,DECODE(SETTLE_CLASS, '1', '현금', '2', '카드', '3', '가수금', '4', '선수금', '7', '외상', SETTLE_CLASS) SETTLE_CLASS
	    	  ,CNT
	    	  ,AMT
	    	  ,DDDD_CLOSE_YN
	    FROM ADVANCE_OCCUR
        ]]>
    </statement>

</hqml>
