<?xml version="1.0" encoding="euc-kr"?>
<query>
	<type>select</type>
	<description><![CDATA[식재료율]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
<![CDATA[
SELECT  P_COST_RATE, J_COST_RATE, W_COST_RATE,
--------------------------
-- 식재료율
--------------------------
        (
        TO_CHAR(SYSDATE, 'MM')||'월 기본운영계획(전망):'||TRIM(TO_CHAR(P_COST_RATE,'9,999,990.9'))||'%('||TRIM(TO_CHAR(J_COST_RATE,'9,999,990.9'))||'%)'||
        ' 현재('||TO_CHAR(SYSDATE, 'MM')||'월'||TO_CHAR(SYSDATE, 'DD')||'일)실적누계:'||TRIM(TO_CHAR(W_COST_RATE,'9,999,990.9'))||'%('||
        CASE  WHEN W_COST_RATE-P_COST_RATE > 0 THEN '↑'||TRIM(TO_CHAR(ABS(W_COST_RATE-P_COST_RATE),'9,999,990.9'))||'%/'
                                               ELSE '↓'||TRIM(TO_CHAR(ABS(W_COST_RATE-P_COST_RATE),'9,999,990.9'))||'%/'
        END
        ||
        CASE  WHEN W_COST_RATE-J_COST_RATE > 0 THEN '↑'||TRIM(TO_CHAR(ABS(W_COST_RATE-J_COST_RATE),'9,999,990.9'))||'%)'
                                               ELSE '↓'||TRIM(TO_CHAR(ABS(W_COST_RATE-J_COST_RATE),'9,999,990.9'))||'%)'
        END
        ) RMK
FROM
    (
    SELECT NVL(ROUND(SUM(DECODE(PLAN_AMT,0,0,PLAN_COST/PLAN_AMT))*100,1),0) P_COST_RATE -- 계획식재료비
         , NVL(ROUND(SUM(DECODE(PROSPECT_AMT,0,0,PROSPECT_COST/PROSPECT_AMT))*100,1),0) J_COST_RATE  --전망식재료비
      FROM (
            SELECT UPJANG
                 , SUM(DECODE(MGMT_ACCT_CD, 'PLA10000', AMT, 'PLA30000', AMT, 0)) PLAN_AMT
                 , SUM(DECODE(MGMT_ACCT_CD, 'PLB11000', AMT, 0)) PLAN_COST
                 , 0 PROSPECT_COST
                 , 0 PROSPECT_AMT
              FROM MAM_FS_PL_V
             WHERE DATA_CLASS = 'P'
               AND YYMM = TO_CHAR(SYSDATE,'YYYYMM')
               AND UPJANG = #UPJANG#
             GROUP BY UPJANG
            UNION ALL
            SELECT UPJANG
                 , 0 PLAN_AMT
                 , 0 PLAN_COST
                 , SUM(NVL(RAWCOST,0)) PROSPECT_COST
                 , SUM(NVL(FOOD_SALEAMT,0)+NVL(ETC_SALEAMT,0)) PROSPECT_AMT
              FROM MAF_FS_SALE_V
             WHERE SALE_DATE LIKE TO_CHAR(SYSDATE,'YYYYMM') || '%'
               AND UPJANG = #UPJANG#
             GROUP BY UPJANG
            )
    ) A,
    (
     SELECT
             ROUND( DECODE(SUM(RESULT_TRX_AMT),0,0,SUM(TRANS_COST_AMT+LOCAL_COST_AMT+EMP_COST_AMT)/SUM(RESULT_TRX_AMT))*100 ,1) AS W_COST_RATE
        FROM (
            -- 기간실적
            SELECT UPJANG
                 , ROUND(SUM(DECODE(TAX_KIND, '310', AMT / 1.1, AMT))) RESULT_TRX_AMT
                 , 0 TRANS_COST_AMT
                 , 0 LOCAL_COST_AMT
                 , 0 EMP_COST_AMT
              FROM MAS_TRX
             WHERE TRX_DATE BETWEEN TO_CHAR(SYSDATE,'YYYYMM')||'01' AND TO_CHAR(SYSDATE,'YYYYMMDD')
               AND CR_ACCTCD IN ('4010221', '4010299')
               AND UPJANG    =  #UPJANG#
             GROUP BY UPJANG
            UNION ALL
            --전산구매
            SELECT TRANS_UPJANG
                 , 0 RESULT_TRX_AMT
                 , SUM(TRANS_COST_AMT) TRANS_COST_AMT
                 , 0 LOCAL_COST_AMT
                 , 0 EMP_COST_AMT
              FROM (
                   SELECT TRANS_UPJANG,
                          NVL( DECODE(B.OUTVAT_FLAG, 'Y', ROUND( SUM( MARGIN_AMOUNT * DECODE( TAX_CODE, '100', DECODE( MATERIAL_ACCTCD, '1120311', 1.1, 1), 1) ) ), SUM( MARGIN_AMOUNT ) ), 0) TRANS_COST_AMT
                     FROM HLDC_PO_TRANSACTION A, HLDC_PO_SUBINVENTORY B
                    WHERE A.SUBINV_CODE = B.SUBINV_CODE
                      AND TRANS_DATE BETWEEN TO_CHAR(SYSDATE,'YYYYMM')||'01' AND TO_CHAR(SYSDATE,'YYYYMMDD')
                      AND TRANS_TYPE LIKE 'O%'
                      AND TRANS_TYPE <> 'O002'
                      AND A.ACCTCD = '4020231'
                      AND A.TRANS_UPJANG    =  #UPJANG#
                    GROUP BY TRANS_UPJANG, B.OUTVAT_FLAG
                   )
             GROUP BY TRANS_UPJANG
            UNION ALL
            --현지구매
            SELECT UPJANG
                 , 0 RESULT_TRX_AMT
                 , 0 TRANS_COST_AMT
                 , SUM(DECODE((SELECT SCHOOL_YN FROM HLDC_ST_UPJANG WHERE UPJANG = A.UPJANG), 'Y', A.AMT, A.ADJ_AMT)) LOCAL_COST_AMT
                 , 0 EMP_COST_AMT
              FROM MAS_ADVANCE A
             WHERE ADJ_DATE BETWEEN TO_CHAR(SYSDATE,'YYYYMM')||'01' AND TO_CHAR(SYSDATE,'YYYYMMDD')
               AND ACCTCD = '1120311'
               AND UPJANG    =  #UPJANG#
             GROUP BY UPJANG
            UNION ALL
            --직원식대
            SELECT UPJANG
                 , 0 RESULT_TRX_AMT
                 , 0 TRANS_COST_AMT
                 , 0 LOCAL_COST_AMT
                 , SUM(OP_MANS * 1500 * -1) EMP_COST_AMT
              FROM MAF_FS_SALE_V
             WHERE SALE_DATE BETWEEN TO_CHAR(SYSDATE,'YYYYMM')||'01' AND TO_CHAR(SYSDATE,'YYYYMMDD')
               AND UPJANG    =  #UPJANG#
             GROUP BY UPJANG
          )
      ) C	]]></statement>
	<input default-name="ds_input">
		<col name="UPJANG" size="255" type="VARCHAR" description="" /> 
	</input>
	<output default-name="ds_sik">
		<col name="P_COST_RATE" size="22" type="NUMERIC" description="" /> 
		<col name="J_COST_RATE" size="22" type="NUMERIC" description="" /> 
		<col name="W_COST_RATE" size="22" type="NUMERIC" description="" /> 
		<col name="RMK" size="262" type="VARCHAR" description="" /> 
	</output>
</query>
