<?xml version="1.0" encoding="euc-kr"?>
<query>
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
<![CDATA[
SELECT A.RECIPE_CD
      ,A.RECIPE_NAME
      ,A.ITEM_CODE
      ,A.ITEM_NAME
      ,A.FEATURE_NAME
      ,A.ITEM_SIZE
      ,A.PO_UOM
      ,A.NEED_QTY
      ,A.PAST_PRICE
      ,NVL(ROUND( (A.NEED_QTY * NVL(G_ITEM_PRICE,0))),0) CUR_PRICE
      ,A.UPJANG
      ,A.MENU_CD
      ,A.ITEM_SEQ
      ,A.EDIBLE_QTY
      ,A.CUT_SPEC
      ,A.ORDER_YN
      ,A.PR_ID
      ,A.PR_NUM
      ,A.PR_QTY
      ,A.NEED_DATE
      ,A.UNIT_PRICE
      ,A.OP_RATE
      ,A.OP_PRICE
  FROM
       (
         SELECT A.RECIPE_TYPE, A.CUISINE_TYPE, A.RECIPE_CD, A.RECIPE_NAME,
                C.ITEM_NAME, D.FEATURE_NAME, C.ITEM_SIZE, C.PO_UOM,
                B.UPJANG, B.MENU_CD, B.ITEM_CODE, B.ITEM_SEQ, B.NEED_QTY, B.EDIBLE_QTY, B.CUT_SPEC, B.ORDER_YN,
                B.PR_ID, B.PR_NUM, B.PR_QTY, B.NEED_DATE, B.UNIT_PRICE, B.OP_RATE, B.OP_PRICE,
                NVL(ROUND((B.NEED_QTY * NVL((B.OP_PRICE / C.KG_CONVERT_RATE / 1000),0))),0) AS PAST_PRICE
           FROM FMM_RECIPE A
               ,FMM_RECIPE_ITEM B
               ,(
                  SELECT A.ITEM_CODE,A.ITEM_NAME,A.ITEM_SIZE,A.PO_UOM,A.KG_CONVERT_RATE
                         ,B.CAL, B.WATER, B.PROT, B.FAT, B.CARBO, B.FIBER, B.ASH, B.CA, B.P
                         ,B.FE, B.NA, B.K, B.VITA_A, B.RETIN, B.B_CAROT, B.THIA, B.RIBO, B.NIACIN
                         , B.VITA_C, B.CHOLE, B.DISUSE_RATE
                  FROM (SELECT B.ITEM_CODE, B.ITEM_NAME, B.ITEM_SIZE, B.PO_UOM, B.TAX_CODE,B.KG_CONVERT_RATE
                          FROM HLDC_PO_ITEM_MST B, HLDC_PO_TREAT_UPJANG A
                         WHERE A.ITEM_CODE = B.ITEM_CODE
                           AND B.ITEM_CODE BETWEEN '010000000000' AND '019999999999'
                           AND A.UPJANG = (SELECT C.AP_UNITPRICE_UPJANG FROM HLDC_ST_UPJANG C WHERE C.UPJANG = #UPJANG#)
                           AND A.USE_YN = 'Y' AND B.USE_YN = 'Y'
                         UNION ALL
                        SELECT A.ITEM_CODE, A.ITEM_NAME, A.ITEM_SIZE, A.PO_UOM, A.TAX_CODE,A.KG_CONVERT_RATE
                          FROM FMP_OTCUST_ITEM A, FMP_OTCUST_PRICE_AVA_V B
                             ,(SELECT UPJANG, ITEM_CODE, MAX(SDATE) AS SDATE
                                 FROM FMP_OTCUST_PRICE_AVA_V
                                WHERE UPJANG = (SELECT Z.OTCUST_PRICE_UPJANG FROM FMS_UPJANG Z WHERE Z.UPJANG = #UPJANG#)
                                  AND SDATE <= NVL('',TO_CHAR(SYSDATE,'YYYYMMDD'))
                                GROUP BY UPJANG, ITEM_CODE) C
                         WHERE A.ITEM_CODE = B.ITEM_CODE
                           AND B.UPJANG = C.UPJANG
                           AND B.SDATE = C.SDATE
                           AND B.ITEM_CODE = C.ITEM_CODE
                           AND A.USE_YN = 'Y' AND B.USE_YN = 'Y') A,
                       (SELECT ITEM_CODE, CAL, WATER, PROT, FAT, CARBO, FIBER, ASH, CA, P, FE, NA, K, VITA_A, RETIN, B_CAROT, THIA, RIBO, NIACIN, VITA_C, CHOLE, DISUSE_RATE
                          FROM FMP_ITEM_NUT WHERE UPJANG = #UPJANG#
                         UNION ALL
                       (SELECT ITEM_CODE, CAL, WATER, PROT, FAT, CARBO, FIBER, ASH, CA, P, FE, NA, K, VITA_A, RETIN, B_CAROT, THIA, RIBO, NIACIN, VITA_C, CHOLE, DISUSE_RATE
                          FROM FSI_ITEM_NUT
                         MINUS
                        SELECT ITEM_CODE, CAL, WATER, PROT, FAT, CARBO, FIBER, ASH, CA, P, FE, NA, K, VITA_A, RETIN, B_CAROT, THIA, RIBO, NIACIN, VITA_C, CHOLE, DISUSE_RATE
                          FROM FMP_ITEM_NUT WHERE UPJANG = #UPJANG#)) B
                    WHERE A.ITEM_CODE = B.ITEM_CODE
	         )C --자재 리스트
               ,(
			SELECT  ITEM_CODE,
				(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0033' AND CODE = ITEM_FEATURE) AS FEATURE_NAME
			FROM    FSI_ITEM_FEATURE
			WHERE   (ITEM_CODE, CDATE) IN (
						      SELECT ITEM_CODE, MAX(CDATE) AS CDATE
						      FROM   FSI_ITEM_FEATURE
						      WHERE (1=1)
						      AND  (CENTER_CODE, CUSTCD, ITEM_CODE, APPLY_DATE) IN (
													   SELECT CENTER_CODE,
														  CUSTCD,
														  ITEM_CODE,
														  MAX(APPLY_DATE) AS APPLY_DATE
													    FROM  FSI_ITEM_FEATURE
													    WHERE  CENTER_CODE  = '300001'
													    AND  APPLY_DATE BETWEEN TO_CHAR(SYSDATE,'YYYYMMDD') AND TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYYMMDD')-1
													    GROUP BY CENTER_CODE, CUSTCD, ITEM_CODE
                                                        )
							GROUP BY ITEM_CODE
							)
		) D -- 자재 특성
          WHERE A.UPJANG = B.UPJANG
            AND A.MENU_CD = B.MENU_CD
            AND A.RECIPE_CD = B.RECIPE_CD
            AND B.ITEM_CODE = C.ITEM_CODE
            AND B.ITEM_CODE = D.ITEM_CODE(+)
            AND C.ITEM_CODE BETWEEN '010100000001' AND '019000000000'
            AND A.UPJANG  = #UPJANG#
            AND A.MENU_CD = #MENU_CD#
            AND A.RECIPE_CD = #RECIPE_CD#
       ) A
      ,(
           SELECT A.UPJANG, A.ITEM_CODE,A.CENTER_CODE,A.CUSTCD
           , A.UNIT_PRICE, A.SALE_PRICE, NVL(C.OP_RATE,0) AS OP_RATE --운영율
            , DECODE(SIGN(NVL(C.OP_PRICE,0)),0, SCC_CEIL(A.SALE_PRICE + ROUND(A.SALE_PRICE * NVL(C.OP_RATE,0) / 100),C.CEIL_VAL), C.OP_PRICE) AS OP_PRICE --운영단가(1인원가)
            , ROUND(DECODE(SIGN(NVL(C.OP_PRICE,0)),0, SCC_CEIL(A.SALE_PRICE + ROUND(A.SALE_PRICE * NVL(C.OP_RATE,0) / 100),C.CEIL_VAL), C.OP_PRICE) / (B.KG_CONVERT_RATE * 1000), 1) AS G_ITEM_PRICE--g당단가
              FROM FMS_ITEM_V B, FMU_OP_RATE C
                 ,(SELECT #UPJANG# AS UPJANG, NVL('',TO_CHAR(SYSDATE,'YYYYMMDD')) AS NEED_DATE
                        , A.ITEM_CODE, A.CONTRACT_PRICE AS UNIT_PRICE, A.SALE_PRICE, B.CENTER_CODE,A.CUSTCD
                     FROM HLDC_PO_CONTRACT_FSALE A
                        ,(SELECT CENTER_CODE, UPJANG, ITEM_CODE, MAX(CONTRACT_START) AS CONTRACT_START
                            FROM HLDC_PO_CONTRACT_FSALE
                           WHERE CENTER_CODE = (SELECT A.CENTER_CODE FROM HLDC_PO_UPJANG_CENTER A, HLDC_ST_UPJANG B WHERE A.UPJANG = B.AP_UNITPRICE_UPJANG AND B.UPJANG = #UPJANG#)
                             AND UPJANG = (SELECT AP_UNITPRICE_UPJANG FROM HLDC_ST_UPJANG WHERE UPJANG = #UPJANG#)
                             AND ITEM_CODE > ' '
                             AND CONTRACT_START <= NVL('',TO_CHAR(SYSDATE,'YYYYMMDD'))
                           GROUP BY CENTER_CODE, UPJANG, ITEM_CODE) B
                    WHERE A.CENTER_CODE = B.CENTER_CODE
                      AND A.UPJANG = B.UPJANG
                      AND A.ITEM_CODE = B.ITEM_CODE
                      AND A.CONTRACT_START = B.CONTRACT_START
                      AND A.SALE_PRICE > 0
                      AND A.USE_YN = 'Y'
                      AND EXISTS (SELECT 1 FROM HLDC_PO_TREAT_UPJANG X WHERE X.ITEM_CODE = A.ITEM_CODE AND X.UPJANG = A.UPJANG)
                   -----------
                    UNION ALL
                   -----------
                       SELECT #UPJANG# AS UPJANG, NVL('',TO_CHAR(SYSDATE,'YYYYMMDD')) AS NEED_DATE
                            , A.ITEM_CODE, A.UNIT_PRICE, A.SALE_PRICE,0 CENTER_CODE,0 CUSTCD
                         FROM FMP_OTCUST_PRICE_AVA_V A
                            ,(SELECT UPJANG, ITEM_CODE, MAX(SDATE) AS SDATE
                                FROM FMP_OTCUST_PRICE_AVA_V
                               WHERE UPJANG = (SELECT OTCUST_PRICE_UPJANG FROM FMS_UPJANG WHERE UPJANG = #UPJANG#)
                                 AND SDATE <= NVL('',TO_CHAR(SYSDATE,'YYYYMMDD'))
                               GROUP BY UPJANG, ITEM_CODE) B
                        WHERE A.UPJANG = B.UPJANG
                          AND A.SDATE = B.SDATE
                          AND A.ITEM_CODE = B.ITEM_CODE
                          AND A.SALE_PRICE > 0
                          AND A.USE_YN = 'Y'
                      ) A
                 WHERE A.ITEM_CODE = B.ITEM_CODE
                   AND A.UPJANG = C.UPJANG(+)
                   AND A.NEED_DATE BETWEEN C.SDATE(+) AND C.EDATE(+)
                   AND A.ITEM_CODE BETWEEN C.ITEM_CODE(+) AND C.ITEM_CODE(+)||'9999'
                   AND C.USE_YN(+) = 'Y'
       ) B --단가
 WHERE A.ITEM_CODE = B.ITEM_CODE(+)
 ORDER BY  A.RECIPE_TYPE, A.CUISINE_TYPE, A.RECIPE_CD	]]></statement>
	<input default-name="ds_input">
	</input>
	<output default-name="ds_Detail">
	</output>
</query>
