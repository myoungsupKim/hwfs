<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="../../../default_typedef.xml"/>
  <Form id="MAK10150P" onkeydown="fn_form_OnKeyDown" onload="form_onload" titletext="차량운행일지입력" position="absolute 0 0 899 650" scrollbars="none">
    <Layouts>
      <Layout>
        <Static id="Static25" class="sta_WFDA_Labelbg" position="absolute 15 259 884 286"/>
        <Static id="Static24" class="sta_WFDA_Labelbg" position="absolute 15 204 884 231"/>
        <Static id="Static23" class="sta_WFDA_Labelbg" position="absolute 15 149 884 176"/>
        <Static id="Static22" class="sta_WFDA_Labelbg" position="absolute 15 123 884 150"/>
        <Static id="Static21" class="sta_WFDA_Labelbg" position="absolute 15 97 884 124"/>
        <Static id="Static17" class="sta_WFDA_Labelbg" position="absolute 15 71 884 98"/>
        <Static id="Static9" text="개인용도사용" position="absolute 320 97 408 124" class="sta_WFDA_Label01"/>
        <Static id="st_LOC_CD" text="지역Fr" userdata="strMAQueryLocal_LOC_CD" position="absolute 15 71 103 98" class="sta_WFDA_Label01"/>
        <Edit id="edt_LOC_CD" onkeydown="edt_JOB_CD_OnKeyDown" readonly="true" taborder="1" position="absolute 105 74 298 95" class="edt_WF_Essential"/>
        <Button id="edtBtn_LOC_CD" onclick="edtBtn_JOB_CD_OnClick" taborder="12" tabstop="false" position="absolute 297 74 318 95" class="btn_WF_popSearchEssential" text="" image=""/>
        <Static id="st_SUB_LOC_CD" text="지역To" userdata="strMAQueryLocal_LOC_CD" position="absolute 15 97 103 124" class="sta_WFDA_Label01"/>
        <Edit id="edt_SUB_LOC_CD" onkeydown="edt_JOB_CD_OnKeyDown" readonly="true" taborder="2" position="absolute 105 100 298 121" class="edt_WF_Essential"/>
        <Button id="edtBtn_SUB_LOC_CD" onclick="edtBtn_JOB_CD_OnClick" taborder="13" tabstop="false" position="absolute 297 100 318 121" class="btn_WF_popSearchEssential" text="" image=""/>
        <Static id="st_TOT_EXPENSE" text="합계" position="absolute 15 259 103 286" class="sta_WFDA_Label01"/>
        <Edit lengthunit="asciii" id="edt_COMPANION" imemode="native" maxlength="200" taborder="11" position="absolute 410 262 881 283"/>
        <Static id="st_FROM_KM" text="시작Km" position="absolute 320 71 408 98" class="sta_WFDA_Label01"/>
        <MaskEdit id="me_FROM_KM" mask="###,##0" taborder="5" position="absolute 410 74 580 95" class="msk_WF_Essential" style="font:Gulim,9,bold;"/>
        <Static id="Static6" text="km" position="absolute 583 74 601 95"/>
        <Button id="btn_close" onclick="Common_Btn_common_OnClick" taborder="15" text="닫기" position="absolute 779 10 824 35" class="btn_WF_CRUD" image=""/>
        <Button id="btn_help" taborder="16" text="도움말" position="absolute 826 10 884 35" class="btn_WF_CRUD" image=""/>
        <Static id="st_TO_KM" text="종료Km" position="absolute 603 71 699 98" class="sta_WFDA_Label01"/>
        <MaskEdit id="me_TO_KM" mask="###,##0" taborder="7" position="absolute 701 74 858 95" class="msk_WF_Essential" style="font:Gulim,9,bold;"/>
        <Static id="Static3" text="km" position="absolute 861 74 879 95"/>
        <Static id="st_DISTANCE" text="이동거리(Km)" position="absolute 603 97 699 124" class="sta_WFDA_Label01"/>
        <MaskEdit enable="false" id="me_DISTANCE" mask="###,##0" readonly="true" taborder="8" position="absolute 701 100 858 121" style="font:Gulim,9,bold;"/>
        <Static id="Static5" text="km" position="absolute 861 100 879 121"/>
        <Static id="Static14" text="※ 종료Km = 시작 + 개인용도 + 이동" position="absolute 602 157 847 172" class="sta_WF_DiscInfoN"/>
        <Static id="st_CAR_EXPENSE" text="차량운행비" position="absolute 15 204 103 231" class="sta_WFDA_Label01"/>
        <MaskEdit enable="false" id="me_CAR_EXPENSE" mask="###,##0" taborder="18" position="absolute 105 207 298 228" style=":disabled {font:Gulim,9,bold;}"/>
        <Static id="st_STD_AMT" text="※ 차량운행비 = 이동거리 x 230('08년 09월부터임, 기준금액은 월별로 변경될수 있습니다.)" position="absolute 15 184 679 199" class="sta_WF_DiscInfoN"/>
        <Static id="st_TOLL_EXPENSE" text="T/G" position="absolute 320 204 408 231" class="sta_WFDA_Label01"/>
        <MaskEdit id="me_TOLL_EXPENSE" mask="###,##0" taborder="9" position="absolute 410 207 580 228" style="font:Gulim,9,bold;"/>
        <Static id="Static7" text="원" position="absolute 301 207 318 228"/>
        <Static id="Static8" text="원" position="absolute 583 207 600 228"/>
        <Static id="st_GITA_EXPENSE" text="기타주차비" position="absolute 603 204 699 231" class="sta_WFDA_Label01"/>
        <MaskEdit id="me_GITA_EXPENSE" mask="###,##0" taborder="10" position="absolute 701 207 858 228" style="font:Gulim,9,bold;"/>
        <Static id="Static10" text="원" position="absolute 861 207 878 228"/>
        <Static id="Static11" text="※ 합계 = 차량운행비 + T/G + 주차비" position="absolute 15 239 407 254" class="sta_WF_DiscInfoN"/>
        <MaskEdit enable="false" id="me_TOT_EXPENSE" mask="###,##0" taborder="19" position="absolute 105 262 298 283" style=":disabled {font:Gulim,9,bold;}"/>
        <Static id="Static12" text="원" position="absolute 301 262 318 283"/>
        <Static id="st_COMPANION" text="동승자" position="absolute 320 259 408 286" class="sta_WFDA_Label01"/>
        <Static id="Static19" text="단위:원" position="absolute 635 46 676 66"/>
        <Button id="btn_DetailSave" onclick="btn_DetailSave_OnClick" taborder="20" position="absolute 967 22 985 42" class="btn_WF_GrdSave" image="" enable="false" visible="false"/>
        <Static id="st_CAR_NUMBERd" text="차종" position="absolute 15 123 103 150" class="sta_WFDA_Label01"/>
        <Static id="st_CAR_NUMBER" text="차량번호" position="absolute 15 149 103 176" class="sta_WFDA_Label01"/>
        <Edit lengthunit="asciii" id="edt_CAR_CLASS" imemode="native" maxlength="200" taborder="3" position="absolute 105 126 560 147" class="edt_WF_Essential" enable="false"/>
        <Edit lengthunit="asciii" id="edt_CAR_NUMBER" imemode="native" maxlength="200" taborder="4" position="absolute 105 152 580 173" class="edt_WF_Essential" enable="false"/>
        <Button id="btn_DetailDelete" onclick="btn_DetailDelete_OnClick" taborder="21" position="absolute 857 287 875 307" class="btn_WF_GrdMinus" image=""/>
        <Button id="edtBtn_CAR_CLASS" onclick="edtBtn_CAR_CLASS_OnClick" taborder="22" tabstop="false" position="absolute 559 126 580 147" class="btn_WF_popSearchEssential" text="" image=""/>
        <Grid autoenter="select" autofittype="col" binddataset="ds_DRIVING_MGMT" cellsizingtype="both" readonly="false" enable="true" cellsizebandtype="allband" id="grid_List" useinputpanel="false" autofitminwidth="100" onheadclick="grid_List_OnHeadClick" taborder="29" tabstop="true" usecontextmenu="true" useselcolor="true" visible="true" wheelscrollrow="1" position="absolute 15 309 884 635" selecttype="row">
          <Formats>
            <Format id="Default">
              <Columns>
                <Column size="27"/>
                <Column size="70"/>
                <Column size="70"/>
                <Column size="42"/>
                <Column size="54"/>
                <Column size="50"/>
                <Column size="50"/>
                <Column size="56"/>
                <Column size="56"/>
                <Column size="67"/>
                <Column size="34"/>
                <Column size="48"/>
                <Column size="60"/>
                <Column size="43"/>
                <Column size="48"/>
                <Column size="51"/>
              </Columns>
              <Rows>
                <Row size="22" band="head"/>
                <Row size="22" band="head"/>
                <Row size="40"/>
              </Rows>
              <Band id="head">
                <Cell rowspan="2" displaytype="text"/>
                <Cell col="1" colspan="2" displaytype="text" text="소재지"/>
                <Cell col="3" rowspan="2" displaytype="text" text="차종"/>
                <Cell col="4" rowspan="2" displaytype="text" text="차량번호"/>
                <Cell col="5" rowspan="2" displaytype="text" text="시작Km"/>
                <Cell col="6" rowspan="2" displaytype="text" text="종료Km"/>
                <Cell col="7" rowspan="2">
                  <Cell displaytype="text" text="개인사용"/>
                  <Cell row="1" text="Km"/>
                </Cell>
                <Cell col="8" rowspan="2">
                  <Cell displaytype="text" text="이동거리"/>
                  <Cell row="1" text="Km"/>
                </Cell>
                <Cell col="9" rowspan="2" displaytype="text" text="차량운행비"/>
                <Cell col="10" rowspan="2" displaytype="text" text="T/G"/>
                <Cell col="11" rowspan="2" displaytype="text" text="기타"/>
                <Cell col="12" rowspan="2" displaytype="text" text="합계"/>
                <Cell col="13" rowspan="2" displaytype="text" text="동승자"/>
                <Cell col="14" rowspan="2">
                  <Cell displaytype="text" text="전표"/>
                  <Cell row="1" text="I/F"/>
                </Cell>
                <Cell col="15" rowspan="2">
                  <Cell displaytype="text" text="전표"/>
                  <Cell row="1" text="상태"/>
                </Cell>
                <Cell row="1" col="1" displaytype="text" text="지역Fr"/>
                <Cell row="1" col="2" displaytype="text" text="지역To"/>
              </Band>
              <Band id="body">
                <Cell displaytype="text" style="align:center;" expr="expr:currow+1"/>
                <Cell col="1" style="align:left;" text="bind:LOC_CDNM"/>
                <Cell col="2" style="align:left;" text="bind:SUB_LOC_CDNM"/>
                <Cell col="3" style="align:left;" text="bind:CAR_CLASS"/>
                <Cell col="4" style="align:left;" text="bind:CAR_NUMBER"/>
                <Cell col="5" displaytype="number" style="align:right;" text="bind:FROM_KM"/>
                <Cell col="6" displaytype="number" style="align:right;" text="bind:TO_KM"/>
                <Cell col="7" displaytype="number" style="align:right;" text="bind:INUSE_KM"/>
                <Cell col="8" displaytype="number" style="align:right;" text="bind:DISTANCE"/>
                <Cell col="9" displaytype="number" style="align:right;" text="bind:CAR_EXPENSE"/>
                <Cell col="10" displaytype="number" style="align:right;" text="bind:TOLL_EXPENSE"/>
                <Cell col="11" displaytype="number" style="align:right;" text="bind:GITA_EXPENSE"/>
                <Cell col="12" displaytype="number" style="align:right;" text="bind:TOT_EXPENSE"/>
                <Cell col="13" style="align:left;" text="bind:COMPANION"/>
                <Cell col="14" text="bind:PISTAT"/>
                <Cell col="15" text="bind:PROC_YN"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Static id="Static1" text="※방문일지에서 작성하지 않은 방문지에대해서는 여비교통비 신청 불가합니다." visible="false" position="absolute 10 813 644 904"/>
        <Button id="btn_DetailAdd" onclick="btn_DetailAdd_OnClick" taborder="30" position="absolute 837 287 855 307" class="btn_WF_GrdPlus" image=""/>
        <Static id="Static4" text="※ 시작Km = 담당자별 최종종료" position="absolute 602 131 847 146" class="sta_WF_DiscInfoN"/>
        <MaskEdit id="me_INUSE_KM" mask="###,##0" taborder="6" position="absolute 410 100 580 121" class="msk_WF_Essential" style="font:Gulim,9,bold;"/>
        <Static id="Static13" text="km" position="absolute 583 100 601 121"/>
        <Static id="Static15" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 15 0 891 10"/>
        <Static id="Static88" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 884 0 899 645"/>
        <Static id="Static03" text="h15" class="Guide01_AreaRed" visible="false" position="absolute 15 635 891 650"/>
        <Static id="Static01" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 0 0 15 376"/>
        <Static id="Static02" text="h06" class="Guide01_AreaRed" visible="false" position="absolute 15 10 215 16"/>
        <Static id="sta_title" text="차량운행일지입력" class="sta_WF_Title" position="absolute 15 16 215 40"/>
        <Static id="Static05" text="아이콘기준 h08" class="Guide01_AreaRed" visible="false" position="absolute 15 32 215 40"/>
        <Static id="Static16" text="h13" class="Guide01_AreaRed" visible="false" position="absolute 15 40 505 53"/>
        <Static id="Static18" text="상세입력" class="sta_WF_Title01" position="absolute 15 53 457 71" anchor="left top"/>
        <Static id="Static20" text="글자기준간격 h05" class="Guide01_AreaRed" visible="false" position="absolute 15 66 889 71" anchor="left top"/>
        <Button id="btn_close00" taborder="31" text="저장" onclick="btn_DetailSave_OnClick" class="btn_WF_CRUD" position="absolute 731 10 776 35"/>
        <MaskEdit id="me_BEFTO_KM" taborder="32" mask="###,##0" class="msk_WF_Essential" position="absolute 650 180 727 201" style="font:Gulim,9,bold;" visible="false"/>
        <MaskEdit id="me_AFTFROM_KM" taborder="33" mask="###,##0" class="msk_WF_Essential" position="absolute 800 180 879 201" style="font:Gulim,9,bold;" visible="false"/>
        <Static id="st_TO_KM00" text="이전종료" class="sta_WFDA_Label01" position="absolute 582 176 649 204" visible="false"/>
        <Static id="st_TO_KM01" text="이후시작" class="sta_WFDA_Label01" position="absolute 733 176 800 204" visible="false"/>
        <Button id="btn_select" taborder="34" text="조회" class="btn_WF_CRUD" position="absolute 682 10 727 35" onclick="btn_select_onclick"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_cond"/>
      <Dataset id="ds_DRIVING_MGMT" onrowposchanged="ds_DRIVING_MGMT_OnRowPosChanged">
        <ColumnInfo>
          <Column id="DRIVING_ID" size="256" type="BIGDECIMAL"/>
          <Column id="CAR_CLASS" size="256" type="STRING"/>
          <Column id="CAR_NUMBER" size="256" type="STRING"/>
          <Column id="LOC_CD" size="256" type="STRING"/>
          <Column id="LOC_CDNM" size="256" type="STRING"/>
          <Column id="SUB_LOC_CD" size="256" type="STRING"/>
          <Column id="SUB_LOC_CDNM" size="256" type="STRING"/>
          <Column id="FROM_KM" size="256" type="BIGDECIMAL"/>
          <Column id="TO_KM" size="256" type="BIGDECIMAL"/>
          <Column id="DISTANCE" size="256" type="BIGDECIMAL"/>
          <Column id="CAR_EXPENSE" size="256" type="BIGDECIMAL"/>
          <Column id="TOLL_EXPENSE" size="256" type="BIGDECIMAL"/>
          <Column id="GITA_EXPENSE" size="256" type="BIGDECIMAL"/>
          <Column id="COMPANION" size="256" type="STRING"/>
          <Column id="GUBUN" size="256" type="STRING"/>
          <Column id="VISIT_ID" size="256" type="BIGDECIMAL"/>
          <Column id="TOT_EXPENSE" size="256" type="BIGDECIMAL"/>
          <Column id="INUSE_KM" size="256" type="BIGDECIMAL"/>
          <Column id="BEFTO_KM" type="BIGDECIMAL" size="256"/>
          <Column id="AFTFROM_KM" type="BIGDECIMAL" size="256"/>
          <Column id="PISTAT" type="STRING" size="256"/>
          <Column id="PROC_YN" type="STRING" size="256"/>
          <Column id="O_RTN" type="STRING" size="256"/>
          <Column id="O_RTNMSG" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_DRIVING_MGMT_Input" cancolumnchange="ds_DRIVING_MGMT_Input_CanColumnChange" oncolumnchanged="ds_DRIVING_MGMT_Input_OnColumnChanged">
        <ColumnInfo>
          <Column id="DRIVING_ID" size="256" type="BIGDECIMAL"/>
          <Column id="CAR_CLASS" size="256" type="STRING"/>
          <Column id="CAR_NUMBER" size="256" type="STRING"/>
          <Column id="LOC_CD" size="256" type="STRING"/>
          <Column id="LOC_CDNM" size="256" type="STRING"/>
          <Column id="SUB_LOC_CD" size="256" type="STRING"/>
          <Column id="SUB_LOC_CDNM" size="256" type="STRING"/>
          <Column id="FROM_KM" size="256" type="BIGDECIMAL"/>
          <Column id="TO_KM" size="256" type="BIGDECIMAL"/>
          <Column id="DISTANCE" size="256" type="BIGDECIMAL"/>
          <Column id="CAR_EXPENSE" size="256" type="BIGDECIMAL"/>
          <Column id="TOLL_EXPENSE" size="256" type="BIGDECIMAL"/>
          <Column id="GITA_EXPENSE" size="256" type="BIGDECIMAL"/>
          <Column id="COMPANION" size="256" type="STRING"/>
          <Column id="GUBUN" size="256" type="STRING"/>
          <Column id="VISIT_ID" size="256" type="BIGDECIMAL"/>
          <Column id="TOT_EXPENSE" size="256" type="BIGDECIMAL"/>
          <Column id="INUSE_KM" size="256" type="BIGDECIMAL"/>
          <Column id="BEFTO_KM" type="BIGDECIMAL" size="256"/>
          <Column id="AFTFROM_KM" type="BIGDECIMAL" size="256"/>
          <Column id="PISTAT" type="STRING" size="256"/>
          <Column id="PROC_YN" type="STRING" size="256"/>
          <Column id="O_RTN" type="STRING" size="256"/>
          <Column id="O_RTNMSG" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_toKm">
        <ColumnInfo>
          <Column id="TO_KM" type="INT" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_fromKm">
        <ColumnInfo>
          <Column id="FROM_KM" type="INT" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_return">
        <ColumnInfo>
          <Column id="O_RTN" size="256" type="STRING"/>
          <Column id="O_RTNMSG" size="256" type="STRING"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="O_RTN"/>
            <Col id="O_RTNMSG"/>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="edt_LOC_CD_value" compid="edt_LOC_CD" propid="value" datasetid="ds_DRIVING_MGMT_Input" columnid="LOC_CDNM"/>
      <BindItem id="edt_SUB_LOC_CD_value" compid="edt_SUB_LOC_CD" propid="value" datasetid="ds_DRIVING_MGMT_Input" columnid="SUB_LOC_CDNM"/>
      <BindItem id="edt_COMPANION_value" compid="edt_COMPANION" propid="value" datasetid="ds_DRIVING_MGMT_Input" columnid="COMPANION"/>
      <BindItem id="me_FROM_KM_value" compid="me_FROM_KM" propid="value" datasetid="ds_DRIVING_MGMT_Input" columnid="FROM_KM"/>
      <BindItem id="me_TO_KM_value" compid="me_TO_KM" propid="value" datasetid="ds_DRIVING_MGMT_Input" columnid="TO_KM"/>
      <BindItem id="me_DISTANCE_value" compid="me_DISTANCE" propid="value" datasetid="ds_DRIVING_MGMT_Input" columnid="DISTANCE"/>
      <BindItem id="me_CAR_EXPENSE_value" compid="me_CAR_EXPENSE" propid="value" datasetid="ds_DRIVING_MGMT_Input" columnid="CAR_EXPENSE"/>
      <BindItem id="me_TOLL_EXPENSE_value" compid="me_TOLL_EXPENSE" propid="value" datasetid="ds_DRIVING_MGMT_Input" columnid="TOLL_EXPENSE"/>
      <BindItem id="me_GITA_EXPENSE_value" compid="me_GITA_EXPENSE" propid="value" datasetid="ds_DRIVING_MGMT_Input" columnid="GITA_EXPENSE"/>
      <BindItem id="me_TOT_EXPENSE_value" compid="me_TOT_EXPENSE" propid="value" datasetid="ds_DRIVING_MGMT_Input" columnid="TOT_EXPENSE"/>
      <BindItem id="edt_CAR_CLASS_value" compid="edt_CAR_CLASS" propid="value" datasetid="ds_DRIVING_MGMT_Input" columnid="CAR_CLASS"/>
      <BindItem id="edt_CAR_NUMBER_value" compid="edt_CAR_NUMBER" propid="value" datasetid="ds_DRIVING_MGMT_Input" columnid="CAR_NUMBER"/>
      <BindItem id="me_INUSE_KM_value" compid="me_INUSE_KM" propid="value" datasetid="ds_DRIVING_MGMT_Input" columnid="INUSE_KM"/>
      <BindItem id="me_BEFTO_KM_value" compid="me_BEFTO_KM" propid="value" datasetid="ds_DRIVING_MGMT_Input" columnid="BEFTO_KM"/>
      <BindItem id="me_AFTFROM_KM_value" compid="me_AFTFROM_KM" propid="value" datasetid="ds_DRIVING_MGMT_Input" columnid="AFTFROM_KM"/>
    </Bind>
    <Script type="xscript4.0"><![CDATA[include "U_lib::lib_conversionCom.xjs";
/*
 ******************************************************************************************
 * 시스템구분   : FS시스템/시스템공통/템플릿 1
 * 프로그램명   : Sam_Form_Basic1.XML
 * 기      능   : 표준 UI Form
 * 작  성  자   : 구종화
 * 작성  일자   : 2007-11-16
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 *            :   황승한 2009-09-23 CSR#(30916) 요청자:이혜은(FS기획팀)
 *                시작KM 기존에 해당사번의 최종KM를 자동으로 세팅하던기능 사용중지요청 처리
 ******************************************************************************************
 */
//=========================================================================================
// [ PART 1 ]
// Form에서 Include 할 내용을 정의
//
//=========================================================================================
//@@컨버터에서 주석처리 #include "lib::sc_comon.js"
//@@컨버터에서 주석처리 #include "lib::sc_sql_common.js"
//@@컨버터에서 주석처리 #include "lib::tit_comm_0001.js"
//@@컨버터에서 주석처리 #include "lib::ma_common.js"


//=========================================================================================
// [ PART 2 ]
// Form에서 사용될 전역변수를 선언
//
//=========================================================================================
var f_Saved_ID,
	f_AfterCallServerCheck;
	
var f_NewDataCheck,
//    str_ParamIDText1,
//    str_ParamIDText2,
    f_STD_AMT,
    f_STD_DATEFR,
    f_STD_DATETO;			

//지역코드1########################################################################
var strMAQueryLocal_LOC_CD              = "SELECT CODE, (SELECT CODE_NAME FROM SCC_COMMON_CODE  WHERE (GROUP_CODE ='MA0040') AND (CODE = V.SET1))||' '||CODE_NAME CODE_NAME  FROM SCC_COMMON_CODE V  WHERE (GROUP_CODE ='MA0041') ";
var strMAQueryLocal_LOC_CDKeyField      = "CODE";
var strMAQueryLocal_LOC_CDValueField    = "(SELECT CODE_NAME FROM SCC_COMMON_CODE  WHERE (GROUP_CODE ='MA0040') AND (CODE = V.SET1))||' '||CODE_NAME";
var strMAQueryLocal_LOC_CDKeyFieldNM    = "지역코드";
var strMAQueryLocal_LOC_CDValueFieldNM  = "지역코드명"; 
var strMAQueryLocal_LOC_CDCaption       = "지역코드조회";
var strMAQueryLocal_LOC_CDAllField      = "CODE;CODE_NAME";
//지역코드1########################################################################


//차량코드########################################################################
var strMAQueryLocal_CAR_CLASS              = "SELECT DISTINCT CAR_CLASS, CAR_NUMBER  FROM MAK_DRIVING_MGMT V,  MAK_VISIT_MGMT_TOT_V A WHERE (V.GUBUN    = A.GUBUN) AND   (V.VISIT_ID = A.VISIT_ID) ";
var strMAQueryLocal_CAR_CLASSKeyField      = "CAR_CLASS";
var strMAQueryLocal_CAR_CLASSValueField    = "CAR_NUMBER";
var strMAQueryLocal_CAR_CLASSKeyFieldNM    = "차종";
var strMAQueryLocal_CAR_CLASSValueFieldNM  = "차량번호"; 
var strMAQueryLocal_CAR_CLASSCaption       = "차량번호조회";
var strMAQueryLocal_CAR_CLASSAllField      = "CAR_CLASS;CAR_NUMBER";
//차량코드########################################################################


//=========================================================================================
// [ PART 3 ]
// Form Loading 시 작업 정의
//
//=========================================================================================
function form_onload(obj:Form, e:LoadEventInfo)
{
	gfn_formOnLoad(obj, false);

    var F_ArrCol          = new Array(-1);
    var F_ArrColType      = new Array(-1);
    
	//init_btn_setup();	// Button 초기화
	fsp_init(this);


	/*
	#############################################################################################################
	공통코드 SETTING
	#############################################################################################################
	*/	
   
    //기준금액가져오기#######################################
	f_STD_AMT = 0;
	
	fsp_clear(this);
	
	fsp_addSearch(this, "ma/mak:MAK10150P_S003");	
	
	ds_cond.clear();
	
	ds_cond.addColumn("GUBUN","STRING",256);
	ds_cond.addColumn("VISIT_ID","INT",256);
	
	ds_cond.addRow();
	
	ds_cond.setColumn(ds_cond.rowposition, "GUBUN",                 str_ParamIDText1);
	ds_cond.setColumn(ds_cond.rowposition, "VISIT_ID",              str_ParamIDText2);
		
	
	http.Sync = true;
	fsp_callService(this, "", "", "ds_cond=ds_cond","ds_cond=ds_list","","");
	http.Sync = false;	
	
	f_STD_AMT    = ds_cond.getColumn(0, "STD_AMT");
	f_STD_DATEFR = ds_cond.getColumn(0, "DATEFR");
	f_STD_DATETO = ds_cond.getColumn(0, "DATETO");

	trace(gfn_transNullToEmpty(f_STD_AMT));
		
	if(gfn_transNullToEmpty(f_STD_AMT) == "")
	{
		alert("자차지원금이 등록되지 않아 차량운행일지 입력이 불가능합니다. 전산담당자에게 문의하세요.");
		this.close();
	}
	
	st_STD_AMT.text = "※차량운행비 = 이동거리 x " + f_STD_AMT + "(" + f_STD_DATEFR + "~" + f_STD_DATETO + " 기준금액은 월별로 변경될수 있습니다.)";
	//기준금액가져오기#######################################
	   
	
	//차량운영일지###########################################
	fsp_clear(this);
	
	fsp_addSearch(this, "ma/mak:MAK10150P_S001");	
	
	ds_cond.clear();
	
	ds_cond.addColumn("GUBUN","STRING",256);
	ds_cond.addColumn("VISIT_ID","INT",256);
	
	ds_cond.addRow();
	
	ds_cond.setColumn(ds_cond.rowposition, "GUBUN",                 str_ParamIDText1);
	ds_cond.setColumn(ds_cond.rowposition, "VISIT_ID",              str_ParamIDText2);
	
	ds_DRIVING_MGMT.clearData();
	
	
	
	http.Sync = true;
	fsp_callService(this, "", "", "ds_cond=ds_cond","ds_DRIVING_MGMT=ds_DRIVING_MGMT","","");
	http.Sync = false;	
	//차량운영일지###########################################
    
	if (ds_DRIVING_MGMT.rowcount == 0){
		
		ds_DRIVING_MGMT_Input.addRow();
		
		//동일마케터의 최근 TO KM 데이터가 존재할경우 Default Setting#########################
		fn_GetBeforeMaxTO_KMInfo(ds_cond, str_ParamIDText1, str_ParamIDText2);	
		fn_GetBeforeMaxCar_Info(ds_cond, str_ParamIDText1, str_ParamIDText2);	
		//동일마케터의 최근 TO KM 데이터가 존재할경우 Default Setting#########################
    }
    
	//fn_ds_DRIVING_MGMT_Input_summary();

	
	
        
    edt_LOC_CD.setFocus();
	/*
	#############################################################################################################
	공통코드 SETTING
	#############################################################################################################
	*/
}





//=========================================================================================
// [ PART 4 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,도움말,form닫기)
//
//=========================================================================================
function fn_search()
{

}

function fn_delete()
{
    if (!before_DeleteCheck("Master") ){

		return;
    }
}


function fn_save()
{


}


function fn_print()
{
}
function fn_Close()
{
	this.close();
}
function fn_help()
{
}

//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
//
//=========================================================================================

function fn_SearchDetail()
{

	
}

function before_SelectCheck()
{
    /*
	if (length(edt_MGMT_SABUNQuery.UserData) == 0)
	{
	
		alert("담당마케터를 지정하여 주십시요.");
		edt_MGMT_SABUNQuery.SetFocus();
		return False;
	}
	*/

		
	return true;
}


/*
 ******************************************************************************************
 * 함  수  명   : Common_Btn_common_OnClick
 * 입      력   : obj  = Form Component
 * 반      환   : 없음
 * 기      능   : 
 * 작  성  자   : 구종화
 * 작성  일자   : 2007-11-16
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */

//=========================================================================================
// [ PART 6 ]
// component Event 정의 ( User Define function )
// --> component Event의 기요,기능,동작 등 상세내용은 MiPlatform 메뉴얼을 참조하시기 바랍니다.
//=========================================================================================

function Common_Btn_common_OnClick(obj:Button, e:ClickEventInfo)
{

	switch(obj.name)
	{
		case "btn_search":
		    //alert("d");
			fn_search();
			break;
		case "btn_ins":
			fn_insert();
			break;
		case "btn_del":
			fn_delete();
			break;
		case "btn_save":
			fn_save();
			break;
		case "btn_Print":
			//fn_Print();
			break;
		case "btn_close":
			fn_Close();
			break;
		case "btn_Help":
			//fn_Help();
			break;
		default:
			break;
	}

}


function WorkForm_OnKeyDown(obj,objSenderObj,nChar,bShift,bControl,bAlt,nLLParam,nHLParam)
{
	
	gfn_formKeyDown(obj, e); //(obj,objSenderObj,nChar,bShift,bControl,bAlt,nLLParam,nHLParam);
}







function fn_DataSetAllClear()
{

	ds_DRIVING_MGMT_Input.clearData();	

}	




//각 구분별 대체마감체크############################################################
function fn_GetALT_CLOSE(objOutDs, real_MST_ID)
{
    /*
    //대체마감체크#####################################################################
    var str_CloseErr = "";
    
    objOutDs.Clear();
    objOutDs.AddColumn("TEAM_MST_CONGUBN","STRING",256);	       
    objOutDs.AddColumn("HEAD_MST_CONGUBN","STRING",256);	       
    objOutDs.AddColumn("GA_CONGUBN","STRING",256);	      
 
    
	// action 정보 초기화 
    tit_clearActionInfo(this);  
	
    // 서버에서 조회할 정보 추가 
	tit_addSearchActionInfo(this, "ma/maa:MAA10010E_S004");
	
	f_AfterCallServerCheck = True;
	
	// 서버 호출 
	http.Sync = True;
	tit_callService(this, "", "", "", objOutDs.id + "=ds_list","MST_ID=" + real_MST_ID
	                                                           ,"fn_AfterCallServiceCheck()");	
	http.Sync = False;
	
    if (!f_AfterCallServerCheck) return False;

	if (objOutDs.GetColumn(objOutDs.row, "TEAM_MST_CONGUBN") == "Y")   str_CloseErr = "해당신청자료는 팀장승인 되었습니다.\n수정/삭제할 수 없습니다.";

	if (objOutDs.GetColumn(objOutDs.row, "HEAD_MST_CONGUBN") == "Y") str_CloseErr = "해당신청자료는 부장승인 되었습니다.\n수정/삭제할 수 없습니다.";				

	if (objOutDs.GetColumn(objOutDs.row, "GA_CONGUBN") == "Y")   str_CloseErr = "해당신청자료에 회계승인 되었습니다.\n수정/삭제할 수 없습니다.";			    
	
	if (length(str_CloseErr ) != 0){
	
		g_Message("EE", str_CloseErr + "\n" +
						"확인하여 주십시요.");			 
		return false;        
	}
    */
	return true;
	//대체마감체크#####################################################################
 
}			 
//각 구분별 대체마감체크############################################################
			 

function edtBtn_JOB_CD_OnClick(obj:Button, e:ClickEventInfo)
{   

    /*
    if (
        (NumFormat(ds_DRIVING_MGMT_Input.GetColumn(ds_DRIVING_MGMT_Input.row, "UPJANG")) == "0") 
       )     
    return;
    */
    
    var str_Where = "";

        
	fn_edtBtn_OnClick(obj, str_Where);

    if (gfn_length(eval("edt_" + gfn_subStr(obj.name, 7)).userdata)!= 0)
	ds_DRIVING_MGMT_Input.setColumn(ds_DRIVING_MGMT_Input.rowposition, gfn_subStr(obj.name, 7), eval("edt_" + gfn_subStr(obj.name, 7)).userdata);
	
					
}


function edt_JOB_CD_OnKeyDown(obj:Edit, e:KeyEventInfo)
{
	fn_edt_OnKeyDown(obj,e.keycode);	
	
	if (e.keycode == 46){
	
		ds_DRIVING_MGMT_Input.setColumn(ds_DRIVING_MGMT_Input.rowposition, gfn_subStr(obj.name, 4), "");			
			

	}
}




function edt_LOC_CDQuery_OnKeyDown(obj,nChar,bShift,bCtrl, bAlt,LLParam,HLParam)
{
	fn_edt_OnKeyDown(obj,nChar);	
	
	if (nChar == 46)
	ds_listInput.setColumn(ds_listInput.rowposition, gfn_subStr(obj.name, 4), "");		
}

function edtBtn_LOC_CDQuery_OnClick(obj)
{   
    var str_Where;
    
    if (obj.name == "edtBtn_MGMT_DEPT_IDQuery") str_Where = " AND (V.DEPT_ID IN (SELECT CODE FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'MA1002' AND SET1 = 'FICS')) ";

    if (obj.name == "edtBtn_MGMT_SABUNQuery") str_Where += "  AND (V.DEPT_ID IN (SELECT CODE FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'MA1002' AND SET1 = 'FICS')) ";   
            
	fn_edtBtn_OnClick(obj, str_Where);		
		    		
    if (gfn_length(eval("edt_" + gfn_subStr(obj.name, 7)).userdata)!= 0)
	ds_listInput.setColumn(ds_listInput.rowposition, gfn_subStr(obj.name, 7), eval("edt_" + gfn_subStr(obj.name, 7)).userdata);		    		
}



function btn_DetailSave_OnClick(obj:Button, e:ClickEventInfo)
{

    if (!before_SaveCheck("Master") ){

		return false;
    }	
        
}


function before_SaveCheck(str_Gubun)
{

	if(gfn_dsIsUpdated(ds_DRIVING_MGMT_Input)==false)
	{
		g_Message("EE", "변경된 데이터가 없습니다.");
		return;
	}

	var kmCal = 0;
	
	if (ds_DRIVING_MGMT_Input.rowcount == 0)
	{

		return false;
	}
	//trace(ds_DRIVING_MGMT_Input.getRowType(ds_DRIVING_MGMT_Input.rowposition));
	//if(ds_DRIVING_MGMT_Input.getRowType(ds_DRIVING_MGMT_Input.rowposition) == 4){
	//	gfn_alert("데이터 수정은 불가합니다.\n\n데이터 삭제후 다시 입력해주세요.");
	//	return false;
	//}else if(ds_DRIVING_MGMT_Input.getRowType(ds_DRIVING_MGMT_Input.rowposition) == 1){
	//	return false;
	//}
	
	if (str_Gubun == "Master"){

		if (gfn_length(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "LOC_CD"))== 0)
		{
		
			g_Message("EE", "지역Fr을 지정하여 주십시요.");
			edt_LOC_CD.setFocus();
			return false;
		}

		if (gfn_length(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "SUB_LOC_CD"))== 0)
		{
		
			g_Message("EE", "지역To를 지정하여 주십시요.");
			edt_SUB_LOC_CD.setFocus();
			return false;
		}		
		
		if (toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "FROM_KM")) < 0)
		{
		
			g_Message("EE", "시작Km를 확인하여 주십시요.");		
			me_FROM_KM.setFocus();
			return false;
		}
			
		if (toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "INUSE_KM")) < 0)
		{
		
			g_Message("EE", "개인용도사용을 확인하여 주십시요.");		
			me_INUSE_KM.setFocus();
			return false;
		}
						
	    
		if (toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "DISTANCE")) <= 0)
		{
		
			g_Message("EE", "이동거리를 확인하여 주십시요.");
			//me_DISTANCE.SetFocus();
			return false;
		}
		
		if (toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "TO_KM")) <= 0)
		{
		
			g_Message("EE", "종료Km를 확인하여 주십시요.");
			me_TO_KM.setFocus();
			return false;
		}
		
		if (toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "BEFTO_KM")) > 0)
		{
			kmCal = toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "BEFTO_KM")) - 
			        toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "FROM_KM")) ;
			if ( kmCal > 0 )
			{
				if (!g_Confirm("01", "거리입력 시 오류가 발생하였습니다. 수정 바랍니다\n\n(이전일자 종료Km보다 입력한 시작Km가 적음)\n\n진행하시겠습니까?"))
				{
					me_FROM_KM.setFocus();
					return false;
				}	
			}
		}
		
		if (toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "AFTFROM_KM")) > 0)
		{
			kmCal = toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "TO_KM")) - 
			        toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "AFTFROM_KM")) ;
			if ( kmCal > 0 )
			{
				if (!g_Confirm("01", "거리입력 시 오류가 발생하였습니다. 수정 바랍니다\n\n(이후일자 시작Km보다 입력한 종료Km가 많음)\n\n진행하시겠습니까?"))
				{
					me_TO_KM.setFocus();
					return false;
				}			 
			}
		}
		
		if (numFormat(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "TOT_EXPENSE"))== "0")
		{
		
			g_Message("EE", "합계금액이 존재하지 않습니다.");
			return false;
		}	
		
		
			
		if (gfn_length(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "CAR_CLASS"))== 0)
		{
		
			g_Message("EE", "차종을 지정 혹은 입력하여 주십시요.");
			edt_CAR_CLASS.setFocus();
			return false;
		}	
				
		if (gfn_length(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "CAR_NUMBER"))== 0)
		{
		
			g_Message("EE", "차량번호를 지정 혹은 입력하여 주십시요.");
			edt_CAR_NUMBER.setFocus();
			return false;
		}							
						
		// 차량운영일지 저장전 TO KM MAX값 체크
		fsp_clear(this);
		
		fsp_addSingle(this, "ma/mak:MAK10150P_S006");
		
		ds_cond.clear();
		
		ds_cond.addColumn("CAR_CLASS", "STRING", 256);
		ds_cond.addColumn("CAR_NUMBER", "STRING", 256);
		
		ds_cond.addRow();
		
		ds_cond.setColumn(0, "CAR_CLASS", edt_CAR_CLASS.value);
		ds_cond.setColumn(0, "CAR_NUMBER", edt_CAR_NUMBER.value);
		
		http.Sync = true;
		fsp_callService(this, "", "", "ds_cond=ds_cond:A", "ds_toKm=ds_toKm",  "", "fn_beforeSave()");		
		http.Sync = false;

	}	
				    
	return true;
}

function fn_beforeSave(){

	if (numFormat(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "VISIT_ID"))!= "0")
	    //수정
		{
			fsp_clear(this);
			//fsp_addSingle(this, "ma/mak:MAK10150P_D001");
			fsp_addSingle(this, "ma/mak:MAK10150P_U001");
		//신규
		}else{
			if(ds_toKm.getColumn(0, "TO_KM") >= me_TO_KM.value){
				gfn_alert("현재 차량의 이전 종료Km는 "+gfn_numFormat(ds_toKm.getColumn(0, "TO_KM"),3)+"Km 입니다.\n\n다시 입력해 주세요.");
				return false;
			}else{
				fsp_clear(this);
				if (ds_DRIVING_MGMT_Input.rowcount > 0)
				{	
					ds_DRIVING_MGMT_Input.setColumn(ds_DRIVING_MGMT_Input.rowposition, "GUBUN",    str_ParamIDText1);
					ds_DRIVING_MGMT_Input.setColumn(ds_DRIVING_MGMT_Input.rowposition, "VISIT_ID", str_ParamIDText2);
					fsp_addSingle(this, "ma/mak:MAK10150P_I001");	
				}
			}
		}

		http.Sync = true;
		fsp_callService(this, "", "", "ds_cond=ds_DRIVING_MGMT_Input:A", "ds_return=ds_return",  "", "fn_AfterSaveSearch()");		
		http.Sync = false;
		//차량운영일지###########################################	
}
 
function fn_AfterSaveSearch(errCode, errMsg)
{
	if (errCode != 0){
		
		g_Message("EE");		
		return;
	}

	if ((ds_return.getColumn(0,"O_RTN")) == 'TRUE'){	
		g_Message("02");
		}
	else{
		g_Message("EE",ds_return.getColumn(0,"O_RTNMSG"));
		return;
	}

	fn_Refresh();
	
	//DB Procedure 호출 처리로 변경
	//fn_IfDel();
	//fn_IfSave();
}

function fn_IfDel()
{
	// action 정보 초기화
	fsp_clear(this);	

	fsp_addSingle(this, "ma/mak:MAK10150P_D002");			         
	//차량운영일지###########################################
		   
	http.Sync = true;
	fsp_callService(this, "", "", "ds_cond=ds_DRIVING_MGMT_Input:A",  "", "", "");		
	http.Sync = false;	
}

function fn_IfSave()
{
	// action 정보 초기화
	fsp_clear(this);	

	fsp_addSingle(this, "ma/mak:MAK10150P_I002");			         
	//차량운영일지###########################################
		   
	http.Sync = true;
	fsp_callService(this, "", "", "ds_cond=ds_DRIVING_MGMT_Input:A",  "", "", "");		
	http.Sync = false;	
}


//삭제처리###########################################################################
function before_DeleteCheck(str_GUBUN)
{

	if ( 
		(ds_DRIVING_MGMT_Input.rowcount == 0) ||
		(numFormat(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "VISIT_ID"))== "0") ||
		(!g_Confirm("01", "차량운행일지를 삭제하시겠습니까?")) //차량운영일지 Confirm
	   )
	{

		return false;
	}
	
	//각 구분별 대체 마감체크##############################
    if (!fn_GetALT_CLOSE(ds_cond, ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "VISIT_ID"))) return false;	
	//각 구분별 대체 마감체크##############################	        
					
				       		
	
	// action 정보 초기화
	fsp_clear(this);	

    //삭제
	fsp_addSingle(this, "ma/mak:MAK10150P_D001");			         
	//차량운영일지###########################################
		   
	http.Sync = true;
	fsp_callService(this, "", "", "ds_cond=ds_DRIVING_MGMT_Input:A",  "ds_return=ds_return", "", "fn_AfterDeleteSearch()");		
	http.Sync = false;		
	
	return true;
}

function fn_AfterDeleteSearch(errCode, errMsg)
{
	if (errCode != 0){

		g_Message("EE");
		return;
	}

	if ((ds_return.getColumn(0,"O_RTN")) == 'TRUE'){	
		g_Message("01");
		}
	else{
		g_Message("EE",ds_return.getColumn(0,"O_RTNMSG"));
		return;
	}

    fn_Refresh();    
    
	//DB Procedure 호출 처리로 변경
	//fn_IfDel();
}

function btn_DetailDelete_OnClick(obj:Button, e:ClickEventInfo)
{
    if (!before_DeleteCheck("Master") ){

		return;
    }
}

function edtBtn_CAR_CLASS_OnClick(obj:Button, e:ClickEventInfo)
{
	/*fn_sql_common_setup(strMAQueryLocal_CAR_CLASS,
						strMAQueryLocal_CAR_CLASSKeyField,
						strMAQueryLocal_CAR_CLASSValueField,
						strMAQueryLocal_CAR_CLASSKeyFieldNM,
						strMAQueryLocal_CAR_CLASSValueFieldNM,
						"",
						"",
						" AND (A.MGMT_SABUN = '" + this.opener.ds_listInput.getColumn(this.opener.ds_listInput.rowposition, "MGMT_SABUN") + "')",
						strMAQueryLocal_CAR_CLASSCaption,
						"CAR_CLASS;CAR_NUMBER");	
	
	if (gds_sql_common.getColumn(0, "ret_code") != ""){
	
		edt_CAR_CLASS.value     = gds_sql_common.getColumn(0, "ret_code");
		edt_CAR_NUMBER.value     = gds_sql_common.getColumn(0, "ret_name");	
					
	}
	else {
	    

	}*/
		var arrParam = new Array();
			arrParam[0] = this.opener.ds_list.getColumn(this.opener.ds_list.rowposition, "MGMT_SABUN");
			arrParam[1] = str_ParamIDText1;
					
		var dsObj = gfn_dialog("MAK10020P"					// Dialog ID
								, "U_MAK::MAK10020P.xfdl"		// Form URL
								, {fv_Contents:arrParam}			// 배열
								, null, null, null, null, null, false, true, -1);
								
		if(!gfn_isNull(dsObj))
		{
			//trace(dsObj[0]);
			//trace(dsObj[1]);
			//trace(dsObj[2]);
			
			edt_CAR_CLASS.value     = dsObj[2]; 		// 차종
			edt_CAR_NUMBER.value     = dsObj[1]; 	// 차량번호
			
			// 선택된 차량 시작Km 구하기
			fsp_clear(this);
			
			fsp_addSearch(this, "ma/mak:MAK10150P_S006");	
			
			ds_cond.clear();
			
			ds_cond.addColumn("CAR_CLASS","STRING",256);
			ds_cond.addColumn("CAR_NUMBER","STRING",256);
			
			ds_cond.addRow();
			
			ds_cond.setColumn(0, "CAR_CLASS", edt_CAR_CLASS.value);
			ds_cond.setColumn(0, "CAR_NUMBER", edt_CAR_NUMBER.value);
			
			
			http.Sync = true;
			fsp_callService(this, "", "", "ds_cond=ds_cond","ds_toKm=ds_toKm","","");
			http.Sync = false;

			me_FROM_KM.value = ds_toKm.getColumn(0, "TO_KM");
			me_TO_KM.value = 0;
		}
}

function btn_DetailAdd_OnClick(obj:Button, e:ClickEventInfo)
{
		ds_DRIVING_MGMT_Input.clearData();
		ds_DRIVING_MGMT_Input.addRow();
		
		//동일마케터의 최근 TO KM 데이터가 존재할경우 Default Setting#########################
		fn_GetBeforeMaxTO_KMInfo(ds_cond, str_ParamIDText1, str_ParamIDText2);	
		fn_GetBeforeMaxCar_Info(ds_cond, str_ParamIDText1, str_ParamIDText2);	
		//동일마케터의 최근 TO KM 데이터가 존재할경우 Default Setting#########################
				
		edt_LOC_CD.setFocus();
}


function fn_Refresh()
{

    
	//init_btn_setup();	// Button 초기화
	fsp_init(this);


	/*
	#############################################################################################################
	공통코드 SETTING
	#############################################################################################################
	*/	
   
	
	//차량운영일지###########################################
	fsp_clear(this);
	
	fsp_addSearch(this, "ma/mak:MAK10150P_S001");	
	
	ds_cond.clear();
	
	ds_cond.addColumn("GUBUN","STRING",256);
	ds_cond.addColumn("VISIT_ID","INT",256);
	
	ds_cond.addRow();
	
	ds_cond.setColumn(ds_cond.rowposition, "GUBUN",                 str_ParamIDText1);
	ds_cond.setColumn(ds_cond.rowposition, "VISIT_ID",              str_ParamIDText2);
	
	ds_DRIVING_MGMT.clearData();
	
	http.Sync = true;
	fsp_callService(this, "", "", "ds_cond=ds_cond","ds_DRIVING_MGMT=ds_DRIVING_MGMT","","");
	http.Sync = false;	
	//차량운영일지###########################################

	if (ds_DRIVING_MGMT.rowcount == 0){
	
		fn_DataSetAllClear();
		
		ds_DRIVING_MGMT_Input.addRow();
		
		//동일마케터의 최근 TO KM 데이터가 존재할경우 Default Setting#########################
		fn_GetBeforeMaxTO_KMInfo(ds_cond, str_ParamIDText1, str_ParamIDText2);
		fn_GetBeforeMaxCar_Info(ds_cond, str_ParamIDText1, str_ParamIDText2);	
		//동일마케터의 최근 TO KM 데이터가 존재할경우 Default Setting#########################		
    }
    
    edt_LOC_CD.setFocus();
	/*
	#############################################################################################################
	공통코드 SETTING
	#############################################################################################################
	*/
}

function grid_List_OnHeadClick(obj:Grid, e:GridClickEventInfo)
{
	
	
	if (obj.getCellProperty("head",e.cell,"class") == "head_Excel"){
		;//obj.ExportExcelEx(this.Title);
	}
	else {
	
		gfn_gridSort(obj, e); //(eval(obj.binddataset), obj, e.cell);	
		//ds_list_OnRowPosChanged(obj,-1,0);	
	}
	//obj.ExportExcel(this.Title, , False);	
}

function ds_DRIVING_MGMT_OnRowPosChanged(obj:Dataset, e:DSRowPosChangeEventInfo)
{
    if (ds_DRIVING_MGMT.rowcount == 0) return;
    
	ds_DRIVING_MGMT_Input.clearData();
	var row = ds_DRIVING_MGMT_Input.addRow();
	ds_DRIVING_MGMT_Input.copyRow(row, ds_DRIVING_MGMT, e.newrow);
	ds_DRIVING_MGMT_Input.applyChange();

	//edtBtn Component 복사############################
	Set_edtBtn_UserData("Clear");
	Set_edtBtn_UserData("Copy");
		//edtBtn Component 복사############################
	
	
	Setds_listInput_OnColumnChanged();
	//edt_TYPE_CD.Enable        = False;

	//edt_TYPE_NAME.SetFocus();
}
function ds_DRIVING_MGMT_Input_OnColumnChanged(obj:Dataset, e:DSColChangeEventInfo)
{
	//********************* 기존데이터와 새로 입력받은 시작km,종료km 비교 체크 처리. (2015.07.30 추가)
	var stKm = 0;	// 시작km
	var edKm = 0;	// 종료km
	var stKmTemp = 0;	// 비교대상 시작km 
	var edKmTemp = 0;	// 비교대상 종료km
	var curRw = ds_DRIVING_MGMT_Input.rowposition;
	if(e.columnid == "FROM_KM" || e.columnid == "TO_KM") {
		stKm = toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "FROM_KM"));
		edKm = toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "TO_KM"));
		if(!isNull(stKm) && !isNull(edKm) && (stKm>0) && (edKm>0)) {
			if(stKm > edKm) {
				g_Message("EE", "시작km 보다 종료km가 작을수 없습니다.");
				return false;
			}
//trace(ds_DRIVING_MGMT.rowposition);
//trace(ds_DRIVING_MGMT.saveXML());
			for(var i=0; i<ds_DRIVING_MGMT.rowcount; i++) {
				if(i != ds_DRIVING_MGMT.rowposition) {
					stKmTemp = toNumber(ds_DRIVING_MGMT.getColumn(i, "FROM_KM"));
					edKmTemp = toNumber(ds_DRIVING_MGMT.getColumn(i, "TO_KM"));
					
					//alert("stKm ==>>"+stKm+" // edKm ==>>"+edKm+" // stKmTemp ==>"+stKmTemp+" // edKmTemp ==>>"+edKmTemp);
					
					if(stKm >= stKmTemp && stKm < edKmTemp) {
						g_Message("EE", "시작 구간 체크해 주세요.");
						ds_DRIVING_MGMT_Input.enableevent = false;
						ds_DRIVING_MGMT_Input.setColumn(curRw, "FROM_KM", "0");
						ds_DRIVING_MGMT_Input.enableevent = true;
						me_FROM_KM.setFocus();
						//ds_DRIVING_MGMT.rowposition = i;
						return false;
					}else if(edKm > stKmTemp && edKm <= edKmTemp) {
						g_Message("EE", "종료 구간 체크해 주세요.");
						ds_DRIVING_MGMT_Input.enableevent = false;
						ds_DRIVING_MGMT_Input.setColumn(curRw, "TO_KM", "0");
						ds_DRIVING_MGMT_Input.enableevent = true;
						me_TO_KM.setFocus();
						//ds_DRIVING_MGMT.rowposition = i;
						return false;
					}else {
						
					}
				}
			}
		}	
	}
	
	
	if (
			(e.columnid == "FROM_KM") ||
			(e.columnid == "INUSE_KM") ||
			(e.columnid == "TO_KM") ||	
	
			(e.columnid == "DISTANCE") ||

			(e.columnid == "CAR_EXPENSE") ||
			(e.columnid == "TOLL_EXPENSE") ||
			(e.columnid == "GITA_EXPENSE")
	   )
	{	
		fn_ds_DRIVING_MGMT_Input_summary();
	}
}

function fn_ds_DRIVING_MGMT_Input_summary()
{
	var TO_KM = isNaN(toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "TO_KM"))) ? 0 : toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "TO_KM"));
	var INUSE_KM = isNaN(toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "INUSE_KM"))) ? 0 : toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "INUSE_KM"));
	var FROM_KM = isNaN(toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "FROM_KM"))) ? 0 : toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "FROM_KM"));
	me_DISTANCE.value =   TO_KM - INUSE_KM - FROM_KM;

	var DISTANCE = isNaN(toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "DISTANCE"))) ? 0 : toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "DISTANCE"));
	me_CAR_EXPENSE.value = DISTANCE * toNumber(f_STD_AMT); //200=>230 '08년 09월부터임

	var CAR_EXPENSE = isNaN(toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "CAR_EXPENSE"))) ? 0 : toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "CAR_EXPENSE"));
	var TOLL_EXPENSE = isNaN(toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "TOLL_EXPENSE"))) ? 0 : toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "TOLL_EXPENSE"));
	var GITA_EXPENSE = isNaN(toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "GITA_EXPENSE"))) ? 0 : toNumber(ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "GITA_EXPENSE"));
	me_TOT_EXPENSE.value =  CAR_EXPENSE + TOLL_EXPENSE + GITA_EXPENSE;
}

function ds_DRIVING_MGMT_Input_CanColumnChange(obj:Dataset, e:DSColChangeEventInfo)
{
	if (
		(e.columnid == "TO_KM") ||
		//(strColumnID == "DISTANCE") ||
		//(strColumnID == "CAR_EXPENSE") ||
		(e.columnid == "TOLL_EXPENSE") ||
		(e.columnid == "GITA_EXPENSE") ||
		(e.columnid == "INUSE_KM")
	   )
	{
	
		if (toNumber(e.newvalue) < 0){
		
			g_Message("EE", "-를 입력할 수 없습니다.\n" +
							"확인하여 주십시요.");			
                        			
			eval("me_" + e.columnid).value = "";
			eval("me_" + e.columnid).setFocus();			
			
			
			return false;  		
		
		}	
	
	}
		

}

//edtBtn Component 세팅/초기화####################################################################
function Set_edtBtn_UserData(str_Gubun)
{

	if (str_Gubun == "Copy"){

		//edtBtn Component 초기화############################  		 
		for (i=0;i<components.length;i++){
							
			if (
				(gfn_subStr(components[i].name, 0, 3)== "st_") &&
				(gfn_subStr(components[i].userdata, 0, 10)== "strMAQuery")
			   )	
			{

			    if (gfn_length(eval("edt_" + gfn_subStr(components[i].name, 3)).Column)!= 0)
				eval("edt_" + gfn_subStr(components[i].name, 3)).userdata = ds_listInput.getColumn(ds_listInput.rowposition, gfn_subStr(components[i].name, 3));
			}
		}		 
		//edtBtn Component 초기화############################
	}
	else if (str_Gubun == "Clear"){

		//edtBtn Component 초기화############################
		for (i=0;i<components.length;i++){
				
				
			if (
				(gfn_subStr(components[i].name, 0, 3)== "st_") &&
				(gfn_subStr(components[i].userdata, 0, 10)== "strMAQuery")
			   )	
			{
				if (gfn_length(components[i].Column)!= 0)
				eval("edt_" + gfn_subStr(components[i].name, 3)).userdata = "";
			}
		}  
		//edtBtn Component 초기화############################
	}
}


function Setds_listInput_OnColumnChanged()
{

	//ds_DRIVING_MGMT_Input_OnColumnChanged(ds_DRIVING_MGMT_Input,0,"DISTANCE","",ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "DISTANCE"),0);	
	ds_DRIVING_MGMT_Input.setColumn(0,"DISTANCE",ds_DRIVING_MGMT_Input.getColumn(ds_DRIVING_MGMT_Input.rowposition, "DISTANCE"));
	/*
	ds_listInput_OnColumnChanged(ds_listInput,0,"BIZ_CHK_YN","",ds_listInput.GetColumn(ds_listInput.row, "BIZ_CHK_YN"),0);
	ds_listInput_OnColumnChanged(ds_listInput,0,"FEE_REG_YN","",ds_listInput.GetColumn(ds_listInput.row, "FEE_REG_YN"),0);
	ds_listInput_OnColumnChanged(ds_listInput,0,"ADITEM1_CHK_YN","",ds_listInput.GetColumn(ds_listInput.row, "ADITEM1_CHK_YN"),0);
	ds_listInput_OnColumnChanged(ds_listInput,0,"ADITEM2_CHK_YN","",ds_listInput.GetColumn(ds_listInput.row, "ADITEM2_CHK_YN"),0);
	*/
}




//동일마케터의 최근 TO KM 데이터가 존재할경우 Default Setting#########################
function fn_GetBeforeMaxTO_KMInfo(objOutDs, str_GUBUN, real_VISIT_ID)
{
//============================================================================================
//(2009-09-23 추가) 시작
// 황승한 2009-09-23 CSR#(30916) 요청자:이혜은(FS기획팀)
// 시작KM 기존에 해당사번의 최종KM를 자동으로 세팅하던기능 사용중지요청 처리
//============================================================================================       
    objOutDs.clear();
	ds_cond.addColumn("TO_KM","INT",256); 
    
	// action 정보 초기화 
    fsp_clear(this);	
    // 서버에서 조회할 정보 추가 
	fsp_addSearch(this, "ma/mak:MAK10150P_S004");
	
	//alert(str_ACCTCD);
	//alert(str_DATE_STD);
	// 서버 호출 
	http.Sync = true;
	fsp_callService(this, "", "", "", objOutDs.name + "=ds_list","GUBUN=" + wrapQuote(str_GUBUN) + " VISIT_ID=" + wrapQuote(real_VISIT_ID), "");	
	http.Sync = false;	
	
	if (toNumber(objOutDs.getColumn(0, "TO_KM")) > 0) {	
		// 2015.07.30 변경
		if(ds_DRIVING_MGMT.rowcount>0 && (toNumber(ds_DRIVING_MGMT.getMax("TO_KM"))>toNumber(objOutDs.getColumn(0, "TO_KM")))) {
			ds_DRIVING_MGMT_Input.setColumn(0, "FROM_KM", toNumber(ds_DRIVING_MGMT.getMax("TO_KM")));
			ds_DRIVING_MGMT_Input.setColumn(0, "BEFTO_KM", toNumber(ds_DRIVING_MGMT.getMax("BEFTO_KM")));
			ds_DRIVING_MGMT_Input.setColumn(0, "AFTFROM_KM", toNumber(ds_DRIVING_MGMT.getMax("AFTFROM_KM")));
		}else {
			ds_DRIVING_MGMT_Input.setColumn(0, "FROM_KM", toNumber(objOutDs.getColumn(0, "TO_KM")));	
			ds_DRIVING_MGMT_Input.setColumn(0, "BEFTO_KM", toNumber(objOutDs.getColumn(0, "BEFTO_KM")));	
			ds_DRIVING_MGMT_Input.setColumn(0, "AFTFROM_KM", toNumber(objOutDs.getColumn(0, "AFTFROM_KM")));	
		}
	}
	
//============================================================================================
//(2009-09-23 추가) 끝
//============================================================================================	
}
//동일마케터의 최근 TO KM 데이터가 존재할경우 Default Setting#########################

//동일마케터의 최근 TO KM 데이터가 존재할경우 Default Setting#########################
function fn_GetBeforeMaxCar_Info(objOutDs, str_GUBUN, real_VISIT_ID)
{
    objOutDs.clear();
	ds_cond.addColumn("CAR_CLASS","STRING",256);    
	ds_cond.addColumn("CAR_NUMBER","STRING",256);          
    
    
	// action 정보 초기화 
    fsp_clear(this);  
	
    // 서버에서 조회할 정보 추가 
	fsp_addSearch(this, "ma/mak:MAK10150P_S005");
	
	//alert(str_ACCTCD);
	//alert(str_DATE_STD);
	// 서버 호출 
	http.Sync = true;
	fsp_callService(this, "", "", "", objOutDs.name + "=ds_list","GUBUN=" + wrapQuote(str_GUBUN) +
	                                                           " VISIT_ID=" + wrapQuote(real_VISIT_ID)
	                                                           ,"");	
	http.Sync = false;
	
	ds_DRIVING_MGMT_Input.setColumn(0, "CAR_CLASS",    objOutDs.getColumn(0, "CAR_CLASS"));	
	ds_DRIVING_MGMT_Input.setColumn(0, "CAR_NUMBER",   objOutDs.getColumn(0, "CAR_NUMBER"));
}

// function fn_KmChange(obj,strText)
// {
	// if (ds_DRIVING_MGMT_Input.rowcount < 1) return;
	
	// ds_DRIVING_MGMT_Input.GetColumn(0, "DISTANCE") = ds_DRIVING_MGMT_Input.GetColumn(0, "TO_KM")
												   // - ds_DRIVING_MGMT_Input.GetColumn(0, "FROM_KM")
												   // - ds_DRIVING_MGMT_Input.GetColumn(0, "INUSE_KM");
// }

function btn_select_onclick(obj:Button,  e:ClickEventInfo)
{
	fn_Refresh();
}
]]></Script>
  </Form>
</FDL>
