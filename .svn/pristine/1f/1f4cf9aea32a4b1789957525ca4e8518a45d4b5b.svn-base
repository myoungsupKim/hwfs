<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
SELECT AA.*
FROM
(
SELECT /*+ USE_HASH(A, B, C, D) */ 
       TRIM('표준') AS GUBUN,
       A.RECIPE_CD,  --레시피코드
       A.RECIPE_NAME, --레시피명
       ROUND(SUM(B.NEED_QTY * (NVL(C.MARGIN_PRICE,0) / D.KG_CONVERT_RATE / 1000))) AS RECIPE_COST, --레시피원가
       0 AS COST_RATE, --원가율 --표준은 판매가,원가율 0 -- 수식으로 해결 => 판매가가 0이 아닐 경우 ROUND((레시피원가/판매가)*100)
       0 AS SALE_PRICE, -- 판매가
       '' AS PREFER,
       '' AS PREFER_LABEL,
       A.RECIPE_CLASS,
       A.RECIPE_TYPE,
       A.CUISINE_TYPE,
       A.PHF,
       CASE WHEN months_between(to_date(to_char(sysdate,'yyyymmdd'),'YYYYMMDD'),to_date(to_char(A.cdate,'yyyymmdd'),'YYYYMMDD')) &lt;= 1.0 THEN 1 ELSE 0 END DI_MON
  FROM FSR_STD_RECIPE_MST A ,
       FSR_STD_RECIPE_ITEM B ,
       (
	    SELECT /*+ USE_HASH(A D E) */
	           A.ITEM_CODE
	         , DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) AS MARGIN_PRICE
  	      FROM HLDC_PO_CONTRACT_F A
  	         , HLDC_PO_ITEM_MST D
  	         , HLDC_PO_SUBINVENTORY E		      
		 WHERE 1=1
           AND A.UPJANG = (SELECT AP_UNITPRICE_UPJANG FROM HLDC_ST_UPJANG Z WHERE Z.UPJANG = #UPJANG#)
		   AND #MENU_DATE# BETWEEN A.CONTRACT_START AND A.CONTRACT_END
		   AND A.USE_YN = 'Y'
		   AND A.CONTRACT_PRICE > 0
           AND E.UPJANG = #UPJANG#
           AND E.SUBINV_CODE = #SUBINV_CODE#
           AND A.ITEM_CODE = D.ITEM_CODE
       ) C ,
       HLDC_PO_ITEM_MST D
 WHERE A.RECIPE_CD = B.RECIPE_CD
   AND B.ITEM_CODE = C.ITEM_CODE(+)
   AND B.ITEM_CODE = D.ITEM_CODE
<isNotNull col="RECIPE_NAME">
   AND ( 1 = 1     
</isNotNull>    
<isNotNull col="RECIPE_NAME1">
        AND A.RECIPE_NAME LIKE '%' || #RECIPE_NAME1# || '%'
        OR A.SAME_WORD LIKE '%'|| #RECIPE_NAME1# ||'%'
</isNotNull>
<isNotNull col="RECIPE_NAME2">
        OR A.RECIPE_NAME LIKE '%' || #RECIPE_NAME2# || '%'
        OR A.SAME_WORD LIKE '%'|| #RECIPE_NAME2# ||'%'
</isNotNull>
<isNotNull col="RECIPE_NAME3">
        OR A.RECIPE_NAME LIKE '%' || #RECIPE_NAME3# || '%'
        OR A.SAME_WORD LIKE '%'|| #RECIPE_NAME3# ||'%'
</isNotNull>
<isNotNull col="RECIPE_NAME4">
        OR A.RECIPE_NAME LIKE '%' || #RECIPE_NAME4# || '%'
        OR A.SAME_WORD LIKE '%'|| #RECIPE_NAME4# ||'%'
</isNotNull>
<isNotNull col="RECIPE_NAME5">
        OR A.RECIPE_NAME LIKE '%' || #RECIPE_NAME5# || '%'
        OR A.SAME_WORD LIKE '%'|| #RECIPE_NAME5# ||'%'
</isNotNull>
<isNotNull col="RECIPE_NAME">
   )       
</isNotNull>    
 <isNotNull col="RECIPE_CLASS">
  AND A.RECIPE_CLASS = #RECIPE_CLASS#
 </isNotNull>
 <isEqual col="RECIPE_CLASS" value="">
  AND A.RECIPE_CLASS IN (
                            SELECT CODE
                            FROM    SCC_COMMON_CODE A,
                                    (
                                        SELECT UPJANG,RECIPE_CLASS
                                          FROM FSA_UPJANG_RECIPE_LINK
                                        WHERE UPJANG=#UPJANG#
                                    ) B
                            WHERE   GROUP_CODE='FS0001'
                            AND     A.CODE=B.RECIPE_CLASS
                            AND     USE_YN='Y'
  )
 </isEqual>
 <isNotNull col="RECIPE_TYPE">
  AND A.RECIPE_TYPE = #RECIPE_TYPE#
 </isNotNull>
 <isNotNull col="CUISINE_TYPE">
  AND A.CUISINE_TYPE = #CUISINE_TYPE#
 </isNotNull>
 <isNotNull col="MAIN_ITEM_CODE1">
  AND A.MAIN_ITEM_CODE1 = #MAIN_ITEM_CODE1#
 </isNotNull>
 <isNotNull col="RESP_NUT1">
  AND A.RESP_NUT1 = #RESP_NUT1#
 </isNotNull>
 <isEqual col="STD_CHK" value="0">
  AND to_char(A.CDATE,'yyyymmdd')='99999999'	-- 표준 레시피 미체크이면 데이타 없도록
 </isEqual>
 GROUP BY A.RECIPE_CD, A.RECIPE_NAME, A.RECIPE_CLASS, A.SALE_PRICE,A.RECIPE_TYPE,A.CUISINE_TYPE,A.PHF,A.CDATE
UNION  ALL
SELECT /*+ USE_HASH(A, B, C, D) */
       TRIM('업장') AS GUBUN,
       A.RECIPE_CD,
       A.RECIPE_NAME,
       NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0)  AS RECIPE_COST,
       DECODE(A.SALE_PRICE,0,0,ROUND((NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0)/A.SALE_PRICE)*100,2)) COST_RATE, --원가율  -- 수식으로 해결 => 판매가가 0이 아닐 경우 ROUND((레시피원가/판매가)*100)
       A.SALE_PRICE,--판매가
       A.PREFER,
       (SELECT CONTENTS FROM SCC_COMMON_CODE WHERE GROUP_CODE ='FS0020' AND CODE=A.PREFER)   PREFER_LABEL,
       A.RECIPE_CLASS,
       A.RECIPE_TYPE,
       A.CUISINE_TYPE,
       A.PHF,
       0 DI_MON
  FROM
       (
        SELECT A.UPJANG, A.RECIPE_CD, A.RECIPE_NAME, A.RECIPE_CLASS,A.RECIPE_TYPE,A.CUISINE_TYPE, A.SALE_PRICE, A.PREFER, B.ITEM_CODE, B.NEED_QTY,A.PHF
          FROM
               FSR_UPJANG_RECIPE_MST A
              ,FSR_UPJANG_RECIPE_ITEM B
         WHERE A.UPJANG = B.UPJANG
           AND A.HALL_CLASS = B.HALL_CLASS
           AND A.RECIPE_CD = B.RECIPE_CD
           AND A.USE_YN = 'Y'
           AND B.USE_YN = 'Y'
           AND A.UPJANG = #UPJANG#          -- 업장
           AND A.HALL_CLASS = (SELECT HALL_CLASS FROM FSA_HALL_MST WHERE UPJANG = #UPJANG# AND HALL_CD = #HALL_CD#)      -- 식당
	<isNotNull col="RECIPE_NAME">
	   AND ( 1 = 1     
	</isNotNull>    
	<isNotNull col="RECIPE_NAME1">
	        AND A.RECIPE_NAME LIKE '%' || #RECIPE_NAME1# || '%'
	        OR A.SAME_WORD LIKE '%'|| #RECIPE_NAME1# ||'%'
	</isNotNull>
	<isNotNull col="RECIPE_NAME2">
	        OR A.RECIPE_NAME LIKE '%' || #RECIPE_NAME2# || '%'
	        OR A.SAME_WORD LIKE '%'|| #RECIPE_NAME2# ||'%'
	</isNotNull>
	<isNotNull col="RECIPE_NAME3">
	        OR A.RECIPE_NAME LIKE '%' || #RECIPE_NAME3# || '%'
	        OR A.SAME_WORD LIKE '%'|| #RECIPE_NAME3# ||'%'
	</isNotNull>
	<isNotNull col="RECIPE_NAME4">
	        OR A.RECIPE_NAME LIKE '%' || #RECIPE_NAME4# || '%'
	        OR A.SAME_WORD LIKE '%'|| #RECIPE_NAME4# ||'%'
	</isNotNull>
	<isNotNull col="RECIPE_NAME5">
	        OR A.RECIPE_NAME LIKE '%' || #RECIPE_NAME5# || '%'
	        OR A.SAME_WORD LIKE '%'|| #RECIPE_NAME5# ||'%'
	</isNotNull>
	<isNotNull col="RECIPE_NAME">
	   )       
	</isNotNull>   
	 <isNotNull col="RECIPE_CLASS">
	  AND A.RECIPE_CLASS = #RECIPE_CLASS#
	 </isNotNull>
	 <isEqual col="RECIPE_CLASS" value="">
	  AND A.RECIPE_CLASS IN (
				    SELECT CODE
				    FROM    SCC_COMMON_CODE A,
					    (
						SELECT UPJANG,RECIPE_CLASS
						  FROM FSA_UPJANG_RECIPE_LINK
						WHERE UPJANG=#UPJANG#
					    ) B
				    WHERE   GROUP_CODE='FS0001'
				    AND     A.CODE=B.RECIPE_CLASS
				    AND     USE_YN='Y'
	  )
	 </isEqual>
	 <isNotNull col="RECIPE_TYPE">
	  AND A.RECIPE_TYPE = #RECIPE_TYPE#
	 </isNotNull>
	 <isNotNull col="CUISINE_TYPE">
	  AND A.CUISINE_TYPE = #CUISINE_TYPE#
	 </isNotNull>
	 <isNotNull col="MAIN_ITEM_CODE1">
	  AND A.MAIN_ITEM_CODE1 = #MAIN_ITEM_CODE1#
	 </isNotNull>
	 <isNotNull col="RESP_NUT1">
	  AND A.RESP_NUT1 = #RESP_NUT1#
	 </isNotNull>
       ) A
      ,(
	    SELECT /*+ USE_HASH(A D E) */
	           A.ITEM_CODE
	         , D.ITEM_NAME
	         , D.ITEM_SIZE
	         , D.PO_UOM
	         , A.CUSTCD
	         , DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) AS ITEM_PRICE
	         , KG_CONVERT_RATE
	         , ROUND((DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, DECODE(E.OUTVAT_FLAG, 'Y' , ( ROUND( (A.CONTRACT_PRICE * DECODE(D.TAX_CODE, '100' , 1.1, 1) * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) , ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) ) )/KG_CONVERT_RATE/1000,2) AS G_ITEM_PRICE
	         , A.UPJANG
  	      FROM HLDC_PO_CONTRACT_F A
  	         , HLDC_PO_ITEM_MST D
  	         , HLDC_PO_SUBINVENTORY E		      
		 WHERE 1=1
           AND A.UPJANG = (SELECT AP_UNITPRICE_UPJANG FROM HLDC_ST_UPJANG Z WHERE Z.UPJANG = #UPJANG#)
		   AND #MENU_DATE# BETWEEN A.CONTRACT_START AND A.CONTRACT_END
		   AND A.USE_YN = 'Y'
		   AND A.CONTRACT_PRICE > 0
           AND E.UPJANG = #UPJANG#
           AND E.SUBINV_CODE = #SUBINV_CODE#
           AND A.ITEM_CODE = D.ITEM_CODE
       ) B
 WHERE A.ITEM_CODE = B.ITEM_CODE(+)
  <isEqual col="UPJANG_CHK" value="0">
  AND A.UPJANG=0	-- 업장표준 레시피 미체크이면 데이타 없도록
 </isEqual>
 GROUP BY A.RECIPE_CD, A.RECIPE_NAME, A.RECIPE_CLASS, A.SALE_PRICE, A.PREFER,A.RECIPE_TYPE,A.CUISINE_TYPE,A.PHF
 ) AA
 WHERE 1=1
 <isNotNull col="UNITPRICE_FROM">
 AND	AA.RECIPE_COST &gt; #UNITPRICE_FROM#
 </isNotNull>
  <isNotNull col="UNITPRICE_TO">
 AND	AA.RECIPE_COST &lt; #UNITPRICE_TO#
  </isNotNull>
  <isNotNull col="SALEPRICE_FROM">
  AND	AA.SALE_PRICE &gt; #SALEPRICE_FROM#
   </isNotNull>
   <isNotNull col="SALEPRICE_TO">
 AND	AA.SALE_PRICE &lt; #SALEPRICE_TO# 
  </isNotNull>
ORDER BY GUBUN DESC, RECIPE_CD	</statement>
	<input default-name="ds_recipeCond">
	</input>
	<output default-name="ds_List">
	</output>
</query>