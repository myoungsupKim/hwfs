<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
SELECT   C.JOB_NAME
        ,D.SUB_JOB_NAME
        ,A.UPJANG
        ,REPLACE(B.UPJANGNM,'단체급식 ') AS UPJANGNM
        ,RCA --일반
        ,RCB --학생
        ,RCC --연회
        ,RCD --환자공통
        ,RCE --환자열량
        ,RCF --환자저염
        ,RCG --환자지방
        ,RCH --HMR
        ,RCI --프리미엄
        ,RCJ --고단가
        ,RCK --저단가
        ,RCL --효율화
        ,RCM --건강
        ,RCO --외식 
        ,RCP --카페 
 FROM   SCO_UPJANG_MST_V A
       ,HLDC_ST_UPJANG B
       ,MAS_JOB C
       ,MAS_JOB_SUB D
       ,( SELECT    UPJANG
                   ,MAX(DECODE(RECIPE_CLASS,'A',1,0)) AS RCA --일반
                   ,MAX(DECODE(RECIPE_CLASS,'B',1,0)) AS RCB --학생
                   ,MAX(DECODE(RECIPE_CLASS,'C',1,0)) AS RCC --연회
                   ,MAX(DECODE(RECIPE_CLASS,'D',1,0)) AS RCD --환자공통
                   ,MAX(DECODE(RECIPE_CLASS,'E',1,0)) AS RCE --환자열량
                   ,MAX(DECODE(RECIPE_CLASS,'F',1,0)) AS RCF --환자저염
                   ,MAX(DECODE(RECIPE_CLASS,'G',1,0)) AS RCG --환자지방
                   ,MAX(DECODE(RECIPE_CLASS,'H',1,0)) AS RCH --HMR
                   ,MAX(DECODE(RECIPE_CLASS,'I',1,0)) AS RCI --프리미엄
                   ,MAX(DECODE(RECIPE_CLASS,'J',1,0)) AS RCJ --고단가
                   ,MAX(DECODE(RECIPE_CLASS,'K',1,0)) AS RCK --저단가
                   ,MAX(DECODE(RECIPE_CLASS,'L',1,0)) AS RCL --효율화
                   ,MAX(DECODE(RECIPE_CLASS,'M',1,0)) AS RCM --건강
                   ,MAX(DECODE(RECIPE_CLASS,'O',1,0)) AS RCO --외식
                   ,MAX(DECODE(RECIPE_CLASS,'P',1,0)) AS RCP --카페
            FROM    FSA_UPJANG_RECIPE_LINK
            GROUP BY UPJANG) E
     WHERE A.FICS_YN    = 'N'
       AND A.UPJANG     = B.UPJANG
       AND A.JOB_CD     = C.JOB_CD
       AND A.SUB_JOB_CD = D.SUB_JOB_CD
       AND C.JOB_CD     = D.JOB_CD
       AND A.UPJANG     = E.UPJANG(+)
       AND A.SAUP_TYPE  = #SAUP_TYPE#
<isNotNull col="JOB_CD">
  AND A.JOB_CD= #JOB_CD#
</isNotNull>
<isNotNull col="SUB_JOB_CD">
 AND  A.SUB_JOB_CD= #SUB_JOB_CD#
</isNotNull>
<isNotNull col="UPJANG">
 AND B.UPJANG = #UPJANG#
</isNotNull>
<isNotNull col="MU_CD">
  AND A.MU_CD= #MU_CD#
</isNotNull>
<isNotNull col="TM_CD">
  AND A.TM_CD= #TM_CD#
</isNotNull>
 ORDER BY C.JOB_NAME, D.SUB_JOB_NAME, B.UPJANGNM	</statement>
	<input default-name="ds_in">
		<col name="JOB_CD" size="20" type="VARCHAR" description="" /> 
		<col name="SUB_JOB_CD" size="20" type="VARCHAR" description="" /> 
		<col name="UPJANGNM" size="50" type="VARCHAR" description="" /> 
		<col name="SAUP_TYPE" size="20" type="VARCHAR" description="" />
		<col name="MU_CD" size="20" type="VARCHAR" description="" /> 
	</input>
	<output default-name="ds_out">
		<col name="JOB_NAME" size="20" type="VARCHAR" description="" /> 
		<col name="SUB_JOB_NAME" size="20" type="VARCHAR" description="" /> 
		<col name="UPJANG" size="22" type="NUMERIC" description="" /> 
		<col name="UPJANGNM" size="50" type="VARCHAR" description="" /> 
		<col name="RC001" size="22" type="NUMERIC" description="" /> 
		<col name="RC002" size="22" type="NUMERIC" description="" /> 
		<col name="RC003" size="22" type="NUMERIC" description="" /> 
		<col name="RC004" size="22" type="NUMERIC" description="" /> 
		<col name="RC005" size="22" type="NUMERIC" description="" /> 
		<col name="RC006" size="22" type="NUMERIC" description="" /> 
		<col name="RC007" size="22" type="NUMERIC" description="" /> 
		<col name="RC008" size="22" type="NUMERIC" description="" /> 
		<col name="RC009" size="22" type="NUMERIC" description="" /> 
	</output>
</query>
