<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="ms.msm.depositReportDAO">
	<desc>입금현황 HQML Query</desc>

	<!-- 입금현황 목록을 조회한다. -->
	<statement name="selectList" type="select">
	/*+ com.hwfs.ms.msm.depositReportDAO.selectList */
	<![CDATA[
		SELECT   TO_CHAR(TO_DATE(X.RECEIVE_DATE,'YYYYMMDD'),'YYYY-MM-DD'
                  || '('
                  || 'DY'
                  || ')','NLS_DATE_LANGUAGE=KOREAN') AS AMT_DATE ,
         X.RECEIVE_AMT                               AS OCCUR_AMT
FROM     ( SELECT TO_NUMBER(B.UPJANG_CD) AS UPJANG_CD ,
                 A.RECEIVE_DATE ,
                 NVL(A.RECEIVE_AMT,0) -NVL(
                                             (SELECT SUM(APPLY_AMT)
                                             FROM    SLA_ADVANCE_ALT_MST A ,
                                                     SLA_ADVANCE_ALT_DETAIL B
                                             WHERE   A.ALT_NUM     = B.ALT_NUM
                                             AND     B.ADVANCE_NUM = AD.ADVANCE_NUM
                                             AND     A.RECD_STATUS = 'L'
                                             AND     B.RECD_STATUS = 'L'
                                             )
                                           ,0 ) AS RECEIVE_AMT
         FROM    SLA_SAP_SUSPENSE_INFO A ,
                 SLA_SAP_SUSPENSE_ALT_DETAIL AD ,
                 SLA_SAP_BANK_ACCT_NO B ,
                 FMS_UPJANG G ,
                 ST_UPJANG S
         WHERE   A.SAP_SUSPENSE_NUM = AD.SAP_SUSPENSE_NUM
         AND     A.RECD_STATUS      = 'L'
         AND     B.BANK_ACCT_TYPE   = 'V'
         AND     A.BANK_ACCT_NO     = B.BANK_ACCT_NO
         AND     A.BANK_ACCT_NO     = B.BANK_ACCT_NO
         AND     B.UPJANG_CD        = G.UPJANG
         AND     B.UPJANG_CD        = S.UPJANG
         AND     A.RECEIVE_DATE BETWEEN :calDtFrom AND     :calDtTo
         AND     G.UPJANG = :upjang
         
         UNION ALL
         
         SELECT TO_NUMBER(B.UPJANG_CD) AS UPJANG_CD ,
                A.RECEIVE_DATE ,
                NVL(NVL(CC.RECEIVE_AMT,BB.APPLY_AMT),A.RECEIVE_AMT) AS RECEIVE_AMT
         FROM   SLA_SAP_SUSPENSE_INFO A ,
                SLA_SAP_SUSPENSE_ALT_DETAIL AD ,
                SLA_SAP_BANK_ACCT_NO B ,
                FMS_UPJANG G ,
                ST_UPJANG S ,
                SLA_ADVANCE_ALT_MST AA ,
                SLA_ADVANCE_ALT_DETAIL BB ,
                SLA_AR_RECEIVE_DETAIL CC
         WHERE  A.SAP_SUSPENSE_NUM = AD.SAP_SUSPENSE_NUM
         AND    A.RECD_STATUS      = 'L'
         AND    B.BANK_ACCT_TYPE   = 'V'
         AND    AD.ADVANCE_NUM     = BB.ADVANCE_NUM
         AND    BB.ALT_NUM         = AA.ALT_NUM
         AND    BB.RECEIVE_NUM     = CC.RECEIVE_NUM(+)
         AND    AA.RECD_STATUS     = 'L'
         AND    BB.RECD_STATUS     = 'L'
         AND    CC.RECD_STATUS(+)  = 'L'
         AND    A.BANK_ACCT_NO     = B.BANK_ACCT_NO
         AND    AA.ALT_TYPE_CD NOT IN ('G06',
                                       'G07')
         AND    B.UPJANG_CD = G.UPJANG
         AND    B.UPJANG_CD = S.UPJANG
         AND    A.RECEIVE_DATE BETWEEN :calDtFrom AND    :calDtTo
         AND    G.UPJANG = :upjang
         
         UNION ALL
         
         SELECT M.UPJANG_CD ,
                D.RECEIVE_DATE ,
                D.RECEIVE_AMT
         FROM   SLA_AR_RECEIVE_DETAIL D
                INNER JOIN SLA_AR_MST M
                ON     M.SYS_CLASS   = '13'
                AND    M.RECD_STATUS = 'L'
                AND    D.AR_NUM      = M.AR_NUM
                INNER JOIN FMS_UPJANG G
                ON     1           = 1
                AND    M.UPJANG_CD = G.UPJANG
                AND    G.UPJANG    = :upjang
                INNER JOIN ST_UPJANG S
                ON     M.UPJANG_CD = S.UPJANG
                INNER JOIN SLA_AR_RECEIVE_MST R
                ON     R.RECEIVE_TYPE_CD NOT IN ('B10')
                AND    D.RECEIVE_NUM = R.RECEIVE_NUM
                AND    R.RECD_STATUS = 'L'
         WHERE  D.RECD_STATUS        = 'L'
         AND    D.RECEIVE_DATE BETWEEN :calDtFrom AND    :calDtTo
         
         UNION ALL
         
         SELECT MST.UPJANG_CD  AS UPJNAG_CD ,
                MST.OCCUR_DATE AS RECEIVE_DATE,
                MST.OCCUR_AMT  AS RECEIVE_AMT
         FROM   SLA_ADVANCE_MST MST ,
                ST_UPJANG S ,
                FMS_UPJANG F
         WHERE  (
                       MST.MNGMV_ADVANCE_NUM IS NOT NULL
                OR     ADVANCE_OCCUR_CLASS             = 'AO09'
                )
         AND    MST.RECD_STATUS = 'L'
         AND    MST.UPJANG_CD   = S.UPJANG
         AND    MST.UPJANG_CD   = F.UPJANG
         AND    MST.OCCUR_DATE BETWEEN :calDtFrom AND    :calDtTo
         AND    F.UPJANG = :upjang
         )
         X
         INNER JOIN FMS_UPJANG F
         ON       X.UPJANG_CD = F.UPJANG
         INNER JOIN ST_UPJANG S
         ON       X.UPJANG_CD = S.UPJANG
         LEFT JOIN HLDC_HR_PERSONAL H
         ON       F.PART_SALES_SABUN = H.SABUN
WHERE    X.RECEIVE_AMT NOT IN ( 0 )
ORDER BY X.RECEIVE_DATE
	 ]]></statement>
</hqml>
