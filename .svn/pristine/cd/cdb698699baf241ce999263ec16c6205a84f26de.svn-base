<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="ms.msc.saniCheckResultDAO">
	<desc>SaniCheckResult HQML Query</desc>


	<!-- 위생점검결과 목록을 조회한다. -->
	<statement name="selectMasterList" type="select">
	/*+ com.hwfs.ms.msc.saniCheckResultDAO.selectMasterList */
	<![CDATA[
		SELECT 'NEW' AS ROW_STATUS 
			 , A.UPJANG
			 , (SELECT UPJANGNM FROM MAC_UPJANG_V WHERE UPJANG = :upjang ) AS UPJANGNM
			 , C.TM_CD
			 , C.TM_NM
			 , A.TEAM_MST_SABUN
			 , (SELECT NM_KOR FROM HLDC_HR_PERSONAL WHERE SABUN =  A.TEAM_MST_SABUN) AS TEAM_MST_NM
			 , A.SUBTEAM_MST_SABUN
			 , (SELECT NM_KOR FROM HLDC_HR_PERSONAL WHERE SABUN =  A.SUBTEAM_MST_SABUN) AS SUBTEAM_MST_NM
			 , A.LEADER_SABUN
			 , (SELECT NM_KOR FROM HLDC_HR_PERSONAL WHERE SABUN =  A.LEADER_SABUN) AS LEADER_NM
			 , A.CHARGE_SABUN
			 , (SELECT NM_KOR FROM HLDC_HR_PERSONAL WHERE SABUN =  A.CHARGE_SABUN) AS CHARGE_NM
			 , (CASE WHEN B.PER_DTA IS NULL AND B.PER_DTB IS NULL THEN ''
					 ELSE SCC_KUNSOK_YMD_FUN(DECODE(B.PER_DTA,NULL,B.PER_DTB,B.PER_DTA), TO_CHAR(SYSDATE,'YYYYMMDD'))
				END)    AS KUNSOK
			 , A.OPEN_DATE
			 , A.PERMISSION_TYPE
			 , FSC_COMMA_NAME_FUN(A.PERMISSION_TYPE, 'MA0004') AS PERMISSION_TYPE_NM
			 , (SELECT COUNT(1) AS CNT FROM SCO_FS_HR_PERSONAL_V L,HLDC_ST_UPJANG M WHERE L.DEPT_ID = M.DEPT_ID AND M.UPJANG = A.UPJANG AND L.GB_JAEJIK IN ('AA', 'CA') AND L.PER_DTD IS NULL) AS PERSON_CNT
			 , A.DIST_TYPE
			 , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'MA0005' AND CODE =A.DIST_TYPE) AS DIST_TYPE_NM
			 , D.AVG_MEAL_QTY
			 , D.MEAL_CNT
			 , D.MENU_CNT
			 , DECODE(A.WATER_GUBUN,'001','지하수','002','상수도','') WATER_IRRIGATION
			 , C.TM_NM || ' ' || (SELECT UPJANGNM FROM MAC_UPJANG_V WHERE UPJANG = :upjang ) AS UPJANGNM2
			 , :tableType AS TABLE_TYPE
			 , :formCd AS FORM_CD
			 , :tableTypeNm AS TABLE_TYPE_NM
			 , :formCdNm AS FORM_NAME
			 , :checkDate AS CHECK_DATE
			 , (SELECT MAN_SCORE FROM FSC_FORM_MST WHERE TABLE_TYPE = :tableType AND FORM_CD = :formCd) AS MAN_SCORE
			 , E.CHECK_TYPE  AS CHECK_TYPE
			 , E.CHECK_SABUN  AS CHECK_SABUN
	         , E.CHECK_SABUN_NM AS CHECK_SABUN_NM
             , E.SCORE AS SCORE
			 , E.NOT_FIT_TOT_CNT AS NOT_FIT_TOT_CNT
			 , E.INDICATE_CNT AS INDICATE_CNT
			 , E.CONFIRM_YN AS CONFIRM_YN
			 , E.NOT_FIT_YN AS NOT_FIT_YN
			 , E.ATTR01 AS ATTR01
			 , E.IMPROV_RPT_DATE, E.SIGN_PROGRESS_STATUS1, E.SIGN_PROGRESS_STATUS2
		  FROM SCO_UPJANG_MST_V A
			 , HLDC_HR_PERSONAL B
			 , (
				 SELECT TM_CD
					  , TM_NM
				   FROM HLDC_ST_UPJANG A
					  , HLDC_SC_DEPT_V B
				  WHERE A.DEPT_ID = B.DEPT_ID
					AND B.FS_UPJANG = 'Y'
					AND A.UPJANG = :upjang
			   ) C
			 , (
				  SELECT SUM(AVG_MEAL_QTY) AS AVG_MEAL_QTY
					   , COUNT(DISTINCT MEAL) AS MEAL_CNT
					   , COUNT(DISTINCT HALL_CD || MEAL || CORNER) AS MENU_CNT
					FROM FSA_HALL_DTL
				   WHERE UPJANG = :upjang
					 AND USE_YN = 'Y'
			   ) D
			   , (	SELECT UPJANG,CHECK_TYPE, CHECK_SABUN, (SELECT NM_KOR FROM HLDC_HR_PERSONAL WHERE SABUN =CHECK_SABUN) AS CHECK_SABUN_NM
                        , SCORE, NOT_FIT_TOT_CNT, INDICATE_CNT, CONFIRM_YN, NOT_FIT_YN, ATTR01
                        , IMPROV_RPT_DATE, SIGN_INSTANCE_ID1, SIGN_INSTANCE_ID2
                    	, CASE WHEN SIGN_INSTANCE_ID1 IS NOT NULL THEN NVL(SCC_SIGN_STATUS_FUN(SIGN_INSTANCE_ID1), 'DRAFT') END AS SIGN_PROGRESS_STATUS1
                    	, CASE WHEN SIGN_INSTANCE_ID2 IS NOT NULL THEN NVL(SCC_SIGN_STATUS_FUN(SIGN_INSTANCE_ID2), 'DRAFT') END AS SIGN_PROGRESS_STATUS2
                	FROM FSC_RESULT_MST
                    WHERE TABLE_TYPE = :tableType AND FORM_CD = :formCd AND UPJANG = :upjang  AND CHECK_DATE = :checkDate
               ) E
		 WHERE A.UPJANG       = :upjang
		   AND A.CHARGE_SABUN = B.SABUN(+)
		   AND A.UPJANG   = E.UPJANG(+)
	]]>
	</statement>
	
	<!-- 등록된 위생점검결과가 없을 경우 등록 목록을 조회한다. -->
	<statement name="selectDetailNewList" type="select">
	/*+ com.hwfs.ms.msc.saniCheckResultDAO.selectDetailNewList */
	<![CDATA[
		SELECT 'NEW' AS ROW_STATUS 
			, A.TABLE_TYPE
			, A.FORM_CD 
			, A.CLASS_CD 
			, A.LRG_CLASS_CD 
			, A.LRG_CLASS_NAME 
			, A.MIDDLE_CLASS_CD 
			, A.MIDDLE_CLASS_NAME 
			, A.CLASS_NAME 
			, A.MARK_1 
			, A.MARK_2 
			, A.MARK_3 
			, A.MARK_4 
			, A.MINUS_YN 
			, A.NOT_FIT_YN 
			, GREATEST(NVL(A.MARK_1,-999), NVL(A.MARK_2,-999), NVL(A.MARK_3,-999), NVL(A.MARK_4,-999)) MAX_MARK 
			, LEAST(NVL(A.MARK_1,999), NVL(A.MARK_2,999), NVL(A.MARK_3,999), NVL(A.MARK_4,999)) MIN_MARK 
			, :upjang AS UPJANG 
			, 0 AS INDICATE_CNT 
			, (SELECT MNGM_CNT FROM FSC_CLASS_MST WHERE TABLE_TYPE = A.TABLE_TYPE AND FORM_CD = A.FORM_CD AND CLASS_CD = A.MIDDLE_CLASS_CD) MNGM_CNT 
			, '' AS EVAL_CONTENTS
			, '' AS MAX_YN
			, :checkDate AS CHECK_DATE
		FROM FSC_FORM_DTL A 
		WHERE A.TABLE_TYPE = :tableType
			AND A.FORM_CD = :formCd
		ORDER BY A.CLASS_CD
    
	]]>
	</statement>
	
	

	<!-- 위생점검결과 목록을 조회한다. -->
	<statement name="selectDetailList" type="select">
	/*+ com.hwfs.ms.msc.saniCheckResultDAO.selectDetailList */
	<![CDATA[

		SELECT 'OLD' AS ROW_STATUS
			 , A.TABLE_TYPE
			 , A.FORM_CD
			 , A.CLASS_CD
			 , A.LRG_CLASS_CD
			 , A.LRG_CLASS_NAME
			 , A.MIDDLE_CLASS_CD
			 , A.MIDDLE_CLASS_NAME
			 , A.CLASS_NAME
			 , A.MARK_1
			 , A.MARK_2
			 , A.MARK_3
			 , A.MARK_4
			 , A.MINUS_YN
			 , A.NOT_FIT_YN
			 , B.UPJANG
			 , B.CHECK_DATE
			 , B.MARK
			 , B.INDICATE_CNT
			 , B.NOT_FIT_CNT
			 , B.EVAL_CONTENTS
			 , DECODE(B.MARK, NULL, NULL, A.MARK_1, '1', A.MARK_2, '2', A.MARK_3, '3', A.MARK_4, '4', '') AS CHK
			 , B.SCORE AS CHK_POINT
			 , GREATEST(NVL(A.MARK_1,-999), NVL(A.MARK_2,-999), NVL(A.MARK_3,-999), NVL(A.MARK_4,-999)) MAX_MARK
			 , LEAST(NVL(A.MARK_1,999), NVL(A.MARK_2,999), NVL(A.MARK_3,999), NVL(A.MARK_4,999)) MIN_MARK
			 , B.MAX_YN
			 , SIMPROV_PHOTO
			 , (SELECT COUNT(1)
				FROM FSC_CHK_IMGE
				WHERE TABLE_TYPE = B.TABLE_TYPE
				  AND FORM_CD = B.FORM_CD
				  AND UPJANG = B.UPJANG
				  AND CHK_DD = B.CHECK_DATE
				  AND CLASS_CD = B.CLASS_CD) AS IMGE_CNT
			 , (SELECT MNGM_CNT FROM FSC_CLASS_MST WHERE TABLE_TYPE = A.TABLE_TYPE AND FORM_CD = A.FORM_CD AND CLASS_CD = A.MIDDLE_CLASS_CD) MNGM_CNT
		  FROM FSC_FORM_DTL A
			 , FSC_RESULT_DTL B
		 WHERE A.TABLE_TYPE = B.TABLE_TYPE
		   AND A.FORM_CD = B.FORM_CD
		   AND A.CLASS_CD = B.CLASS_CD
		   AND A.TABLE_TYPE = :tableType
		   AND A.FORM_CD = :formCd
		   AND B.UPJANG = :upjang
		   AND B.CHECK_DATE = :checkDate
		 ORDER BY A.CLASS_CD
    
	]]>
	</statement>
	
	
	
	
	
	
	<!-- 위생점검등록 마스터 데이터 등록 -->
	<statement name="insertMaster" type="insert">
	/*+ com.hwfs.ms.msc.saniCheckResultDAO.insertMaster */
	<![CDATA[
	
		INSERT INTO FSC_RESULT_MST( 
			  TABLE_TYPE 
			, FORM_CD 
			, UPJANG 
			, CHECK_DATE 
			, CHECK_TYPE 
			, CHECK_SABUN 
			, TM_CD 
			, OPEN_DATE 
			, PERSON_CNT  -- select query in 
			, MEAL_CNT -- select query in 
			, MENU_CNT -- select query in 
			, SCORE  -- 총점
			, NOT_FIT_TOT_CNT -- 지적건 체크 건수 
			, INDICATE_CNT -- 지적건 체크 건수
			, NOT_FIT_YN -- 부적합여부(0:적합,1:부적합) 저장시 화면에서 상세내역 설정
			, ATTR01
			, CUSER 
			, CDATE 
			, UUSER 
			, UDATE 
		) VALUES (
			:tableType
			,:formCd
			,:upjang
			,:checkDate
			,:checkType
			,:checkSabun
			,:tmCd
			,:openDate
			,:personCnt
			,:mealCnt
			,:menuCnt
			,:score
			,:notFitTotCnt
			,:indicateCnt
			,:notFitYn
			,:attr01
			,:sabun
			,SYSDATE
			,:sabun
			,SYSDATE
			)
		 
	]]>
	</statement>
	
	
	
	<!-- 위생점검등록 마스터 데이터 등록 -->
	<statement name="updateMaster" type="update">
	/*+ com.hwfs.ms.msc.saniCheckResultDAO.updateMaster */
	<![CDATA[
	
		UPDATE FSC_RESULT_MST 
			SET CHECK_TYPE = :checkType 
			 , CHECK_SABUN = :checkSabun 
			 , TM_CD = :tmCd
			 , SCORE = :score
			 , NOT_FIT_TOT_CNT = :notFitTotCnt
			 , INDICATE_CNT = :indicateCnt
			 , NOT_FIT_YN = :notFitYn
			 , ATTR01 = :attr01
			 , UUSER = :sabun
			 , UDATE = SYSDATE 
			WHERE TABLE_TYPE = :tableType 
			AND FORM_CD = :formCd 
			AND UPJANG = :upjang
			AND CHECK_DATE = :checkDate
	
	]]>
	</statement>
	
	
	
	
	<!-- 위생점검등록 디테일 데이터 등록 -->
	<statement name="insertDetail" type="insert">
	/*+ com.hwfs.ms.msc.saniCheckResultDAO.insertDetail */
	<![CDATA[
	
		INSERT INTO FSC_RESULT_DTL( 
			TABLE_TYPE 
			, FORM_CD 
			, UPJANG 
			, CHECK_DATE 
			, CLASS_CD 
			, MARK 
			, SCORE 
			, INDICATE_CNT 
			, NOT_FIT_CNT 
			, EVAL_CONTENTS 
			, MAX_YN 
			, CUSER 
			, CDATE 
			, UUSER 
			, UDATE 
		) VALUES ( 
			:tableType
			, :formCd
			, :upjang
			, :checkDate
			, :classCd
			, :mark
			, :chkPoint
			, :indicateCnt
			 <#if notFitCnt?exists> ,:notFitCnt <#else> ,null </#if>
			, :evalContents
			, :maxYn 
			, :sabun 
			, SYSDATE 
			, :sabun 
			, SYSDATE 
		) 
	
	]]>
	</statement>
	
	
	<!-- 위생점검등록 디테일 데이터 수정 -->
	<statement name="updateDetail" type="update">
	/*+ com.hwfs.ms.msc.saniCheckResultDAO.updateDetail */
	<![CDATA[
	
		UPDATE FSC_RESULT_DTL 
		SET MARK = :mark
		  , SCORE = :chkPoint
		  , INDICATE_CNT = :indicateCnt
		  
		  <#if notFitCnt?exists> 
		  	, NOT_FIT_CNT = :notFitCnt
		  <#else> 
		  	, NOT_FIT_CNT = ''
		  </#if>
		  , EVAL_CONTENTS = :evalContents 
		  , MAX_YN = :maxYn 
		  , UUSER = :sabun 
		  , UDATE = SYSDATE
		WHERE TABLE_TYPE = :tableType 
		  AND FORM_CD = :formCd 
		  AND UPJANG = :upjang
		  AND CHECK_DATE = :checkDate 
		  AND CLASS_CD = :classCd
	
	]]>
	</statement>
	
	<!-- 위생점검등록 마스터 데이터 삭제 -->
	<statement name="deleteMaster" type="update">
	/*+ com.hwfs.ms.msc.saniCheckResultDAO.deleteMaster */
	<![CDATA[
		DELETE FROM FSC_RESULT_MST
		WHERE TABLE_TYPE = :tableType
		AND FORM_CD = :formCd
		AND UPJANG = :upjang
		AND CHECK_DATE = :checkDate 
	]]>
	</statement>
	
	<!-- 위생점검등록 디테일 데이터 삭제 -->
	<statement name="deleteDetail" type="update">
	/*+ com.hwfs.ms.msc.saniCheckResultDAO.deleteDetail */
	<![CDATA[
		DELETE FROM FSC_RESULT_DTL
		WHERE TABLE_TYPE = :tableType
		AND FORM_CD = :formCd
		AND UPJANG = :upjang
		AND CHECK_DATE = :checkDate 
	]]>
	</statement>
	
	<!-- 위생점검등록 첨부파일 데이터 삭제 -->
	<statement name="deletePhoto" type="update">
	/*+ com.hwfs.ms.msc.saniCheckResultDAO.deletePhoto */
	<![CDATA[
		DELETE FSC_RESULT_PHOTO
		WHERE TABLE_TYPE = :tableType
		AND FORM_CD = :formCd
		AND UPJANG = :upjang
		AND CHECK_DATE = :checkDate 
	]]>
	</statement>
	
	
	
	
	<!-- 담당자팝업 목록을 조회한다. -->
	<statement name="selectSabunList" type="select">
	/*+ com.hwfs.ms.msc.saniCheckResultDAO.selectSabunList */
	<![CDATA[
	
		SELECT A.SABUN, A.NM_KOR, TOT_CNT
		FROM ( SELECT ROWNUM RNUM, S.*
				FROM ( SELECT V.SABUN, V.NM_KOR AS NM_KOR, COUNT(*) OVER() TOT_CNT
						FROM SCO_FS_HR_PERSONAL_V V
						WHERE (1 = 1)
						<#if schName?has_content>
						AND V.NM_KOR LIKE '%' || :schName || '%'
						</#if>
						<#if schCode?has_content>
						AND V.SABUN  LIKE '%' || :schCode || '%'
						</#if>
					) S
			)A
		WHERE  ROWNUM <= :pageRow and RNUM >= :curPageNum
		<#if schName?has_content>
		AND    A.NM_KOR LIKE '%' || :schName || '%'
		</#if>
		<#if schCode?has_content>
		AND    A.SABUN  LIKE '%' || :schCode || '%'
		</#if>
	]]>
	</statement>
	
	<!-- 양식구분 코드를 조회한다. -->
	<statement name="selectFormCdList" type="select">
	/*+ com.hwfs.ms.msc.saniCheckResultDAO.selectFormCdList */
	<![CDATA[
		SELECT FORM_CD, FORM_NAME, TABLE_TYPE 
		FROM FSC_FORM_MST 
		WHERE USE_YN = 'Y' 
		  AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN START_DATE AND NVL(END_DATE,'99999999') 
		ORDER BY START_DATE DESC, FORM_CD
	]]>
	</statement>
	
	<!-- 양식구분 코드를 조회한다. -->
	<statement name="selectCommonCdList" type="select">
	/*+ com.hwfs.ms.msc.saniCheckResultDAO.selectCommonCdList */
	<![CDATA[
		SELECT A.CODE, A.CODE_NAME, A.SET1 
		FROM SCC_COMMON_CODE A, SCC_COMMON_GROUP B 
		WHERE A.GROUP_CODE = B.GROUP_CODE 
  		AND A.GROUP_CODE = :groupCode
  		AND A.USE_YN = 'Y' AND B.USE_YN = 'Y'
	]]>
	</statement>
	
	
	
	
</hqml>
