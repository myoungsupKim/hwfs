<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="fs.fso.marketerActMngtDAO">
	<desc>마케터별 실적관리 HQML Query</desc>
	
	<!-- 담당 마케터(급식,식재, 외식)를 조회한다. -->
	<statement name="selectPrcgEmpCd" type="select">
		/*+ com.hwfs.fs.fso.dao.objectMngtCardDAO.selectPrcgEmp */
		<![CDATA[
			 SELECT A.ORD
			       ,A.MARKETER_SABUN  CODE
		           ,A.MARKETER_SABUN_NM CODE_NAME
		       FROM (     
		              SELECT 1 ORD
		                    ,'' MARKETER_SABUN
		                    ,'선 택' MARKETER_SABUN_NM
		                FROM DUAL
		            UNION ALL  
		              SELECT 2 ORD
                             , B.MARKETER_SABUN
                             ,(SELECT A.NM_KOR FROM SCO_FS_HR_PERSONAL_V A WHERE A.SABUN = B.MARKETER_SABUN) MARKETER_SABUN_NM
                        FROM FSO_ACC_OBJECT_CARD  A,
                             FSO_MARKETER_DIV     B
                       WHERE A.MU_CD = B.MU_CD
                         AND A.TM_CD = B.TM_CD
                         AND A.OBJECT_CD = B.OBJECT_CD
		                 AND A.MU_CD = :muCd
		                 AND A.TM_CD = :tmCd
		           ) A
		     WHERE A.MARKETER_SABUN_NM IS NOT NULL
		  GROUP BY A.ORD, A.MARKETER_SABUN, A.MARKETER_SABUN_NM
		  ORDER BY A.ORD, A.MARKETER_SABUN, A.MARKETER_SABUN_NM
		]]>
	</statement>
	
	<!-- 실적목록을 조회한다. -->
	<statement name="selectProposalPlanList" type="select">
		/*+ com.hwfs.fs.fso.dao.MarketerActMngtDAO.selectProposalPlanList */
		<![CDATA[
		   SELECT A.ACC_MON,
			       (SUBSTR(A.ACC_MON, 5, 2)||'월') ACC_MON_NM,  
			       (SELECT D.CC_NM FROM HLDC_SC_DEPT_V D WHERE D.DEPT_ID = A.PRCG_DEPT) SUJU_DEPT_NM,
			       C.UPJANG_CD, 
			       (SELECT D.UPJANGNM FROM ST_UPJANG D WHERE D.UPJANG = C.UPJANG_CD) UPJANG_NM, 
			       B.MARKETER_SABUN, 
			       (SELECT D.NM_KOR FROM SCO_FS_HR_PERSONAL_V D WHERE D.SABUN = B.MARKETER_SABUN) MARKETER_SABUN_NM,
			       (SELECT D.CC_NM FROM SCO_FS_HR_PERSONAL_V D WHERE D.SABUN = B.MARKETER_SABUN) MARKETER_CC_NM
			  FROM FSO_ACC_OBJECT_CARD    A,
			       FSO_MARKETER_DIV       B,
			       FSO_ACC_OBJECT_UPJANG  C
			 WHERE A.TM_CD = :tmCd
			   AND A.MU_CD = B.MU_CD
			   AND A.TM_CD = B.TM_CD
			   AND A.OBJECT_CD = B.OBJECT_CD
			   <#if marketerSabun?has_content> AND B.MARKETER_SABUN = :marketerSabun </#if>
			   AND B.OBJECT_CD = C.OBJECT_CD
		]]>
	</statement>
	
	<!-- 계획대비 실적 목록을 조회한다. -->
	<statement name="selectMarketerActMngtList" type="select">
		/*+ com.hwfs.fs.fso.dao.MarketerActMngtDAO.selectMarketerActMngtList */
		<![CDATA[
			SELECT AB.MU_CD, AB.TM_CD, AB.ACCT_CLASS, SUM(AB.AMT_A) PLAN_AMT, SUM(AB.AMT_B) ACT_AMT, SUM(AB.AMT_B)-SUM(AB.AMT_A) AS PLAN_RATE_AMT,
                                                        SUM(AB.AMT_TOT_A) PLAN_AMT_SUM, SUM(AB.AMT_TOT_B) ACT_AMT_SUM, SUM(AB.AMT_TOT_B)-SUM(AB.AMT_TOT_A) AS PLAN_RATE_AMT_SUM
			  FROM (
			SELECT XYZ.MU_CD, XYZ.TM_CD, XYZ.UPJANG_CD, XYZ.ACCT_CLASS, 
			       CASE WHEN XYZ.MM = :accMon THEN DECODE(XYZ.GBN,'계획월',XYZ.AMT,0) END AS AMT_A,   -- 당월 품의
			       CASE WHEN XYZ.MM = :accMon THEN DECODE(XYZ.GBN,'실적월',XYZ.AMT,0) END AS AMT_B,   -- 당월 실적
			       CASE WHEN (XYZ.MM >= SUBSTR(:year,0,4)||'01' AND XYZ.MM <= :accMon) THEN DECODE(XYZ.GBN,'계획월',XYZ.AMT,0) END AS AMT_TOT_A,   --누적 품의
			       CASE WHEN (XYZ.MM >= SUBSTR(:year,0,4)||'01' AND XYZ.MM <= :accMon) THEN DECODE(XYZ.GBN,'실적월',XYZ.AMT,0) END AS AMT_TOT_B    -- 누적 실적 
			  FROM (
			     SELECT '계획월' AS GBN, X1.MU_CD, X1.TM_CD, X1.UPJANG_CD, X1.ACCT_CLASS, X1.MM, X1.MARKETER_SABUN, X1.AMT
			       FROM (
			                                  WITH V AS (
			                                                  SELECT B.MU_CD, B.TM_CD, B.UPJANG_CD, B.MARKETER_SABUN, A.ACCT_CLASS, B.PLAN_YEAR
			                                             		         ,NVL(SUM(B.M01_AMT),0) AMT_A1 ,NVL(SUM(B.M02_AMT),0) AMT_A2 ,NVL(SUM(B.M03_AMT),0) AMT_A3 ,NVL(SUM(B.M04_AMT),0) AMT_A4
			                                             		         ,NVL(SUM(B.M05_AMT),0) AMT_A5 ,NVL(SUM(B.M06_AMT),0) AMT_A6 ,NVL(SUM(B.M07_AMT),0) AMT_A7 ,NVL(SUM(B.M08_AMT),0) AMT_A8
			                                             		         ,NVL(SUM(B.M09_AMT),0) AMT_A9 ,NVL(SUM(B.M10_AMT),0) AMT_A10 ,NVL(SUM(B.M11_AMT),0) AMT_A11 ,NVL(SUM(B.M12_AMT),0) AMT_A12
			                                          		     FROM (                                                                              
			                                          		            SELECT '수주액' AS ACCT_CLASS  ,'S0000000' AS ACCT_CD  ,'수주액' AS ACCT_NM FROM DUAL     
			                                                              UNION ALL                                                                        
			                                          		            SELECT CONTENTS ACCT_CLASS  ,CODE ACCT_CD   ,CODE_NAME ACCT_NM
			                                          		              FROM SCC_COMMON_CODE
			                                          		             WHERE GROUP_CODE = 'ACCT_CD'
			                                          		            					     AND SET1  = 'Y' 	/* 급식용 */
			                                          		          ) A
			                                          		         ,FSO_IF_ACC_PLAN B     /* 수주 마케터 배부 관리 */
			                                          		    WHERE A.ACCT_CD    = B.ACCT_CD
			                                          		      AND B.PLAN_YEAR  = SUBSTR(:year,0,4)
			                                          		      AND B.VER_CD     = :verCd     /* 구분 */
			                                          		      AND B.MU_CD      = :muCd
			                                          		      <#if marketerSabun?has_content>AND B.MARKETER_SABUN =  :marketerSabun	</#if>	  
			                                          	   	  GROUP BY B.MU_CD, B.TM_CD, B.UPJANG_CD, B.MARKETER_SABUN, A.ACCT_CLASS, B.PLAN_YEAR
			                                            )
			                                               SELECT MU_CD, TM_CD, UPJANG_CD, MARKETER_SABUN, ACCT_CLASS, 
			                                                      DECODE(LV, 1, V.PLAN_YEAR||'01', 2, V.PLAN_YEAR||'02', 3, V.PLAN_YEAR||'03',   4, V.PLAN_YEAR||'04',  5, V.PLAN_YEAR||'05',   6, V.PLAN_YEAR||'06', 
			                                                                 7, V.PLAN_YEAR||'07', 8, V.PLAN_YEAR||'08', 9, V.PLAN_YEAR||'09',  10, V.PLAN_YEAR||'10', 11, V.PLAN_YEAR||'11',  12, V.PLAN_YEAR||'12' ) AS MM, 
			                                                      DECODE(LV, 1, V.AMT_A1, 2, V.AMT_A2, 3, V.AMT_A3,  4, V.AMT_A4,  5, V.AMT_A5,  6, V.AMT_A6, 
			                                                                 7, V.AMT_A8, 8, V.AMT_A8, 9, V.AMT_A9, 10, V.AMT_A10, 11, V.AMT_A11, 12, V.AMT_A12) AS AMT
			                                                         
			                                                 FROM V , 
			                                                      (
			                                                         SELECT LEVEL LV FROM DUAL CONNECT BY LEVEL <= 12
			                                                      )
			              ) X1       
			UNION
			     SELECT '실적월' AS GBN, X.MU_CD, X.TM_CD, X.UPJANG, X.ACCT_CLASS, X.MM, Y.MARKETER_SABUN, ROUND(X.AMT * (Y.DIVRAT /100)) AS AMT
			              FROM (
			                           SELECT *
			                             FROM (
			                                       WITH T AS (
			                                                    SELECT A.FISCAL_YEAR, A.MU_CD ,A.TM_CD, A.UPJANG, B.ACCT_CLASS     
			                                                          ,SUM(NVL(A.MM_AMT_01, 0)) MM_AMT_01 ,SUM(NVL(A.MM_AMT_02, 0)) MM_AMT_02    ,SUM(NVL(A.MM_AMT_03, 0)) MM_AMT_03 ,SUM(NVL(A.MM_AMT_04, 0)) MM_AMT_04    
			                                                          ,SUM(NVL(A.MM_AMT_05, 0)) MM_AMT_05 ,SUM(NVL(A.MM_AMT_06, 0)) MM_AMT_06    ,SUM(NVL(A.MM_AMT_07, 0)) MM_AMT_07 ,SUM(NVL(A.MM_AMT_08, 0)) MM_AMT_08    
			                                                          ,SUM(NVL(A.MM_AMT_09, 0)) MM_AMT_09 ,SUM(NVL(A.MM_AMT_10, 0)) MM_AMT_10    ,SUM(NVL(A.MM_AMT_11, 0)) MM_AMT_11 ,SUM(NVL(A.MM_AMT_12, 0)) MM_AMT_12
			                                                     FROM (                                                                              
			                                                            SELECT B.MU_CD, B.TM_CD, B.UPJANG, A.ACCT_CD, A.FISCAL_YEAR                                                    
			                                                                  ,A.MM_AMT_01, A.MM_AMT_02, A.MM_AMT_03, A.MM_AMT_04, A.MM_AMT_05, A.MM_AMT_06, A.MM_AMT_07, A.MM_AMT_08, A.MM_AMT_09, A.MM_AMT_10, A.MM_AMT_11, A.MM_AMT_12        
			                                                                  ,'0' AS SUM_AMT                                                        
			                                                              FROM MAP_UPJANG_PL A
			                                                                  ,MAC_UPJANG_V B                                                         
			                                                             WHERE 1=1
			                                                               AND A.CC_CD = B.CC_CD
			                                                               AND A.PL_CLASS = 'OR'
			                                                               AND A.FISCAL_YEAR = SUBSTR(:year,0,4)
			                                                               AND B.TM_CD  = :tmCd                                     
			                                                          ) A                                                           
			                                                         ,(                                                                                                            
			                                                                  SELECT CODE ACCT_CD  ,CODE_NAME ACCT_NM  ,CONTENTS ACCT_CLASS
			                                                                    FROM SCC_COMMON_CODE
			                                                                   WHERE GROUP_CODE = 'ACCT_CD'
			                                                                    <#if saupType=="C">
																				     AND SET1  = 'Y' 	/* 급식용 */
																				<#else>
																					<#if saupType=="E">
																					    AND SET3  = 'Y' 	/* 식재용 */
																					<#else>
																					    <#if saupType=="A">	
																					        AND SET2  = 'Y' 	/* 외식용 */
																					    <#else>
																					    	AND 1=2
																						</#if>
																					</#if>
																				</#if>                                                                          
			                                                          ) B
			                                                    WHERE B.ACCT_CD = A.ACCT_CD
			                                                    GROUP BY A.MU_CD, A.TM_CD, A.UPJANG, B.ACCT_CLASS, A.FISCAL_YEAR
			                                               ) 
			                                               SELECT MU_CD, TM_CD, UPJANG, ACCT_CLASS, 
			                                                      DECODE(LV, 1, T.FISCAL_YEAR||'01', 2, T.FISCAL_YEAR||'02', 3, T.FISCAL_YEAR||'03',   4, T.FISCAL_YEAR||'04',  5, T.FISCAL_YEAR||'05',   6, T.FISCAL_YEAR||'06', 
			                                                                 7, T.FISCAL_YEAR||'07', 8, T.FISCAL_YEAR||'08', 9, T.FISCAL_YEAR||'09',  10, T.FISCAL_YEAR||'10', 11, T.FISCAL_YEAR||'11',  12, T.FISCAL_YEAR||'12' ) AS MM, 
			                                                      DECODE(LV, 1, T.MM_AMT_01, 2, T.MM_AMT_02, 3, T.MM_AMT_03,  4, T.MM_AMT_04,  5, T.MM_AMT_05,  6, T.MM_AMT_06, 
			                                                                 7, T.MM_AMT_07, 8, T.MM_AMT_08, 9, T.MM_AMT_09, 10, T.MM_AMT_10, 11, T.MM_AMT_11, 12, T.MM_AMT_12) AS AMT
			                                                         
			                                                 FROM T , 
			                                                      (
			                                                         SELECT LEVEL LV FROM DUAL CONNECT BY LEVEL <= 12
			                                                      )
			                                   ) AA
			                                   UNION 
			                                    SELECT A.MU_CD, A.TM_CD, C.UPJANG_CD, '수주액' AS ACCT_CLASS, A.ACC_MON, A.ACC_AMT
			                                      FROM FSO_ACC_OBJECT_CARD    A,
			                                           FSO_ACC_OBJECT_UPJANG  C
			                                     WHERE A.MU_CD = :muCd
			                                       AND A.TM_CD = :tmCd
			                                       AND A.OBJECT_CD = C.OBJECT_CD
			                   ) X ,
			                   ( 
			                            SELECT A.ACC_MON,   C.UPJANG_CD,   B.MARKETER_SABUN,   B.DIVRAT
			                              FROM FSO_ACC_OBJECT_CARD    A,
			                                   FSO_MARKETER_DIV       B,
			                                   FSO_ACC_OBJECT_UPJANG  C
			                             WHERE A.MU_CD = B.MU_CD
			                               AND A.TM_CD = B.TM_CD
			                               AND A.MU_CD = :muCd
			                               AND A.OBJECT_CD = B.OBJECT_CD
			                               AND B.OBJECT_CD = C.OBJECT_CD
			                   ) Y
			              WHERE X.UPJANG = Y.UPJANG_CD
			                AND X.MM >=    Y.ACC_MON
			                AND X.AMT <> 0
			     ) XYZ
			) AB
			GROUP BY AB.MU_CD, AB.TM_CD, AB.ACCT_CLASS
			ORDER BY decode(AB.ACCT_CLASS, '수주액',1,'매출액',2,'재료비',3,'노무비',4,'경비',5)
		]]>
	</statement>
	
	<!-- 계획 리스트를 조회한다. -->
	<statement name="selectPlanList" type="select">
		/*+ com.hwfs.fs.fso.dao.MarketerActMngtDAO.selectPlanList */
		<![CDATA[		   
		   SELECT B.MARKETER_SABUN
                  ,A.ACCT_CLASS
   		         ,NVL(SUM(B.M01_AMT),0) M01_AMT
   		         ,NVL(SUM(B.M02_AMT),0) M02_AMT
   		         ,NVL(SUM(B.M03_AMT),0) M03_AMT
   		         ,NVL(SUM(B.M04_AMT),0) M04_AMT
   		         ,NVL(SUM(B.M05_AMT),0) M05_AMT
   		         ,NVL(SUM(B.M06_AMT),0) M06_AMT
   		         ,NVL(SUM(B.M07_AMT),0) M07_AMT
   		         ,NVL(SUM(B.M08_AMT),0) M08_AMT
   		         ,NVL(SUM(B.M09_AMT),0) M09_AMT
   		         ,NVL(SUM(B.M10_AMT),0) M10_AMT
   		         ,NVL(SUM(B.M11_AMT),0) M11_AMT
   		         ,NVL(SUM(B.M12_AMT),0) M12_AMT
		     FROM (                                                                              
		            SELECT '수주액' AS ACCT_CLASS
                          ,'S0000000' AS ACCT_CD
                          ,'수주액' AS ACCT_NM FROM DUAL     
                    UNION ALL                                                                        
		            SELECT CONTENTS ACCT_CLASS
		                  ,CODE ACCT_CD
		                  ,CODE_NAME ACCT_NM
		              FROM SCC_COMMON_CODE
		             WHERE GROUP_CODE = 'ACCT_CD'
		            <#if saupType=="C">
					     AND SET1  = 'Y' 	/* 급식용 */
					<#else>
						<#if saupType=="E">
						    AND SET3  = 'Y' 	/* 식재용 */
						<#else>
						    <#if saupType=="A">	
						        AND SET2  = 'Y' 	/* 외식용 */
						    <#else>
						    	AND 1=2
							</#if>
						</#if>
					</#if>
		          ) A
		         ,FSO_IF_ACC_PLAN B     /* 수주 마케터 배부 관리 */
		    WHERE A.ACCT_CD    = B.ACCT_CD
		      AND B.PLAN_YEAR  = SUBSTR(:year, 0, 4)
		      AND B.VER_CD     = :verCd     /* 구분 */
		      AND B.MU_CD      = :muCd
		      <#if marketerSabun?has_content> AND B.MARKETER_SABUN =  :marketerSabun</#if>		  
		 GROUP BY B.MARKETER_SABUN, A.ACCT_CLASS
		 ORDER BY DECODE(A.ACCT_CLASS, '수주액',1,'매출액',2,'재료비',3,'노무비',4,'경비',5)
		]]>
	</statement>
	
	<!-- 실적 리스트를 조회한다. -->
	<statement name="selectActList" type="select">
		/*+ com.hwfs.fs.fso.dao.MarketerActMngtDAO.selectActList */
		<![CDATA[		   
		    SELECT AAA.MU_CD, AAA.TM_CD, AAA.MARKETER_SABUN, AAA.ACCT_CLASS,
			       SUM(DECODE(SUBSTR(AAA.MM,5,2),'01',AAA.AMT_DIV,0)) AS MM_AMT_01,
			       SUM(DECODE(SUBSTR(AAA.MM,5,2),'02',AAA.AMT_DIV,0)) AS MM_AMT_02,
			       SUM(DECODE(SUBSTR(AAA.MM,5,2),'03',AAA.AMT_DIV,0)) AS MM_AMT_03,
			       SUM(DECODE(SUBSTR(AAA.MM,5,2),'04',AAA.AMT_DIV,0)) AS MM_AMT_04,
			       SUM(DECODE(SUBSTR(AAA.MM,5,2),'05',AAA.AMT_DIV,0)) AS MM_AMT_05,
			       SUM(DECODE(SUBSTR(AAA.MM,5,2),'06',AAA.AMT_DIV,0)) AS MM_AMT_06,
			       SUM(DECODE(SUBSTR(AAA.MM,5,2),'07',AAA.AMT_DIV,0)) AS MM_AMT_07,
			       SUM(DECODE(SUBSTR(AAA.MM,5,2),'08',AAA.AMT_DIV,0)) AS MM_AMT_08,
			       SUM(DECODE(SUBSTR(AAA.MM,5,2),'09',AAA.AMT_DIV,0)) AS MM_AMT_09,
			       SUM(DECODE(SUBSTR(AAA.MM,5,2),'10',AAA.AMT_DIV,0)) AS MM_AMT_10,
			       SUM(DECODE(SUBSTR(AAA.MM,5,2),'11',AAA.AMT_DIV,0)) AS MM_AMT_11,
			       SUM(DECODE(SUBSTR(AAA.MM,5,2),'12',AAA.AMT_DIV,0)) AS MM_AMT_12
			  FROM (
			            SELECT X.MU_CD, X.TM_CD, X.UPJANG, X.ACCT_CLASS, X.MM, Y.MARKETER_SABUN, ROUND(X.AMT * (Y.DIVRAT /100)) AS AMT_DIV
			              FROM (
			                           SELECT *
			                             FROM (
			                                       WITH T AS (
			                                                    SELECT A.FISCAL_YEAR, A.MU_CD ,A.TM_CD, A.UPJANG, B.ACCT_CLASS     
			                                                          ,SUM(NVL(A.MM_AMT_01, 0)) MM_AMT_01 ,SUM(NVL(A.MM_AMT_02, 0)) MM_AMT_02    ,SUM(NVL(A.MM_AMT_03, 0)) MM_AMT_03 ,SUM(NVL(A.MM_AMT_04, 0)) MM_AMT_04    
			                                                          ,SUM(NVL(A.MM_AMT_05, 0)) MM_AMT_05 ,SUM(NVL(A.MM_AMT_06, 0)) MM_AMT_06    ,SUM(NVL(A.MM_AMT_07, 0)) MM_AMT_07 ,SUM(NVL(A.MM_AMT_08, 0)) MM_AMT_08    
			                                                          ,SUM(NVL(A.MM_AMT_09, 0)) MM_AMT_09 ,SUM(NVL(A.MM_AMT_10, 0)) MM_AMT_10    ,SUM(NVL(A.MM_AMT_11, 0)) MM_AMT_11 ,SUM(NVL(A.MM_AMT_12, 0)) MM_AMT_12
			                                                     FROM (                                                                              
			                                                            SELECT B.MU_CD, B.TM_CD, B.UPJANG, A.ACCT_CD, A.FISCAL_YEAR                                                    
			                                                                  ,A.MM_AMT_01, A.MM_AMT_02, A.MM_AMT_03, A.MM_AMT_04, A.MM_AMT_05, A.MM_AMT_06, A.MM_AMT_07, A.MM_AMT_08, A.MM_AMT_09, A.MM_AMT_10, A.MM_AMT_11, A.MM_AMT_12        
			                                                                  ,'0' AS SUM_AMT                                                        
			                                                              FROM MAP_UPJANG_PL A
			                                                                  ,MAC_UPJANG_V B                                                         
			                                                             WHERE 1=1
			                                                               AND A.CC_CD = B.CC_CD
			                                                               AND A.PL_CLASS = 'OR'
			                                                               AND A.FISCAL_YEAR = SUBSTR(:year,0,4)
			                                                               AND B.TM_CD  = :tmCd                                      
			                                                          ) A                                                           
			                                                         ,(                                                                                                            
			                                                                  SELECT CODE ACCT_CD  ,CODE_NAME ACCT_NM  ,CONTENTS ACCT_CLASS
			                                                                    FROM SCC_COMMON_CODE
			                                                                   WHERE GROUP_CODE = 'ACCT_CD'
			                                                                    <#if saupType=="C">
																				     AND SET1  = 'Y' 	/* 급식용 */
																				<#else>
																					<#if saupType=="E">
																					    AND SET3  = 'Y' 	/* 식재용 */
																					<#else>
																					    <#if saupType=="A">	
																					        AND SET2  = 'Y' 	/* 외식용 */
																					    <#else>
																					    	AND 1=2
																						</#if>
																					</#if>
																				</#if>                                                                       
			                                                          ) B
			                                                    WHERE B.ACCT_CD = A.ACCT_CD
			                                                    GROUP BY A.MU_CD, A.TM_CD, A.UPJANG, B.ACCT_CLASS, A.FISCAL_YEAR
			                                               ) 
			                                               SELECT MU_CD, TM_CD, UPJANG, ACCT_CLASS, 
			                                                      DECODE(LV, 1, T.FISCAL_YEAR||'01', 2, T.FISCAL_YEAR||'02', 3, T.FISCAL_YEAR||'03',   4, T.FISCAL_YEAR||'04',  5, T.FISCAL_YEAR||'05',   6, T.FISCAL_YEAR||'06', 
			                                                                 7, T.FISCAL_YEAR||'07', 8, T.FISCAL_YEAR||'08', 9, T.FISCAL_YEAR||'09',  10, T.FISCAL_YEAR||'10', 11, T.FISCAL_YEAR||'11',  12, T.FISCAL_YEAR||'12' ) AS MM, 
			                                                      DECODE(LV, 1, T.MM_AMT_01, 2, T.MM_AMT_02, 3, T.MM_AMT_03,  4, T.MM_AMT_04,  5, T.MM_AMT_05,  6, T.MM_AMT_06, 
			                                                                 7, T.MM_AMT_07, 8, T.MM_AMT_08, 9, T.MM_AMT_09, 10, T.MM_AMT_10, 11, T.MM_AMT_11, 12, T.MM_AMT_12) AS AMT
			                                                         
			                                                 FROM T , 
			                                                      (
			                                                         SELECT LEVEL LV FROM DUAL CONNECT BY LEVEL <= 12
			                                                      )
			                                   ) AA
			                                   UNION 
			                                    SELECT A.MU_CD, A.TM_CD, C.UPJANG_CD, '수주액' AS ACCT_CLASS, A.ACC_MON, A.ACC_AMT
			                                      FROM FSO_ACC_OBJECT_CARD    A,
			                                           FSO_ACC_OBJECT_UPJANG  C
			                                     WHERE A.MU_CD = :muCd
			                                       AND A.TM_CD = :tmCd
			                                       AND A.OBJECT_CD = C.OBJECT_CD
			                   ) X ,
			                   ( 
			                            SELECT A.ACC_MON,   C.UPJANG_CD,   B.MARKETER_SABUN,   B.DIVRAT
			                              FROM FSO_ACC_OBJECT_CARD    A,
			                                   FSO_MARKETER_DIV       B,
			                                   FSO_ACC_OBJECT_UPJANG  C
			                             WHERE A.MU_CD = B.MU_CD
			                               AND A.TM_CD = B.TM_CD
			                               AND A.MU_CD = :muCd
			                               AND A.OBJECT_CD = B.OBJECT_CD
			                               AND B.OBJECT_CD = C.OBJECT_CD
			                   ) Y
			              WHERE X.UPJANG = Y.UPJANG_CD
			                AND X.MM >=    Y.ACC_MON
			                AND X.AMT <> 0
			      ) AAA
			  WHERE 1=1
			  <#if marketerSabun?has_content> AND AAA.MARKETER_SABUN =  :marketerSabun</#if>		 
			  GROUP BY AAA.MU_CD, AAA.TM_CD, AAA.MARKETER_SABUN, AAA.ACCT_CLASS
			  ORDER BY DECODE(AAA.ACCT_CLASS, '수주액',1,'매출액',2,'재료비',3,'노무비',4,'경비',5)
		]]>
	</statement>	
</hqml>
