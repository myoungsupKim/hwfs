<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="sc.cmn.systemCommon">
	<desc>시스템에서 사용되는 공통코드()</desc>

	<!-- 기본적인 공통코드의 정보를 조회한다. -->
	<statement name="selectComCode" type="select">
		/*+ com.hwfs.cmn.dao.SystemCommonDAO.selectComCode */
		<![CDATA[
SELECT GROUP_CODE
     , CODE
     , CODE_NAME
     , SORT_SEQ
     , SYSTEM_YN
     , SET1
     , SET2
     , SET3
     , SET4
     , SET5
     , ATTR01
     , ATTR02
     , ATTR03
     , ATTR04
     , ATTR05
     , ATTR06
     , ATTR07
     , ATTR08
     , ATTR09
     , ATTR10
     , USE_YN
FROM   SCC_COMMON_CODE
WHERE  GROUP_CODE IN (:groupCode)
<#if code?has_content>AND    CODE= :code</#if>
<#if useYn?has_content>AND    USE_YN = :useYn</#if>
<#if set1?has_content>AND    SET1 = :set1</#if>
<#if set2?has_content>AND    SET2 = :set2</#if>
<#if set3?has_content>AND    SET3 = :set3</#if>
<#if set4?has_content>AND    SET4 = :set4</#if>
<#if set5?has_content>AND    SET5 = :set5</#if>
<#if attr01?has_content>AND    ATTR01 = :attr01</#if>
<#if attr02?has_content>AND    ATTR02 = :attr02</#if>
<#if attr03?has_content>AND    ATTR03 = :attr03</#if>
<#if attr04?has_content>AND    ATTR04 = :attr04</#if>
<#if attr05?has_content>AND    ATTR05 = :attr05</#if>
<#if attr06?has_content>AND    ATTR06 = :attr06</#if>
<#if attr07?has_content>AND    ATTR07 = :attr07</#if>
<#if attr08?has_content>AND    ATTR08 = :attr08</#if>
<#if attr09?has_content>AND    ATTR09 = :attr09</#if>
<#if attr10?has_content>AND    ATTR10 = :attr10</#if>
<#if value?has_content>AND    (UPPER(CODE) LIKE '%' || UPPER(:value) || '%' OR CODE_NAME LIKE '%' || :value || '%')</#if>
ORDER BY GROUP_CODE, SORT_SEQ
        ]]>
	</statement>


	<statement name="selectComCode2" type="select">
		/*+ com.hwfs.cmn.dao.SystemCommonDAO.selectComCode2 */
		<![CDATA[
SELECT GROUP_CODE
     , CODE
     , CODE_NAME
     , SORT_SEQ
     , SYSTEM_YN
     , SET1
     , SET2
     , SET3
     , SET4
     , SET5
     , ATTR01
     , ATTR02
     , ATTR03
     , ATTR04
     , ATTR05
     , ATTR06
     , ATTR07
     , ATTR08
     , ATTR09
     , ATTR10
     , USE_YN
FROM   SCC_COMMON_CODE
WHERE  GROUP_CODE IN (:groupCode)
ORDER BY GROUP_CODE, SORT_SEQ
        ]]>
	</statement>

	<!-- 시스템정보를 조회한다. -->
	<statement name="selectSystem" type="select">
		/*+ com.hwfs.cmn.dao.SystemCommonDAO.selectSystem */
		<![CDATA[
SELECT SYS_ID,
       SYS_NAME,
       SYS_ID AS CODE,
       SYS_NAME AS CODE_NAME,
       SYS_TYPE,
       CONTENTS,
       USE_YN,
       SORT_SEQ,
       ATTR01,
       ATTR02,
       ATTR03,
       ATTR04,
       ATTR05,
       ATTR06,
       ATTR07,
       ATTR08,
       ATTR09,
       ATTR10
FROM   SCC_SYSTEM
WHERE  1=1
<#if sysType?has_content>AND SYS_TYPE = :sysType </#if>
<#if sysId1?has_content> AND SYS_ID = :sysId </#if>
<#if sysName?has_content>AND SYS_NAME = :sysName </#if>
<#if useYn?has_content>  AND USE_YN = :useYn </#if>
<#if attr01?has_content> AND ATTR01 = :attr01</#if>
<#if attr02?has_content> AND ATTR02 = :attr02</#if>
<#if attr03?has_content> AND ATTR03 = :attr03</#if>
<#if attr04?has_content> AND ATTR04 = :attr04</#if>
<#if attr05?has_content> AND ATTR05 = :attr05</#if>
<#if attr06?has_content> AND ATTR06 = :attr06</#if>
<#if attr07?has_content> AND ATTR07 = :attr07</#if>
<#if attr08?has_content> AND ATTR08 = :attr08</#if>
<#if attr09?has_content> AND ATTR09 = :attr09</#if>
<#if attr10?has_content> AND ATTR10 = :attr10</#if>
<#if value?has_content>  AND (SYS_ID LIKE '%' || :value || '%' OR SYS_NAME LIKE '%' || :value || '%')</#if>
ORDER BY SORT_SEQ, SYS_ID
        ]]>
	</statement>

	<!-- MU(사업부) 정보를 조회한다. -->
	<statement name="selectMU" type="select">
		/*+ com.hwfs.cmn.dao.SystemCommonDAO.selectMU */
		<![CDATA[
SELECT DISTINCT
       MU_CD AS CODE,
       MU_NM AS CODE_NAME,
       MU_CD AS MU_CD,
       MU_NM AS MU_NM
FROM   HLDC_SC_DEPT_V
WHERE  BU_CD = '2000'
<#if muCd?has_content>AND MU_CD = :muCd </#if>
<#if muNm?has_content>AND MU_NM = :muNm </#if>
<#if value?has_content>AND (MU_CD LIKE '%' || :value || '%' OR MU_NM LIKE '%' || :value || '%')</#if>
ORDER BY MU_CD
        ]]>
	</statement>

	<!-- 매입사코드 -->
	<statement name="selectBuyCpnyCode" type="select">
		/*+ com.hwfs.cmn.dao.SystemCommonDAO.selectBuyCpnyCode */
		<![CDATA[
SELECT BUYCPNY_CD,
       BUYCPNY_NM,
       BUYCPNY_CD AS CODE,
       BUYCPNY_NM AS CODE_NAME
FROM   SLA_BUY_CPNY_MGMT
WHERE  RECD_STATUS = 'L'
<#if value?has_content>  AND (BUYCPNY_CD LIKE '%' || :value || '%' OR BUYCPNY_NM LIKE '%' || :value || '%')</#if>
ORDER BY BUYCPNY_CD ASC
        ]]>
	</statement>

	<!-- 카드사코드 -->
	<statement name="selectCardComCode" type="select">
		/*+ com.hwfs.cmn.dao.SystemCommonDAO.selectCardComCode */
		<![CDATA[
SELECT CARD_COM_CD,
       CARD_COM_NM,
       CARD_COM_CD AS CODE,
       CARD_COM_NM AS CODE_NAME
FROM   SLA_CARD_COM_MGMT
WHERE  RECD_STATUS = 'L'
<#if value?has_content>  AND (CARD_COM_CD LIKE '%' || :value || '%' OR CARD_COM_NM LIKE '%' || :value || '%')</#if>
ORDER BY CARD_COM_CD ASC
        ]]>
	</statement>

	<!-- CC정보를 조회한다. -->
	<statement name="selectCcCode" type="select">
		/*+ com.hwfs.cmn.dao.SystemCommonDAO.selectCcCode */
		<![CDATA[
SELECT  A.CC_CD AS CODE,
        A.CC_NM AS CODE_NAME,
        A.CC_CD,
        A.CC_NM,
        A.BU_CD,
        A.MU_CD,
        A.HLEVEL_ORG_MGMT_CD AS HLEVEL_ORG_CD,
        A.CST_PLNKGVRN_CLASS_CD,
        A.START_DATE,
        A.END_DATE,
        A.WITHHOLD_TAX_CD,
        B.TM_CD,
        B.TM_NM
FROM    SCC_CC A,
        HLDC_SC_DEPT_V B
WHERE   B.CC_CD = A.CC_CD
AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
<#if buCd?has_content>AND A.BU_CD = :buCd </#if>
<#if muCd?has_content>AND A.MU_CD = :muCd </#if>
<#if ccCd?has_content>AND A.CC_CD = :ccCd </#if>
<#if ccNm?has_content>AND A.CC_NM = :ccNm </#if>
<#if tmCd?has_content>AND B.TM_CD = :tmCd </#if>
<#if value?has_content>AND (A.CC_CD LIKE '%' || :value || '%' OR A.CC_NM LIKE '%' || :value || '%')</#if>
        ]]>
	</statement>

	<!-- 계정정보를 조회한다. -->
	<statement name="selectAccCode" type="select">
		/*+ com.hwfs.cmn.dao.SystemCommonDAO.selectAccCode */
		<![CDATA[
SELECT  ACCTCD AS CODE
        ,ACCTNM6 AS CODE_NAME
        ,BUNGAE
        ,BALDIV
        ,ACCT_TYPE
FROM    ST_ACCOUNT
WHERE   1=1
AND     BU_CD = '2000'
<#if acctCd?has_content>AND ACCTCD= :acctCd </#if>
<#if acctNm?has_content>AND ACCTNM6 = :acctNm </#if>
<#if value?has_content>AND (ACCTCD LIKE '%' || :value || '%' OR ACCTNM6 LIKE '%' || :value || '%')</#if>
        ]]>
	</statement>

	<!-- 용역사원정보를 조회한다. -->
	<statement name="selectPartTimeEmpCode" type="select">
		/*+ com.hwfs.cmn.dao.SystemCommonDAO.selectPartTimeEmpCode */
		<![CDATA[
SELECT  A.PART_TIME_EMP_SABUN,
        A.UPJANG,
        A.PART_TIME_EMP_NM,
        A.PART_TIME_SALARY_CD,
        A.DUTY_YN,
        A.CUST_CD,
        (SELECT  C.CODE_NAME
        FROM    SCC_COMMON_CODE C
        WHERE   C.GROUP_CODE = 'PART_TIME_CUST_CD'
        AND     C.CODE = A.CUST_CD
        AND     C.USE_YN = 'Y'
        ) CUST_NM,
        A.SORT_ORDER,
        A.PART_TIME_EMP_SABUN AS CODE,
        A.PART_TIME_EMP_NM AS CODE_NAME
FROM    RSS_PART_TIME_TRGLST_INFO A
WHERE   1 = 1
<#if partTimeEmpSabun?has_content>AND A.PART_TIME_EMP_SABUN= :partTimeEmpSabun </#if>
<#if partTimeEmpNm?has_content>AND A.PART_TIME_EMP_NM = :partTimeEmpNm </#if>
<#if upjang?has_content>AND A.UPJANG = :upjang </#if>
<#if value?has_content>AND (A.PART_TIME_EMP_SABUN LIKE '%' || :value || '%' OR A.PART_TIME_EMP_NM LIKE '%' || :value || '%')</#if>
ORDER BY A.SORT_ORDER]]></statement>

	<!-- 레시피를 조회한다. -->
	<statement name="selectRecipe" type="select">
		/*+ com.hwfs.cmn.dao.SystemCommonDAO.selectRecipe */
		<![CDATA[
SELECT A.STD_RECIPE_CD AS CODE,
       A.RECIPE_NM AS CODE_NAME,
       A.STD_RECIPE_CD,
       A.RECIPE_NM,
       A.STAND,
       --CH201701_00216 투입재료량 필드 추가 이다미 요청(김호석) 
       NVL((SELECT SUM(B.NEED_QTY) FROM RSS_STD_RECIPE_CD_DETAIL B WHERE A.STD_RECIPE_CD = B.STD_RECIPE_CD AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND EDATE),0) AS NEED_QTY,	--투입재료량
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'STAND_TYPE' AND CODE = A.STAND) AS STAND_NM,
       A.MCALSS_CD,
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'MCALSS_CD' AND CODE = A.MCALSS_CD) AS MCALSS_CD_NM,
       A.SCLASS_CD,
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'SCLASS_CD' AND CODE = A.SCLASS_CD) AS SCLASS_CD_NM,
       A.UNIT_CD,
       A.OFFER_UNIT,
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'OFFER_UNIT' AND CODE = A.OFFER_UNIT) AS OFFER_UNIT_NM,
       A.COOK_UNIT,
       A.SALE_PRICE
       --,NVL(FN_STD_INVEST_AMT_NEW(A.MU_CD, A.UPJANG_TYPE, A.STD_RECIPE_CD, TO_CHAR(SYSDATE, 'YYYYMMDD'), '1'), 0) AS CST_AMT
FROM   RSS_STD_RECIPE_CD_MST A
WHERE 1 = 1
AND   A.MU_CD = :muCd
AND	  A.USE_YN = 'Y'
AND   NVL(A.SML_YN, 'N') = 'N'
<#if upjangType?has_content>
AND   (A.UPJANG_TYPE = :upjangType OR A.UPJANG_TYPE = '99')
</#if>
<#if value?has_content>
AND   (A.STD_RECIPE_CD LIKE '%' || :value || '%' OR UPPER(A.RECIPE_NM) LIKE '%' || UPPER(:value) || '%')
</#if>
<#if recipeGbn == "SML">
UNION ALL
SELECT A.STD_RECIPE_CD AS CODE,
       A.RECIPE_NM AS CODE_NAME,
       A.STD_RECIPE_CD,
       A.RECIPE_NM,
       A.STAND,
       --CH201701_00216 투입재료량 필드 추가 이다미 요청(김호석) 
       NVL((SELECT SUM(B.NEED_QTY) FROM RSS_STD_RECIPE_CD_DETAIL B WHERE A.STD_RECIPE_CD = B.STD_RECIPE_CD AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN SDATE AND EDATE),0) AS NEED_QTY,	--투입재료량
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'STAND_TYPE' AND CODE = A.STAND) AS STAND_NM,
       A.MCALSS_CD,
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'MCALSS_CD' AND CODE = A.MCALSS_CD) AS MCALSS_CD_NM,
       A.SCLASS_CD,
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'SCLASS_CD' AND CODE = A.SCLASS_CD) AS SCLASS_CD_NM,
       A.UNIT_CD,
       A.OFFER_UNIT,
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'OFFER_UNIT' AND CODE = A.OFFER_UNIT) AS OFFER_UNIT_NM,
       A.COOK_UNIT,
       A.SALE_PRICE
       --,NVL(FN_STD_INVEST_AMT_NEW(A.MU_CD, A.UPJANG_TYPE, A.STD_RECIPE_CD, TO_CHAR(SYSDATE, 'YYYYMMDD'), '1'), 0) AS CST_AMT
FROM   RSS_STD_RECIPE_CD_MST A
WHERE 1 = 1
AND   A.MU_CD = :muCd
AND	  A.USE_YN = 'Y'
AND   NVL(A.SML_YN, 'N') = 'Y'
<#if upjangType?has_content>
AND   (A.UPJANG_TYPE = :upjangType OR A.UPJANG_TYPE = '99')
</#if>
<#if smlUpjang?has_content>
AND   A.SML_UPJANG = :smlUpjang
</#if>
<#if value?has_content>
AND   (A.STD_RECIPE_CD LIKE '%' || :value || '%' OR UPPER(A.RECIPE_NM) LIKE '%' || UPPER(:value) || '%')
</#if>
</#if>
ORDER BY STD_RECIPE_CD ASC
        ]]></statement>


	<!-- 특정 시스템에서 사용하는 권한 목록을 조회한다. -->
	<statement name="selectSystemRole" type="select">
		/*+ com.hwfs.cmn.dao.SystemCommonDAO.selectSystemRole */
		<![CDATA[
SELECT A.ROLE AS CODE,
       A.ROLE_NAME AS CODE_NAME,
       A.ROLE,
       A.ROLE_NAME
FROM   SCC_ROLE A
WHERE  1 = 1
AND    A.ROLE_TYPE = '본부'
and    A.USE_YN = 'Y'
<#if sysType?has_content>
AND    A.SYS_TYPE = :sysType
</#if>
<#if useCd?has_content>
AND    A.USE_CD = :useCd
</#if>
<#if value?has_content>
AND   (A.ROLE LIKE '%' || :value || '%' OR A.ROLE_NAME LIKE '%' || :value || '%')
</#if>
ORDER BY ROLE
        ]]>
	</statement>


	<!-- 테이블의 컬럼 정보를 조회한다. -->
	<statement name="selectColInfo" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectColInfo */
		<![CDATA[
SELECT CNAME,
       COLTYPE,
       WIDTH,
       PRECISION,
       DECODE(NULLS, 'NOT NULL', '1', '0') AS NULLS,
       1 AS SELECT_YN,
       NULL AS WHERE_YN
FROM   COL
WHERE  TNAME = UPPER(:tname)
ORDER BY COLNO
        ]]>
	</statement>

	<!-- 테이블의 컬럼의 PK 정보를 조회한다. -->
	<statement name="selectColPkInfo" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectColPkInfo */
		<![CDATA[
SELECT A.COLUMN_NAME
FROM   USER_CONS_COLUMNS A,
       USER_CONSTRAINTS B
WHERE  B.CONSTRAINT_NAME = A.CONSTRAINT_NAME
AND    B.CONSTRAINT_TYPE = 'P'
AND    A.TABLE_NAME = UPPER(:tname)
ORDER BY A.POSITION
        ]]>
	</statement>

	<!-- 사용자의 정보를 가져온다.(SESSION에 없는 것) -->
	<statement name="selectUserInfo" type="select">
		/*+ com.hwfs.cmn.dao.SystemCommonDAO.selectUserInfo */
		<![CDATA[
SELECT SCC_TELNO_SPLIT_FUN(A.TEL_NO, 1) AS TEL_NO1,
       SCC_TELNO_SPLIT_FUN(A.TEL_NO, 2) AS TEL_NO2,
       SCC_TELNO_SPLIT_FUN(A.TEL_NO, 3) AS TEL_NO3,
       SCC_TELNO_SPLIT_FUN(A.HP_NO, 1) AS HP_NO1,
       SCC_TELNO_SPLIT_FUN(A.HP_NO, 2) AS HP_NO2,
       SCC_TELNO_SPLIT_FUN(A.HP_NO, 3) AS HP_NO3,
       SCC_TELNO_SPLIT_FUN(A.FAX_NO, 1) AS FAX_NO1,
       SCC_TELNO_SPLIT_FUN(A.FAX_NO, 2) AS FAX_NO2,
       SCC_TELNO_SPLIT_FUN(A.FAX_NO, 3) AS FAX_NO3,
       A.EMAIL_ADDR,
       A.POST_NO AS UPJANG_POST_NO,
       CASE WHEN A.POST_NO IS NULL THEN '' ELSE SUBSTR(A.POST_NO, 1, 3) END AS UPJANG_POST_NO1,
       CASE WHEN A.POST_NO IS NULL THEN '' ELSE SUBSTR(A.POST_NO, 4) END AS UPJANG_POST_NO2,
       A.ADDR AS UPJANG_ADDR,
       A.DTL_ADDR AS UPJANG_DTL_ADDR
FROM   (SELECT SCC_CRYPTO.MASKAUTH_FUN(A.TEL_NO_ENC, 9, :persInfoMask, :maskAuth) AS TEL_NO,
               SCC_CRYPTO.MASKAUTH_FUN(A.HP_NO_ENC, 8, :persInfoMask, :maskAuth) AS HP_NO,
               SCC_CRYPTO.MASKAUTH_FUN(A.FAX_NO_ENC, 9, :persInfoMask, :maskAuth) AS FAX_NO,
               SCC_CRYPTO.MASKAUTH_FUN(A.EMAIL_ENC, 7, :persInfoMask, :maskAuth) AS EMAIL_ADDR,
               REPLACE(B.POST_NO, '-' ,'') AS POST_NO,
               B.ADDR,
               SCC_CRYPTO.MASKAUTH_FUN(B.DETAIL_ADDR_ENC, 10, :persInfoMask, :maskAuth) AS DTL_ADDR
        FROM   SCC_USERINFO A,
               ST_UPJANG B
        WHERE  B.UPJANG(+) = A.UPJANG
        AND    A.SABUN = :sabun) A
        ]]>
	</statement>

	<!-- 거래처를 조회한다.(매출등록) -->
	<statement name="selectCustNm" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectCustNm */
		<![CDATA[
		SELECT DISTINCT
		       B.CUSTCD CODE,
		       TO_CHAR(B.CUSTCD) AS CUST_CODE,
		       B.SAP_CUST_CD,
		       B.CUST_GRP_CD,
		       B.CUSTTYPE,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'Z01' AND CODE = B.CUSTTYPE) AS CUSTTYPENM,
		       B.CUSTGUBUN,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'Z02' AND CODE = B.CUSTGUBUN) AS CUSTGUBUNNM,
		       B.CUSTNM CODE_NAME,
		       B.CUSTNM AS CUST_NAME,
		       B.CUST_CORP_NM,
		       B.TEL_NO_ENC,
		       B.HAND_PHONE_ENC,
		       B.FAX_NO_ENC,
		       B.EMAIL_ADDR_ENC,
		       B.ADDR_KEY,
		       SCC_GET_ADDR_FUN('CLASS' , B.ADDR_KEY, '', '') AS ADDR_GUBUN,
		       SCC_GET_ADDR_FUN('ZIP'   , B.ADDR_KEY, '', '') AS POST_NO,
		       SCC_GET_ADDR_FUN('BASE'  , B.ADDR_KEY, '', '') AS ADDR,
		       SCC_GET_ADDR_FUN('DETAIL', B.ADDR_KEY, 'YYYYNNNNNNNNNNN', '0') AS DETAIL_ADDR_ENC,
		       SCC_ADDR_FUN(B.ADDR_KEY, 'YYYYNNNNNNNNNNN', '0') AS ADDR_INFO,
		       B.FULL_BSN_NO,
		       B.SABUN,
		       B.FRGN_CUST_CD,
		       B.SAUPNO,
		       B.SUB_UPJANG_NUM,
		       B.BUBINNO,
		       B.DRNAME1,
		       B.DRNAME2,
		       B.UP_JONG,
		       B.UP_TAE,
		       B.NATION_CD,
		       B.CURRENCY_CD,
		       B.ELCTN_TAX_BILL_YN,
		       B.VAT_CUSTGUBUN,
		       B.AR_PAY_POSS_YN,
		       B.C_PER_NAME,
		       B.INCHARGE_DEPT_NM,
		       B.C_PER_TELNO_ENC,
		       B.C_PART_FAX_ENC,
		       B.C_PER_HPNO_ENC,
		       B.C_PER_EMAIL_ENC,
		       B.PO_TYPE,
		       B.PO_CENTER_YN,
		       B.PO_USEYN,
		       B.SUBINV_CODE,
		       B.SUBINV_CODE_OUTVAT,
		       B.MRO_FLAG,
		       B.CUST_CREATION_YN,
		       B.CUST_ACCT_CD,
		       B.CUST_PAY_COND,
		       B.VENDOR_CREATION_YN,
		       B.VENDOR_ACCT_CD,
		       B.VENDOR_PAY_COND,
		       B.DEL_YN,
		       B.RTN_REASON,
		       B.PROC_RESULT,
		       B.PROC_RESULT_MSG,
		       B.CHG_REASON,
		       B.CUST_REQUEST_SYS_CD,
		       B.CUST_REQUEST_NUM,
		       B.INSPECT_TYPE,
		       B.PROC_TYPE,
		       B.HLEVEL_CUST_CD,
		       B.OLD_CUST_CD,
		       B.USE_YN,
		       A.RELEASE_PRIORITY
		FROM   SCO_UPJANG_CUST A,
		       ST_CUST B
		WHERE  B.CUSTCD = A.CUSTCD
		<#if upjang?has_content>
		AND    A.UPJANG = :upjang
		</#if>
		AND A.USE_YN = 'Y'
		<#if value?has_content>AND    (UPPER(B.CUSTCD) LIKE '%' || UPPER(:value) || '%' OR B.CUSTNM LIKE '%' || :value || '%')</#if>
		UNION ALL
		SELECT DISTINCT
		       B.CUSTCD CODE,
		       TO_CHAR(B.CUSTCD) AS CUST_CODE,
		       B.SAP_CUST_CD,
		       B.CUST_GRP_CD,
		       B.CUSTTYPE,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'Z01' AND CODE = B.CUSTTYPE) AS CUSTTYPENM,
		       B.CUSTGUBUN,
		       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'Z02' AND CODE = B.CUSTGUBUN) AS CUSTGUBUNNM,
		       B.CUSTNM CODE_NAME,
		       B.CUSTNM AS CUST_NAME,
		       B.CUST_CORP_NM,
		       B.TEL_NO_ENC,
		       B.HAND_PHONE_ENC,
		       B.FAX_NO_ENC,
		       B.EMAIL_ADDR_ENC,
		       B.ADDR_KEY,
		       SCC_GET_ADDR_FUN('CLASS' , B.ADDR_KEY, '', '') AS ADDR_GUBUN,
		       SCC_GET_ADDR_FUN('ZIP'   , B.ADDR_KEY, '', '') AS POST_NO,
		       SCC_GET_ADDR_FUN('BASE'  , B.ADDR_KEY, '', '') AS ADDR,
		       SCC_GET_ADDR_FUN('DETAIL', B.ADDR_KEY, 'YYYYNNNNNNNNNNN', '0') AS DETAIL_ADDR_ENC,
		       SCC_ADDR_FUN(B.ADDR_KEY, 'YYYYNNNNNNNNNNN', '0') AS ADDR_INFO,
		       B.FULL_BSN_NO,
		       B.SABUN,
		       B.FRGN_CUST_CD,
		       B.SAUPNO,
		       B.SUB_UPJANG_NUM,
		       B.BUBINNO,
		       B.DRNAME1,
		       B.DRNAME2,
		       B.UP_JONG,
		       B.UP_TAE,
		       B.NATION_CD,
		       B.CURRENCY_CD,
		       B.ELCTN_TAX_BILL_YN,
		       B.VAT_CUSTGUBUN,
		       B.AR_PAY_POSS_YN,
		       B.C_PER_NAME,
		       B.INCHARGE_DEPT_NM,
		       B.C_PER_TELNO_ENC,
		       B.C_PART_FAX_ENC,
		       B.C_PER_HPNO_ENC,
		       B.C_PER_EMAIL_ENC,
		       B.PO_TYPE,
		       B.PO_CENTER_YN,
		       B.PO_USEYN,
		       B.SUBINV_CODE,
		       B.SUBINV_CODE_OUTVAT,
		       B.MRO_FLAG,
		       B.CUST_CREATION_YN,
		       B.CUST_ACCT_CD,
		       B.CUST_PAY_COND,
		       B.VENDOR_CREATION_YN,
		       B.VENDOR_ACCT_CD,
		       B.VENDOR_PAY_COND,
		       B.DEL_YN,
		       B.RTN_REASON,
		       B.PROC_RESULT,
		       B.PROC_RESULT_MSG,
		       B.CHG_REASON,
		       B.CUST_REQUEST_SYS_CD,
		       B.CUST_REQUEST_NUM,
		       B.INSPECT_TYPE,
		       B.PROC_TYPE,
		       B.HLEVEL_CUST_CD,
		       B.OLD_CUST_CD,
		       B.USE_YN,
		       9999999 AS RELEASE_PRIORITY
		FROM   SLA_BUY_CPNY_MGMT A,
		       ST_CUST B
		WHERE  B.CUSTCD = A.CUST_CD
		<#if value?has_content>AND    (UPPER(B.CUSTCD) LIKE '%' || UPPER(:value) || '%' OR B.CUSTNM LIKE '%' || :value || '%')</#if>
		ORDER BY RELEASE_PRIORITY
                    
		]]>
	</statement>

	<!-- 매출유형을 조회한다.(매출등록) -->
	<statement name="selectSalsType" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectSalsType */
		<![CDATA[
		SELECT  CC.TYPE_GRP_CD      TYPE_GRP_CD
                            ,SA.SALS_TYPE       CODE
                            ,SA.SALS_TYPE_NM    CODE_NAME
                            ,SA.USE_YN
                            ,CC.CC_CD
                            ,CC.MU_CD
                            ,DD.ACCT_CD
                    FROM    SLA_SALES_SALS_TYPE SA
                            ,(
                             SELECT  AA.CC_CD
                                    ,AA.TM_CD
                                    ,A.TYPE_GRP_CD
                                    ,A.TYPE_CD
                                    ,A.MU_CD
                            FROM    SLA_TM_USE_TYPE_CD A
                                    ,HLDC_SC_DEPT_V AA
                            WHERE   A.TM_CD = AA.TM_CD
                            AND     A.TYPE_GRP_CD = 'REV2'
                            AND     SCC_GET_TM_BY_CC('CODE',AA.CC_CD) = :schTm
                            AND     AA.CC_CD = :ccCd
                            AND     AA.CC_CD NOT IN  (
                                                    SELECT  AAA.CC_CD
                                                    FROM    SLA_UPJANG_USE_TYPE_CD AAA
                                                    WHERE   AAA.MU_CD = A.MU_CD
                                                    AND     AAA.CC_CD = AA.CC_CD
                                                    AND     AAA.TYPE_GRP_CD = A.TYPE_GRP_CD
                                                    AND     AAA.TYPE_CD = A.TYPE_CD
                                                    )
                            UNION ALL
                            SELECT  B.CC_CD
                                    ,BB.TM_CD
                                    ,B.TYPE_GRP_CD
                                    ,B.TYPE_CD
                                    ,B.MU_CD
                            FROM    SLA_UPJANG_USE_TYPE_CD B
                                    ,HLDC_SC_DEPT_V BB
                            WHERE   B.CC_CD = BB.CC_CD
                            AND     B.TYPE_GRP_CD = 'REV2'
                            AND     SCC_GET_TM_BY_CC('CODE',B.CC_CD) = :schTm
                            AND     B.CC_CD = :ccCd
                            ) CC
                            ,SLA_TYPE_CD_MST DD
                    WHERE   SA.SALS_TYPE    = CC.TYPE_CD
                    AND     SA.USE_YN       = 'Y'
                    AND     SA.TYPE_GRP_CD = DD.TYPE_GRP_CD
                    AND     SA.TYPE_CD = DD.TYPE_CD
                    <#if ccCd != "317300">
                    			-- AND     SUBSTR(SA.SALS_TYPE, 0, 1) <> '2'
                    			AND SA.SYS_CLASS NOT IN ('20','21','22') 
                   </#if> 			 
                    <#if value?has_content>AND    (UPPER(SA.SALS_TYPE) LIKE '%' || UPPER(:value) || '%' OR SA.SALS_TYPE_NM LIKE '%' || :value || '%')</#if>
		]]>
	</statement>

	<!-- 창고검색 목록을 조회한다.(매출등록) -->
	<statement name="selectPosList" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectPosList */
		<![CDATA[
		
		SELECT  CODE
			     ,CODE_NAME
			     ,OUTVAT_FLAG
			     ,EXPENSE_ACCTCD
    FROM (
				SELECT SUBINV_CODE AS CODE
				     ,SUBINV_NAME  AS CODE_NAME
				     ,OUTVAT_FLAG
				     ,EXPENSE_ACCTCD
				     , SUBSTR(SUBINV_CODE,1,1) AS SEQ
	          		 , SUBSTR(SUBINV_CODE,2,1) AS SEQ1
				  FROM HLDC_PO_SUBINVENTORY 
				 WHERE 1=1
				 AND USE_YN='Y' 
				 AND  (SUBSTR(SUBINV_CODE,0,1) = 'A' OR SUBSTR(SUBINV_CODE,0,1) = 'C')
				 <#if acctCd?has_content>AND EXPENSE_ACCTCD = :acctCd</#if>
			   --AND  SALE_FLAG='Y'
			   	 <#if upjangCd?has_content>AND  UPJANG= :upjangCd</#if>
				 <#if ccCd?has_content>AND  CC_CD = :ccCd</#if>
				 <#if value?has_content>AND    (UPPER(SUBINV_CODE) LIKE '%' || UPPER(:value) || '%' OR SUBINV_NAME LIKE '%' || :value || '%')</#if>
				 ORDER BY SEQ DESC, SEQ1 ASC
			 )
		]]>
	</statement>

	<!-- 과세 목록을 조회한다.(매출등록) -->
	<statement name="selectVatClassList" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectVatClassList */
		<![CDATA[
		SELECT VAT_CD CODE
		       ,VAT_NM  CODE_NAME
		       FROM SLA_VAT_CD_MST
		WHERE 1=1 
<#if muCd?has_content>
	<#if muCd == "2005">
		AND VAT_CD IN('20','21','43','X', '10', '40')
	<#else>
		AND VAT_CD IN('20','21','43','X')
	</#if>
<#else>
		AND VAT_CD IN('20','21','43','X')
</#if>
		]]>
	</statement>

	<!-- 끼니 목록을 조회한다.(매출등록) -->
	<statement name="selectBldTypeList" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectBldTypeList */
		<![CDATA[
			SELECT GROUP_CODE
			     , CODE
			     , CODE_NAME
			     , SORT_SEQ
			     , SYSTEM_YN
			     , SET1
			     , SET2
			     , SET3
			     , SET4
			     , SET5
			     , ATTR01
			     , ATTR02
			     , ATTR03
			     , ATTR04
			     , ATTR05
			     , ATTR06
			     , ATTR07
			     , ATTR08
			     , ATTR09
			     , ATTR10
			     , USE_YN
			FROM   SCC_COMMON_CODE
			WHERE  GROUP_CODE IN (:groupCode)
			--매출유형이 식음료매출(FS)이고 매출구분에 따라 끼니 표시
			<#if attr10?has_content>
				<#if attr10 == '01'> 
					 AND CODE != '006'
				<#else>
					 AND CODE = '006'
			    </#if>
			</#if> 
			<#if code?has_content>AND    CODE= :code</#if>
			<#if useYn?has_content>AND    USE_YN = :useYn</#if>
			<#if set1?has_content>AND    SET1 = :set1</#if>
			<#if set2?has_content>AND    SET2 = :set2</#if>
			<#if set3?has_content>AND    SET3 = :set3</#if>
			<#if set4?has_content>AND    SET4 = :set4</#if>
			<#if set5?has_content>AND    SET5 = :set5</#if>
			<#if attr01?has_content>AND    ATTR01 = :attr01</#if>
			<#if attr02?has_content>AND    ATTR02 = :attr02</#if>
			<#if attr03?has_content>AND    ATTR03 = :attr03</#if>
			<#if attr04?has_content>AND    ATTR04 = :attr04</#if>
			<#if attr05?has_content>AND    ATTR05 = :attr05</#if>
			<#if attr06?has_content>AND    ATTR06 = :attr06</#if>
			<#if attr07?has_content>AND    ATTR07 = :attr07</#if>
			<#if attr08?has_content>AND    ATTR08 = :attr08</#if>
			<#if attr09?has_content>AND    ATTR09 = :attr09</#if>
			<#if attr10?has_content>
					--AND    ATTR10 = :attr10				
			</#if>
			<#if value?has_content>AND    (UPPER(CODE) LIKE '%' || UPPER(:value) || '%' OR CODE_NAME LIKE '%' || :value || '%')</#if>
			ORDER BY GROUP_CODE, SORT_SEQ
        ]]>
	</statement>
	
	<!-- 매출구분 목록을 조회한다.(매출등록) -->
	<statement name="selectSaleGubunList" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectSaleGubunList */
		<![CDATA[
			SELECT GROUP_CODE
			     , CODE
			     , CODE_NAME
			     , SORT_SEQ
			     , SYSTEM_YN
			     , SET1
			     , SET2
			     , SET3
			     , SET4
			     , SET5
			     , ATTR01
			     , ATTR02
			     , ATTR03
			     , ATTR04
			     , ATTR05
			     , ATTR06
			     , ATTR07
			     , ATTR08
			     , ATTR09
			     , ATTR10
			     , USE_YN
			FROM   SCC_COMMON_CODE
			WHERE  GROUP_CODE IN (:groupCode)
			<#if code?has_content>AND    CODE= :code</#if>
			<#if useYn?has_content>AND    USE_YN = :useYn</#if>
			<#if set1?has_content>AND    SET1 = :set1</#if>
			<#if set2?has_content>AND    SET2 = :set2</#if>
			<#if set3?has_content>AND    SET3 = :set3</#if>
			<#if set4?has_content>AND    SET4 = :set4</#if>
			<#if set5?has_content>AND    SET5 = :set5</#if>
			<#if attr01?has_content>AND    ATTR01 = :attr01</#if>
			<#if attr02?has_content>AND    ATTR02 = :attr02</#if>
			<#if attr03?has_content>AND    ATTR03 = :attr03</#if>
			<#if attr04?has_content>AND    ATTR04 = :attr04</#if>
			<#if attr05?has_content>AND    ATTR05 = :attr05</#if>
			<#if attr06?has_content>AND    ATTR06 = :attr06</#if>
			<#if attr07?has_content>AND    ATTR07 = :attr07</#if>
			<#if attr08?has_content>AND    ATTR08 = :attr08</#if>
			<#if attr09?has_content>AND    ATTR09 = :attr09</#if>
			<#if attr10?has_content>AND    ATTR10 = :attr10</#if>
			<#if value?has_content>AND    (UPPER(CODE) LIKE '%' || UPPER(:value) || '%' OR CODE_NAME LIKE '%' || :value || '%')</#if>
			ORDER BY GROUP_CODE, SORT_SEQ
        ]]>
	</statement>

	<!-- 지불유형 목록을 조회한다.(매출등록) -->
	<statement name="selectPmntTypeList" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectPmntTypeList */
		<![CDATA[
			SELECT  CC.TYPE_GRP_CD      TYPE_GRP_CD
                            ,SA.PAY_TYPE       CODE
                            ,SA.PAY_TYPE_NM    CODE_NAME
                            ,SA.USE_YN
                            ,CC.CC_CD
                            ,CC.MU_CD
                            ,DD.ACCT_CD
                    FROM    SLA_SALES_PAY_TYPE SA
                            ,(
                             SELECT  AA.CC_CD
                                    ,AA.TM_CD
                                    ,A.TYPE_GRP_CD
                                    ,A.TYPE_CD
                                    ,A.MU_CD
                            FROM    SLA_TM_USE_TYPE_CD A
                                    ,HLDC_SC_DEPT_V AA
                            WHERE   A.TM_CD = AA.TM_CD
                            AND     A.TYPE_GRP_CD = 'PAY2'
                            AND     SCC_GET_TM_BY_CC('CODE',AA.CC_CD) = :schTm
                            AND     AA.CC_CD = :ccCd
                            AND     AA.CC_CD NOT IN  (
                                                    SELECT  AAA.CC_CD
                                                    FROM    SLA_UPJANG_USE_TYPE_CD AAA
                                                    WHERE   AAA.MU_CD = A.MU_CD
                                                    AND     AAA.CC_CD = AA.CC_CD
                                                    AND     AAA.TYPE_GRP_CD = A.TYPE_GRP_CD
                                                    AND     AAA.TYPE_CD = A.TYPE_CD
                                                    )
                            UNION ALL
                            SELECT  B.CC_CD
                                    ,BB.TM_CD
                                    ,B.TYPE_GRP_CD
                                    ,B.TYPE_CD
                                    ,B.MU_CD
                            FROM    SLA_UPJANG_USE_TYPE_CD B
                                    ,HLDC_SC_DEPT_V BB
                            WHERE   B.CC_CD = BB.CC_CD
                            AND     B.TYPE_GRP_CD = 'PAY2'
                            AND     SCC_GET_TM_BY_CC('CODE',B.CC_CD) = :schTm
                            AND     B.CC_CD = :ccCd
                            ) CC
                            ,SLA_TYPE_CD_MST DD
                    WHERE   SA.PAY_TYPE    = CC.TYPE_CD
                    AND     SA.USE_YN       = 'Y'
                    AND     SA.TYPE_GRP_CD = DD.TYPE_GRP_CD
                    AND     SA.TYPE_CD = DD.TYPE_CD
                    <#if value?has_content>AND    (UPPER(SA.PAY_TYPE) LIKE '%' || UPPER(:value) || '%' OR SA.PAY_TYPE_NM LIKE '%' || :value || '%')</#if>
        ]]>
	</statement>

	<!-- 상품권 목록을 조회한다.(매출등록-외식사업부) -->
	<statement name="selectGiftTypeList" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectGiftTypeList */
		<![CDATA[
			SELECT GROUP_CODE
			     , CODE
			     , CODE_NAME
			     , SORT_SEQ
			     , SYSTEM_YN
			     , SET1
			     , SET2
			     , SET3
			     , SET4
			     , SET5
			     , ATTR01
			     , ATTR02
			     , ATTR03
			     , ATTR04
			     , ATTR05
			     , ATTR06
			     , ATTR07
			     , ATTR08
			     , ATTR09
			     , ATTR10
			     , USE_YN
			FROM   SCC_COMMON_CODE
			WHERE  GROUP_CODE IN (:groupCode)
			<#if code?has_content>AND    CODE= :code</#if>
			<#if useYn?has_content>AND    USE_YN = :useYn</#if>
			<#if set1?has_content>AND    SET1 = :set1</#if>
			<#if set2?has_content>AND    SET2 = :set2</#if>
			<#if set3?has_content>AND    SET3 = :set3</#if>
			<#if set4?has_content>AND    SET4 = :set4</#if>
			<#if set5?has_content>AND    SET5 = :set5</#if>
			<#if attr01?has_content>AND    ATTR01 = :attr01</#if>
			<#if attr02?has_content>AND    ATTR02 = :attr02</#if>
			<#if attr03?has_content>AND    ATTR03 = :attr03</#if>
			<#if attr04?has_content>AND    ATTR04 = :attr04</#if>
			<#if attr05?has_content>AND    ATTR05 = :attr05</#if>
			<#if attr06?has_content>AND    ATTR06 = :attr06</#if>
			<#if attr07?has_content>AND    ATTR07 = :attr07</#if>
			<#if attr08?has_content>AND    ATTR08 = :attr08</#if>
			<#if attr09?has_content>AND    ATTR09 = :attr09</#if>
			<#if attr10?has_content>AND    ATTR10 = :attr10</#if>
			<#if value?has_content>AND    (UPPER(CODE) LIKE '%' || UPPER(:value) || '%' OR CODE_NAME LIKE '%' || :value || '%')</#if>
			ORDER BY GROUP_CODE, SORT_SEQ
        ]]>
	</statement>

	<!-- 직군 목록을 조회한다.(기존업장 정보조회) -->
	<statement name="selectJobList" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectJobList */
		<![CDATA[
			SELECT JOB_CD CODE
		        ,JOB_NAME CODE_NAME
		    FROM MAS_JOB
		    WHERE USE_YN <> 'L'
			ORDER BY JOB_CD
        ]]>
	</statement>

	<!-- 상세직군 목록을 조회한다.(기존업장 정보조회) -->
	<statement name="selectSubJobList" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectSubJobList */
		<![CDATA[
			SELECT A.JOB_CD
					,A.JOB_NAME
					,B.SUB_JOB_CD CODE
					,B.SUB_JOB_NAME CODE_NAME
				FROM MAS_JOB A
					,MAS_JOB_SUB B
			   WHERE A.JOB_CD = B.JOB_CD
				 AND A.USE_YN <> 'L'
			   ORDER BY A.JOB_CD, B.SUB_JOB_CD
        ]]>
	</statement>


	<!-- 이 주석 아래는 지워야 한다. -->


	<!-- 기본적인 공통코드의 정보를 조회한다. -->
	<statement name="selectCommonCode" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectCommonCode */
		<![CDATA[
SELECT GROUP_CODE
     , CODE
     , CODE_NAME
     , SORT_SEQ
     , SYSTEM_YN
     , SET1
     , SET2
     , SET3
     , SET4
     , SET5
     , ATTR01
     , ATTR02
     , ATTR03
     , ATTR04
     , ATTR05
     , ATTR06
     , ATTR07
     , ATTR08
     , ATTR09
     , ATTR10
     , USE_YN
FROM   SCC_COMMON_CODE
WHERE  GROUP_CODE = :groupCode
AND    (CODE LIKE '%' || :value || '%' OR CODE_NAME LIKE '%' || :value || '%')
<#if useYn?has_content>AND    USE_YN = :useYn</#if>
<#if set1?has_content>AND    SET1 = :set1</#if>
<#if set2?has_content>AND    SET2 = :set2</#if>
<#if set3?has_content>AND    SET3 = :set3</#if>
<#if set4?has_content>AND    SET4 = :set4</#if>
<#if set5?has_content>AND    SET5 = :set5</#if>
<#if attr01?has_content>AND    ATTR01 = :attr01</#if>
<#if attr02?has_content>AND    ATTR02 = :attr02</#if>
<#if attr03?has_content>AND    ATTR03 = :attr03</#if>
<#if attr04?has_content>AND    ATTR04 = :attr04</#if>
<#if attr05?has_content>AND    ATTR05 = :attr05</#if>
<#if attr06?has_content>AND    ATTR06 = :attr06</#if>
<#if attr07?has_content>AND    ATTR07 = :attr07</#if>
<#if attr08?has_content>AND    ATTR08 = :attr08</#if>
<#if attr09?has_content>AND    ATTR09 = :attr09</#if>
<#if attr10?has_content>AND    ATTR10 = :attr10</#if>
ORDER BY SORT_SEQ
        ]]>
	</statement>

	<!-- 일정관리 게시 배포그룹 지정 팝업 - 센터 (Combo에서 사용할 수 있도록 code, codename 추가)-->
	<statement name="selectScCenter" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectScCenter */
		<![CDATA[
SELECT CENTER_CODE
     , CENTER_NAME
     , CENTER_CODE AS CODE
     , CENTER_NAME AS CODE_NAME
     , CENTER_TYPE
     , USE_YN
     , ATTR01
     , ATTR02
     , WMS_USE
FROM   HLDC_PO_CENTER
WHERE  1=1
<#if value?has_content>AND    (CENTER_CODE LIKE '%' || :value || '%' OR CENTER_NAME LIKE '%' || :value || '%')</#if>
<#if useYn?has_content>AND    USE_YN = :useYn</#if>
<#if centerType?has_content>AND    CENTER_TYPE = :centerType</#if>
<#if attr01?has_content>AND    ATTR01 = :attr01</#if>
<#if attr02?has_content>AND    ATTR02 = :attr02</#if>
<#if wmsUse?has_content>AND    WMS_USE = :wmsUse</#if>
ORDER BY CENTER_CODE
        ]]>
	</statement>

	<!-- 일정관리 게시 배포그룹 지정 팝업 - 운영부서 -->
	<statement name="selectScTm" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectScTm */
		<![CDATA[
SELECT DISTINCT
       C.TM_CD,
       C.TM_NAME
FROM   HLDC_PO_UPJANG_CENTER A,
       HLDC_PO_CENTER B,
       MAC_UPJANG_V C
WHERE  A.USE_YN = 'Y'
AND    A.UPJANG = C.AP_UNITPRICE_UPJANG
AND    A.CENTER_CODE = B.CENTER_CODE
AND    (C.TM_CD LIKE '%' || :value || '%' OR C.TM_NAME LIKE '%' || :value || '%')
<#if centerName?has_content>AND    B.CENTER_NAME LIKE :centerName || '%'</#if>
        ]]>
	</statement>

	<!-- 일정관리 게시 배포그룹 지정 팝업 - 사업장(SCC70021P에서만 사용) -->
	<statement name="selectScUp" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectScUp */
		<![CDATA[
SELECT DISTINCT
       A.UPJANG,
       C.UPJANGNM
FROM   HLDC_PO_UPJANG_CENTER A,
       HLDC_PO_CENTER B,
       MAC_UPJANG_V C
WHERE  A.USE_YN = 'Y'
AND    A.UPJANG = C.AP_UNITPRICE_UPJANG
AND    A.CENTER_CODE = B.CENTER_CODE
AND    (A.UPJANG LIKE '%' || :value || '%' OR C.UPJANGNM LIKE '%' || :value || '%')
<#if centerName?has_content>AND    B.CENTER_NAME LIKE :centerName || '%'</#if>
<#if tmName?has_content>AND    C.TM_NAME LIKE :tmName || '%'</#if>
        ]]>
	</statement>

	<!-- 업장정보조회 -->
	<statement name="selectUpjang" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectUpjang */
		<![CDATA[
SELECT A.UPJANG,
       A.UPJANGNM
FROM   SCO_UPJANG_MST_V A
WHERE  (1 = 1)
AND    (FICS_YN = 'N')
AND    (A.UPJANG LIKE '%' || :value || '%' OR A.UPJANGNM LIKE '%' || :value || '%')
<#if isSikJaeSales?has_content>
    <#if isSikJaeSales == "Y">
    <#else>
AND    A.FS_UPJANG = 'Y'
        <#if tmCd?has_content>
AND    TM_CD = :tmCd
        </#if>
    </#if>
</#if>
<#if gAuthLevel?has_content>
    <#if gAuthLevel == "00">
AND    A.UPJANG = :gUpjang
    <#elseif gAuthLevel == "10">
AND    A.UPJANG = :gUpjang
    <#elseif gAuthLevel == "12">
AND    A.LEADER_SABUN = :gEmpNo
    <#elseif gAuthLevel == "14">
AND    A.TM_CD = :gTmCd
    <#elseif gAuthLevel == "16">
AND    A.TM_CD = :gTmCd
    <#elseif gAuthLevel == "18">
    <#elseif gAuthLevel == "99">
    <#elseif gAuthLevel == "999">
    <#else>
AND    A.UPJANG = :gUpjang
    </#if>
</#if>
<#if gAuthLevel2?has_content>
    <#if gAuthLevel2 == "00">
AND    (A.UPJANG = :gUpjang OR A.UPJANG IN (SELECT UPJANG FROM FSA_UPJANG_GRP A WHERE EXISTS (SELECT 1 FROM FSA_UPJANG_GRP X WHERE X.GRP_SEQ = A.GRP_SEQ AND X.UPJANG = :gUpjang)))
    <#elseif gAuthLevel2 == "10">
AND    (A.UPJANG = :gUpjang OR A.UPJANG IN (SELECT UPJANG FROM FSA_UPJANG_GRP A WHERE EXISTS (SELECT 1 FROM FSA_UPJANG_GRP X WHERE X.GRP_SEQ = A.GRP_SEQ AND X.UPJANG = :gUpjang)))
    <#elseif gAuthLevel2 == "12">
AND    (A.LEADER_SABUN = :gEmpNo OR A.UPJANG IN (SELECT UPJANG FROM FSA_UPJANG_GRP A WHERE EXISTS (SELECT 1 FROM FSA_UPJANG_GRP X WHERE X.GRP_SEQ = A.GRP_SEQ AND X.UPJANG = :g_Upjang)))
    <#elseif gAuthLevel2 == "14">
AND    (A.TM_CD = :gTmCd OR A.UPJANG IN (SELECT UPJANG FROM FSA_UPJANG_GRP A WHERE EXISTS (SELECT 1 FROM FSA_UPJANG_GRP X WHERE X.GRP_SEQ = A.GRP_SEQ AND X.UPJANG = :g_Upjang)))
    <#elseif gAuthLevel2 == "16">
AND    (A.TM_CD = :gTmCd OR A.UPJANG IN (SELECT UPJANG FROM FSA_UPJANG_GRP A WHERE EXISTS (SELECT 1 FROM FSA_UPJANG_GRP X WHERE X.GRP_SEQ = A.GRP_SEQ AND X.UPJANG = :g_Upjang)))
    <#elseif gAuthLevel2 == "18">
    <#elseif gAuthLevel2 == "99">
    <#elseif gAuthLevel2 == "999">
    <#else>
AND    (A.UPJANG = :gUpjang OR A.UPJANG IN (SELECT UPJANG FROM FSA_UPJANG_GRP A WHERE EXISTS (SELECT 1 FROM FSA_UPJANG_GRP X WHERE X.GRP_SEQ = A.GRP_SEQ AND X.UPJANG = :gUpjang)))
    </#if>
</#if>
<#if isAuthLevel99Lt?has_content>
AND    (A.UPJANG = :faUpjang OR A.UPJANG IN (SELECT UPJANG FROM FSA_UPJANG_GRP A WHERE EXISTS (SELECT 1 FROM FSA_UPJANG_GRP X WHERE X.GRP_SEQ = A.GRP_SEQ AND X.UPJANG = :faUpjang)) OR A.UPJANG IN (SELECT UPJANG FROM MAS_DUALUPJANG_MGMT WHERE SABUN = :gEmpNo))
</#if>
<#if isAdmin?has_content>
AND    (A.UPJANG = :gUpjang OR EXISTS (SELECT 1 FROM HLDC_PO_SUBINVENTORY X, HLDC_PO_SUBINV_USER Y WHERE X.SUBINV_CODE = Y.SUBINV_CODE AND X.USE_YN = 'Y' AND X.UPJANG = A.UPJANG AND Y.SABUN = :gEmpNo))
</#if>
<#if tmCd?has_content>
AND    A.TM_CD = :tmCd
</#if>
<#if isFsaUpjangGrp?has_content>
AND    UPJANG IN (SELECT UPJANG FROM FSA_UPJANG_GRP A WHERE EXISTS (SELECT 1 FROM FSA_UPJANG_GRP X WHERE X.GRP_SEQ = A.GRP_SEQ AND X.UPJANG = :fasUpjangNm))
</#if>
        ]]>
	</statement>

	<!-- 사업장조회 -->
	<statement name="selectFmUpjang" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectFmUpjang */
		<![CDATA[
SELECT A.UPJANG,
       A.UPJANGNM_DISP
FROM   FMS_UPJANG A
WHERE  (1=1)
AND    (A.UPJANG LIKE '%' || :value || '%' OR A.UPJANGNM_DISP LIKE '%' || :value || '%')
<#if isSikJaeSales?has_content>
    <#if isSikJaeSales == "Y">
        <#if tmCd?has_content>
AND    A.DEPT_ID IN (SELECT DEPT_ID FROM HLDC_SC_DEPT_V WHERE TM_CD = :tmCd)
        </#if>
        <#if mainUpjang?has_content>
AND    A.MAIN_UPJANG LIKE :mainUpjang
        </#if>
        <#if gUserKind?has_content>
            <#if gUserKind == "사업장">
AND    (A.UPJANG = :gUpjang OR EXISTS (SELECT 1 FROM FMS_USER_UPJANG B WHERE B.USE_YN = 'Y' AND B.UPJANG = A.UPJANG AND B.SABUN = :gEmpNo))
            </#if>
        </#if>
    <#else>
        <#if tmCd?has_content>
AND    A.FS_UPJANG = 'Y'
AND    A.TM_CD = :tmCd
        <#else>
AND    A.FS_UPJANG = 'Y'
        </#if>
    </#if>
</#if>
<#if isMainUpjang?has_content>
    <#if isMainUpjang == "Y">
        <#if gUserKind == "본부">
AND    A.MAIN_UPJANG = A.UPJANG
        <#else>
AND    A.USE_YN = 'Y'
AND    A.MAIN_UPJANG = A.UPJANG
AND    A.MAIN_UPJANG = :gMainUpjang
        </#if>
    <#else>
        <#if gUserKind == "사업장">
AND    A.USE_YN = 'Y'
AND    A.MAIN_UPJANG = :gMainUpjang
AND    (A.UPJANG = :gUpjang OR EXISTS (SELECT 1 FROM FMS_USER_UPJANG B WHERE B.USE_YN = 'Y' AND B.UPJANG = A.UPJANG AND B.SABUN = :gEmpNo))
        <#elseif gUserKind == "본사">
AND    A.USE_YN = 'Y'
AND    A.MAIN_UPJANG = :gMainUpjang
        <#elseif gUserKind == "본부">
AND    A.USE_YN = 'Y'
        </#if>
        <#if mainUpjang?has_content>
AND    A.MAIN_UPJANG = :mainUpjang
        </#if>
    </#if>
</#if>
        ]]>
	</statement>

	<!-- FSC00080V(점검결과조회에서 직접호출하는 쿼리) -->
	<statement name="selectMacUpjang" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectMacUpjang */
		<![CDATA[
SELECT A.UPJANG,
       A.UPJANGNM
FROM   MAC_UPJANG_V A
WHERE  (1 = 1)
AND    (A.UPJANG LIKE '%' || :value || '%' OR A.UPJANGNM LIKE '%' || :value || '%')
<#if tmCd?has_content>
AND    A.TM_CD = :tmCd
</#if>
<#if jobCd?has_content>
AND    A.JOB_CD = :jobCd
</#if>
<#if subJobCd?has_content>
AND    A.SUB_JOB_CD = :subJobCd
</#if>
        ]]>
	</statement>

	<!-- FSP00030E,FSP00230E(구매신청,재고등록에서 직접호출하는 쿼리) -->
	<statement name="selectInUpjang" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectInUpjang */
		<![CDATA[
SELECT DISTINCT
       A.UPJANG,
       REPLACE(B.UPJANGNM,'단체급식 ') UPJANGNM
FROM   HLDC_PO_SUBINVENTORY A,
       HLDC_ST_UPJANG B
WHERE  A.UPJANG = B.UPJANG
AND    (A.UPJANG LIKE '%' || :value || '%' OR REPLACE(B.UPJANGNM,'단체급식 ') LIKE '%' || :value || '%')
<#if isAuthLevel?has_content>
    <#if gAuthLevel == "999">
    <#else>
AND    EXISTS (SELECT 1 FROM HLDC_PO_SUBINV_USER C WHERE C.SUBINV_CODE = A.SUBINV_CODE AND C.SABUN = :gEmpNo)
    </#if>
<#else>
AND    EXISTS (SELECT 1 FROM HLDC_PO_SUBINV_USER C WHERE C.SUBINV_CODE = A.SUBINV_CODE AND C.SABUN = :gEmpNo)
</#if>
AND    A.USE_YN = 'Y'
        ]]>
	</statement>

	<!-- FSP00031E(입고일선택에서 직접호출하는 쿼리) -->
	<statement name="selectIn2Upjang" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectIn2Upjang */
		<![CDATA[
SELECT DISTINCT A.UPJANG,
       REPLACE(B.UPJANGNM,'단체급식 ') UPJANGNM
FROM   HLDC_PO_SUBINVENTORY A,
       HLDC_ST_UPJANG B
WHERE  A.UPJANG = B.UPJANG
AND    (A.UPJANG LIKE '%' || :value || '%' OR REPLACE(B.UPJANGNM,'단체급식 ') LIKE '%' || :value || '%')
<#if gAuthLevel?has_content>
    <#if gAuthLevel != "999">
AND    EXISTS (SELECT 1 FROM HLDC_PO_SUBINV_USER C WHERE C.SUBINV_CODE = A.SUBINV_CODE AND C.SABUN = :gEmpNo)
    </#if>
</#if>
AND    A.USE_YN = 'Y'
AND    EXISTS (SELECT 1
               FROM   HLDC_PO_TYPE_ITEM_CLASS C,
                      HLDC_PO_SUBINV_ITEM_CLASS D
               WHERE  C.PO_TYPE = :poType
               AND    C.CLASS_CODE  = D.CLASS_CODE
               AND    D.SUBINV_CODE = A.SUBINV_CODE)
        ]]>
	</statement>

	<!-- FSP00233V(업장재고조회에서 직접호출하는 쿼리) -->
	<statement name="selectStockUpjang" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectStockUpjang */
		<![CDATA[
SELECT DISTINCT
       A.UPJANG,
       REPLACE(A.UPJANGNM,'단체급식 ') UPJANGNM
FROM   HLDC_PO_SUBINVENTORY B,
       SCO_UPJANG_MST_V A
WHERE  A.UPJANG = B.UPJANG
AND    A.SAUP_TYPE <> '004'
AND    EXISTS (SELECT 1 FROM HLDC_PO_SUBINV_USER C WHERE C.SUBINV_CODE = B.SUBINV_CODE AND C.SABUN = :gEmpNo)
AND    B.USE_YN = 'Y'
AND    (A.UPJANG LIKE '%' || :value || '%' OR REPLACE(A.UPJANGNM,'단체급식 ') LIKE '%' || :value || '%')
        ]]>
	</statement>


	<!-- 우편번호조회 -->
	<statement name="selectZipCd" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectZipCd */
		<![CDATA[
SELECT ZIP_CD,
       ADDR
FROM   (SELECT ZIP_CD,
               DO||' '||SI||' '||DONG||' '||BUN_GI AS ADDR
        FROM   UPOS_SC_ZIP
        WHERE  USE_YN = '1')
WHERE  1=1
AND    (ZIP_CD LIKE '%' || :value || '%' OR ADDR LIKE '%' || :value || '%')
        ]]>
	</statement>

	<!-- 사원조회 -->
	<statement name="selectSabun" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectSabun */
		<![CDATA[
SELECT A.SABUN,
       A.NM_KOR
FROM   SCC_USERINFO A
WHERE  1=1
AND    (A.SABUN LIKE '%' || :value || '%' OR A.NM_KOR LIKE '%' || :value || '%')
<#if isSales?has_content>
    <#if scTm?has_content>
AND    (SABUN IN (SELECT PART_SALES_SABUN FROM FMS_UPJANG WHERE DEPT_ID IN (SELECT DEPT_ID FROM HLDC_SC_DEPT_V WHERE TM_CD = :scTm)))
    </#if>
</#if>
        ]]>
	</statement>

	<!-- 창고정보조회 -->
	<statement name="selectSubInv" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectSubInv */
		<![CDATA[
SELECT SUBINV_CODE,
       SUBINV_NAME
FROM   HLDC_ST_UPJANG A,
       HLDC_PO_SUBINVENTORY B
WHERE  A.UPJANG = B.UPJANG
AND    B.USE_YN = 'Y'
AND    (B.SUBINV_CODE LIKE '%' || :value || '%' OR B.SUBINV_NAME LIKE '%' || :value || '%')
<#if isFood?has_content>
AND    B.SUBINV_CODE LIKE 'S10%' AND A.UPJANG = :upjang
</#if>
        ]]>
	</statement>

	<!-- 창고정보조회(클레임) -->
	<statement name="selectClaimSubInv" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectClaimSubInv */
		<![CDATA[
SELECT A.SUBINV_CODE,
       A.SUBINV_NAME
FROM   (SELECT A.SUBINV_CODE,
               DECODE(A.USE_YN, 'N' , '폐장' )||A.SUBINV_CODE||' '||A.SUBINV_NAME||' ( '|| REPLACE(B.UPJANGNM,'단체급식 ')||' ) ' AS SUBINV_NAME
        FROM   HLDC_PO_SUBINVENTORY A,
               HLDC_ST_UPJANG B
        WHERE  A.UPJANG = B.UPJANG
        AND    EXISTS (SELECT 1 FROM HLDC_PO_SUBINV_USER C WHERE C.SUBINV_CODE = A.SUBINV_CODE AND C.SABUN = :gEmpNo)) A
WHERE  (A.SUBINV_CODE LIKE '%' || :value || '%' OR A.SUBINV_NAME LIKE '%' || :value || '%')
        ]]>
	</statement>

	<!-- 업장정보조회 -->
	<statement name="selectFmMenuUpjang" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectFmMenuUpjang */
		<![CDATA[
SELECT S.UPJANG,
       S.UPJANGNM_DISP
FROM   (SELECT SM.UPJANG,
               SM.UPJANGNM_DISP
        FROM   (SELECT T.UPJANG,
                       S.UPJANGNM_DISP
                FROM   FMM_MENU_SHARE_UPJANG T,
                       FMS_UPJANG S
                WHERE  T.UPJANG = S.UPJANG
                AND    T.USE_YN = 'Y'
                AND    T.GROUP_KEY IN (SELECT GROUP_KEY
                                       FROM   FMM_MENU_SHARE_UPJANG
                                       WHERE  UPJANG = :gUpjang)
                UNION ALL
                SELECT A.UPJANG,
                       A.UPJANGNM_DISP
                FROM   FMS_UPJANG A
                WHERE  A.USE_YN = 'Y'
                AND    A.MAIN_UPJANG = :gMainUpjang
                AND    (A.UPJANG = :gUpjang OR EXISTS (SELECT 1
                                                       FROM   FMS_USER_UPJANG B
                                                       WHERE  B.USE_YN = 'Y'
                                                       AND    B.UPJANG = A.UPJANG
                                                       AND    B.SABUN = :gEmpNo))) SM
        WHERE   (1=1)
        GROUP BY SM.UPJANG, SM.UPJANGNM_DISP) S
WHERE  (1=1)
AND    (S.UPJANG LIKE '%' || :value || '%' OR S.UPJANGNM_DISP LIKE '%' || :value || '%')
        ]]>
	</statement>

	<!-- 부문(BU)정보 조회 -->
	<statement name="selectBU" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectBU */
		<![CDATA[
SELECT BU_CD AS CODE,
       BU_NM AS CODE_NAME,
       BU_CD,
       BU_NM
FROM   SCC_BU
ORDER BY BU_CD
        ]]>
	</statement>

	<!-- 사업부정보 조회(전체 사업부를 대상으로 한다.) -->
	<statement name="selectMU2" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectMU2 */
		<![CDATA[
SELECT DISTINCT
       MU_CD AS CODE,
       MU_NM AS CODE_NAME,
       MU_CD,
       MU_NM
FROM   HLDC_SC_DEPT_V
WHERE  1=1
<#if buCd?has_content>
AND    BU_CD = :buCd
</#if>
ORDER BY MU_CD
        ]]>
	</statement>

	<!-- 팀정보 조회 (전체 팀을 대상으로 한다.) -->
	<statement name="selectTM" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectTM */
		<![CDATA[
SELECT DISTINCT
       TM_CD AS CODE,
       TM_NM AS CODE_NAME,
       TM_CD,
       TM_NM
FROM   HLDC_SC_DEPT_V
WHERE  1=1
<#if buCd?has_content>
AND    BU_CD = :buCd
</#if>
<#if muCd?has_content>
AND    MU_CD = :muCd
</#if>
ORDER BY TM_CD
        ]]>
	</statement>

	<!-- 개인처리등급 -->
	<statement name="selectPersProcGrade" type="select">
		/*+ com.hwfs.sc.cmn.dao.SystemCommonDAO.selectPersProcGrade */
		<![CDATA[
SELECT DISTINCT
       PERS_INFO_PROC_GRADE AS CODE,
       PERS_INFO_PROC_GRADE || '-' || PERS_INFO_PROC_GRADE_DESC AS CODE_NAME,
       PERS_INFO_PROC_GRADE,
       PERS_INFO_PROC_GRADE_DESC
FROM   SCC_PERS_INFO_PROC_GRADE
WHERE  1=1
ORDER BY PERS_INFO_PROC_GRADE
        ]]>
	</statement>

</hqml>
