<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="fs.fsc.cateringAllcProcDAO">
	<desc>케터링 지원배정 등록 HQML Query</desc>

	<!-- 케터링 지원배정 등록 목록을 조회한다. -->
	<statement name="selectCeleList" type="select"><![CDATA[
SELECT                                                                                                                                                                        
       M.REQUEST_UPJANG_CD         AS REQUEST_UPJANG_CD       /* 신청 업장코드  */                    
	  , ( 
		   SELECT UPJANGNM  
		     FROM HLDC_ST_UPJANG S
		    WHERE S.UPJANG = M.REQUEST_UPJANG_CD
		      AND ROWNUM = 1
		 ) 						   AS REQUEST_UPJANG_NM 
     , M.REQUEST_ID                AS REQUEST_ID              	/* 신청ID */                            
     --, M.SEQ                       AS SEQ                     	/* 신청ID 기준 일련번호 */              
     , M.CELE_NM                   AS CELE_NM                 	/* 행사명  */                           
     , M.CELE_NM                   AS ORG_CELE_NM               /* 행사명  */                           
     , M.CELE_TERM_SDATE           AS CELE_TERM_SDATE         	/* 행사기간 */                          
     , M.CELE_TERM_SDATE           AS ORG_CELE_TERM_SDATE       /* 행사기간 */                          
     , M.CELE_TERM_EDATE           AS CELE_TERM_EDATE         	/* 행사기간 */                          
     , M.CELE_TERM_EDATE           AS ORG_CELE_TERM_EDATE       /* 행사기간 */                          
    -- , M.DUTY_TIME                 AS DUTY_TIME               	/* 근무시간 */ 
     , DECODE(LENGTH(TO_CHAR(M.DUTY_TIME)),3,'0'||TO_CHAR(M.DUTY_TIME), TO_CHAR(M.DUTY_TIME)) AS DUTY_TIME                         
     , M.DUTY_TIME                 AS ORG_DUTY_TIME             /* 근무시간 */                          
     , M.SUP_HUMAN_STRENGTH_CD     AS SUP_HUMAN_STRENGTH_CD   	/* 지원인력 */                          
     , M.SUP_HUMAN_STRENGTH_CD     AS ORG_SUP_HUMAN_STRENGTH_CD /* 지원인력 */                          
     , M.NO_MAN                    AS NO_MAN                  	/* 인원 */                              
     , M.NO_MAN                    AS ORG_NO_MAN                /* 인원 */                              
     , M.GUEST_TYPE                AS GUEST_TYPE              	/* 고객유형 */                          
     , M.GUEST_TYPE                AS ORG_GUEST_TYPE            /* 고객유형 */                          
     , M.SPCLFACT                  AS SPCLFACT                	/* 장소 */                              
     , M.SPCLFACT                  AS ORG_SPCLFACT              /* 장소 */                              
     , M.CATER_MENU                AS CATER_MENU              	/* 연회 메뉴 */                         
     , M.CATER_MENU                AS ORG_CATER_MENU            /* 연회 메뉴 */                         
     , M.CATER_UPRICE              AS CATER_UPRICE            	/* 연회 단가 */                         
     , M.CATER_UPRICE              AS ORG_CATER_UPRICE          /* 연회 단가 */ 
     , M.GUEST_NO_MAN              AS GUEST_NO_MAN              /* 연회 인원 */
     , M.GUEST_NO_MAN              AS ORG_GUEST_NO_MAN          /* 연회 인원 */
     , M.CATER_UPRICE * GUEST_NO_MAN AS CATER_SUMPRICE          /* 연회 단가 합계 */
     , M.CATER_UPRICE * GUEST_NO_MAN AS ORG_CATER_SUMPRICE      /* 연회 단가 합계 */                         
     , M.PRCG_NM                   AS PRCG_NM                 	/* 담당자 이름 */                       
     , M.PRCG_NM                   AS ORG_PRCG_NM               /* 담당자 이름 */                       
     , M.PRCG_TELNO                AS PRCG_TELNO              	/* 담당자 전화번호 */                   
     , M.PRCG_TELNO                AS ORG_PRCG_TELNO            /* 담당자 전화번호 */                   
     
     , REGEXP_SUBSTR(M.PRCG_TELNO, '[^-]+',1,1) AS PRCG_TELNO1		/* 담당자 전화번호1 */ 
     , REGEXP_SUBSTR(M.PRCG_TELNO, '[^-]+',1,1) AS ORG_PRCG_TELNO1	/* 담당자 전화번호1 */ 
     
     , REGEXP_SUBSTR(M.PRCG_TELNO, '[^-]+',1,2) AS PRCG_TELNO2		/* 담당자 전화번호2 */  
     , REGEXP_SUBSTR(M.PRCG_TELNO, '[^-]+',1,2) AS ORG_PRCG_TELNO2	/* 담당자 전화번호2 */  
     
     , REGEXP_SUBSTR(M.PRCG_TELNO, '[^-]+',1,3) AS PRCG_TELNO3		/* 담당자 전화번호3 */            				  
     , REGEXP_SUBSTR(M.PRCG_TELNO, '[^-]+',1,3) AS ORG_PRCG_TELNO3	/* 담당자 전화번호3 */            					  
     
         
     , DECODE(NVL(M.ALLC_YN, '0'), 'Y', '1', '0') AS ALLC_YN  	/* 배정여부 */                                 
     , M.CHFSML                    AS CHFSML   					/* 특이사항 */                                                                             
     , M.CHFSML                    AS ORG_CHFSML   				/* 특이사항 */                                                                             
     , NVL(C.ALLC_SEQ,1)           AS ALLC_SEQ                  /* 배정순번       */
     , C.ALLC_SABUN                AS ALLC_SABUN                /* 배정 담당 사번 */
     , 'N'  AS UPDATE_YN 
     , ( 
	     SELECT NM_KOR 
	       FROM SCC_USERINFO A
		  WHERE A.SABUN = C.ALLC_SABUN
		    AND ROWNUM = 1
       ) 						   	AS ALLC_NM
     , C.ALLC_REASON               	AS ALLC_REASON             	/* 배정사유       */
     , NVL(C.ALLC_STATUS,'001')      	AS ALLC_STATUS              /* 배정상태       */
     , CASE WHEN ALLC_SEQ IS NULL 
       THEN 'Y' 
       END  						AS NEW_YN
     , NVL(C.CATER_CLASS,'001')    	AS CATER_CLASS              /* 케터링구분 001-행사, 002-조리인력, 003-조리지도 */
FROM   FSC_CATERINGCELE_REG M      
     , FSC_CATERINGCELE_ALLC C   
     , SCO_UPJANG_MST_V B
WHERE M.REQUEST_UPJANG_CD = B.UPJANG
AND  M.REQUEST_UPJANG_CD =  C.REQUEST_UPJANG_CD(+)    /* 신청 업장코드  */                             
AND    M.REQUEST_ID        =  C.REQUEST_ID(+)           /* 신청ID */                                     
--AND    M.SEQ               =  C.SEQ(+)                  /* 신청ID 기준 일련번호 */                       
AND    C.CATER_CLASS(+)    = '001'
AND   B.FS_UPJANG = 'Y'    
<#if muCd?has_content>
AND    B.MU_CD = :muCd
</#if>
<#if tmCd?has_content>
AND    B.TM_CD = :tmCd
</#if>
<#if upjangCd?has_content>
AND    M.REQUEST_UPJANG_CD = :upjangCd
</#if>
<#if status?has_content>
AND   NVL( C.ALLC_STATUS ,'001')	= :status
</#if>

<#if upjang?has_content>                                                           
AND    M.REQUEST_UPJANG_CD = :upjangCd                                             
</#if>                                                                             

AND (    TO_DATE(M.CELE_TERM_SDATE,'YYYYMMDD') BETWEEN TO_DATE(:fromDay,'YYYYMMDD')  AND TO_DATE(:toDay,'YYYYMMDD')            
      OR TO_DATE(M.CELE_TERM_EDATE,'YYYYMMDD') BETWEEN TO_DATE(:fromDay,'YYYYMMDD')  AND TO_DATE(:toDay,'YYYYMMDD')            
      OR TO_DATE(:fromDay,'YYYYMMDD') BETWEEN TO_DATE( M.CELE_TERM_SDATE,'YYYYMMDD') AND TO_DATE(M.CELE_TERM_EDATE,'YYYYMMDD') 
      OR TO_DATE(:toDay,'YYYYMMDD')   BETWEEN TO_DATE( M.CELE_TERM_SDATE,'YYYYMMDD') AND TO_DATE(M.CELE_TERM_EDATE,'YYYYMMDD')   
    )                                                                                                                                                                         
ORDER BY M.CDATE
	   , M.CELE_TERM_SDATE    DESC       
       , M.REQUEST_UPJANG_CD  DESC      	/* 신청 업장코드  */         
     --  , M.REQUEST_ID         DESC          /* 신청ID */                            
     --  , M.SEQ                DESC          /* 신청ID 기준 일련번호 */ 
       , C.ALLC_SEQ           ASC           /* 배정순번       */

]]></statement>

	<!-- 케터링 지원배정 등록(을)를 등록한다. -->
	<statement name="insertCele" type="insert"><![CDATA[INSERT INTO FSC_CATERINGCELE_HIS (
       REQUEST_UPJANG_CD        /* 신청 업장코드 */                      
     , REQUEST_ID               /* 신청ID */
    -- , SEQ                      /* 신청ID 기준 일련번호 */
     , ALLC_SEQ      /* 배정순번 */
     , MODIFY_SEQ   /* 수정차수 */
     , CELE_NM                  /* 행사명  */
     , CELE_TERM_SDATE          /* 행사기간 */
     , CELE_TERM_EDATE          /* 행사기간 */
     , DUTY_TIME                /* 근무시간 */
     , SUP_HUMAN_STRENGTH_CD    /* 지원인력 */
     , NO_MAN                   /* 인원 */
     , GUEST_TYPE               /* 고객유형 */
     , SPCLFACT                 /* 장소 */
     , CATER_MENU               /* 연회 메뉴 */
     , CATER_UPRICE             /* 연회 단가 */
     , PRCG_NM                  /* 담당자 이름 */
     , PRCG_TELNO               /* 담당자 전화번호 */
     , ALLC_YN                  /* 배정여부 */
     , CHFSML                   /* 특이사항 */     
     , CUSER                    /* 등록자 */
     , CDATE                    /* 등록일자 */
     , UUSER                    /* 수정자 */
     , UDATE                    /* 수정일자 */    
) VALUES(
       :requestUpjangCd         									/* 신청 업장코드 */                      
     , :requestId               									/* 신청ID */
    -- , :seq															/* 신청ID 기준 일련번호 */
     , :allcSeq     			/* 배정순번 */
     , (SELECT NVL(MAX(MODIFY_SEQ),0) +1 
     	FROM FSC_CATERINGCELE_HIS
     	WHERE REQUEST_UPJANG_CD = :requestUpjangCd
     	AND REQUEST_ID = :requestId
     	AND ALLC_SEQ = :allcSeq
     	)
     , :celeNm                  									/* 행사명  */
     , :celeTermSdate          										/* 행사기간 */
     , :celeTermEdate          										/* 행사기간 */
     , <#if dutyTime?exists> :dutyTime <#else> null </#if>          /* 근무시간 */
     , :supHumanStrengthCd      									/* 지원인력 */
     , :noMan                   									/* 인원 */
     , :guestType               									/* 고객유형 */
     , <#if spclfact?exists> :spclfact <#else> null </#if>          /* 장소 */
     , :caterMenu               									/* 연회 메뉴 */
     , :caterUprice             									/* 연회 단가 */
     , <#if prcgNm?exists> :prcgNm <#else> null </#if>              /* 담당자 이름 */
     , <#if prcgTelno1?exists> :prcgTelno1 <#else> null </#if>
        ||'-'|| 
       <#if prcgTelno2?exists> :prcgTelno2 <#else> null </#if>  
        ||'-'|| 
       <#if prcgTelno3?exists> :prcgTelno3 <#else> null </#if>    	/* 담당자 전화번호 */
     , :allcYn                  										/* 배정여부 */
     , <#if chfsml?exists> :chfsml <#else> null </#if>              /* 특이사항 */     
     , :loginSabun                   								/* 등록자 */
     , SYSDATE                   									/* 등록일자 */
     , :loginSabun                  								/* 수정자 */
     , SYSDATE                   									/* 수정일자 */    
)     
]]></statement>

	<!-- 케터링 지원배정 등록(을)를 수정한다. -->
	<statement name="updateCele" type="update"><![CDATA[
UPDATE FSC_CATERINGCELE_REG SET 
       CELE_NM                = :celeNm               										/* 행사명  */
     , CELE_TERM_SDATE        = :celeTermSdate       										/* 행사기간 */
     , CELE_TERM_EDATE        = :celeTermEdate       										/* 행사기간 */
     , DUTY_TIME              = <#if dutyTime?exists> :dutyTime <#else> null </#if>         /* 근무시간 */
     , SUP_HUMAN_STRENGTH_CD  = :supHumanStrengthCd   										/* 지원인력 */
     , NO_MAN                 = :noMan                										/* 인원 */
     , GUEST_TYPE             = <#if guestType?exists> :guestType <#else> null </#if>       /* 고객유형 */
     , SPCLFACT               = <#if spclfact?exists> :spclfact <#else> null </#if>         /* 장소 */
     , CATER_MENU             = :caterMenu            										/* 연회 메뉴 */
     , CATER_UPRICE           = :caterUprice          										/* 연회 단가 */
     , PRCG_NM                = <#if prcgNm?exists> :prcgNm <#else> null </#if>             /* 담당자 이름 */
     , PRCG_TELNO             = <#if prcgTelno1?exists> :prcgTelno1 <#else> null </#if>
		 				         ||'-'|| 
						        <#if prcgTelno2?exists> :prcgTelno2 <#else> null </#if>  
						         ||'-'|| 
						        <#if prcgTelno3?exists> :prcgTelno3 <#else> null </#if>    	/* 담당자 전화번호 */
     , CHFSML                 = <#if chfsml?exists> :chfsml <#else> null </#if>             /* 특이사항 */     
     , UUSER                  = :loginSabun                									/* 수정자 */
     , UDATE                  = SYSDATE               /* 수정일자 */        
     , ALLC_YN                = :allcYn				  /* 배정여부	*/
WHERE  REQUEST_UPJANG_CD      = :requestUpjangCd      /* 신청 업장코드 */                      
  AND REQUEST_ID              = :requestId            /* 신청ID */
  --AND SEQ                     = :seq                  /* 신청ID 기준 일련번호 */      
  ]]></statement>


	<statement name="selectCookHumanList"><![CDATA[
SELECT 
       M.REQUEST_UPJANG_CD         					AS REQUEST_UPJANG_CD       	/* 신청 업장코드  */                    
	  , ( 
		   SELECT UPJANGNM  
		     FROM HLDC_ST_UPJANG S
		    WHERE S.UPJANG = M.REQUEST_UPJANG_CD
		      AND ROWNUM = 1
		 ) 						  		 			AS REQUEST_UPJANG_NM 
     , M.REQUEST_ID                					AS REQUEST_ID              		/* 신청ID */                            
   --  , M.SEQ                       					AS SEQ                     		/* 신청ID 기준 일련번호 */              
     , SUP_TERM_SDATE          														/* 지원기간  */ 
     , SUP_TERM_SDATE          						AS ORG_SUP_TERM_SDATE			/* 지원기간  */ 
     , SUP_TERM_EDATE          														/* 지원기간  */  
     , SUP_TERM_EDATE          						AS ORG_SUP_TERM_EDATE			/* 지원기간  */  
     , DECODE(LENGTH(TO_CHAR(DUTY_TIME)),3,'0'||TO_CHAR(DUTY_TIME), TO_CHAR(DUTY_TIME)) AS DUTY_TIME               														/* 근무기간 */ 
     , DUTY_TIME               						AS ORG_DUTY_TIME				/* 근무기간 */ 
     , SUP_HUMAN_STRENGTH_CD   														/* 지원인력*/ 
     , SUP_HUMAN_STRENGTH_CD   						AS ORG_SUP_HUMAN_STRENGTH_CD 	/* 지원인력*/ 
     , NO_MAN                  														/* 인원  */ 
     , NO_MAN                  						AS ORG_NO_MAN					/* 인원  */ 
     , DECODE(NVL(ALLC_YN, '0'), 'Y', '1', '0') 	AS ALLC_YN                 		/* 배정여부 */ 
     , REQUEST_REASON          														/* 요청사유 */ 
     , REQUEST_REASON          						AS ORG_REQUEST_REASON			/* 요청사유 */ 
     , NVL(C.ALLC_SEQ,1)                 			AS ALLC_SEQ                 	/* 배정순번       */
     , C.ALLC_SABUN                					AS ALLC_SABUN               	/* 배정 담당 사번 */
     , ( 
	     SELECT NM_KOR 
	       FROM SCC_USERINFO A
		  WHERE A.SABUN = C.ALLC_SABUN
		    AND ROWNUM = 1
       ) 						   					AS ALLC_NM
     , C.ALLC_REASON               					AS ALLC_REASON              	/* 배정사유       */
     , NVL(C.ALLC_STATUS,'001')      					AS ALLC_STATUS              	/* 배정상태       */
     , CASE WHEN ALLC_SEQ IS NULL 
       THEN 'Y' 
       END  						                AS NEW_YN
     , NVL(C.CATER_CLASS,'002')               		AS CATER_CLASS            		/* 케터링구분 001-행사, 002-조리인력, 003-조리지도 */
FROM   FSC_CATERINGCOOKHUMAN_REG M
     , FSC_CATERINGCELE_ALLC C  
      , SCO_UPJANG_MST_V B
WHERE M.REQUEST_UPJANG_CD = B.UPJANG
AND  M.REQUEST_UPJANG_CD =  C.REQUEST_UPJANG_CD(+)    /* 신청 업장코드  */                             
AND    M.REQUEST_ID        =  C.REQUEST_ID(+)           /* 신청ID */                                     
--AND    M.SEQ               =  C.SEQ(+)                  /* 신청ID 기준 일련번호 */     
AND   C.CATER_CLASS(+)        = '002'
AND   B.FS_UPJANG = 'Y'    
<#if muCd?has_content>
AND    B.MU_CD = :muCd
</#if>
<#if tmCd?has_content>
AND    B.TM_CD = :tmCd
</#if>
<#if upjangCd?has_content>
AND    M.REQUEST_UPJANG_CD = :upjangCd
</#if>
<#if status?has_content>
AND   NVL( C.ALLC_STATUS ,'001')	= :status
</#if>
AND (    TO_DATE(SUP_TERM_SDATE,'YYYYMMDD') BETWEEN TO_DATE(:fromDay,'YYYYMMDD')  AND TO_DATE(:toDay,'YYYYMMDD')
      OR TO_DATE(SUP_TERM_EDATE,'YYYYMMDD') BETWEEN TO_DATE(:fromDay,'YYYYMMDD')  AND TO_DATE(:toDay,'YYYYMMDD')
      OR TO_DATE(:fromDay,'YYYYMMDD') BETWEEN TO_DATE( SUP_TERM_SDATE,'YYYYMMDD') AND TO_DATE(SUP_TERM_EDATE,'YYYYMMDD')
      OR TO_DATE(:toDay,'YYYYMMDD') BETWEEN TO_DATE( SUP_TERM_SDATE,'YYYYMMDD') AND TO_DATE(SUP_TERM_EDATE,'YYYYMMDD')
    )
ORDER BY M.CDATE
		, M.SUP_TERM_SDATE     DESC       
       , M.REQUEST_UPJANG_CD  DESC      	/* 신청 업장코드  */         
     --  , M.REQUEST_ID         DESC          /* 신청ID */                            
     --  , M.SEQ                DESC          /* 신청ID 기준 일련번호 */ 
       , C.ALLC_SEQ           ASC           /* 배정순번       */
]]></statement>
	<statement name="insertCookHuman"><![CDATA[
INSERT INTO FSC_CATERINGCOOKHUMAN_HIS (
       REQUEST_UPJANG_CD       /* 신청 업장코드 */
     , REQUEST_ID              /* 신청ID*/ 
    -- , SEQ                     /* 신청ID 기준 일련번호*/ 
     , ALLC_SEQ      /* 배정순번 */
     , MODIFY_SEQ   /* 수정차수 */
     , SUP_TERM_SDATE          /* 지원기간  */ 
     , SUP_TERM_EDATE          /* 지원기간  */  
     , DUTY_TIME               /* 근무기간 */ 
     , SUP_HUMAN_STRENGTH_CD   /* 지원인력*/ 
     , NO_MAN                  /* 인원  */ 
     , ALLC_YN                 /* 배정여부 */ 
     , REQUEST_REASON          /* 요청사유 */ 
     , CUSER                   /* */ 
     , CDATE                   /* */ 
     , UUSER                   /* */ 
     , UDATE                   /* */   
)VALUES(  
       :requestUpjangCd        											/* 신청 업장코드 */
     , :requestId           											/* 신청ID */ 
   --  , :seq                   											/* 신청ID 기준 일련번호 */
     , :allcSeq     				/* 배정순번 */
     ,(SELECT NVL(MAX(MODIFY_SEQ),0) +1               /* 수정차수 */
     	FROM FSC_CATERINGCOOKHUMAN_HIS
     	WHERE REQUEST_UPJANG_CD = :requestUpjangCd
     	AND REQUEST_ID = :requestId
     	AND ALLC_SEQ = :allcSeq
     	)    
     , :supTermSdate            										/* 지원기간  */ 
     , :supTermEdate            										/* 지원기간  */  
     , <#if dutyTime?exists> :dutyTime <#else> null </#if>              /* 근무기간 */ 
     , :supHumanStrengthCd      										/* 지원인력*/ 
     , :noMan                   										/* 인원  */ 
     , :allcYn                 											/* 배정여부 */ 
     , <#if requestReason?exists> :requestReason <#else> null </#if>    /* 요청사유 */ 
     , :loginSabun              										/* */ 
     , SYSDATE                  										/* */ 
     , :loginSabun              										/* */ 
     , SYSDATE                  										/* */   
)]]></statement>
	<statement name="updateCookHuman"><![CDATA[
UPDATE FSC_CATERINGCOOKHUMAN_REG SET 
       SUP_TERM_SDATE        = :supTermSdate          											/* 지원기간  */ 
     , SUP_TERM_EDATE        = :supTermEdate          											/* 지원기간  */  
     , DUTY_TIME             = <#if dutyTime?exists> :dutyTime <#else> null </#if>              /* 근무기간 */ 
     , SUP_HUMAN_STRENGTH_CD = :supHumanStrengthCd    											/* 지원인력*/ 
     , NO_MAN                = :noMan                 											/* 인원  */ 
     , REQUEST_REASON        = <#if requestReason?exists> :requestReason <#else> null </#if>    /* 요청사유 */ 
     , ALLC_YN               = :allcYn				  											/* 배정여부	*/
     , UUSER                 = :loginSabun            											/* 수정자 */ 
     , UDATE                 = SYSDATE                 											/* 수정일자 */ 
WHERE REQUEST_UPJANG_CD      = :requestUpjangCd       											/* 신청 업장코드 */
  AND REQUEST_ID            = :requestId             											/* 신청ID 기준 일련번호 */
 -- AND SEQ                   = :seq                   											/* 신청ID */ 
 ]]></statement>

	<statement name="selectUtensilList"><![CDATA[SELECT 
       M.REQUEST_UPJANG_CD         						AS REQUEST_UPJANG_CD       /* 신청 업장코드  */                    
     , ( 
		   SELECT UPJANGNM  
		     FROM HLDC_ST_UPJANG S
		    WHERE S.UPJANG = M.REQUEST_UPJANG_CD
		      AND ROWNUM = 1
	   ) 						   						AS REQUEST_UPJANG_NM 
     , M.REQUEST_ID                						AS REQUEST_ID              	/* 신청ID */                            
    -- , M.SEQ                       						AS SEQ                     	/* 신청ID 기준 일련번호 */              
     , CELE_NM              														/* 행사명  */      
     , CELE_NM             								AS ORG_CELE_NM 				/* 행사명  */      
     , LEND_TERM_SDATE      														/* 대여기간 */ 
     , LEND_TERM_SDATE     								AS ORG_LEND_TERM_SDATE 		/* 대여기간 */ 
     , LEND_TERM_EDATE      														/* 대여기간 */      
     , LEND_TERM_EDATE     								AS ORG_LEND_TERM_EDATE 		/* 대여기간 */      
     , MACHINE_CLASS_CD     														/* 기기/기물 구분 */ 
     , MACHINE_CLASS_CD    								AS ORG_MACHINE_CLASS_CD 	/* 기기/기물 구분 */ 
     , (
        SELECT LCLASS_NM 
          FROM FS_LCLASS S
         WHERE S.LCLASS_CD = M.MACHINE_CLASS_CD
           AND USE_YN = 'Y'
           AND ROWNUM = 1
        )                                               AS MACHINE_CLASS_NM
     , MACHINE_KIND_CD      														/* 기기/기물 종류  */ 
     , MACHINE_KIND_CD    								AS ORG_MACHINE_KIND_CD  	/* 기기/기물 종류  */ 
     , (
        SELECT MCLASS_NM 
          FROM FS_MCLASS S
         WHERE S.MCLASS_CD = M.MACHINE_KIND_CD
           AND USE_YN = 'Y'
           AND ROWNUM = 1
        )                                               AS MACHINE_KIND_NM     
     , MACHINE_CD           														/* 기기/기물 기물명 */ 
     , MACHINE_CD         								AS ORG_MACHINE_CD  			/* 기기/기물 기물명 */ 
     , (
        SELECT SCLASS_NM 
          FROM FS_SCLASS S
         WHERE S.SCLASS_CD = M.MACHINE_CD
           AND USE_YN = 'Y'
           AND ROWNUM = 1
        )                                               AS MACHINE_NM
     , RMA_QUANTITY         														/* 잔여수량 */ 
     , REQUEST_QUANTITY   								  	                        /* 신청수량 */ 
     , REQUEST_QUANTITY   								AS ORG_REQUEST_QUANTITY  	/* 신청수량 */ 
     , RMA_DATE                    													/* 반납일자  */
     , TO_CHAR(RMA_DATE,'YYYYMMDD')           			AS ORG_RMA_DATE         	/* 반납일자  */
     , DECODE(NVL(APPRV_YN, '0'), 'Y', '1', '0') 		AS APPRV_YN             	/* 승인여부 */ 
     , SCC_CRYPTO.DEC_FUN(CNTC_NUM_ENC) 				AS CNTC_NUM       			/* 연락처 암호화 */ 
     , SCC_CRYPTO.DEC_FUN(CNTC_NUM_ENC) 				AS ORG_CNTC_NUM       		/* 연락처 암호화 */ 
    -- , SUBSTR( ZIP_CODE , 0, 3) 						AS ZIP_CODE1            	/* 우편번호 */ 
    -- , SUBSTR( ZIP_CODE , 0, 3) 						AS ORG_ZIP_CODE1            /* 우편번호 */ 
    -- , SUBSTR( ZIP_CODE , 4)    						AS ZIP_CODE2            	/* 우편번호 */
    -- , SUBSTR( ZIP_CODE , 4)    						AS ORG_ZIP_CODE2            /* 우편번호 */
    -- , SCC_CRYPTO.DEC_FUN(M.ADDR_ENC) 					AS ADDR             		/* 주소 암호화 */      
    -- , SCC_CRYPTO.DEC_FUN(M.ADDR_ENC) 					AS ORG_ADDR             	/* 주소 암호화 */      
     , TRANSPORT_MTOD1      														/* 운송방법  */ 
     , TRANSPORT_MTOD1   								AS  ORG_TRANSPORT_MTOD1  	/* 운송방법  */ 
     , TRANSPORT_MTOD2      														/* 운송방법 */ 
     , TRANSPORT_MTOD2   								AS ORG_TRANSPORT_MTOD2   	/* 운송방법 */ 
     , NVL(C.ALLC_SEQ,1)                 				AS ALLC_SEQ                 /* 배정순번       */
     , M.FIRST_SIGN_PRCG_EMP                			AS FIRST_SIGN_PRCG_EMP      /* 배정 담당 사번 */
     , SCC_USERINFO_NM_KOR_FUN(M.FIRST_SIGN_PRCG_EMP, 1) AS FIRST_SIGN_PRCG_EMP_NM    /* 배정 담당 이름 */
    -- , ( 
    --     SELECT NM_KOR 
    --       FROM SCC_USERINFO A
    --      WHERE A.SABUN = C.FIRST_SIGN_PRCG_EMP
    --        AND ROWNUM = 1
    --   )                            					AS FIRST_SIGN_PRCG_EMPNM
     , C.FIRST_RTN_REASON               				AS FIRST_RTN_REASON        /* 배정사유       */
     , NVL(C.FIRST_SIGN_STATUS,'001')      				AS FIRST_SIGN_STATUS       /* 배정상태       */
     
     , CASE WHEN ALLC_SEQ IS NULL 
       THEN 'Y' 
       END  						                	AS NEW_YN
     , NVL(C.CATER_CLASS,'003')               			AS CATER_CLASS             /* 케터링구분 001-행사, 002-조리인력, 003-조리지도 */
     , SCC_ADDR_FUN(M.ADDR_KEY, :loginPersMask, :maskAuth) AS ADDR_INFO
     , SCC_ADDR_FUN(M.ADDR_KEY, :loginPersMask, :maskAuth) AS ORG_ADDR_INFO
     , M.ADDR_KEY AS ADDR_KEY
     , M.ADDR_KEY AS ORG_ADDR_KEY
FROM   FSC_CATERINGUTENSIL_REG M
     , FSC_CATERINGCELE_ALLC C                                                     
     , SCO_UPJANG_MST_V B
WHERE  M.REQUEST_UPJANG_CD = B.UPJANG
AND    M.REQUEST_UPJANG_CD =  C.REQUEST_UPJANG_CD(+)    /* 신청 업장코드  */                             
AND    M.REQUEST_ID        =  C.REQUEST_ID(+)           /* 신청ID */                                     
--AND    M.SEQ               =  C.SEQ(+)                  /* 신청ID 기준 일련번호 */     
AND   C.CATER_CLASS(+)        = '003'
AND   B.FS_UPJANG = 'Y'    
<#if muCd?has_content>
AND    B.MU_CD = :muCd
</#if>
<#if tmCd?has_content>
AND    B.TM_CD = :tmCd
</#if>
<#if upjangCd?has_content>
AND    M.REQUEST_UPJANG_CD = :upjangCd
</#if>
<#if status?has_content>
AND   NVL( C.FIRST_SIGN_STATUS ,'001')	= :status
</#if>
AND (    TO_DATE(LEND_TERM_SDATE,'YYYYMMDD') BETWEEN TO_DATE(:fromDay,'YYYYMMDD')  AND TO_DATE(:toDay,'YYYYMMDD')
      OR TO_DATE(LEND_TERM_EDATE,'YYYYMMDD') BETWEEN TO_DATE(:fromDay,'YYYYMMDD')  AND TO_DATE(:toDay,'YYYYMMDD')
      OR TO_DATE(:fromDay,'YYYYMMDD') BETWEEN TO_DATE( LEND_TERM_SDATE,'YYYYMMDD') AND TO_DATE(LEND_TERM_EDATE,'YYYYMMDD')
      OR TO_DATE(:toDay,'YYYYMMDD')   BETWEEN TO_DATE( LEND_TERM_SDATE,'YYYYMMDD') AND TO_DATE(LEND_TERM_EDATE,'YYYYMMDD')
    )
ORDER BY M.CDATE 
		, M.LEND_TERM_SDATE     DESC       
       , M.REQUEST_UPJANG_CD  DESC      	/* 신청 업장코드  */         
     --  , M.REQUEST_ID         DESC          /* 신청ID */                            
    --   , M.SEQ                DESC          /* 신청ID 기준 일련번호 */ 
       , C.ALLC_SEQ           ASC           /* 배정순번       */]]></statement>
	<statement name="insertUtensil"><![CDATA[
	
INSERT INTO FSC_CATERINGUTENSIL_HIS (
       REQUEST_UPJANG_CD      /*  */ 
     , REQUEST_ID             /*  */ 
    -- , SEQ                    /*  */ 
     , ALLC_SEQ      /* 배정순번 */ 
     , MODIFY_SEQ      /* 수정차수 */ 
     , CELE_NM                /* 행사명  */      
     , LEND_TERM_SDATE        /* 대여기간 */ 
     , LEND_TERM_EDATE        /* 대여기간 */      
     , MACHINE_CLASS_CD       /* 기기/기물 구분 */ 
     , MACHINE_KIND_CD        /* 기기/기물 종류  */ 
     , MACHINE_CD             /* 기기/기물 기물명 */ 
     , RMA_QUANTITY           /* 잔여수량 */ 
     , REQUEST_QUANTITY       /* 신청수량 */ 
     , RMA_DATE                      /* 반납일자  */
     , APPRV_YN               /* 승인여부 */ 
     , CNTC_NUM_ENC           /* 연락처 암호화 */ 
   --  , ZIP_CODE               /* 우편번호 */
   --  , ADDR_ENC               /* 주소 암호화 */
     , ADDR_KEY                    /* ADDRKEY */      
     , TRANSPORT_MTOD1        /* 운송방법  */ 
     , TRANSPORT_MTOD2        /* 운송방법 */ 
     , CUSER                  /*  */
     , CDATE                  /*  */ 
     , UUSER                  /*  */ 
     , UDATE                  /*  */ 
) 
SELECT                       
       :requestUpjangCd        													/*  */ 
     , :requestId              													/*  */ 
  --   , :seq                     												/* 신청ID 기준 일련번호 */
     , :allcSeq    									                 /* 배정순번 */
     , (SELECT NVL(MAX(MODIFY_SEQ),0) +1               /* 수정차수 */
     	FROM FSC_CATERINGUTENSIL_HIS
     	WHERE REQUEST_UPJANG_CD = :requestUpjangCd
     	AND REQUEST_ID = :requestId
     	AND ALLC_SEQ = :allcSeq
     	)     
     , :celeNm                 													/* 행사명  */      
     , :lendTermSdate          													/* 대여기간 */ 
     , :lendTermEdate          													/* 대여기간 */      
     , :machineClassCd         													/* 기기/기물 구분 */ 
     , :machineKindCd          													/* 기기/기물 종류  */ 
     , :machineCd             	 												/* 기기/기물 기물명 */ 
     , :rmaQuantity            													/* 잔여수량 */ 
     , :requestQuantity        													/* 신청수량 */ 
     ,  TO_DATE(:rmaDate,'YYYY-MM-DD')                         					/* 반납일자  */
     , :apprvYn               													/* 승인여부 */ 
     , <#if cntcNum?exists> SCC_CRYPTO.ENC_FUN(:cntcNum) <#else> null </#if>    /* 연락처 암호화 */ 
   --  , <#if zipCode1?exists> :zipCode1 || :zipCode2  <#else> null </#if>   		/* 우편번호 */
   --  , <#if addr?exists> SCC_CRYPTO.ENC_FUN(:addr) <#else> null </#if>          /* 주소 암호화 */      
     , <#if addrKey?exists> :addrKey <#else> null </#if>          /* ADDRKEY */      
     , <#if transportMtod1?exists> :transportMtod1 <#else> null </#if>          /* 운송방법  */ 
     , <#if transportMtod2?exists> :transportMtod2 <#else> null </#if>         	/* 운송방법 */ 
     , :loginSabun                  											/*  */
     , SYSDATE                													/*  */ 
     , :loginSabun                  											/*  */ 
     , SYSDATE                 													/*  */ 
FROM  FSC_CATERINGCELE_ALLC
 WHERE REQUEST_UPJANG_CD   = :requestUpjangCd                                   /*  */ 
     AND REQUEST_ID        = :requestId    										/*  */ 
   --  AND SEQ       		   = :seq             									/*  */ 
	]]></statement>
	<statement name="updateUtensil"><![CDATA[
UPDATE FSC_CATERINGUTENSIL_REG SET 
       CELE_NM            = :celeNm                  												/* 행사명  */      
     , LEND_TERM_SDATE    = :lendTermSdate           												/* 대여기간 */ 
     , LEND_TERM_EDATE    = :lendTermEdate          	 											/* 대여기간 */      
     , MACHINE_CLASS_CD   = :machineClassCd          												/* 기기/기물 구분 */ 
     , MACHINE_KIND_CD    = :machineKindCd           												/* 기기/기물 종류  */ 
     , MACHINE_CD         = :machineCd               												/* 기기/기물 기물명 */ 
     , RMA_QUANTITY       = :rmaQuantity            												/* 잔여수량 */ 
     , REQUEST_QUANTITY   = :requestQuantity         												/* 신청수량 */ 
     , RMA_DATE           = TO_DATE(:rmaDate,'YYYY-MM-DD')            								/* 반납일자  */
     , CNTC_NUM_ENC       = <#if cntcNum?exists> SCC_CRYPTO.ENC_FUN(:cntcNum) <#else> null </#if>   /* 연락처 암호화 */ 
   --  , ZIP_CODE           = <#if zipCode1?exists> :zipCode1 || :zipCode2  <#else> null </#if>     	/* 우편번호 */
   --  , ADDR_ENC           = <#if addr?exists> SCC_CRYPTO.ENC_FUN(:addr) <#else> null </#if>         /* 주소 암호화 */
     , ADDR_KEY             =  <#if addrKey?exists> :addrKey <#else> null </#if>     
     , TRANSPORT_MTOD1    = <#if transportMtod1?exists> :transportMtod1 <#else> null </#if>         /* 운송방법  */ 
     , TRANSPORT_MTOD2    = <#if transportMtod2?exists> :transportMtod2 <#else> null </#if>         /* 운송방법 */ 
     , APPRV_YN           = :apprvYn                                                                /* 승인여부 */
     , UUSER              = :loginSabun                   											/*  */ 
     , UDATE              = SYSDATE                   												/*  */ 
WHERE  REQUEST_UPJANG_CD  = :requestUpjangCd         												/*  */ 
   AND REQUEST_ID         = :requestId               												/*  */ 
  -- AND SEQ                = :seq                     												/*  */ 
	]]></statement>

	<statement name="selectCookGuidList"><![CDATA[
SELECT  
       M.REQUEST_UPJANG_CD         				AS REQUEST_UPJANG_CD       /* 신청 업장코드  */                    
     , ( 
		   SELECT UPJANGNM  
		     FROM HLDC_ST_UPJANG S
		    WHERE S.UPJANG = M.REQUEST_UPJANG_CD
		      AND ROWNUM = 1
	   ) 						   				AS REQUEST_UPJANG_NM 
     , M.REQUEST_ID                				AS REQUEST_ID              	/* 신청ID */                            
    -- , M.SEQ                      				AS SEQ                     	/* 신청ID 기준 일련번호 */              
     , GUID_TERM_SDATE      												/* 지도기간 */ 
     , GUID_TERM_SDATE      					AS ORG_GUID_TERM_SDATE		/* 지도기간 */ 
     , GUID_TERM_EDATE      												/* 지도기간 */ 
     , GUID_TERM_EDATE      					AS ORG_GUID_TERM_EDATE		/* 지도기간 */ 
    -- , GUID_TIME            												/* 지도시간 */ 
     , DECODE(LENGTH(TO_CHAR(GUID_TIME)),3,'0'||TO_CHAR(GUID_TIME), TO_CHAR(GUID_TIME)) AS GUID_TIME
     , GUID_TIME            					AS ORG_GUID_TIME			/* 지도시간 */ 
     , EDU_TRGLST           												/* 교육대상자 */ 
     , EDU_TRGLST           					AS ORG_EDU_TRGLST			/* 교육대상자 */ 
     , NO_MAN               												/* 인원 */ 
     , NO_MAN               					AS ORG_NO_MAN				/* 인원 */ 
     , DECODE(NVL(ALLC_YN, '0'), 'Y', '1', '0') AS ALLC_YN              	/* 배정여부 */ 
     , REQUEST_FACT         												/* 요청사항 */ 
     , REQUEST_FACT         					AS ORG_REQUEST_FACT				/* 요청사항 */ 
     , NVL(C.ALLC_SEQ,1)                  		AS ALLC_SEQ                 /* 배정순번       */
     , C.ALLC_SABUN                				AS ALLC_SABUN               /* 배정 담당 사번 */
     , ( 
	     SELECT NM_KOR 
	       FROM SCC_USERINFO A
		  WHERE A.SABUN = C.ALLC_SABUN
		    AND ROWNUM = 1
       ) 						   				AS ALLC_NM
     , C.ALLC_REASON               				AS ALLC_REASON              /* 배정사유       */
     , NVL(C.ALLC_STATUS,'001')      				AS ALLC_STATUS              /* 배정상태       */
     , CASE WHEN ALLC_SEQ IS NULL 
       THEN 'Y' 
       END  									AS NEW_YN
     , NVL(C.CATER_CLASS,'004')    				AS CATER_CLASS              /* 케터링구분 001-행사, 002-조리인력, 003-조리지도 */
FROM   FSC_CATERINGCOOKGUID_REG M
     , FSC_CATERINGCELE_ALLC C                                                     
     , SCO_UPJANG_MST_V B
WHERE M.REQUEST_UPJANG_CD = B.UPJANG
AND  M.REQUEST_UPJANG_CD =  C.REQUEST_UPJANG_CD(+)    					/* 신청 업장코드  */                             
AND    M.REQUEST_ID        =  C.REQUEST_ID(+)           					/* 신청ID */                                     
--AND    M.SEQ               =  C.SEQ(+)                  					/* 신청ID 기준 일련번호 */     
AND   C.CATER_CLASS(+)        = '004'
AND   B.FS_UPJANG = 'Y'    
<#if muCd?has_content>
AND    B.MU_CD = :muCd
</#if>
<#if tmCd?has_content>
AND    B.TM_CD = :tmCd
</#if>
<#if upjangCd?has_content>
AND    M.REQUEST_UPJANG_CD = :upjangCd
</#if>
<#if status?has_content>
AND   NVL( C.ALLC_STATUS ,'001')	= :status
</#if>
AND (    TO_DATE(GUID_TERM_SDATE,'YYYYMMDD') BETWEEN TO_DATE(:fromDay,'YYYYMMDD')  AND TO_DATE(:toDay,'YYYYMMDD')
      OR TO_DATE(GUID_TERM_EDATE,'YYYYMMDD') BETWEEN TO_DATE(:fromDay,'YYYYMMDD')  AND TO_DATE(:toDay,'YYYYMMDD')
      OR TO_DATE(:fromDay,'YYYYMMDD') BETWEEN TO_DATE( GUID_TERM_SDATE,'YYYYMMDD') AND TO_DATE(GUID_TERM_EDATE,'YYYYMMDD')
      OR TO_DATE(:toDay,'YYYYMMDD')   BETWEEN TO_DATE( GUID_TERM_SDATE,'YYYYMMDD') AND TO_DATE(GUID_TERM_EDATE,'YYYYMMDD')
    )
ORDER BY M.CDATE
		, M.GUID_TERM_SDATE     DESC       
       , M.REQUEST_UPJANG_CD  DESC      	/* 신청 업장코드  */         
    --   , M.REQUEST_ID         DESC          /* 신청ID */                            
    --   , M.SEQ                DESC          /* 신청ID 기준 일련번호 */ 
       , C.ALLC_SEQ           ASC           /* 배정순번       */
	]]></statement>
	<statement name="insertCookGuid"><![CDATA[
INSERT INTO FSC_CATERINGCOOKGUID_HIS (
       REQUEST_UPJANG_CD    /* 업장 */ 
     , REQUEST_ID           /*  */ 
    -- , SEQ                  /*  */ 
     , ALLC_SEQ  /* 배정순번 */
     , MODIFY_SEQ  /* 수정차수 */
     , GUID_TERM_SDATE      /* 지도기간 */ 
     , GUID_TERM_EDATE      /* 지도기간 */ 
     , GUID_TIME            /* 지도시간 */ 
     , EDU_TRGLST           /* 교육대상자 */ 
     , NO_MAN               /* 인원 */ 
     , ALLC_YN              /* 배정여부 */ 
     , REQUEST_FACT         /* 요청사항 */ 
     , CUSER                /*  */ 
     , CDATE                /*  */ 
     , UUSER                /*  */ 
     , UDATE                /*  */    
) VALUES ( 
       :requestUpjangCd     										/* 업장 */ 
     , :requestId           										/*  */ 
    -- , :seq                    										/* 신청ID 기준 일련번호 */
     , :allcSeq     	                           					/* 배정순번 */     
     ,  (SELECT NVL(MAX(MODIFY_SEQ),0) +1               /* 수정차수 */
     	FROM FSC_CATERINGCOOKGUID_HIS
     	WHERE REQUEST_UPJANG_CD = :requestUpjangCd
     	AND REQUEST_ID = :requestId
     	AND ALLC_SEQ = :allcSeq
     	)         
     , :guidTermSdate       										/* 지도기간 */ 
     , :guidTermEdate       										/* 지도기간 */ 
     , <#if guidTime?exists> :guidTime <#else> null </#if>          /* 지도시간 */ 
     , :eduTrglst           										/* 교육대상자 */ 
     , :noMan               										/* 인원 */ 
     , :allcYn            											/* 배정여부 */ 
     , <#if requestFact?exists> :requestFact <#else> null </#if>    /* 요청사항 */ 
     , :loginSabun               									/*  */ 
     , SYSDATE               										/*  */ 
     , :loginSabun               									/*  */ 
     , SYSDATE               										/*  */    
)
	]]></statement>
	<statement name="updateCookGuid"><![CDATA[
UPDATE FSC_CATERINGCOOKGUID_REG SET        
       GUID_TERM_SDATE   = :guidTermSdate      											/* 지도기간 */ 
     , GUID_TERM_EDATE   = :guidTermEdate      											/* 지도기간 */ 
     , GUID_TIME         = <#if guidTime?exists> :guidTime <#else> null </#if>          /* 지도시간 */ 
     , EDU_TRGLST        = :eduTrglst          											/* 교육대상자 */ 
     , NO_MAN            = :noMan              											/* 인원 */ 
     , ALLC_YN               = :allcYn				  									/* 배정여부	*/
     , REQUEST_FACT      = <#if requestFact?exists> :requestFact <#else> null </#if>    /* 요청사항 */
     , UUSER             = :loginSabun              									/*  */ 
     , UDATE             = SYSDATE              										/*  */ 
WHERE  REQUEST_UPJANG_CD = :requestUpjangCd    											/* 업장 */ 
  AND REQUEST_ID        = :requestId
  --AND SEQ               = :seq                											/*  */ 
	]]></statement>

	<statement name="insertAllc"><![CDATA[INSERT INTO FSC_CATERINGCELE_ALLC (
       REQUEST_UPJANG_CD      /* 신청업장코드       */
     , REQUEST_ID             /* 신청ID             */
    -- , SEQ                    /* 신청ID 기준 순번   */
     , CATER_CLASS
     , ALLC_SEQ               /* 배정순번           */
     , ALLC_SABUN             /* 배정 담당 사번     */
     , ALLC_REASON            /* 배정사유           */
     , ALLC_STATUS            /* 배정상태           */
     , FIRST_SIGN_PRCG_EMP    /* 1차 결재자 사번    */
     , FIRST_SIGN_STATUS      /* 1차 결재 진행상태  */
     , FIRST_RTN_REASON       /* 1차 결재 반려사유  */
     , CUSER                  /* 생성자 사번        */
     , CDATE                  /* 생성일시           */
     , UUSER                  /* 수정자 사번        */
     , UDATE                  /* 수정일시           */
) VALUES (
       :requestUpjangCd      							/* 신청업장코드       */
     , :requestId             							/* 신청ID             */
  --   , :seq                    							/* 신청ID 기준 순번   */
     , :caterClass
     ,  ( SELECT NVL(MAX(ALLC_SEQ),0) + 1
           FROM FSC_CATERINGCELE_ALLC
          WHERE REQUEST_UPJANG_CD = :requestUpjangCd    /* 신청업장코드       */
            AND REQUEST_ID        = :requestId      	/* 신청ID             */
          --  AND SEQ               = :seq     			/* 신청ID 기준 순번   */
            AND CATER_CLASS       = :caterClass
        )               								/* 배정순번           */
     , <#if allcSabun?exists> :allcSabun <#else> null </#if>               							/* 배정 담당 사번     */
     , <#if allcReason?exists> :allcReason <#else> null </#if>          							/* 배정사유           */
     , <#if allcStatus?exists> :allcStatus <#else> null </#if>            							/* 배정상태           */
     
     , <#if firstSignPrcgEmp?exists> :firstSignPrcgEmp <#else> null </#if>       /* 1차 결재자 사번    */
     , <#if firstSignStatus?exists> :firstSignStatus <#else> null </#if>         /* 1차 결재 진행상태  */
     , <#if firstRtnReason?exists> :firstRtnReason <#else> null </#if>          /* 1차 결재 반려사유  */
     
     , :loginSabun                  					/* 생성자 사번        */
     , SYSDATE                  						/* 생성일시           */
     , :loginSabun                  					/* 수정자 사번        */
     , SYSDATE                  						/* 수정일시           */
)]]></statement>
	<statement name="updateAllc"><![CDATA[UPDATE FSC_CATERINGCELE_ALLC SET      
       ALLC_SABUN        = <#if allcSabun?exists> :allcSabun <#else> null </#if>               /* 배정 담당 사번     */
     , ALLC_REASON       = <#if allcReason?exists> :allcReason <#else> null </#if>             /* 배정사유           */
     , ALLC_STATUS       = <#if allcStatus?exists> :allcStatus <#else> null </#if>             /* 배정상태           */
     
     , FIRST_SIGN_PRCG_EMP = <#if firstSignPrcgEmp?exists> :firstSignPrcgEmp <#else> null </#if>    /* 1차 결재자 사번    */
     , FIRST_SIGN_STATUS   = <#if firstSignStatus?exists> :firstSignStatus <#else> null </#if>    /* 1차 결재 진행상태  */
     , FIRST_RTN_REASON    = <#if firstRtnReason?exists> :firstRtnReason <#else> null </#if>   /* 1차 결재 반려사유  */
     
     , UUSER             = :loginSabun             /* 수정자 사번        */
     , UDATE             = SYSDATE                 /* 수정일시           */
WHERE  REQUEST_UPJANG_CD = :requestUpjangCd        /* 신청업장코드       */
AND    REQUEST_ID        = :requestId              /* 신청ID             */
--AND    SEQ               = :seq                    /* 신청ID 기준 순번   */
AND    ALLC_SEQ          = :allcSeq                /* 배정순번           */
AND    CATER_CLASS       = :caterClass]]></statement>
	<statement name="deleteAllc"><![CDATA[DELETE 
FROM   FSC_CATERINGCELE_ALLC 
WHERE  REQUEST_UPJANG_CD = :requestUpjangCd        /* 신청업장코드       */
AND    REQUEST_ID        = :requestId              /* 신청ID             */
--AND    SEQ               = :seq                    /* 신청ID 기준 순번   */
AND    CATER_CLASS       = :caterClass]]></statement>
</hqml>
