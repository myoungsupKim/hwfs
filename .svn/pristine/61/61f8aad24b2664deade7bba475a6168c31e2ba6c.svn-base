<?xml version="1.0" encoding="utf-8"?>
<Script type="xscript4.0"><![CDATA[/*
 * library prototype
 * 2017.03.29	kihoon	[CH201703_00751] 미마감내역 조회 팝업 프로그램 개발
 */
/**
 * Builtin String
 */
if (!String.prototype.startsWith ) {
    
	String.prototype.startsWith = function(str) {
		return this.indexOf(str,0)==0;
	}
	
    String.prototype.endsWith = function(str) {
		var nStart = this.length - str.length;
		return this.indexOf(str, nStart)==nStart;
	}

    String.prototype.splitEmpty = function(str) {
		var retVals = new Array(0);
		if( gfn_isNull(this) ) {
			return retVals;
		} else {
			return this.split(str);
		}
	}
	
    String.prototype.split2 = function(delimiter1, delimiter2) {
		var arrRow = this.splitEmpty(delimiter1);
		for(var i = 0; i < arrRow.length; i++) {
			arrRow[i] = arrRow[i].splitEmpty(delimiter2);
		}
		return arrRow;
	}
}


/**
 * Builtin Array
 */
if (!Array.prototype.indexOf ) {
    Array.prototype.indexOf = function(value, start) {
		start = gfn_nvl(start,0);
		for(var i = start; i < this.length; i++) {
			if( this[i] === value ) return i; 
		}
		return -1;
	}
    
    Array.prototype.lastIndexOf = function(value, start) {
		start = gfn_nvl(start, this.length-1);
		for(var i = start; i >= 0; i--) {
			if( this[i] === value ) return i; 
		}
		return -1;
	}
    
    Array.prototype.remove = function(index) {
		var arrPost = new Array();
		for(var i = this.length; i > index; i--) {
			arrPost.push(this.pop());
		}
		for(var i = arrPost.length - 2; i >= 0; i--) {
			this.push(arrPost[i]);
		}
		return this;
	}

	Array.prototype.findValues = function(strPattern) {
		strPattern = gfn_nvl(strPattern, "");
		var arrPattern = strPattern.splitEmpty(",");
		var arrResult = [];
		
		for(var i = 0; i < arrPattern.length; i++) {
			if( arrPattern[i].indexOf("*") != -1 ) {// '*'를 포함한 경우
				var strPrefix  = "";
				var strPostfix = "";
				if( arrPattern[i].startsWith('*') ) {
					strPostfix = arrPattern[i].substr(1);
				} else if( arrPattern[i].endsWith('*') ) {
					strPrefix  = arrPattern[i].substr(0, arrPattern[i].length-1);
				} else if( arrPattern[i].indexOf('*') > 0 ) {
					var nIdx  = arrPattern[i].indexOf('*');
					strPrefix = arrPattern[i].substr(0, nIdx);
					strPostfix= arrPattern[i].substr(nIdx+1);
				}
				
				for(var j = 0; j < this.length; j++) {
					var bMatch = false;
					if( strPrefix.length > 0 &&  strPostfix.length > 0) {
						if( this[j].startsWith(strPrefix) && this[j].endsWith(strPostfix) ) {
							bMatch = true;
						}
					} else if( strPrefix.length > 0 && this[j].startsWith(strPrefix)) {
						bMatch = true;
					} else if( strPostfix.length > 0 && this[j].endsWith(strPostfix) ) {
						bMatch = true;
					}
					
					if( bMatch && arrResult.indexOf(this[j]) == -1 ) {
						arrResult.push(this[j]);
					}
				}
			} else if( this.indexOf(arrPattern[i]) >= 0 && arrResult.indexOf(arrPattern[i]) == -1) {
				arrResult.push(arrPattern[i]);
			}
		}
		return arrResult;
	}
}]]></Script>
