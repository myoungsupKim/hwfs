<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="ma.mag.upjangDayCloseDAO">
	<desc>사업장 일마감 하는 HQML Query</desc>

	<!-- 마감하기전 이전날짜 미마감된건 조회. -->
	<statement name="selectBeforeMagam" type="select">
		/*+ com.hwfs.ma.mag.dao.UpjangDayCloseDAO.selectBeforeMagam */
		<![CDATA[
			   
	    /* 마감하려는 날짜 이전에 미마감된건이 있는지 조회 CLOSE_GUBUN 별로 조회 */
SELECT COUNT(CLOSE_DATE) CNT
FROM
(
  (
    SELECT CD_SY||CD_SM||CD_SD AS CLOSE_DATE 					/* 년월 */
    FROM SCC_CALENDA_DATA
    WHERE CD_SY||CD_SM||CD_SD >= '20151001' 						/* 시작기준년월 10월 1일로 고정*/
    AND CD_SY||CD_SM||CD_SD <= TO_CHAR(TO_DATE(:closeDate,'YYYYMMDD')-1,'YYYYMMDD')   /* 현재날짜     */
  )

  MINUS 

  (
    SELECT CLOSE_DATE
    FROM MAS_CLOSE_MGMT
    WHERE CLOSE_GUBUN = :closeGubun
    AND UPJANG = :upjang
    AND CLOSE_DATE BETWEEN '20151001' AND TO_CHAR(TO_DATE(:closeDate,'YYYYMMDD')-1,'YYYYMMDD')
  )
)
		]]>
	</statement>
	
	<!-- 마감하기전 이전날짜 미마감된건 조회(전체마감). -->
	<statement name="selectBeforeMagamAll" type="select">
		/*+ com.hwfs.ma.mag.dao.UpjangDayCloseDAO.selectBeforeMagamAll */
		<![CDATA[
			   
	    /* 마감하려는 날짜 이전에 미마감된건이 있는지 전체마감 모두 조회*/
SELECT COUNT(1) CNT
FROM
(
  (
    SELECT CD_SY||CD_SM||CD_SD AS CLOSE_DATE /* 년월 */
           , '001' CLOSE_GUBUN
    FROM SCC_CALENDA_DATA
    WHERE CD_SY||CD_SM||CD_SD >= '20151001' /* 시작기준년월 */
    AND CD_SY||CD_SM||CD_SD <= TO_CHAR(TO_DATE(:closeDate,'YYYYMMDD')-1,'YYYYMMDD')   /* 현재날짜     */

    UNION ALL

    SELECT CD_SY||CD_SM||CD_SD AS CLOSE_DATE /* 년월 */
           , '004' CLOSE_GUBUN
    FROM SCC_CALENDA_DATA
    WHERE CD_SY||CD_SM||CD_SD >= '20151001' /* 시작기준년월 */
    AND CD_SY||CD_SM||CD_SD <= TO_CHAR(TO_DATE(:closeDate,'YYYYMMDD')-1,'YYYYMMDD')   /* 현재날짜     */
    
    UNION ALL

    SELECT CD_SY||CD_SM||CD_SD AS CLOSE_DATE /* 년월 */
           , '005' CLOSE_GUBUN
    FROM SCC_CALENDA_DATA
    WHERE CD_SY||CD_SM||CD_SD >= '20151001' /* 시작기준년월 */
    AND CD_SY||CD_SM||CD_SD <= TO_CHAR(TO_DATE(:closeDate,'YYYYMMDD')-1,'YYYYMMDD')   /* 현재날짜     */
    
    UNION ALL

    SELECT CD_SY||CD_SM||CD_SD AS CLOSE_DATE /* 년월 */
           , '006' CLOSE_GUBUN
    FROM SCC_CALENDA_DATA
    WHERE CD_SY||CD_SM||CD_SD >= '20151001' /* 시작기준년월 */
    AND CD_SY||CD_SM||CD_SD <= TO_CHAR(TO_DATE(:closeDate,'YYYYMMDD')-1,'YYYYMMDD')   /* 현재날짜     */
    
    UNION ALL

    SELECT CD_SY||CD_SM||CD_SD AS CLOSE_DATE /* 년월 */
           , '008' CLOSE_GUBUN
    FROM SCC_CALENDA_DATA
    WHERE CD_SY||CD_SM||CD_SD >= '20151001' /* 시작기준년월 */
    AND CD_SY||CD_SM||CD_SD <= TO_CHAR(TO_DATE(:closeDate,'YYYYMMDD')-1,'YYYYMMDD')   /* 현재날짜     */
    
    UNION ALL

    SELECT CD_SY||CD_SM||CD_SD AS CLOSE_DATE /* 년월 */
           , '009' CLOSE_GUBUN
    FROM SCC_CALENDA_DATA
    WHERE CD_SY||CD_SM||CD_SD >= '20151001' /* 시작기준년월 */
    AND CD_SY||CD_SM||CD_SD <= TO_CHAR(TO_DATE(:closeDate,'YYYYMMDD')-1,'YYYYMMDD')   /* 현재날짜     */
  )

  MINUS 

  (
    SELECT CLOSE_DATE, CLOSE_GUBUN
    FROM MAS_CLOSE_MGMT
    WHERE CLOSE_GUBUN = '001'
    AND UPJANG = :upjang
    AND CLOSE_DATE BETWEEN '20151001' AND TO_CHAR(TO_DATE(:closeDate,'YYYYMMDD')-1,'YYYYMMDD')

    UNION ALL 

    SELECT CLOSE_DATE, CLOSE_GUBUN
    FROM MAS_CLOSE_MGMT
    WHERE CLOSE_GUBUN = '004'
    AND UPJANG = :upjang
    AND CLOSE_DATE BETWEEN '20151001' AND TO_CHAR(TO_DATE(:closeDate,'YYYYMMDD')-1,'YYYYMMDD')
    
    UNION ALL 

    SELECT CLOSE_DATE, CLOSE_GUBUN
    FROM MAS_CLOSE_MGMT
    WHERE CLOSE_GUBUN = '005'
    AND UPJANG = :upjang
    AND CLOSE_DATE BETWEEN '20151001' AND TO_CHAR(TO_DATE(:closeDate,'YYYYMMDD')-1,'YYYYMMDD')
    
    UNION ALL 

    SELECT CLOSE_DATE, CLOSE_GUBUN
    FROM MAS_CLOSE_MGMT
    WHERE CLOSE_GUBUN = '006'
    AND UPJANG = :upjang
    AND CLOSE_DATE BETWEEN '20151001' AND TO_CHAR(TO_DATE(:closeDate,'YYYYMMDD')-1,'YYYYMMDD')
    
    UNION ALL 

    SELECT CLOSE_DATE, CLOSE_GUBUN
    FROM MAS_CLOSE_MGMT
    WHERE CLOSE_GUBUN = '008'
    AND UPJANG = :upjang
    AND CLOSE_DATE BETWEEN '20151001' AND TO_CHAR(TO_DATE(:closeDate,'YYYYMMDD')-1,'YYYYMMDD')
    
    UNION ALL 

    SELECT CLOSE_DATE, CLOSE_GUBUN
    FROM MAS_CLOSE_MGMT
    WHERE CLOSE_GUBUN = '009'
    AND UPJANG = :upjang
    AND CLOSE_DATE BETWEEN '20151001' AND TO_CHAR(TO_DATE(:closeDate,'YYYYMMDD')-1,'YYYYMMDD')
  )
)      
		]]>
	</statement>
	
		<!-- 일마감 지불 차이 조회. -->
	<statement name="selectCloseInfo" type="select">
		/*+ com.hwfs.ma.mag.dao.UpjangDayCloseDAO.selectCloseInfo */
		<![CDATA[
			   WITH CLOSE_INFO AS (
            /*
             * 1 :현금
             * 4 :쿠폰
             * 5 :타점마감
             * 6 :타사상품권
             * 7 :후불(외상)
             * 8 :후불
             * P1:선수금
             * P2:선수금(식권)
             * P3:외상(식권)
             * Z :내부이용
             */
            SELECT  OCCUR_DATE
                    ,SYS_CLASS
                    ,MU_CD
                    ,UPJANG_CD
                    ,PAY_CD
                    ,PAY_CD_NM
                    ,CASE WHEN PAY_CD = 'Z' THEN EVIDENCE_2
                        ELSE EVIDENCE_1
                        END PAY_TYPE_CD
                    ,CASE WHEN PAY_CD = '1' OR PAY_CD = '5' THEN DECODE(EVIDENCE_1,NULL,NULL,'현금영수증')
                        WHEN PAY_CD = '4' THEN
                            CASE WHEN EVIDENCE_2 = 'C' THEN (  -- 쿠폰
                                                        SELECT  DISTINCT COUPON_KIND_NM
                                                        FROM    SLA_COUPON_KIND_MST
                                                        WHERE   COUPON_KIND_CD = EVIDENCE_1
                                                        )
                                WHEN EVIDENCE_2 = 'G' THEN (    -- 상품권
                                                        SELECT  DISTINCT CODE_NAME
                                                        FROM    SCC_COMMON_CODE
                                                        WHERE   GROUP_CODE = 'GIFT_TYPE'
                                                        AND     CODE = EVIDENCE_1
                                                        )
                            END
                        WHEN PAY_CD = '6' THEN
                            (
                            SELECT  DISTINCT CODE_NAME
                            FROM    SCC_COMMON_CODE
                            WHERE   GROUP_CODE = 'GIFT_TYPE'
                            AND     CODE = EVIDENCE_1
                            )
                        WHEN PAY_CD = '7' OR PAY_CD = '8' THEN
                            (
                            SELECT  DISTINCT CUSTNM
                            FROM    HLDC_ST_CUST
                            WHERE   CUSTCD = EVIDENCE_1
                            )
                        WHEN PAY_CD = 'P1' OR PAY_CD = 'P2' OR PAY_CD = 'P3' THEN
                            (
                            SELECT  DISTINCT CUST_NM
                            FROM    SLA_ADVANCE_MST
                            WHERE   ADVANCE_NUM = EVIDENCE_1
                            )
                        WHEN PAY_CD = 'Z' THEN
                            (
                            SELECT  DISTINCT CC_NM
                            FROM    SCO_FS_HR_PERSONAL_V
                            WHERE   SABUN = EVIDENCE_2
                            )
                        END PAY_TYPE_NM
                    ,DDDD_CLOSE_YN
                    ,COUNT(PAY_CD) CNT
                    ,SUM(NVL(AMT,0)) AMT
            FROM    SLA_IF_UPJANG_PAYMENT
            WHERE   RECD_STATUS = 'L'
            AND     PAY_CD NOT IN ('2')            
            -- AND     MODIFY_SALS_YN = 'N'
            AND     OCCUR_DATE = :closeDate
            <#if sysClass == "11">
            	  AND     SYS_CLASS IN ('11')
		  </#if>
		  <#if sysClass == "16">
            	  AND     SYS_CLASS IN ('16')
		  </#if>
		  <#if sysClass == "19">
            	  AND     SYS_CLASS IN ('19')
		  </#if>
		  <#if sysClass == "17">
            	  AND     SYS_CLASS IN ('17')
		  </#if>
		  <#if sysClass == "99">
            	  AND     SYS_CLASS IN ('11', '16', '19', '17')
           </#if>
            <#if muCd?has_content>
            AND     MU_CD = :muCd
       		</#if>
                    AND     CC_CD IN (
                            SELECT  A.CC_CD
                            FROM    SCC_CC A
                                    ,HLDC_SC_DEPT_V B
                            WHERE   B.CC_CD = A.CC_CD
                            AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                            AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
                            --AND     B.TM_CD = 'CDG'
                            )
            AND     TO_CHAR(UPJANG_CD) = :upjang
            GROUP BY OCCUR_DATE
                    ,SYS_CLASS
                    ,MU_CD
                    ,UPJANG_CD
                    ,PAY_CD
                    ,PAY_CD_NM
                    ,DDDD_CLOSE_YN
                    ,EVIDENCE_1
                    ,EVIDENCE_2
            UNION ALL
            /* 2:카드 */
            SELECT  OCCUR_DATE
                    ,SYS_CLASS
                    ,MU_CD
                    ,UPJANG_CD
                    ,'2'
                    ,(
                    SELECT  DISTINCT P.PAY_TYPE_NM
                    FROM    SLA_SALES_PAY_TYPE P
                    WHERE   P.SYS_CLASS = SYS_CLASS
                    AND     P.PAY_TYPE = '2'
                    )
                    ,NULL
                    ,NULL
                    ,DDDD_CLOSE_YN
                    ,COUNT(CARD_COM_CD)
                    ,SUM(NVL(USE_AMT,0))
            FROM    SLA_IF_CARD_APPRV_INFO
            WHERE   RECD_STATUS = 'L'
            AND     DEAL_TYPE = '1'
            -- AND     MODIFY_SALS_YN = 'N'
            AND     OCCUR_DATE = :closeDate
			<#if sysClass == "11">
            	  AND     SYS_CLASS IN ('11')
		  </#if>
		  <#if sysClass == "16">
            	  AND     SYS_CLASS IN ('16')
		  </#if>
		  <#if sysClass == "19">
            	  AND     SYS_CLASS IN ('19')
		  </#if>
		  <#if sysClass == "17">
            	  AND     SYS_CLASS IN ('17')
		  </#if>
		  <#if sysClass == "99">
            	  AND     SYS_CLASS IN ('11', '16', '19', '17')
           </#if>
            <#if muCd?has_content>
            AND     MU_CD = :muCd
       		</#if>
            AND     CC_CD IN (
                            SELECT  A.CC_CD
                            FROM    SCC_CC A
                                    ,HLDC_SC_DEPT_V B
                            WHERE   B.CC_CD = A.CC_CD
                            AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                            AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
                           -- AND     B.TM_CD = 'CDG'
                            )
            AND     TO_CHAR(UPJANG_CD) = :upjang
            GROUP BY OCCUR_DATE
                    ,SYS_CLASS
                    ,MU_CD
                    ,UPJANG_CD
                    --,CARD_COM_CD
                    ,DDDD_CLOSE_YN
        )
        SELECT  0 LVL   -- 전체
                ,OCCUR_DATE
                ,SYS_CLASS
                ,MU_CD
                ,NULL UPJANG_CD
                ,DECODE(DDDD_CLOSE_YN,'Y','전체(마감)','전체') UPJANG_NM
                ,NULL PAY_CD
                ,NULL PAY_CD_NM
                ,NULL PAY_TYPE_CD
                ,NULL PAY_TYPE_NM
                ,DDDD_CLOSE_YN
                ,SUM(NVL(CNT,0)) CNT
                ,SUM(NVL(AMT,0)) AMT
        FROM    CLOSE_INFO
        GROUP BY OCCUR_DATE
                ,SYS_CLASS
                ,MU_CD
                ,DDDD_CLOSE_YN
        UNION ALL
        SELECT  1 LVL
                ,OCCUR_DATE
                ,SYS_CLASS
                ,MU_CD
                ,UPJANG_CD
                ,SCC_UPJANGNM_FUN(UPJANG_CD)
                ,NULL PAY_CD
                ,NULL PAY_CD_NM
                ,NULL PAY_TYPE_CD
                ,NULL PAY_TYPE_NM
                ,DDDD_CLOSE_YN
                ,SUM(CNT)
                ,SUM(AMT)
        FROM    CLOSE_INFO
        GROUP BY OCCUR_DATE
                ,SYS_CLASS
                ,MU_CD
                ,UPJANG_CD
                ,DDDD_CLOSE_YN
        UNION ALL
        SELECT  2 LVL
                ,OCCUR_DATE
                ,SYS_CLASS
                ,MU_CD
                ,UPJANG_CD
                ,SCC_UPJANGNM_FUN(UPJANG_CD)
                ,PAY_CD
                ,PAY_CD_NM
                ,PAY_TYPE_CD
                ,PAY_TYPE_NM
                ,DDDD_CLOSE_YN
                ,CNT
                ,AMT
        FROM    CLOSE_INFO
        ORDER BY DDDD_CLOSE_YN
                ,UPJANG_CD NULLS FIRST
                ,UPJANG_CD
                ,LVL
                ,PAY_CD
                ,PAY_TYPE_CD
	   
		]]>
	</statement>
	
		<!-- 일마감 지불 차이 조회. -->
	<statement name="selectCloseInfoOut" type="select">
		/*+ com.hwfs.ma.mag.dao.UpjangDayCloseDAO.selectCloseInfo */
		<![CDATA[
		SELECT  D.LVL
                    ,D.INTERNAL_USE_CLASS
                    ,D.OCCUR_DATE
                    ,D.SYS_CLASS
                    ,D.MU_CD
                    ,D.SALS_CLASS
                    ,D.VAT_CLASS
                    ,D.SAL_QUANTITY
                    ,D.UPRICE
                    ,D.NET_AMT
                    ,D.SVC_AMT
                    ,D.VAT_AMT
                    ,D.SAL_AMT
                    ,D.DDDD_CLOSE_YN
                    ,CASE WHEN D.INTERNAL_USE_CLASS = 'N' THEN
                        DECODE(D.SALS_CLASS,'',DECODE(DDDD_CLOSE_YN,'Y','전체(마감)','전체')
                            ,(
                            SELECT  DISTINCT ST.SALS_TYPE_NM
                            FROM    SLA_SALES_SALS_TYPE ST
                            WHERE   ST.SYS_CLASS = D.SYS_CLASS
                            AND     ST.SALS_TYPE = D.SALS_CLASS
                            ))
                    ELSE
                        DECODE(D.SALS_CLASS,'',DECODE(DDDD_CLOSE_YN,'Y','내부이용 전체(마감)','내부이용전체') 
                            ,(
                            SELECT  DISTINCT ST.SALS_TYPE_NM
                            FROM    SLA_SALES_SALS_TYPE ST
                            WHERE   ST.SYS_CLASS = D.SYS_CLASS
                            AND     ST.SALS_TYPE = D.SALS_CLASS
                            ))
                    END SALS_CLASS_NM
            FROM    (
                    SELECT  0 LVL
                            ,M.INTERNAL_USE_CLASS
                            ,D.OCCUR_DATE
                            ,D.SYS_CLASS
                            ,D.MU_CD
                            ,'' SALS_CLASS
                            ,'' VAT_CLASS
                            ,D.DDDD_CLOSE_YN
                            ,NVL(SUM(D.SAL_QUANTITY),0) SAL_QUANTITY
                            ,NVL(SUM(D.UPRICE),0) UPRICE
                            ,NVL(SUM(D.NET_AMT),0) NET_AMT
                            ,NVL(SUM(D.SVC_AMT),0) SVC_AMT
                            ,NVL(SUM(D.VAT_AMT),0) VAT_AMT
                            ,NVL(SUM(D.SAL_AMT),0) SAL_AMT
                    FROM    SLA_IF_UPJANG_SALS_DETAIL D
                            ,SLA_IF_UPJANG_SALS_MST M
                    WHERE   M.OCCUR_DATE = D.OCCUR_DATE
                    AND     M.SYS_CLASS = D.SYS_CLASS
                    AND     M.UPJANG_CD = D.UPJANG_CD
                    AND     M.RECEIPT_NUM = D.RECEIPT_NUM
                    AND     M.RECD_STATUS = 'L'
                    -- AND     M.MODIFY_SALS_YN = 'N'
                    AND     M.INTERNAL_USE_CLASS = 'N'
                    AND     D.RECD_STATUS = 'L'
                    --  AND     D.MODIFY_SALS_YN = 'N'
                    AND     D.OCCUR_DATE = :closeDate
                    <#if sysClass == "11">
            			  AND     D.SYS_CLASS IN ('11')
		 			</#if>
					<#if sysClass == "16">
          			  	  AND     D.SYS_CLASS IN ('16')
					</#if>
					<#if sysClass == "19">
            	 			 AND     D.SYS_CLASS IN ('19')
					  </#if>
					  <#if sysClass == "17">
			            	  AND     D.SYS_CLASS IN ('17')
					  </#if>
					  <#if sysClass == "99">
			            	  AND     D.SYS_CLASS IN ('11', '16', '19', '17')
			           </#if>
                    <#if muCd?has_content>
                    AND     D.MU_CD = :muCd
                    </#if>
                                    AND     D.CC_CD IN (
                                    SELECT  A.CC_CD
                                    FROM    SCC_CC A
                                            ,HLDC_SC_DEPT_V B
                                    WHERE   B.CC_CD = A.CC_CD
                                    AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                                    AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
                                 --   AND     B.TM_CD = 'CDG'
                                    )
                    AND     TO_CHAR(D.UPJANG_CD) = :upjang
                    GROUP BY M.INTERNAL_USE_CLASS
                            ,D.OCCUR_DATE
                            ,D.SYS_CLASS
                            ,D.MU_CD
                            ,D.DDDD_CLOSE_YN
                    UNION ALL
                    SELECT  1
                            ,M.INTERNAL_USE_CLASS
                            ,D.OCCUR_DATE
                            ,D.SYS_CLASS
                            ,D.MU_CD
                            ,D.SALS_CLASS
                            ,D.VAT_CLASS
                            ,D.DDDD_CLOSE_YN
                            ,NVL(SUM(D.SAL_QUANTITY),0) SAL_QUANTITY
                            ,NVL(SUM(D.UPRICE),0) UPRICE
                            ,NVL(SUM(D.NET_AMT),0) NET_AMT
                            ,NVL(SUM(D.SVC_AMT),0) SVC_AMT
                            ,NVL(SUM(D.VAT_AMT),0) VAT_AMT
                            ,NVL(SUM(D.SAL_AMT),0) SAL_AMT
                    FROM    SLA_IF_UPJANG_SALS_DETAIL D
                            ,SLA_IF_UPJANG_SALS_MST M
                    WHERE   M.OCCUR_DATE = D.OCCUR_DATE
                    AND     M.SYS_CLASS = D.SYS_CLASS
                    AND     M.UPJANG_CD = D.UPJANG_CD
                    AND     M.RECEIPT_NUM = D.RECEIPT_NUM
                    AND     M.RECD_STATUS = 'L'
                    -- AND     M.MODIFY_SALS_YN = 'N'
                    AND     M.INTERNAL_USE_CLASS = 'N'
                    AND     D.RECD_STATUS = 'L'
                    --  AND     D.MODIFY_SALS_YN = 'N'
                    AND     D.OCCUR_DATE = :closeDate
                    <#if sysClass == "11">
            			  AND     D.SYS_CLASS IN ('11')
		 			</#if>
					<#if sysClass == "16">
          			  	  AND     D.SYS_CLASS IN ('16')
					</#if>
					<#if sysClass == "19">
            	 			 AND     D.SYS_CLASS IN ('19')
					  </#if>
					  <#if sysClass == "17">
			            	  AND     D.SYS_CLASS IN ('17')
					  </#if>
					  <#if sysClass == "99">
			            	  AND     D.SYS_CLASS IN ('11', '16', '19', '17')
			           </#if>
                    <#if muCd?has_content>
                    AND     D.MU_CD = :muCd
                    </#if>
                    AND     D.CC_CD IN (
                                    SELECT  A.CC_CD
                                    FROM    SCC_CC A
                                            ,HLDC_SC_DEPT_V B
                                    WHERE   B.CC_CD = A.CC_CD
                                    AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                                    AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
                                   -- AND     B.TM_CD = 'CDG'
                                    )
                    AND     TO_CHAR(D.UPJANG_CD) = :upjang
                    GROUP BY M.INTERNAL_USE_CLASS
                            ,D.OCCUR_DATE
                            ,D.SYS_CLASS
                            ,D.MU_CD
                            ,D.SALS_CLASS
                            ,D.VAT_CLASS
                            ,D.DDDD_CLOSE_YN
                    UNION ALL
                    SELECT  0 LVL
                            ,M.INTERNAL_USE_CLASS
                            ,D.OCCUR_DATE
                            ,D.SYS_CLASS
                            ,D.MU_CD
                            ,'' SALS_CLASS
                            ,'' VAT_CLASS
                            ,D.DDDD_CLOSE_YN
                            ,NVL(SUM(D.SAL_QUANTITY),0) SAL_QUANTITY
                            ,NVL(SUM(D.UPRICE),0) UPRICE
                            ,NVL(SUM(D.NET_AMT),0) NET_AMT
                            ,NVL(SUM(D.SVC_AMT),0) SVC_AMT
                            ,NVL(SUM(D.VAT_AMT),0) VAT_AMT
                            ,NVL(SUM(D.SAL_AMT),0) SAL_AMT
                    FROM    SLA_IF_UPJANG_SALS_DETAIL D
                            ,SLA_IF_UPJANG_SALS_MST M
                    WHERE   M.OCCUR_DATE = D.OCCUR_DATE
                    AND     M.SYS_CLASS = D.SYS_CLASS
                    AND     M.UPJANG_CD = D.UPJANG_CD
                    AND     M.RECEIPT_NUM = D.RECEIPT_NUM
                    AND     M.RECD_STATUS = 'L'
                    -- AND     M.MODIFY_SALS_YN = 'N'
                    AND     M.INTERNAL_USE_CLASS = 'Y'
                    AND     D.RECD_STATUS = 'L'
                    --  AND     D.MODIFY_SALS_YN = 'N'
                    AND     D.OCCUR_DATE = :closeDate
                    <#if sysClass == "11">
            			  AND     D.SYS_CLASS IN ('11')
		 			</#if>
					<#if sysClass == "16">
          			  	  AND     D.SYS_CLASS IN ('16')
					</#if>
					<#if sysClass == "19">
            	 			 AND     D.SYS_CLASS IN ('19')
					  </#if>
					  <#if sysClass == "17">
			            	  AND     D.SYS_CLASS IN ('17')
					  </#if>
					  <#if sysClass == "99">
			            	  AND     D.SYS_CLASS IN ('11', '16', '19', '17')
			           </#if>
                    <#if muCd?has_content>
                    AND     D.MU_CD = :muCd
                    </#if>
                    AND     D.CC_CD IN (
                                    SELECT  A.CC_CD
                                    FROM    SCC_CC A
                                            ,HLDC_SC_DEPT_V B
                                    WHERE   B.CC_CD = A.CC_CD
                                    AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                                    AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
                                   -- AND     B.TM_CD = 'CDG'
                                    )
                    AND     TO_CHAR(D.UPJANG_CD) = :upjang
                    GROUP BY M.INTERNAL_USE_CLASS
                            ,D.OCCUR_DATE
                            ,D.SYS_CLASS
                            ,D.MU_CD
                            ,D.DDDD_CLOSE_YN
                    UNION ALL
                    SELECT  1
                            ,M.INTERNAL_USE_CLASS
                            ,D.OCCUR_DATE
                            ,D.SYS_CLASS
                            ,D.MU_CD
                            ,D.SALS_CLASS
                            ,D.VAT_CLASS
                            ,D.DDDD_CLOSE_YN
                            ,NVL(SUM(D.SAL_QUANTITY),0) SAL_QUANTITY
                            ,NVL(SUM(D.UPRICE),0) UPRICE
                            ,NVL(SUM(D.NET_AMT),0) NET_AMT
                            ,NVL(SUM(D.SVC_AMT),0) SVC_AMT
                            ,NVL(SUM(D.VAT_AMT),0) VAT_AMT
                            ,NVL(SUM(D.SAL_AMT),0) SAL_AMT
                    FROM    SLA_IF_UPJANG_SALS_DETAIL D
                            ,SLA_IF_UPJANG_SALS_MST M
                    WHERE   M.OCCUR_DATE = D.OCCUR_DATE
                    AND     M.SYS_CLASS = D.SYS_CLASS
                    AND     M.UPJANG_CD = D.UPJANG_CD
                    AND     M.RECEIPT_NUM = D.RECEIPT_NUM
                    AND     M.RECD_STATUS = 'L'
                    -- AND     M.MODIFY_SALS_YN = 'N'
                    AND     M.INTERNAL_USE_CLASS = 'Y'
                    AND     D.RECD_STATUS = 'L'
                    --  AND     D.MODIFY_SALS_YN = 'N'
                    AND     D.OCCUR_DATE = :closeDate
                    <#if sysClass == "11">
            			  AND     D.SYS_CLASS IN ('11')
		 			</#if>
					<#if sysClass == "16">
          			  	  AND     D.SYS_CLASS IN ('16')
					</#if>
					<#if sysClass == "19">
            	 			 AND     D.SYS_CLASS IN ('19')
					  </#if>
					  <#if sysClass == "17">
			            	  AND     D.SYS_CLASS IN ('17')
					  </#if>
					  <#if sysClass == "99">
			            	  AND     D.SYS_CLASS IN ('11', '16', '19', '17')
			           </#if>
                    <#if muCd?has_content>
                    AND     D.MU_CD = :muCd
                    </#if>
                    AND     D.CC_CD IN (
                                    SELECT  A.CC_CD
                                    FROM    SCC_CC A
                                            ,HLDC_SC_DEPT_V B
                                    WHERE   B.CC_CD = A.CC_CD
                                    AND     A.START_DATE <= TO_CHAR(SYSDATE,'YYYYMMDD')
                                    AND     A.END_DATE > TO_CHAR(SYSDATE,'YYYYMMDD')
                                   -- AND     B.TM_CD = 'CDG'
                                    )
                    AND     TO_CHAR(D.UPJANG_CD) = :upjang
                    GROUP BY M.INTERNAL_USE_CLASS
                            ,D.OCCUR_DATE
                            ,D.SYS_CLASS
                            ,D.MU_CD
                            ,D.SALS_CLASS
                            ,D.VAT_CLASS
                            ,D.DDDD_CLOSE_YN
                    ) D
            ORDER BY D.DDDD_CLOSE_YN
                    ,D.INTERNAL_USE_CLASS
                    ,D.LVL
                    ,D.OCCUR_DATE
                    ,D.SYS_CLASS
                    ,D.MU_CD
                    ,D.SALS_CLASS	   
	   
		]]>
	</statement>

	<!-- 사업장 일마감 하는(을)를 등록한다. -->
	<statement name="insert" type="insert">
		/*+ com.hwfs.ma.mag.dao.UpjangDayCloseDAO.insert */
		<![CDATA[
		INSERT INTO TABLE_NAME 
		(
		       COLUMN_NAME1,
			   COLUMN_NAME2,
		       CUSER,
		       CDATE
		)
		VALUES
		(
		       :columnName1,
			   <#if columnName2?has_content> :columnName2, <#else> null, </#if>
		       :loginSabun,
		       SYSDATE
		)
		]]>
	</statement>
	
	<!-- 사업장 일마감 하는(을)를 수정한다. -->
	<statement name="update" type="update">
		/*+ com.hwfs.ma.mag.dao.UpjangDayCloseDAO.update */
		<![CDATA[
		UPDATE TABLE_NAME 
		SET    COLUMN_NAME1 = :columnName1,
		       COLUMN_NAME2 = :columnName2,
		       UUSER = :loginSabun,
		       UDATE = SYSDATE
		WHERE  COLUMN_NAME = :columnName
		]]>
	</statement>

	<!-- 사업장 일마감 하는(을)를 삭제한다. -->
	<statement name="delete" type="delete">
		/*+ com.hwfs.ma.mag.dao.UpjangDayCloseDAO.delete */
		<![CDATA[
		DELETE 
		FROM   TABLE_NAME 
		WHERE  COLUMN_NAME = :columnName
		]]>
	</statement>

</hqml>
