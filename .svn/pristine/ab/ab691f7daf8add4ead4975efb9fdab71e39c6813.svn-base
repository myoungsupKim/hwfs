<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="ft.fdm.entryMstDAO">
    <desc>관세비용 및 입고예정정보를 등록 관리 HQML Query</desc>

    <!-- 관세비용 및 입고예정정보를 등록 관리 목록을 조회한다. -->
    <statement name="selectList" type="select">
        /*+ com.hwfs.ft.fdm.dao.EntryMstDAO.selectList */
        <![CDATA[
          SELECT
                   0 CHK,
                   A.ENTRY_NUM,
                 A.PO_ORDER_NUM,
                 A.BL_NUM,
                 A.LC_NUM,
                 A.INCOME_LIC_NUM,
                 A.CL_AMOUNT_UNIT,
                 A.ENTRY_EXCHANGE_RATE,
                 A.INCOME_NEWHGHT_DATE,
                 A.LIC_DATE,
                 A.NEWHGHT_CUSTOMS_CD,    --세관
                 C.VD_NM_LOC NEWHGHT_CUSTOMS_NM,
                 A.TARIFF_HOUSE_CD,       --관세사
                 D.VD_NM_LOC TARIFF_HOUSE_NM,

                 A.COLET_TYPE,
                 (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'COLET_TYPE' AND CODE = A.COLET_TYPE ) AS COLET_TYPE_NM,
                 A.DELIVER_YN,
                 (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'DELIVER_YN' AND CODE = A.DELIVER_YN ) AS DELIVER_YN_NM,
                 B.ARRIV_PORT_PORT_CD,
                 (SELECT PORT_NM_HANGUL FROM PORT_AIRPORT_MGMT_PORT
                 WHERE B.ARRIV_NATION_CD = NATION_CD AND B.ARRIV_PORT_PORT_CD = PORT_CD ) ARRIV_PORT_PORT_NM,/* 도착 항구/공항 명  */
                 B.SPLR_NM,
                 (SELECT COUNT(*) FROM INVENTORY_MGMT_DELIVER WHERE A.PO_ORDER_NUM = PO_ORDER_NUM AND A.ENTRY_NUM=ENTRY_NUM AND DELIVER_STATUS='20') DELIVER_CNT,	  /* 통관된 입고내역건*/
                 (SELECT MAX(LAST_SALE_EDATE) FROM INVENTORY_MGMT_DELIVER WHERE ENTRY_NUM=A.ENTRY_NUM AND PO_ORDER_NUM = B.PO_ORDER_NUM ) LAST_SALE_EDATE,
                 (SELECT MAX(FIRST_DELIVER_DATE) FROM INVENTORY_MGMT_DELIVER WHERE ENTRY_NUM=A.ENTRY_NUM AND PO_ORDER_NUM = B.PO_ORDER_NUM ) FIRST_DELIVER_DATE,
                 A.SIGN_EXCHANGE_RATE,
                 A.CUSER,
                 A.CDATE,
                 A.UUSER,
                 A.UDATE,
                 NVL((
                     /* 부분통관시 기존 전표번호로 인해 입고취소가 안되어 주석처리 2016.02.02 100-PO-1510-0170
                     (SELECT
                         NVL(SUM(DECODE(T2.SLIP_STATUS,'P',1,'V',1) ),0)
                      FROM GDSPAYM_MST T
                           ,FT_SAP_INTERFACE T2
                      WHERE B.PO_ORDER_NUM = T.PO_ORDER_NUM
                      AND T.ALT_FISCAL_SLIP_NUM = T2.SLIP_NUM
                      )
                      +
                      */
                      (   SELECT
                               NVL(SUM(DECODE(X.SLIP_STATUS,'P',1,'V',1) ),0)
                           FROM INVENTORY_MGMT_DELIVER T
                               ,DELIVERITEM_OTHER_AMT_DIV T2
                               ,PO_ORDER_OTHER_AMT  T3
                               ,FT_SAP_INTERFACE X
                           WHERE T.DELIVER_NUM = T2.DELIVER_NUM
                           AND T.PO_ORDER_NUM = T3.PO_ORDER_NUM
                           AND T2.OTHER_AMT_SEQ =T3.OTHER_AMT_SEQ
                           AND T2.ALT_FISCAL_SLIP_NUM = X.SLIP_NUM
                           AND T.PO_ORDER_NUM = B.PO_ORDER_NUM
                           AND T.ENTRY_NUM = A.ENTRY_NUM  --부분통관 적용 2016.02.02
                      )
                  ),0) NONARRIV_CNT,  --미착대체건 체크
                 (
                      SELECT
                         NVL(SUM(DECODE(NONARRIV_SLIP_CREATION_YN,'Y',1) ),0)
                      FROM PO_ORDER_OTHER_AMT T
                      WHERE B.PO_ORDER_NUM = T.PO_ORDER_NUM
                  ) NONARRIV_CNT2	--수수료 정산 미착대체건 체크
          FROM   ENTRY_MST A
                 ,PO_ORDER_MST B
                 ,EPROCUSR.ESMVDFW C
                 ,EPROCUSR.ESMVDFW D
          WHERE A.PO_ORDER_NUM = B.PO_ORDER_NUM
          AND A.NEWHGHT_CUSTOMS_CD = C.VD_CD(+)
          AND A.TARIFF_HOUSE_CD = D.VD_CD(+)
          AND C.CUS_VD_CLS(+) = '40'   --세관
          AND D.CUS_VD_CLS(+) = '30'   --관세사


            <#if term?has_content>
              <#if term == "A">	/* 수입신고일자 */
                  AND A.INCOME_NEWHGHT_DATE BETWEEN :startTerm AND :endTerm
              <#elseif term == "B">	/* 면허일자 */
                  AND A.LIC_DATE BETWEEN :startTerm AND :endTerm
              </#if>
          </#if>
          <#if search?has_content>
              <#if searchContents?has_content>
                  <#if search == "A">	/* 수입문서번호 */
                      AND A.ENTRY_NUM LIKE '%'||:searchContents||'%'
                  <#elseif search == "B">	/* B/L No */
                      AND B.BL_NUM LIKE '%'||:searchContents||'%'
                  <#elseif search == "C">	/* PO No */
                        AND A.PO_ORDER_NUM LIKE '%'||:searchContents||'%'
                  <#elseif search == "D">	/* 관세사명 */
                      AND D.VD_NM_LOC LIKE '%'||:searchContents||'%'
                  </#if>
              </#if>
          </#if>
          <#if deliverYn?has_content>
                AND A.DELIVER_YN = :deliverYn
          </#if>
          ORDER BY  A.ENTRY_NUM desc, A.PO_ORDER_NUM

        ]]>
    </statement>

    <!-- 관세비용 및 입고예정정보를 등록 관리(을)를 등록한다. -->
    <statement name="insert" type="insert">
        /*+ com.hwfs.ft.fdm.dao.EntryMstDAO.insert */
        <![CDATA[
        INSERT INTO ENTRY_MST
        (
         ENTRY_NUM,
         PO_ORDER_NUM,
         BL_NUM,
         LC_NUM,
         INCOME_LIC_NUM,
         CL_AMOUNT_UNIT,
         ENTRY_EXCHANGE_RATE,
         INCOME_NEWHGHT_DATE,
         LIC_DATE,
         NEWHGHT_CUSTOMS_CD,
         TARIFF_HOUSE_CD,
         COLET_TYPE,
         DELIVER_YN,
         SIGN_EXCHANGE_RATE,
         CUSER,
         CDATE,
         UUSER,
         UDATE
        ) VALUES (
         :entryNum,
         :poOrderNum,
        <#if blNum?exists> :blNum, <#else> null, </#if>
        <#if lcNum?exists> :lcNum, <#else> null, </#if>
        <#if incomeLicNum?exists> :incomeLicNum, <#else> null, </#if>
        <#if clAmountUnit?exists> :clAmountUnit, <#else> null, </#if>
        <#if entryExchangeRate?exists> :entryExchangeRate, <#else> null, </#if>
        <#if incomeNewhghtDate?exists> :incomeNewhghtDate, <#else> null, </#if>
        <#if licDate?exists> :licDate, <#else> null, </#if>
        <#if newhghtCustomsCd?exists> :newhghtCustomsCd, <#else> null, </#if>
        <#if tariffHouseCd?exists> :tariffHouseCd, <#else> null, </#if>
        <#if coletType?exists> :coletType, <#else> null, </#if>
        <#if deliverYn?exists> :deliverYn , <#else> 'N', </#if>
        <#if signExchangeRate?exists> :signExchangeRate , <#else> NULL, </#if>
         :loginSabun,
         SYSDATE,
         :loginSabun,
         SYSDATE
        )

        ]]>
    </statement>

    <!-- 관세비용 및 입고예정정보를 등록 관리(을)를 수정한다. -->
    <statement name="update" type="update">
        /*+ com.hwfs.ft.fdm.dao.EntryMstDAO.update */
        <![CDATA[
        UPDATE ENTRY_MST SET
               PO_ORDER_NUM = :poOrderNum,
        <#if blNum?exists> BL_NUM = :blNum, </#if>
        <#if lcNum?exists> LC_NUM = :lcNum, </#if>
        <#if incomeLicNum?exists> INCOME_LIC_NUM = :incomeLicNum, </#if>
        <#if clAmountUnit?exists> CL_AMOUNT_UNIT = :clAmountUnit, </#if>
        <#if entryExchangeRate?exists> ENTRY_EXCHANGE_RATE = :entryExchangeRate, </#if>
        <#if incomeNewhghtDate?exists> INCOME_NEWHGHT_DATE = :incomeNewhghtDate, </#if>
        <#if licDate?exists> LIC_DATE = :licDate, </#if>
        <#if newhghtCustomsCd?exists> NEWHGHT_CUSTOMS_CD = :newhghtCustomsCd, </#if>
        <#if tariffHouseCd?exists> TARIFF_HOUSE_CD = :tariffHouseCd, </#if>
        <#if coletType?exists> COLET_TYPE = :coletType, </#if>
        <#if deliverYn?exists> DELIVER_YN = :deliverYn, </#if>
        <#if deliverYn?exists> SIGN_EXCHANGE_RATE = :signExchangeRate, </#if>
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  ENTRY_NUM = :entryNum

        ]]>
    </statement>

    <!-- 관세비용 및 입고예정정보를 등록 관리(을)를 삭제한다. -->
    <statement name="delete" type="delete">
        /*+ com.hwfs.ft.fdm.dao.EntryMstDAO.delete */
        <![CDATA[
        DELETE
        FROM   ENTRY_MST
        WHERE  ENTRY_NUM = :entryNum

        ]]>
    </statement>

    <!-- 수입면허 품목선정 POP-UP  목록을 조회한다. -->
    <statement name="selectItemInfoSaveSearchPop" type="select">
        /*+ com.hwfs.ft.fdm.dao.EntryMstDAO.selectItemInfoSaveSearchPop */
        <![CDATA[
        SELECT
               A.PO_TYPE,
               (SELECT CODE_NAME FROM SCC_COMMON_CODE
                WHERE  GROUP_CODE = 'PO_TYPE' AND CODE = A.PO_TYPE ) AS PO_TYPE_NM ,         /* 구매형태명 */
               B.ATTACH_DEPT,                                                                /* 귀속 부서            */
               (SELECT CODE_NAME FROM SCC_COMMON_CODE
                WHERE  GROUP_CODE = 'ATTACH_DEPT'
                AND CODE = B.ATTACH_DEPT ) AS ATTACH_DEPT_NM ,                               /* 귀속부서명 */
               B.PO_ORDER_NUM,                                                               /* 구매 주문 번호       */
               B.LC_NUM,                                                                     /* LC 번호              */
               B.BL_NUM,                                                                     /* BL 번호              */
               B.BL_ACCEPT_DATE,                                                              /* BL 접수일자             */
               B.PO_PROPOSAL_NUM,                                                            /* 구매 품의 번호       */
               B.SPLR_CD,                                                                    /* 매입처 코드          */
               B.SPLR_NM,                                                                    /* 매입처 명            */
               B.SALSPLCE_CD,                                                                /* 매출처 코드          */
               B.SALSPLCE_NM,                                                                /* 매출처 명            */
               B.AMOUNT_UNIT,                                                                /* 화폐단위             */
               C.TOT_WONWTR_AMT,                                                             /* 품의금액             */
               C.TOT_QUANTITY,                                                               /* 총수량             */
               C.TOT_WGT,                                                                    /* 총중량             */
               B.CUSER,                                                                      /* 생성자               */
               B.CDATE,                                                                      /* 생성일               */
               B.UUSER,                                                                      /* 수정자               */
               B.UDATE                                                                       /* 수정일               */
        FROM   PO_PROPOSAL_MST A
               ,PO_ORDER_MST B
               ,(SELECT PO_ORDER_NUM, NVL(SUM(WONWTR_AMT),0) TOT_WONWTR_AMT, NVL(SUM(QUANTITY),0) TOT_QUANTITY, NVL(SUM( WGT),0) TOT_WGT, NVL(SUM(ENTRY_END_QUANTITY),0) TOT_ENTRY_END_QUANTITY
                 FROM PO_ORDER_ITEM_DETAIL GROUP BY PO_ORDER_NUM
                ) C
        WHERE A.PO_PROPOSAL_NUM = B.PO_PROPOSAL_NUM
        AND B.PO_ORDER_NUM = C.PO_ORDER_NUM(+)
        AND NVL(B.DEL_YN,'') <> 'Y'
        AND B.PO_ORDER_STATUS = 'C'        --확정
        AND C.TOT_QUANTITY > C.TOT_ENTRY_END_QUANTITY
        AND NOT EXISTS	--가입고 내역은 제외
        (
            SELECT 1 FROM INVENTORY_MGMT_DELIVER
            WHERE PO_ORDER_NUM = B.PO_ORDER_NUM
            AND DELIVER_STATUS ='10'
        )
        AND B.LSHIP_DATE BETWEEN :startTerm AND :endTerm
        <#if search?has_content>
            <#if search == "A">	/* P/O No */
                <#if searchContents?has_content>
                    AND B.PO_ORDER_NUM LIKE '%'||:searchContents||'%'
                </#if>
            <#elseif search == "B">	/* B/L No */
                <#if searchContents?has_content>
                    AND B.BL_NUM LIKE '%'||:searchContents||'%'
                </#if>
            </#if>
        </#if>
        ORDER BY B.PO_ORDER_NUM DESC
        ]]>
    </statement>


    <!-- 수입면허 품목선정 POP-UP item 목록을 조회한다. -->
    <statement name="selectItemInfoSaveSearchPop2" type="select">
        /*+ com.hwfs.ft.fdm.dao.EntryMstDAO.selectItemInfoSaveSearchPop2 */
        <![CDATA[
        SELECT
               0 CHK,
               A.PO_PROPOSAL_NUM,
               A.BL_NUM,
               A.LC_NUM,
               B.PO_ORDER_NUM,
               B.ITEM_SEQ,
               B.ITEM_CD,
               B.ITEM_NM||' '||E.ITEM_SIZE AS ITEM_NM,
               B.UNIT,
               B.QUANTITY,
               B.UPRICE,
               --B.WONWTR_AMT,
               B.WGT,
               A.AMOUNT_UNIT,
               B.TAX_YN,
               B.HS_CD,
               B.ITEM_BL_NUM,
               B.INCOME_DTR_DSCT_NUM,
               B.EST_NO,
               NVL(B.WH_CD,F.DELIVER_WH_CD) WH_CD,
               (SELECT MAX(T.VD_NM_LOC) FROM EPROCUSR.ESMVDFW T WHERE T.VD_CD = NVL(B.WH_CD,F.DELIVER_WH_CD) AND T.CUS_VD_CLS IN ('10', '50') AND T.VD_STS = 'C')  WH_NM,

               B.ORIGIN,
               A.ORIGIN_NATION_CD,
               (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'NATION_CD' AND CODE = A.ORIGIN_NATION_CD ) AS ORIGIN_NM,
               A.ARRIV_PORT_PORT_CD,
               (SELECT PORT_NM_HANGUL FROM PORT_AIRPORT_MGMT_PORT
               WHERE A.ARRIV_NATION_CD = NATION_CD AND A.ARRIV_PORT_PORT_CD = PORT_CD ) ARRIV_PORT_PORT_NM,
               A.SPLR_NM,
             --(SELECT T.CHARG_COST FROM WHBY_ITEMBY_CHARG_AMT T WHERE T.WH_CD=F.DELIVER_WH_CD AND T.ITEM_CD = B.ITEM_CD AND T.CHARGCOST_TYPE = B.UNIT) CHARG_COST,
             --(SELECT T.IOUT_COST FROM WHBY_ITEMBY_CHARG_AMT T WHERE T.WH_CD=F.DELIVER_WH_CD AND T.ITEM_CD = B.ITEM_CD AND T.CHARGCOST_TYPE = B.UNIT) IOUT_COST,
               F.WH_CHARG_AMT AS CHARG_COST,
               F.IOUT_AMT AS IOUT_COST,

               B.REMARK,
               NVL(B.ENTRY_END_QUANTITY,0) ENTRY_END_QUANTITY,     /* 통관 완료 수량 */
               NVL(B.ENTRY_END_WGT,0) ENTRY_END_WGT,     /* 통관 완료 수량 */

               NVL(C.ENTRY_REQ_QUANTITY,0) ENTRY_ACCUM_QUANTITY,     /* 통관 완료 수량 */
               NVL(C.ENTRY_REQ_WGT,0) ENTRY_ACCUM_WGT,     /* 통관 완료 수량 */

               NVL(C.ENTRY_REQ_QUANTITY,0) ENTRY_REQ_QUANTITY,     /* 통관 요청 중량 */
               NVL(C.ENTRY_REQ_WGT,0) ENTRY_REQ_WGT,     /* 통관 요청 중량 */
               NVL(C.ENTRY_REQ_WONWTR_AMT,0) ENTRY_REQ_WONWTR_AMT,     /* 통관 요청 원물 금액*/
              (NVL(B.QUANTITY,0) - NVL(B.ENTRY_END_QUANTITY,0)) ENTRY_QUANTITY,
              (NVL(B.WGT,0) - NVL(B.ENTRY_END_WGT,0)) ENTRY_WGT,
              /*
              CASE WHEN B.UNIT = 'KG' THEN
                  (NVL(B.WGT,0) - NVL(B.ENTRY_END_WGT,0)) * B.UPRICE
              ELSE
                  (NVL(B.QUANTITY,0) - NVL(B.ENTRY_END_QUANTITY,0)) * B.UPRICE
              END AS WONWTR_AMT,
              */
              NVL(B.WONWTR_AMT,0) - NVL(C.ENTRY_REQ_WONWTR_AMT,0) AS WONWTR_AMT,

              (SELECT SET1 FROM   SCC_COMMON_CODE A WHERE  A.GROUP_CODE = 'ITEM_UNIT' AND    A.USE_YN = 'Y' AND A.CODE = UNIT ) SET1,
--              (SELECT GVRNTAX_RATE FROM GVRNTAX_RATE_MGMT WHERE NATION_CD = A.ORIGIN_NATION_CD AND  ITEM_CD=B.ITEM_CD AND :licDate BETWEEN SDATE AND EDATE ) GVRNTAX_RATE,
              (SELECT MAX(GVRNTAX_RATE) FROM PO_PROPOSAL_ITEM_DTL T WHERE T.PO_PROPOSAL_NUM = A.PO_PROPOSAL_NUM AND T.ITEM_CD = B.ITEM_CD ) AS GVRNTAX_RATE,

              E.KG_CONVERT_RATE,
              F.TARIFF_HOUSE_CD,
              (  SELECT MAX(VD_NM_LOC) FROM EPROCUSR.ESMVDFW T WHERE 1 = 1 AND T.CUS_VD_CLS = '30' AND T.VD_CD=F.TARIFF_HOUSE_CD AND T.VD_STS = 'C') AS TARIFF_HOUSE_NM
        FROM PO_ORDER_MST A
            ,PO_ORDER_ITEM_DETAIL B
            ,(SELECT T.PO_ORDER_NUM, T2.ITEM_CD, T2.ITEM_SEQ
                    ,SUM(T2.ENTRY_REQ_QUANTITY) ENTRY_REQ_QUANTITY
                    ,SUM(T2.ENTRY_REQ_WGT) ENTRY_REQ_WGT
                    ,SUM(T2.ENTRY_REQ_WONWTR_AMT) ENTRY_REQ_WONWTR_AMT
              FROM ENTRY_MST T ,ENTRY_ITEM_DETAIL T2
              WHERE T.ENTRY_NUM = T2.ENTRY_NUM
              GROUP BY T.PO_ORDER_NUM, T2.ITEM_CD, T2.ITEM_SEQ
              ) C
            --,WHBY_ITEMBY_CHARG_AMT D
            ,HLDC_PO_ITEM_MST E
            ,PO_PROPOSAL_MST F
        WHERE  A.PO_ORDER_NUM = B.PO_ORDER_NUM
        AND    B.PO_ORDER_NUM = C.PO_ORDER_NUM(+)
        --AND    B.ITEM_CD = C.ITEM_CD(+)
        AND    B.ITEM_SEQ = C.ITEM_SEQ(+)

       -- AND    B.ITEM_CD = D.ITEM_CD(+)
        --AND    B.WH_CD = D.WH_CD(+)
        AND    A.PO_PROPOSAL_NUM = F.PO_PROPOSAL_NUM
        AND    (NVL(B.QUANTITY,0) - NVL(B.ENTRY_END_QUANTITY,0)) > 0
        AND    B.ITEM_CD = E.ITEM_CODE(+)
        AND    B.PO_ORDER_NUM = :poOrderNum
        ORDER BY B.PO_ORDER_NUM, B.ITEM_CD, B.ITEM_SEQ
        ]]>
    </statement>


    <!-- 수입면허 품목선정 POP-UP 가입고  목록을 조회한다. -->
    <statement name="selectItemInfoSaveReceiveSearchPop" type="select">
        /*+ com.hwfs.ft.fdm.dao.EntryMstDAO.selectItemInfoSaveReceiveSearchPop */
        <![CDATA[
          SELECT
               A.PO_TYPE,
               (SELECT CODE_NAME FROM SCC_COMMON_CODE
                WHERE  GROUP_CODE = 'PO_TYPE' AND CODE = A.PO_TYPE ) AS PO_TYPE_NM ,         /* 구매형태명 */
               B.ATTACH_DEPT,                                                                /* 귀속 부서            */
               (SELECT CODE_NAME FROM SCC_COMMON_CODE
                WHERE  GROUP_CODE = 'ATTACH_DEPT'
                AND CODE = B.ATTACH_DEPT ) AS ATTACH_DEPT_NM ,                               /* 귀속부서명 */
               B.PO_ORDER_NUM,                                                               /* 구매 주문 번호       */
               B.LC_NUM,                                                                     /* LC 번호              */
               B.BL_NUM,                                                                     /* BL 번호              */
               B.BL_ACCEPT_DATE,                                                              /* BL 접수일자             */
               B.PO_PROPOSAL_NUM,                                                            /* 구매 품의 번호       */
               B.SPLR_CD,                                                                    /* 매입처 코드          */
               B.SPLR_NM,                                                                    /* 매입처 명            */
               B.SALSPLCE_CD,                                                                /* 매출처 코드          */
               B.SALSPLCE_NM,                                                                /* 매출처 명            */
               B.AMOUNT_UNIT,                                                                /* 화폐단위             */
               C.TOT_WONWTR_AMT,                                                             /* 품의금액             */
               C.TOT_QUANTITY,                                                               /* 총수량             */
               C.TOT_WGT,                                                                    /* 총중량             */
               D.TOT_ENTRY_END_QUANTITY,													 /* 통관 완료 수량       */
               B.CUSER,                                                                      /* 생성자               */
               B.CDATE,                                                                      /* 생성일               */
               B.UUSER,                                                                      /* 수정자               */
               B.UDATE                                                                       /* 수정일               */
        FROM   PO_PROPOSAL_MST A
               ,PO_ORDER_MST B
               ,(SELECT PO_ORDER_NUM, NVL(SUM(DELIVER_AMT),0) TOT_WONWTR_AMT, NVL(SUM(DELIVER_QUANTITY),0) TOT_QUANTITY, NVL(SUM( DELIVER_WGT),0) TOT_WGT
                 FROM INVENTORY_MGMT_DELIVER WHERE DELIVER_STATUS='10' GROUP BY PO_ORDER_NUM
                ) C
                /* 2016.01.09 가입고시 주문품목을 변경한 경우 오류 발생하여 통관된 수량을 불러오는 것으로 변경
               ,(SELECT PO_ORDER_NUM, NVL(SUM(WONWTR_AMT),0) TOT_WONWTR_AMT, NVL(SUM(QUANTITY),0) TOT_QUANTITY, NVL(SUM( WGT),0) TOT_WGT, NVL(SUM(ENTRY_END_QUANTITY),0) TOT_ENTRY_END_QUANTITY
                 FROM PO_ORDER_ITEM_DETAIL GROUP BY PO_ORDER_NUM
                ) D
                */
               ,(SELECT PO_ORDER_NUM, NVL(SUM(ENTRY_REQ_QUANTITY),0) TOT_ENTRY_END_QUANTITY
                   FROM ENTRY_ITEM_DETAIL GROUP BY PO_ORDER_NUM
                ) D                
        WHERE A.PO_PROPOSAL_NUM = B.PO_PROPOSAL_NUM
        AND B.PO_ORDER_NUM = C.PO_ORDER_NUM
        AND C.PO_ORDER_NUM = D.PO_ORDER_NUM(+)
        AND NVL(B.DEL_YN,'') <> 'Y'
        AND C.TOT_QUANTITY > NVL(D.TOT_ENTRY_END_QUANTITY,0)  -- 가입고수량 중 통관되지 않은 수량이 있을 경우
        AND  B.LSHIP_DATE  BETWEEN :startTerm AND :endTerm
        <#if search?has_content>
            <#if search == "A">	/* P/O No */
                <#if searchContents?has_content>
                    AND B.PO_ORDER_NUM LIKE '%'||:searchContents||'%'
                </#if>
            <#elseif search == "B">	/* B/L No */
                <#if searchContents?has_content>
                    AND B.BL_NUM LIKE '%'||:searchContents||'%'
                </#if>
            </#if>
        </#if>
        ORDER BY B.PO_ORDER_NUM DESC
        ]]>
    </statement>


    <!-- 수입면허 품목선정 POP-UP item 가입고 목록을 조회한다. -->
    <statement name="selectItemInfoSaveReceiveSearchPop2" type="select">
        /*+ com.hwfs.ft.fdm.dao.EntryMstDAO.selectItemInfoSaveReceiveSearchPop2 */
        <![CDATA[
     SELECT
             0 CHK,
               B.PO_PROPOSAL_NUM,
               B.BL_NUM,
               B.LC_NUM,
               A.PO_ORDER_NUM,
               A.ITEM_SEQ,
               A.ITEM_CD,
               C.ITEM_NAME ||' '||C.ITEM_SIZE AS ITEM_NM,
               A.UNIT,
               A.DELIVER_QUANTITY QUANTITY,
               A.DELIVER_UPRICE_FOREIGN_CURRENC UPRICE,
               A.DELIVER_AMT WONWTR_AMT,
               A.DELIVER_AMT_KRW AS WONWTR_AMT_KRW,
               A.DELIVER_WGT WGT,
               B.AMOUNT_UNIT,
               E.TAX_YN,
               A.HS_CD,
               E.ITEM_BL_NUM,
               A.INCOME_DTR_DSCT_NUM,
               A.EST_NO,
               A.WH_CD,
               (SELECT MAX(T.VD_NM_LOC) FROM EPROCUSR.ESMVDFW T WHERE T.VD_CD = A.WH_CD AND T.CUS_VD_CLS IN ('10', '50')  AND T.VD_STS = 'C')  WH_NM,
               E.ORIGIN,
              B.ORIGIN_NATION_CD,
               (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'NATION_CD' AND CODE =B.ORIGIN_NATION_CD ) AS ORIGIN_NM,
               B.ARRIV_PORT_PORT_CD,
               (SELECT PORT_NM_HANGUL FROM PORT_AIRPORT_MGMT_PORT
               WHERE B.ARRIV_NATION_CD = NATION_CD AND B.ARRIV_PORT_PORT_CD = PORT_CD ) ARRIV_PORT_PORT_NM,
               A.SPLR_NM,
                 F.CHARG_COST,
                 F.IOUT_COST,
               NVL(E.ENTRY_END_QUANTITY,0) ENTRY_END_QUANTITY,
               NVL(E.ENTRY_END_WGT,0) ENTRY_END_WGT,

                 D.ENTRY_REQ_QUANTITY ENTRY_ACCUM_QUANTITY,
                 D.ENTRY_REQ_WGT ENTRY_ACCUM_WGT,

                 D.ENTRY_REQ_QUANTITY,
                 D.ENTRY_REQ_WGT,

                 D.ENTRY_REQ_WONWTR_AMT,
                 NVL((NVL(A.DELIVER_QUANTITY,0) - NVL(D.ENTRY_REQ_QUANTITY,0)),0) ENTRY_QUANTITY,
                 NVL((NVL(A.DELIVER_WGT,0) - NVL(D.ENTRY_REQ_WGT,0)),0) ENTRY_WGT,
                 G.KG_CONVERT_RATE,
                 (SELECT GVRNTAX_RATE FROM GVRNTAX_RATE_MGMT WHERE NATION_CD = B.ORIGIN_NATION_CD AND  ITEM_CD=A.ITEM_CD AND :licDate BETWEEN SDATE AND EDATE ) GVRNTAX_RATE
        FROM   INVENTORY_MGMT_DELIVER A
               ,PO_ORDER_MST B
               ,HLDC_PO_ITEM_MST C
               ,(SELECT T.PO_ORDER_NUM, T2.ITEM_CD, T2.ITEM_SEQ
                        ,SUM(T2.ENTRY_REQ_QUANTITY) ENTRY_REQ_QUANTITY
                        ,SUM(T2.ENTRY_REQ_WGT) ENTRY_REQ_WGT
                        ,SUM(T2.ENTRY_REQ_WONWTR_AMT) ENTRY_REQ_WONWTR_AMT
                  FROM ENTRY_MST T ,ENTRY_ITEM_DETAIL T2
                  WHERE T.ENTRY_NUM = T2.ENTRY_NUM
                  GROUP BY T.PO_ORDER_NUM, T2.ITEM_CD, T2.ITEM_SEQ
                 ) D
               ,PO_ORDER_ITEM_DETAIL E
               ,WHBY_ITEMBY_CHARG_AMT F
               ,HLDC_PO_ITEM_MST G
        WHERE A.PO_ORDER_NUM = B.PO_ORDER_NUM
        AND A.ITEM_CD = C.ITEM_CODE(+)
        AND    A.PO_ORDER_NUM = D.PO_ORDER_NUM(+)
        AND    A.ITEM_CD = D.ITEM_CD(+)
        AND    A.ITEM_SEQ = D.ITEM_SEQ(+)

        AND    A.PO_ORDER_NUM = E.PO_ORDER_NUM(+)
        AND A.ITEM_CD = E.ITEM_CD(+)
        AND A.ITEM_SEQ = E.ITEM_SEQ(+)

        AND    A.PO_ORDER_NUM = E.PO_ORDER_NUM(+)
        AND A.ITEM_CD = E.ITEM_CD(+)
        AND A.ITEM_SEQ = E.ITEM_SEQ(+)

        AND    E.ITEM_CD = F.ITEM_CD(+)
        AND    E.WH_CD = F.WH_CD(+)

        AND    A.ITEM_CD = G.ITEM_CODE(+)
        AND    A.DELIVER_STATUS='10'	 --가입고만
        --2016.01.09 통관되지 않은 품목만 조회되도록 수정, 기존로직은 가입고시 품목을 변경했을 경우 오류 발생
        --AND   NVL((NVL(A.DELIVER_QUANTITY,0) - NVL(E.ENTRY_END_QUANTITY,0)),0) > 0 
        AND   NVL((NVL(A.DELIVER_QUANTITY,0) - NVL(D.ENTRY_REQ_QUANTITY,0)),0) > 0 
        AND    B.PO_ORDER_NUM = :poOrderNum
        ORDER BY E.ITEM_SEQ
        ]]>
    </statement>


    <!-- 통관 마스터을 조회한다.. -->
    <statement name="selectEntryMst" type="select">
        /*+ com.hwfs.ft.fdm.dao.EntryMstDAO.selectEntryMst */
        <![CDATA[
        SELECT A.ENTRY_NUM,
               A.PO_ORDER_NUM,
               A.BL_NUM,
               A.LC_NUM,
               A.INCOME_LIC_NUM,
               A.CL_AMOUNT_UNIT,
               A.ENTRY_EXCHANGE_RATE,
               A.INCOME_NEWHGHT_DATE,
               A.LIC_DATE,
               A.NEWHGHT_CUSTOMS_CD,
               (SELECT VD_NM_LOC FROM EPROCUSR.ESMVDFW WHERE A.NEWHGHT_CUSTOMS_CD = VD_CD AND CUS_VD_CLS = '40' AND VD_STS = 'C' ) NEWHGHT_CUSTOMS_NM,
               A.TARIFF_HOUSE_CD,
               (SELECT VD_NM_LOC FROM EPROCUSR.ESMVDFW WHERE A.TARIFF_HOUSE_CD = VD_CD AND CUS_VD_CLS = '30' AND VD_STS = 'C' ) TARIFF_HOUSE_NM,
               A.COLET_TYPE,
               A.DELIVER_YN,
               B.ARRIV_PORT_PORT_CD,
               (SELECT PORT_NM_HANGUL FROM PORT_AIRPORT_MGMT_PORT
               WHERE B.ARRIV_NATION_CD = NATION_CD AND B.ARRIV_PORT_PORT_CD = PORT_CD ) ARRIV_PORT_PORT_NM,/* 도착 항구/공항 명  */
               B.SPLR_NM,
               A.SIGN_EXCHANGE_RATE,
               A.CUSER,
               A.CDATE,
               A.UUSER,
               A.UDATE
        FROM   ENTRY_MST A
               ,PO_ORDER_MST B
        WHERE A.PO_ORDER_NUM = B.PO_ORDER_NUM
        AND  A.ENTRY_NUM = :entryNum
        ]]>
    </statement>

    <!-- 통관 마스터 시퀀스 조회 한다. -->
    <statement name="getEntryNumSeq" type="select">
        <![CDATA[
            select LPAD(ENTRY_MST_S.NEXTVAL,4,'0000') AS ENTRY_NUM FROM DUAL
        ]]>
    </statement>

    <!-- 가입고 품목선정 POP-UP  목록을 조회한다. -->
    <statement name="selectBlListPop" type="select">
        /*+ com.hwfs.ft.fdm.dao.EntryMstDAO.selectBlListPop */
        <![CDATA[
        SELECT
               A.PO_TYPE,
               (SELECT CODE_NAME FROM SCC_COMMON_CODE
                WHERE  GROUP_CODE = 'PO_TYPE' AND CODE = A.PO_TYPE ) AS PO_TYPE_NM ,         /* 구매형태명 */
               B.ATTACH_DEPT,                                                                /* 귀속 부서            */
               (SELECT CODE_NAME FROM SCC_COMMON_CODE
                WHERE  GROUP_CODE = 'ATTACH_DEPT'
                AND CODE = B.ATTACH_DEPT ) AS ATTACH_DEPT_NM ,                               /* 귀속부서명 */
               B.PO_ORDER_NUM,                                                               /* 구매 주문 번호       */
               B.LC_NUM,                                                                     /* LC 번호              */
               B.BL_NUM,                                                                     /* BL 번호              */
               B.BL_ACCEPT_DATE,                                                              /* BL 접수일자             */
               B.PO_PROPOSAL_NUM,                                                            /* 구매 품의 번호       */
               B.SPLR_CD,                                                                    /* 매입처 코드          */
               B.SPLR_NM,                                                                    /* 매입처 명            */
               B.SALSPLCE_CD,                                                                /* 매출처 코드          */
               B.SALSPLCE_NM,                                                                /* 매출처 명            */
               B.AMOUNT_UNIT,                                                                /* 화폐단위             */
               C.TOT_WONWTR_AMT,                                                             /* 품의금액             */
               C.TOT_QUANTITY,                                                               /* 총수량             */
               C.TOT_WGT,                                                                    /* 총중량             */
               B.CUSER,                                                                      /* 생성자               */
               B.CDATE,                                                                      /* 생성일               */
               B.UUSER,                                                                      /* 수정자               */
               B.UDATE                                                                       /* 수정일               */
        FROM   PO_PROPOSAL_MST A
               ,PO_ORDER_MST B
               ,(SELECT PO_ORDER_NUM, NVL(SUM(WONWTR_AMT),0) TOT_WONWTR_AMT, NVL(SUM(QUANTITY),0) TOT_QUANTITY, NVL(SUM( WGT),0) TOT_WGT, NVL(SUM(ENTRY_END_QUANTITY),0) TOT_ENTRY_END_QUANTITY
                 FROM PO_ORDER_ITEM_DETAIL GROUP BY PO_ORDER_NUM
                ) C
        WHERE A.PO_PROPOSAL_NUM = B.PO_PROPOSAL_NUM
        AND B.PO_ORDER_NUM = C.PO_ORDER_NUM(+)
        AND NVL(B.DEL_YN,'') <> 'Y'
        AND B.PO_ORDER_STATUS = 'C'        --확정
        AND C.TOT_QUANTITY > C.TOT_ENTRY_END_QUANTITY

        AND NOT EXISTS   --가입고 제외
        (
            SELECT 1 FROM INVENTORY_MGMT_DELIVER
            WHERE PO_ORDER_NUM = B.PO_ORDER_NUM
            AND DELIVER_STATUS ='10'
        )

        AND NOT EXISTS   --통관 제외
        (
            SELECT 1 FROM ENTRY_ITEM_DETAIL
            WHERE PO_ORDER_NUM = B.PO_ORDER_NUM
        )
        AND B.LSHIP_DATE BETWEEN :startTerm AND :endTerm
        <#if search?has_content>
            <#if search == "A">	/* P/O No */
                <#if searchContents?has_content>
                    AND B.PO_ORDER_NUM LIKE '%'||:searchContents||'%'
                </#if>
            <#elseif search == "B">	/* B/L No */
                <#if searchContents?has_content>
                    AND B.BL_NUM LIKE '%'||:searchContents||'%'
                </#if>
            </#if>
        </#if>
        ORDER BY B.PO_ORDER_NUM DESC
        ]]>
    </statement>


    <!-- 가입고 품목선정 POP-UP item 목록을 조회한다. -->
    <statement name="selectBlListPop2" type="select">
        /*+ com.hwfs.ft.fdm.dao.EntryMstDAO.selectBlListPop2 */
        <![CDATA[
          SELECT
             0 CHK,
             A.PO_PROPOSAL_NUM,
             A.BL_NUM,
             A.LC_NUM,
             A.ATTACH_DEPT, --추가
             A.EXCHANGE_RATE, /*선적환률 */--추가

             A.SALE_TYPE,
             D.PO_TYPE,

             (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'ATTACH_DEPT' AND CODE = A.ATTACH_DEPT ) AS ATTACH_DEPT_NM,--추가
             B.PO_ORDER_NUM,
             B.ITEM_SEQ,
             B.ITEM_CD,
             E.ITEM_NAME||' '||E.ITEM_SIZE AS ITEM_NM,
             B.UNIT,
             B.QUANTITY,
             B.UPRICE,         /*단가(외화)*/
             --A.EXCHANGE_RATE * B.UPRICE KRW_UPRICE,         /*단가(한화)*/--추가
             B.UPRICE_KRW KRW_UPRICE,         /*단가(한화)*/--추가
             --B.WONWTR_AMT,
             B.WONWTR_AMT_KRW AS KRW_WONWTR_AMT,
             B.WGT,
             A.AMOUNT_UNIT,
             B.TAX_YN,
             B.HS_CD,
             B.ITEM_BL_NUM,
             B.INCOME_DTR_DSCT_NUM,
             B.EST_NO,
             B.WH_CD,
             (SELECT MAX(T.VD_NM_LOC) FROM EPROCUSR.ESMVDFW T WHERE T.VD_CD = B.WH_CD AND T.CUS_VD_CLS IN ('10', '50')  AND T.VD_STS = 'C' )  WH_NM,
             B.ORIGIN,
             A.ORIGIN_NATION_CD,
             (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE  GROUP_CODE = 'NATION_CD' AND CODE = A.ORIGIN_NATION_CD ) AS ORIGIN_NM,
             A.ARRIV_PORT_PORT_CD,
             (SELECT PORT_NM_HANGUL FROM PORT_AIRPORT_MGMT_PORT
             WHERE A.ARRIV_NATION_CD = NATION_CD AND A.ARRIV_PORT_PORT_CD = PORT_CD ) ARRIV_PORT_PORT_NM,/* 도착 항구/공항 명  */
             A.SPLR_CD,
             A.SPLR_NM,
             A.SALSPLCE_CD,
             A.SALSPLCE_NM,          --추가
             D.CHARG_COST,
             D.IOUT_COST,
             B.REMARK,

             NVL(B.ENTRY_END_QUANTITY,0) ENTRY_END_QUANTITY,     /* 통관 완료 수량 */
             NVL(B.ENTRY_END_WGT,0) ENTRY_END_WGT,     /* 통관 완료 중량 */

             NVL(C.ENTRY_REQ_QUANTITY,0) ENTRY_ACCUM_QUANTITY,    /* 통관 누적 수량 */
             NVL(C.ENTRY_REQ_WGT,0) ENTRY_ACCUM_WGT,    /* 통관 누적 중량 */

             NVL(C.ENTRY_REQ_WGT,0) ENTRY_REQ_WGT,   /* 통관 요청 중량 */
             NVL(C.ENTRY_REQ_QUANTITY,0) ENTRY_REQ_QUANTITY,   /* 통관 요청 중량 */

             NVL(C.ENTRY_REQ_WONWTR_AMT,0) ENTRY_REQ_WONWTR_AMT,    /* 통관 요청 원물 금액*/

             (NVL(B.QUANTITY,0) - NVL(B.ENTRY_END_QUANTITY,0)) ENTRY_QUANTITY,        /* 통관수량 = PO수량 ? 통관완료수량*/
             (NVL(B.WGT,0) - NVL(B.ENTRY_END_WGT,0)) ENTRY_WGT,        /* 통관중량 = PO중량 ? 통관완료중량*/
		     /* 
              CASE WHEN B.UNIT = 'KG' THEN
                  (NVL(B.WGT,0) - NVL(B.ENTRY_END_WGT,0)) * B.UPRICE
              ELSE
                  (NVL(B.QUANTITY,0) - NVL(B.ENTRY_END_QUANTITY,0)) * B.UPRICE
              END AS WONWTR_AMT,
			*/
			 B.WONWTR_AMT,	
             E.KG_CONVERT_RATE,
             DECODE(D.PO_TYPE, '10', D.DELIVER_WH_CD, B.WH_CD ) AS DELIVER_WH_CD,
             (
                SELECT A.VD_NM_LOC
                FROM EPROCUSR.ESMVDFW A
                WHERE 1 = 1
                  AND A.CUS_VD_CLS IN ('10', '50')
                  AND A.VD_CD= DECODE(D.PO_TYPE, '10', D.DELIVER_WH_CD, B.WH_CD )
                AND A.VD_CD IS NOT NULL
                 AND A.VD_STS = 'C'
             ) DELIVER_WH_NM

      FROM   PO_PROPOSAL_MST D
            ,PO_ORDER_MST A
            ,PO_ORDER_ITEM_DETAIL B
            ,(SELECT T.PO_ORDER_NUM, T2.ENTRY_NUM, T2.ITEM_CD, T2.ITEM_SEQ
                    ,SUM(T2.ENTRY_REQ_QUANTITY) ENTRY_REQ_QUANTITY
                    ,SUM(T2.ENTRY_REQ_WGT) ENTRY_REQ_WGT
                    ,SUM(T2.ENTRY_REQ_WONWTR_AMT) ENTRY_REQ_WONWTR_AMT
              FROM ENTRY_MST T ,ENTRY_ITEM_DETAIL T2
              WHERE T.ENTRY_NUM = T2.ENTRY_NUM
              GROUP BY T.PO_ORDER_NUM, T2.ENTRY_NUM, T2.ITEM_CD, T2.ITEM_SEQ
              ) C
            ,WHBY_ITEMBY_CHARG_AMT D
            ,HLDC_PO_ITEM_MST E
      WHERE  D.PO_PROPOSAL_NUM= A.PO_PROPOSAL_NUM
        AND    A.PO_ORDER_NUM = B.PO_ORDER_NUM
        AND    B.PO_ORDER_NUM = C.PO_ORDER_NUM(+)
        AND    B.ITEM_CD = C.ITEM_CD(+)
        AND    B.ITEM_SEQ = C.ITEM_SEQ(+)
        AND    B.ITEM_CD = D.ITEM_CD(+)
        AND    B.WH_CD = D.WH_CD(+)
        AND    B.ITEM_CD = E.ITEM_CODE(+)
        AND    (NVL(B.QUANTITY,0) - NVL(B.ENTRY_END_QUANTITY,0)) > 0
        AND    B.PO_ORDER_NUM = :poOrderNum
        ORDER BY B.PO_ORDER_NUM, B.ITEM_CD, B.ITEM_SEQ
        ]]>
    </statement>
    
    
    <!-- 입고를 위한 수입면허 내역을 조회한다. -->
    <statement name="selectDeliverList" type="select">
        /*+ com.hwfs.ft.fdm.dao.EntryMstDAO.selectDeliverList */
        <![CDATA[
 SELECT
                 A.RNUM ,
                 A.DELIVER_NUM,
                 A.DELIVER_TYPE,                                /*발주입고*/
                 A.DELIVER_STATUS,                              /*입고*/
                 A.FIRST_DELIVER_DATE,                /*최초입고일자*/
                 A.CURRENT_WH_DELIVER_DATE,              /*현재 창고 입고 일자*/
                 A.SALE_TYPE,                                                                   /*판매 유형*/
                 A.PO_TYPE,                                                                     /*구매 형태*/
                 A.ATTACH_DEPT,                                                                 /*귀속 부서*/
                 A.ENTRY_NUM,                                                                   /*통관번호*/
                 A.ENTRY_ITEM_SEQ,                                                              /*통관번호순번*/
                 A.PO_ORDER_NUM,                                                                /*구매 품의 번호*/
                 A.ITEM_SEQ,                                                                    /*품목 순번*/
                 A.ITEM_CD,                                                                     /*품목 코드*/
                 A.ITEM_NM,                                                                     /*품목 명*/
                 A.HS_CD,                                                                       /*HS코드 */
                 A.SPLR_CD,                                                                     /*매입처 코드*/
                 A.SPLR_NM,                                                                     /*매입처 명*/
                 A.SALSPLCE_CD,                                                                 /*매출처 코드*/
                 A.SALSPLCE_NM,                                                                 /*매출처 명*/
                 A.WH_CD,                                                                       /*창고 코드*/
                 A.WH_NM,
                 A.UNIT,                                                                        /*단위*/
                 A.EXCHANGE_RATE,                                                               /*선적 환율(PO)*/
                 A.SETTLE_EXCHANGE_RATE,                                             /*결재 환율(대금결재)*/
                 A.INT_RATE,                                                                    /*금리*/
                 A.EXPECT_SALS_GAIN_RATE,                                                       /*예상 매출 이익율*/
                 A.UPRICE,                                                                      /*입고단가외화*/
                 ROUND((A.EXCHANGE_RATE *  UPRICE)) KRW_UPRICE,
                 A.ENTRY_REQ_QUANTITY,                                                          /*입고수량 - 통관 요청 수량 */
                 A.ENTRY_REQ_WGT,
                 A.WONWTR_AMT_KRW,	--원물대
                 A.QUANTITY,
                 NVL((SELECT SUM(T.DELIVER_QUANTITY) FROM INVENTORY_MGMT_DELIVER T
                      WHERE T.PO_ORDER_NUM =A.PO_ORDER_NUM AND T.ITEM_CD= A.ITEM_CD AND T.ITEM_SEQ =A.ITEM_SEQ ),0) AS TOT_ENTRY_REQ_QUANTITY,
                 NVL((SELECT SUM(T.DELIVER_AMT) FROM INVENTORY_MGMT_DELIVER T
                      WHERE T.PO_ORDER_NUM =A.PO_ORDER_NUM AND T.ITEM_CD= A.ITEM_CD AND T.ITEM_SEQ =A.ITEM_SEQ ),0) AS TOT_ENTRY_REQ_WONWTR_AMT,
                 /* -- 분할통관시 가입고건이 아닐 경우 DELIVER_AMT_KRW가 0이어서 입고시 금액 문제 발생 2016.02.02 가입고건이 아닌 경우 DELIVER_AMT를 합산
                 NVL((SELECT SUM(T.DELIVER_AMT_KRW) FROM INVENTORY_MGMT_DELIVER T
                      WHERE T.PO_ORDER_NUM =A.PO_ORDER_NUM AND T.ITEM_CD= A.ITEM_CD AND T.ITEM_SEQ =A.ITEM_SEQ ),0) AS TOT_ENTRY_REQ_WONWTR_AMT_KRW,
                 */
                 NVL((SELECT DECODE(V_IN_YN, 'Y', SUM(T.DELIVER_AMT_KRW), SUM(T.DELIVER_AMT)) FROM INVENTORY_MGMT_DELIVER T
                      WHERE T.PO_ORDER_NUM =A.PO_ORDER_NUM AND T.ITEM_CD= A.ITEM_CD AND T.ITEM_SEQ =A.ITEM_SEQ ),0) AS TOT_ENTRY_REQ_WONWTR_AMT_KRW,
                                                               /*입고 중량 -통관 요청 중량 */
                 A.ENTRY_REQ_WONWTR_AMT AS BAE_ENTRY_REQ_WONWTR_AMT,                                                         /*입고금액 -통관요청 원물금액*/
                 --ROUND((A.EXCHANGE_RATE *  UPRICE * DECODE(A.SET1,'KG',A.ENTRY_REQ_WGT,A.ENTRY_REQ_QUANTITY) ))  ENTRY_REQ_WONWTR_AMT,    /*입고금액 -선적환율 *외화(통관요청 원물금액)*/
                 A.ENTRY_REQ_WONWTR_AMT * A.EXCHANGE_RATE AS ENTRY_REQ_WONWTR_AMT, 	--원물대
                 A.ENTRY_REQ_WONWTR_AMT_SUM,                          /*CL 입고금액합계*/
                 A.PO_PROPOSAL_NUM,                                                             /*구매 품의 번호  */
                 A.INCOME_DTR_DSCT_NUM,                                                         /*수입 유통 식별 번호  */
                 A.EST_NO,
                 A.INCOME_LIC_NUM,
                 A.BL_NUM
        FROM
        (
              SELECT
                 ROW_NUMBER() OVER (PARTITION BY A.ITEM_CD ORDER BY A.ENTRY_ITEM_SEQ DESC) RNUM ,
                 '' DELIVER_NUM,
                 '10' DELIVER_TYPE,                                /*발주입고*/
                 '20' DELIVER_STATUS,                              /*입고*/
                 TO_CHAR(SYSDATE, 'YYYYMMDD') FIRST_DELIVER_DATE,                /*최초입고일자*/
                 TO_CHAR(SYSDATE, 'YYYYMMDD') CURRENT_WH_DELIVER_DATE,              /*현재 창고 입고 일자*/
                 D.SALE_TYPE,                                                                   /*판매 유형*/
                 D.PO_TYPE,                                                                     /*구매 형태*/
                 B.ATTACH_DEPT,                                                                 /*귀속 부서*/

                 A.ENTRY_NUM,                                                                   /*통관번호*/
                 A.ENTRY_ITEM_SEQ,                                                              /*통관번호순번*/
                 A.PO_ORDER_NUM,                                                                /*구매 품의 번호*/
                 A.ITEM_SEQ,                                                                    /*품목 순번*/
                 A.ITEM_CD,                                                                     /*품목 코드*/
                 A.ITEM_NM,                                                                     /*품목 명*/
                 DECODE(V_IN_YN, 'Y', A.HS_CD, C.HS_CD) HS_CD,                                  /*HS코드 */
                 B.SPLR_CD,                                                                     /*매입처 코드*/
                 B.SPLR_NM,                                                                     /*매입처 명*/
                 B.SALSPLCE_CD,                                                                 /*매출처 코드*/
                 B.SALSPLCE_NM,                                                                 /*매출처 명*/
                 A.WH_CD,                                                                       /*창고 코드*/
                 (SELECT MAX(T.VD_NM_LOC) FROM EPROCUSR.ESMVDFW T WHERE T.VD_CD = A.WH_CD AND T.CUS_VD_CLS IN ('10', '50')  AND T.VD_STS = 'C')  WH_NM,
                 A.UNIT,                                                                        /*단위*/
                 (
                    SELECT
                      SET1
                    FROM   SCC_COMMON_CODE A
                    WHERE  A.GROUP_CODE = 'ITEM_UNIT'
                    AND    A.USE_YN = 'Y'
                    AND A.CODE = A.UNIT
                 ) SET1,
                 B.EXCHANGE_RATE,                                                               /*선적 환율(PO)*/
                 A.SIGN_EXCHANGE_RATE AS SETTLE_EXCHANGE_RATE,

                 D.INT_RATE,                                                                    /*금리*/
                 D.EXPECT_SALS_GAIN_RATE,                                                       /*예상 매출 이익율*/
                 A.UPRICE,                                                                      /*입고단가외화*/
                 DECODE(A.V_IN_YN, 'Y', A.DELIVER_AMT_KRW, NVL(C.WONWTR_AMT_KRW,0)) AS WONWTR_AMT_KRW,  /*가입고일때는 가입고된 원물대를 불러온다. 2016.01.09*/
                 DECODE(A.V_IN_YN, 'Y', A.DELIVER_QUANTITY, NVL(C.QUANTITY,0)) QUANTITY,
                 ROUND(B.EXCHANGE_RATE * A.UPRICE) KRW_UPRICE,                            	/*입고단가원화*/
                 A.ENTRY_REQ_QUANTITY,                                                          /*입고수량 - 통관 요청 수량 */
                 A.ENTRY_REQ_WGT,                                                               /*입고 중량 -통관 요청 중량 */
                 A.ENTRY_REQ_WONWTR_AMT,                                                        /*입고금액 -통관요청 원물금액*/
                 (SELECT SUM(ENTRY_REQ_WONWTR_AMT) FROM ENTRY_ITEM_DETAIL
                  WHERE PO_ORDER_NUM = B.PO_ORDER_NUM
                  AND  ENTRY_NUM = A.ENTRY_NUM
                  ) ENTRY_REQ_WONWTR_AMT_SUM,                          /*CL 입고금액합계*/
                 B.PO_PROPOSAL_NUM,                                                             /*구매 품의 번호  */
                 DECODE(V_IN_YN, 'Y', A.INCOME_DTR_DSCT_NUM, C.INCOME_DTR_DSCT_NUM) INCOME_DTR_DSCT_NUM,  /*수입 유통 식별 번호  */
                 DECODE(V_IN_YN, 'Y', A.EST_NO, C.EST_NO) EST_NO,
                 C.INCOME_DTR_DSCT_NUM INCOME_DTR_DSCT_NUM1,                 
                 C.EST_NO EST_NO1,
                 A.INCOME_LIC_NUM,
                 B.BL_NUM,
                 A.V_IN_YN
              FROM
                  (SELECT A.ENTRY_EXCHANGE_RATE, INCOME_LIC_NUM, A.SIGN_EXCHANGE_RATE,  
                          DECODE(C.DELIVER_STATUS, NULL, 'N', 'Y') V_IN_YN, C.HS_CD, C.DELIVER_QUANTITY, C.DELIVER_AMT, C.DELIVER_AMT_KRW, 
                          B.* 
                    FROM ENTRY_MST A ,ENTRY_ITEM_DETAIL B, 
                         (SELECT * FROM INVENTORY_MGMT_DELIVER WHERE DELIVER_STATUS = '10' AND TRIM(ENTRY_NUM) IS NULL) C
                    WHERE A.ENTRY_NUM = B.ENTRY_NUM
                      AND B.PO_ORDER_NUM = C.PO_ORDER_NUM(+)
                      AND B.ITEM_SEQ = C.ITEM_SEQ(+)
                      AND B.ITEM_CD = C.ITEM_CD(+)
                   ) A,
                   PO_ORDER_MST B,
                   PO_ORDER_ITEM_DETAIL C,
                   PO_PROPOSAL_MST D
              WHERE 1=1
              AND A.PO_ORDER_NUM = B.PO_ORDER_NUM
              AND A.PO_ORDER_NUM = C.PO_ORDER_NUM(+)
              AND A.ITEM_CD = C.ITEM_CD(+)
              AND A.ITEM_SEQ = C.ITEM_SEQ(+)
              AND B.PO_PROPOSAL_NUM = D.PO_PROPOSAL_NUM
              AND A.ENTRY_NUM = :entryNum
              ORDER BY A.ENTRY_ITEM_SEQ
          ) A       
        ]]>
    </statement>
        

    <!-- 입고를 위한 수입면허 내역을 조회한다. 원화/달러 금액 오류 발생하여 백업 -->
    <statement name="selectDeliverList_2016_01_09" type="select">
        /*+ com.hwfs.ft.fdm.dao.EntryMstDAO.selectDeliverList */
        <![CDATA[
 SELECT
                 A.RNUM ,
                 A.DELIVER_NUM,
                 A.DELIVER_TYPE,                                /*발주입고*/
                 A.DELIVER_STATUS,                              /*입고*/
                 A.FIRST_DELIVER_DATE,                /*최초입고일자*/
                 A.CURRENT_WH_DELIVER_DATE,              /*현재 창고 입고 일자*/
                 A.SALE_TYPE,                                                                   /*판매 유형*/
                 A.PO_TYPE,                                                                     /*구매 형태*/
                 A.ATTACH_DEPT,                                                                 /*귀속 부서*/
                 A.ENTRY_NUM,                                                                   /*통관번호*/
                 A.ENTRY_ITEM_SEQ,                                                              /*통관번호순번*/
                 A.PO_ORDER_NUM,                                                                /*구매 품의 번호*/
                 A.ITEM_SEQ,                                                                    /*품목 순번*/
                 A.ITEM_CD,                                                                     /*품목 코드*/
                 A.ITEM_NM,                                                                     /*품목 명*/
                 A.HS_CD,                                                                       /*HS코드 */
                 A.SPLR_CD,                                                                     /*매입처 코드*/
                 A.SPLR_NM,                                                                     /*매입처 명*/
                 A.SALSPLCE_CD,                                                                 /*매출처 코드*/
                 A.SALSPLCE_NM,                                                                 /*매출처 명*/
                 A.WH_CD,                                                                       /*창고 코드*/
                 A.WH_NM,
                 A.UNIT,                                                                        /*단위*/
                 A.EXCHANGE_RATE,                                                               /*선적 환율(PO)*/
                 A.SETTLE_EXCHANGE_RATE,                                             /*결재 환율(대금결재)*/
                 A.INT_RATE,                                                                    /*금리*/
                 A.EXPECT_SALS_GAIN_RATE,                                                       /*예상 매출 이익율*/
                 A.UPRICE,                                                                      /*입고단가외화*/
                 ROUND((A.EXCHANGE_RATE *  UPRICE)) KRW_UPRICE,
                 A.ENTRY_REQ_QUANTITY,                                                          /*입고수량 - 통관 요청 수량 */
                 A.ENTRY_REQ_WGT,
                 A.WONWTR_AMT_KRW,	--원물대
                 A.QUANTITY,
                 NVL((SELECT SUM(T.DELIVER_QUANTITY) FROM INVENTORY_MGMT_DELIVER T
                      WHERE T.PO_ORDER_NUM =A.PO_ORDER_NUM AND T.ITEM_CD= A.ITEM_CD AND T.ITEM_SEQ =A.ITEM_SEQ ),0) AS TOT_ENTRY_REQ_QUANTITY,

                 NVL((SELECT SUM(T.DELIVER_AMT) FROM INVENTORY_MGMT_DELIVER T
                      WHERE T.PO_ORDER_NUM =A.PO_ORDER_NUM AND T.ITEM_CD= A.ITEM_CD AND T.ITEM_SEQ =A.ITEM_SEQ ),0) AS TOT_ENTRY_REQ_WONWTR_AMT,
                                                               /*입고 중량 -통관 요청 중량 */
                 A.ENTRY_REQ_WONWTR_AMT AS BAE_ENTRY_REQ_WONWTR_AMT,                                                         /*입고금액 -통관요청 원물금액*/
                 --ROUND((A.EXCHANGE_RATE *  UPRICE * DECODE(A.SET1,'KG',A.ENTRY_REQ_WGT,A.ENTRY_REQ_QUANTITY) ))  ENTRY_REQ_WONWTR_AMT,    /*입고금액 -선적환율 *외화(통관요청 원물금액)*/
                 A.ENTRY_REQ_WONWTR_AMT * A.EXCHANGE_RATE AS ENTRY_REQ_WONWTR_AMT, 	--원물대
                 A.ENTRY_REQ_WONWTR_AMT_SUM,                          /*CL 입고금액합계*/
                 A.PO_PROPOSAL_NUM,                                                             /*구매 품의 번호  */
                 A.INCOME_DTR_DSCT_NUM,                                                         /*수입 유통 식별 번호  */
                 A.EST_NO,
                 A.INCOME_LIC_NUM,
                 A.BL_NUM
        FROM
        (
              SELECT
                 ROW_NUMBER() OVER (PARTITION BY A.ITEM_CD ORDER BY A.ENTRY_ITEM_SEQ DESC) RNUM ,
                 '' DELIVER_NUM,
                 '10' DELIVER_TYPE,                                /*발주입고*/
                 '20' DELIVER_STATUS,                              /*입고*/
                 TO_CHAR(SYSDATE, 'YYYYMMDD') FIRST_DELIVER_DATE,                /*최초입고일자*/
                 TO_CHAR(SYSDATE, 'YYYYMMDD') CURRENT_WH_DELIVER_DATE,              /*현재 창고 입고 일자*/
                 D.SALE_TYPE,                                                                   /*판매 유형*/
                 D.PO_TYPE,                                                                     /*구매 형태*/
                 B.ATTACH_DEPT,                                                                 /*귀속 부서*/

                 A.ENTRY_NUM,                                                                   /*통관번호*/
                 A.ENTRY_ITEM_SEQ,                                                              /*통관번호순번*/
                 A.PO_ORDER_NUM,                                                                /*구매 품의 번호*/
                 A.ITEM_SEQ,                                                                    /*품목 순번*/
                 A.ITEM_CD,                                                                     /*품목 코드*/
                 A.ITEM_NM,                                                                     /*품목 명*/
                 DECODE(V_IN_YN, 'Y', A.HS_CD, C.HS_CD) HS_CD,                                  /*HS코드 */
                 B.SPLR_CD,                                                                     /*매입처 코드*/
                 B.SPLR_NM,                                                                     /*매입처 명*/
                 B.SALSPLCE_CD,                                                                 /*매출처 코드*/
                 B.SALSPLCE_NM,                                                                 /*매출처 명*/
                 A.WH_CD,                                                                       /*창고 코드*/
                 (SELECT MAX(T.VD_NM_LOC) FROM EPROCUSR.ESMVDFW T WHERE T.VD_CD = A.WH_CD AND T.CUS_VD_CLS IN ('10', '50')  AND T.VD_STS = 'C')  WH_NM,
                 A.UNIT,                                                                        /*단위*/
                 (
                    SELECT
                      SET1
                    FROM   SCC_COMMON_CODE A
                    WHERE  A.GROUP_CODE = 'ITEM_UNIT'
                    AND    A.USE_YN = 'Y'
                    AND A.CODE = A.UNIT
                 ) SET1,
                 B.EXCHANGE_RATE,                                                               /*선적 환율(PO)*/
                 /*
                 (
                  SELECT
                        --KRW금액의 합계(원단위까지만 표시(1,234,560KRW) :소수점 이하 반올림) / USD금액의 합계(소수점 둘째자리까지 표시(1234.56USD) : 소수점 3자리 반올림) = 환율(1,000.00)
                       ROUND(SUM(ROUND((ENTRY_REQ_QUANTITY * UPRICE * ENTRY_EXCHANGE_RATE ),2)) / SUM(ROUND((ENTRY_REQ_QUANTITY * UPRICE ),2)),2)
                  FROM ENTRY_MST A ,ENTRY_ITEM_DETAIL B
                  WHERE A.ENTRY_NUM = B.ENTRY_NUM
                  AND A.ENTRY_NUM =A.ENTRY_NUM
                 ) SETTLE_EXCHANGE_RATE,
                 */
                 --ROUND((ENTRY_REQ_QUANTITY * A.UPRICE * ENTRY_EXCHANGE_RATE ),2) / ROUND((ENTRY_REQ_QUANTITY * A.UPRICE ),2) SETTLE_EXCHANGE_RATE,
                 A.SIGN_EXCHANGE_RATE AS SETTLE_EXCHANGE_RATE,

                 D.INT_RATE,                                                                    /*금리*/
                 D.EXPECT_SALS_GAIN_RATE,                                                       /*예상 매출 이익율*/
                 A.UPRICE,                                                                      /*입고단가외화*/
                 DECODE(A.V_IN_YN, 'Y', A.DELIVER_AMT, NVL(C.WONWTR_AMT_KRW,0)) AS WONWTR_AMT_KRW,  
                 DECODE(A.V_IN_YN, 'Y', A.DELIVER_QUANTITY, NVL(C.QUANTITY,0)) QUANTITY,
                 ROUND(B.EXCHANGE_RATE * A.UPRICE) KRW_UPRICE,                            	/*입고단가원화*/
                 A.ENTRY_REQ_QUANTITY,                                                          /*입고수량 - 통관 요청 수량 */
                 A.ENTRY_REQ_WGT,                                                               /*입고 중량 -통관 요청 중량 */
                 A.ENTRY_REQ_WONWTR_AMT,                                                        /*입고금액 -통관요청 원물금액*/
                 (SELECT SUM(ENTRY_REQ_WONWTR_AMT) FROM ENTRY_ITEM_DETAIL
                  WHERE PO_ORDER_NUM = B.PO_ORDER_NUM
                  AND  ENTRY_NUM = A.ENTRY_NUM
                  ) ENTRY_REQ_WONWTR_AMT_SUM,                          /*CL 입고금액합계*/
                 B.PO_PROPOSAL_NUM,                                                             /*구매 품의 번호  */
                 DECODE(V_IN_YN, 'Y', A.INCOME_DTR_DSCT_NUM, C.INCOME_DTR_DSCT_NUM) INCOME_DTR_DSCT_NUM,  /*수입 유통 식별 번호  */
                 DECODE(V_IN_YN, 'Y', A.EST_NO, C.EST_NO) EST_NO,
                 C.INCOME_DTR_DSCT_NUM INCOME_DTR_DSCT_NUM1,                 
                 C.EST_NO EST_NO1,
                 A.INCOME_LIC_NUM,
                 B.BL_NUM,
                 A.V_IN_YN
              FROM
                  (SELECT A.ENTRY_EXCHANGE_RATE, INCOME_LIC_NUM, A.SIGN_EXCHANGE_RATE,  
                          DECODE(C.DELIVER_STATUS, NULL, 'N', 'Y') V_IN_YN, C.HS_CD, C.DELIVER_QUANTITY, C.DELIVER_AMT,
                          B.* 
                    FROM ENTRY_MST A ,ENTRY_ITEM_DETAIL B, 
                         (SELECT * FROM INVENTORY_MGMT_DELIVER WHERE DELIVER_STATUS = '10' AND TRIM(ENTRY_NUM) IS NULL) C
                    WHERE A.ENTRY_NUM = B.ENTRY_NUM
                      AND B.PO_ORDER_NUM = C.PO_ORDER_NUM(+)
                      AND B.ITEM_SEQ = C.ITEM_SEQ(+)
                      AND B.ITEM_CD = C.ITEM_CD(+)
                   ) A,
                   PO_ORDER_MST B,
                   PO_ORDER_ITEM_DETAIL C,
                   PO_PROPOSAL_MST D
              WHERE 1=1
              AND A.PO_ORDER_NUM = B.PO_ORDER_NUM
              AND A.PO_ORDER_NUM = C.PO_ORDER_NUM(+)
              AND A.ITEM_CD = C.ITEM_CD(+)
              AND A.ITEM_SEQ = C.ITEM_SEQ(+)
              AND B.PO_PROPOSAL_NUM = D.PO_PROPOSAL_NUM
              AND A.ENTRY_NUM = :entryNum
              ORDER BY A.ENTRY_ITEM_SEQ
          ) A       
        ]]>
    </statement>
    
    <!-- 입고를 위한 수입면허 내역을 조회한다. -->
    <statement name="selectDeliverList_back2" type="select">
        /*+ com.hwfs.ft.fdm.dao.EntryMstDAO.selectDeliverList */
        <![CDATA[
        SELECT
                 A.RNUM ,
                 A.DELIVER_NUM,
                 A.DELIVER_TYPE,                                /*발주입고*/
                 A.DELIVER_STATUS,                              /*입고*/
                 A.FIRST_DELIVER_DATE,                /*최초입고일자*/
                 A.CURRENT_WH_DELIVER_DATE,              /*현재 창고 입고 일자*/
                 A.SALE_TYPE,                                                                   /*판매 유형*/
                 A.PO_TYPE,                                                                     /*구매 형태*/
                 A.ATTACH_DEPT,                                                                 /*귀속 부서*/
                 A.ENTRY_NUM,                                                                   /*통관번호*/
                 A.ENTRY_ITEM_SEQ,                                                              /*통관번호순번*/
                 A.PO_ORDER_NUM,                                                                /*구매 품의 번호*/
                 A.ITEM_SEQ,                                                                    /*품목 순번*/
                 A.ITEM_CD,                                                                     /*품목 코드*/
                 A.ITEM_NM,                                                                     /*품목 명*/
                 A.HS_CD,                                                                       /*HS코드 */
                 A.SPLR_CD,                                                                     /*매입처 코드*/
                 A.SPLR_NM,                                                                     /*매입처 명*/
                 A.SALSPLCE_CD,                                                                 /*매출처 코드*/
                 A.SALSPLCE_NM,                                                                 /*매출처 명*/
                 A.WH_CD,                                                                       /*창고 코드*/
                 A.WH_NM,
                 A.UNIT,                                                                        /*단위*/
                 A.EXCHANGE_RATE,                                                               /*선적 환율(PO)*/
                 A.SETTLE_EXCHANGE_RATE,                                             /*결재 환율(대금결재)*/
                 A.INT_RATE,                                                                    /*금리*/
                 A.EXPECT_SALS_GAIN_RATE,                                                       /*예상 매출 이익율*/
                 A.UPRICE,                                                                      /*입고단가외화*/
                 ROUND((A.EXCHANGE_RATE *  UPRICE)) KRW_UPRICE,
                 A.ENTRY_REQ_QUANTITY,                                                          /*입고수량 - 통관 요청 수량 */
                 A.ENTRY_REQ_WGT,
                 NVL(A.WONWTR_AMT_KRW,0) AS WONWTR_AMT_KRW,	--원물대
                 NVL(A.QUANTITY,0) AS QUANTITY,
                 NVL((SELECT SUM(T.DELIVER_QUANTITY) FROM INVENTORY_MGMT_DELIVER T
                      WHERE T.PO_ORDER_NUM =A.PO_ORDER_NUM AND T.ITEM_CD= A.ITEM_CD AND T.ITEM_SEQ =A.ITEM_SEQ ),0) AS TOT_ENTRY_REQ_QUANTITY,

                 NVL((SELECT SUM(T.DELIVER_AMT) FROM INVENTORY_MGMT_DELIVER T
                      WHERE T.PO_ORDER_NUM =A.PO_ORDER_NUM AND T.ITEM_CD= A.ITEM_CD AND T.ITEM_SEQ =A.ITEM_SEQ ),0) AS TOT_ENTRY_REQ_WONWTR_AMT,
                                                               /*입고 중량 -통관 요청 중량 */
                 A.ENTRY_REQ_WONWTR_AMT AS BAE_ENTRY_REQ_WONWTR_AMT,                                                         /*입고금액 -통관요청 원물금액*/
                 --ROUND((A.EXCHANGE_RATE *  UPRICE * DECODE(A.SET1,'KG',A.ENTRY_REQ_WGT,A.ENTRY_REQ_QUANTITY) ))  ENTRY_REQ_WONWTR_AMT,    /*입고금액 -선적환율 *외화(통관요청 원물금액)*/
                 A.ENTRY_REQ_WONWTR_AMT * A.EXCHANGE_RATE AS ENTRY_REQ_WONWTR_AMT, 	--원물대
                 A.ENTRY_REQ_WONWTR_AMT_SUM,                          /*CL 입고금액합계*/
                 A.PO_PROPOSAL_NUM,                                                             /*구매 품의 번호  */
                 A.INCOME_DTR_DSCT_NUM,                                                         /*수입 유통 식별 번호  */
                 A.EST_NO,
                 A.INCOME_LIC_NUM,
                 A.BL_NUM
        FROM
        (
              SELECT
                 ROW_NUMBER() OVER (PARTITION BY A.ITEM_CD ORDER BY A.ENTRY_ITEM_SEQ DESC) RNUM ,
                 '' DELIVER_NUM,
                 '10' DELIVER_TYPE,                                /*발주입고*/
                 '20' DELIVER_STATUS,                              /*입고*/
                 TO_CHAR(SYSDATE, 'YYYYMMDD') FIRST_DELIVER_DATE,                /*최초입고일자*/
                 TO_CHAR(SYSDATE, 'YYYYMMDD') CURRENT_WH_DELIVER_DATE,              /*현재 창고 입고 일자*/
                 D.SALE_TYPE,                                                                   /*판매 유형*/
                 D.PO_TYPE,                                                                     /*구매 형태*/
                 B.ATTACH_DEPT,                                                                 /*귀속 부서*/

                 A.ENTRY_NUM,                                                                   /*통관번호*/
                 A.ENTRY_ITEM_SEQ,                                                              /*통관번호순번*/
                 A.PO_ORDER_NUM,                                                                /*구매 품의 번호*/
                 A.ITEM_SEQ,                                                                    /*품목 순번*/
                 A.ITEM_CD,                                                                     /*품목 코드*/
                 A.ITEM_NM,                                                                     /*품목 명*/
                 C.HS_CD,                                                                       /*HS코드 */
                 B.SPLR_CD,                                                                     /*매입처 코드*/
                 B.SPLR_NM,                                                                     /*매입처 명*/
                 B.SALSPLCE_CD,                                                                 /*매출처 코드*/
                 B.SALSPLCE_NM,                                                                 /*매출처 명*/
                 A.WH_CD,                                                                       /*창고 코드*/
                 (SELECT MAX(T.VD_NM_LOC) FROM EPROCUSR.ESMVDFW T WHERE T.VD_CD = A.WH_CD AND T.CUS_VD_CLS IN ('10', '50')  AND T.VD_STS = 'C')  WH_NM,
                 A.UNIT,                                                                        /*단위*/
                 (
                    SELECT
                      SET1
                    FROM   SCC_COMMON_CODE A
                    WHERE  A.GROUP_CODE = 'ITEM_UNIT'
                    AND    A.USE_YN = 'Y'
                    AND A.CODE = A.UNIT
                 ) SET1,
                 B.EXCHANGE_RATE,                                                               /*선적 환율(PO)*/
                 /*
                 (
                  SELECT
                        --KRW금액의 합계(원단위까지만 표시(1,234,560KRW) :소수점 이하 반올림) / USD금액의 합계(소수점 둘째자리까지 표시(1234.56USD) : 소수점 3자리 반올림) = 환율(1,000.00)
                       ROUND(SUM(ROUND((ENTRY_REQ_QUANTITY * UPRICE * ENTRY_EXCHANGE_RATE ),2)) / SUM(ROUND((ENTRY_REQ_QUANTITY * UPRICE ),2)),2)
                  FROM ENTRY_MST A ,ENTRY_ITEM_DETAIL B
                  WHERE A.ENTRY_NUM = B.ENTRY_NUM
                  AND A.ENTRY_NUM =A.ENTRY_NUM
                 ) SETTLE_EXCHANGE_RATE,
                 */
                 --ROUND((ENTRY_REQ_QUANTITY * A.UPRICE * ENTRY_EXCHANGE_RATE ),2) / ROUND((ENTRY_REQ_QUANTITY * A.UPRICE ),2) SETTLE_EXCHANGE_RATE,
                 A.SIGN_EXCHANGE_RATE AS SETTLE_EXCHANGE_RATE,

                 D.INT_RATE,                                                                    /*금리*/
                 D.EXPECT_SALS_GAIN_RATE,                                                       /*예상 매출 이익율*/
                 A.UPRICE,                                                                      /*입고단가외화*/
                 C.WONWTR_AMT_KRW,
                 C.QUANTITY,

                 ROUND(B.EXCHANGE_RATE * A.UPRICE) KRW_UPRICE,                            	/*입고단가원화*/
                 A.ENTRY_REQ_QUANTITY,                                                          /*입고수량 - 통관 요청 수량 */
                 A.ENTRY_REQ_WGT,                                                               /*입고 중량 -통관 요청 중량 */
                 A.ENTRY_REQ_WONWTR_AMT,                                                        /*입고금액 -통관요청 원물금액*/
                 (SELECT SUM(ENTRY_REQ_WONWTR_AMT) FROM ENTRY_ITEM_DETAIL
                  WHERE PO_ORDER_NUM = B.PO_ORDER_NUM
                  AND  ENTRY_NUM = A.ENTRY_NUM
                  ) ENTRY_REQ_WONWTR_AMT_SUM,                          /*CL 입고금액합계*/
                 B.PO_PROPOSAL_NUM,                                                             /*구매 품의 번호  */
                 C.INCOME_DTR_DSCT_NUM,                                                         /*수입 유통 식별 번호  */
                 C.EST_NO,
                 A.INCOME_LIC_NUM,
                 B.BL_NUM
              FROM
                  (SELECT A.ENTRY_EXCHANGE_RATE, INCOME_LIC_NUM, A.SIGN_EXCHANGE_RATE, B.* FROM ENTRY_MST A ,ENTRY_ITEM_DETAIL B
                    WHERE A.ENTRY_NUM = B.ENTRY_NUM
                   ) A,
                   PO_ORDER_MST B,
                   PO_ORDER_ITEM_DETAIL C,
                   PO_PROPOSAL_MST D

              WHERE 1=1
              AND A.PO_ORDER_NUM = B.PO_ORDER_NUM
              AND A.PO_ORDER_NUM = C.PO_ORDER_NUM(+)
			  --아래 항목이 왜 필요한지.. 분할입고시 문제가 되어 주석처리함(2015.12.30 kdp)				  
              --AND    C.PO_ORDER_NUM = B.PO_ORDER_NUM(+)

              AND A.ITEM_CD = C.ITEM_CD(+)
              AND A.ITEM_SEQ = C.ITEM_SEQ(+)
              AND B.PO_PROPOSAL_NUM = D.PO_PROPOSAL_NUM
              AND A.ENTRY_NUM = :entryNum
              ORDER BY A.ENTRY_ITEM_SEQ
          ) A
        ]]>
    </statement>    

   <!-- 입고를 위한 수입면허 내역을 조회한다. -->
    <statement name="selectDeliverList_back" type="select">
        /*+ com.hwfs.ft.fdm.dao.EntryMstDAO.selectDeliverList */
        <![CDATA[
        SELECT
             ROW_NUMBER() OVER (PARTITION BY C.ITEM_CD ORDER BY C.ENTRY_ITEM_SEQ DESC) RNUM ,
             '' DELIVER_NUM,
             '10' DELIVER_TYPE,																/*발주입고*/
             '20' DELIVER_STATUS,															/*입고*/
             TO_CHAR(SYSDATE, 'YYYYMMDD') FIRST_DELIVER_DATE,								/*최초입고일자*/
             TO_CHAR(SYSDATE, 'YYYYMMDD') CURRENT_WH_DELIVER_DATE,							/*현재 창고 입고 일자*/
             E.SALE_TYPE,                                                                   /*판매 유형*/
             E.PO_TYPE,                                                                     /*구매 형태*/
             A.ATTACH_DEPT,                                                                 /*귀속 부서*/
             C.ENTRY_NUM,                                                                   /*통관번호*/
             C.ENTRY_ITEM_SEQ,                                                              /*통관번호순번*/
             C.PO_ORDER_NUM,                                                                /*구매 품의 번호*/
             C.ITEM_SEQ,                                                                    /*품목 순번*/
             C.ITEM_CD,                                                                     /*품목 코드*/
             C.ITEM_NM,                                                                     /*품목 명*/
             B.HS_CD,                                                                       /*HS코드 */
             A.SPLR_CD,                                                                     /*매입처 코드*/
             A.SPLR_NM,                                                                     /*매입처 명*/
             A.SALSPLCE_CD,                                                                 /*매출처 코드*/
             A.SALSPLCE_NM,                                                                 /*매출처 명*/
             C.WH_CD,                                                                       /*창고 코드*/
             (SELECT MAX(T.VD_NM_LOC) FROM EPROCUSR.ESMVDFW T WHERE T.VD_CD = C.WH_CD AND T.CUS_VD_CLS IN ('10', '50')  AND T.VD_STS = 'C')  WH_NM,	/*창고명 */


             C.UNIT,                                                                        /*단위*/
             A.EXCHANGE_RATE,                                                               /*선적 환율(PO)*/
             (
              SELECT
                    --KRW금액의 합계(원단위까지만 표시(1,234,560KRW) :소수점 이하 반올림) / USD금액의 합계(소수점 둘째자리까지 표시(1234.56USD) : 소수점 3자리 반올림) = 환율(1,000.00)
                   ROUND(SUM(ROUND((ENTRY_REQ_QUANTITY * UPRICE * ENTRY_EXCHANGE_RATE ),2)) / SUM(ROUND((ENTRY_REQ_QUANTITY * UPRICE ),2)),2)
              FROM ENTRY_MST A ,ENTRY_ITEM_DETAIL B
              WHERE A.ENTRY_NUM = B.ENTRY_NUM
              AND A.ENTRY_NUM =C.ENTRY_NUM
             ) SETTLE_EXCHANGE_RATE,                                 						/*결재 환율(대금결재)*/

             E.INT_RATE,                                                                    /*금리*/
             E.EXPECT_SALS_GAIN_RATE,                                                       /*예상 매출 이익율*/
             C.UPRICE,                                                                      /*입고단가외화*/
             ROUND(C.ENTRY_EXCHANGE_RATE * C.UPRICE) KRW_UPRICE,                            /*입고단가원화*/
             C.ENTRY_REQ_QUANTITY,                                                          /*입고수량 - 통관 요청 수량 */
             C.ENTRY_REQ_WGT,                                                               /*입고 중량 -통관 요청 중량 */
             C.ENTRY_REQ_WONWTR_AMT,                                                        /*입고금액 -통관요청 원물금액*/
             (SELECT SUM(ENTRY_REQ_WONWTR_AMT) FROM ENTRY_ITEM_DETAIL
              WHERE PO_ORDER_NUM = B.PO_ORDER_NUM
              AND  ENTRY_NUM = C.ENTRY_NUM
              ) ENTRY_REQ_WONWTR_AMT_SUM,													/*CL 입고금액합계*/
             E.PO_PROPOSAL_NUM,                                                             /*구매 품의 번호  */
             C.INCOME_DTR_DSCT_NUM,                                                         /*수입 유통 식별 번호  */
             C.EST_NO,
             C.INCOME_LIC_NUM,
             A.BL_NUM
        FROM  PO_ORDER_MST A
              ,PO_ORDER_ITEM_DETAIL B
              ,(SELECT A.ENTRY_EXCHANGE_RATE, INCOME_LIC_NUM, B.* FROM ENTRY_MST A ,ENTRY_ITEM_DETAIL B
               WHERE A.ENTRY_NUM = B.ENTRY_NUM
              ) C
              ,WHBY_ITEMBY_CHARG_AMT D
              ,PO_PROPOSAL_MST E
        WHERE  A.PO_ORDER_NUM = B.PO_ORDER_NUM
        AND    B.PO_ORDER_NUM = C.PO_ORDER_NUM
        AND    B.ITEM_CD = C.ITEM_CD
        AND    C.ITEM_CD = D.ITEM_CD(+)
        AND    C.WH_CD = D.WH_CD(+)
        AND A.PO_PROPOSAL_NUM = E.PO_PROPOSAL_NUM
        AND    C.ENTRY_NUM = :entryNum
        ]]>
    </statement>


    <!-- 통관테이블 입고여부 업데이트. -->
    <statement name="updateDeliverYn" type="update">
        /*+ com.hwfs.ft.fdm.dao.EntryMstDAO.updateDeliverYn */
        <![CDATA[
        UPDATE ENTRY_MST SET
               DELIVER_YN = :deliverYn,
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  ENTRY_NUM = :entryNum

        ]]>
    </statement>

    <!-- 면허번호 중복체크. -->
    <statement name="dupIncomeLicNumYn" type="select">
        /*+ com.hwfs.ft.fdm.dao.EntryMstDAO."dupIncomeLicNumYn" */
        <![CDATA[
          SELECT
            CASE WHEN COUNT(INCOME_LIC_NUM) > 0 THEN
                 'Y'
            ELSE
                 'N'
            END INCOME_LIC_NUM_YN
         FROM ENTRY_MST
         WHERE INCOME_LIC_NUM =:incomeLicNum
        ]]>
    </statement>

    <!-- 결재 환율을 조회한다.. -->
    <statement name="searchSignExchangeRate" type="select">
        /*+ com.hwfs.ft.fdm.dao.EntryMstDAO.searchSignExchangeRate */
        <![CDATA[
        SELECT TO_CHAR(A.SETTLE_EXCHANGE_RATE,'FM9999990.00') CODE, TO_CHAR(A.SETTLE_EXCHANGE_RATE,'FM9999,990.00') AS CODE_NM FROM GDSPAYM_MST A
        WHERE A.PO_ORDER_NUM =:poOrderNum
        ]]>
    </statement>
</hqml>
