<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="sc.cmn.custInchargeDAO">
	<desc>거래처별 담당자 HQML Query</desc>

	<!-- 거래처별 담당자 목록을 조회한다. -->
	<statement name="selectList" type="select">
		/*+ com.hwfs.sc.cmn.dao.CustInchargeDAO.selectList */
		<![CDATA[

SELECT A.CUSTCD,
       A.PUBLISHER_SABUN,
       A.NM_KOR,
       A.CC_CD,
       A.CC_NM,
       A.MGMT_NUM,
       A.INCHARGE_NAME,
       A.INCHARGE_DEPT_NM,
       SCC_TELNO_SPLIT_FUN(A.INCHARGE_TEL_NUM_ENC, 1) || '-' || SCC_TELNO_SPLIT_FUN(A.INCHARGE_TEL_NUM_ENC, 2) || '-' || SCC_TELNO_SPLIT_FUN(A.INCHARGE_TEL_NUM_ENC, 3) AS INCHARGE_TEL_NUM_ENC,
       SCC_TELNO_SPLIT_FUN(A.INCHARGE_FAX_NUM_ENC, 1) || '-' || SCC_TELNO_SPLIT_FUN(A.INCHARGE_FAX_NUM_ENC, 2) || '-' || SCC_TELNO_SPLIT_FUN(A.INCHARGE_FAX_NUM_ENC, 3) AS INCHARGE_FAX_NUM_ENC,
       SCC_TELNO_SPLIT_FUN(A.INCHARGE_HANDPHONE_NUM_ENC, 1) || '-' || SCC_TELNO_SPLIT_FUN(A.INCHARGE_HANDPHONE_NUM_ENC, 2) || '-' || SCC_TELNO_SPLIT_FUN(A.INCHARGE_HANDPHONE_NUM_ENC, 3) AS INCHARGE_HANDPHONE_NUM_ENC,
       A.INCHARGE_EMAIL_ADDR_ENC,
       A.SMS_YN,
       A.LAST_USE_DATE,
       A.REMARK
FROM   (SELECT A.CUSTCD,
               A.PUBLISHER_SABUN,
               SCC_CRYPTO.MASKAUTH_FUN(B.NM_KOR, 12, :loginPersMask, :maskAuth) AS NM_KOR,
               A.CC_CD,
               (SELECT CC_NM FROM HLDC_SC_DEPT_V WHERE CC_CD = A.CC_CD) AS CC_NM,
               A.MGMT_NUM,
               SCC_CRYPTO.MASKAUTH_FUN(A.INCHARGE_NAME, 12, :loginPersMask, :maskAuth) AS INCHARGE_NAME,
               A.INCHARGE_DEPT_NM,
               SCC_CRYPTO.MASKAUTH_FUN(A.INCHARGE_TEL_NUM_ENC, 9, :loginPersMask, :maskAuth) AS INCHARGE_TEL_NUM_ENC,
               SCC_CRYPTO.MASKAUTH_FUN(A.INCHARGE_FAX_NUM_ENC, 9, :loginPersMask, :maskAuth) AS INCHARGE_FAX_NUM_ENC,
               SCC_CRYPTO.MASKAUTH_FUN(A.INCHARGE_HANDPHONE_NUM_ENC, 8, :loginPersMask, :maskAuth) AS INCHARGE_HANDPHONE_NUM_ENC,
               SCC_CRYPTO.MASKAUTH_FUN(A.INCHARGE_EMAIL_ADDR_ENC, 7, :loginPersMask, :maskAuth) AS INCHARGE_EMAIL_ADDR_ENC,
               DECODE(A.SMS_YN, 'Y', '1', '0') AS SMS_YN,
               TO_CHAR(A.LAST_USE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS LAST_USE_DATE,
               A.REMARK
        FROM   SCC_CUST_INCHARGE A,
               HR_PERSONAL B
        WHERE  B.SABUN = A.PUBLISHER_SABUN
        AND    A.CUSTCD = :custcd
        ORDER BY A.LAST_USE_DATE DESC) A
		]]>
	</statement>

	<!-- 거래처별 담당자을 조회한다. -->
	<statement name="select" type="select">
		/*+ com.hwfs.sc.cmn.dao.CustInchargeDAO.select */
		<![CDATA[
SELECT A.CUSTCD,
       A.PUBLISHER_SABUN,
       A.NM_KOR,
       A.CC_CD,
       A.CC_NM,
       A.MGMT_NUM,
       A.INCHARGE_NAME,
       A.INCHARGE_DEPT_NM,
       SCC_TELNO_SPLIT_FUN(A.INCHARGE_TEL_NUM_ENC, 1) || '-' || SCC_TELNO_SPLIT_FUN(A.INCHARGE_TEL_NUM_ENC, 2) || '-' || SCC_TELNO_SPLIT_FUN(A.INCHARGE_TEL_NUM_ENC, 3) AS INCHARGE_TEL_NUM_ENC,
       SCC_TELNO_SPLIT_FUN(A.INCHARGE_FAX_NUM_ENC, 1) || '-' || SCC_TELNO_SPLIT_FUN(A.INCHARGE_FAX_NUM_ENC, 2) || '-' || SCC_TELNO_SPLIT_FUN(A.INCHARGE_FAX_NUM_ENC, 3) AS INCHARGE_FAX_NUM_ENC,
       SCC_TELNO_SPLIT_FUN(A.INCHARGE_HANDPHONE_NUM_ENC, 1) || '-' || SCC_TELNO_SPLIT_FUN(A.INCHARGE_HANDPHONE_NUM_ENC, 2) || '-' || SCC_TELNO_SPLIT_FUN(A.INCHARGE_HANDPHONE_NUM_ENC, 3) AS INCHARGE_HANDPHONE_NUM_ENC,
       A.INCHARGE_EMAIL_ADDR_ENC,
       A.SMS_YN,
       A.LAST_USE_DATE,
       A.REMARK
FROM   (SELECT A.CUSTCD,
               A.PUBLISHER_SABUN,
               SCC_CRYPTO.MASKAUTH_FUN(B.NM_KOR, 12, :loginPersMask, :maskAuth) AS NM_KOR,
               A.CC_CD,
               (SELECT CC_NM FROM HLDC_SC_DEPT_V WHERE CC_CD = A.CC_CD) AS CC_NM,
               A.MGMT_NUM,
               SCC_CRYPTO.MASKAUTH_FUN(A.INCHARGE_NAME, 12, :loginPersMask, :maskAuth) AS INCHARGE_NAME,
               A.INCHARGE_DEPT_NM,
               SCC_CRYPTO.MASKAUTH_FUN(A.INCHARGE_TEL_NUM_ENC, 9, :loginPersMask, :maskAuth) AS INCHARGE_TEL_NUM_ENC,
               SCC_CRYPTO.MASKAUTH_FUN(A.INCHARGE_FAX_NUM_ENC, 9, :loginPersMask, :maskAuth) AS INCHARGE_FAX_NUM_ENC,
               SCC_CRYPTO.MASKAUTH_FUN(A.INCHARGE_HANDPHONE_NUM_ENC, 8, :loginPersMask, :maskAuth) AS INCHARGE_HANDPHONE_NUM_ENC,
               SCC_CRYPTO.MASKAUTH_FUN(A.INCHARGE_EMAIL_ADDR_ENC, 7, :loginPersMask, :maskAuth) AS INCHARGE_EMAIL_ADDR_ENC,
               DECODE(A.SMS_YN, 'Y', '1', '0') AS SMS_YN,
               TO_CHAR(A.LAST_USE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS LAST_USE_DATE,
               A.REMARK
        FROM   SCC_CUST_INCHARGE A,
               HR_PERSONAL B
        WHERE  B.SABUN = A.PUBLISHER_SABUN
        AND    A.CUSTCD = :custcd
        AND    A.CC_CD = :ccCd
        AND    A.PUBLISHER_SABUN = :publisherSabun
        ORDER BY A.LAST_USE_DATE DESC) A
WHERE   ROWNUM = 1
		]]>
	</statement>

	<!-- 거래처별 담당자(을)를 등록한다. -->
	<statement name="insert" type="insert">
		/*+ com.hwfs.sc.cmn.dao.CustInchargeDAO.insert */
		<![CDATA[
INSERT INTO SCC_CUST_INCHARGE
(
 CUSTCD,
 PUBLISHER_SABUN,
 CC_CD,
 MGMT_NUM,
 INCHARGE_NAME,
 INCHARGE_DEPT_NM,
 INCHARGE_TEL_NUM_ENC,
 INCHARGE_FAX_NUM_ENC,
 INCHARGE_HANDPHONE_NUM_ENC,
 INCHARGE_EMAIL_ADDR_ENC,
 SMS_YN,
 LAST_USE_DATE,
 REMARK,
 CUSER,
 CDATE,
 UUSER,
 UDATE
) VALUES (
 :custcd,
 :publisherSabun,
 :ccCd,
 :mgmtNum,
<#if inchargeName?exists> :inchargeName, <#else> null, </#if>
<#if inchargeDeptNm?exists> :inchargeDeptNm, <#else> null, </#if>
<#if inchargeTelNumEnc?exists> SCC_CRYPTO.ENC_FUN(REPLACE(REPLACE(REPLACE(REPLACE(:inchargeTelNumEnc, '-', ''), '.', ''), ')', ''), '.', '')), <#else> null, </#if>
<#if inchargeFaxNumEnc?exists> SCC_CRYPTO.ENC_FUN(REPLACE(REPLACE(REPLACE(REPLACE(:inchargeFaxNumEnc, '-', ''), '.', ''), ')', ''), '.', '')), <#else> null, </#if>
<#if inchargeHandphoneNumEnc?exists> SCC_CRYPTO.ENC_FUN(REPLACE(REPLACE(REPLACE(REPLACE(:inchargeHandphoneNumEnc, '-', ''), '.', ''), ')', ''), '.', '')), <#else> null, </#if>
<#if inchargeEmailAddrEnc?exists> SCC_CRYPTO.ENC_FUN(:inchargeEmailAddrEnc), <#else> null, </#if>
<#if smsYn?exists> DECODE(:smsYn, '1', 'Y', 'N'), <#else> null, </#if>
<#if lastUseDate?has_content> SYSDATE, <#else> null, </#if>
<#if remark?exists> :remark, <#else> null, </#if>
 :loginSabun,
 SYSDATE,
 :loginSabun,
 SYSDATE
)
		]]>
	</statement>

	<!-- 거래처별 담당자(을)를 수정한다. -->
	<statement name="update" type="update">
		/*+ com.hwfs.sc.cmn.dao.CustInchargeDAO.update */
		<![CDATA[
UPDATE SCC_CUST_INCHARGE SET
<#if inchargeName?exists> INCHARGE_NAME = :inchargeName, </#if>
<#if inchargeDeptNm?exists> INCHARGE_DEPT_NM = :inchargeDeptNm, </#if>
<#if inchargeTelNumEnc?exists> INCHARGE_TEL_NUM_ENC = SCC_CRYPTO.ENC_FUN(REPLACE(REPLACE(REPLACE(REPLACE(:inchargeTelNumEnc, '-', ''), '.', ''), ')', ''), '.', '')), </#if>
<#if inchargeFaxNumEnc?exists> INCHARGE_FAX_NUM_ENC = SCC_CRYPTO.ENC_FUN(REPLACE(REPLACE(REPLACE(REPLACE(:inchargeFaxNumEnc, '-', ''), '.', ''), ')', ''), '.', '')), </#if>
<#if inchargeHandphoneNumEnc?exists> INCHARGE_HANDPHONE_NUM_ENC = SCC_CRYPTO.ENC_FUN(REPLACE(REPLACE(REPLACE(REPLACE(:inchargeHandphoneNumEnc, '-', ''), '.', ''), ')', ''), '.', '')), </#if>
<#if inchargeEmailAddrEnc?exists> INCHARGE_EMAIL_ADDR_ENC = SCC_CRYPTO.ENC_FUN(:inchargeEmailAddrEnc), </#if>
<#if smsYn?exists> SMS_YN = DECODE(:smsYn, '1', 'Y', 'N'), </#if>
       LAST_USE_DATE = SYSDATE,
<#if remark?exists> REMARK = :remark, </#if>
       UUSER = :loginSabun,
       UDATE = SYSDATE
WHERE  CUSTCD = :custcd
AND    PUBLISHER_SABUN = :publisherSabun
AND    CC_CD = :ccCd
AND    MGMT_NUM = :mgmtNum
		]]>
	</statement>

	<!-- 거래처별 담당자(을)를 삭제한다. -->
	<statement name="delete" type="delete">
		/*+ com.hwfs.sc.cmn.dao.CustInchargeDAO.delete */
		<![CDATA[
DELETE
FROM   SCC_CUST_INCHARGE
WHERE  CUSTCD = :custcd
AND    PUBLISHER_SABUN = :publisherSabun
AND    CC_CD = :ccCd
AND    MGMT_NUM = :mgmtNum
		]]>
	</statement>

</hqml>
