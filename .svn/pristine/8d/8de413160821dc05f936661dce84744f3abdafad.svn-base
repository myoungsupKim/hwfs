<?xml version="1.0" encoding="euc-kr"?>
<query>
	<type>select</type>
	<description><![CDATA[매출,재료비 실적 추정 조회]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
<![CDATA[
SELECT  A.*
		, SUBSTR(A.ACCT_CD,4,1) AS ACCT_CD_DTL
		--, AMT01 + AMT02 + AMT03 + AMT04 + AMT05 + AMT06 + AMT07 + AMT08 + AMT09 + AMT10 + AMT11 + AMT12 AS AMT_TOT
FROM	(
            SELECT  CD_DTL.MST_CD
                    , CD_DTL.DTL_CD_NAME
                    , CD_DTL.ORDER_BY || 0 AS ORDER_BY
                    , NVL(ACT_SL.YY,#YY#) AS YY
                    , NVL(ACT_SL.TM_CD,#TM_CD#) AS TM_CD
                    , NVL(ACT_SL.UPJANG,#UPJANG#) AS UPJANG
                    , NVL(ACT_SL.DATA_CLASS,CD_DTL.MST_CD) AS DATA_CLASS
                    , NVL(ACT_SL.ACCT_CD,CD_DTL.DTL_CD) AS ACCT_CD
                    , NVL(ACT_SL.AMT01,0) AS AMT01
                	, NVL(ACT_SL.AMT02,0) AS AMT02
                	, NVL(ACT_SL.AMT03,0) AS AMT03
                	, NVL(ACT_SL.AMT04,0) AS AMT04
                	, NVL(ACT_SL.AMT05,0) AS AMT05
                	, NVL(ACT_SL.AMT06,0) AS AMT06
                	, NVL(ACT_SL.AMT07,0) AS AMT07
                	, NVL(ACT_SL.AMT08,0) AS AMT08
                	, NVL(ACT_SL.AMT09,0) AS AMT09
                	, NVL(ACT_SL.AMT10,0) AS AMT10
                	, NVL(ACT_SL.AMT11,0) AS AMT11
                	, NVL(ACT_SL.AMT12,0) AS AMT12
                	, NVL(ACT_SL.AMT_TOT,0) AS AMT_TOT
                	, '1' AS GUBUN
            FROM    MAC_CD_DTL CD_DTL
                    , (		SELECT	  YY
				                    , TM_CD
				                    , UPJANG
				                    , DATA_CLASS
				                    , ACCT_CD
				                    , ROUND(AMT01 / 1000) AS AMT01
				                	, ROUND(AMT02 / 1000) AS AMT02
				                	, ROUND(AMT03 / 1000) AS AMT03
				                	, ROUND(AMT04 / 1000) AS AMT04
				                	, ROUND(AMT05 / 1000) AS AMT05
				                	, ROUND(AMT06 / 1000) AS AMT06
				                	, ROUND(AMT07 / 1000) AS AMT07
				                	, ROUND(AMT08 / 1000) AS AMT08
				                	, ROUND(AMT09 / 1000) AS AMT09
				                	, ROUND(AMT10 / 1000) AS AMT10
				                	, ROUND(AMT11 / 1000) AS AMT11
				                	, ROUND(AMT12 / 1000) AS AMT12
				                	, ROUND((NVL(AMT01,0) + NVL(AMT02,0) + NVL(AMT03,0) + NVL(AMT04,0) + NVL(AMT05,0) + NVL(AMT06,0) + NVL(AMT07,0) + NVL(AMT08,0) + NVL(AMT09,0) + NVL(AMT10,0) + NVL(AMT11,0) + NVL(AMT12,0))/1000) AS AMT_TOT
                    		FROM	MAP_ACT_SALE
                    		WHERE	YY		= #YY#
				            AND		TM_CD	= #TM_CD#
				            AND		UPJANG	= #UPJANG#
                       ) ACT_SL
            WHERE   (MST_CD = 'P01' OR MST_CD = 'P02')
            AND     CD_DTL.DTL_CD = ACT_SL.ACCT_CD (+)
            AND     CD_DTL.USE_YN = 'Y'
            UNION   ALL
            SELECT  CD_DTL.MST_CD
                    , '  (재료비율 %)' AS DTL_CD_NAME
                    , CD_DTL.ORDER_BY || 1 AS ORDER_BY
                    , NVL(ACT_SL.YY,#YY#) AS YY
                    , NVL(ACT_SL.TM_CD,#TM_CD#) AS TM_CD
                    , NVL(ACT_SL.UPJANG,#UPJANG#) AS UPJANG
                    , NVL(ACT_SL.DATA_CLASS,CD_DTL.MST_CD) AS DATA_CLASS
                    , NVL(ACT_SL.ACCT_CD,CD_DTL.DTL_CD) AS ACCT_CD
                    , NVL(ACT_SL.AMT01,0) AS AMT01
                	, NVL(ACT_SL.AMT02,0) AS AMT02
                	, NVL(ACT_SL.AMT03,0) AS AMT03
                	, NVL(ACT_SL.AMT04,0) AS AMT04
                	, NVL(ACT_SL.AMT05,0) AS AMT05
                	, NVL(ACT_SL.AMT06,0) AS AMT06
                	, NVL(ACT_SL.AMT07,0) AS AMT07
                	, NVL(ACT_SL.AMT08,0) AS AMT08
                	, NVL(ACT_SL.AMT09,0) AS AMT09
                	, NVL(ACT_SL.AMT10,0) AS AMT10
                	, NVL(ACT_SL.AMT11,0) AS AMT11
                	, NVL(ACT_SL.AMT12,0) AS AMT12
                	, NVL(ACT_SL.AMT_TOT,0) AS AMT_TOT
                	, '2' AS GUBUN
            FROM    MAC_CD_DTL CD_DTL
                    , (		SELECT	  A.YY
				                    , A.TM_CD
				                    , A.UPJANG
				                    , A.DATA_CLASS
                                    , A.ACCT_CD
				                    , DECODE(NVL(B.AMT01,0),0,0,ROUND(A.AMT01/B.AMT01*100,1)) AS AMT01
				                    , DECODE(NVL(B.AMT02,0),0,0,ROUND(A.AMT02/B.AMT02*100,1)) AS AMT02
				                    , DECODE(NVL(B.AMT03,0),0,0,ROUND(A.AMT03/B.AMT03*100,1)) AS AMT03
				                    , DECODE(NVL(B.AMT04,0),0,0,ROUND(A.AMT04/B.AMT04*100,1)) AS AMT04
				                    , DECODE(NVL(B.AMT05,0),0,0,ROUND(A.AMT05/B.AMT05*100,1)) AS AMT05
				                    , DECODE(NVL(B.AMT06,0),0,0,ROUND(A.AMT06/B.AMT06*100,1)) AS AMT06
				                    , DECODE(NVL(B.AMT07,0),0,0,ROUND(A.AMT07/B.AMT07*100,1)) AS AMT07
				                    , DECODE(NVL(B.AMT08,0),0,0,ROUND(A.AMT08/B.AMT08*100,1)) AS AMT08
				                    , DECODE(NVL(B.AMT09,0),0,0,ROUND(A.AMT09/B.AMT09*100,1)) AS AMT09
				                    , DECODE(NVL(B.AMT10,0),0,0,ROUND(A.AMT10/B.AMT10*100,1)) AS AMT10
				                    , DECODE(NVL(B.AMT11,0),0,0,ROUND(A.AMT11/B.AMT11*100,1)) AS AMT11
				                    , DECODE(NVL(B.AMT12,0),0,0,ROUND(A.AMT12/B.AMT12*100,1)) AS AMT12
				                    , DECODE((NVL(B.AMT01,0)+NVL(B.AMT02,0)+NVL(B.AMT03,0)+NVL(B.AMT04,0)+NVL(B.AMT05,0)+NVL(B.AMT06,0)+NVL(B.AMT07,0)+NVL(B.AMT08,0)+NVL(B.AMT09,0)+NVL(B.AMT10,0)+NVL(B.AMT11,0)+NVL(B.AMT12,0)),0,0,ROUND((NVL(A.AMT01,0)+NVL(A.AMT02,0)+NVL(A.AMT03,0)+NVL(A.AMT04,0)+NVL(A.AMT05,0)+NVL(A.AMT06,0)+NVL(A.AMT07,0)+NVL(A.AMT08,0)+NVL(A.AMT09,0)+NVL(A.AMT10,0)+NVL(A.AMT11,0)+NVL(A.AMT12,0))/(NVL(B.AMT01,0)+NVL(B.AMT02,0)+NVL(B.AMT03,0)+NVL(B.AMT04,0)+NVL(B.AMT05,0)+NVL(B.AMT06,0)+NVL(B.AMT07,0)+NVL(B.AMT08,0)+NVL(B.AMT09,0)+NVL(B.AMT10,0)+NVL(B.AMT11,0)+NVL(B.AMT12,0))*100,1)) AS AMT_TOT
                    		FROM	MAP_ACT_SALE A
                    				, MAP_ACT_SALE B
                    		WHERE	A.DATA_CLASS = 'P02'
                    		AND		B.DATA_CLASS = 'P01'
                    		AND		A.YY		= B.YY
                    		AND		A.TM_CD 	= B.TM_CD
                    		AND		A.UPJANG	= B.UPJANG
                    		AND     SUBSTR(A.ACCT_CD,4,1) = SUBSTR(B.ACCT_CD,4,1)
                    		AND		A.YY		= #YY#
				            AND		A.TM_CD		= #TM_CD#
				            AND		A.UPJANG	= #UPJANG#
                       ) ACT_SL
            WHERE   MST_CD = 'P02'
            AND     CD_DTL.DTL_CD = ACT_SL.ACCT_CD (+)
            AND     CD_DTL.USE_YN = 'Y'
		) A
ORDER BY MST_CD,ORDER_BY	]]></statement>
	<input default-name="ds_input">
	</input>
	<output default-name="ds_list">
	</output>
</query>
