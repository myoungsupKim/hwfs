<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="../../../default_typedef.xml"/>
  <Form id="FMS00070P" onkeydown="FMS00070P_OnKeyDown" onload="form_onload" titletext="비밀번호변경" position="absolute 0 0 238 320" scrollbars="none">
    <Layouts>
      <Layout>
        <Static id="sta_detail14" class="sta_WFDA_Labelbg" position="absolute 108 10 223 37"/>
        <Static id="sta_detail00" class="sta_WFDA_Labelbg" position="absolute 108 36 223 63"/>
        <Static id="sta_detail01" class="sta_WFDA_Labelbg" position="absolute 108 62 223 89"/>
        <Edit autoselect="true" id="ed_Pwd" imemode="english" password="true" taborder="1" position="absolute 111 13 220 34"/>
        <Edit autoselect="true" id="ed_PwdN" imemode="english" ontextchange="ed_PwdN_OnCharChanged" password="true" taborder="2" position="absolute 111 39 220 60"/>
        <Edit autoselect="true" id="ed_PwdN2" imemode="english" password="true" taborder="3" position="absolute 111 65 220 86"/>
        <Static id="Static01" text="현재비밀번호" position="absolute 15 10 109 37" class="sta_WFDA_Label01"/>
        <Static id="Static0" text="새 비밀번호" position="absolute 15 36 109 63" class="sta_WFDA_Label01"/>
        <Static id="Static1" text="비밀번호확인" position="absolute 15 62 109 89" class="sta_WFDA_Label01"/>
        <Button id="btn_Save" onclick="btn_Save_OnClick" taborder="4" text="확  인" position="absolute 121 280 171 305" class="btn_POP_Default" image=""/>
        <Button id="btn_Close" onclick="btn_Close_OnClick" taborder="5" text="취  소" position="absolute 173 280 223 305" class="btn_POP_Default" image=""/>
        <Static id="Static4" text="1. 다음 각 목의 문자 종류 중 &#13;&#10; 2종류 이상을 조합하여 최소 10자리&#13;&#10; 이상 또는 3종류 이상을 조합하여 최소&#13;&#10; 8자리 이상의 길이로 구성 &#13;&#10;   가. 영문 대문자(26개) &#13;&#10;   나. 영문 소문자(26개) &#13;&#10;   다. 숫자(10개) &#13;&#10;   라. 특수문자(32개) &#13;&#10;2. 연속적인 숫자나 생일, 전화번호 등 &#13;&#10; 추측하기 쉬운 개인정보 및 아이디와 &#13;&#10; 비슷한 비밀번호는 사용하지 말것.&#13;&#10;3. 비밀번호는 반기별 1회 이상 변경." position="absolute 14 84 226 281"/>
        <Static id="Static02" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 0 0 15 306"/>
        <Static id="Static15" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 15 0 224 10"/>
        <Static id="Static03" text="h15" class="Guide01_AreaRed" visible="false" position="absolute 15 305 224 320"/>
        <Static id="Static05" text="w15" class="Guide01_AreaRed" visible="false" position="absolute 223 0 238 306"/>
        <Static id="Static00" text="h10" class="Guide01_AreaRed" visible="false" position="absolute 6 270 238 280"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_list">
        <ColumnInfo>
          <Column id="BEFORE_PWD" size="64" type="STRING"/>
          <Column id="EMAIL" size="50" type="STRING"/>
          <Column id="EMAIL_YN" size="1" type="STRING"/>
          <Column id="FAX_NO" size="20" type="STRING"/>
          <Column id="HP_NO" size="20" type="STRING"/>
          <Column id="NM_KOR" size="20" type="STRING"/>
          <Column id="PASSWORD" size="64" type="STRING"/>
          <Column id="PASSWORD2" size="64" type="STRING"/>
          <Column id="SABUN" size="9" type="STRING"/>
          <Column id="SMS_YN" size="1" type="STRING"/>
          <Column id="TEL_NO" size="20" type="STRING"/>
          <Column id="UPJANGNM_DISP" size="100" type="STRING"/>
          <Column id="USERID" size="50" type="STRING"/>
          <Column id="LAST_PWD" size="256" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_lnputPw">
        <ColumnInfo>
          <Column id="PASSWORD" size="64" type="STRING"/>
          <Column id="NEWPASSWORD" size="64" type="STRING"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_OutputPw">
        <ColumnInfo>
          <Column id="PASSWORD" size="64" type="STRING"/>
          <Column id="NEWPASSWORD" size="64" type="STRING"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="ed_PwdN_value" compid="ed_PwdN" propid="value" datasetid="ds_list" columnid="PASSWORD"/>
      <BindItem id="ed_PwdN2_value" compid="ed_PwdN2" propid="value" datasetid="ds_list" columnid="PASSWORD2"/>
      <BindItem id="item14" compid="sta_detail14" propid="text" datasetid="ds_view" columnid="D_1"/>
      <BindItem id="item0" compid="sta_detail00" propid="text" datasetid="ds_view" columnid="D_1"/>
      <BindItem id="item1" compid="sta_detail01" propid="text" datasetid="ds_view" columnid="D_1"/>
    </Bind>
    <Script type="xscript4.0"><![CDATA[include "U_lib::lib_conversionCom.xjs";
/*
 ******************************************************************************************
 * 시스템구분   : 식재영업/사용자관리/비밀번호변겅
 * 프로그램명   : FMS00070P.XML
 * 기      능   : 비밀번호 변경
 * 작  성  자   : 박은규
 * 작성  일자   : 2007-11-20
 * ----------------------------------------------------------------------------------------
 * HISTORY    : 2014-02-28 김장욱 수정
 *              비밀번호 생성규칙강화를 위해 소스 수정
 * 수정  일자   : 2015-04-30
				   [고도화]_암복호화 및 마스킹 처리_쿼리수정__김태윤. 
 ******************************************************************************************
*/
//=========================================================================================
// [ PART 1 ]
// Form에서 Include 할 내용을 정의
//
//=========================================================================================
//@@컨버터에서 주석처리 #include "lib::sc_comon.js"				// 시스템 공통
//@@컨버터에서 주석처리 #include "LIB::lib_comm_0001.js"		//JAVA 코딩시
//@@컨버터에서 주석처리 #include "LIB::tit_comm_0001.js"		// X-Framework Lib
//@@컨버터에서 주석처리 #include "lib::sc_sql_common.js"		// 공통팝업
//@@컨버터에서 주석처리 #include "lib::pw_check.js"				// 패스워드 생성규칙 검증 공통
//=========================================================================================
// [ PART 2 ]
// Form에서 사용될 전역변수를 선언
//
//=========================================================================================


//=========================================================================================
// [ PART 3 ]
// Form Loading 시 작업 정의
//
//=========================================================================================

function form_onload(obj:Form, e:LoadEventInfo)
{
	gfn_formOnLoad(obj, false);
	
	//초기화
   	fsp_init(this);
	//로그인 사번으로 개인정보 조회
	fn_search();
}


//콜백
function fn_CallBack_Save(errCode, errMsg)
{
	if (errCode == 0)
	{
		gfn_alert('비밀번호가 변경되었습니다.');
		fn_Close("Y");
	}
	else
		gfn_alert('비밀번호 변경 시 오류가 발생하였습니다.(' + errMsg + ')');
}

//=========================================================================================
// [ PART 4 ]
// Main Process Event 정의(조회,입력,삭제,저장,인쇄,도움말,form닫기)
//
//=========================================================================================
/*------------------------------------------------------------(60)
	1. Function ID : fn_Search()
	2. 개       요 : 업무프로세스에 따른 조회작업
	3. 기       능 : 검색조건에 해당하는 정보를 조회
	4. 인 수 설 명 : 
*/
function fn_search()
{
	// 초기화
	ds_list.clearData();
	// 조회
	var actionName, cmdName, inData, outData, otherArg, callBackFnc;
	inData			= "";
	outData			= "ds_list=ds_list";
	otherArg    	= "p_MaskAuth=" + wrapQuote(SCAuth.getMaskAuth(this));
	
	// 파라미터셋팅
	//action 정보 초기화 
	fsp_clear(this); 
    // 서버에서 조회할 정보 추가 
	fsp_addSearch(this, "fm/fms:FMS00070E_S001");
	// 서버 호출 
    fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);		// 서비스 호출 

	ed_PwdN2.enable = false;
	ed_Pwd.setFocus();
}

/*------------------------------------------------------------
	1. Function ID : fn_Insert()
	2. 개       요 : 업무프로세스에 따른 입력작업
	3. 기       능 : 입력버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
*/
function fn_insert()
{
}

/*------------------------------------------------------------
	1. Function ID : fn_Delete()
	2. 개       요 : 업무프로세스에 따른 입력작업
	3. 기       능 : 입력버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
*/
function fn_delete()
{
}

/*------------------------------------------------------------
	1. Function ID : fn_Save()
	2. 개       요 : 업무프로세스에 따른 입력작업
	3. 기       능 : 입력버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
-----------------------------------------------------------*/
function fn_save()
{    
	//==============================================
	// 2014-02-28 김장욱 수정 시작
	// P/W 변경 체크 로직 강화
	//==============================================
	//비밀번호 변경 체크
	var sRtn = fn_ChkPwd();
	
	if (sRtn != null)
	{
		gfn_alert(sRtn);
		return;
	}	
	
	// P/W 변경체크
	if(ed_PwdN.value != ed_PwdN2.value){
		gfn_alert('새비밀번호가 틀립니다.');
		return;
	}	
	
	//==============================================
	// 2014-02-28 김장욱 수정 끝
	//==============================================
	
    
	ds_list.setColumn(0, "PASSWORD", ds_OutputPw.getColumn(0, "NEWPASSWORD"));
	ds_list.setColumn(0, "PASSWORD2", ds_OutputPw.getColumn(0, "NEWPASSWORD"));
	ds_list.setColumn(0, "BEFORE_PWD", ds_OutputPw.getColumn(0, "PASSWORD"));


	
    // 서비스셋팅
    var actionName, cmdName, inData, outData, otherArg, callBackFnc;
    var insertSql, updateSql, deleteSql, saveFlagColumn, keySqlName, keyIncrement, callbackSql;
    inData		= "ds_cond=ds_list:U";
    outData		= "";
    callBackFnc	= "fn_CallBack_Save";
    insertSql 	= "";
    updateSql	= "fm/fms:FMS00070E_U001";
    deleteSql	= "";
    keyIncrement= -1;
    callbackSql	= "";
   	// action 정보 초기화 
    fsp_clear(this);
    fsp_addSave(this, insertSql, updateSql, deleteSql,saveFlagColumn, keySqlName, keyIncrement, callbackSql);
    fsp_callService(this, actionName, cmdName, inData, outData, otherArg, callBackFnc);		// 서비스 호출 
}

/*------------------------------------------------------------
	1. Function ID : fn_Print()
	2. 개       요 : 업무프로세스에 따른 입력작업
	3. 기       능 : 입력버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
*/
function fn_print()
{
}

/*------------------------------------------------------------
	1. Function ID : fn_Close()
	2. 개       요 : 업무프로세스에 따른 입력작업
	3. 기       능 : 입력버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
*/
function fn_Close(yn)
{
	this.close(yn);
}

/*------------------------------------------------------------
	1. Function ID : fn_Help()
	2. 개       요 : 업무프로세스에 따른 입력작업
	3. 기       능 : 입력버튼 입력 시 처리되는 작업
	4. 인 수 설 명 : 
*/
function fn_help()
{
}

//=========================================================================================
// [ PART 5 ]
// Detail Process Event 정의 ( User Define function )
//
//=========================================================================================
/*------------------------------------------------------------
	1. Function ID : fn_AlertMsg(cd)
	2. 개       요 : 메세지 처리
	3. 기       능 : 화면에 나타나는 메시지 코드및 텍스트 리턴
	4. 인 수 설 명 : cd : 원하는 메시지 코드
*/
function fn_AlertMsg(cd)
{
	var v_Msg="";
	switch(cd)
	{
		case "001":
			v_Msg= "버튼이 정의 되어 있지않습니다.";
			break;
		case "002":
			v_Msg="서비스 오류:시스템 관리자에게 문의하십시오";
			break;
		case "003":
			v_Msg="시스템구분이 없습니다.\n\n시스템 관리자에게 문의하십시오.";
			break;	
		case "004":
			v_Msg="시스템ID가 선택되지 않았습니다.\n\n선택할 항목이 없으면 시스템 관리자에게 문의하십시오.";
			break;
		case "005":
			v_Msg="을(를) 입력하세요";
			break;
		case "006":
			v_Msg="삭제할 데이터가 없습니다.";
			break;
		case "007":
			v_Msg="변경된 데이터가 없습니다.";
			break;
		case "008":
			v_Msg="시스템ID가 없습니다.";
			break;			
/*			
		case "":
			v_Msg="";
			break;
*/			
		default:
			break;			
	}
	return v_Msg;
}

//=========================================================================================
// [ PART 6 ]
// component Event 정의 ( User Define function )
// --> component Event의 기요,기능,동작 등 상세내용은 MiPlatform 메뉴얼을 참조하시기 바랍니다.
//=========================================================================================
function fn_ChkPwd()
{
/*	for ( var i=0; i =< length(trim(ed_PwdN.Text));i++)
	{
		var chr_chk = 0;
		var num_chk = 0;
		var etc_chk = 0;
		if ( substr(trim(ed_PwdN.Text), 0,i) [0..9]) //comma가 있는경우 제거해야 됨..
		{
			alert("메세지");
			return;
		}
	} 

    //변경비번이 없으면...
	if (Trim(ed_PwdN.Text) == null)
	{
		ed_PwdN.SetFocus();
		return "새 비밀번호를 입력하세요.";
	}
	//비번 확인체크
	if (Trim(ed_PwdN.Text) != Trim(ed_PwdN2.Text))
	{
		ed_PwdN2.SetFocus();
		return "비밀번호 확인을 정확히 입력하십시요.";
	}
	//비번 길이 체크
	if (length(trim(ed_PwdN.Text)) < 8)
	{
		ed_PwdN.SetFocus();
		return "비밀번호는 8자리 이상이어야 합니다.";
	}
	//비밀번호구성 체크
	var sStr;
	var iNumCnt = 0, iUppCnt = 0, iLowCnt = 0, iEtcCnt = 0;
	for (i=0; i<length(ed_PwdN.Text); i++)
	{
		sStr = substr(ed_PwdN.Text,i,1);
		if ((sStr >= '0') && (sStr <= '9')) iNumCnt = 1;
		else if ((sStr >= 'A') && (sStr <= 'Z')) iUppCnt = 1;
		else if ((sStr >= 'a') && (sStr <= 'z')) iLowCnt = 1;
		else iEtcCnt = 1;
	}
	//2종류 이상 조합인지
	if ((iNumCnt + iUppCnt + iLowCnt + iEtcCnt) < 2)
	{
		ed_PwdN.SetFocus();
		return "영자/대문자/소문자/특수문자를 조합하여 생성하십시요.";
	}
	else if ((iNumCnt + iUppCnt + iLowCnt + iEtcCnt) = 2)
	{		
		if (length(trim(ed_PwdN.Text)) < 10)
		{
			ed_PwdN.SetFocus();
			return "2종류 조합인 경우 10자리 이상으로 생성하십시요.";
		}
	}
*/
	
	//단방향 암호화 DB에서 decode...
	ds_lnputPw.clearData();
	//ds_OutputPw.ClearData();
	ds_lnputPw.addRow();
	
	ds_lnputPw.setColumn(0, "PASSWORD", gfn_trim(ed_Pwd.value));
	ds_lnputPw.setColumn(0, "NEWPASSWORD", gfn_trim(ed_PwdN.value));
	
	// 파라미터셋팅
	//action 정보 초기화 
	fsp_clear(this); 
    // 서버에서 조회할 정보 추가 
	fsp_addSearch(this, "fm/fms:FMS00070E_S002");
	// 서버 호출 
	http.Sync = true;
    fsp_callService(this,"","", "ds_lnputPw=ds_lnputPw","ds_OutputPw=ds_OutputPw","","");		// 서비스 호출 
    http.Sync = false;
	//현 로그인 ID와 동일 여부 김장욱 주석
	//if (Trim(ed_PwdN.Text) == ds_list.GetColumn(ds_list.currow,"USERID"))
	//if (ds_OutputPw.GetColumn(0, "NEWPASSWORD") == ds_list.GetColumn(ds_list.currow,"USERID"))
	//{
	//	ed_PwdN.SetFocus();
	//	return "현 사용자 ID와 동일합니다.";
	//}
	//현비번 확인
	//if (ed_Pwd.Text != ds_list.GetColumn(ds_list.currow,"BEFORE_PWD"))
	if (ds_OutputPw.getColumn(0, "PASSWORD") != ds_list.getColumn(ds_list.rowposition,"BEFORE_PWD"))
	{
		ed_Pwd.setFocus();
		return "현 비밀번호가 틀립니다.";
	}
	
	//현비번과 동일 여부
	//if (Trim(ed_PwdN.Text) == ds_list.GetColumn(ds_list.currow,"BEFORE_PWD"))
//alert(ds_OutputPw.GetColumn(0, "NEWPASSWORD"));
//alert(ds_list.GetColumn(ds_list.currow,"BEFORE_PWD"));

	if (ds_OutputPw.getColumn(0, "NEWPASSWORD") == ds_list.getColumn(ds_list.rowposition,"BEFORE_PWD"))
	{
		ed_PwdN.setFocus();
		return "현 비밀번호와 동일합니다.";
	}
	//기존에 사용했던 비번 여부
	//if (Trim(ed_PwdN.Text) == ds_list.GetColumn(ds_list.currow,"LAST_PWD"))
	if (ds_OutputPw.getColumn(0, "NEWPASSWORD") == ds_list.getColumn(ds_list.rowposition,"LAST_PWD"))
	{
		ed_PwdN.setFocus();
		return "이미 사용했던 비밀번호입니다.";
	}
}

function FMS00070P_OnKeyDown(obj:Form, e:KeyEventInfo)
{
	if (e.keycode == 13)
	{
		if (e.fromreferenceobject == ed_PwdN2)
			fn_save();
		else
			GetNextComponent(null).setFocus();
	}
	else if (e.keycode == 27) fn_Close("N");
}

function ed_PwdN_OnCharChanged(obj:Edit, e:TextChangeEventInfo)
{
	ed_PwdN2.enable = (gfn_length(gfn_trim(e.posttext))> 0);
}

function btn_Save_OnClick(obj:Button, e:ClickEventInfo)
{
	fn_save();
}

function btn_Close_OnClick(obj:Button, e:ClickEventInfo)
{
	fn_Close("N");
}

]]></Script>
  </Form>
</FDL>
