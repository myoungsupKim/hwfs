<?xml version="1.0" encoding="utf-8"?>
<Script type="xscript4.0"><![CDATA[/*================================================================================
 *  프로그램 설명 : 팝업 그리드 선택 
 *  작성일자 : 2007/11/13
 *  버전 : 1.0
 *  변경 이력 
    일자            작성자          비고
    ------------------------------------------------------------
    2007/10/02      TrueinfoTec     최초 작성 
================================================================================*/
/*===============================================================================
*   메시지 코드 선언 
================================================================================*/
var SCCW00001 = "[ ${} ] : 변경된 사항이 없습니다.\n정보를 변경한 후 처리해 주십시오.";
var SCCW00002 = "[${}] 필수입력 항목입니다.\n입력하여 주십시오.";
var SCCW00003 = "[${}] 항목의 값은 중복하여 입력할 수 없습니다.\n다른 값을 입력하여 주십시오.";
var SCCW00004 = "[${}] 항목이 입력될 경우 [${}] 항목은 필수입력입니다.\n입력하여 주십시오.";
var SCCW00005 = "[${}] 항목을 먼저 입력하여 주십시오.";
var SCCW00006 = "조회를 먼저 처리하여 주십시오.";
var SCCW00007 = "[${}]와 동일한 ${}를 선택할 수 없습니다.\n다른 값을 선택하여 주십시오.";
var SCCW00008 = "${}를 먼저 선택하여 주십시오.";
var SCCW00009 = "${}를 '${}'보다 크게 입력하여 주십시오. ";
var SCCW00010 = "${}를 '${}'보다 작게 입력하여 주십시오. ";

var SCCI00001 = "변경된 정보를 저장하시겠습니까?";
var SCCI00002 = "작업 중 입니다.\n화면을 닫으시겠습니까?";
var SCCI00003 = "변경된 정보가 있습니다.\n계속 진행하시겠습니까?";
var SCCI00004 = "${}정보를 삭제하시겠습니까?";

var MAPW00001 = "[${}] ${}의 \n확정계획과 연간금액의 차이가 발생합니다.\n확인하여 주십시오.";
var FSRW00001 = "[${}]\n최소한 한 건 이상 입력되어야 합니다.\n확인하여 주십시오.";
/*===============================================================================
*   상수 선언 
================================================================================*/
var F_SELECT_TXT_OBJ = null;
var F_SELECT_BTN_OBJ = null;
var F_CODE_STR       = "CODE";        // 데이터셋 내의 코드를 나타내는 값 
var F_CODE_NAME_STR  = "CODE_NAME";   // 데이터셋 내의 명칭을 나타내는 값 
var F_RTN_VALUE      = null;
/****************************************************************
 * 서버 호출
 * @param dsObj 표시할 데이터 셋 정보 
 * @param txtObj  선택한 정보를 표시할 입력 Object  
 * @param btnObj  해당 Popup 화면을 띄운 이미지 객체 
 * @param selectStr  현재 선택되어 있는 값 또는 선택하고 싶은 값 배열 
 * @param dispType  코드 값 보여주는 타입 
                    T - 코드 명만 표시 
                    C - 코드만 표시 
                    A - 코드 + 코드명 표ㅣ 
                    기본은 T 
 * @param w  넓이 : -1일 경우 사이즈 자동 계산 
 * @param h 높이 :  -1일 경우 기본 10개를 표시할 사이즈로 처리 
 * @param isRight : 오른쪽 기준으로 표시할지 여부 
 * @return 선택한 코드 배열 값 
***************************************************************/
function gfn_createSelectPopup(dsObj, txtObj, btnObj, selectStr, dispType, w, h, isRight) {
    var nWidth = 0;
    var nHeight = 0;
    var nLeft = 0;
    var nTop = 0;
    
    // 넓이 
    if ( w == null || w < 1 ) {
        w = txtObj.position.width + btnObj.position.width;
    }
    
    nWidth = w;
    if ( isRight ) {
        nLeft = system.clientToScreenX(btnObj, btnObj.position.width) - w;
    } else {
        nLeft = system.clientToScreenX(txtObj, 0);
    }
    
    var tmpH = txtObj.position.height;
    // 높이 
    if ( h == null || h < 1 ) {
        h = 140;
    } 
    nHeight = h;
    
    nTop = system.clientToScreenY(txtObj, 0) + txtObj.position.height;
    
    nLeft = nLeft -2;
    nTop = nTop - 1;

    // 표시 타입 처리 
    if ( gfn_length( dispType )== 0 ) {
        dispType = "T";
    }
    // Dataset 컬럼 확인 
    if ( GetColIndex(dsObj,"_chk")< 0 ) {
        dsObj.addColumn("_chk", "STRING", 1);
	} else {
        // 해당 정보 초기화 
        for ( i = 0; i < dsObj.getRowCount(); i++) {
            dsObj.setColumn(i, "_chk", "0");
        }
	}
	// 선택하고자 하는 값이 있을 경우 
	if ( selectStr != null && gfn_length( selectStr )> 0 ) {
        for ( i = 0; i < gfn_length(selectStr); i++) {
            var r = dsObj.findRow(F_CODE_STR, selectStr[i]);
            if ( r >= 0 ) {
                dsObj.setColumn(r, "_chk", "1");
            }
        }
	}
    // Grid 생성 String 
    var str = "<Contents>";
    str += "<Grid AutoEnter=\"TRUE\" binddataset=\"";
    str += dsObj.name ;
    str += "\" BkColor2=\"default\" BoldHead=\"true\" border=\"none\" " ; 
    str += " AutoScrollBar=\"Vert\" UseSelColor=\"false\" " ; 
    str += " Bottom=\"" + nHeight + "\"";
    str += " Width=\"" + nWidth + "\"";
    str += " Height=\"" + nHeight + "\" Id=\"grd_list\" ColSizing=\"TRUE\" Editable=\"true\" Enable=\"true\" ";
    str += " EndLineColor=\"default\" InputPanel=\"FALSE\" Left=\"0\" LineColor=\"default\" LineType=\"NONE\" ";
    str += " Right=\"" + nWidth +"\" Top=\"0\" AutoFit=\"false\" Visible=\"true\" VLineColor=\"default\">";
    str += " <contents>";
    str += " <format id=\"Default\">";
    str += " <columns> ";
    str += " <col width=\"20\"/>"; // check box 
    
    // code name 표시 부분 사이즈 계산 
    var codeWidth = nWidth - 20;
    if ( dispType == "A" ) {
        str += " <col width=\"30\"/>";
        codeWidth = codeWidth - 30;
    }
    
    str += " <col width=\"" + codeWidth + "\"/>";
    str += " </columns> ";
    str += "	<body> ";
    str += "    <cell col=\"0\" colid=\"_chk\" display=\"checkbox\" edit=\"checkbox\"/>";
    
    if ( dispType == "T") {
        str += "    <cell col=\"1\" colid=\"" + F_CODE_NAME_STR + "\" display=\"text\" edit=\"none\"/>";
    } else if ( dispType == "C") {
        str += "    <cell col=\"1\" colid=\"" + F_CODE_STR + "\" display=\"text\" edit=\"none\"/>";
    } else {
        str += "    <cell col=\"1\" colid=\"" + F_CODE_STR + "\" display=\"text\" edit=\"none\"/>";
        str += "    <cell col=\"2\" colid=\"" + F_CODE_NAME_STR + "\" display=\"text\" edit=\"none\"/>";
    }   
     
    str += "	</body> ";
    str += " </format>";
    str += " </contents>";
    str += " </Grid>";
    str += "</Contents>";    
    
    // 멤버 변수로 
    F_SELECT_TXT_OBJ = txtObj;
    F_SELECT_BTN_OBJ = btnObj;
    
    _gfn_createSelectPopupDiv(str, nWidth, nHeight, nLeft, nTop );
    
    // 값 전달 
    var tmp = F_RTN_VALUE;
    F_RTN_VALUE = null;
    return tmp;
}
/**
 *  팝업 디비전 생성
 **/
function _gfn_createSelectPopupDiv(grdStr, nWidth, nHeight, nLeft, nTop ) {
    var obj = Find("_pDiv_selectPopup");
    
    if ( obj == null ) {
        var arg = 'Border="Flat" BorderColor="#d0d0d0"';
        arg += ' Height=' + nHeight;
        arg += ' Width=' + nWidth ;
        arg += ' OnCloseUp="_pDiv_selectPopup_OnCloseUp" ';
        create("PopupDiv", "_pDiv_selectPopup", arg);
    } else {
        _pDiv_selectPopup.position.width = nWidth;
        _pDiv_selectPopup.position.height = nHeight;
    }
    
    /* Contents은 지원되지 않는 속성입니다.*/ _pDiv_selectPopup.Contents = grdStr;
    _pDiv_selectPopup.trackPopup(nLeft, nTop);
}
/**
*   팝업에서 선택하고 닫힐 경우 
**/
function _pDiv_selectPopup_OnCloseUp(obj,varReturn,bSelOk) {
    var dsObj = eval(_pDiv_selectPopup.grd_list.binddataset);
    
    var str = "";
    var nTot = 0;
    F_RTN_VALUE = new Array();
    
    for ( i = 0; i < dsObj.getRowCount(); i++ ) {
        if ( dsObj.getColumn(i, "_chk") == "1") {
            // 선택했을 경우 
            if ( nTot == 0 ) {
                str = dsObj.getColumn(i, F_CODE_NAME_STR);
            }
            
            F_RTN_VALUE[nTot++] = dsObj.getColumn(i, F_CODE_STR);
        }
    }
    
    if ( nTot > 1 ) {
        str += " 외 " + (nTot-1) + "종";
    }
    
    F_SELECT_TXT_OBJ.value = str;
    
    // 초기화 
    F_SELECT_TXT_OBJ = null;
    F_SELECT_BTN_OBJ = null;
}

/*===============================================================================
*   버튼 및 화면 초기화 처리 
================================================================================*/
/**
*   화면 초기 로드 처리 
*   버튼 처리 순서 : 조회, 입력,삭제,저장,출력,닫기,도움말 
*   버튼 사용 가능 : U    / 불가능 : N 
**/
function gfn_formLoading(formObj, sFormTitle, sUseBtn) {
/*    formObj.title = sFormTitle;
    // 화면명 변경 
    formObj.div_CommBtn.st_MenuName.value = sFormTitle;
    
    var sNewBtnList = sUseBtn;
    // 버튼 처리 
    for(var i=0; i < length(sUseBtn); i++) {
        
    }
    
     //위에서 산출된 기능에 대해 Enable 처리
	if (substr(sNewBtnList,0,1)=="N") formObj.div_CommBtn.btn_search.Visible  = false;  //조회 
	if (substr(sNewBtnList,1,1)=="N") formObj.div_CommBtn.btn_insert.Visible  = false;  //입력
	if (substr(sNewBtnList,2,1)=="N") formObj.div_CommBtn.btn_delete.Visible  = false;  //삭제
	if (substr(sNewBtnList,3,1)=="N") formObj.div_CommBtn.btn_save.Visible = false;  //저장
	if (substr(sNewBtnList,4,1)=="N") formObj.div_CommBtn.btn_print.Visible= false;  //출력
	if (substr(sNewBtnList,5,1)=="N") formObj.div_CommBtn.btn_close.Visible= false;  //닫기
	if (substr(sNewBtnList,6,1)=="N") formObj.div_CommBtn.btn_help.Visible = false;  //도움말
	
	//공통버튼 위치 조정
	var btn_POS  = 971;
	btn_POS = _fn_dispBtn(formObj.div_CommBtn.btn_help, btn_POS);
	btn_POS = _fn_dispBtn(formObj.div_CommBtn.btn_close, btn_POS);
	btn_POS = _fn_dispBtn(formObj.div_CommBtn.btn_print, btn_POS);
	btn_POS = _fn_dispBtn(formObj.div_CommBtn.btn_save, btn_POS);
	btn_POS = _fn_dispBtn(formObj.div_CommBtn.btn_delete, btn_POS);
	btn_POS = _fn_dispBtn(formObj.div_CommBtn.btn_insert, btn_POS);
	btn_POS = _fn_dispBtn(formObj.div_CommBtn.btn_search, btn_POS);
    btn_POS = _fn_dispBtn(formObj.div_CommBtn.img_comBg, btn_POS); */
}
/**
*   화면 초기 로드 처리 
*   버튼 사이즈 계산하여 위치 계산 
**/
function _fn_dispBtn(btnObj, btnPos) {
    var rtnPos = btnPos;
    if( btnObj.visible ) {
        btnObj.position.left = (btnPos - btnObj.position.width);
        rtnPos = (btnPos - btnObj.position.width);
	}
	
	return rtnPos;
}
/**
*   공통적으로 버튼 선택시 처리
**/
function fn_commBtn_OnClick(obj) {
    var fncName = "fn_";
    fncName += gfn_subStr(obj.name, 4);
    eval( fncName + "()");
}
 /*
 ******************************************************************************************
 * 함  수  명   : gfn_isGridNull
 * 입      력   : gridObj = 확인할 그리드 객체 , dsArr = Dataset에서 확인할 Column 목록 
                  labelArr = 해당 컬럼의 명칭 목록 
 * 반      환   : true - null인 경우 / false - not null인 경우 
 * 기      능   : null 여부 확인하기  
 * 작  성  자   : 조은영
 * 작성  일자   : 2007-11-18
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
 function gfn_isGridNull(gridObj, dsArr, labelArr) {
    var dsObj = eval(gridObj.binddataset);
    for( i = 0; i < dsObj.getRowCount(); i++ ) {
        // 컬럼 확인 
        for ( var c = 0; c < gfn_length(dsArr); c++) {
            if ( gfn_isNull(dsObj.getColumn(i, dsArr[c]))) {
                var r= gfn_getColIdx( dsObj, gridObj, dsArr[c] );
                var str = "";
                if ( labelArr == null || gfn_length(labelArr[c])== 0 ) {
                    str = gfn_replace(gridObj.getCellProperty("head", r, "text"), "*", "");
                } else {
                    str = labelArr[c];
                }
                
                // 필수 입력 항목입니다.
                gfn_alert(gfn_msg(SCCW00002, str));
                dsObj.rowposition = i;
                gridObj.setCellPos(r);
                gridObj.setFocus();
                
				return true;
            }   // end if 
        }   // end for 
    }   // end for 
    
    return false;
 }
 
 function gfn_isNullCheck(dataStr, labelStr, focusObj) {
     if ( gfn_isNull(dataStr)) {
        // 필수 입력 항목입니다.
        gfn_alert(gfn_msg(SCCW00002, labelStr));
        if ( focusObj != null ) {
            focusObj.setFocus();
        }
        
        return true;
    }
    
    return false;
 }
 
  /*
 ******************************************************************************************
 * 함  수  명   : gfn_isGridNullByCond
 * 입      력   : gridObj = 확인할 그리드 객체 
                  , condColumn = 조건 컬럼 
                  , dsArr = Dataset에서 확인할 Column 목록 
                  labelArr = 해당 컬럼의 명칭 목록 
 * 반      환   : true - null인 경우 / false - not null인 경우 
 * 기      능   : null 여부 확인하기  
 * 작  성  자   : 조은영
 * 작성  일자   : 2007-11-18
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
 function gfn_isGridNullByCond(gridObj, condColumn, dsArr, labelArr) {
    var dsObj = eval(gridObj.binddataset);
    
    var h = gfn_getColIdx( dsObj, gridObj, condColumn);
    var bodyType = gridObj.getCellProperty("body", h, "displaytype");
    var title = gfn_replace(gridObj.getCellProperty("head", h, "text"), "*", "");
    
    for( i = 0; i < dsObj.getRowCount(); i++ ) {
        if ( ( bodyType != "checkbox" && gfn_length( dsObj.getColumn(i, condColumn) )> 0 )
            || ( bodyType == "checkbox" && dsObj.getColumn(i, condColumn) == "1" ) ) {
            
            // 컬럼 확인 
            for ( var c = 0; c < gfn_length(dsArr); c++) {
                if ( gfn_isNull(dsObj.getColumn(i, dsArr[c]))) {
                    var r= gfn_getColIdx( dsObj, gridObj, dsArr[c] );
                    var str = "";
                    if ( labelArr == null || gfn_length(labelArr[c])== 0 ) {
                        str = gfn_replace(gridObj.getCellProperty("head", r, "text"), "*", "");
                    } else {
                        str = labelArr[c];
                    }
                    
                    var arr = [title, str];
                    // 필수 입력 항목입니다.
                    gfn_alert(gfn_msg(SCCW00004, arr));
                    dsObj.rowposition = i;
                    gridObj.setCellPos(r);
                    gridObj.setFocus();
                    
                    return true;
                }   // end if 
            }   // end for 
            
        }   // end column if     
    }   // end for 
    
    return false;
 }
 /*
 ******************************************************************************************
 * 함  수  명   : gfn_getColIdx
 * 입      력   : dsObj = Dataset객체 , gridObj = 확인할 그리드 객체, dsColNm = Dataset 컬럼 아이디
 * 반      환   : true - null인 경우 / false - not null인 경우 
 * 기      능   : Dataset의 컬럼 아이디에 해당 인덱스 구하기 
 * 작  성  자   : 조은영
 * 작성  일자   : 2007-11-18
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
function gfn_getColIdx( dsObj, gridObj, dsColNm ) {
	return gfn_getColumnCellIdx(gridObj, dsColNm, "Body");	//신규lib로 연결
}
/*
 ******************************************************************************************
 * 함  수  명   : gfn_alert
 * 입      력   : str = 메시지 
 * 반      환   : 없음
 * 기      능   : 메시지 창 띄위기 
 * 작  성  자   : 조은영
 * 작성  일자   : 2007-11-18
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
 */
/*
 ******************************************************************************************
 * 함  수  명   : gfn_gridDupCheck
 * 입      력   : gridObj = 확인할 그리드 객체, row = 현재row, dsColNm = Dataset 컬럼 아이디, labelNm = 명칭 
 * 반      환   : true - 중복인 경우 / false - 중복이 아닐 경우 
 * 기      능   : 중복되지는지 여부 
 * 작  성  자   : 조은영
 * 작성  일자   : 2007-11-18
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
*/
function gfn_gridDupCheck(gridObj, row, dsColNm, labelNm) {
    var dsObj = eval(gridObj.binddataset);
    var str = dsObj.getColumn(row, dsColNm);
    
    if ( gfn_length(str)== 0 || dsObj.getRowCount() < 2 ) {
        return false;
    }
    
    for( var i = 0; i < dsObj.getRowCount(); i++) {
        if ( i == row ) {
            continue;
        }
        
        // 같은 경우 
        if ( dsObj.getColumn(i, dsColNm) == str) {
            if ( gfn_length(labelNm)== 0 ) {
                 var r= gfn_getColIdx( dsObj, gridObj, dsColNm );
                labelNm = gfn_replace(gridObj.getCellProperty("head", r, "text"), "*", "");
            }
            
            //  항목의 값은 중복하여 입력할 수 없습니다.\n다른 값을 입력하여 주십시오."
            gfn_alert(gfn_msg(SCCW00003, labelNm));
            dsObj.setColumn(row, dsColNm, "");
            return true;
        }
    }
    
    return false;
}
/*
 ******************************************************************************************
 * 함  수  명   : gfn_isChangeGrid
 * 입      력   : gridObj = 확인할 그리드 객체
 * 반      환   : true - 변경된 경우 / false - 변경 안됐을 경우 
 * 기      능   : 그리드의 데이터 변경 여부 확인 
 * 작  성  자   : 조은영
 * 작성  일자   : 2007-11-18
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
*/
function gfn_isChangeGrid(gridObj, sTitle, flagColumn, isNoMessage) {
    var dsObj = eval(gridObj.binddataset);
    
    return gfn_isChangeDs(dsObj, sTitle, flagColumn, isNoMessage);
}
/*
 ******************************************************************************************
 * 함  수  명   : gfn_isChangeDs
 * 입      력   : dsObj = 확인할 Dataset 객체 
 * 반      환   : true - 변경된 경우 / false - 변경 안됐을 경우 
 * 기      능   : 그리드의 데이터 변경 여부 확인 
 * 작  성  자   : 조은영
 * 작성  일자   : 2007-11-18
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
*/
function gfn_isChangeDs(dsObj, sTitle, flagColumn, isNoMessage) {
    var delCnt = dsObj.getDeletedRowCount();
    if ( delCnt > 0 ) {
        return true;
    }
    
    if ( gfn_length( flagColumn )> 0 ) {
        for ( var i = 0; i < dsObj.getRowCount(); i++ ) {
            var str = dsObj.getColumn(i, flagColumn);
            if ( str == "I" || str == "U" || str == "D") {
                return true;
            }
        }
    } else {
        for ( var i = 0; i < dsObj.getRowCount(); i++ ) {
            var str = GetRowType(dsObj,i);
            if ( str != "normal") {
                return true;
            }
        }
    }
    
    if ( isNoMessage ) {
        // 메시지 띄우지 않음. 
    } else {
        gfn_alert(gfn_msg(SCCW00001, sTitle));
    }    
    return false;
}
/*
 ******************************************************************************************
 * 함  수  명   : gfn_msg
 * 입      력   : msg = 메시지 , arr = 메시지 대체 스트링 또는 배열 
 * 반      환   : 변환된 메시지 
 * 기      능   : 메시지 가져오기  
 * 작  성  자   : 조은영
 * 작성  일자   : 2007-11-18
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
*/
function gfn_msg(msg, arr) {
    // \n 처리 
	msg = gfn_replace(msg,"\\n",String.fromCharCode(10));
	
	if ( arr == null || arr.length == 0 || gfn_length( msg)== 0 ) {
		return msg;
	}
	
	//  ${} 포함 문자열 대체
	var sPos = new Array();
	var oMsg = msg;
	var cnt = 0;
	var p = -1;
	var rMsg = "";
	while(true) {
		p = gfn_indexOf(oMsg, "${}");
		if ( p == -1 ) {
			break;
		}
		rMsg = rMsg + gfn_subStr(oMsg, 0, p );
		if ( arr instanceof Object ) {
			rMsg = rMsg + arr[cnt];
		} else {
			rMsg = rMsg + arr;
		}
		oMsg = gfn_subStr(oMsg, p+3);
		cnt++;
	}
	
	rMsg = rMsg + oMsg;
	return rMsg;
}
/*
 ******************************************************************************************
 * 함  수  명   : gfn_openPopup
 * 입      력   : screenName 화면 경로 ( 뒤에 .xml 포함 )
                  isModal - modal 여부 
                     true : modal / false : modalless
                  w - width 
                  h - height
                  arg - parms ( "key=value" 형태로 Popup화면에 전달할 인자 )
                 x - screen 상의 X 위치    , y - screen 상의 Y 위치  
 * 반      환   : 팝업 화면에서 선택한 값 
 * 기      능   :  팝업 화면 띄우기 
 * 작  성  자   : 조은영
 * 작성  일자   : 2007-11-21
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
*/
function gfn_openPopup(screenName,isModal, w, h, arg, x , y) {
	var leftX = x;
	var topY = y;

    if ( leftX == null || toNumber(leftX) <= 1) {
        leftX = -1;
    }
    
    if ( topY == null || toNumber(topY) <= 1 ) {
        topY = -1;
    }
    
	if ( isModal ) {
		return gfn_dialog("", screenName, arg); 
	} else {
		gfn_dialog("", screenName, arg, null, null, null, null, null, true);
	}		
}
/*
 ******************************************************************************************
 * 함  수  명   : gfn_getCodeName
 * 입      력   : dsObj  - code Dataset obj 
                  codeValue - 해당 코드 값 
                  codeColNm - 코드 컬럼 명 
                  dataColNm - 데이터 컬러명 
 * 반      환   : 팝업 화면에서 선택한 값 
 * 기      능   : 코드값 가져오기  
 * 작  성  자   : 조은영
 * 작성  일자   : 2007-11-28
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
*/
function gfn_getCodeName(dsObj, codeValue, codeColNm, dataColNm) {
    if ( gfn_length( codeColNm  )== 0 ) {
        codeColNm = "CODE";
    }
    
    if ( gfn_length( dataColNm  )== 0 ) {
        dataColNm = "CODE_NAME";
    }
    
    var row = dsObj.findRow(codeColNm, codeValue);
    if ( row == -1 ) {
        return "";
    }
    
    return dsObj.getColumn(row, dataColNm);
}
/*
 ******************************************************************************************
 * 함  수  명   : gfn_clearGrid
 * 입      력   : grdObj = 그리드 객체 
 * 반      환   : 
 * 기      능   : 조회전 Grid 정보초기화 
 * 작  성  자   : 조은영
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
*/
function gfn_clearGrid(grdObj) {
    G_fn_GridClearSortFlag(grdObj, grdObj.getCellCount("head"));
    grdObj.nodataimage = "";
}
/*
 ******************************************************************************************
 * 함  수  명   : gfn_showMsgGrid
 * 입      력   : grdObj = 그리드 객체 
 * 반      환   : 
 * 기      능   : 조회후 Grid 메시지 보여주기 
 * 작  성  자   : 조은영
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
*/
function gfn_showMsgGrid(grdObj) {
    var dsObj = eval(grdObj.binddataset);
    if ( dsObj.getRowCount() <= 0 ) {
        grdObj.nodataimage = gv_noData;	//"img_NoData";
    }
}
/*
 ******************************************************************************************
 * 함  수  명   : ed_popup
 * 입      력   : 
 * 반      환   : 
 * 기      능   : Popup Edit 창 처리 
 * 작  성  자   : 조은영
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
*/
function ed_popup(obj,nChar,bShift,bCtrl, bAlt,LLParam,HLParam, callMethodNm) {
    if( nChar == 46 ) {
        obj.value = "";
        return true;
    } else if ( nChar == 13 ) {
        eval(callMethodNm + "(null)");
    }
}
/*
 ******************************************************************************************
 * 함  수  명   : gfn_openCal
 * 입      력   : btnObj = 버튼 객체 , medObj = 입력 객체 , isMonth = 월 여부  
 * 반      환   : 
 * 기      능   : 달력 띄우기 
 * 작  성  자   : 조은영
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
*/
function gfn_openCal(btnObj, medObj, isMonth) {
    if ( isMonth ) {
        var retDate = gfn_dialog("", "U_SCC::SCC_CALMONTH.xfdl","fa_Date="+medObj.value);
        medObj.value  = retDate;
    } else {
        var retDate = gfn_dialog("", "U_SCC::SCC_CALENDAR.xfdl","fa_Date="+medObj.value);
        medObj.value  = retDate;
    }    
}
/*
 ******************************************************************************************
 * 함  수  명   : gfn_openCalGrid
 * 입      력   : gridObj = grid 객체 , nRow = 현재 row , nCell = 현재 cell, strColName = 현재 컬럼명
                    , isMonth = 월 
 * 반      환   : 
 * 기      능   : 달력 띄우기 
 * 작  성  자   : 조은영
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
*/
function gfn_openCalGrid(gridObj, nRow, nCell, strColName , isMonth) {
    var dsObj = eval(gridObj.binddataset);
    var x = system.clientToScreenX(gridObj, 0); 
    var y = /*  HeadHeight은 지원되지 않는 속성입니다.*/ system.clientToScreenY(gridObj, toNumber(gridObj.HeadHeight)  );
    
    var rowH = /*  RowHeight은 지원되지 않는 속성입니다.*/ toNumber(gridObj.RowHeight);
    y += ( (nRow + 1) * rowH );
    // width 값 계산 
    for ( var i = 0; i < (nCell-1); i++ ) {
        x += toNumber(gridObj.getFormatColProperty(i, "size"));
    }
    /*
    var rect = gridObj.GetCellRect(nRow, nCell);
    var x = gridObj.left + rect[0];
    var y = rect[3] + gridObj.top ;
    */
        
    if ( isMonth ) {
        var retDate = gfn_dialog("", "U_SCC::SCC_CALMONTH.xfdl","fa_Date="+dsObj.getColumn(nRow, strColName));
        dsObj.setColumn(nRow, strColName, retDate);
    } else {
        var retDate = gfn_dialog("", "U_SCC::SCC_CALENDAR.xfdl","fa_Date="+dsObj.getColumn(nRow, strColName));
        dsObj.setColumn(nRow, strColName, retDate);
    }    
}
/*
 ******************************************************************************************
 * 함  수  명   : gfn_isBonbu
 * 입      력   : 
 * 반      환   : 
 * 기      능   : 현재 로그인한 사용자가 본부직원인지 여부 
 * 작  성  자   : 조은영
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
*/
function gfn_isBonbu() {
    return ( g_UserKind == '본부' );
}
function gfn_isBonsa() {
    return ( g_UserKind == '본사' );
//    return true;
}
function gfn_isUpjang() {
    return ( g_UserKind == '사업장' );
//    return true;
}
/*
 ******************************************************************************************
 * 함  수  명   : gfn_calDate
 * 입      력   : rgDate  계산할 기준 일자  nDays  + 몇일 
 sType 
           "B" -> 이전 일자 
            null or "A" -> 이후 일자 
 * 반      환   : 
 * 기      능   : 기준 일자로 부터 몇일 이전 또는 이후 일자 계산
 *  기본은 이후 일자를 계산하나 sType 에 "B" 를 입력하는 경우 
 *  이전 일자로 계산한다. 
 * 작  성  자   : 조은영
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
*/
function gfn_calDate( orgDate, nDays, sType) {
	var nDate = dateTime(orgDate);
	if ( sType == "B" ) {
		nDate = toNumber(nDate) - nDays;
	} else {
		nDate = toNumber(nDate) + nDays ;
	}
	return dateTime(nDate);
}
/*
 ******************************************************************************************
 * 함  수  명   : grd_onHeadClick
 * 반      환   : 
 * 기      능   : 그리드 헤더 선택 
 * 작  성  자   : 조은영
 * 작성  일자   : 
 * ----------------------------------------------------------------------------------------
 * HISTORY    :
 ******************************************************************************************
*/
function grd_onHeadClick(obj, e)
{
    if ( eval(obj.binddataset).getRowCount() == 0 ) {
        return;
    }
    
	if ( nCell == 0 ) {
        gfn_exportExcel(obj, obj.userdata);
        return;
    }
    
	gfn_gridSort(obj, e);//(eval(obj.binddataset), obj, nCell);
}]]></Script>
