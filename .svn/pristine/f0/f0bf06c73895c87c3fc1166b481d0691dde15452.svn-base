<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="rc.sle.yearMenuSalesListDAO">
	<desc>월/년 메뉴 판매현황</desc>

	<statement name="selectList" type="select"><![CDATA[
		    SELECT AA.MENU_CD, AA.OUTLET_CD, KK.OUTLET_NM AS OUTLET_NM, AA.MENU_CLASS, AA.MENU_CLSFI, AA.MENU_SCLASS
				 , AA.MENU_CLASS || AA.MENU_CLSFI || AA.MENU_SCLASS AS MENU_CLSFI_CD, AA.MENU_CLSFI_NM, AA.MENU_NM
				 , UCST
			     , MOON_QTY, MOON_NET_AMT, MOON_DSCN_AMT, MOON_SVC_AMT, MOON_VAT_AMT, MOON_TOT_AMT,  MOON_SUB_RATE, MOON_TOT_RATE, MOON_RATE
                 , YEAR_QTY, YEAR_NET_AMT, YEAR_DSCN_AMT, YEAR_SVC_AMT, YEAR_VAT_AMT, YEAR_TOT_AMT,  YEAR_SUB_RATE, YEAR_TOT_RATE, YEAR_RATE
                 
			  FROM
				( 
			 	  SELECT A.OUTLET_CD, A.MENU_CD,  A.MENU_CLASS, A.MENU_CLSFI, A.MENU_SCLASS, B.MENU_CLSFI_NM,  A.MENU_NM 
			 	  FROM SLE_OUTLET_MENU A
			      INNER  JOIN SLE_MENU_CLSFI B ON B.MENU_CLASS = A.MENU_CLASS
			                                  AND B.MENU_CLSFI  = A.MENU_CLSFI
			                                  AND B.MENU_SCLASS = A.MENU_SCLASS
                    
                    <#if outletCd?has_content >   WHERE  A.OUTLET_CD = :outletCd  </#if>--업장
				  GROUP BY A.OUTLET_CD, A.MENU_CD,  A.MENU_CLASS, A.MENU_CLSFI, A.MENU_SCLASS, B.MENU_CLSFI_NM,  A.MENU_NM 
				   
				)AA
			
				
				INNER JOIN
				(
                	--월별 메뉴 판매 현황
                	SELECT 	OUTLET_CD, MENU_CD, UCST 
                            , SUM(QTY)      AS MOON_QTY,      SUM(NET_AMT) AS MOON_NET_AMT   --NET  값아님 Gross값
                            , SUM(DSCN_AMT) AS MOON_DSCN_AMT, SUM(SVC_AMT) AS MOON_SVC_AMT
                            , SUM(VAT_AMT)  AS MOON_VAT_AMT,  SUM(TOT_AMT) AS MOON_TOT_AMT
			         		, SUM(SUB_RATE) AS MOON_SUB_RATE
			         		, SUM(TOT_RATE) AS MOON_TOT_RATE
			         		, SUM(RATE)     AS MOON_RATE
                             
                            , SUM(YEAR_QTY)      AS YEAR_QTY,     SUM(YEAR_NET_AMT) AS YEAR_NET_AMT, SUM(YEAR_DSCN_AMT) AS YEAR_DSCN_AMT 
                            , SUM(YEAR_SVC_AMT)  AS YEAR_SVC_AMT, SUM(YEAR_VAT_AMT) AS YEAR_VAT_AMT, SUM(YEAR_TOT_AMT)  AS YEAR_TOT_AMT  
                            , SUM(YEAR_SUB_RATE) AS YEAR_SUB_RATE
                            , SUM(YEAR_TOT_RATE) AS YEAR_TOT_RATE
                            , SUM(YEAR_RATE)     AS YEAR_RATE
                    
                    FROM 
                    (
                
			  		SELECT 	A.OUTLET_CD, A.MENU_CD AS MENU_CD, A.UCST, 
                            A.QTY, A.NET_AMT, A.DSCN_AMT, A.SVC_AMT, A.VAT_AMT,  A.TOT_AMT,
			         		    ROUND((A.TOT_AMT / DECODE(B.TOT_AMT,0,NULL,B.TOT_AMT) * 100),2) AS SUB_RATE,
			         		SUM(ROUND((A.TOT_AMT / DECODE(B.TOT_AMT,0,NULL,B.TOT_AMT) * 100), 2)) OVER(ORDER BY A.OUTLET_CD, A.MENU_CD) AS TOT_RATE,
			         		 NVL(ROUND(A.TOT_AMT / DECODE(C.TOT_AMT,0,NULL,C.TOT_AMT) * 100, 2), 0) AS RATE,
                             
                            0     AS YEAR_QTY, 0 AS YEAR_NET_AMT, 0 AS YEAR_DSCN_AMT, 
                            0 AS YEAR_SVC_AMT, 0 AS YEAR_VAT_AMT, 0  AS YEAR_TOT_AMT,  
                            0 AS YEAR_SUB_RATE,
                            0 AS YEAR_TOT_RATE,
                            0 AS YEAR_RATE
                             
                             
					FROM(SELECT OUTLET_CD, MENU_CD  AS MENU_CD, UPRICE   AS UCST
			                 , SUM(QUANTITY) AS QTY,     SUM(AMT)      AS NET_AMT,       SUM(DISCNT_AMT) AS DSCN_AMT
			                 , SUM(SVC_AMT)  AS SVC_AMT, SUM(VAT_AMT)  AS VAT_AMT
			                 , SUM(TOT_SALS) AS TOT_AMT
			            	FROM SLE_SUM_MENU_SALS
			           		WHERE SALES_DATE LIKE substr(:salesYearMonth,1,6) ||'%'
			             	  AND SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
					      	  AND MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
			             	  <#if outletCd?has_content >   AND OUTLET_CD  = :outletCd  </#if>--업장
			                GROUP BY OUTLET_CD, MENU_CD, UPRICE
			          	)A
			           LEFT OUTER JOIN
			            (
			              SELECT OUTLET_CD, SUM(TOT_SALS) AS TOT_AMT FROM SLE_SUM_MENU_SALS
			              	WHERE SALES_DATE LIKE substr(:salesYearMonth,1,6) ||'%'
			              	  AND SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
					      	  AND MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
			              	  <#if outletCd?has_content >   AND OUTLET_CD  = :outletCd  </#if>--업장
                            GROUP BY OUTLET_CD
			            )B ON A.OUTLET_CD = B.OUTLET_CD
			
			          LEFT OUTER JOIN
			            (
			              SELECT OUTLET_CD, MENU_CD, UPRICE  AS UCST, SUM(TOT_SALS) AS TOT_AMT FROM SLE_SUM_MENU_SALS
			              	WHERE SALES_DATE LIKE (substr(:salesYearMonth,1,4)) -1 || Substr(:salesYearMonth,5,4) ||'%'
			              	  AND SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
					      	  AND MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
			                  <#if outletCd?has_content >   AND OUTLET_CD  = :outletCd  </#if>--업장
			                GROUP BY OUTLET_CD, MENU_CD,UPRICE
			
			            )C ON  A.OUTLET_CD = C.OUTLET_CD AND A.MENU_CD = C.MENU_CD AND A.UCST = C.UCST
			            
			            UNION ALL
                        --년별 메뉴 판매 현황
					      
                        SELECT A.OUTLET_CD, A.MENU_CD AS MENU_CD, A.UCST, 
                        	   
                               0 AS QTY, 0 AS NET_AMT, 0 AS DSCN_AMT, 0 AS SVC_AMT, 0 AS VAT_AMT,  0 AS TOT_AMT,	   
                         	   0 AS SUB_RATE,
			         		   0 AS TOT_RATE,
			         		   0 AS RATE,
                        	
                               A.QTY     AS YEAR_QTY,     A.NET_AMT AS YEAR_NET_AMT, A.DSCN_AMT AS YEAR_DSCN_AMT, 
                               A.SVC_AMT AS YEAR_SVC_AMT, A.VAT_AMT AS YEAR_VAT_AMT, A.TOT_AMT  AS YEAR_TOT_AMT,
                               
                                   ROUND((A.TOT_AMT / DECODE(B.TOT_AMT,0,NULL,B.TOT_AMT) * 100),2) AS YEAR_SUB_RATE,
                               SUM(ROUND((A.TOT_AMT / DECODE(B.TOT_AMT,0,NULL,B.TOT_AMT) * 100), 2)) OVER(ORDER BY A.OUTLET_CD, A.MENU_CD) AS YEAR_TOT_RATE,
                                NVL(ROUND(A.TOT_AMT / DECODE(C.TOT_AMT,0,NULL,C.TOT_AMT) * 100, 2), 0) AS YEAR_RATE
                                
                        FROM
                        (
                          SELECT OUTLET_CD, MENU_CD, UPRICE  AS UCST
                               , SUM(QUANTITY) AS QTY,     SUM(AMT)      AS NET_AMT,  SUM(DISCNT_AMT) AS DSCN_AMT
                               , SUM(SVC_AMT)  AS SVC_AMT, SUM(VAT_AMT)  AS VAT_AMT
                               , SUM(TOT_SALS) AS TOT_AMT
                            FROM SLE_SUM_MENU_SALS
                           WHERE SALES_DATE  LIKE substr(:salesYearMonth,1,4) ||'%'
                             AND SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
					      	 AND MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                             <#if outletCd?has_content >   AND OUTLET_CD  = :outletCd  </#if>--업장
                           GROUP BY OUTLET_CD, MENU_CD, UPRICE
                        )A
					
                        LEFT OUTER JOIN
                          (
                          SELECT OUTLET_CD, SUM(TOT_SALS) AS TOT_AMT FROM SLE_SUM_MENU_SALS
                           WHERE SALES_DATE LIKE substr(:salesYearMonth,1,4) ||'%'
                             AND SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
					      	 AND MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                             <#if outletCd?has_content >   AND OUTLET_CD  = :outletCd  </#if>--업장
                             GROUP BY OUTLET_CD
                          )B  ON A.OUTLET_CD = B.OUTLET_CD
					
                        LEFT OUTER JOIN
                          (
                          SELECT OUTLET_CD, MENU_CD, UPRICE AS UCST, SUM(TOT_SALS) AS TOT_AMT FROM SLE_SUM_MENU_SALS
                           WHERE SALES_DATE LIKE (substr(:salesYearMonth,1,4)) -1 ||'%'
                             AND SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
					      	 AND MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
                             <#if outletCd?has_content >   AND OUTLET_CD  = :outletCd  </#if>--업장
                           GROUP BY OUTLET_CD, MENU_CD, UPRICE
                         )C ON  A.OUTLET_CD = C.OUTLET_CD AND A.MENU_CD = C.MENU_CD AND A.UCST = C.UCST
					 ) JJ
                     GROUP BY OUTLET_CD,MENU_CD,UCST
			        )BB ON AA.OUTLET_CD = BB.OUTLET_CD  AND AA.MENU_CD   = BB.MENU_CD
			        
			 		INNER JOIN SLE_OUTLET_MST KK ON KK.OUTLET_CD = AA.OUTLET_CD 
			 		
					INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_NM
				               FROM SLE_OUTLET_MST MST
				              INNER JOIN SCO_UPJANG_V UPJANG ON UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
				                     <#if muCd?has_content> AND UPJANG.MU_CD = :muCd </#if>
				                     <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if> 
		                         <#if outletCd?has_content> WHERE MST.OUTLET_CD = :outletCd </#if>
				            ) OUTLET ON OUTLET.OUTLET_CD = AA.OUTLET_CD
				            
        UNION ALL 
        
        
SELECT S1.MENU_CD, S1.OUTLET_CD, S1.OUTLET_NM, S1.MENU_CLASS, S1.MENU_CLSFI, S1.MENU_SCLASS, S1.MENU_CLSFI_CD, S1.MENU_CLSFI_NM
			, S1.MENU_NM, S1.UCST
      , S1.MOON_QTY, S1.MOON_NET_AMT, S1.MOON_DSCN_AMT, S1.MOON_SVC_AMT, S1.MOON_VAT_AMT, S1.MOON_TOT_AMT
      , S1.MOON_SUB_RATE, S1.MOON_TOT_RATE, S1.MOON_RATE
      , S2.YEAR_QTY, S2.YEAR_NET_AMT, S2.YEAR_DSCN_AMT, S2.YEAR_SVC_AMT, S2.YEAR_VAT_AMT, S2.YEAR_TOT_AMT
      , S2.YEAR_SUB_RATE, S2.YEAR_TOT_RATE, S2.YEAR_RATE
  FROM
        (SELECT D.MENU_CD, D.OUTLET_CD, G.OUTLET_NM, D.MENU_CLASS, F.MENU_CLSFI, F.MENU_SCLASS
                   , D.MENU_CLASS || F.MENU_CLSFI || F.MENU_SCLASS AS MENU_CLSFI_CD
                   , E.MENU_CLSFI_NM, D.MENU_NM, D.MENU_UPRICE AS UCST
                   , SUM(D.QUANTITY) AS MOON_QTY, SUM(D.NET_AMT) AS MOON_NET_AMT, SUM(D.DISCNT_AMT) AS MOON_DSCN_AMT
                   , SUM(D.SVC) AS MOON_SVC_AMT, SUM(D.VAT) AS MOON_VAT_AMT, SUM(D.TOT_AMT) AS MOON_TOT_AMT

                   , ROUND(
                            (
                            NVL(SUM(D.TOT_AMT) / (SELECT DECODE(SUM(TOT_AMT),0,NULL,SUM(TOT_AMT))
                                                FROM SLE_SALS_GOODS
                                               WHERE OUTLET_CD = D.OUTLET_CD
                                                 AND RECEIPT_STATUS = 'E'
                                                 AND SUBSTR(TO_NUMBER(SALES_DATE),1,6) = SUBSTR(:salesYearMonth,1,6)
                                                 )
                                                 ,0)
                            ) * 100
                          ,2) AS MOON_SUB_RATE

                   , ROUND(
                            (
                              NVL(SUM(D.TOT_AMT) / (SELECT  DECODE(SUM(TOT_AMT),0,NULL,SUM(TOT_AMT))
                                                  FROM SLE_SALS_GOODS
                                                 WHERE OUTLET_CD = D.OUTLET_CD
                                                   AND MENU_CD = D.MENU_CD
                                                   AND RECEIPT_STATUS = 'E'
                                                   AND SUBSTR(TO_NUMBER(SALES_DATE),1,6) = SUBSTR(:salesYearMonth,1,6)
                                                 GROUP BY MENU_CD)
                                                 ,0)
                            ) * 100
                          ,2) AS MOON_TOT_RATE

                   , ROUND(
                            (
                            NVL(SUM(D.TOT_AMT) / (SELECT DECODE(SUM(TOT_AMT),0,NULL,SUM(TOT_AMT))
                                                FROM SLE_SALS_GOODS
                                               WHERE OUTLET_CD = D.OUTLET_CD
                                                 AND RECEIPT_STATUS = 'E'
                                                 AND MENU_CD = D.MENU_CD
                                                 AND SUBSTR(TO_NUMBER(SALES_DATE),1,6) = SUBSTR(:salesYearMonth,1,6) - 100 )
                                                 ,0)
                            ) * 100, 0) AS MOON_RATE

            FROM SLE_SALS_GOODS D, SLE_MENU_CLSFI E, SLE_OUTLET_MENU F, SLE_OUTLET_MST G

           WHERE E.MENU_CLASS = D.MENU_CLASS
             AND E.MENU_CLSFI = F.MENU_CLSFI
             AND E.MENU_SCLASS = D.MENU_SMLGRP
             AND F.MENU_CD = D.MENU_CD
             AND G.OUTLET_CD = D.OUTLET_CD
             AND F.OUTLET_CD = D.OUTLET_CD
             AND D.RECEIPT_STATUS = 'E'
             <#if outletCd?has_content> AND D.OUTLET_CD = :outletCd </#if>
             AND SUBSTR(TO_NUMBER(SALES_DATE),1,6) = :salesYearMonth
           GROUP BY  D.MENU_CD, D.OUTLET_CD, G.OUTLET_NM, D.MENU_CLASS, F.MENU_CLSFI, F.MENU_SCLASS
                   , D.MENU_CLASS || F.MENU_CLSFI || F.MENU_SCLASS
                   , E.MENU_CLSFI_NM, D.MENU_NM, D.MENU_UPRICE
        ) S1
				INNER JOIN
        (SELECT D.MENU_CD, D.OUTLET_CD, G.OUTLET_NM, D.MENU_CLASS, F.MENU_CLSFI, F.MENU_SCLASS
                   , D.MENU_CLASS || F.MENU_CLSFI || F.MENU_SCLASS AS MENU_CLSFI_CD
                   , E.MENU_CLSFI_NM, D.MENU_NM, D.MENU_UPRICE AS UCST
                   , SUM(D.QUANTITY) AS YEAR_QTY, SUM(D.NET_AMT) AS YEAR_NET_AMT, SUM(D.DISCNT_AMT) AS YEAR_DSCN_AMT, SUM(D.SVC)YEAR_SVC_AMT
                   , SUM(D.VAT) AS YEAR_VAT_AMT , SUM(D.TOT_AMT)  AS YEAR_TOT_AMT

                   , ROUND(
                            (
                              NVL(SUM(D.TOT_AMT) / (SELECT  DECODE(SUM(TOT_AMT),0,NULL,SUM(TOT_AMT))
                                                  FROM SLE_SALS_GOODS
                                                 WHERE OUTLET_CD = D.OUTLET_CD
                                                   AND MENU_CD = D.MENU_CD
                                                   AND RECEIPT_STATUS = 'E'
                                                   AND SUBSTR(TO_NUMBER(SALES_DATE),1,4) = SUBSTR(:salesYearMonth,1,4)
                                                 GROUP BY MENU_CD)
                                                 ,0)
                            ) * 100
                          ,2) AS YEAR_TOT_RATE

                   , ROUND(
                            (
                            NVL(SUM(D.TOT_AMT) / (SELECT DECODE(SUM(TOT_AMT),0,NULL,SUM(TOT_AMT))
                                                FROM SLE_SALS_GOODS
                                               WHERE OUTLET_CD = D.OUTLET_CD
                                                 AND RECEIPT_STATUS = 'E'
                                                 AND SUBSTR(TO_NUMBER(SALES_DATE),1,4) = SUBSTR(:salesYearMonth,1,4)
                                                 )
                                                 ,0)
                            ) * 100
                          ,2) AS YEAR_SUB_RATE

                   , ROUND(
                            (
                              NVL(SUM(D.TOT_AMT) / (SELECT  DECODE(SUM(TOT_AMT),0,NULL,SUM(TOT_AMT))
                                                  FROM SLE_SALS_GOODS
                                                 WHERE OUTLET_CD = D.OUTLET_CD
                                                   AND RECEIPT_STATUS = 'E'
                                                   AND MENU_CD = D.MENU_CD
                                                   AND SUBSTR(TO_NUMBER(SALES_DATE),1,4) = SUBSTR(:salesYearMonth,1,4) - 1
                                                    )
                                                 ,0)
                            ) * 100
                          ,2 ) AS YEAR_RATE

            FROM SLE_SALS_GOODS D, SLE_MENU_CLSFI E, SLE_OUTLET_MENU F, SLE_OUTLET_MST G

           WHERE E.MENU_CLASS = D.MENU_CLASS
             AND E.MENU_CLSFI = F.MENU_CLSFI
             AND E.MENU_SCLASS = D.MENU_SMLGRP
             AND F.MENU_CD = D.MENU_CD
             AND G.OUTLET_CD = D.OUTLET_CD
             AND F.OUTLET_CD = D.OUTLET_CD
             AND D.RECEIPT_STATUS = 'E'
             <#if outletCd?has_content> AND D.OUTLET_CD = :outletCd </#if>
             AND SUBSTR(TO_NUMBER(SALES_DATE),1,4) = SUBSTR(:salesYearMonth,1,4)
           GROUP BY  D.MENU_CD, D.OUTLET_CD, G.OUTLET_NM, D.MENU_CLASS, F.MENU_CLSFI, F.MENU_SCLASS
                   , D.MENU_CLASS || F.MENU_CLSFI || F.MENU_SCLASS
                   , E.MENU_CLSFI_NM, D.MENU_NM, D.MENU_UPRICE
        ) S2 ON S2.MENU_CD = S1.MENU_CD
                AND S2.OUTLET_CD = S1.OUTLET_CD
                AND S2.OUTLET_NM = S1.OUTLET_NM
                AND S2.MENU_CLASS = S1.MENU_CLASS
                AND S2.MENU_CLSFI = S1.MENU_CLSFI
                AND S2.MENU_SCLASS = S1.MENU_SCLASS
                AND S2.MENU_CLSFI_CD = S1.MENU_CLSFI_CD
                AND S2.MENU_CLSFI_NM = S1.MENU_CLSFI_NM
                AND S2.MENU_NM = S1.MENU_NM
                AND S2.UCST = S1.UCST				            
			 		
			    WHERE MOON_TOT_AMT <> 0 OR YEAR_TOT_AMT <> 0
            	ORDER BY OUTLET_CD, MENU_CD
            	

				
		]]></statement>

</hqml>
