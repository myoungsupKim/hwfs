<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="rc.sle.paySalesListDAO">
	<desc>결제 수단별 현황</desc>

	<statement name="selectList" type="select"><![CDATA[
		/*+ com.hwfs.rc.sle.dao.paySalesListDAO.selectList */

			SELECT :frSalesDt || ' ~ ' || :toSalesDt AS SALES_DATE
				   ,LOC_CD, MAX(LOC_NM) AS LOC_NM,
			       SUM(SELL_AMT) AS SELL_AMT, SUM(SVC)  AS SVC , SUM(VAT)      AS VAT,  SUM(PAYM_AMT) AS PAYM_AMT,
			       SUM(CASH)     AS CASH,     SUM(CARD) AS CARD, SUM(CRED)     AS CRED, 
			       SUM(SUNSU)    AS SUNSU,    SUM(GODS) AS GODS, SUM(ETEC)     AS ETEC 
			  FROM 
			  ( 
			  SELECT SALES_DT, LOC_CD, LOC_NM, POS_NO, RCPT_NO, 
			         SELL_AMT, SVC, VAT, PAYM_AMT, 
			         CASH, CARD, CRED, SUNSU, GODS, ETEC 
			    FROM 
			    (
			      --현금
			      SELECT MST.SALES_DATE AS SALES_DT, OUTLET.OUTLET_CD AS LOC_CD, MAX(OUTLET.OUTLET_NM) AS LOC_NM,  
			             MST.POS_NUM AS POS_NO, MST.RECEIPT_NUM AS RCPT_NO,
			             SUM(NVL(NET_AMT,0) + NVL(TXFR_AMT,0) + NVL(NOTAX_AMT,0)) AS SELL_AMT, 
			             SUM(NVL(SVC,0)) AS SVC, SUM(NVL(VAT,0)) AS VAT, SUM(NVL(PAY_AMT,0)) AS PAYM_AMT, 
			             SUM(PAY_AMT) AS CASH, 0 AS CARD, 0 AS CRED, 0 AS SUNSU, 0 AS GODS, 0 AS ETEC
			        FROM SLE_SALS_OUTLET MST
                    INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
		                          FROM   SLE_OUTLET_MST MST
		                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
		                                        <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
		                                        <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
		             			 ) OUTLET ON OUTLET.OUTLET_CD =  DECODE( :outletSet , 'SALE' , MST.OUTLET_CD, MST.ATTACH_OUTLET_CD )
			       
		            INNER JOIN (
						SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM ,NVL(INFO.TABLE_CD,'00') AS TABLE_CD
						FROM SLE_SALS_INFO INFO
						LEFT OUTER JOIN (
						      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
						      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
						      <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
						      ORDER BY  OUTLET_CD, POS_NUM
						) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
						WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
						  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
						  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
		     			  <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)			 
						  AND INFO.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt
						  <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
						  <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
						
    				)  INFO ON INFO.OUTLET_CD   = MST.OUTLET_CD 
    				       AND INFO.SALES_DATE  = MST.SALES_DATE
    				       AND INFO.RECEIPT_NUM = MST.RECEIPT_NUM	  
		            
			       WHERE 1=1			       	
			       	 <#if internalYn == 'Y' > AND MST.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
		             <#if internalYn == 'N' > AND MST.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
			         AND MST.SALS_CLASS     = '0'		  --0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
			         AND MST.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
			         AND MST.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt  --검색기간
			         AND MST.PAY_CD IN (SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0080' )  --현금지불수단목록
                     <#if outletCd?has_content > AND DECODE( :outletSet , 'SALE' , MST.OUTLET_CD, MST.ATTACH_OUTLET_CD ) = :outletCd </#if>
			       GROUP BY MST.SALES_DATE, OUTLET.OUTLET_CD, MST.POS_NUM, MST.RECEIPT_NUM   
					
			      UNION ALL
			       
			      --카드
			      SELECT MST.SALES_DATE AS SALES_DT, OUTLET.OUTLET_CD AS LOC_CD, MAX(OUTLET.OUTLET_NM) AS LOC_NM,  
			      		 MST.POS_NUM AS POS_NO, MST.RECEIPT_NUM AS RCPT_NO,
			             SUM(NVL(NET_AMT,0) + NVL(TXFR_AMT,0) + NVL(NOTAX_AMT,0)) AS SELL_AMT, 
			             SUM(NVL(SVC,0)) AS SVC, SUM(NVL(VAT,0)) AS VAT, SUM(NVL(PAY_AMT,0)) AS PAYM_AMT, 
			             0 AS CASH, SUM(PAY_AMT) AS CARD, 0 AS CRED, 0 AS SUNSU, 0 AS GODS, 0 AS ETEC
			        FROM SLE_SALS_OUTLET  MST
                    INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
		                          FROM   SLE_OUTLET_MST MST
		                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
		                                        <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
		                                        <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
		             			 ) OUTLET ON OUTLET.OUTLET_CD =  DECODE( :outletSet , 'SALE' , MST.OUTLET_CD, MST.ATTACH_OUTLET_CD )
			       
		            INNER JOIN (
						SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM ,NVL(INFO.TABLE_CD,'00') AS TABLE_CD
						FROM SLE_SALS_INFO INFO
						LEFT OUTER JOIN (
						      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
						      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
						      <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
						      ORDER BY  OUTLET_CD, POS_NUM
						) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
						WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
						  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
						  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
		                  <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
						  AND INFO.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt
						  <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
						  <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
						
    				)  INFO ON INFO.OUTLET_CD   = MST.OUTLET_CD 
    				       AND INFO.SALES_DATE  = MST.SALES_DATE
    				       AND INFO.RECEIPT_NUM = MST.RECEIPT_NUM	  
		            
			       WHERE 1=1			       	
			       	 <#if internalYn == 'Y' > AND MST.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
		             <#if internalYn == 'N' > AND MST.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
			         AND MST.SALS_CLASS     = '0'		    --0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
			         AND MST.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
			         AND MST.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt  --검색기간
			         AND MST.PAY_CD IN (SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0081' )  --카드지불수단목록
			         <#if outletCd?has_content > AND DECODE( :outletSet , 'SALE' , MST.OUTLET_CD, MST.ATTACH_OUTLET_CD ) = :outletCd </#if>
			       GROUP BY MST.SALES_DATE, OUTLET.OUTLET_CD, MST.POS_NUM, MST.RECEIPT_NUM     
					
			      UNION ALL
			       
			      --후불
			      SELECT MST.SALES_DATE AS SALES_DT, OUTLET.OUTLET_CD AS LOC_CD, MAX(OUTLET.OUTLET_NM) AS LOC_NM,  
			             MST.POS_NUM AS POS_NO, MST.RECEIPT_NUM AS RCPT_NO,
			             SUM(NVL(NET_AMT,0) + NVL(TXFR_AMT,0) + NVL(NOTAX_AMT,0)) AS SELL_AMT, 
			             SUM(NVL(SVC,0)) AS SVC, SUM(NVL(VAT,0)) AS VAT, SUM(NVL(PAY_AMT,0)) AS PAYM_AMT, 
			             0 AS CASH, 0 AS CARD, SUM(PAY_AMT) AS CRED, 0 AS SUNSU, 0 AS GODS, 0 AS ETEC
			        FROM SLE_SALS_OUTLET  MST
                    INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
		                          FROM   SLE_OUTLET_MST MST
		                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
		                                        <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
		                                        <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
		             			 ) OUTLET ON OUTLET.OUTLET_CD =  DECODE( :outletSet , 'SALE' , MST.OUTLET_CD, MST.ATTACH_OUTLET_CD )
			       
		            INNER JOIN (
						SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM ,NVL(INFO.TABLE_CD,'00') AS TABLE_CD
						FROM SLE_SALS_INFO INFO
						LEFT OUTER JOIN (
						      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
						      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
						      <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
						      ORDER BY  OUTLET_CD, POS_NUM
						) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
						WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
						  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
						  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
		     			  <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
						  AND INFO.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt
						  <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
						  <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
						
    				)  INFO ON INFO.OUTLET_CD   = MST.OUTLET_CD 
    				       AND INFO.SALES_DATE  = MST.SALES_DATE
    				       AND INFO.RECEIPT_NUM = MST.RECEIPT_NUM	  
		            
			       WHERE 1=1
			         <#if internalYn == 'Y' > AND MST.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
		     	     <#if internalYn == 'N' > AND MST.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
			         AND MST.SALS_CLASS     = '0'		    --0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
			         AND MST.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
			         AND MST.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt  --검색기간
			         AND MST.PAY_CD IN (SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0082' )  --후불지불수단목록
			         <#if outletCd?has_content > AND DECODE( :outletSet , 'SALE' , MST.OUTLET_CD, MST.ATTACH_OUTLET_CD ) = :outletCd </#if>
			       GROUP BY MST.SALES_DATE, OUTLET.OUTLET_CD, MST.POS_NUM, MST.RECEIPT_NUM    
					
			      UNION ALL
			       
			      --선수금대체
			      SELECT MST.SALES_DATE AS SALES_DT, OUTLET.OUTLET_CD AS LOC_CD, MAX(OUTLET.OUTLET_NM) AS LOC_NM,  
			             MST.POS_NUM AS POS_NO, MST.RECEIPT_NUM AS RCPT_NO,
			             SUM(NVL(NET_AMT,0) + NVL(TXFR_AMT,0) + NVL(NOTAX_AMT,0)) AS SELL_AMT, 
			             SUM(NVL(SVC,0)) AS SVC, SUM(NVL(VAT,0)) AS VAT, SUM(NVL(PAY_AMT,0)) AS PAYM_AMT, 
			             0 AS CASH, 0 AS CARD, 0 AS CRED, SUM(PAY_AMT) AS SUNSU, 0 AS GODS, 0 AS ETEC
			        FROM SLE_SALS_OUTLET  MST
                    INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
		                          FROM   SLE_OUTLET_MST MST
		                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
		                                        <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
		                                        <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
		             			 ) OUTLET ON OUTLET.OUTLET_CD =  DECODE( :outletSet , 'SALE' , MST.OUTLET_CD, MST.ATTACH_OUTLET_CD )
			       
		            INNER JOIN (
						SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM ,NVL(INFO.TABLE_CD,'00') AS TABLE_CD
						FROM SLE_SALS_INFO INFO
						LEFT OUTER JOIN (
						      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
						      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
						      <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
						      ORDER BY  OUTLET_CD, POS_NUM
						) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
						WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
						  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
						  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
		     			  <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
						  AND INFO.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt
						  <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
						  <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
						
    				)  INFO ON INFO.OUTLET_CD   = MST.OUTLET_CD 
    				       AND INFO.SALES_DATE  = MST.SALES_DATE
    				       AND INFO.RECEIPT_NUM = MST.RECEIPT_NUM	  
			       
			       WHERE 1=1
			         <#if internalYn == 'Y' > AND MST.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
		     	     <#if internalYn == 'N' > AND MST.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)			 
						  
			         AND MST.SALS_CLASS     = '0'		  --0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
			         AND MST.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
			         AND MST.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt  --검색기간
			         AND MST.PAY_CD IN (SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0083' )  --선수금대체지불수단목록
			         <#if outletCd?has_content > AND DECODE( :outletSet , 'SALE' , MST.OUTLET_CD, MST.ATTACH_OUTLET_CD ) = :outletCd </#if>
			       GROUP BY MST.SALES_DATE, OUTLET.OUTLET_CD, MST.POS_NUM, MST.RECEIPT_NUM    
					
			      UNION ALL
			       
			      --상품권
			      SELECT MST.SALES_DATE AS SALES_DT, OUTLET.OUTLET_CD AS LOC_CD, MAX(OUTLET.OUTLET_NM) AS LOC_NM,  
			             MST.POS_NUM AS POS_NO, MST.RECEIPT_NUM AS RCPT_NO,
			             SUM(NVL(NET_AMT,0) + NVL(TXFR_AMT,0) + NVL(NOTAX_AMT,0)) AS SELL_AMT, 
			             SUM(NVL(SVC,0)) AS SVC, SUM(NVL(VAT,0)) AS VAT, SUM(NVL(PAY_AMT,0)) AS PAYM_AMT, 
			             0 AS CASH, 0 AS CARD, 0 AS CRED, 0 AS SUNSU, SUM(PAY_AMT) AS GODS, 0 AS ETEC
			        FROM SLE_SALS_OUTLET  MST
                    INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
		                          FROM   SLE_OUTLET_MST MST
		                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
		                                        <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
		                                        <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
		             			 ) OUTLET ON OUTLET.OUTLET_CD =  DECODE( :outletSet , 'SALE' , MST.OUTLET_CD, MST.ATTACH_OUTLET_CD )
			       
		            INNER JOIN (
						SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM ,NVL(INFO.TABLE_CD,'00') AS TABLE_CD
						FROM SLE_SALS_INFO INFO
						LEFT OUTER JOIN (
						      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
						      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
						      <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
						      ORDER BY  OUTLET_CD, POS_NUM
						) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
						WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
						  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
						  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
		     			  <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
						  AND INFO.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt
						  <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
						  <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
						
    				)  INFO ON INFO.OUTLET_CD   = MST.OUTLET_CD 
    				       AND INFO.SALES_DATE  = MST.SALES_DATE
    				       AND INFO.RECEIPT_NUM = MST.RECEIPT_NUM	  
		            
			       WHERE 1=1
			         <#if internalYn == 'Y' > AND MST.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
		     		 <#if internalYn == 'N' > AND MST.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
			         AND MST.SALS_CLASS     = '0'		  --0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
			         AND MST.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
			         AND MST.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt  --검색기간
			         AND MST.PAY_CD IN (SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0084' )  --상품권지불수단목록
			         <#if outletCd?has_content > AND DECODE( :outletSet , 'SALE' , MST.OUTLET_CD, MST.ATTACH_OUTLET_CD ) = :outletCd </#if>
			       GROUP BY MST.SALES_DATE, OUTLET.OUTLET_CD, MST.POS_NUM, MST.RECEIPT_NUM   
						
			      UNION ALL
			       
			      --기타
			      SELECT MST.SALES_DATE AS SALES_DT, OUTLET.OUTLET_CD AS LOC_CD, MAX(OUTLET.OUTLET_NM) AS LOC_NM,   
			             MST.POS_NUM AS POS_NO, MST.RECEIPT_NUM AS RCPT_NO,
			             SUM(NVL(NET_AMT,0) + NVL(TXFR_AMT,0) + NVL(NOTAX_AMT,0)) AS SELL_AMT, 
			             SUM(NVL(SVC,0)) AS SVC, SUM(NVL(VAT,0)) AS VAT, SUM(NVL(PAY_AMT,0)) AS PAYM_AMT, 
			             0 AS CASH, 0 AS CARD, 0 AS CRED, 0 AS SUNSU, 0 AS GODS, SUM(PAY_AMT) AS ETEC
			        --FROM SLE_SALS_OUTLET  MST
			       FROM SLE_SALS_PAY  MST  --내부이용 추가하기 위해 변경 
			        
                    INNER JOIN (SELECT MST.OUTLET_CD, MST.OUTLET_TYPE, MST.OUTLET_NM 
		                          FROM   SLE_OUTLET_MST MST
		                          INNER JOIN  SCO_UPJANG_V   UPJANG ON  UPJANG.UPJANG = TO_NUMBER(MST.OUTLET_CD) 
		                                        <#if muCd?has_content> AND  UPJANG.MU_CD = :muCd </#if>
		                                        <#if tmCd?has_content> AND  UPJANG.TM_CD = :tmCd </#if>
		             			 ) OUTLET ON OUTLET.OUTLET_CD =  MST.OUTLET_CD 
		             			 
		            
		            INNER JOIN (
						SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM ,NVL(INFO.TABLE_CD,'00') AS TABLE_CD
						FROM SLE_SALS_INFO INFO
						LEFT OUTER JOIN (
						      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
						      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
						      <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
						      ORDER BY  OUTLET_CD, POS_NUM
						) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
						WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
						  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
						  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
		     			  <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)			 						  
						  AND INFO.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt
						  <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
						  <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
						
    				)  INFO ON INFO.OUTLET_CD   = MST.OUTLET_CD 
    				       AND INFO.SALES_DATE  = MST.SALES_DATE
    				       AND INFO.RECEIPT_NUM = MST.RECEIPT_NUM	  
		            
			       WHERE 1=1                        	                                     
      			     --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
		             AND MST.SELL_YN  = DECODE(MST.RECEIPT_STATUS ,'E','N','Y')				--매출 여부
					 --종료			                       
			         <#if internalYn == 'Y' > AND MST.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
		     		 <#if internalYn == 'N' > AND MST.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
			         AND MST.SALS_CLASS     = '0'		  --0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
			         AND MST.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
			         AND MST.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt  --검색기간
			         		         
			         AND <#if internalYn == 'Y' > ( </#if>	
			         MST.PAY_CD NOT IN (SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0080'
			         					UNION ALL
			                            SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0081' 
			                            UNION ALL
			                            SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0082'
			                            UNION ALL
			                            SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0083'
			                            UNION ALL
			                            SELECT CODE FROM SCC_COMMON_CODE  WHERE  GROUP_CODE ='SLE_0084'
			         					)  --기타 지불은 모두 아닌것
			         <#if internalYn == 'Y' > OR MST.PAY_CD = '91')  </#if>
			         <#if outletCd?has_content > AND  MST.OUTLET_CD  = :outletCd </#if>
			         
			       GROUP BY MST.SALES_DATE, OUTLET.OUTLET_CD, MST.POS_NUM, MST.RECEIPT_NUM    
			    ) B
			  ) DUAL
			  
			  GROUP BY LOC_CD
			  ORDER BY LOC_CD		

		]]></statement>

	<statement name="selectListDetail" type="select"><![CDATA[
		/*+ com.hwfs.rc.sle.dao.paySalesListDAO.selectListDetail */
			SELECT :frSalesDt || ' ~ ' || :toSalesDt AS SALES_DATE
				   ,PAY.OUTLET_CD, MAX(LOC.OUTLET_NM) AS OUTLET_NM,
                   PAY.PAY_CD, PAY.PAY_NM, 
            	   COUNT(PAY_CD) AS CNT, SUM(NOTAX_AMT) AS NOTAX_AMT, SUM(TXFR_AMT) AS TXFT_AMT, SUM(NET_AMT) AS NET_AMT, 
			       SUM(SVC) AS SVC, SUM(VAT) AS VAT, SUM(PAY_AMT) AS PAY_AMT
			  FROM SLE_SALS_PAY PAY
              INNER JOIN ( SELECT OUTLET_CD, OUTLET_NM FROM SLE_OUTLET_MST ) LOC ON  LOC.OUTLET_CD  = PAY.OUTLET_CD
              
              INNER JOIN (
						SELECT INFO.OUTLET_CD, INFO.SALES_DATE, INFO.RECEIPT_NUM ,NVL(INFO.TABLE_CD,'00') AS TABLE_CD
						FROM SLE_SALS_INFO INFO
						LEFT OUTER JOIN (
						      SELECT OUTLET_CD, POS_NUM, CODE_NAME FROM SLE_POS_SET POS
						      INNER JOIN SCC_COMMON_CODE GRP ON GRP.GROUP_CODE = 'SLE_0111' AND GRP.CODE = POS.OUTLET_SUB_CD
						      <#if outletSub?has_content> WHERE GRP.CODE = :outletSub </#if>  --01:다채움 02:마루 03:나무 
						      ORDER BY  OUTLET_CD, POS_NUM
						) POS ON POS.OUTLET_CD = INFO.OUTLET_CD AND POS.POS_NUM = INFO.POS_NUM
						WHERE INFO.SALS_CLASS     = '0'	--0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
						  AND INFO.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
						  <#if internalYn == 'Y' > AND INFO.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
		     			  <#if internalYn == 'N' > AND INFO.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
						  AND INFO.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt
						  <#if outletCd?has_content> AND INFO.OUTLET_CD = :outletCd </#if>
						  <#if outletSub?has_content> AND INFO.POS_NUM  = POS.POS_NUM  </#if>
						
    				)  INFO ON INFO.OUTLET_CD = PAY.OUTLET_CD 
    				       AND INFO.SALES_DATE = PAY.SALES_DATE
    				       AND INFO.RECEIPT_NUM = PAY.RECEIPT_NUM	  
			    				       		 
			 WHERE 1=1                         	                                     
    		   --시작 : 2017.03.02 현대카드M포인트 제휴 추가로 매출여부 조건 변경 처리자:김호석 CH201702_00668
         	   AND PAY.SELL_YN  = DECODE(PAY.RECEIPT_STATUS ,'E','N','Y')				--매출 여부
			   --종료			                       
			   <#if internalYn == 'Y' > AND PAY.RECEIPT_STATUS IN ('Q','R','E') </#if> --영수증 상태 Q:정상 R:반품(-)
   			   <#if internalYn == 'N' > AND PAY.RECEIPT_STATUS IN ('Q','R') </#if> --영수증 상태 Q:정상 R:반품(-)
               AND PAY.SALS_CLASS     = '0'				                            --0:정상매출,1:쿠폰(상품권)대행,2:선수금수납,3:후불정산,4:영업곤리,5:미포스
               AND PAY.MODIFY_STATUS  IN ('0','1') --매출조정 0:정상 , 1:조정
               AND PAY.SALES_DATE BETWEEN :frSalesDt AND :toSalesDt			        --매출일자
               <#if outletCd?has_content > AND PAY.OUTLET_CD = :outletCd </#if> --업장
               <#if sellYn?has_content >   --AND PAY.SELL_YN   = 'Y'           </#if> --매출여부
               <#if salsYn?has_content >   AND PAY.SALS_YN   = 'Y'           </#if> --판매여부  
			GROUP BY PAY.OUTLET_CD, PAY.PAY_CD, PAY.PAY_NM
			ORDER BY PAY.OUTLET_CD, PAY.PAY_CD, PAY.PAY_NM 
			
		]]></statement>
</hqml>
