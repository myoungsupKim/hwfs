<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[식재료율실적예상(관리자용)-일별]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
SELECT BASE_DD
     , WEEK_NAME  /* 요일 */
     , WE_COLOR   /* 요일색상 */
     , SP_AMT
     , SR_AMT
     , SS_AMT
<isEqual col="PRICE_TYPE" value="1">
     , MP_AMT
     , MR_AMT
</isEqual>
<isEqual col="PRICE_TYPE" value="2">
     , NVL(MP_AMT / (MAP_MARGIN_RATE_MGMT_FUN(#UPJANG#,#START_DATE#) / 100),0) AS MP_AMT
     , NVL(MR_AMT / (MAP_MARGIN_RATE_MGMT_FUN(#UPJANG#,#START_DATE#) / 100),0) AS MR_AMT
</isEqual>
, MS_AMT
<isEqual col="PRICE_TYPE" value="1">
     , P_RATE
     , R_RATE
</isEqual>
<isEqual col="PRICE_TYPE" value="2">
     , NVL(ROUND(DECODE(SP_AMT, 0, 0, (MP_AMT / (MAP_MARGIN_RATE_MGMT_FUN(#UPJANG#,#START_DATE#) / 100)) / SP_AMT * 100), 2),0) AS P_RATE   /* 식재료율 - 계획 */
     , NVL(ROUND(DECODE(SR_AMT, 0, 0, (MR_AMT / (MAP_MARGIN_RATE_MGMT_FUN(#UPJANG#,#START_DATE#) / 100)) / SR_AMT * 100), 2),0) AS R_RATE   /* 식재료율 - 추정 */
</isEqual>
     , S_RATE
     , SS_AMT - SP_AMT AS SDP_VAL                                  /* 매출액 - 계획대비 - 차이 */
     , DECODE(SP_AMT, 0, 0, SS_AMT / SP_AMT * 100) AS SDP_RATE     /* 매출액 - 계획대비 - 비율 */
     , SS_AMT - SR_AMT AS SDR_VAL                                  /* 매출액 - 추정대비 - 차이 */     
     , DECODE(SR_AMT, 0, 0, SS_AMT / SR_AMT * 100) AS SDR_RATE     /* 매출액 - 추정대비 - 비율 */
     , MS_AMT - MP_AMT AS MDP_VAL                                  /* 식재료비 - 계획대비 - 차이 */
     , DECODE(MP_AMT, 0, 0, MS_AMT / MP_AMT * 100) AS MDP_RATE     /* 식재료비 - 계획대비 - 비율 */
     , MS_AMT - MR_AMT AS MDR_VAL                                  /* 식재료비 - 추정대비 - 차이 */
     , DECODE(MR_AMT, 0, 0, MS_AMT / MR_AMT * 100) AS MDR_RATE     /* 식재료비 - 추정대비 - 비율 */
     , S_RATE - P_RATE AS RDP_RATE                                 /* 식재료비율 - 계획대비 - 차이(%P) */
     , S_RATE - R_RATE AS RDR_RATE                                 /* 식재료비율 - 추정대비 - 차이(%P) */
     , IP_RATE AS IP_RATE                                          /* 재고비율 - 계획 */
     , DECODE(MS_AMT, 0, 0, IS_AMT / MS_AMT * 100) AS IS_RATE      /* 재고비율 - 실적 */
     , DECODE(MS_AMT, 0, 0, IS_AMT / MS_AMT * 100) - IP_RATE AS IDP_RATE    /* 재고비율 - 계획대비 - 차이(%P) */
     , IS_AMT
     , MS_AMT1
     , MS_AMT2
     , MS_AMT3
  FROM (	    
        SELECT A.BASE_DD
             , A.WEEK_NAME  /* 요일 */
             , A.WE_COLOR   /* 요일색상 */        
             , SUM(NVL(B.SP_AMT,0)) AS SP_AMT     /* 매출액 - 식음료매출 계획 */
             , SUM(NVL(B.SR_AMT,0)) AS SR_AMT     /* 매출액 - 식음료매출 추정 */
             , SUM(NVL(C.SS_AMT,0)) AS SS_AMT     /* 매출액 - 식음료매출 실적 */
             , SUM(NVL(D.MP_AMT,0)) AS MP_AMT     /* 재료비 - 식음료원가 계획 */
             , SUM(NVL(D.MR_AMT,0)) AS MR_AMT     /* 재료비 - 식음료원가 추정 */
             , SUM(NVL(E.MS_AMT1, 0)) + SUM(NVL(F.MS_AMT2, 0)) - SUM(NVL(G.MS_AMT3, 0)) AS MS_AMT     /* 재료비 - 식음료매출 실적 */
             , SUM(NVL(E.MS_AMT1,0)) AS MS_AMT1   /* 식음료매출 실적 - 전산구매 */
             , SUM(NVL(F.MS_AMT2,0)) AS MS_AMT2   /* 식음료매출 실적 - 현지구매 */
             , SUM(NVL(G.MS_AMT3,0)) AS MS_AMT3   /* 식음료매출 실적 - 복리후생식대비 */
             , ROUND(DECODE(SUM(NVL(B.SP_AMT,0)), 0, 0, SUM(NVL(D.MP_AMT,0)) / SUM(NVL(B.SP_AMT,0)) * 100), 2) AS P_RATE   /* 식재료율 - 계획 */
             , ROUND(DECODE(SUM(NVL(B.SR_AMT,0)), 0, 0, SUM(NVL(D.MR_AMT,0)) / SUM(NVL(B.SR_AMT,0)) * 100), 2) AS R_RATE   /* 식재료율 - 추정 */
             , ROUND(DECODE(SUM(NVL(C.SS_AMT, 0)), 0, 0, (SUM(NVL(E.MS_AMT1, 0)) + SUM(NVL(F.MS_AMT2, 0)) - SUM(NVL(G.MS_AMT3, 0))) / SUM(NVL(C.SS_AMT,0)) * 100), 2) AS S_RATE   /* 식재료율 - 실적 */
             , SUM(NVL(H.IP_RATE,0)) AS IP_RATE
             , SUM(NVL(I.IS_AMT,0)) AS IS_AMT
          FROM (     
                SELECT A.FDAY AS BASE_DD
                     , A.WEEK_NAME
                     , DECODE(A.WEEK_NAME,'일','FFCC00','토','99CCFF','FFFFFF') AS WE_COLOR
                  FROM (SELECT FDAY
                             , TO_CHAR(TO_DATE(FDAY, 'YYYYMMDD'), 'DY', 'NLS_DATE_LANGUAGE=KOREAN') AS WEEK_NAME
                          FROM (SELECT TO_CHAR(TO_DATE(#START_DATE#, 'YYYYMMDD') + LEVEL - 1, 'YYYYMMDD') AS FDAY
                                  FROM DUAL
                                CONNECT BY LEVEL &lt;= TO_DATE(#END_DATE#, 'YYYYMMDD') - TO_DATE(#START_DATE#, 'YYYYMMDD') + 1)) A
               ) A /* 일자 기준정보 */
             , (
                /* 매출 - 식음료매출 계획(P), 추정(R) */
                SELECT YMD AS BASE_DD
                     , NVL(SUM(PAMT), 0) AS SP_AMT
                     , NVL(SUM(RAMT), 0) AS SR_AMT
                  FROM (
                        SELECT B.YMD
                             , DECODE(B.DAY_CLASS, 'P', SUM(B.DD_AMT), 0) AS PAMT
                             , DECODE(B.DAY_CLASS, 'R', SUM(B.DD_AMT), 0) AS RAMT
                          FROM MAP_DAY_LOG_MGMT A
                             , MAP_DAY_PLAN B
                         WHERE A.UPJANG = B.UPJANG
                           AND B.UPJANG = #UPJANG#
                           AND A.YY = B.YY
                           AND A.MM = B.MM
                           AND A.DAY_CLASS = B.DAY_CLASS
                           AND A.CONFIRM_YN = 'Y'
                           AND B.YMD BETWEEN #START_DATE# AND #END_DATE#
                           AND B.ACCT_CD IN ('41203010', '41203020', '41203030')
                         GROUP BY YMD, B.DAY_CLASS
                        )
                 GROUP BY YMD        
               ) B
             , (
                /* 매출 - 식음료매출 실적 (내부이용포함) */
                SELECT A.OCCUR_DATE AS BASE_DD
                     , SUM(B.NET_AMT) AS SS_AMT
                  FROM SLA_IF_UPJANG_SALS_MST A
                     , SLA_IF_UPJANG_SALS_DETAIL B
                 WHERE A.OCCUR_DATE = B.OCCUR_DATE
                   AND A.SYS_CLASS = B.SYS_CLASS
                   AND A.UPJANG_CD = B.UPJANG_CD
                   AND A.UPJANG_CD = #UPJANG#
                   AND A.OCCUR_DATE BETWEEN #START_DATE# AND #END_DATE#
                   AND A.RECEIPT_NUM = B.RECEIPT_NUM
		           /* 1103 : FS식음료매출, 2001 : FS POS식음료매출, 1106 : 기타매출-기타, 1204 : 외식식음료매출-식료, 1205 : 외식식음료매출-음료, 2101 : 외식 POS식음료매출-식료, 2102 : 외식 POS식음료매출-음료 */
        		   AND B.SALS_CLASS IN ('1103', '2001', '1106', '1204', '1205', '2101', '2102') 
                 GROUP BY A.OCCUR_DATE
               ) C
             , (
                /* 재료비 - 식음료원가 계획, 추정 */
                SELECT YMD AS BASE_DD
                     , NVL(SUM(PAMT), 0) AS MP_AMT
                     , NVL(SUM(RAMT), 0) AS MR_AMT
                  FROM (
                        SELECT B.YMD
                             , DECODE(B.DAY_CLASS, 'P', SUM(B.DD_AMT), 0) AS PAMT
                             , DECODE(B.DAY_CLASS, 'R', SUM(B.DD_AMT), 0) AS RAMT
                          FROM MAP_DAY_LOG_MGMT A
                             , MAP_DAY_PLAN B
                         WHERE A.UPJANG = B.UPJANG
                           AND B.UPJANG = #UPJANG#
                           AND A.YY = B.YY
                           AND A.MM = B.MM
                           AND A.DAY_CLASS = B.DAY_CLASS
                           AND A.CONFIRM_YN = 'Y'
                           AND B.YMD BETWEEN #START_DATE# AND #END_DATE#
                           AND B.ACCT_CD IN ('42203010', '42203020', '42203030')  -- 식음료원가_식료(FC음료포함)
                         GROUP BY YMD, B.DAY_CLASS
                        )
                 GROUP BY YMD    
               ) D
             , (
                /* 재료비 - 실적 - 전산구매 */
                SELECT TRANS_DATE AS BASE_DD
<isEqual col="PRICE_TYPE" value="1">       
                     , NVL( DECODE(B.OUTVAT_FLAG, 'Y', SUM( MARGIN_AMOUNT * DECODE( TAX_CODE, '100', DECODE( MATERIAL_ACCTCD, '11402000', 1.1, 1) ) ), SUM( MARGIN_AMOUNT ) ), 0) AS MS_AMT1
</isEqual>
<isEqual col="PRICE_TYPE" value="2">       
                     , NVL( DECODE(B.OUTVAT_FLAG, 'Y', SUM( UNIT_AMOUNT * DECODE( TAX_CODE, '100', DECODE( MATERIAL_ACCTCD, '11402000', 1.1, 1) ) ), SUM( UNIT_AMOUNT ) ), 0) AS MS_AMT1
</isEqual>                
                  FROM HLDC_PO_TRANSACTION_NHASH A
                     , HLDC_PO_SUBINVENTORY B
                 WHERE A.SUBINV_CODE = B.SUBINV_CODE
                   AND A.TRANS_DATE BETWEEN #START_DATE# AND #END_DATE#
                   AND A.TRANS_UPJANG = #UPJANG#
                   AND A.TRANS_TYPE LIKE 'O%'        -- 출고
                   AND A.TRANS_TYPE &lt;&gt; 'O002'  -- 이동출고 제외
                   AND A.ACCTCD IN ('42203010', '42203020', '42203030')         -- 식재료 (FS사업부 식음료 출고계정 : '42203030', 외식사업부 식음료 출고계정 : '42203010', '42203020')
                 GROUP BY TRANS_DATE, B.OUTVAT_FLAG     
               ) E
             , (
                /* 재료비 - 실적 - 현재구매(전도금 법인, 현금) */
                SELECT A.BASIS_DATE AS BASE_DD
                     , NVL(SUM(A.AMT), 0) AS MS_AMT2
                  FROM MAP_PREPAY_ADJUST A
                     , SCO_UPJANG_MST_V B
                 WHERE A.CC_CD = B.CC_CD
                   AND A.BASIS_DATE BETWEEN #START_DATE# AND #END_DATE#
                   AND ACCT_CD = '41203010' -- 식음료매출_식료(FC음료포함)
                   AND B.UPJANG = #UPJANG#
                 GROUP BY BASIS_DATE
               ) F 
             , (
                /* 복리후생 식대비 - 전표처리일기준이 아닌 발생일 기준으로 처리 */
                SELECT TO_CHAR(CDATE, 'YYYYMMDD') AS BASE_DD
                     , NVL(SUM(AMT), 0) AS MS_AMT3
                  FROM MAS_WELFARE
                 WHERE UPJANG = #UPJANG#
                   AND TO_CHAR(CDATE, 'YYYYMMDD') BETWEEN #START_DATE# AND #END_DATE#
                 GROUP BY TO_CHAR(CDATE, 'YYYYMMDD')
               ) G
             , (
                /* 목표재고비율 */
                SELECT #START_DATE# AS BASE_DD
                     , GOAL_RATE AS IP_RATE
                  FROM FSA_STOCK_GOAL_SET
                 WHERE GOAL_MM = SUBSTR(#START_DATE#, 1, 6)
                   AND UPJANG = #UPJANG#              
               ) H
             , (
                /* 재고실적금액 */
                SELECT #START_DATE# AS BASE_DD
                     , SUM(STOCK_AMT) AS IS_AMT
                  FROM (
                        SELECT
<isEqual col="PRICE_TYPE" value="1">       
                               NVL( DECODE(B.OUTVAT_FLAG, 'Y', SUM( MARGIN_AMOUNT * DECODE( TAX_CODE, '100', DECODE( MATERIAL_ACCTCD, '11402000', 1.1, 1) ) ), SUM( MARGIN_AMOUNT ) ), 0) STOCK_AMT
</isEqual>
<isEqual col="PRICE_TYPE" value="2">       
                               NVL( DECODE(B.OUTVAT_FLAG, 'Y', SUM( UNIT_AMOUNT * DECODE( TAX_CODE, '100', DECODE( MATERIAL_ACCTCD, '11402000', 1.1, 1) ) ), SUM( UNIT_AMOUNT ) ), 0) STOCK_AMT
</isEqual>                         
                          FROM HLDC_PO_ONHAND_MONTH A
                             , HLDC_PO_SUBINVENTORY B
                             , HLDC_PO_ITEM_MST C
                         WHERE A.SUBINV_CODE = B.SUBINV_CODE
                           AND A.ITEM_CODE = C.ITEM_CODE
                           AND A.ONHAND_YM = (SELECT MAX(CLS_YM) FROM HLDC_PO_CLOSING WHERE CLS_FLAG = 'Y' AND SUBINV_CODE = A.SUBINV_CODE)
                           -- AND A.ONHAND_YM = TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(#START_DATE#, 1, 6), 'YYYYMM'), -1), 'YYYYMM')
                           AND B.UPJANG = #UPJANG#
                           AND B.MATERIAL_ACCTCD = '11402000' -- 입고 계정 코드(대표) : 11402000(식재료)
                         GROUP BY B.OUTVAT_FLAG
                        UNION ALL
                        SELECT 
<isEqual col="PRICE_TYPE" value="1">
                               DECODE(SUBSTR(TRANS_TYPE, 1, 1), 'I', 1, -1) * NVL( DECODE(B.OUTVAT_FLAG, 'Y', SUM( MARGIN_AMOUNT * DECODE( A.TAX_CODE, '100', DECODE( MATERIAL_ACCTCD, '11402000', 1.1, 1) ) ), SUM( MARGIN_AMOUNT ) ), 0) STOCK_AMT
</isEqual>
<isEqual col="PRICE_TYPE" value="2">
                               DECODE(SUBSTR(TRANS_TYPE, 1, 1), 'I', 1, -1) * NVL( DECODE(B.OUTVAT_FLAG, 'Y', SUM( UNIT_AMOUNT * DECODE( A.TAX_CODE, '100', DECODE( MATERIAL_ACCTCD, '11402000', 1.1, 1) ) ), SUM( UNIT_AMOUNT ) ), 0) STOCK_AMT       
</isEqual>                             
                          FROM HLDC_PO_TRANSACTION_NHASH A
                             , HLDC_PO_SUBINVENTORY B
                             , HLDC_PO_ITEM_MST C                                                                                                                                                              
                         WHERE A.SUBINV_CODE = B.SUBINV_CODE                                                                                                                                                                                                  
                           AND A.ITEM_CODE = C.ITEM_CODE                                                                                                                                                                                                    
                           AND A.TRANS_DATE BETWEEN #START_DATE# AND #END_DATE#
                           AND A.TRANS_UPJANG = #UPJANG#
                           AND MATERIAL_ACCTCD = '11402000'  -- 입고 계정 코드(대표) : 11402000(식재료)
                         GROUP BY SUBSTR(A.TRANS_DATE, 7, 2), B.OUTVAT_FLAG, SUBSTR(TRANS_TYPE, 1, 1)
                       )
               ) I
         WHERE A.BASE_DD = B.BASE_DD(+)
           AND A.BASE_DD = C.BASE_DD(+)
           AND A.BASE_DD = D.BASE_DD(+)
           AND A.BASE_DD = E.BASE_DD(+)   
           AND A.BASE_DD = F.BASE_DD(+)   
           AND A.BASE_DD = G.BASE_DD(+)
           AND A.BASE_DD = H.BASE_DD(+)
           AND A.BASE_DD = I.BASE_DD(+)
         GROUP BY A.BASE_DD, A.WEEK_NAME, WE_COLOR
       )
 ORDER BY BASE_DD ASC                 
    </statement>
	<input default-name="ds_cond">
	</input>
	<output default-name="ds_list">
	</output>
</query>
