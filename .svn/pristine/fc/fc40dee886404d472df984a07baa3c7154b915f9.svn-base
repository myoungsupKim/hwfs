<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[레시피조회]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
SELECT A.UPJANG
      ,A.MENU_CD
      ,SUM(PAST_PRICE) AS PAST_PRICE --과거원가
      ,NVL(ROUND(SUM( (A.NEED_QTY * NVL(G_ITEM_PRICE,0)))),0) CUR_PRICE --현재원가
      ,A.MENU_DATE       --제공일
      ,A.SUBINV_CODE         --식당코드
      ,A.SUBINV_NAME_DISP       --식당
      ,A.MEAL            --끼니코드
      ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0023' AND CODE = A.MEAL) MEAL_NAME --끼니명
      ,A.CORNER          --코너코드
      ,(SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0022' AND CODE = A.CORNER) CORNER_NAME --코너명
      ,A.UPJANG ||  A.MENU_CD AS MENU_ID --ID
  FROM
       (
        SELECT A.UPJANG, A.MENU_CD, A.MENU_DATE, A.SUBINV_CODE, D.SUBINV_NAME_DISP, A.MEAL, A.CORNER, C.ITEM_CODE, C.NEED_QTY,
               NVL(ROUND((C.NEED_QTY * NVL((C.OP_PRICE / F.KG_CONVERT_RATE / 1000),0))),0) AS PAST_PRICE
          FROM
               FMM_MENU A
              ,FMM_RECIPE B
              ,FMM_RECIPE_ITEM C
              ,FMS_SUBINVENTORY D
              ,(
                  SELECT A.ITEM_CODE,A.ITEM_NAME,A.ITEM_SIZE,A.PO_UOM,A.KG_CONVERT_RATE
                         ,B.CAL, B.WATER, B.PROT, B.FAT, B.CARBO, B.FIBER, B.ASH, B.CA, B.P
                         ,B.FE, B.NA, B.K, B.VITA_A, B.RETIN, B.B_CAROT, B.THIA, B.RIBO, B.NIACIN
                         , B.VITA_C, B.CHOLE, B.DISUSE_RATE
                  FROM (SELECT B.ITEM_CODE, B.ITEM_NAME, B.ITEM_SIZE, B.PO_UOM, B.TAX_CODE,B.KG_CONVERT_RATE
                          FROM HLDC_PO_ITEM_MST B, HLDC_PO_TREAT_UPJANG A
                         WHERE A.ITEM_CODE = B.ITEM_CODE
                           AND B.ITEM_CODE BETWEEN '010000000000' AND '019999999999'
                           AND A.UPJANG = (SELECT C.AP_UNITPRICE_UPJANG FROM HLDC_ST_UPJANG C WHERE C.UPJANG = #UPJANG#)
                           AND A.USE_YN = 'Y' AND B.USE_YN = 'Y'
                         UNION ALL
                        SELECT A.ITEM_CODE, A.ITEM_NAME, A.ITEM_SIZE, A.PO_UOM, A.TAX_CODE,A.KG_CONVERT_RATE
                          FROM FMP_OTCUST_ITEM A, FMP_OTCUST_PRICE_AVA_V B
                             ,(SELECT UPJANG, ITEM_CODE, MAX(SDATE) AS SDATE
                                 FROM FMP_OTCUST_PRICE_AVA_V
                                WHERE UPJANG = (SELECT Z.OTCUST_PRICE_UPJANG FROM FMS_UPJANG Z WHERE Z.UPJANG = #UPJANG#)
                                  AND SDATE &lt;= NVL('',TO_CHAR(SYSDATE,'YYYYMMDD'))
                                GROUP BY UPJANG, ITEM_CODE) C
                         WHERE A.ITEM_CODE = B.ITEM_CODE
                           AND B.UPJANG = C.UPJANG
                           AND B.SDATE = C.SDATE
                           AND B.ITEM_CODE = C.ITEM_CODE
                           AND A.USE_YN = 'Y' AND B.USE_YN = 'Y') A,
                       (SELECT ITEM_CODE, CAL, WATER, PROT, FAT, CARBO, FIBER, ASH, CA, P, FE, NA, K, VITA_A, RETIN, B_CAROT, THIA, RIBO, NIACIN, VITA_C, CHOLE, DISUSE_RATE
                          FROM FMP_ITEM_NUT WHERE UPJANG = #UPJANG#
                         UNION ALL
                       (SELECT ITEM_CODE, CAL, WATER, PROT, FAT, CARBO, FIBER, ASH, CA, P, FE, NA, K, VITA_A, RETIN, B_CAROT, THIA, RIBO, NIACIN, VITA_C, CHOLE, DISUSE_RATE
                          FROM FSI_ITEM_NUT
                         MINUS
                        SELECT ITEM_CODE, CAL, WATER, PROT, FAT, CARBO, FIBER, ASH, CA, P, FE, NA, K, VITA_A, RETIN, B_CAROT, THIA, RIBO, NIACIN, VITA_C, CHOLE, DISUSE_RATE
                          FROM FMP_ITEM_NUT WHERE UPJANG = #UPJANG#)) B
                    WHERE A.ITEM_CODE = B.ITEM_CODE
                ) F
         WHERE A.UPJANG = B.UPJANG
           AND A.MENU_CD = B.MENU_CD
           AND B.UPJANG = C.UPJANG
           AND B.MENU_CD = C.MENU_CD
           AND B.RECIPE_CD = C.RECIPE_CD
           AND A.UPJANG = D.UPJANG
           AND A.SUBINV_CODE = D.SUBINV_CODE
           AND C.ITEM_CODE = F.ITEM_CODE
           AND A.UPJANG = #UPJANG#        --사업장
           AND B.RECIPE_CD = #RECIPE_CD#   --레시피코드
           AND A.MENU_DATE BETWEEN #MENU_F_DATE# AND #MENU_T_DATE# --기간
         <isNotNull col="MEAL">
           AND A.MEAL = #MEAL#     --끼니
        </isNotNull>
         <isNotNull col="CORNER">
            AND A.CORNER = #CORNER#     --코너
        </isNotNull>
        ) A,
        (
           SELECT A.UPJANG, A.ITEM_CODE,A.CENTER_CODE,A.CUSTCD
           , A.UNIT_PRICE, A.SALE_PRICE, NVL(C.OP_RATE,0) AS OP_RATE --운영율
            , DECODE(SIGN(NVL(C.OP_PRICE,0)),0, SCC_CEIL(A.SALE_PRICE + ROUND(A.SALE_PRICE * NVL(C.OP_RATE,0) / 100),C.CEIL_VAL), C.OP_PRICE) AS OP_PRICE --운영단가(1인원가)
            , ROUND(DECODE(SIGN(NVL(C.OP_PRICE,0)),0, SCC_CEIL(A.SALE_PRICE + ROUND(A.SALE_PRICE * NVL(C.OP_RATE,0) / 100),C.CEIL_VAL), C.OP_PRICE) / (B.KG_CONVERT_RATE * 1000), 1) AS G_ITEM_PRICE--g당단가
              FROM FMS_ITEM_V B, FMU_OP_RATE C
                 ,(SELECT #UPJANG# AS UPJANG, NVL('',TO_CHAR(SYSDATE,'YYYYMMDD')) AS NEED_DATE
                        , A.ITEM_CODE, A.CONTRACT_PRICE AS UNIT_PRICE, A.SALE_PRICE, B.CENTER_CODE,A.CUSTCD
                     FROM HLDC_PO_CONTRACT_FSALE A
                        ,(SELECT CENTER_CODE, UPJANG, ITEM_CODE, MAX(CONTRACT_START) AS CONTRACT_START
                            FROM HLDC_PO_CONTRACT_FSALE
                           WHERE CENTER_CODE = (SELECT A.CENTER_CODE FROM HLDC_PO_UPJANG_CENTER A, HLDC_ST_UPJANG B WHERE A.UPJANG = B.AP_UNITPRICE_UPJANG AND B.UPJANG = #UPJANG#)
                             AND UPJANG = (SELECT AP_UNITPRICE_UPJANG FROM HLDC_ST_UPJANG WHERE UPJANG = #UPJANG#)
                             AND ITEM_CODE > ' '
                             AND CONTRACT_START &lt;= NVL('',TO_CHAR(SYSDATE,'YYYYMMDD'))
                           GROUP BY CENTER_CODE, UPJANG, ITEM_CODE) B
                    WHERE A.CENTER_CODE = B.CENTER_CODE
                      AND A.UPJANG = B.UPJANG
                      AND A.ITEM_CODE = B.ITEM_CODE
                      AND A.CONTRACT_START = B.CONTRACT_START
                      AND A.SALE_PRICE > 0
                      AND A.USE_YN = 'Y'
                      AND EXISTS (SELECT 1 FROM HLDC_PO_TREAT_UPJANG X WHERE X.ITEM_CODE = A.ITEM_CODE AND X.UPJANG = A.UPJANG)
                   -----------
                    UNION ALL
                   -----------
                       SELECT #UPJANG# AS UPJANG, NVL('',TO_CHAR(SYSDATE,'YYYYMMDD')) AS NEED_DATE
                            , A.ITEM_CODE, A.UNIT_PRICE, A.SALE_PRICE,0 CENTER_CODE,0 CUSTCD
                         FROM FMP_OTCUST_PRICE_AVA_V A
                            ,(SELECT UPJANG, ITEM_CODE, MAX(SDATE) AS SDATE
                                FROM FMP_OTCUST_PRICE_AVA_V
                               WHERE UPJANG = (SELECT OTCUST_PRICE_UPJANG FROM FMS_UPJANG WHERE UPJANG = #UPJANG#)
                                 AND SDATE &lt;= NVL('',TO_CHAR(SYSDATE,'YYYYMMDD'))
                               GROUP BY UPJANG, ITEM_CODE) B
                        WHERE A.UPJANG = B.UPJANG
                          AND A.SDATE = B.SDATE
                          AND A.ITEM_CODE = B.ITEM_CODE
                          AND A.SALE_PRICE > 0
                          AND A.USE_YN = 'Y'
                      ) A
                 WHERE A.ITEM_CODE = B.ITEM_CODE
                   AND A.UPJANG = C.UPJANG(+)
                   AND A.NEED_DATE BETWEEN C.SDATE(+) AND C.EDATE(+)
                   AND A.ITEM_CODE BETWEEN C.ITEM_CODE(+) AND C.ITEM_CODE(+)||'9999'
                   AND C.USE_YN(+) = 'Y'
        ) B
 WHERE A.ITEM_CODE = B.ITEM_CODE(+)
   AND A.UPJANG = B.UPJANG(+)
 GROUP BY A.UPJANG
         ,A.MENU_CD
         ,A.MENU_DATE
         ,A.SUBINV_CODE
         ,A.SUBINV_NAME_DISP
         ,A.MEAL
         ,A.CORNER	</statement>
	<input default-name="ds_input">
	</input>
	<output default-name="ds_list">
	</output>
</query>
