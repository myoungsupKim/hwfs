<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="ft.fts.releaseItemMgmtDAO">
    <desc>판매 주문내역에 대하여 출고(품목)를 관리 HQML Query</desc>

    <!-- 판매 주문내역에 대하여 출고(품목)를 관리 목록을 조회한다. -->
    <statement name="selectList" type="select">
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.selectList */
        <![CDATA[
        SELECT RELEASE_NUM,
               RELEASE_NUM_SEQ,
               SALE_ORDER_NUM,
               SALE_ORDER_NUM_SEQ,
               ITEM_CD,
               ITEM_NM,
               HS_CD,
               WH_CD,
               UNIT,
               RELEASE_QUANTITY,
               RELEASE_WGT,
               REAL_WGT,
               SALE_UPRICE,
               BUY_UPRICE,
               SALE_TRANSPORT_AMT,
               SALE_AMT,
               REAL_SALE_AMT,
               PURCHASE_RETURN_QUANTITY,
               PURCHASE_RETURN_WGT,
               PURCHASE_RETURN_DATE,
               PURCHASE_RETURN_DELIVER_NUM,
               BEFORE_INVENTORY,
               DECODE(CST_EXCEPT_YN, 'Y', 1, 0) AS CST_EXCEPT_YN,
               DECODE(SALS_SEND_YN, 'Y', 1, 0) AS SALS_SEND_YN,
               CST_SLIP_FISCAL_NUM,
               CST_SLIP_CDATE,
               SALS_CONFIRM_DATE,
               DECODE(CONFIRM_YN, 'Y', 1, 0) AS CONFIRM_YN,
               CUSER,
               CDATE,
               UUSER,
               UDATE
        FROM   RELEASE_ITEM_MGMT
        WHERE  RELEASE_NUM = :releaseNum
        AND    RELEASE_NUM_SEQ = :releaseNumSeq

        ]]>
    </statement>

    <!-- 판매 주문내역에 대하여 출고(품목)를 관리(을)를 등록한다. -->
    <statement name="insert" type="insert">
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.insert */
        <![CDATA[
        INSERT INTO RELEASE_ITEM_MGMT
        (
         RELEASE_NUM,
         SALE_ORDER_NUM,
         SALE_ORDER_NUM_SEQ,
         RELEASE_STATUS_CD,
         APPRV_REQ_DATE,
         APPRV_DATE,
         APPROV_USER_ID,
         RELEASE_CONFIRM_DATE,
         CONFIRMOR_ID,
         ITEM_CD,
         ITEM_NM,
         HS_CD,
         WH_CD,
         UNIT,
         RELEASE_QUANTITY,
         RELEASE_WGT,
         REAL_WGT,
         SALE_UPRICE,
         BUY_UPRICE,
         SALE_TRANSPORT_AMT,
         SALE_AMT,
         REAL_SALE_AMT,
         PURCHASE_RETURN_QUANTITY,
         PURCHASE_RETURN_WGT,
         PURCHASE_RETURN_DATE,
         PURCHASE_RETURN_DELIVER_NUM,
         BEFORE_INVENTORY,
         CST_EXCEPT_YN,
         SALS_SEND_YN,
         CST_SLIP_FISCAL_NUM,
         CST_SLIP_CDATE,
         SALS_CONFIRM_DATE,
         CONFIRM_YN,
         RECEIVE_REQ_SEQ,
         RELEASE_PUBLISH_YN,
         RELEASE_PUBLISH_NUM_OF_TIMES,
         SHIPMENT_TYPE,
         SALE_AGED,
         ATTACH_DEPT,
         SALE_PRCG_ID,
         CUST_CD,
         TAX_SHET_CREATION_YN,
         SALS_ACT_SEND_YN,
         CUSER,
         CDATE,
         UUSER,
         UDATE,
         INPUT_SALE_AMT,
         DEAL_SHEET_PUBLISH_YN,
         DEAL_SHEET_PUBLISH_DTM,
         RELEASE_DATE,
         BLCK_MARK,
         BUY_CST
        ) VALUES (
         :releaseNum,
         :saleOrderNum,
         :saleOrderNumSeq,
        <#if releaseStatusCd?exists> :releaseStatusCd, <#else> null, </#if>
        <#if apprvReqDate?exists> :apprvReqDate, <#else> null, </#if>
        <#if apprvDate?exists> :apprvDate, <#else> null, </#if>
        <#if approvUserId?exists> :approvUserId, <#else> null, </#if>
        <#if releaseConfirmDate?exists> :releaseConfirmDate, <#else> null, </#if>
        <#if confirmorId?exists> :confirmorId, <#else> null, </#if>
        <#if itemCd?exists> :itemCd, <#else> null, </#if>
        <#if itemNm?exists> :itemNm, <#else> null, </#if>
        <#if hsCd?exists> :hsCd, <#else> null, </#if>
        <#if whCd?exists> :whCd, <#else> null, </#if>
        <#if unit?exists> :unit, <#else> null, </#if>
        <#if releaseQuantity?exists> :releaseQuantity, <#else> null, </#if>
        <#if releaseWgt?exists> :releaseWgt, <#else> null, </#if>
        <#if realWgt?exists> :realWgt, <#else> null, </#if>
        <#if saleUprice?exists> :saleUprice, <#else> null, </#if>
        <#if buyUprice?exists> :buyUprice, <#else> null, </#if>
        <#if saleTransportAmt?exists> :saleTransportAmt, <#else> null, </#if>
        <#if saleAmt?exists> :saleAmt, <#else> null, </#if>
        <#if realSaleAmt?exists> :realSaleAmt, <#else> null, </#if>
        <#if purchaseReturnQuantity?exists> :purchaseReturnQuantity, <#else> null, </#if>
        <#if purchaseReturnWgt?exists> :purchaseReturnWgt, <#else> null, </#if>
        <#if purchaseReturnDate?exists> :purchaseReturnDate, <#else> null, </#if>
        <#if purchaseReturnDeliverNum?exists> :purchaseReturnDeliverNum, <#else> null, </#if>
        <#if beforeInventory?exists> :beforeInventory, <#else> null, </#if>
        <#if cstExceptYn?exists> DECODE(:cstExceptYn, '1', 'Y', 'N'), <#else> null, </#if>
        <#if salsSendYn?exists> DECODE(:salsSendYn, '1', 'Y', 'N'), <#else> null, </#if>
        <#if cstSlipFiscalNum?exists> :cstSlipFiscalNum, <#else> null, </#if>
        <#if cstSlipCdate?exists> :cstSlipCdate, <#else> null, </#if>
        <#if salsConfirmDate?exists> :salsConfirmDate, <#else> null, </#if>
        <#if confirmYn?exists> DECODE(:confirmYn, '1', 'Y', 'N'), <#else> null, </#if>
        <#if receiveReqSeq?exists> :receiveReqSeq, <#else> null, </#if>
        <#if releasePublishYn?exists> DECODE(:releasePublishYn, '1', 'Y', 'N'), <#else> null, </#if>
        <#if releasePublishNumOfTimes?exists> :releasePublishNumOfTimes, <#else> null, </#if>
        <#if shipmentType?exists> :shipmentType, <#else> null, </#if>
        <#if saleAged?exists> :saleAged, <#else> null, </#if>
        <#if attachDept?exists> :attachDept, <#else> null, </#if>
        <#if salePrcgId?exists> :salePrcgId, <#else> null, </#if>
        <#if custCd?exists> :custCd, <#else> null, </#if>
        <#if taxShetCreationYn?exists> DECODE(:taxShetCreationYn, '1', 'Y', 'N'), <#else> null, </#if>
        <#if salsActSendYn?exists> DECODE(:salsActSendYn, '1', 'Y', 'N'), <#else> null, </#if>
         :loginSabun,
         SYSDATE,
         :loginSabun,
         SYSDATE,
        <#if inputSaleAmt?exists> :inputSaleAmt, <#else> null, </#if>
        <#if dealSheetPublishYn?exists> DECODE(:dealSheetPublishYn, '1', 'Y', 'N'), <#else> null, </#if>
        <#if dealSheetPublishDtm?exists> :dealSheetPublishDtm, <#else> null, </#if>
        <#if releaseDate?exists> :releaseDate, <#else> null, </#if>
        <#if blckMark?exists> :blckMark, <#else> null, </#if>
        <#if buyCst?exists> :buyCst <#else> null </#if>
        )

        ]]>
    </statement>

    <!-- 판매 주문내역에 대하여 출고(품목)를 관리(을)를 수정한다. -->
    <statement name="update" type="update">
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.update */
        <![CDATA[
         UPDATE RELEASE_ITEM_MGMT SET
               SALE_ORDER_NUM = :saleOrderNum,
               SALE_ORDER_NUM_SEQ = :saleOrderNumSeq,
        <#if releaseStatusCd?exists> RELEASE_STATUS_CD = :releaseStatusCd, </#if>
        <#if apprvReqDate?exists> APPRV_REQ_DATE = :apprvReqDate, </#if>
        <#if apprvDate?exists> APPRV_DATE = :apprvDate, </#if>
        <#if approvUserId?exists> APPROV_USER_ID = :approvUserId, </#if>
        <#if releaseConfirmDate?exists> RELEASE_CONFIRM_DATE = :releaseConfirmDate, </#if>
        <#if confirmorId?exists> CONFIRMOR_ID = :confirmorId, </#if>
        <#if itemCd?exists> ITEM_CD = :itemCd, </#if>
        <#if itemNm?exists> ITEM_NM = :itemNm, </#if>
        <#if hsCd?exists> HS_CD = :hsCd, </#if>
        <#if whCd?exists> WH_CD = :whCd, </#if>
        <#if unit?exists> UNIT = :unit, </#if>
        <#if releaseQuantity?exists> RELEASE_QUANTITY = :releaseQuantity, </#if>
        <#if releaseWgt?exists> RELEASE_WGT = :releaseWgt, </#if>
        <#if realWgt?exists> REAL_WGT = :realWgt, </#if>
        <#if saleUprice?exists> SALE_UPRICE = :saleUprice, </#if>
        <#if buyUprice?exists> BUY_UPRICE = :buyUprice, </#if>
        <#if saleTransportAmt?exists> SALE_TRANSPORT_AMT = :saleTransportAmt, </#if>
        <#if saleAmt?exists> SALE_AMT = :saleAmt, </#if>
        <#if realSaleAmt?exists> REAL_SALE_AMT = :realSaleAmt, </#if>
        <#if purchaseReturnQuantity?exists> PURCHASE_RETURN_QUANTITY = :purchaseReturnQuantity, </#if>
        <#if purchaseReturnWgt?exists> PURCHASE_RETURN_WGT = :purchaseReturnWgt, </#if>
        <#if purchaseReturnDate?exists> PURCHASE_RETURN_DATE = :purchaseReturnDate, </#if>
        <#if purchaseReturnDeliverNum?exists> PURCHASE_RETURN_DELIVER_NUM = :purchaseReturnDeliverNum, </#if>
        <#if beforeInventory?exists> BEFORE_INVENTORY = :beforeInventory, </#if>
        <#if cstExceptYn?exists> CST_EXCEPT_YN = DECODE(:cstExceptYn, '1', 'Y', 'N'), </#if>
        <#if salsSendYn?exists> SALS_SEND_YN = DECODE(:salsSendYn, '1', 'Y', 'N'), </#if>
        <#if cstSlipFiscalNum?exists> CST_SLIP_FISCAL_NUM = :cstSlipFiscalNum, </#if>
        <#if cstSlipCdate?exists> CST_SLIP_CDATE = :cstSlipCdate, </#if>
        <#if salsConfirmDate?exists> SALS_CONFIRM_DATE = :salsConfirmDate, </#if>
        <#if confirmYn?exists> CONFIRM_YN = DECODE(:confirmYn, '1', 'Y', 'N'), </#if>
        <#if receiveReqSeq?exists> RECEIVE_REQ_SEQ = :receiveReqSeq, </#if>
        <#if releasePublishYn?exists> RELEASE_PUBLISH_YN = DECODE(:releasePublishYn, '1', 'Y', 'N'), </#if>
        <#if releasePublishNumOfTimes?exists> RELEASE_PUBLISH_NUM_OF_TIMES = :releasePublishNumOfTimes, </#if>
        <#if shipmentType?exists> SHIPMENT_TYPE = :shipmentType, </#if>
        <#if saleAged?exists> SALE_AGED = :saleAged, </#if>
        <#if attachDept?exists> ATTACH_DEPT = :attachDept, </#if>
        <#if salePrcgId?exists> SALE_PRCG_ID = :salePrcgId, </#if>
        <#if custCd?exists> CUST_CD = :custCd, </#if>
        <#if taxShetCreationYn?exists> TAX_SHET_CREATION_YN = DECODE(:taxShetCreationYn, '1', 'Y', 'N'), </#if>
        <#if salsActSendYn?exists> SALS_ACT_SEND_YN = DECODE(:salsActSendYn, '1', 'Y', 'N'), </#if>
               UUSER = :loginSabun,
               UDATE = SYSDATE,
        <#if inputSaleAmt?exists> INPUT_SALE_AMT = :inputSaleAmt, </#if>
        <#if dealSheetPublishYn?exists> DEAL_SHEET_PUBLISH_YN = DECODE(:dealSheetPublishYn, '1', 'Y', 'N'), </#if>
        <#if dealSheetPublishDtm?exists> DEAL_SHEET_PUBLISH_DTM = :dealSheetPublishDtm, </#if>
        <#if releaseDate?exists> RELEASE_DATE = :releaseDate, </#if>
        <#if blckMark?exists> BLCK_MARK = :blckMark </#if>
        WHERE  RELEASE_NUM = :releaseNum


        ]]>
    </statement>

    <!-- 판매 주문내역에 대하여 출고(품목)를 관리(을)를 삭제한다. -->
    <statement name="delete" type="delete">
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.delete */
        <![CDATA[
        DELETE
        FROM   RELEASE_ITEM_MGMT
        WHERE  RELEASE_NUM = :releaseNum
        ]]>
    </statement>


    <!--  출고 건수 조회. -->
    <statement name="getReleaseMgmtCnt" type="select">
        /*+ com.hwfs.ft.fts.dao.ReleaseMgmtDAO.getReleaseMgmtCnt */
        <![CDATA[
        SELECT
              COUNT(RELEASE_NUM) CNT
        FROM RELEASE_ITEM_MGMT
        WHERE  RELEASE_NUM = :releaseNum
        ]]>
    </statement>

   <!-- 판매 주문내역에 대하여 출고(품목)를 관리 목록을 조회한다. -->
    <statement name="selectReleaseItemMgmtInfo" type="select">
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.selectReleaseItemMgmtInfo */
        <![CDATA[
        SELECT RELEASE_NUM,
               SALE_ORDER_NUM,
               SALE_ORDER_NUM_SEQ,
               RELEASE_STATUS_CD,
               APPRV_REQ_DATE,
               APPRV_DATE,
               APPROV_USER_ID,
               RELEASE_CONFIRM_DATE,
               CONFIRMOR_ID,
               ITEM_CD,
               ITEM_NM,
               HS_CD,
               WH_CD,
               UNIT,
               (SELECT SET1 FROM   SCC_COMMON_CODE A WHERE  A.GROUP_CODE = 'ITEM_UNIT' AND    A.USE_YN = 'Y' AND A.CODE = UNIT ) SET1,
               RELEASE_QUANTITY,
               RELEASE_WGT,
               REAL_WGT,
               SALE_UPRICE,
               BUY_UPRICE,
               SALE_TRANSPORT_AMT,
               SALE_AMT,
               REAL_SALE_AMT,
               PURCHASE_RETURN_QUANTITY,
               PURCHASE_RETURN_WGT,
               PURCHASE_RETURN_DATE,
               PURCHASE_RETURN_DELIVER_NUM,
               BEFORE_INVENTORY,
               CST_EXCEPT_YN,
               DECODE(SALS_SEND_YN, 'Y', 1, 0) AS SALS_SEND_YN,
               CST_SLIP_FISCAL_NUM,
               CST_SLIP_CDATE,
               SALS_CONFIRM_DATE,
               CONFIRM_YN,
               RECEIVE_REQ_SEQ,
               RELEASE_PUBLISH_YN,
               RELEASE_PUBLISH_NUM_OF_TIMES,
               SHIPMENT_TYPE,
               SALE_AGED,
               ATTACH_DEPT,
               SALE_PRCG_ID,
               CUST_CD,
               TAX_SHET_CREATION_YN,
               SALS_ACT_SEND_YN,
               DEPT_MNGMV_DELIVER_NUM,
               CUSER,
               CDATE,
               UUSER,
               UDATE
        FROM   RELEASE_ITEM_MGMT
        WHERE  RELEASE_NUM = :releaseNum
        ]]>
    </statement>

   <!-- 판매 주문내역에 대하여 중량변경 처리한다. -->
    <statement name="releaseWhgChg" type="update">
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.releaseWhgChg */
        <![CDATA[
        UPDATE RELEASE_ITEM_MGMT SET
               REAL_WGT = :realWgt,
               REAL_SALE_AMT = :realSaleAmt,
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  RELEASE_NUM = :releaseNum
        ]]>
    </statement>

   <!-- 판매 주문내역에 대하여 출고(품목)를 관리(을)를 수정한다. -->
    <statement name="releaseApprovReq" type="update">
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.releaseApprovReq */
        <![CDATA[
        UPDATE RELEASE_ITEM_MGMT SET
               APPRV_REQ_DATE = :apprvReqDate,
               RELEASE_STATUS_CD = :releaseStatusCd,
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  RELEASE_NUM = :releaseNum
        ]]>
    </statement>

   <!-- 판매 주문내역에 대하여 팀장승인 처리한다. -->
    <statement name="releaseApprov" type="update">
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.releaseApprov */
        <![CDATA[
        UPDATE RELEASE_ITEM_MGMT SET
               APPRV_DATE = :apprvDate,
               APPROV_USER_ID = :loginSabun,
               RELEASE_STATUS_CD = :releaseStatusCd,
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  RELEASE_NUM = :releaseNum
        ]]>
    </statement>

   <!-- 판매 주문내역에 대하여 출고확정(취소) 처리한다. -->
    <statement name="releaseConfirm" type="update">
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.releaseConfirm */
        <![CDATA[
        UPDATE RELEASE_ITEM_MGMT SET
               RELEASE_CONFIRM_DATE = :releaseConfirmDate,
               APPROV_USER_ID = :loginSabun,
               RELEASE_STATUS_CD = :releaseStatusCd,
               <#if deptMngmvDeliverNum?exists> DEPT_MNGMV_DELIVER_NUM = :deptMngmvDeliverNum, </#if>
               REMARK = :remark,
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  RELEASE_NUM = :releaseNum
        ]]>
    </statement>

   <!-- 판매 주문내역에 대하여 출고확정(취소) 처리한다. -->
    <statement name="releaseConfirmDeptMngmv" type="update">
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.releaseConfirmDeptMngmv */
        <![CDATA[
        UPDATE RELEASE_ITEM_MGMT SET
               <#if deptMngmvDeliverNum?exists> DEPT_MNGMV_DELIVER_NUM = :deptMngmvDeliverNum, </#if>
               <#if deptMngmvSlipFiscalNum?exists> DEPT_MNGMV_SLIP_FISCAL_NUM = :deptMngmvSlipFiscalNum, </#if>
               <#if deptMngmvSlipCdate?exists> DEPT_MNGMV_SLIP_CDATE = :deptMngmvSlipCdate, </#if>
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  RELEASE_NUM = :releaseNum
        ]]>
    </statement>


   <!-- 중량변경건 실중량 출고확정 취소시 NULL 처리한다. -->
    <statement name="updateRealWgt" type="update">
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.updateRealWgt */
        <![CDATA[
        UPDATE RELEASE_ITEM_MGMT SET
               REAL_WGT = :realWgt,
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  RELEASE_NUM = :releaseNum
        ]]>
    </statement>

   <!-- 환입시 출고수량(중량) 업데이트 처리한다. -->
    <statement name="updateReleaseQuantity" type="update">
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.updateReleaseQuantity */
        <![CDATA[
        UPDATE RELEASE_ITEM_MGMT SET
               RELEASE_QUANTITY = :releaseQuantity,
               RELEASE_WGT = :releaseWgt,
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  RELEASE_NUM = :releaseNum
        ]]>
    </statement>

   <!-- 판매 주문내역에 대하여 단가변경 처리한다. -->
    <statement name="releaseUpriceChg" type="update">
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.releaseUpriceChg */
        <![CDATA[
        UPDATE RELEASE_ITEM_MGMT SET
               RELEASE_STATUS_CD = :releaseStatusCd,
               SALE_UPRICE = :saleUprice,
               REAL_SALE_AMT = :saleAmt,
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  RELEASE_NUM = :releaseNum
        ]]>
    </statement>



   <!-- 판매 주문내역에 총주문수량,중량 구한다. -->
    <statement name="selectSumOrderWgtInfo" type="select">
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.selectSumOrderWgtInfo */
        <![CDATA[
        SELECT SUM(A.RELEASE_APPRV_REQ_QUANTITY) RELEASE_APPRV_REQ_QUANTITY, SUM(A.RELEASE_APPRV_REQ_WGT) RELEASE_APPRV_REQ_WGT  FROM SALE_ORDER_ITEM_MGMT A
        WHERE DELIVER_NUM =:deliverNum
        ]]>
    </statement>

   <!-- 판매 주문내역에 대하여 매출 확정 한다. -->
    <statement name="releaseSalsConfirm" type="update">
        /*+ com.hwfs.ft.fts.dao.ReleaseItemMgmtDAO.releaseSalsConfirm */
        <![CDATA[

        UPDATE RELEASE_ITEM_MGMT SET
               SALS_SEND_YN = 'Y',
               SALS_CONFIRM_DATE = :salsConfirmDate,
               CONFIRM_YN = :confirmYn,
               RELEASE_STATUS_CD = :releaseStatusCd,
               RECEIPT_NUM = :receiptNum,
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  RELEASE_NUM = :releaseNum
        ]]>
    </statement>
</hqml>
