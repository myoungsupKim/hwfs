<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="sc.scz.upjangBatchRegDAO">
	<desc>업장 일괄등록 HQML Query</desc>

	<!-- 거래처에 대한 검증 목록을 조회한다. -->
	<statement name="selectCustDataValidation" type="select">
		/*+ com.hwfs.sc.scz.dao.UpjangBatchRegDAO.selectCustDataValidation */
		<![CDATA[
SELECT CUSTCD,
       CUSTNM,
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'Z02' AND CODE = CUSTGUBUN) AS CUSTGUBUN,
       (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'Z01' AND CODE = CUSTTYPE) AS CUSTTYPE,
       DRNAME1,
       UP_JONG,
       UP_TAE
FROM   ST_CUST
WHERE  SAUPNO = :bsnNo
		]]>
	</statement>

	<!-- 업장에 대한 검증 목록을 조회한다. -->
	<statement name="selectUpjangDataValidation" type="select">
		/*+ com.hwfs.sc.scz.dao.UpjangBatchRegDAO.selectUpjangDataValidation */
		<![CDATA[
SELECT UPJANG,
       UPJANGNM
FROM   ST_UPJANG
WHERE  UPJANGNM = :upjangnm
		]]>
	</statement>

	<!-- 업장 일괄등록(을)를 등록한다. -->
	<statement name="insert" type="insert">
		/*+ com.hwfs.sc.scz.dao.UpjangBatchRegDAO.insert */
		<![CDATA[
INSERT INTO SCC_UPJANG_PACK_REQUEST
(
 REG_DATE,
 REG_TIME,
 REG_SABUN,
 UPJANG,
 CUST_CD,
 REQUEST_SYS_CD,
 REQUEST_NUM,
 CUSER,
 CDATE,
 UUSER,
 UDATE
) VALUES (
 TO_CHAR(SYSDATE, 'YYYYMMDD'),
 TO_CHAR(SYSDATE, 'HH24MISS'),
 :loginSabun,
 :upjang,
<#if custcd?exists> :custcd, <#else> null, </#if>
<#if requestSysId?exists> :requestSysId, <#else> null, </#if>
<#if requestNum?exists> :requestNum, <#else> null, </#if>
 :loginSabun,
 SYSDATE,
 :loginSabun,
 SYSDATE
)
		]]>
	</statement>

	<!-- ST_UPJANG을 생성한다. -->
	<statement name="insertStUpjang" type="insert">
		/*+ com.hwfs.sc.scz.dao.UpjangBatchRegDAO.insertStUpjang */
		<![CDATA[
INSERT INTO ST_UPJANG
(
 UPJANG,
 CUSTCD,
 UPJANGNM,
 SAUPNO,
 UP_JONG,
 UP_TAE,
 DRNAME,
 SHOP_TYP_CD,
 VAT_GUBUN,
 DEPT_ID,
 CC_CD,
 VAT_UPJANG,
 CREATE_BY,
 CREATE_DATE,
 UPDATE_BY,
 UPDATE_DATE,
 ADDR_KEY,
 APPROVAL_REQ_SABUN,
 APPROVAL_REQ_DATE,
 APPROVAL_STATUS_CD,
 BANK_ACCT_NO_REQUEST_YN
) VALUES (
 :upjang,
<#if custcd?exists> :custcd, <#else> null, </#if>
 :upjangnm,
 :bsnNo||'0000',
<#if bizCat?exists> :bizCat, <#else> null, </#if>
<#if bizType?exists> :bizType, <#else> null, </#if>
<#if ceoNm?exists> :ceoNm, <#else> null, </#if>
 '02',
 '01',
 :ccCd,
 :ccCd,
 109770,
 :loginSabun,
 SYSDATE,
 :loginSabun,
 SYSDATE,
 'ST_UPJANG' || LPAD(:upjang, 41, '0'),
 :loginSabun,
 TO_CHAR(SYSDATE, 'YYYYMMDD'),
 'REQ',
<#if bankAcctNo?exists> :bankAcctNo <#else> null </#if>
)
		]]>
	</statement>

	<!-- 주소정보를 생성한다. -->
	<statement name="insertSccAddrInfo" type="insert">
		/*+ com.hwfs.sc.scz.dao.UpjangBatchRegDAO.insertSccAddrInfo */
		<![CDATA[
INSERT INTO SCC_ADDR_INFO
(
 ADDR_KEY,
 ADDR_CLASS,
 CONFIRM_YN,
 BASE_ADDR1,
 CUSER,
 CDATE,
 UUSER,
 UDATE
) VALUES (
 'ST_UPJANG' || LPAD(:upjang, 41, '0'),
 '1',
 'N',
 :addr,
 :loginSabun,
 SYSDATE,
 :loginSabun,
 SYSDATE
)
		]]>
	</statement>

	<!-- SCO_UPJANG_MST를 생성한다. -->
	<statement name="insertScoUpjangMst" type="insert">
		/*+ com.hwfs.sc.scz.dao.UpjangBatchRegDAO.insertScoUpjangMst */
		<![CDATA[
INSERT INTO SCO_UPJANG_MST (
  UPJANG,
  OPEN_DATE,
  CLOSE_DATE,
  CUSER,
  CDATE,
  UUSER,
  UDATE
  ) VALUES (
  :upjang,
  TO_CHAR(SYSDATE, 'YYYYMMDD'),
  '21001231',
  :loginSabun,
  SYSDATE,
  :loginSabun,
  SYSDATE
  )
		]]>
	</statement>

	<!-- FMS_UPJANG을 생성한다. -->
	<statement name="insertFmsUpjang" type="insert">
		/*+ com.hwfs.sc.scz.dao.UpjangBatchRegDAO.insertFmsUpjang */
		<![CDATA[
INSERT INTO FMS_UPJANG (
  UPJANG,
  MAIN_UPJANG,
  OTCUST_PRICE_UPJANG,
  UPJANGNM_DISP,
  UPJANGNM_DISP2,
  DEPT_ID,
  ADDR_KEY,
  FST_REG_DATE,
  CUSER,
  CDATE,
  UUSER,
  UDATE
  ) VALUES (
  :upjang,
  :upjang,
  :upjang,
  :upjangnm,
  :upjangnm,
  :ccCd,
  'ST_UPJANG' || LPAD(:upjang, 41, '0'),
  TO_CHAR(SYSDATE, 'YYYYMMDD'),
  :loginSabun,
  SYSDATE,
  :loginSabun,
  SYSDATE
  )
		]]>
	</statement>

	<!-- 업장 일괄등록(을)를 수정한다. -->
	<statement name="update" type="update">
		/*+ com.hwfs.sc.scz.dao.UpjangBatchRegDAO.update */
		<![CDATA[
		UPDATE TABLE_NAME
		SET    COLUMN_NAME1 = :columnName1,
		       COLUMN_NAME2 = :columnName2,
		       UUSER = :loginSabun,
		       UDATE = SYSDATE
		WHERE  COLUMN_NAME = :columnName
		]]>
	</statement>

	<!-- 업장 일괄등록(을)를 삭제한다. -->
	<statement name="delete" type="delete">
		/*+ com.hwfs.sc.scz.dao.UpjangBatchRegDAO.delete */
		<![CDATA[
		DELETE
		FROM   TABLE_NAME
		WHERE  COLUMN_NAME = :columnName
		]]>
	</statement>

</hqml>
