<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="ls.lcm.longStorageTestArticleMappMgmtDAO">
    <desc>장기보존여부 시험항목매핑을 관리한다.</desc>

    <!-- 장기보존여부 시험항목매핑 DATA를 조회한다. -->
    <statement name="selectList" type="select">
        /*+ com.hwfs.ls.lcm.dao.LongStorageTestArticleMappMgmtDAO.selectList */
        <![CDATA[
/* 장기보존여부 시험항목매핑 조회 */
SELECT /*+ INDEX_SS(A) */
       CASE WHEN B.LONGSTORAGE_YN IS NOT NULL THEN '1' ELSE '0' END AS CHK,
       --CASE WHEN EXISTS (SELECT 1
       --                    FROM LCM_LONGSTORAGE_TEST_MAPPING X
       --                   WHERE X.ARTICLE_CD = A.ARTICLE_CD
       --                     AND X.LONGSTORAGE_YN = B.LONGSTORAGE_YN) THEN '1' ELSE '0' END AS CHK,
       A.ARTICLE_CD,
       A.ARTICLE_NM,
       DECODE(B.LEGAL_BASIS,'Y','1','0') AS LEGAL_BASIS,
       DECODE(B.INSIDE_BASIS,'Y','1','0') AS INSIDE_BASIS,
       A.INSPT_FLD,
       A.TAKE_TERM,
       A.NOT_FIT_CLSFI,
       DECODE(B.BASIS_STAND,NULL,A.BASIS_STAND,B.BASIS_STAND) AS BASIS_STAND,
       A.COMM_1,
       A.COMM_2,
       A.COMM_3,
       A.COMM_4,
       A.COMM_5,
       A.COMM_CALC,
       B.REMARK
  FROM LCM_TEST_ARTICLE A
     , (SELECT Y.LONGSTORAGE_YN
             , Y.ARTICLE_CD
             , Y.LEGAL_BASIS
             , Y.INSIDE_BASIS
             , Y.BASIS_STAND
             , Y.REMARK
          FROM LCM_LONGSTORAGE_TEST_MAPPING Y
         WHERE Y.LONGSTORAGE_YN = :longstorageYn
       ) B
 WHERE A.ARTICLE_CD = B.ARTICLE_CD(+)
 <#if insptFld?has_content> AND A.INSPT_FLD = :insptFld </#if>
 <#if edtSearch?has_content> AND A.ARTICLE_NM LIKE '%' || :edtSearch || '%' </#if>
 ORDER BY 1 DESC
        , A.ARTICLE_CD
        , A.ARTICLE_NM
        ]]>
    </statement>

    <!-- 장기보존여부 시험항목매핑을 생성한다. -->
    <statement name="insertList" type="insert">
        /*+ com.hwfs.ls.lcm.dao.LongStorageTestArticleMappMgmtDAO.insertList */
        <![CDATA[
/* 장기보존여부 시험항목매핑 저장 */
INSERT INTO LCM_LONGSTORAGE_TEST_MAPPING
(
 LONGSTORAGE_YN,
 ARTICLE_CD,
 LEGAL_BASIS,
 INSIDE_BASIS,
 BASIS_STAND,
 REMARK,
 CUSER,
 CDATE,
 UUSER,
 UDATE
) VALUES (
 :longstorageYn,
 :articleCd,
<#if legalBasis?exists> DECODE(:legalBasis,'1','Y','N'), <#else> null, </#if>
<#if insideBasis?exists> DECODE(:insideBasis,'1','Y','N'), <#else> null, </#if>
<#if basisStand?exists> :basisStand, <#else> null, </#if>
<#if remark?exists> :remark, <#else> null, </#if>
 :loginSabun,
 SYSDATE,
 :loginSabun,
 SYSDATE
)
        ]]>
    </statement>

    <!-- 장기보존여부 시험항목매핑을 삭제한다. -->
    <statement name="deleteList" type="delete">
        /*+ com.hwfs.ls.lcm.dao.LongStorageTestArticleMappMgmtDAO.deleteList */
        <![CDATA[
/* 장기보존여부 시험항목매핑 삭제 */
DELETE
FROM   LCM_LONGSTORAGE_TEST_MAPPING
WHERE  LONGSTORAGE_YN = :longstorageYn
AND    ARTICLE_CD = :articleCd
        ]]>
    </statement>

    <!-- 전체 삭제 -->
    <statement name="deleteAllList" type="delete">
        /*+ com.hwfs.ls.lcm.dao.LongStorageTestArticleMappMgmtDAO.deleteAllList */
        <![CDATA[
/* 장기보존여부 시험항목매핑 전체 삭제 */
DELETE
FROM   LCM_LONGSTORAGE_TEST_MAPPING
WHERE  LONGSTORAGE_YN = :longstorageYn
        ]]>
    </statement>

</hqml>
