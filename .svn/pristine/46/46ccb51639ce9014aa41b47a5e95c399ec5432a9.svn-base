<?xml version="1.0" encoding="euc-kr"?>
<query>
	<type>select</type>
	<description><![CDATA[기간별 손익분석(사업장담당자(사업장미선택시))]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
<![CDATA[
SELECT LINE_ID, SORT_SEQ, LINE_NAME,
       SUM(PRE_ACT_AMT) AS PRE_ACT_AMT, -- 전년실적(경영실적)
       ROUND(DECODE(SUM(PRE_ACT_DENOMINATOR_AMT), 0, 0, (SUM(PRE_ACT_NUMERATOR_AMT) / SUM(PRE_ACT_DENOMINATOR_AMT)) * 100 ), 1) AS PRE_ACT_PER, -- 전년실적(구성비)
       SUM(EXP_AMT) AS EXP_AMT, -- 기간계획(경영예상)
       ROUND(DECODE(SUM(EXP_DENOMINATOR_AMT), 0, 0, (SUM(EXP_NUMERATOR_AMT) / SUM(EXP_DENOMINATOR_AMT)) * 100 ), 1) AS EXP_PER, -- 기간계획(구성비)
       SUM(ACT_AMT) AS ACT_AMT, -- 기간실적(경영실적)
       ROUND(DECODE(SUM(ACT_DENOMINATOR_AMT), 0, 0, (SUM(ACT_NUMERATOR_AMT) / SUM(ACT_DENOMINATOR_AMT)) * 100 ), 1) AS ACT_PER -- 기간실적(구성비)
  FROM (
        SELECT T1.MAIN_UPJANG, T1.UPJANG, T2.LINE_ID, T2.SORT_SEQ, T2.LINE_NAME, T2.NUMERATOR, T2.DENOMINATOR,
               -- 전년실적 ----
               FMO_PL_LINE_FUN(T1.MAIN_UPJANG, T1.UPJANG, T2.LINE_ID, TO_CHAR(ADD_MONTHS(TO_DATE(#FROM_DATE# || '01', 'YYYYMMDD'), -12), 'RRRRMM'), TO_CHAR(ADD_MONTHS(TO_DATE(#TO_DATE# || '01', 'YYYYMMDD'), -12), 'RRRRMM'), '1') AS PRE_ACT_AMT,												
               DECODE( T2.NUMERATOR, NULL, 0, FMO_PL_LINE_FUN(T1.MAIN_UPJANG, T1.UPJANG, T2.NUMERATOR, TO_CHAR(ADD_MONTHS(TO_DATE(#FROM_DATE# || '01', 'YYYYMMDD'), -12), 'RRRRMM'), TO_CHAR(ADD_MONTHS(TO_DATE(#TO_DATE# || '01', 'YYYYMMDD'), -12), 'RRRRMM'), '1')) AS PRE_ACT_NUMERATOR_AMT,			
               DECODE( T2.DENOMINATOR, NULL, 0, FMO_PL_LINE_FUN(T1.MAIN_UPJANG, T1.UPJANG, T2.DENOMINATOR, TO_CHAR(ADD_MONTHS(TO_DATE(#FROM_DATE# || '01', 'YYYYMMDD'), -12), 'RRRRMM'), TO_CHAR(ADD_MONTHS(TO_DATE(#TO_DATE# || '01', 'YYYYMMDD'), -12), 'RRRRMM'), '1')) AS PRE_ACT_DENOMINATOR_AMT,
               -- 기간계획 ----
               FMO_PL_LINE_FUN(T1.MAIN_UPJANG, T1.UPJANG, T2.LINE_ID, #FROM_DATE#, #TO_DATE#, '0') AS EXP_AMT,												
               DECODE( T2.NUMERATOR, NULL, 0, FMO_PL_LINE_FUN(T1.MAIN_UPJANG, T1.UPJANG, T2.NUMERATOR, #FROM_DATE#, #TO_DATE#, '0')) AS EXP_NUMERATOR_AMT,			
               DECODE( T2.DENOMINATOR, NULL, 0, FMO_PL_LINE_FUN(T1.MAIN_UPJANG, T1.UPJANG, T2.DENOMINATOR, #FROM_DATE#, #TO_DATE#, '0')) AS EXP_DENOMINATOR_AMT,
               -- 기간실적 ----
               FMO_PL_LINE_FUN(T1.MAIN_UPJANG, T1.UPJANG, T2.LINE_ID, #FROM_DATE#, #TO_DATE#, '1') AS ACT_AMT,												
               DECODE( T2.NUMERATOR, NULL, 0, FMO_PL_LINE_FUN(T1.MAIN_UPJANG, T1.UPJANG, T2.NUMERATOR, #FROM_DATE#, #TO_DATE#, '1')) AS ACT_NUMERATOR_AMT,			
               DECODE( T2.DENOMINATOR, NULL, 0, FMO_PL_LINE_FUN(T1.MAIN_UPJANG, T1.UPJANG, T2.DENOMINATOR, #FROM_DATE#, #TO_DATE#, '1')) AS ACT_DENOMINATOR_AMT
         FROM (
               SELECT #MAIN_UPJANG# AS MAIN_UPJANG, A.UPJANG 
                 FROM FMS_USER_UPJANG A
                WHERE A.SABUN = #SABUN#) T1, FMO_PL_LINE T2
        WHERE T1.MAIN_UPJANG = T2.UPJANG)
 GROUP BY LINE_ID, SORT_SEQ, LINE_NAME
 ORDER BY SORT_SEQ	]]></statement>
	<input default-name="ds_Input">
	</input>
	<output default-name="ds_List">
	</output>
</query>
