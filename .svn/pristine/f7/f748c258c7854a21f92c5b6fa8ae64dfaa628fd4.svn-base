<?xml version="1.0" encoding="euc-kr"?>
<query>
	<type>select</type>
	<description><![CDATA[자재구성조회]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
<![CDATA[
SELECT A.RECIPE_CD     -- 레시피코드
     , A.ITEM_SEQ      -- 자재순번
     , A.ITEM_CODE     -- 레시피명
     , C.ITEM_NAME     -- 자재명
     , C.ITEM_SIZE     -- 규격
     , C.PO_UOM        -- 구매단위
     , A.NEED_QTY      -- 1인소요량
     , B.MARGIN_PRICE  -- 구매단가
     , NVL(D.DISUSE_RATE, 0) AS DISUSE_RATE   -- 페기율
     , A.CUT_SPEC      -- 커팅규격
     , D.CAL           -- 100g당 에너지
     , DECODE(NVL(E.RESTRICT_SEQ,0), 0, 'N', 'Y') RESTRICT_YN  -- 금지
     , E.RESTRICT_START
     , E.RESTRICT_END
     , E.RESTRICT_REASON
     , DECODE(NVL(D.DISUSE_RATE,0), 0, A.NEED_QTY, ROUND(A.NEED_QTY * (100 - D.DISUSE_RATE) / 100, 2)) EDIBLE_QTY  -- 가식부량
     , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FS0017' AND CODE = A.CUT_SPEC) CUT_SPEC_NAME     -- 커팅규격명
     , ROUND(A.NEED_QTY * (NVL(B.MARGIN_PRICE,0) / C.KG_CONVERT_RATE / 1000) ) PERSON_PRICE                        -- 1인원가(관리)
     , ROUND(A.NEED_QTY * (NVL(X.ITEM_PRICE,0) / C.KG_CONVERT_RATE / 1000) ) PERSON_PRICE2                        -- 1인원가(재무)
     , ROUND(NVL(D.CAL, 0) * DECODE(NVL(D.DISUSE_RATE, 0), 0, A.NEED_QTY, ROUND(A.NEED_QTY * (100 - D.DISUSE_RATE) / 100, 2)) / 100, 2) CAL_CALC --가식부량에 대한 에너지
     , ROUND(NVL(B.MARGIN_PRICE, 0) / C.KG_CONVERT_RATE / 1000, 2) AS GRAM_PRICE  --g당 단가
     , TO_CHAR(SYSDATE,'YYYYMMDD') AS TODAY
     , EPROCUSR.FN_ITEM_PROCURE_MTG_UNS('100', A.ITEM_CODE) AS MTG_UNS -- 불용자재체크
     , EPROCUSR.FN_ITEM_PROCURE_MTG_STP('100', A.ITEM_CODE, '01') AS MTG_STP -- 중지자재체크(Q-STOP)
     , FN_ITEM_FEATURE_ICON(C.DUTY_YN, C.PB_YN, C.ECO_ITEM, C.MANUF_CD) AS FEATURE_ICON
     , A.ATTR10 -- 그룹레시피 대표자재여부
  FROM FSR_STD_RECIPE_ITEM A 
     , FSI_STD_PRICE B 
     ,(SELECT A.ITEM_CODE
            , D.ITEM_NAME
            --, DECODE(A.MARGIN_RATE, 0, A.CONTRACT_PRICE, ( ROUND( (A.CONTRACT_PRICE * (A.MARGIN_RATE+100) / 100 ) / 10) * 10 ) ) AS ITEM_PRICE --관리단가
            , A.CONTRACT_PRICE AS ITEM_PRICE --재무단가
            , KG_CONVERT_RATE            
         FROM HLDC_ST_UPJANG B
            , HLDC_PO_CONTRACT_F A
            , HLDC_PO_ITEM_MST D
        WHERE A.ITEM_CODE = D.ITEM_CODE
          AND A.USE_YN = 'Y'
          AND A.CONTRACT_PRICE > 0
          AND A.UPJANG = TO_CHAR(B.AP_UNITPRICE_UPJANG)
          AND B.UPJANG = '185787'  --[업장코드:청파사옥점 기준 -> 메뉴개발용(구매신청) 업장으로 변경요청 2022.09.21]
          AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN A.CONTRACT_START AND NVL(A.CONTRACT_END,'99999999')  --[메뉴일자]
       ) X
     --전체센터 계약단가 평균
     --, (SELECT ITEM_CD AS ITEM_CODE 
     -- 		  ,ROUND(AVG(ITEM_PRICE),0) AS ITEM_PRICE
	 --	FROM EPROCUSR.ESPINFO
 	 --		WHERE SYS_ID = '100'
   	 --			AND COMP_CD = 'HFC'
   	 --			AND TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN APPLY_SD AND APPLY_ED 
   	 --		GROUP BY ITEM_CD
     --    ) X
     , (
        SELECT ITEM_CODE
             , ITEM_NAME
             , ITEM_SIZE
             , PO_UOM
             , KG_CONVERT_RATE
             -- 표준에서는 어떻게 가져올지 추후 협의가 필요. 일단은 모두 'N'로 표시(센터별 기준업장으로 보여줄지는 협의가 필요) (2015.08.29)
             , 'N'  AS PB_YN
             , MANUF_CD
             , ECO_ITEM
             , (SELECT CASE WHEN COUNT(1) > 0 THEN 'Y' ELSE 'N' END
				  FROM FSI_DUTY_MST
				 WHERE ITEM_CODE = A.ITEM_CODE
				   AND TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN START_DATE AND END_DATE
				   AND USE_YN = 'Y') AS DUTY_YN
          FROM HLDC_PO_ITEM_MST A
         WHERE ITEM_CLASS1 = 'F'
       ) C
     , FSI_ITEM_NUT D
     , (SELECT RESTRICT_SEQ, ITEM_CODE,RESTRICT_START,RESTRICT_END,RESTRICT_REASON
          FROM FSI_RESTRICT_MST
         WHERE TO_CHAR(SYSDATE,'YYYYMMDD') BETWEEN RESTRICT_START AND RESTRICT_END
           AND USE_YN = 'Y'
       ) E
 WHERE A.ITEM_CODE = B.ITEM_CODE(+)
   AND A.ITEM_CODE = C.ITEM_CODE
   AND A.ITEM_CODE = D.ITEM_CODE(+)
   AND A.ITEM_CODE = E.ITEM_CODE(+)
   AND A.ITEM_CODE = X.ITEM_CODE(+)
   AND A.RECIPE_CD = #RECIPE_CD#
 ORDER BY ITEM_SEQ	]]></statement>
	<input default-name="ds_cond">
	</input>
	<output default-name="ds_ItemList">
	</output>
</query>
