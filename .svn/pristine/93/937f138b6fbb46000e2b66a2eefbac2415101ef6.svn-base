<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="ft.fsi.whbyItembyChargAmtDAO">
    <desc>창고, 품목별로 보관료. HQML Query</desc>

    <!-- 창고, 품목별로 보관료. 창고목록을 조회한다. -->
    <statement name="selectList" type="select">
        /*+ com.hwfs.ft.fsi.dao.WhbyItembyChargAmtDAO.selectList */
        <![CDATA[

        SELECT B.VD_CD WH_CD
              ,B.VD_NM_LOC WH_NM
              ,B.BIZ_REG_NO BIZ_NO          /*사업자번호*/
              ,scc_crypto.DEC_FUN(B.PHONE_NO) TELNO           /*전화번호*/
              ,B.DTL_ADDR_1_LOC ADDR            /*주소*/
              ,scc_crypto.DEC_FUN(B.FAX_NO) FAX_NO           /*전화번호*/
              ,(SELECT LISTAGG (REM) WITHIN GROUP (ORDER BY VD_SN )  FROM EPROCUSR.ESMVDCP T WHERE T.VD_SN = B.VD_SN ) AS REM
              ,(SELECT LISTAGG (CHR_NM) WITHIN GROUP (ORDER BY VD_SN )  FROM EPROCUSR.ESMVDCP T WHERE T.VD_SN = B.VD_SN ) AS INCHARGE    /*담당자*/
              ,(SELECT LISTAGG (SCC_TELNO_SAUPNO_EXPR('TELNO', SCC_CRYPTO.DEC_FUN(CHR_PHONE_NO)), ',') WITHIN GROUP (ORDER BY VD_SN )  FROM EPROCUSR.ESMVDCP T WHERE T.VD_SN = B.VD_SN ) AS INCHARGE_TELNO /*담당자연락처*/
        FROM (SELECT WH_CD FROM WHBY_ITEMBY_CHARG_AMT GROUP BY WH_CD ) A
             ,EPROCUSR.ESMVDFW B
        WHERE  1=1
        AND A.WH_CD(+) = B.VD_CD
        AND B.CUS_VD_CLS(+) IN ('10', '50')
        AND B.VD_STS = 'C'
        AND B.VD_CD IN (
            SELECT B.VD_CD
            FROM   WHBY_ITEMBY_CHARG_AMT A
                  ,EPROCUSR.ESMVDFW B
                  ,HLDC_PO_ITEM_MST C
            WHERE 1=1
            AND A.WH_CD(+) = B.VD_CD
            AND B.CUS_VD_CLS(+) IN ('10', '50')
            AND B.VD_STS = 'C'
            AND A.ITEM_CD = C.ITEM_CODE(+)
            <#if whNm?has_content>
                AND B.VD_NM_LOC LIKE '%'||:whNm||'%'
            </#if>
            <#if itemNm?has_content>
                AND C.ITEM_NAME LIKE '%'||:itemNm||'%'
            </#if>
        )
        ORDER BY B.VD_NM_LOC DESC
        ]]>
    </statement>

    <!-- 창고, 품목별로 보관료. 상세 목록을 조회한다2. -->
    <statement name="selectList2" type="select">
        /*+ com.hwfs.ft.fsi.dao.WhbyItembyChargAmtDAO.selectList2 */
        <![CDATA[
        SELECT
               0 CHK,
               A.WH_CD,
               B.VD_NM_LOC WH_NM,
               A.ITEM_CD,
               A.ITEM_CD AS ORG_ITEM_CD,
               C.ITEM_NAME ITEM_NM,
               A.CHARGCOST_TYPE,		/*보관료 유형*/
               A.CHARG_COST,			/*보관 비용*/
               A.IOUT_COST,			/*입출고 비용*/
               (SELECT X.NM_KOR FROM SCC_USERINFO X WHERE X.SABUN = A.CUSER) AS CUSER,
               A.CDATE,
               (SELECT X.NM_KOR FROM SCC_USERINFO X WHERE X.SABUN = A.UUSER) AS UUSER,
               A.UDATE
        FROM   WHBY_ITEMBY_CHARG_AMT A
              ,EPROCUSR.ESMVDFW B
              ,HLDC_PO_ITEM_MST C
        WHERE 1=1
        AND A.WH_CD = B.VD_CD(+)
        AND B.CUS_VD_CLS IN ('10', '50')
        AND A.ITEM_CD = C.ITEM_CODE(+)
        AND B.VD_STS = 'C'
        <#if whCd?has_content>
            AND A.WH_CD LIKE '%'||:whCd||'%'		/* 차후 엠로 창고 테이블의 창고명으로 */
        </#if>
        <#if whNm?has_content>
            AND B.VD_NM_LOC LIKE '%'||:whNm||'%'
        </#if>
        <#if itemNm?has_content>
            AND C.ITEM_NAME LIKE '%'||:itemNm||'%'
        </#if>
        ORDER BY A.WH_CD, A.ITEM_CD, A.CHARGCOST_TYPE DESC
        ]]>
    </statement>

    <!-- 창고, 품목별로 보관료.(을)를 등록한다. -->
    <statement name="insert" type="insert">
        /*+ com.hwfs.ft.fsi.dao.WhbyItembyChargAmtDAO.insert */
        <![CDATA[
        INSERT INTO WHBY_ITEMBY_CHARG_AMT
        (
         WH_CD,
         ITEM_CD,
         CHARGCOST_TYPE,
         CHARG_COST,
         IOUT_COST,
         DEL_YN,
         CUSER,
         CDATE,
         UUSER,
         UDATE
        ) VALUES (
         :whCd,
         :itemCd,
        <#if chargcostType?exists> :chargcostType, <#else> null, </#if>
        <#if chargCost?exists> :chargCost, <#else> null, </#if>
        <#if ioutCost?exists> :ioutCost, <#else> null, </#if>
        <#if delYn?exists> DECODE(:delYn, '1', 'Y', 'N'), <#else> null, </#if>
         :loginSabun,
         SYSDATE,
         :loginSabun,
         SYSDATE
        )
        ]]>
    </statement>

    <!-- 창고, 품목별로 보관료.(을)를 수정한다. -->
    <statement name="update" type="update">
        /*+ com.hwfs.ft.fsi.dao.WhbyItembyChargAmtDAO.update */
        <![CDATA[
        UPDATE WHBY_ITEMBY_CHARG_AMT SET
        <#if chargcostType?exists> ITEM_CD = :itemCd, </#if>
        <#if chargcostType?exists> CHARGCOST_TYPE = :chargcostType, </#if>
        <#if chargCost?exists> CHARG_COST = :chargCost, </#if>
        <#if ioutCost?exists> IOUT_COST = :ioutCost, </#if>
        <#if delYn?exists> DEL_YN = DECODE(:delYn, '1', 'Y', 'N'), </#if>
               UUSER = :loginSabun,
               UDATE = SYSDATE
        WHERE  WH_CD = :whCd
        AND    ITEM_CD = :orgItemCd
        ]]>
    </statement>

    <!-- 창고, 품목별로 보관료.(을)를 삭제한다. -->
    <statement name="delete" type="delete">
        /*+ com.hwfs.ft.fsi.dao.WhbyItembyChargAmtDAO.delete */
        <![CDATA[
        DELETE
        FROM   WHBY_ITEMBY_CHARG_AMT
        WHERE  WH_CD = :whCd
        AND    ITEM_CD = :itemCd
        ]]>
    </statement>

   <!-- 창고, 품목별로 보관료(을)를 등록한다. -->
    <statement name="mergeGvrntaxRate" type="insert">
        /*+ com.hwfs.ft.fsi.dao.GvrntaxRateMgmtDAO.mergeGvrntaxRate */
        <![CDATA[
            MERGE INTO WHBY_ITEMBY_CHARG_AMT
            USING
            (
                SELECT COUNT(*) CNT
                FROM   WHBY_ITEMBY_CHARG_AMT
                WHERE  WH_CD = :whCd
                AND    ITEM_CD = :itemCd
                AND    CHARGCOST_TYPE =:unit
            ) T
            ON (T.CNT > 0)
            WHEN MATCHED THEN
                UPDATE
                SET   CHARG_COST =:chargCost
                     ,IOUT_COST=:ioutCost
                WHERE WH_CD = :whCd
                AND   ITEM_CD = :itemCd
                AND   CHARGCOST_TYPE = :unit
            WHEN NOT MATCHED THEN
                INSERT
                (
                   WH_CD,
                   ITEM_CD,
                   CHARGCOST_TYPE,
                   CHARG_COST,
                   IOUT_COST,
                   DEL_YN,
                   CUSER,
                   CDATE,
                   UUSER,
                   UDATE
              )
              VALUES
              (
                  :whCd,
                  :itemCd,
                  :unit,
                  :chargCost,
                  :ioutCost,
                  'N',
                  :loginSabun,
                  SYSDATE,
                  :loginSabun,
                  SYSDATE
              )
        ]]>
    </statement>
</hqml>
