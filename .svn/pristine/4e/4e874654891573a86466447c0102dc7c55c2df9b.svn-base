<?xml version="1.0" encoding="utf-8"?>
<FDL version="1.4">
  <TypeDefinition url="..\default_typedef.xml"/>
  <Form id="WorkFrame" classname="WORK" inheritanceid="" position="absolute 0 0 1267 740" scrollbars="none" onload="WorkFrame_onload" onclose="WorkFrame_onclose" class="frm_WF_Work" onbeforeclose="WorkFrame_onbeforeclose" style="showeffect:ta_show;" onactivate="WorkFrame_onactivate">
    <Layouts>
      <Layout>
        <ActiveX id="msie" position="absolute 15 15 1252 725" progid="{8856F961-340A-11D0-A96B-00C04FD705A2}" popupstyle="true" windowed="true" anchor="all" taborder="1" visible="false"/>
        <Div id="div_work" taborder="1" position="absolute 16 16 1268 741" visible="true" anchor="all" asyncmode="false"/>
        <Static id="Static06" text="w15" visible="false" position="absolute 0 15 15 740" class="Guide01"/>
        <Static id="Static71" text="h15" visible="false" position="absolute 0 0 1267 15" class="Guide01"/>
        <Static id="Static00" text="15" class="Guide01" visible="false" position="absolute 1252 0 1267 630"/>
        <Static id="Static01" text="h15" class="Guide01" visible="false" position="absolute 0 725 1267 740"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="ds_cmnAuth" firefirstcount="0" firenextcount="0" useclientlayout="false" updatecontrol="true" enableevent="true" loadkeymode="keep" loadfiltermode="keep" reversesubsum="false">
        <ColumnInfo>
          <Column id="srcYn" type="STRING" size="256" sumtext="조회"/>
          <Column id="insYn" type="STRING" size="256" sumtext="추가"/>
          <Column id="delYn" type="STRING" size="256" sumtext="삭제"/>
          <Column id="savYn" type="STRING" size="256" sumtext="저장"/>
          <Column id="prtYn" type="STRING" size="256" sumtext="출력"/>
          <Column id="exlYn" type="STRING" size="256" sumtext="엑셀"/>
          <Column id="persInfoYn" type="STRING" size="256"/>
          <Column id="adminYn" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript4.0"><![CDATA[/*
  화 면 명 : 업무공통화면
  파 일 명 : workFrame.xfdl
  기    능 : 업무 공통 화면

    수정일    수정자                  수정내용
  ----------   -------  --------------------------------------------------
  2014.11.01   김윤기   최초 생성
  2015.07.10   kksoo     외부시스템(전사구매) 연동을 위해 변경
*/

/************************************************************************************************
 * 공통 라이브러리 INCLUDE 영역 (필수)
************************************************************************************************/
include "lib::lib_com.xjs";
include "U_lib::lib_conversionCom.xjs";

/************************************************************************************************
 * FORM 변수 선언 영역 (필수)
************************************************************************************************/
var _fv_formUrl;
var _fv_menuId;
var _fv_menuNm;
var _fv_formPre;

var _fv_nScrollGap = 0;

/************************************************************************************************
 * FORM EVENT 영역 (필수)
************************************************************************************************/
/*-----------------------------------------------------------------------
 * 설명        : Form Load
 *-----------------------------------------------------------------------*/
function WorkFrame_onload(obj:Form, e:LoadEventInfo) 
{
//trace("WorkFrame - WorkFrame_onload");
    /*
    [화면 생성 시 넘겨주는 파라미터]
    ARG_FORM_URL  - 화면 경로
    ARG_MENU_ID   - 메뉴 아이디
    ARG_MENU_NM   - 메뉴 명
    ARG_MENU_PATH - 메뉴 전체 경로
    */
    
    fsp_init(this);
    
    _fv_menuId    = parent.arguments["ARG_MENU_ID"];
    _fv_menuNm    = parent.arguments["ARG_MENU_NM"];
    _fv_formPre   = parent.arguments["ARG_FORM_PREFIX"];
    _fv_formUrl   = parent.arguments["ARG_FORM_URL"];

    // 기존 웹화면 로드
    if ( _fv_formUrl.indexOf(".jsp") > 0 || _fv_formUrl.indexOf(".html") > 0 || _fv_formUrl.indexOf("http://") >= 0 ) 
    {        
        fn_LoadWorkWeb(_fv_formUrl);
    } 
    // 업무화면로드
    else {        
        fn_LoadWork(_fv_formPre + "::" + _fv_formUrl);
    }
    
    if ( gds_openPage.findRow(gv_menuIdCol, _fv_menuId) < 0 ) 
    {
        var strPageId = this.getOwnerFrame().name;
        
        // Open 정보 추가
        var nRow = gds_openPage.addRow();
        gds_openPage.setColumn(nRow, gv_menuNameCol, _fv_menuNm);
        gds_openPage.setColumn(nRow, gv_menuIdCol, _fv_menuId);
        gds_openPage.setColumn(nRow, "formId", strPageId);
        gds_openPage.setColumn(nRow, "prgId", _fv_formUrl);
        gds_openPage.setColumn(nRow, "svcGroup", _fv_formPre);
        gds_openPage.setColumn(nRow, "openTime", fn_CurrDateWeek("ymdtm"));
        
        // Title Tab 추가
        afrm_Tab.form.fn_AddTitle(strPageId, _fv_menuNm);
    }
}

/*-----------------------------------------------------------------------
 * 설명    : Form beforeClose 이벤트
 *-----------------------------------------------------------------------*/
function WorkFrame_onbeforeclose(obj:Form, e:CloseEventInfo) 
{    
    // Form Close 전에 화면 내 ActiveX를 먼저 제거(메모리 누수 방지)
    var compList = this.div_work.components;
    for ( var i=0; i<compList.length; i++ ) {
        if ( compList[i] instanceof ActiveX ) {
            this.div_work.all[compList[i].name].progid = "";
            this.div_work.all[compList[i].name].destroy();
        }
    }
}

/*-----------------------------------------------------------------------
 * 설명    : Form Close 이벤트
 *-----------------------------------------------------------------------*/
function WorkFrame_onclose(obj:Form, e:CloseEventInfo) 
{
    // tab메뉴 삭제.
    afrm_Tab.form.fn_DelTitle(this.getOwnerFrame().name);

    // msie url 초기화(닫기 alert 발생)
    msie.Navigate("");
   
    // 폼을 닫으면서 gds_openPage 있는 메뉴 삭제.
    var v_FormId = this.getOwnerFrame().name;    
    var fRow = gds_openPage.findRow("formId", v_FormId);
    gds_openPage.deleteRow(fRow);
    
    // 열린 화면이 모두 닫히면
    if(afrm_Tab.form.tab_WorkTitle.getTabpageCount() == 0 && !afrm_Intro.visible) 
    {
        afrm_MDI.visible = false;
        afrm_Intro.visible = true;      
		afrm_Tab.form.tab_WorkTitle.class  = "tab_MDI_S";
		afrm_Tab.form.btn_home.class       = "btn_MDI_HomeS";
    }
}

/*-----------------------------------------------------------------------
 * 설명    : Form activate 이벤트
 *-----------------------------------------------------------------------*/
function WorkFrame_onactivate(obj:Form, e:ActivateEventInfo) 
{
    // Arrange후 화면 이동시 MDI Tab 포커스 이동.
    afrm_Tab.form.fn_activeTitle(this.getOwnerFrame().name);
}


/************************************************************************************************
 * FORM 공통 FUNCTION 영역
************************************************************************************************/
/*-----------------------------------------------------------------------
 * 설명    : 업무화면로드
 *-----------------------------------------------------------------------*/
function fn_LoadWork(strUrl) 
{
//trace("WorkFrame - fn_LoadWork");
    try {
		// 공통버튼 권한 조회 및 접근로깅 처리
		fn_getCmnAuth(); //김재섭 -> lib_form으로 이동됨.
		
		//관리자가 접속이 가능한 PC의 IP인지를 판단한다.
		/*
		if (ds_cmnAuth.getColumn(0, "authApplyYn") == "Y" && ds_cmnAuth.getColumn(0, "adminYn") == "Y") {
			var isAdminPage = false;
			var ipAddress = gv_manageAllowIp.split(",");
			
			for (var i=0,len=ipAddress.length; i<len; i++) {
				if (gv_ipAddr == gfn_trim(ipAddress[i])) {
					isAdminPage = true;
				}
			}
			
			if (isAdminPage == false) {
				gfn_alert("허용된 PC에서만 접근 가능한 프로그램입니다.");
				this.close();
				return;
			}
		}
		*/
		
        //div_work.asyncmode = false;
        div_work.url       = strUrl;
        //div_work.asyncmode = true;

		// 공통버튼에 Title 적용
		objCmnBtm = this.div_work.components["div_cmnBtn"];
		if(!gfn_isNull(objCmnBtm)) 
		{
			objCmnBtm.fn_setTitle(_fv_menuNm + " (" + _fv_formPre + "::" + _fv_formUrl + ")");
			objCmnBtm.tabstop = false;
			
			//개인정보유무를 타이틀에 표시 by kksoo
			objCmnBtm.fn_setPersInfoTitle(ds_cmnAuth.getColumn(0, "persInfoYn"));
		}
	
        div_work.setFocus();
	
        // 화면간 interface Arg 존재시 호출
        var arrArg = gfn_getScreenParams();
        
        if (!gfn_isNull(arrArg)) 
        {
			try {
				div_work.fn_getScreenParams(arrArg);
			}
			catch(e) {}
        }       
    } 
    catch(e) {
        trace(e.message + e.description);
    }
}

/*-----------------------------------------------------------------------
 * 설명    : 업무화면로드
 *-----------------------------------------------------------------------*/
function fn_LoadWorkWeb(strUrl) 
{
	//구매연동을 위해 수정 by kksoo
    try 
    {		
		div_work.visible   = false;
		
		// http full 경로 입력시
		if(strUrl.indexOf("http://") != -1)  
		{
			this.msie.Navigate2(strUrl);
		}
		// 상태경로 입력시
		else {
			//호출 Url을 생성한다.
			var strEprocUrl = SCSysIf.makeEprocUrl (strUrl, true);
			this.msie.Navigate2(strEprocUrl);	//Get 방식으로 호출하며 세션은 공유하지 않는다.
			
			/*
			//헤더정보를 설정한다.
			var headers="";
			headers+="Content-Type: application/x-www-form-urlencoded\r\n";
			headers+="Accept: text/html\r\n";

			// Post방식으로 MSIE 값 전달		
			var buf=new Buffer("JSESSIONID="+JSESSIONID);		
			this.msie.Navigate(gv_webRoot+strUrl,0,"_self",buf.data,headers,"gh=ko");
			*/
		}
	    this.msie.visible = true;
    } catch(e) {
        trace(e.message + e.description);
    }
}

/*-----------------------------------------------------------------------
 * 설명    : ChildFrame 닫기 함수
 *-----------------------------------------------------------------------*/
function fn_close() 
{
    try {
        if (this.div_work.fn_close() == true) {
            this.close();
            return true;
        } else {
            return false;
        }
    } catch (e) {
        this.close();
        return true;
    }
}

/*-----------------------------------------------------------------------
 * 설명    : 메뉴ID 구하기
 *-----------------------------------------------------------------------*/
function fn_getMenuId() 
{
    return _fv_menuId;
}

/*-----------------------------------------------------------------------
 * 설명    : 메뉴명 구하기
 *-----------------------------------------------------------------------*/
function fn_getMenuName() 
{
    return _fv_menuNm;
}

/************************************************************************************************
 * TRANSACTION 및 추가 FUNCTION 영역
************************************************************************************************/
/*-----------------------------------------------------------------------
 * 설명    : 공통버튼 권한 조회 및 접근로깅 처리
 *-----------------------------------------------------------------------*/
function fn_getCmnAuth() 
{
//trace("WorkFrame - fn_getCmnAuth");
	var menuId = 0;
	
	if (gfn_isNum(_fv_menuId))
	{
		menuId = _fv_menuId;
	}
	else
	{
		menuId = parent.arguments["ARG_PARENT_MENU_ID"];
	}
	
    var strSvcID     = "getCmnAuth";
    var strURL       = "sc/cmn/authority/selectPgmAuth.xdo";
    var strInDs      = "";
    var strOutDs     = "ds_cmnAuth=dsOutput";
    var strArg       = "menuId="+menuId;
    var strCallback  = "fn_callBack";
    var bAsync       = false;	
    var bProgress    = false;
    
    gfn_transaction(this, strSvcID, strURL, strInDs, strOutDs, strArg, strCallback, bAsync, bProgress);
}

/*----------------------------------------------------------------------------------------------
 * 설명      : 트랜잭션 콜백 함수 (필수)
 *---------------------------------------------------------------------------------------------*/
function fn_callBack(strSvcID, nErrorCode, strErrorMsg)
{
	// 에러시 gfn_callBack에서 메시지 제공, 화면별 특정 에러 발생시에만 사용하세요.
	if (nErrorCode < 0) 
	{
		return;
	}
	
    switch(strSvcID)
    {
		// 권한 조회
        case "getCmnAuth" :
			
//trace("WorkFrame - fn_callBack - getCmnAuth");
			//trace("AAAAA");
			//trace(ds_cmnAuth.saveXML());
// 			var dsCmnAuth = new Dataset();
// 			dsCmnAuth.id = "ds_cmnAuth";
// 			dsCmnAuth.name = "ds_cmnAuth";
// 			dsCmnAuth.addColumn("delYn", "STRING", 1);
// 			dsCmnAuth.addColumn("exlYn", "STRING", 1);
// 			dsCmnAuth.addColumn("insYn", "STRING", 1);
// 			dsCmnAuth.addColumn("prtYn", "STRING", 1);
// 			dsCmnAuth.addColumn("savYn", "STRING", 1);
// 			dsCmnAuth.addColumn("srcYn", "STRING", 1);
// 			dsCmnAuth.addColumn("persInfoYn", "STRING", 1);
// 
//  			dsCmnAuth.copyData(ds_cmnAuth);
// 			
// 			//권한적용후 이 부분을 해제한다.
//  			this.div_work.removeChild("ds_cmnAuth");
//  			this.div_work.addChild("ds_cmnAuth", dsCmnAuth);
// 			this.div_work.div_cmnBtn.fn_setUseBtn(dsCmnAuth);

            break;
    }
}

/************************************************************************************************
 * 각 COMPONENT 별 EVENT 영역
************************************************************************************************/

]]></Script>
  </Form>
</FDL>
