<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml"
	name="fm.fmc.claimRegDAO">
	<desc>클레임요청 HQML Query</desc>

	<!-- 해당 업장의 창고를 조회한다. -->
	<statement name="selectSubinv" type="select">
		/*+ com.hwfs.fm.fmc.dao.ClaimRegDAO.selectSubinv */
		<![CDATA[
		SELECT
        	    A.SUBINV_CODE,											/*창고코드*/
        	    CASE WHEN SUBSTR(A.SUBINV_CODE, 1, 1) = 'C' THEN '1'
        	    ELSE '2' END AS ORDR,									/*순서정렬용*/
            	A.SUBINV_CODE || ' ' || A.SUBINV_NAME AS SUBINV_NAME	/*창고명*/
        FROM 	VO_SUBINVENTORY A INNER JOIN ST_UPJANG B ON A.UPJANG = B.UPJANG
        WHERE   A.USE_YN != 'N'
        <#if schUpjang?has_content> 
        AND	    A.UPJANG = :schUpjang 
        </#if>
        <#if schSubinv?has_content> 
        AND	    (A.SUBINV_CODE || ' ' || A.SUBINV_NAME) LIKE :schSubinv
        </#if>
        ORDER 	BY ORDR ASC, A.SUBINV_CODE ASC
        
		]]>
	</statement>



	<!-- Mobile 사진 목록을 조회한다. -->
	<statement name="selectMobile" type="select">
		/*+ com.hwfs.fm.fmc.dao.ClaimRegDAO.selectMobile */
		<![CDATA[
		SELECT                           
		      (SELECT REF_SEQ FROM SCC_APPEND_FILE A, SCZ_PHOTO_IMGSEND B
		      WHERE A.REF_SEQ = :refSeq AND A.SAVE_FILE_NM = B.FILE_NM ) AS REF_SEQ     	/*파일번호*/   	                            
		     , 0 AS APPEND_SEQ                                 								/*파일순서*/
		     , FILE_NM AS ORGNL_FILE_NM                                						/*원본 파일명*/
		     , FILE_NM AS SAVE_FILE_NM                                    					/*저장 파일명*/
		     , REL_PATH       																/*저장 경로*/
		     , FILE_SIZE																	/*파일 크기*/
		     , SUBSTR(FILE_NM, INSTR(FILE_NM, '.', -1)+1, LENGTH(FILE_NM)) AS FILE_EXT      /*파일 확장자*/                        
		     , BIGO AS FILE_DESC                  											/*비고*/
		     , RGST_SEQ                                            							/*등록 순번*/
		  FROM SCZ_PHOTO_IMGSEND    
		 WHERE  GUBUN = 07
		   AND  TO_CHAR(CDATE, 'YYYYMMDD') = :schDate	
		   AND  UPJANG = :schUpjang	
		]]>
	</statement>




	<!-- PC 사진 목록을 조회한다. -->
	<statement name="selectPC" type="select">
		/*+ com.hwfs.fm.fmc.dao.ClaimRegDAO.selectPC */
		<![CDATA[
		SELECT PO_ID,			/*주문번호*/
		       PO_NUM,			/*주문번호*/
		       CLAIM_NUM,		/*클레임번호*/
		       CENTER_CODE,		/*센터코드*/
		       UPJANG,			/*사업장코드*/
		       SUBINV_CODE,		/*창고코드*/
		       ITEM_CODE,		/*상품코드*/
		       ITEM_NAME,		/*상품명*/
		       ITEM_SIZE,		/*상품규격*/
		       FILE_ID,			/*공통파일 ID (REF_SEQ)*/
		       ORGNL_IMGE,		/*원본이미지*/
		       SVR_IMGE,		/*서버이미지*/
		       FILE_SIZE,		/*파일크기*/
		       (SELECT NM_KOR FROM SCC_USERINFO WHERE SABUN = CUSER) AS CNAME,	/*작성자명*/
		       CDATE,			/*작성일자*/
		       CUSER,			/*작성자*/
		       UUSER,			/*수정자*/
		       UDATE			/*수정일자*/
		FROM   FMC_CLAIM_PHOTO_MNGT	
		WHERE  PO_ID = :poId
		AND    PO_NUM = :poNum
		AND    CLAIM_NUM = :claimNum
		]]>
	</statement>

	<!-- PC 사진 목록을 입력한다. -->
	<statement name="insertPC" type="insert">
		/*+ com.hwfs.fm.fmc.dao.ClaimRegDAO.insertPC */
		<![CDATA[
	INSERT INTO FMC_CLAIM_PHOTO_MNGT
	(
	 PO_ID,			/*주문번호*/
	 PO_NUM,		/*주문번호*/
	 CLAIM_NUM,		/*클레임번호*/
	 CENTER_CODE,	/*창고코드*/
	 UPJANG,		/*사업장*/
	 SUBINV_CODE,	/*창고코드*/
	 ITEM_CODE,     /*상품코드*/
	 ITEM_NAME,     /*상품명*/
	 ITEM_SIZE,     /*상품규격*/
	 FILE_ID,       /*공통코드ID (REF_SEQ)*/
	 ORGNL_IMGE,    /*원본이미지*/
	 SVR_IMGE,      /*서버이미지*/
	 FILE_SIZE,     /*파일크기*/
	 CDATE,         /*작성일자*/
	 CUSER,         /*작성자*/
	 UUSER,         /*수정자*/
	 UDATE          /*수정일자*/
	) VALUES (
	 :poId,
	 :poNum,
	 :claimNum,
	<#if centerCode?has_content> :centerCode, <#else> null, </#if>
	<#if upjang?has_content> :upjang, <#else> null, </#if>
	<#if subinvCode?has_content> :subinvCode, <#else> null, </#if>
	<#if itemCode?has_content> :itemCode, <#else> null, </#if>
	<#if itemName?has_content> :itemName, <#else> null, </#if>
	<#if itemSize?has_content> :itemSize, <#else> null, </#if>
	<#if refSeq?has_content> :refSeq, <#else> null, </#if>
	<#if orgnlImge?has_content> :orgnlImge, <#else> null, </#if>
	<#if svrImge?has_content> :svrImge, <#else> null, </#if>
	<#if fileSize?has_content> :fileSize, <#else> null, </#if>
	 SYSDATE,
	 :loginSabun,
	 :loginSabun,
	 SYSDATE
	)
		]]>
	</statement>

	<!-- PC 사진 목록을 수정한다. -->
	<statement name="updatePC" type="update">
		/*+ com.hwfs.fm.fmc.dao.ClaimRegDAO.updatePC */
		<![CDATA[
	UPDATE FMC_CLAIM_PHOTO_MNGT SET
	<#if centerCode?has_content> CENTER_CODE = :centerCode, </#if>
	<#if upjang?has_content> UPJANG = :upjang, </#if>
	<#if subinvCode?has_content> SUBINV_CODE = :subinvCode, </#if>
	<#if itemCode?has_content> ITEM_CODE = :itemCode, </#if>
	<#if itemName?has_content> ITEM_NAME = :itemName, </#if>
	<#if itemSize?has_content> ITEM_SIZE = :itemSize, </#if>
	<#if refSeq?has_content> FILE_ID = :refSeq, </#if>
	<#if orgnlImge?has_content> ORGNL_IMGE = :orgnlImge, </#if>
	<#if svrImge?has_content> SVR_IMGE = :svrImge, </#if>
	<#if fileSize?has_content> FILE_SIZE = :fileSize, </#if>
	       UUSER = :loginSabun,
	       UDATE = SYSDATE
	WHERE  PO_ID = :poId
	AND    PO_NUM = :poNum
	AND	   CLAIM_NUM = :claimNum
		]]>
	</statement>

	<!-- PC 사진 목록을 삭제한다. -->
	<statement name="deletePC" type="delete">
		/*+ com.hwfs.fm.fmc.dao.ClaimRegDAO.deletePC */
		<![CDATA[
	DELETE
	FROM   FMC_CLAIM_PHOTO_MNGT
	WHERE  PO_ID = :poId
	  AND  PO_NUM = :poNum
	  AND  CLAIM_NUM = :claimNum
	]]>
	</statement>

	<!-- 클레임요청 목록을 조회한다. -->
	<statement name="selectList" type="select"><![CDATA[
        SELECT /* fm.fmc.claimRegDAO.selectList */
               0 AS CHECKED      /*체크박스*/
             , NVL(A.CLAIM_NUM,1) CLAIM_NUM /* 클레임SEQ */
             , B.ITEM_CODE      /*상품코드*/
             , B.ITEM_NAME      /*상품명*/
             , B.ITEM_SIZE      /*상품규격*/
             , B.PO_UOM         /*단위*/
             , B.CUSTCD         /*고객사*/
             , B.RC_MU_CD       /*사업부*/
             , (SELECT /*+ USE_NL(C) PUSH_PRED(C.ATTH) PUSH_PRED(C.ACC)  */ VD_NM FROM VO_FC_VENDOR WHERE VD_CD = B.CUSTCD AND ROWNUM =1) AS CUSTNM   /*고객사명*/
             , B.PO_QTY         /*발주량*/
             , NVL(A.REQ_QTY,0) AS REQ_QTY   /*요청량*/
             , B.DELIVERED_QTY  AS DLVY_QTY  /*입고수량*/
             , B.SALE_PRICE       /* 판매단가 */
             , TRIM(A.CT_CLAIM_KIND) AS CT_CLAIM_KIND /*클레임유형*/
             , A.REQ_DATE       /*입고요청일자*/
             , A.REQ_TIME       /*입고요청시간*/
             , TRIM(A.REQ_KIND) AS REQ_KIND      /*요청사항*/
             , A.CLAIM_MEMO     /*클레임상세내역*/
             , A.PRCS_STATUS    /*진행상황 C00*/
             , DECODE(A.CLAIM_NUM,'','I','C') SAVE_FLAG
           --, A.ETC_MEMO       /*기타사항*/
             , A.DLVY_KIND      /*입고상황(입고예정,입고완료)*/
             , A.CREATE_BY      /*생성자*/
             , A.MOBILE_GUBUN   /*모바일구분(P:PC,M:모바일)*/
             , (SELECT COUNT(1) FROM FMC_CLAIM_PHOTO_MNGT C WHERE A.PO_NUM = C.PO_NUM AND  A.PO_ID = C.PO_ID AND A.CLAIM_NUM = C.CLAIM_NUM) AS PHOTO        /*사진 유무*/
             , B.PO_ID          /*주문번호*/
             , B.PO_NUM         /*주문번호 항번*/
             , B.CENTER_CODE    /*센터코드*/
             , B.SUBINV_CODE    /*창고코드*/
             , (SELECT SUBINV_NAME FROM VO_SUBINVENTORY E WHERE B.SUBINV_CODE = E.SUBINV_CODE) SUBINV_NAME  /*창고명*/
             , B.RC_UPJANG AS UPJANG  /*입고업장 코드*/
             , CASE WHEN E.BU_CD = '2000' AND E.MU_CD ='2004' 
                         AND (E.TM_CD LIKE 'CI%' OR E.DEPT_ID IN (SELECT CODE FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'BRAND_UPJANG_POP_ETC') ) THEN 'Y'
                    ELSE 'N'
                END AS BRAND_UPJANG_YN  /* 브랜드 업장 여부 */
             , B.NEED_DATE      /*입고희망일자*/
             , B.CENTER_FLAG AS CENTER_GUBUN
             , NVL((SELECT CLS_FLAG FROM HLDC_PO_CLOSING C WHERE CLS_YM >= TRIM(SUBSTR(A.NEED_DATE,0,6)) AND SUBINV_CODE = A.SUBINV_CODE AND C.CLS_FLAG = 'Y' AND ROWNUM =1),'N') AS CLS_FLAG
             , A.REQ_SABUN     /*요청자*/
             , (SELECT NM_KOR FROM HR_PERSONAL WHERE SABUN = A.REQ_SABUN) REQ_SABUN_NM    /* 요청자명 */
             , NVL((SELECT 'Y' FROM MAS_TICKET_MST T WHERE T.UPJANG = B.RC_UPJANG AND T.ITEM_CODE = B.ITEM_CODE GROUP BY UPJANG,ITEM_CODE),'N') TICKET_YN   /*    식권 여부   */
             , B.LINE_STATUS
             , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FM0037' AND CODE = B.LINE_STATUS) LINE_STATUS_NM
             , TO_CHAR(A.UPDATE_DATE,'YYYY-MM-DD HH24:MI:SS') AS UDATE
             , C.GRP_CD EPRO_FILE_GRP
             , DECODE(B.SORTER_YN, 'N', 'N', 'Y') AS SORTER_YN
             , NVL(B.WM_CANCEL_YN, 'N') AS WM_CANCEL_YN
          FROM PO_CLAIM_LIST A
             , HLDC_PO_PO B
             , ( SELECT A.LEGCY_REQ_NO, A.LEGCY_REQ_LNO, B.PO_NO,B.PO_LNO, B.GRP_CD
                   FROM EPROCUSR.ESPPODT A,
                        EPROCUSR.ESPPODT_ESAATTH B
                  --    EPROCUSR.ESAATTH C
                  WHERE A.SYS_ID = B.SYS_ID
                    AND A.COMP_CD = B.COMP_CD
                    AND A.PO_NO = B.PO_NO
                    AND A.PO_LNO = B.PO_LNO
                 -- AND B.SYS_ID = C.SYS_ID
                 -- AND B.GRP_CD = C.GRP_CD
                    AND A.SYS_ID = '100'
                    AND A.COMP_CD = 'HFC'
                 -- AND C.STS <> 'D'
               ) C
               --GROUP BY B.PO_NO,B.PO_LNO,C.GRP_CD) C
             , FMS_UPJANG       D
             , HLDC_SC_DEPT_V   E
         WHERE 1=1
           AND B.PO_ID               = A.PO_ID(+)
           AND B.PO_NUM              = A.PO_NUM(+)
           AND B.PO_ID               = C.LEGCY_REQ_LNO(+)
           AND B.PO_NUM              = C.LEGCY_REQ_NO(+)
           AND B.PO_ID              IS NOT NULL
           AND B.PO_NUM             IS NOT NULL
           AND B.LINE_STATUS        IN ('PD','GC')
           AND B.CLAIM_YN            = 'Y'
           AND B.RC_UPJANG           = D.UPJANG(+)
           AND D.DEPT_ID             = E.CC_CD(+)
           <#if schUpjang?has_content>
           AND TO_NUMBER(B.RC_UPJANG) = :schUpjang
           </#if>
           <#if schSubinCode?has_content>
           AND B.SUBINV_CODE = :schSubinCode
           </#if>
           <#if schDate1?has_content>
           AND B.NEED_DATE BETWEEN :schDate1 AND :schDate2
           </#if>
           <#if schItemNm?has_content>
           AND B.ITEM_NAME LIKE '%'||:schItemNm||'%'
           </#if>
         ORDER BY B.PO_NUM DESC , B.PO_ID , A.CLAIM_NUM
		]]></statement>
		
    <!-- 클레임요청 목록을 조회한다. -->
    <!-- [PJT]주문채널통합 -->
    <statement name="selectBrandList" type="select"><![CDATA[
        SELECT /* fm.fmc.claimRegDAO.selectBrandList */
               0 AS CHECKED      /*체크박스*/
             , NVL(A.CLAIM_NUM,1) CLAIM_NUM /* 클레임SEQ */
             , B.ITEM_CODE      /*상품코드*/
             , D.WIN_ITEM_CD    /*바코드*/
             , B.ITEM_NAME      /*상품명*/
             , B.ITEM_SIZE      /*상품규격*/
             , B.PO_UOM         /*단위*/
             , B.CUSTCD         /*고객사*/
             , B.RC_MU_CD       /*사업부*/
             , (SELECT /*+ USE_NL(C) PUSH_PRED(C.ATTH) PUSH_PRED(C.ACC)  */ VD_NM FROM VO_FC_VENDOR WHERE VD_CD = B.CUSTCD AND ROWNUM =1) AS CUSTNM   /*고객사명*/
             , B.PO_QTY         /*발주량*/
             , NVL(A.REQ_QTY,0) AS REQ_QTY   /*요청량*/
             , B.DELIVERED_QTY  AS DLVY_QTY  /*입고수량*/
             , B.SALE_PRICE       /* 판매단가 */
             , TRIM(A.CT_CLAIM_KIND) AS CT_CLAIM_KIND /*클레임유형*/
             , A.REQ_DATE       /*입고요청일자*/
             , A.REQ_TIME       /*입고요청시간*/
             , TRIM(A.REQ_KIND) AS REQ_KIND      /*요청사항*/
             , A.CLAIM_MEMO     /*클레임상세내역*/
             , A.PRCS_STATUS    /*진행상황 C00*/
             , DECODE(A.CLAIM_NUM,'','I','C') SAVE_FLAG
           --, A.ETC_MEMO       /*기타사항*/
             , A.DLVY_KIND      /*입고상황(입고예정,입고완료)*/
             , A.CREATE_BY      /*생성자*/
             , A.MOBILE_GUBUN   /*모바일구분(P:PC,M:모바일)*/
             , (SELECT COUNT(1) FROM FMC_CLAIM_PHOTO_MNGT C WHERE A.PO_NUM = C.PO_NUM AND  A.PO_ID = C.PO_ID AND A.CLAIM_NUM = C.CLAIM_NUM) AS PHOTO        /*사진 유무*/
             , B.PO_ID          /*주문번호*/
             , B.PO_NUM         /*주문번호 항번*/
             , B.CENTER_CODE    /*센터코드*/
             , B.SUBINV_CODE    /*창고코드*/
             , (SELECT SUBINV_NAME FROM VO_SUBINVENTORY E WHERE B.SUBINV_CODE = E.SUBINV_CODE) SUBINV_NAME  /*창고명*/
             , B.RC_UPJANG AS UPJANG  /*입고업장 코드*/
             , B.NEED_DATE      /*입고희망일자*/
             , B.CENTER_FLAG AS CENTER_GUBUN
             , NVL((SELECT CLS_FLAG FROM HLDC_PO_CLOSING C WHERE CLS_YM >= TRIM(SUBSTR(A.NEED_DATE,0,6)) AND SUBINV_CODE = A.SUBINV_CODE AND C.CLS_FLAG = 'Y' AND ROWNUM =1),'N') AS CLS_FLAG
             , A.REQ_SABUN     /*요청자*/
             , (SELECT NM_KOR FROM HR_PERSONAL WHERE SABUN = A.REQ_SABUN) REQ_SABUN_NM    /* 요청자명 */
             , NVL((SELECT 'Y' FROM MAS_TICKET_MST T WHERE T.UPJANG = B.RC_UPJANG AND T.ITEM_CODE = B.ITEM_CODE GROUP BY UPJANG,ITEM_CODE),'N') TICKET_YN   /*    식권 여부   */
             , B.LINE_STATUS
             , (SELECT CODE_NAME FROM SCC_COMMON_CODE WHERE GROUP_CODE = 'FM0037' AND CODE = B.LINE_STATUS) LINE_STATUS_NM
             , TO_CHAR(A.UPDATE_DATE,'YYYY-MM-DD HH24:MI:SS') AS UDATE
             , C.GRP_CD EPRO_FILE_GRP
             , DECODE(B.SORTER_YN, 'N', 'N', 'Y') AS SORTER_YN
             , NVL(B.WM_CANCEL_YN, 'N') AS WM_CANCEL_YN
          FROM PO_CLAIM_LIST A
             , HLDC_PO_PO B
             , ( SELECT A.LEGCY_REQ_NO, A.LEGCY_REQ_LNO, B.PO_NO,B.PO_LNO, B.GRP_CD
                   FROM EPROCUSR.ESPPODT A,
                        EPROCUSR.ESPPODT_ESAATTH B
                  --    EPROCUSR.ESAATTH C
                  WHERE A.SYS_ID = B.SYS_ID
                    AND A.COMP_CD = B.COMP_CD
                    AND A.PO_NO = B.PO_NO
                    AND A.PO_LNO = B.PO_LNO
                 -- AND B.SYS_ID = C.SYS_ID
                 -- AND B.GRP_CD = C.GRP_CD
                    AND A.SYS_ID = '100'
                    AND A.COMP_CD = 'HFC'
                 -- AND C.STS <> 'D'
               ) C
               --GROUP BY B.PO_NO,B.PO_LNO,C.GRP_CD) C
             , EPROCUSR.ESMMTGL D
         WHERE 1=1
           AND B.PO_ID               = A.PO_ID(+)
           AND B.PO_NUM              = A.PO_NUM(+)
           AND B.PO_ID               = C.LEGCY_REQ_LNO(+)
           AND B.PO_NUM              = C.LEGCY_REQ_NO(+)
           AND B.PO_ID              IS NOT NULL
           AND B.PO_NUM             IS NOT NULL
           AND B.LINE_STATUS        IN ('PD','GC')
           AND B.CLAIM_YN            = 'Y'
           AND D.SYS_ID              = '100'
           AND B.ITEM_CODE           = D.ITEM_CD(+)
           AND ( /* 브랜드 클레임만 나오도록 */
                    TRIM(A.CT_CLAIM_KIND) IS NULL
                 OR EXISTS (SELECT 1
                               FROM SCC_COMMON_CODE X
                              WHERE X.GROUP_CODE = 'C05'
                                AND X.CODE       = TRIM(A.CT_CLAIM_KIND)
                                AND X.USE_YN     = 'Y'
                                AND X.SET5       = '브랜드'
                            )
                )
           <#if schUpjang?has_content>
           AND TO_NUMBER(B.RC_UPJANG) = :schUpjang
           </#if>
           <#if schSubinCode?has_content>
           AND B.SUBINV_CODE = :schSubinCode
           </#if>
           <#if schDate1?has_content>
           AND B.NEED_DATE BETWEEN :schDate1 AND :schDate2
           </#if>
           <#if schItemNm?has_content>
           AND B.ITEM_NAME LIKE '%'||:schItemNm||'%'
           </#if>
         ORDER BY B.PO_NUM DESC , B.PO_ID , A.CLAIM_NUM
        ]]></statement>

	<!-- 공통코드를 조회한다. -->
	<statement name="commonList" type="select">
		/*+ com.hwfs.fm.fmc.dao.ClaimRegDAO.commonList */
		<![CDATA[
	SELECT GROUP_CODE,
	       CODE,
	       CODE_NAME
	FROM   SCC_COMMON_CODE
	WHERE  GROUP_CODE IN('C00','C01','C02')
	AND    USE_YN = 'Y'
	ORDER BY GROUP_CODE, SORT_SEQ, CODE
			]]>
	</statement>

	<!-- 공통코드를 조회한다. -->
	<statement name="claimStatus" type="select">
		/*+ com.hwfs.fm.fmc.dao.ClaimRegDAO.claimStatus */
		<![CDATA[
		SELECT PRCS_STATUS FROM PO_CLAIM_LIST
		WHERE PO_ID = :poId AND PO_NUM = :poNum AND CLAIM_NUM = :claimNum
		]]>
	</statement>



	<!-- 클레임요청(을)를 수정한다. -->
	<statement name="update" type="update">
		/*+ com.hwfs.fm.fmc.dao.ClaimRegDAO.update */
		<![CDATA[
		UPDATE PO_CLAIM_LIST 
		   SET REQ_QTY      = :reqQty
		      ,CT_CLAIM_KIND   = :ctClaimKind 
		      ,REQ_KIND     = :reqKind
		      ,CLAIM_MEMO   = :claimMemo
		      ,REQ_DATE     = SUBSTR(:reqDate,1,8)
		      ,REQ_TIME     = SUBSTR(:reqTime,1,4)
		      --,ETC_MEMO     = :etcMemo
		      ,NEED_DATE_EDIT = :needDate
			  ,PRCS_STATUS = :prcsStatus
			  ,UPDATE_BY	= :loginSabun
			  ,UPDATE_DATE	= SYSDATE
		 WHERE PO_ID = :poId
		   AND PO_NUM = :poNum
		   AND CLAIM_NUM = :claimNum
		]]>
	</statement>

	<!-- 클레임요청(을)를 입력한다. -->
	<statement name="insert" type="insert">
		/*+ com.hwfs.fm.fmc.dao.ClaimRegDAO.insert */
		<![CDATA[
		INSERT INTO PO_CLAIM_LIST
          (PO_ID,PO_NUM,CLAIM_NUM,CENTER_GUBUN,NEED_DATE,CENTER_CODE,UPJANG,SUBINV_CODE,CUSTCD,
           ITEM_CODE,ITEM_NAME,ITEM_SIZE,PO_UOM,PO_QTY,DLVY_QTY,UNDLVY_QTY,REQ_QTY,
           CT_CLAIM_KIND,REQ_KIND,REQ_DATE,REQ_TIME,DLVY_KIND,
           CLAIM_MEMO,PRCS_STATUS,MNG_SABUN,MNG_DATE,REQ_SABUN,ACP_DATE,
           CREATE_DATE,CREATE_BY, MOBILE_GUBUN, UPDATE_BY, UPDATE_DATE
          ) VALUES (
           :poId,
           :poNum,
           :claimNum,
           :centerGubun,
           :needDate,
           :centerCode,
           :upjang,
           :subinvCode,
           :custcd,
           :itemCode,
           :itemName,
           :itemSize,
           :poUom,
           :poQty,
           <#if dlvyQty?has_content> :dlvyQty, <#else> null, </#if>
           <#if undlvyQty?has_content> :undlvyQty, <#else> null, </#if>
           <#if reqQty?has_content>:reqQty,<#else> 0, </#if>
           :ctClaimKind,
           :reqKind,
           :reqDate,
           :reqTime,
           :dlvyKind,
           :claimMemo,
           <#if prcsStatus?has_content>:prcsStatus,:loginSabun,SYSDATE,<#else>'01',NULL,NULL,</#if>
           :loginSabun,
           SYSDATE,
           SYSDATE,
           :loginSabun, 
           :mobileGubun,
           :loginSabun,
           SYSDATE
          )

		]]>
	</statement>

	<!-- 클레임요청(을)를 삭제한다. -->
	<statement name="delete" type="delete">
		/*+ com.hwfs.fm.fmc.dao.ClaimRegDAO.delete */
		<![CDATA[
		DELETE 
		FROM   PO_CLAIM_LIST 
		WHERE  PO_ID = :poId
		  AND  PO_NUM = :poNum
		  AND  CLAIM_NUM =:claimNum
		]]>
	</statement>

	<!-- 자재별 재고량 확인. -->
	<statement name="itemQty" type="select">
		/*+ com.hwfs.fm.fmc.dao.ClaimRegDAO.itemQty */
		<![CDATA[
		SELECT A.PO_ID
		     , A.PO_NUM
		     , A.SUBINV_CODE
		     , A.ITEM_CODE
		     , A.RC_UPJANG
		     ,(SELECT UPJANGNM FROM ST_UPJANG C WHERE C.UPJANG = A.RC_UPJANG) UPJANG_NM
		     , EPROCUSR.FC_GET_FCUS_CLAIM_QTY_YN(A.PO_NUM,A.PO_ID,A.SUBINV_CODE,A.ITEM_CODE,:reqQty) CLAIM_QTY
		     , A.ITEM_NAME
		     , A.ITEM_SIZE
		  FROM HLDC_PO_PO A 
		 WHERE A.PO_ID = :poId
		   AND A.PO_NUM = :poNum
		]]>
	</statement>

	<!-- 해당 업장의 창고를 조회한다. -->
	<statement name="selectItemQty" type="select">
		/*+ com.hwfs.fm.fmc.dao.ClaimRegDAO.selectItemQty */
		<![CDATA[
		SELECT
        	    A.SUBINV_CODE,											/*창고코드*/
        	    CASE WHEN SUBSTR(A.SUBINV_CODE, 1, 1) = 'C' THEN '1'
        	    ELSE '2' END AS ORDR,									/*순서정렬용*/
            	A.SUBINV_CODE || ' ' || A.SUBINV_NAME AS SUBINV_NAME	/*창고명*/
        FROM 	VO_SUBINVENTORY A INNER JOIN ST_UPJANG B ON A.UPJANG = B.UPJANG
        WHERE   A.USE_YN != 'N'
        <#if schUpjang?has_content> 
        AND	    A.UPJANG = :schUpjang 
        </#if>
        <#if schSubinv?has_content> 
        AND	    (A.SUBINV_CODE || ' ' || A.SUBINV_NAME) LIKE :schSubinv
        </#if>
        ORDER 	BY ORDR ASC, A.SUBINV_CODE ASC
        
		]]>
	</statement>

	<!-- 클레임 중복 등록 여부를 확인 한다. -->
	<statement name="claiminsertYn" type="select">
		/*+ com.hwfs.fm.fmc.dao.ClaimRegDAO.claiminsertYn */
		<![CDATA[
			SELECT COUNT(*) CNT FROM PO_CLAIM_LIST
			WHERE PO_ID = :poId
			AND PO_NUM = :poNum
			ANd CLAIM_NUM = :claimNum
		]]>
	</statement>

	<!-- 식권 클레임 가능 여부를 확인한다.  /  클레임 저장전이므로 dual 을 사용. -->
	<statement name="ticketFlag" type="select">
		/*+ com.hwfs.fm.fmc.dao.ClaimRegDAO.ticketFlag */
		<![CDATA[
			SELECT FMS_CLAIM_CHK_FUN(:upjang,:itemCode) FROM dual
		]]>
	</statement>

	<!-- 요청 취소 클레임 저장. -->
	<statement name="claimHistorySave" type="update">
		/*+ com.hwfs.fm.fmc.dao.ClaimRegDAO.claimHistorySave */
		<![CDATA[	
			INSERT 
			  INTO PO_CLAIM_LIST_HIST
			       ( 
			           PO_ID
			         ,PO_NUM
			         ,NEED_DATE
			         ,CENTER_CODE
			         ,UPJANG
			         ,SUBINV_CODE
			         ,CUSTCD
			         ,ITEM_CODE
			         ,ITEM_NAME
			         ,ITEM_SIZE
			         ,PO_UOM
			         ,PO_QTY
			         ,DLVY_QTY
			         ,UNDLVY_QTY
			         ,REQ_QTY
			         ,CLAIM_KIND
			         ,REQ_KIND
			         ,REQ_DATE
			         ,REQ_TIME
			         ,CLAIM_MEMO
			         ,ETC_MEMO
			         ,CT_KIND
			         ,CT_MEMO
			         ,PT_KIND
			         ,DLVY_TIME
			         ,DLVY_KIND
			         ,PRCS_STATUS
			         ,CT_CLAIM_KIND
			         ,PT_MEMO
			         ,LINK_DEPT
			         ,ACP_DATE
			         ,MNG_DATE
			         ,MNG_SABUN
			         ,UPJANG_AREA
			         ,PROD_KIND
			         ,PART_TM_CD
			         ,PART_SABUN
			         ,CLAIM_REMARK
			         ,NEED_DATE_EDIT
			         ,PROC_QTY
			         ,PROC_AMT
			         ,CONFIRM_DATE
			         ,RESULT_CD
			         ,RESULT_MSG
			         ,MOBILE_GUBUN
			         ,CENTER_GUBUN
			         ,REQ_SABUN
			         ,CREATE_DATE
			         ,CREATE_BY
			         ,UPDATE_DATE
			         ,UPDATE_BY
			         ,TRANS_DATE 
			       ) 
			       
			SELECT A.PO_ID,
			       A.PO_NUM,
			       A.NEED_DATE,
			       A.CENTER_CODE,
			       A.UPJANG,
			       A.SUBINV_CODE,
			       A.CUSTCD,
			       A.ITEM_CODE,
			       A.ITEM_NAME,
			       A.ITEM_SIZE,
			       A.PO_UOM,
			       A.PO_QTY,
			       A.DLVY_QTY,
			       A.UNDLVY_QTY,
			       A.REQ_QTY,
			       A.CLAIM_KIND,
			       A.REQ_KIND,
			       A.REQ_DATE,
			       A.REQ_TIME,
			       A.CLAIM_MEMO,
			       A.ETC_MEMO,
			       A.CT_KIND,
			       A.CT_MEMO,
			       A.PT_KIND,
			       A.DLVY_TIME,
			       A.DLVY_KIND,
			       :prcsStatus PRCS_STATUS,
			       A.CT_CLAIM_KIND,
			       A.PT_MEMO,
			       A.LINK_DEPT,
			       A.ACP_DATE,
			       A.MNG_DATE,
			       A.MNG_SABUN,
			       A.UPJANG_AREA,
			       A.PROD_KIND,
			       A.PART_TM_CD,
			       A.PART_SABUN,
			       A.CLAIM_REMARK,
			       A.NEED_DATE_EDIT,
			       A.PROC_QTY,
			       A.PROC_AMT,
			       A.CONFIRM_DATE,
			       A.RESULT_CD,
			       A.RESULT_MSG,
			       A.MOBILE_GUBUN,
			       A.CENTER_GUBUN,
			       A.REQ_SABUN,
			       A.CREATE_DATE,
			       A.CREATE_BY,
			       SYSDATE UPDATE_DATE,
			       :loginSabun UPDATE_BY,
			       A.TRANS_DATE
			  FROM PO_CLAIM_LIST A
			  WHERE A.PO_ID = :poId
			  AND A.PO_NUM = :poNum
			  AND A.CLAIM_NUM = :claimNum
			]]>
	</statement>
</hqml>

