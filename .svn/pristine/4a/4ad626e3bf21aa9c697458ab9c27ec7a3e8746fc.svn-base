<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement> 
 SELECT  DEPT_ID
         ,(SELECT CC_NM FROM HLDC_SC_DEPT_V WHERE DEPT_ID = V.DEPT_ID) 부서명
         ,PART_SALES_SABUN 
         ,(SELECT NM_KOR FROM HLDC_HR_PERSONAL WHERE SABUN = V.PART_SALES_SABUN) PART_SALES_SABUNNM
         ,MAIN_UPJANG 
         ,(SELECT UPJANGNM_DISP||'('||UPJANG||')' FROM FMS_UPJANG WHERE UPJANG = V.MAIN_UPJANG) MAIN_UPJANGNM
         ,UPJANG
         ,(SELECT UPJANGNM FROM SCO_UPJANG_MST_V WHERE UPJANG = V.UPJANG) UPJANGNM
         ,NVL((SELECT CREDIT_TURN_DAYS FROM FMS_UPJANG WHERE UPJANG = V.UPJANG), 0) 여신회전일
         ,(SELECT HEAD_CREDIT_YN FROM FMS_UPJANG WHERE UPJANG = V.UPJANG) HEAD_CREDIT_YN
         ,SUM(CURR_MACHUL) CURR_MACHUL			--매출실적
         ,SUM(BEFORE_JANAMT) BEFORE_JANAMT		--전월잔고
         ,SUM(CURR_MACHUL_PLUS_BEFORE_JANAMT) CURR_MACHUL_PLUS_BEFORE_JANAMT  -- 실적+전월잔고
         ,SUM(CURR_RCP_AMT)CURR_RCP_AMT			--당월입금
         ,SUM(CURR_JANAMT) CURR_JANAMT			--당월잔고
         ,SUM(MI_BOND_AMT) MI_BOND_AMT			--미도래채권
         ,SUM(DO_BOND_AMT) DO_BOND_AMT			--도래채권
         ,SUM(AK_BOND_AMT) AK_BOND_AMT			--악성채권
         ,NVL(SUM(MI_BOND_AMT), 0) + NVL(SUM(DO_BOND_AMT), 0) +  NVL(SUM(AK_BOND_AMT), 0) BOND_TOTAL_AMT
  FROM (
        SELECT  B.DEPT_ID, B.PART_SALES_SABUN, B.MAIN_UPJANG, B.UPJANG
                ,SUM(CURR_AMT) CURR_MACHUL                                                   --매출실적
                ,SUM(BEFORE_CURR_AMT - BEFORE_CURR_RCP_AMT) BEFORE_JANAMT                                --전월잔고
                ,SUM(CURR_AMT + (BEFORE_CURR_AMT - BEFORE_CURR_RCP_AMT)) CURR_MACHUL_PLUS_BEFORE_JANAMT  --실적PULS전월잔고
                ,SUM(CURR_RCP_AMT) CURR_RCP_AMT                                              --당월입금
                ,SUM((CURR_AMT + (BEFORE_CURR_AMT - BEFORE_CURR_RCP_AMT)) - CURR_RCP_AMT) CURR_JANAMT    --당월잔고
                ,0 MI_BOND_AMT
                ,0 DO_BOND_AMT
                ,0 AK_BOND_AMT
        FROM   (SELECT  UPJANG_CD
                        ,SUM(CURR_AMT) CURR_AMT
                        ,SUM(CURR_RCP_AMT) CURR_RCP_AMT
                        ,SUM(BEFORE_CURR_AMT) BEFORE_CURR_AMT
                        ,SUM(BEFORE_CURR_RCP_AMT) BEFORE_CURR_RCP_AMT
                FROM (
                        SELECT  UPJANG_CD
                                ,SUM(CURR_AMT) CURR_AMT
                                ,SUM(CURR_RCP_AMT) CURR_RCP_AMT
                                ,0 BEFORE_CURR_AMT
                                ,0 BEFORE_CURR_RCP_AMT
                        FROM    /*이번달 매출실적*/
                               (SELECT UPJANG_CD 
							     ,SUM(M.OCCUR_AMT) AS CURR_AMT --선수금_매출실적 
							     ,(SELECT NVL(SUM(D.APPLY_AMT),0) 
							         FROM SLA_ADVANCE_ALT_DETAIL D 
							        WHERE D.ALT_DATE  BETWEEN SUBSTR(#TRX_DATE#, 1,6)||'01' AND TO_CHAR(SYSDATE, 'YYYYMMDD') 
							              AND D.RECD_STATUS='L' 
							              AND D.ADVANCE_NUM=M.ADVANCE_NUM
							       ) AS CURR_RCP_AMT      
							  FROM SLA_ADVANCE_MST M  
							 WHERE  M.RECD_STATUS='L' 
							       AND M.SYS_CLASS='13' 
							       AND M.OCCUR_DATE BETWEEN SUBSTR(#TRX_DATE#, 1,6)||'01' AND TO_CHAR(SYSDATE, 'YYYYMMDD') 
							 GROUP BY UPJANG_CD ,M.ADVANCE_NUM
							    UNION ALL
							SELECT UPJANG_CD 
							     ,     SUM(M.AR_AMT) AS CURR_AMT --채권_매출실적 
								 ,(SELECT NVL(SUM(V1.RECEIVE_AMT),0) 
							         FROM SLA_AR_RECEIVE_DETAIL V1 
							        WHERE V1.RECEIVE_DATE BETWEEN SUBSTR(#TRX_DATE#, 1,6)||'01' AND TO_CHAR(SYSDATE, 'YYYYMMDD') 
							              AND V1.RECD_STATUS='L' 
							              AND V1.AR_NUM=M.AR_NUM
							       ) AS CURR_RCP_AMT       
							  FROM SLA_AR_MST M  
							 WHERE M.RECD_STATUS='L' 
							       AND M.SYS_CLASS='13' 
							       AND M.OCCUR_DATE BETWEEN SUBSTR(#TRX_DATE#, 1,6)||'01' AND TO_CHAR(SYSDATE, 'YYYYMMDD') 
							 GROUP BY UPJANG_CD ,M.AR_NUM )
                        GROUP BY UPJANG_CD
                        UNION ALL                         
                        SELECT  UPJANG_CD
                                ,0 AS CURR_AMT
                                ,0 AS CURR_RCP_AMT  
                                ,SUM(BEFORE_CURR_AMT) BEFORE_CURR_AMT
                                ,SUM(BEFORE_CURR_RCP_AMT) BEFORE_CURR_RCP_AMT
                        FROM    /*전월까지 매출실적*/
                               (SELECT UPJANG_CD 
									     ,0                AS CURR_AMT 
									     ,0                AS CURR_RCP_AMT 
									     ,SUM(M.OCCUR_AMT) AS BEFORE_CURR_AMT --선수금_전월까지매출실적 
									     ,
									       (SELECT NVL(SUM(D.APPLY_AMT),0) 
									         FROM SLA_ADVANCE_ALT_DETAIL D 
									        WHERE D.ALT_DATE BETWEEN '19000101' AND TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-1), 'YYYYMM')||'31' 
									              AND D.RECD_STATUS='L' 
									              AND D.ADVANCE_NUM=M.ADVANCE_NUM
									       ) AS BEFORE_CURR_RCP_AMT 
									  FROM SLA_ADVANCE_MST M 
									 WHERE M.RECD_STATUS='L' 
									       AND M.SYS_CLASS='13' 
									       AND M.OCCUR_DATE BETWEEN '19000101' AND TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-1), 'YYYYMM')||'31' 
									 GROUP BY UPJANG_CD ,ADVANCE_NUM
									    UNION ALL
									SELECT UPJANG_CD             
									     ,0 AS CURR_AMT             
									     ,0 AS CURR_RCP_AMT 
									     ,SUM(M.AR_AMT) AS BEFORE_CURR_AMT --채권_전월까지매출실적 
									     , (SELECT NVL(SUM(V1.RECEIVE_AMT),0) 
									         FROM SLA_AR_RECEIVE_DETAIL V1 
									        WHERE V1.RECEIVE_DATE BETWEEN '19000101' AND TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-1), 'YYYYMM')||'31' 
									              AND V1.RECD_STATUS='L' 
									              AND V1.AR_NUM=M.AR_NUM
									       ) AS BEFORE_CURR_RCP_AMT 
									  FROM SLA_AR_MST M 
									 WHERE M.RECD_STATUS='L' 
									       AND M.SYS_CLASS='13' 
									       AND M.OCCUR_DATE BETWEEN '19000101' AND TO_CHAR(ADD_MONTHS(TO_DATE(#TRX_DATE#, 'YYYYMMDD'),-1), 'YYYYMM')||'31' 
									 GROUP BY UPJANG_CD,AR_NUM  )
                        GROUP BY UPJANG_CD
                     )   
                    GROUP BY UPJANG_CD
                ) V
                ,FMS_UPJANG B
                ,HLDC_SC_DEPT_V D
        WHERE   (V.UPJANG_CD(+)      = B.UPJANG)
        AND    B.DEPT_ID = D.CC_CD
		<isNotNull col="TM_CD">
        AND   (D.TM_CD              = #TM_CD#)
        </isNotNull>                        
        <isNotNull col="MAIN_UPJANG">                
        AND   (B.MAIN_UPJANG          = #MAIN_UPJANG#)
        </isNotNull>     
		<isNotNull col="UPJANG">                
        AND   (B.UPJANG          = #UPJANG#)
        </isNotNull>        
        <isNotNull col="PART_SALES_SABUN">    
        AND   (B.PART_SALES_SABUN     = #PART_SALES_SABUN#)
        </isNotNull>  
        GROUP BY B.DEPT_ID, B.PART_SALES_SABUN, B.MAIN_UPJANG, B.UPJANG
    UNION
        SELECT  DEPT_ID, PART_SALES_SABUN, MAIN_UPJANG, UPJANG
               ,0 CURR_MACHUL
               ,0 BEFORE_JANAMT
               ,0 CURR_MACHUL_PLUS_BEFORE_JANAMT
               ,0 CURR_RCP_AMT
               ,0 CURR_JANAMT,
               SUM(DECODE(V.DUE_GUBUN, '미도래채권', BAL_AMT, 0))             MI_BOND_AMT,
               SUM(DECODE(V.DUE_GUBUN, '도래채권',   BAL_AMT, 0))             DO_BOND_AMT,
               SUM(DECODE(V.DUE_GUBUN, '악성채권',   BAL_AMT, 0))             AK_BOND_AMT
        FROM (
              SELECT DEPT_ID, PART_SALES_SABUN, MAIN_UPJANG, UPJANG,
                     DUE_GUBUN,
                     BAL_AMT
                FROM (
                      SELECT B.DEPT_ID, B.PART_SALES_SABUN, B.MAIN_UPJANG, B.UPJANG,
                             V.AR_AMT AMT,
                             V.OCCUR_DATE                  BOND_DATE,
                             (CASE WHEN #TRX_DATE# &gt;  DECODE(C.PAY_GUBUN_CD, '999', TO_CHAR(ADD_MONTHS(LAST_DAY(TO_DATE(V.OCCUR_DATE, 'YYYYMMDD')),1),'YYYYMMDD'), TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(C.PAY_GUBUN_CD) + 1), 'YYYYMM')||
                                                   LEAST(TO_CHAR(LAST_DAY(TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(C.PAY_GUBUN_CD) + 1), 'YYYYMMDD'), 'YYYYMMDD')), 'DD'), LPAD(C.PAY_DATE, 2, '0'))
                                                   ) THEN
                                        '악성채권'
                                   WHEN #TRX_DATE# &lt;=  DECODE(C.PAY_GUBUN_CD, '999', TO_CHAR(ADD_MONTHS(LAST_DAY(TO_DATE(V.OCCUR_DATE, 'YYYYMMDD')),1),'YYYYMMDD'), TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(C.PAY_GUBUN_CD) + 1), 'YYYYMM')||
                                                   LEAST(TO_CHAR(LAST_DAY(TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(C.PAY_GUBUN_CD) + 1), 'YYYYMMDD'), 'YYYYMMDD')), 'DD'), LPAD(C.PAY_DATE, 2, '0'))
                                                   ) AND
                                        #TRX_DATE# &gt; DECODE(C.PAY_GUBUN_CD, '999', TO_CHAR(LAST_DAY(TO_DATE(V.OCCUR_DATE, 'YYYYMMDD')),'YYYYMMDD'), TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(C.PAY_GUBUN_CD)), 'YYYYMM')||
                                                   LEAST(TO_CHAR(LAST_DAY(TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(C.PAY_GUBUN_CD)), 'YYYYMMDD'), 'YYYYMMDD')), 'DD'), LPAD(C.PAY_DATE, 2, '0'))
                                                   ) THEN
                                        '도래채권'
                                   WHEN #TRX_DATE# &lt;=  DECODE(C.PAY_GUBUN_CD, '999', TO_CHAR(LAST_DAY(TO_DATE(V.OCCUR_DATE, 'YYYYMMDD')),'YYYYMMDD'), TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(C.PAY_GUBUN_CD)), 'YYYYMM')||
                                                   LEAST(TO_CHAR(LAST_DAY(TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(SUBSTR(V.OCCUR_DATE, 1, 6), 'YYYYMM'), TO_NUMBER(C.PAY_GUBUN_CD)), 'YYYYMMDD'), 'YYYYMMDD')), 'DD'), LPAD(C.PAY_DATE, 2, '0'))
                                                   ) THEN
                                        '미도래채권' END) DUE_GUBUN,
                             (SELECT NVL(SUM(V1.RECEIVE_AMT), 0) FROM SLA_AR_RECEIVE_DETAIL V1 WHERE V1.RECD_STATUS = 'L' AND V1.RECEIVE_DATE BETWEEN '19000101' AND #TRX_DATE# AND V1.AR_NUM = V.AR_NUM) BAL_AMT   
                        FROM SLA_AR_MST V,
                             FMS_UPJANG B,
                             (SELECT UPJANG,
                                       MAX(PAY_GUBUN_CD) AS PAY_GUBUN_CD,
                                       MAX(PAY_DATE) AS PAY_DATE
                                FROM SCO_UPJANG_CUST
                                GROUP BY UPJANG) C,
                             HLDC_SC_DEPT_V D
                      WHERE  (V.UPJANG_CD(+)         = B.UPJANG)
                      AND    (B.UPJANG            = C.UPJANG)
                      AND    (V.OCCUR_DATE(+)  BETWEEN '19000101' AND #TRX_DATE#)
                      --AND    (V.CLOSING_YN(+)    = 'Y')
                      AND    B.DEPT_ID = D.CC_CD
						<isNotNull col="TM_CD">
		                AND   (D.TM_CD              = #TM_CD#)
		                </isNotNull>                      
		                <isNotNull col="MAIN_UPJANG">                
		                AND   (B.MAIN_UPJANG          = #MAIN_UPJANG#)
		                </isNotNull>     
		                <isNotNull col="UPJANG">                
		                AND   (B.UPJANG          = #UPJANG#)
		                </isNotNull>
		                <isNotNull col="PART_SALES_SABUN">    
		                AND   (B.PART_SALES_SABUN     = #PART_SALES_SABUN#)
		                </isNotNull>  
                      )
                GROUP BY DEPT_ID, PART_SALES_SABUN, MAIN_UPJANG, UPJANG,BOND_DATE,DUE_GUBUN,BAL_AMT
                )V
        GROUP BY DEPT_ID, PART_SALES_SABUN, MAIN_UPJANG, UPJANG
	)V
  GROUP BY DEPT_ID, PART_SALES_SABUN, MAIN_UPJANG, UPJANG
         
</statement>
	<input default-name="ds_cond">
	  <col name="TM_CD" size="255" type="VARCHAR" description="" /> 
		<col name="MAIN_UPJANG" size="6" type="NUMERIC" description="업장코드" /> 
		<col name="UPJANG" size="255" type="VARCHAR" description="" /> 
		<col name="TRX_DATE" size="255" type="VARCHAR" description="" /> 
		<col name="chk_0" size="255" type="VARCHAR" description="" /> 
	</input>
	<output default-name="ds_list">   


	</output>
</query>	