<?xml version="1.0" encoding="UTF-8"?>
<hqml xmlns="http://hone.hanwha.co.kr/schema/hqml" name="fm.fms.foodMaterialsSalePriceDAO">
	<desc>식자재영업 판매단가 생성 HQML Query</desc>

	<!-- 식자재영업 센터별 고객사 목록을 조회한다.(이전) -->
	<statement name="selectUpjang_old" type="select">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.selectUpjang_old */
		<![CDATA[
		SELECT  A.UPJANG, 
					'(' || A.UPJANG | |')' || B.UPJANGNM AS UPJANG_NM
  		FROM HLDC_PO_UPJANG_CENTER A  INNER JOIN ST_UPJANG B ON  B.CUSTCD > 0
  																							  AND B.AP_UNITPRICE_UPJANG IS NOT NULL
  																							  AND A.UPJANG = B.UPJANG
		 WHERE A.CENTER_CODE = :schCenter
   		 AND    A.USE_YN = 'Y'
		<#if schCode?has_content>
		AND     A.UPJANG LIKE '%' || :schCode || '%'
		</#if>
		<#if schName?has_content>
		 AND    B.UPJANGNM LIKE  '%' || :schName || '%'			
		</#if>
		ORDER BY 2 ASC
		]]>
	</statement>

	<!-- 식자재영업 센터별 고객사 목록을 조회한다.(변경) -->
	<statement name="selectUpjang" type="select">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.selectUpjang */
		<![CDATA[
		SELECT  A.UPJANG, 
					'(' || A.UPJANG | |')' || B.UPJANGNM AS UPJANG_NM
  		FROM HLDC_PO_UPJANG_CENTER A  INNER JOIN ST_UPJANG B ON  B.CUSTCD > 0
  																							  AND A.UPJANG = B.UPJANG
  																							  AND B.UPJANG = B.AP_UNITPRICE_UPJANG
  									  INNER JOIN FMS_UPJANG C ON  A.UPJANG = C.UPJANG
  									  														AND C.USE_YN = 'Y' 
		 WHERE A.CENTER_CODE = :schCenter
   		 AND    A.USE_YN = 'Y'
		<#if schCode?has_content>
		AND     A.UPJANG LIKE '%' || :schCode || '%'
		</#if>
		<#if schName?has_content>
		 AND    B.UPJANGNM LIKE  '%' || :schName || '%'			
		</#if>
		<#if partSalesSabun?has_content>
		 AND C.PART_SALES_SABUN = :partSalesSabun			
		</#if>
		ORDER BY 2 ASC
		]]>
	</statement>
	
	<statement name="selectUpjang2" type="select">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.selectUpjang2 */
		<![CDATA[
		SELECT  A.UPJANG, '(' || A.UPJANG | |')' || A.UPJANGNM AS UPJANG_NM
		FROM ST_UPJANG A, FMS_UPJANG B, EPROCUSR.ESPSSHPORG C
			WHERE C.WH_CNTR_CD = :schCenter
			AND A.UPJANG = B.UPJANG(+)
			AND A.UPJANG = C.SHOP_CD
			AND C.SYS_ID = '100'
			AND C.COMP_CD = 'HFC'
			AND C.OPER_ORG_SN <> 580 
			AND NVL(B.USE_YN, 'Y') = 'Y'
			<#if schCode?has_content>
				AND     A.UPJANG LIKE '%' || :schCode || '%'
			</#if>
			<#if schName?has_content>
		 		AND    A.UPJANGNM LIKE  '%' || :schName || '%'			
			</#if>
			<#if partSalesSabun?has_content>
		 		AND B.PART_SALES_SABUN = :partSalesSabun			
			</#if>
			ORDER BY 2 ASC
		]]>
	</statement>


	<!-- 식자재영업 고객사별 계약번호 목록을 조회한다. -->
	<statement name="selectContract_old" type="select">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.selectContract */
		<![CDATA[
		SELECT
				X.CONTRACT_ID,
       			X.CONTRACT_ID || ' [' || X.REMARK || ']' AS CONTRACT_DISP,
       			X.REMARK AS CONTRACT_NM,
       			X.CONTRACT_START,
       			X.CONTRACT_END,
       			'1' AS ORDR
		FROM 
				(
				SELECT /*+ INDEX(PO_CONTRACT_FSALE PO_CONTRACT_FSALE_PK) */
			   			CONTRACT_ID, 
			   			MAX(REMARK) AS REMARK,
			   			CONTRACT_START,
			   			MIN(CONTRACT_END) CONTRACT_END
				FROM PO_CONTRACT_FSALE
 				WHERE CENTER_CODE = :schCenter
   				AND    UPJANG = :schUpjang
				AND    ITEM_CODE > ' '
            	GROUP BY CONTRACT_ID, CONTRACT_START 
            	) X
         UNION ALL
         SELECT
                'NEW',
                '신규생성',
                '',
                TO_CHAR(SYSDATE, 'YYYYMMDD'),
                null,
                '0'
        FROM DUAL         
         ORDER BY ORDR ASC, CONTRACT_ID DESC		
		]]>
	</statement>
	
	<!-- 식자재영업 고객사별 계약번호 목록을 조회한다. -->
	<statement name="selectContract" type="select">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.selectContract */
		<![CDATA[
		SELECT
				X.CONTRACT_ID,
       			X.CONTRACT_ID || ' [' || X.REMARK || ']' AS CONTRACT_DISP,
       			X.REMARK AS CONTRACT_NM,
       			X.CONTRACT_START,
       			X.CONTRACT_END,
       			'1' AS ORDR
		FROM 
				( 
				SELECT /*+ NO_MERGE GATHER_PLAN_STATISTICS INDEX(PO_CONTRACT_FSALE PO_CONTRACT_FSALE_I2) */	 -- INDEX 만으로 수행하기 위해 INDEX 변겨 
				/* GROUP BY 사용시 인덱스 탐색건수 만큼 TABLE ROWID 액세스가 발생하여 필터링 적용 후 ROWID 로 JOIN */
					ROWID AS RID,
				  ROW_NUMBER() OVER(PARTITION BY CENTER_CODE,UPJANG,CONTRACT_START ORDER BY CONTRACT_END ) AS RN
				  FROM PO_CONTRACT_FSALE
 				  WHERE CENTER_CODE = :schCenter
				  AND    UPJANG = :schUpjang
					) XX
				, PO_CONTRACT_FSALE X
				WHERE XX.RID = X.ROWID
				AND XX.RN = 1  /* MIN(CONTRACT_END) 를 수행하기 위해 */
         UNION ALL
         SELECT
                'NEW',
                '신규생성',
                '',
                TO_CHAR(SYSDATE, 'YYYYMMDD'),
                null,
                '0'
        FROM DUAL         
         ORDER BY ORDR ASC, CONTRACT_ID DESC		
		]]>
	</statement>

	<!-- 식자재영업 판매단가 생성 목록을 조회한다.(단가개시일 기준) : (구)-->
	<statement name="selectList_old" type="select">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.selectList_old */
		<![CDATA[
		SELECT
			  ROWNUM AS ROW_NUM
     		, A.CUSTCD AS CUST_CD	/* 업체코드 */
     		, C.VD_NM AS CUST_NM	/* 업체명 */
     		, A.ITEM_CODE				/* 자재코드 */
     		, B.ITEM_NAME				/* 자재명 */
     		, DECODE(B.TAX_CODE,'100','과)','면)')||B.ITEM_SIZE AS ITEM_SIZE	/* 규격 */
     		, B.PO_UOM AS ITEM_UNIT /* 단위 */
     		, TO_CHAR(TO_DATE(D.CONTRACT_START,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_START		/* 기존_단가개시일 */
     		, TO_CHAR(TO_DATE(D.CONTRACT_END,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_END			/* 기존_단가종료일 */
     		, NVL(D.CONTRACT_PRICE_S,0) AS CONTRACT_PRICE_S1	 /* 기존_매입단가 */
     		, 0 AS SALE_PRICE1			/* 기존_판매단가 */
     		, 0 AS MARGIN_RATE1		/* 기존_마진 */
     		--, DECODE(C.PO_CENTER_YN,'N','N',B.CENTER_FLAG) AS CENTER_FLAG1	/* 기존_센터경유 */
     		--, 'N' AS CENTER_FLAG1 /* 기존_센터경유 */
        	, D.CENTER_FLAG	 AS CENTER_FLAG1			/* PO_CONTRACT_F.PROC_TYP_CD의  값 참조 */
     		, NVL(D.CONTRACT_PRICE_M,0)	AS CONTRACT_PRICE2												/* 적용_식재매입단가 */
			, TO_CHAR(TO_DATE(:schDate,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_START2	/* 적용_단가개시일 */
			, '' AS CONTRACT_END2			/* 적용_단가종료일 */
     		, NVL(D.CONTRACT_PRICE_S,0) AS CONTRACT_PRICE_S2											/* 적용_매입단가 */
     		, 0 AS NEGO_PRICE2																							/* 적용_네고단가 */
        	, DECODE(D.FIXED_PRICE, 0, 10 * CEIL(D.CONTRACT_PRICE_S / (1 - ((D.MARGIN_RATE + D.ADD_MARGIN) / 100)) / 10), D.FIXED_PRICE) AS SALE_PRICE2			/* 적용_판매단가 */
        	, DECODE(D.FIXED_PRICE, 0, (D.MARGIN_RATE + D.ADD_MARGIN), 100 * (1 - (D.CONTRACT_PRICE_S / D.FIXED_PRICE))) AS MARGIN_RATE2								/* 적용_마진 */
     		--, DECODE(C.PO_CENTER_YN,'N','N',B.CENTER_FLAG) AS CENTER_FLAG2	/* 적용_센터경유 */
     		--, 'N' AS  CENTER_FLAG2 /* 적용_센터경유 */
        	, D.CENTER_FLAG AS CENTER_FLAG2				/* PO_CONTRACT_F.PROC_TYP_CD의  값 참조 */
     		, D.PO_CONTRACT_ID									/* 구매 : 계약번호 */
     		, DECODE(B.TAX_CODE,'100','과세','면세') AS TAX_CODE /* 과_면세 구분 */
       		, A.CENTER_CODE										/* 센터코드 */
    	    , A.UPJANG													/* 업장 */
    	    , :schDate AS STD_DATE								/* 단가개시일 */
     		, '' AS CONTRACT_ID									/* 계약번호 */
     		, '' AS CONTRACT_NM									/* 계약명 */
     		, D.STD_UPJANG											/* 단가계약업장 */
     		, D.CONTRACT_START AS SALE_PRICE_START	/* 구매_계약시작일 */
     		, D.CONTRACT_END AS SALE_PRICE_END		/* 구매_계약종료일 */
     		, :schPdate AS STD_PDATE							/* 조건 : 자재이익율 기준일자 */
     		, D.VD_SN													/* 구매_계약 업체 일련번호 */
     		, D.APPLY_SD												/* 구매_계약 적용 시작일자 */
		FROM PO_TREAT_UPJANG_V A INNER JOIN HLDC_PO_ITEM_MST B ON B.USE_YN = 'Y'
																						AND A.ITEM_CODE = B.ITEM_CODE
					  							--INNER JOIN ST_CUST C ON  A.CUSTCD = C.CUSTCD
					     						INNER JOIN VO_FC_VENDOR C ON A.CUSTCD = C.VD_CD
					  							INNER JOIN 
						 						(
						 							SELECT  
							  							  V.CENTER_CODE
														, V.UPJANG
														, V.CUSTCD
														, V.ITEM_CODE
														, V.PO_CONTRACT_ID
														, V.CONTRACT_START
														, V.CONTRACT_END
														, V.CONTRACT_PRICE_M
														, V.CONTRACT_PRICE_M AS CONTRACT_PRICE_S
														 /* 이익율...(단가업장, 자재코드) */
														, FMS_GETMARGINRATE_FUN(V.UPJANG, V.ITEM_CODE) AS MARGIN_RATE
														, 0 AS ADD_MARGIN		-- 추가이익율(장려율)
														  /* 고정단가 */
														, NVL((SELECT Z.FIXED_PRICE
                  												 FROM FMS_MARGIN_V Z
		  														 WHERE  Z.AP_UNITPRICE_UPJANG  = V.UPJANG			/* 조건 : 단가업장 */
                  												  AND    Z.ITEM_CODE   = V.ITEM_CODE), 0) AS FIXED_PRICE
														, V.UPJANG AS STD_UPJANG			/* 단가계약업장 */                  												  
														, V.VD_SN														/* 구매_계약 업체 일련번호 */
														, V.APPLY_SD													/* 구매_계약 적용 시작일자 */
														, V.CENTER_FLAG
													FROM (
																SELECT 
									  								 Y.CENTER_CODE
																	, Y.UPJANG
																	, Y.CUSTCD
																	, Y.ITEM_CODE
																	, Y.CONTRACT_ID AS PO_CONTRACT_ID				/* 계약번호 - PO */
																	, Y.CONTRACT_START 										/* 판매단가시작일 - PO */
																	, Y.CONTRACT_END 											/* 판매단가종료일 - PO */	
																	, Y.CONTRACT_PRICE_M
																	, Y.CONTRACT_PRICE_M AS CONTRACT_PRICE_S
																	, Y.VD_SN														/* 구매_계약 업체 일련번호 */
																	, Y.APPLY_SD													/* 구매_계약 적용 시작일자 */
																	, DECODE(Y.PROC_TYP_CD, 'VC', 'N', 'Y') AS CENTER_FLAG 	/* 센터경유 */
																FROM 
																(
																	SELECT 
										 								  Z.CENTER_CODE
																		, Z.UPJANG	
																		, Z.CUSTCD
																		, Z.ITEM_CODE
																		, MAX(Z.CONTRACT_START) AS CONTRACT_START
																	FROM PO_CONTRACT_F Z 
																	WHERE Z.CENTER_CODE  = :schCenter		/* 조건 : 센터코드 */
																	AND    Z.UPJANG	       = :schUpjang		/* 조건 : 업장코드 */
																	<#if schCust?has_content>
   																	AND   Z.CUSTCD = :schCust						/* 조건 : 업체코드 */
   																	<#else>
																	AND    Z.CUSTCD           > 0
																	</#if>
																	AND    Z.ITEM_CODE      > ' '
																	AND    Z.CONTRACT_START <= :schDate		/* 조건 : 단가개시일 */
																	AND    Z.USE_YN         = 'Y'
																	GROUP BY Z.CENTER_CODE, Z.UPJANG, Z.CUSTCD, Z.ITEM_CODE
									 							) X INNER JOIN PO_CONTRACT_F Y ON  Y.CENTER_CODE = X.CENTER_CODE
																												AND Y.UPJANG         = X.UPJANG
																												AND Y.CUSTCD         = X.CUSTCD
																												AND Y.ITEM_CODE     = X.ITEM_CODE
																												AND Y.CONTRACT_START = X.CONTRACT_START
																												
														) V  	
														/* 예외설정 자재처리 :  FMS_ITEM_EXCEPTION (2015-07-15) */
														WHERE V.ITEM_CODE NOT IN (
																									/* 해당 업장에 예외설정 삭제 품목 */
                                                                                    				SELECT 
                                                                                        				ITEM_CODE
                                                                                    				FROM FMS_ITEM_EXCEPTION
                                                                                    				WHERE UPJANG = :schUpjang
                                                                                    				AND    EXCEPTION_TYPE = '-'
                                                                                    				UNION 
																									/* 다른 업장에 예외설정 추가 품목 */
                                                                                    				SELECT 
                                                                                        				DISTINCT ITEM_CODE
                                                                                    				FROM FMS_ITEM_EXCEPTION
                                                                                    				WHERE UPJANG NOT IN (:schUpjang)
                                                                                    				AND    EXCEPTION_TYPE = '+'
																								)
							 					) D ON  A.CENTER_CODE = D.CENTER_CODE
			   				     					AND A.UPJANG          = D.UPJANG
							     					AND A.CUSTCD          = D.CUSTCD
							     					AND A.ITEM_CODE      = D.ITEM_CODE
 		WHERE A.CENTER_CODE = :schCenter		/* 조건 : 센터코드 */
 		AND    A.UPJANG 		  = :schUpjang		/* 조건 : 업장코드 */
		<#if schCust?has_content>
   		AND   A.CUSTCD = :schCust					/* 조건 : 업체코드 */
		</#if>
 		ORDER BY A.ITEM_CODE, A.CUSTCD
		]]>
	</statement>


	<!-- 식자재영업 판매단가 생성 목록을 조회한다.(단가개시일 기준) : 단가 재계산, 속도문제 -->
	<statement name="selectList_old2" type="select">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.selectList_old2 */
		<![CDATA[
		SELECT
		 	 ROWNUM AS ROW_NUM
			, S.CUST_CD
			, S.CUST_NM
			, S.ITEM_CODE
			, S.ITEM_NAME
			, S.ITEM_SIZE
			, S.ITEM_UNIT
			, S.CONTRACT_START
			, S.CONTRACT_END
			, S.CONTRACT_PRICE_S1
			, S.SALE_PRICE1
			, S.MARGIN_RATE1
			, S.CENTER_FLAG1
			, S.CONTRACT_PRICE2
			, S.CONTRACT_START2
			, S.CONTRACT_END2
			, S.CONTRACT_PRICE_S2
			, S.NEGO_PRICE2
			, S.STRATEGY_RATE
			--, (CASE WHEN S.STRATEGY_PRICE = 0 THEN S.CONTRACT_PRICE_S2 ELSE S.STRATEGY_PRICE END) AS STRATEGY_PRICE
			, S.STRATEGY_PRICE
			, S.PLANNING_RATE
			, (CASE WHEN S.PLANNING_PRICE = 0 THEN
				(CASE WHEN  S.STRATEGY_PRICE = 0 THEN 	S.CONTRACT_PRICE_S2 
					     ELSE S.STRATEGY_PRICE END) 
				ELSE S.PLANNING_PRICE END) AS PLANNING_PRICE
			, S.SALE_PRICE2
			--, DECODE(S.FIXED_PRICE, 0, S.MARGIN_RATE2, 100 * (1 - (S.CONTRACT_PRICE_S2 / S.FIXED_PRICE))) AS MARGIN_RATE2							/* 적용_마진 : 이전 함수 */
			, DECODE(S.FIXED_PRICE, 0, S.MARGIN_RATE2, ((S.FIXED_PRICE / S.CONTRACT_PRICE_S2)-1) * 100) AS MARGIN_RATE2								/* 적용_마진 */
			, S.CENTER_FLAG2
			, S.PO_CONTRACT_ID
			, S.TAX_CODE
			, S.CENTER_CODE	
			, S.UPJANG				
			, S.STD_DATE			
			, S.CONTRACT_ID		
			, S.CONTRACT_NM		
			, S.STD_UPJANG			
			, S.SALE_PRICE_START	
			, S.SALE_PRICE_END		
			, S.STD_PDATE			
			, S.VD_SN					
			, S.APPLY_SD				
			, S.FIXED_PRICE
		FROM
		(
			SELECT
			  	  A.CUSTCD AS CUST_CD	/* 업체코드 */
				, C.VD_NM AS CUST_NM	/* 업체명 */
				, A.ITEM_CODE				/* 자재코드 */
				, B.ITEM_NAME				/* 자재명 */
				, DECODE(B.TAX_CODE,'100','과)','면)')||B.ITEM_SIZE AS ITEM_SIZE	/* 규격 */
				, B.PO_UOM AS ITEM_UNIT /* 단위 */
				, TO_CHAR(TO_DATE(A.CONTRACT_START,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_START		/* 기존_단가개시일 */
				, TO_CHAR(TO_DATE(A.CONTRACT_END,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_END			/* 기존_단가종료일 */
				, NVL(A.CONTRACT_PRICE_S,0) AS CONTRACT_PRICE_S1	 /* 기존_매입단가 */
				, 0 AS SALE_PRICE1			/* 기존_판매단가 */
				, 0 AS MARGIN_RATE1		/* 기존_마진 */
				, 'N' AS CENTER_FLAG1 /* 기존_센터경유 */
				, NVL(A.CONTRACT_PRICE_M,0)	AS CONTRACT_PRICE2												/* 적용_식재매입단가 */
				, TO_CHAR(TO_DATE(:schDate,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_START2	/* 적용_단가개시일 */
				, '' AS CONTRACT_END2			/* 적용_단가종료일 */
				, NVL(A.CONTRACT_PRICE_S,0) AS CONTRACT_PRICE_S2											/* 적용_매입단가 */
				, 0 AS NEGO_PRICE2																							/* 적용_네고단가 */
				, A.STRATEGY_RATE
				, A.PLANNING_RATE
				--, FMS_GETPRICE_TYPE_FUN('S', A.CONTRACT_PRICE_M, A.STRATEGY_RATE, A.PLANNING_RATE, A.MARGIN_RATE, A.FIXED_PRICE) AS STRATEGY_PRICE
				--, FMS_GETPRICE_TYPE_FUN('P', A.CONTRACT_PRICE_M, A.STRATEGY_RATE, A.PLANNING_RATE, A.MARGIN_RATE, A.FIXED_PRICE) AS PLANNING_PRICE
				--, FMS_GETPRICE_TYPE_FUN('M', A.CONTRACT_PRICE_M, A.STRATEGY_RATE, A.PLANNING_RATE, A.MARGIN_RATE, A.FIXED_PRICE) AS SALE_PRICE2
				, 0 AS STRATEGY_PRICE
				, 0 AS PLANNING_PRICE
				, 0 AS SALE_PRICE2
				, A.FIXED_PRICE
				, (A.MARGIN_RATE + A.ADD_MARGIN) AS MARGIN_RATE2
				, 'N' AS  CENTER_FLAG2 /* 적용_센터경유 */
				, A.PO_CONTRACT_ID									/* 구매 : 계약번호 */
				, DECODE(B.TAX_CODE,'100','과세','면세') AS TAX_CODE /* 과_면세 구분 */
				, A.CENTER_CODE										/* 센터코드 */
				, A.UPJANG													/* 업장 */
   	    		, :schDate AS STD_DATE								/* 단가개시일 */
				, '' AS CONTRACT_ID									/* 계약번호 */
				, '' AS CONTRACT_NM									/* 계약명 */
				, A.STD_UPJANG											/* 단가계약업장 */
				, A.CONTRACT_START AS SALE_PRICE_START	/* 구매_계약시작일 */
				, A.CONTRACT_END AS SALE_PRICE_END		/* 구매_계약종료일 */
   				, :schPdate AS STD_PDATE							/* 조건 : 자재이익율 기준일자 */
				, A.VD_SN													/* 구매_계약 업체 일련번호 */
				, A.APPLY_SD												/* 구매_계약 적용 시작일자 */
		FROM 
			(
					SELECT  
					  	  V.CENTER_CODE
						, V.UPJANG
						, V.CUSTCD
						, V.ITEM_CODE
						, V.PO_CONTRACT_ID
						, V.CONTRACT_START
						, V.CONTRACT_END
						, NVL(V.CONTRACT_PRICE_M, 0) AS CONTRACT_PRICE_M
						, NVL(V.CONTRACT_PRICE_M, 0) AS CONTRACT_PRICE_S
						 /* 이익율...(단가업장, 자재코드) */
						, FMS_GETMARGINRATE_FUN(V.UPJANG, V.ITEM_CODE) AS MARGIN_RATE
						, 0 AS ADD_MARGIN		-- 추가이익율(장려율)
						 /* 고정단가 */
						, NVL((SELECT Z.FIXED_PRICE
					  		     FROM FMS_MARGIN_V Z
							  	  WHERE  Z.AP_UNITPRICE_UPJANG  = V.UPJANG			/* 조건 : 단가업장 */
					  				AND    Z.ITEM_CODE   = V.ITEM_CODE), 0) AS FIXED_PRICE
						, V.UPJANG AS STD_UPJANG			/* 단가계약업장 */                  												  
						, V.VD_SN									/* 구매_계약 업체 일련번호 */
						, V.APPLY_SD								/* 구매_계약 적용 시작일자 */
						, NVL(V.STRATEGY_RATE, 0) AS STRATEGY_RATE				/* 전략율 */
						, NVL(V.PLANNING_RATE, 0) AS PLANNING_RATE				/* 기획율 */
					FROM (
								SELECT 
								 	  Y.CENTER_CODE
									, Y.UPJANG
									, Y.CUSTCD
									, Y.ITEM_CODE
									, Y.CONTRACT_ID AS PO_CONTRACT_ID				/* 계약번호 - PO */
									, Y.CONTRACT_START 										/* 판매단가시작일 - PO */
									, Y.CONTRACT_END 											/* 판매단가종료일 - PO */	
									, Y.CONTRACT_PRICE_M
									, Y.CONTRACT_PRICE_M AS CONTRACT_PRICE_S
									, Y.VD_SN														/* 구매_계약 업체 일련번호 */
									, Y.APPLY_SD													/* 구매_계약 적용 시작일자 */
									, DECODE(U.ATTR09, 'Y', 0, FM.STRATEGY_RATE) AS STRATEGY_RATE        /* 전략율 : 전략이익 제외일 경우 0 */
									, DECODE(U.ATTR10, 'Y', 0, FM.PLANNING_RATE) AS PLANNING_RATE        /* 기획율 : 관리이익 제외일 경우 0*/
								FROM 
										(
								    		SELECT 
												  Z.CENTER_CODE
									    		, Z.UPJANG    
									    		, Z.CUSTCD
									    		, Z.ITEM_CODE
									    		, MAX(Z.CONTRACT_START) AS CONTRACT_START
								    		FROM PO_CONTRACT_F Z 
											WHERE Z.CENTER_CODE  = :schCenter		/* 조건 : 센터코드 */
											AND    Z.UPJANG	       = :schUpjang		/* 조건 : 업장코드 */
											<#if schCust?has_content>
											AND   Z.CUSTCD = :schCust						/* 조건 : 업체코드 */
											<#else>
											AND    Z.CUSTCD           > 0
											</#if>
											AND    Z.ITEM_CODE      > ' '
											AND    Z.CONTRACT_START <= :schDate		/* 조건 : 단가개시일 */
											AND    Z.USE_YN         = 'Y'
								    		GROUP BY Z.CENTER_CODE, Z.UPJANG, Z.CUSTCD, Z.ITEM_CODE
								     	) X INNER JOIN PO_CONTRACT_F Y ON  Y.CENTER_CODE = :schCenter		/* 조건 : 센터코드 */
														    						   AND Y.UPJANG = :schUpjang				/* 조건 : 업장코드 */
														    						   AND X.CENTER_CODE = Y.CENTER_CODE
														    						   AND X.UPJANG         = Y.UPJANG
														    						   AND X.CUSTCD         = Y.CUSTCD
														    						   AND X.ITEM_CODE     = Y.ITEM_CODE
														    						   AND X.CONTRACT_START = Y.CONTRACT_START
											/* 전략이익율 정보 FM_CONTRACT_PROFIT    */
									 		LEFT JOIN FM_CONTRACT_PROFIT FM ON FM.CENTER_CODE = :schCenter        /* 조건 : 센터코드 */
															   								  AND FM.PROFIT_DATE   = :schPdate			/* 조건 : 전략이익율 기준일자 */  
															    							  AND X.ITEM_CODE = FM.ITEM_CODE        /* 조건 : 자재코드         */
															    
											/* 전략이익, 기획이익제외 여부 */
											INNER JOIN FMS_UPJANG U ON X.UPJANG = U.UPJANG  
							  ) V      
								/* 예외설정 자재처리 :  FMS_ITEM_EXCEPTION (2015-07-15) */
						    	WHERE V.ITEM_CODE NOT IN (
																			/* 해당 업장에 예외설정 삭제 품목 */
																			SELECT 
																				ITEM_CODE
																			FROM FMS_ITEM_EXCEPTION
																			WHERE UPJANG = :schUpjang
																			AND    EXCEPTION_TYPE = '-'
																			UNION 
																			/* 다른 업장에 예외설정 추가 품목 */
																			SELECT 
																				DISTINCT ITEM_CODE
																			FROM FMS_ITEM_EXCEPTION
																			WHERE UPJANG NOT IN (:schUpjang)
																			AND    EXCEPTION_TYPE = '+'
																			)
			)  A INNER JOIN HLDC_PO_ITEM_MST B ON B.USE_YN = 'Y'
									    				AND SUBSTR(B.ITEM_CODE, 1, 1) = 'F'	
									    				AND A.ITEM_CODE = B.ITEM_CODE
				  INNER JOIN VO_FC_VENDOR C ON A.CUSTCD = C.VD_CD
	  ) S
		--ORDER BY S.ITEM_CODE, S.CUST_CD
		]]>
	</statement>



	<!-- 식자재영업 판매단가 생성 목록을 조회한다.(단가개시일 기준) : 단가 재계산, 전략/기획/판매단가 계산부분 UI에서 처리 -->
	<statement name="selectList_old3" type="select">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.selectList */
		<![CDATA[
		SELECT
		 	 ROWNUM AS ROW_NUM
			, S.CUST_CD
			, S.CUST_NM
			, S.ITEM_CODE
			, S.ITEM_NAME
			, S.ITEM_SIZE
			, S.ITEM_UNIT
			, S.CONTRACT_START
			, S.CONTRACT_END
			, S.CONTRACT_PRICE_S1
			, S.SALE_PRICE1
			, S.MARGIN_RATE1
			, S.CENTER_FLAG1
			, S.CONTRACT_PRICE2
			, S.CONTRACT_START2
			, S.CONTRACT_END2
			, S.CONTRACT_PRICE_S2
			, S.NEGO_PRICE2
			, (CASE WHEN S.STRATEGY_PRICE = 0 THEN S.CONTRACT_PRICE_S2 ELSE S.STRATEGY_PRICE END) AS STRATEGY_PRICE
			, (CASE WHEN S.PLANNING_PRICE = 0 THEN
					(CASE WHEN  S.STRATEGY_PRICE = 0 THEN 	S.CONTRACT_PRICE_S2 
						     ELSE S.STRATEGY_PRICE END) 
				ELSE S.PLANNING_PRICE END) AS PLANNING_PRICE
			, S.SALE_PRICE2
			--, DECODE(S.FIXED_PRICE, 0, S.MARGIN_RATE2, ((S.FIXED_PRICE / S.CONTRACT_PRICE_S2)-1) * 100) AS MARGIN_RATE2								/* 적용_마진 */
            , DECODE(S.CONTRACT_PRICE_S2, 0, 0, ROUND(((S.SALE_PRICE2 / S.CONTRACT_PRICE_S2)-1) * 100, 1)) AS MARGIN_RATE2								/* 적용_마진 : 매입금액 대비 판매단가 */
			, S.CENTER_FLAG2
			, S.STRATEGY_RATE
			, S.PLANNING_RATE
			, S.PO_CONTRACT_ID
			, S.TAX_CODE
			, S.CENTER_CODE	
			, S.UPJANG				
			, S.STD_DATE			
			, S.STD_DATE2
			, S.CONTRACT_ID		
			, S.CONTRACT_NM		
			, S.STD_UPJANG			
			, S.SALE_PRICE_START	
			, S.SALE_PRICE_END		
			, S.STD_PDATE			
			, S.VD_SN					
			, S.APPLY_SD				
			, S.FIXED_PRICE
			, S.UPJANG_GRP
		FROM
		(
			SELECT
			  	  A.CUSTCD AS CUST_CD	/* 업체코드 */
				, C.VD_NM AS CUST_NM	/* 업체명 */
				, A.ITEM_CODE				/* 자재코드 */
				, A.ITEM_NAME				/* 자재명 */
				, DECODE(A.TAX_CODE,'100','과)','면)')||A.ITEM_SIZE AS ITEM_SIZE	/* 규격 */
				, A.ITEM_UNIT /* 단위 */
				, TO_CHAR(TO_DATE(A.CONTRACT_START,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_START		/* 기존_단가개시일 */
				, TO_CHAR(TO_DATE(A.CONTRACT_END,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_END			/* 기존_단가종료일 */
				, NVL(A.CONTRACT_PRICE_S,0) AS CONTRACT_PRICE_S1	 /* 기존_매입단가 */
				, 0 AS SALE_PRICE1			/* 기존_판매단가 */
				, 0 AS MARGIN_RATE1		/* 기존_마진 */
				, A.CENTER_FLAG AS CENTER_FLAG1	/* 기존_센터경유 : PO_CONTRACT_F.PROC_TYP_CD의  값 참조 */				
				, NVL(A.CONTRACT_PRICE_M,0)	AS CONTRACT_PRICE2												/* 적용_식재매입단가 */
				, TO_CHAR(TO_DATE(:schDate,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_START2	/* 적용_단가개시일 */
	    		, <#if schDate2?has_content> TO_CHAR(TO_DATE(:schDate2,'YYYYMMDD'),'YYYY-MM-DD') <#else> '' </#if> AS CONTRACT_END2			/* 적용_단가종료일 */
				, NVL(A.CONTRACT_PRICE_S,0) AS CONTRACT_PRICE_S2											/* 적용_매입단가 */
				, 0 AS NEGO_PRICE2																							/* 적용_네고단가 */
				, A.STRATEGY_RATE
				, A.PLANNING_RATE
				, FMS_GETPRICE_TYPE_FUN('S', A.CONTRACT_PRICE_M, A.STRATEGY_RATE, A.PLANNING_RATE, A.MARGIN_RATE, A.FIXED_PRICE) AS STRATEGY_PRICE			/* 전략단가 = 매입단가에 대한 기획율 적용 */
				, FMS_GETPRICE_TYPE_FUN('P', A.CONTRACT_PRICE_M, A.STRATEGY_RATE, A.PLANNING_RATE, A.MARGIN_RATE, A.FIXED_PRICE) AS PLANNING_PRICE			/* 기획단가 = 전략단가에 대한 전략율 적용 */
				, FMS_GETPRICE_TYPE_FUN('M', A.CONTRACT_PRICE_M, A.STRATEGY_RATE, A.PLANNING_RATE, A.MARGIN_RATE, A.FIXED_PRICE) AS SALE_PRICE2				/* 판매단가 = 기획단가에 대한 이익율 적용 */
				--, 0 AS STRATEGY_PRICE
				--, 0 AS PLANNING_PRICE
				--, 0 AS SALE_PRICE2
				, A.FIXED_PRICE
				, (A.MARGIN_RATE + A.ADD_MARGIN) AS MARGIN_RATE2
				, A.CENTER_FLAG AS CENTER_FLAG2	/* 적용_센터경유 : PO_CONTRACT_F.PROC_TYP_CD의  값 참조 */				
				, A.PO_CONTRACT_ID									/* 구매 : 계약번호 */
				, DECODE(A.TAX_CODE,'100','과세','면세') AS TAX_CODE /* 과_면세 구분 */
				, A.CENTER_CODE										/* 센터코드 */
				, A.UPJANG													/* 업장 */
   	    		, :schDate AS STD_DATE								/* 단가개시일 */
	    		, <#if schDate2?has_content> :schDate2 <#else> '' </#if> AS STD_DATE2			/* 단가종료일 : 개시일 기준 */
				, '' AS CONTRACT_ID									/* 계약번호 */
				, '' AS CONTRACT_NM									/* 계약명 */
				, A.STD_UPJANG											/* 단가계약업장 */
				, A.CONTRACT_START AS SALE_PRICE_START	/* 구매_계약시작일 */
				, A.CONTRACT_END AS SALE_PRICE_END		/* 구매_계약종료일 */
   				, :schPdate AS STD_PDATE							/* 조건 : 자재이익율 기준일자 */
				, A.VD_SN													/* 구매_계약 업체 일련번호 */
				, A.APPLY_SD												/* 구매_계약 적용 시작일자 */
				, A.UPJANG_GRP											/* 구매_계약_업장군 코드 */
		FROM 
			(
					SELECT  
					  	  V.CENTER_CODE
						, V.UPJANG_GRP
						, V.UPJANG
						, V.CUSTCD
						, V.ITEM_CODE
						, V.ITEM_NAME
						, V.ITEM_SIZE
						, V.ITEM_UNIT
						, V.TAX_CODE
						, V.PO_CONTRACT_ID
						, V.CONTRACT_START
						, V.CONTRACT_END
						, NVL(V.CONTRACT_PRICE_M, 0) AS CONTRACT_PRICE_M
						, NVL(V.CONTRACT_PRICE_M, 0) AS CONTRACT_PRICE_S
						 /* 이익율...(단가업장, 자재코드) */
						--, FMS_GETMARGINRATE_FUN(V.UPJANG, V.ITEM_CODE) AS MARGIN_RATE
                        , DECODE(V.RATE1, 0, NVL(M2.MARGIN_RATE,0),  V.RATE1) AS MARGIN_RATE			/* 이익율 GET */
						, 0 AS ADD_MARGIN		-- 추가이익율(장려율)
						 /* 고정단가 */
						, NVL((SELECT Z.FIXED_PRICE
					  		     FROM FMS_MARGIN_V Z
							  	  WHERE  Z.AP_UNITPRICE_UPJANG  = V.UPJANG			/* 조건 : 단가업장 */
					  				AND    Z.ITEM_CODE   = V.ITEM_CODE), 0) AS FIXED_PRICE
						, V.UPJANG AS STD_UPJANG			/* 단가계약업장 */                  												  
						, V.VD_SN									/* 구매_계약 업체 일련번호 */
						, V.APPLY_SD								/* 구매_계약 적용 시작일자 */
						, V.CENTER_FLAG							/* 센터경유 FLAG */
						, NVL(V.STRATEGY_RATE, 0) AS STRATEGY_RATE				/* 전략율 */
						, NVL(V.PLANNING_RATE, 0) AS PLANNING_RATE				/* 기획율 */
					FROM (
								SELECT 
								 	  Y.CENTER_CODE
									, Y.UPJANG_GRP											/* 업장군 */
									, Y.UPJANG
									, Y.CUSTCD
									, Y.ITEM_CODE
									, P.ITEM_NAME
									, P.ITEM_SIZE
									, P.TAX_CODE
									, P.PO_UOM AS ITEM_UNIT
									, P.ITEM_CLASS4
									, Y.CONTRACT_ID AS PO_CONTRACT_ID				/* 계약번호 - PO */
									, Y.CONTRACT_START 										/* 판매단가시작일 - PO */
									, Y.CONTRACT_END 											/* 판매단가종료일 - PO */	
									, Y.CONTRACT_PRICE_M
									, Y.CONTRACT_PRICE_M AS CONTRACT_PRICE_S
									, Y.VD_SN														/* 구매_계약 업체 일련번호 */
									, Y.APPLY_SD													/* 구매_계약 적용 시작일자 */
                   	 				--, DECODE(Y.PROC_TYP_CD, 'VC', 'N', 'Y') AS CENTER_FLAG
                   	 				, Y.PROC_TYP_CD AS CENTER_FLAG
									, DECODE(U.ATTR09, 'Y', 0, FM.STRATEGY_RATE) AS STRATEGY_RATE        /* 전략율 : 전략이익 제외일 경우 0 */
									, DECODE(U.ATTR10, 'Y', 0, FM.PLANNING_RATE) AS PLANNING_RATE        /* 기획율 : 관리이익 제외일 경우 0*/
                                    , NVL(M1.MARGIN_RATE, 0) AS RATE1					/* 자재 : 이익율 */
                                    , ROW_NUMBER() OVER (PARTITION BY Y.CENTER_CODE, Y.UPJANG, Y.ITEM_CODE  ORDER BY Y.CONTRACT_START DESC)  AS SEQ      -- 순서(자재코드 기준으로 부여) : 동일아이템이 2개이상 거래처에 존재 시 필터
								FROM 
										(
								    		SELECT 
												  Z.CENTER_CODE
									    		, Z.UPJANG    
									    		, Z.CUSTCD
									    		, Z.ITEM_CODE
									    		, MAX(Z.CONTRACT_START) AS CONTRACT_START
								    		FROM PO_CONTRACT_F Z 
											WHERE Z.CENTER_CODE  = :schCenter		/* 조건 : 센터코드 */
											AND    Z.UPJANG	       = :schUpjang		/* 조건 : 업장코드 */
											<#if schCust?has_content>
											AND   Z.CUSTCD = :schCust						/* 조건 : 업체코드 */
											<#else>
											AND    Z.CUSTCD           > 0
											</#if>
											AND    SUBSTR(Z.ITEM_CODE, 1, 1)  = 'F'	/* 조건 : 식자재 */
											--AND    Z.CONTRACT_START <= :schDate		/* 조건 : 단가개시일 */
											AND    :schDate BETWEEN Z.CONTRACT_START AND Z.CONTRACT_END	/* 조건 : 단가개시일 */
											AND    Z.USE_YN         = 'Y'
								    		GROUP BY Z.CENTER_CODE, Z.UPJANG, Z.CUSTCD, Z.ITEM_CODE
								     	) X INNER JOIN PO_CONTRACT_F Y ON  Y.CENTER_CODE = :schCenter		/* 조건 : 센터코드 */
														    						   AND Y.UPJANG = :schUpjang				/* 조건 : 업장코드 */
														    						   AND X.CENTER_CODE = Y.CENTER_CODE
														    						   AND X.UPJANG         = Y.UPJANG
														    						   AND X.CUSTCD         = Y.CUSTCD
														    						   AND X.ITEM_CODE     = Y.ITEM_CODE
														    						   AND X.CONTRACT_START = Y.CONTRACT_START
											/* 전략이익율 정보 FM_CONTRACT_PROFIT    */
									 		LEFT JOIN FM_CONTRACT_PROFIT FM ON FM.CENTER_CODE = :schCenter        /* 조건 : 센터코드 */
															   								  AND FM.PROFIT_DATE   = :schPdate			/* 조건 : 전략이익율 기준일자 */  
															    							  AND X.ITEM_CODE = FM.ITEM_CODE        /* 조건 : 자재코드         */
															    
											/* 전략이익, 기획이익제외 여부 */
											INNER JOIN FMS_UPJANG U ON X.UPJANG = U.UPJANG  
											/* 이익율 : 자재 */
                                            LEFT JOIN FMS_MARGIN_V M1 ON M1.AP_UNITPRICE_UPJANG = :schUpjang	/* 조건 : 단가계약업장 */
                                                                                   		AND X.ITEM_CODE = M1.ITEM_CODE
											 INNER JOIN HLDC_PO_ITEM_MST P ON P.USE_YN = 'Y'
											 									   AND P.ITEM_CLASS3 NOT IN ('F2612','F2720','F2910')			/* 조건 : 식재사업부(CK),CK소모품 분류 제외 */
									    								 		   AND X.ITEM_CODE = P.ITEM_CODE                                                                                       		
                                                                                   		 
							  ) V  LEFT JOIN FMS_MARGIN_V M2 ON M2.AP_UNITPRICE_UPJANG = :schUpjang	/* 조건 : 단가계약업장 */
                                                                 					  AND M2.CLASS_TYPE = 'D' 
                                                                 					  AND V.ITEM_CLASS4 = M2.ITEM_CODE
							   WHERE V.SEQ = 1
								/* 예외설정 자재처리 :  FMS_ITEM_EXCEPTION (2015-07-15) */
						    	AND V.ITEM_CODE NOT IN (
																			/* 해당 업장에 예외설정 삭제 품목 */
																			SELECT 
																				ITEM_CODE
																			FROM FMS_ITEM_EXCEPTION
																			WHERE UPJANG = :schUpjang
																			AND    EXCEPTION_TYPE = '-'
																			UNION 
																			/* 다른 업장에 예외설정 추가 품목 */
																			SELECT 
																				DISTINCT ITEM_CODE
																			FROM FMS_ITEM_EXCEPTION
																			WHERE UPJANG NOT IN (:schUpjang)
																			AND    EXCEPTION_TYPE = '+'
																			)
			)  A  INNER JOIN VO_FC_VENDOR C ON A.CUSTCD = C.VD_CD
	  ) S
		ORDER BY S.ITEM_CODE, S.CUST_CD
		]]>
	</statement>




	<!-- 식자재영업 판매단가 생성 목록을 조회한다.(단가개시일 기준) : 단가 재계산, 전략/기획/판매단가 계산부분 UI에서 처리 -->
	<!-- 전략단가, 기획단가 계산시 비율이 아닌 단가를 바로 대입하여 처리 : 20150821-->
	<statement name="selectList_old4" type="select">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.selectList_old4 */
		<![CDATA[
		SELECT
		 	 ROWNUM AS ROW_NUM
			, S.CUST_CD
			, S.CUST_NM
			, S.ITEM_CODE
			, S.ITEM_NAME
			, S.ITEM_SIZE
			, S.ITEM_UNIT
			, S.CONTRACT_START
			, S.CONTRACT_END
			, S.CONTRACT_PRICE_S1
			, S.SALE_PRICE1
			, S.MARGIN_RATE1
			, S.CENTER_FLAG1
			--, S.CONTRACT_PRICE2
			, S.CONTRACT_START2
			, S.CONTRACT_END2
			, S.CONTRACT_PRICE_S2
			--, S.NEGO_PRICE2
			, (CASE WHEN S.STRATEGY_PRICE = 0 THEN S.CONTRACT_PRICE_S2 ELSE S.STRATEGY_PRICE END) AS STRATEGY_PRICE
			, (CASE WHEN S.PLANNING_PRICE = 0 THEN
					(CASE WHEN  S.STRATEGY_PRICE = 0 THEN 	S.CONTRACT_PRICE_S2 
						     ELSE S.STRATEGY_PRICE END) 
				ELSE S.PLANNING_PRICE END) AS PLANNING_PRICE
			, S.SALE_PRICE2
			, S.STD_MARGIN_RATE					/* 적용_이익율 */
            , DECODE(S.CONTRACT_PRICE_S2, 0, 0, ROUND(((S.SALE_PRICE2 / S.CONTRACT_PRICE_S2)-1) * 100, 1)) AS MARGIN_RATE2								/* 적용_마진 : 매입금액 대비 판매단가 */
			, S.CENTER_FLAG2
			, S.STRATEGY_RATE
			, S.PLANNING_RATE
			, S.PO_CONTRACT_ID
			, S.TAX_CODE
			, S.CENTER_CODE	
			, S.UPJANG				
			, S.STD_DATE			
			, S.STD_DATE2
			, S.CONTRACT_ID		
			, S.CONTRACT_NM		
			, S.STD_UPJANG			
			, S.SALE_PRICE_START	
			, S.SALE_PRICE_END		
			, S.STD_PDATE			
			, S.VD_SN					
			, S.APPLY_SD				
			, S.FIXED_PRICE
			, S.UPJANG_GRP
		FROM
		(
			SELECT
			  	  A.CUSTCD AS CUST_CD	/* 업체코드 */
				, C.VD_NM AS CUST_NM	/* 업체명 */
				, A.ITEM_CODE				/* 자재코드 */
				, A.ITEM_NAME				/* 자재명 */
				, DECODE(A.TAX_CODE,'100','과)','면)')||A.ITEM_SIZE AS ITEM_SIZE	/* 규격 */
				, A.ITEM_UNIT /* 단위 */
				, TO_CHAR(TO_DATE(A.CONTRACT_START,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_START		/* 기존_단가개시일 */
				, TO_CHAR(TO_DATE(A.CONTRACT_END,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_END			/* 기존_단가종료일 */
				, NVL(A.CONTRACT_PRICE_S,0) AS CONTRACT_PRICE_S1	 /* 기존_매입단가 */
				, 0 AS SALE_PRICE1			/* 기존_판매단가 */
				, 0 AS MARGIN_RATE1		/* 기존_마진 */
				, A.CENTER_FLAG AS CENTER_FLAG1	/* 기존_센터경유 : PO_CONTRACT_F.PROC_TYP_CD의  값 참조 */				
				, NVL(A.CONTRACT_PRICE_M,0)	AS CONTRACT_PRICE2												/* 적용_식재매입단가 */
				, TO_CHAR(TO_DATE(:schDate,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_START2	/* 적용_단가개시일 */
	    		, <#if schDate2?has_content> TO_CHAR(TO_DATE(:schDate2,'YYYYMMDD'),'YYYY-MM-DD') <#else> '' </#if> AS CONTRACT_END2			/* 적용_단가종료일 */
				, NVL(A.CONTRACT_PRICE_S,0) AS CONTRACT_PRICE_S2											/* 적용_매입단가 */
				, 0 AS NEGO_PRICE2																							/* 적용_네고단가 */
				, A.STRATEGY_RATE
				, A.PLANNING_RATE
				-- 종전방식 : 비율
				--, FMS_GETPRICE_TYPE_FUN('S', A.CONTRACT_PRICE_M, A.STRATEGY_RATE, A.PLANNING_RATE, A.MARGIN_RATE, A.FIXED_PRICE) AS STRATEGY_PRICE			/* 전략단가 = 매입단가에 대한 기획율 적용 */
				--, FMS_GETPRICE_TYPE_FUN('P', A.CONTRACT_PRICE_M, A.STRATEGY_RATE, A.PLANNING_RATE, A.MARGIN_RATE, A.FIXED_PRICE) AS PLANNING_PRICE			/* 기획단가 = 전략단가에 대한 전략율 적용 */
				--, FMS_GETPRICE_TYPE_FUN('M', A.CONTRACT_PRICE_M, A.STRATEGY_RATE, A.PLANNING_RATE, A.MARGIN_RATE, A.FIXED_PRICE) AS SALE_PRICE2				/* 판매단가 = 기획단가에 대한 이익율 적용 */
				-- 변경 : 단가기준 재계산
				, FMS_GETPRICE_TYPE2_FUN('S', A.CONTRACT_PRICE_M, A.STRATEGY_PRICE, A.PLANNING_PRICE, A.MARGIN_RATE, A.FIXED_PRICE) AS STRATEGY_PRICE			/* 전략단가  적용 */
				, FMS_GETPRICE_TYPE2_FUN('P', A.CONTRACT_PRICE_M, A.STRATEGY_PRICE, A.PLANNING_PRICE, A.MARGIN_RATE, A.FIXED_PRICE) AS PLANNING_PRICE			/* 기획단가 적용 */
				, FMS_GETPRICE_TYPE2_FUN('M', A.CONTRACT_PRICE_M, A.STRATEGY_PRICE, A.PLANNING_PRICE, A.MARGIN_RATE, A.FIXED_PRICE) AS SALE_PRICE2				/* 판매단가 적용 */
				, A.FIXED_PRICE
				, (A.MARGIN_RATE + A.ADD_MARGIN) AS STD_MARGIN_RATE		/* 적용_이익율 */
				, A.CENTER_FLAG AS CENTER_FLAG2	/* 적용_센터경유 : PO_CONTRACT_F.PROC_TYP_CD의  값 참조 */				
				, A.PO_CONTRACT_ID									/* 구매 : 계약번호 */
				, DECODE(A.TAX_CODE,'100','과세','면세') AS TAX_CODE /* 과_면세 구분 */
				, A.CENTER_CODE										/* 센터코드 */
				, A.UPJANG													/* 업장 */
   	    		, :schDate AS STD_DATE								/* 단가개시일 */
	    		, <#if schDate2?has_content> :schDate2 <#else> '' </#if> AS STD_DATE2			/* 단가종료일 : 개시일 기준 */
				, '' AS CONTRACT_ID									/* 계약번호 */
				, '' AS CONTRACT_NM									/* 계약명 */
				, A.STD_UPJANG											/* 단가계약업장 */
				, A.CONTRACT_START AS SALE_PRICE_START	/* 구매_계약시작일 */
				, A.CONTRACT_END AS SALE_PRICE_END		/* 구매_계약종료일 */
   				, :schPdate AS STD_PDATE							/* 조건 : 자재이익율 기준일자 */
				, A.VD_SN													/* 구매_계약 업체 일련번호 */
				, A.APPLY_SD												/* 구매_계약 적용 시작일자 */
				, A.UPJANG_GRP											/* 구매_계약_업장군 코드 */
		FROM 
			(
					SELECT  
					  	  V.CENTER_CODE
						, V.UPJANG_GRP
						, V.UPJANG
						, V.CUSTCD
						, V.ITEM_CODE
						, V.ITEM_NAME
						, V.ITEM_SIZE
						, V.ITEM_UNIT
						, V.TAX_CODE
						, V.PO_CONTRACT_ID
						, V.CONTRACT_START
						, V.CONTRACT_END
						, NVL(V.CONTRACT_PRICE_M, 0) AS CONTRACT_PRICE_M
						, NVL(V.CONTRACT_PRICE_M, 0) AS CONTRACT_PRICE_S
						 /* 이익율...(단가업장, 자재코드) */
						--, FMS_GETMARGINRATE_FUN(V.UPJANG, V.ITEM_CODE) AS MARGIN_RATE
                        , DECODE(V.RATE1, 0, NVL(M2.MARGIN_RATE,0),  V.RATE1) AS MARGIN_RATE			/* 이익율 GET */
						, 0 AS ADD_MARGIN		-- 추가이익율(장려율)
						 /* 고정단가 */
						, NVL((SELECT Z.FIXED_PRICE
					  		     FROM FMS_MARGIN_V Z
							  	  WHERE  Z.AP_UNITPRICE_UPJANG  = V.UPJANG			/* 조건 : 단가업장 */
					  				AND    Z.ITEM_CODE   = V.ITEM_CODE), 0) AS FIXED_PRICE
						, V.UPJANG AS STD_UPJANG			/* 단가계약업장 */                  												  
						, V.VD_SN									/* 구매_계약 업체 일련번호 */
						, V.APPLY_SD								/* 구매_계약 적용 시작일자 */
						, V.CENTER_FLAG							/* 센터경유 FLAG */
						, NVL(V.STRATEGY_RATE, 0) AS STRATEGY_RATE				/* 전략율 */
						, NVL(V.PLANNING_RATE, 0) AS PLANNING_RATE				/* 기획율 */
						, NVL(V.STRATEGY_PRICE, 0) AS STRATEGY_PRICE				/* 전략단가 */
						, NVL(V.PLANNING_PRICE, 0) AS PLANNING_PRICE			/* 기획단가 */
					FROM (
								SELECT 
								 	  Y.CENTER_CODE
									, Y.UPJANG_GRP											/* 업장군 */
									, Y.UPJANG
									, Y.CUSTCD
									, Y.ITEM_CODE
									, P.ITEM_NAME
									, P.ITEM_SIZE
									, P.TAX_CODE
									, P.PO_UOM AS ITEM_UNIT
									, P.ITEM_CLASS4
									, Y.CONTRACT_ID AS PO_CONTRACT_ID				/* 계약번호 - PO */
									, Y.CONTRACT_START 										/* 판매단가시작일 - PO */
									, Y.CONTRACT_END 											/* 판매단가종료일 - PO */	
									, Y.CONTRACT_PRICE_M
									, Y.CONTRACT_PRICE_M AS CONTRACT_PRICE_S
									, Y.VD_SN														/* 구매_계약 업체 일련번호 */
									, Y.APPLY_SD													/* 구매_계약 적용 시작일자 */
                   	 				, Y.PROC_TYP_CD AS CENTER_FLAG
									, DECODE(U.ATTR09, 'Y', 0, FM.STRATEGY_RATE) AS STRATEGY_RATE        /* 전략율 : 전략이익 제외일 경우 0 */
									, DECODE(U.ATTR10, 'Y', 0, FM.PLANNING_RATE) AS PLANNING_RATE        /* 기획율 : 관리이익 제외일 경우 0*/
									, DECODE(U.ATTR09, 'Y', 0, FM.STRATEGY_PRICE) AS STRATEGY_PRICE        /* 전략단가 : 전략이익 제외일 경우 0 */
									, DECODE(U.ATTR10, 'Y', 0, FM.PLANNING_PRICE) AS PLANNING_PRICE        /* 기획단가 : 관리이익 제외일 경우 0*/
                                    , NVL(M1.MARGIN_RATE, 0) AS RATE1					/* 자재 : 이익율 */
                                    , ROW_NUMBER() OVER (PARTITION BY Y.CENTER_CODE, Y.UPJANG, Y.ITEM_CODE  ORDER BY Y.CONTRACT_START DESC)  AS SEQ      -- 순서(자재코드 기준으로 부여) : 동일아이템이 2개이상 거래처에 존재 시 필터
								FROM 
										(
								    		SELECT 
												  Z.CENTER_CODE
									    		, Z.UPJANG    
									    		, Z.CUSTCD
									    		, Z.ITEM_CODE
									    		, MAX(Z.CONTRACT_START) AS CONTRACT_START
								    		FROM PO_CONTRACT_F Z 
											WHERE Z.CENTER_CODE  = :schCenter		/* 조건 : 센터코드 */
											AND    Z.UPJANG	       = :schUpjang		/* 조건 : 업장코드 */
											<#if schCust?has_content>
											AND   Z.CUSTCD = :schCust						/* 조건 : 업체코드 */
											<#else>
											AND    Z.CUSTCD           > 0
											</#if>
											AND    SUBSTR(Z.ITEM_CODE, 1, 1)  = 'F'	/* 조건 : 식자재 */
											AND    :schDate BETWEEN Z.CONTRACT_START AND Z.CONTRACT_END	/* 조건 : 단가개시일 */
											AND    Z.USE_YN         = 'Y'
								    		GROUP BY Z.CENTER_CODE, Z.UPJANG, Z.CUSTCD, Z.ITEM_CODE
								     	) X INNER JOIN PO_CONTRACT_F Y ON  Y.CENTER_CODE = :schCenter		/* 조건 : 센터코드 */
														    						   AND Y.UPJANG = :schUpjang				/* 조건 : 업장코드 */
														    						   AND X.CENTER_CODE = Y.CENTER_CODE
														    						   AND X.UPJANG         = Y.UPJANG
														    						   AND X.CUSTCD         = Y.CUSTCD
														    						   AND X.ITEM_CODE     = Y.ITEM_CODE
														    						   AND X.CONTRACT_START = Y.CONTRACT_START
											/* 전략이익율 정보 FM_CONTRACT_PROFIT    */
									 		LEFT JOIN FM_CONTRACT_PROFIT FM ON FM.CENTER_CODE = :schCenter        /* 조건 : 센터코드 */
															   								  AND FM.PROFIT_DATE   = :schPdate			/* 조건 : 전략이익율 기준일자 */  
															    							  AND X.ITEM_CODE = FM.ITEM_CODE        /* 조건 : 자재코드         */
															    
											/* 전략이익, 기획이익제외 여부 */
											INNER JOIN FMS_UPJANG U ON X.UPJANG = U.UPJANG  
											/* 이익율 : 자재 */
                                            LEFT JOIN FMS_MARGIN_V M1 ON M1.AP_UNITPRICE_UPJANG = :schUpjang	/* 조건 : 단가계약업장 */
                                                                                   		AND X.ITEM_CODE = M1.ITEM_CODE
                                            /* 조건 : 예외설정에 + 품목 추가 : CK 분류 대상 (2015-09-30) */
											 INNER JOIN HLDC_PO_ITEM_MST P ON P.USE_YN = 'Y'
																				   AND (P.ITEM_CLASS3 NOT IN ('F2612','F2720','F2910') OR 
																				   		   P.ITEM_CODE IN (SELECT ITEM_CODE
																				   		   							FROM   FMS_ITEM_EXCEPTION
																													WHERE UPJANG = :schUpjang
																													AND    EXCEPTION_TYPE = '+'
																				   		   							)
																				   		  )
									    								 		   AND X.ITEM_CODE = P.ITEM_CODE                                                                                       		
                                                                                   		 
							  ) V  LEFT JOIN FMS_MARGIN_V M2 ON M2.AP_UNITPRICE_UPJANG = :schUpjang	/* 조건 : 단가계약업장 */
                                                                 					  AND M2.CLASS_TYPE = 'D' 
                                                                 					  AND V.ITEM_CLASS4 = M2.ITEM_CODE
							   WHERE V.SEQ = 1
								/* 예외설정 자재처리 :  FMS_ITEM_EXCEPTION (2015-09-30) */
						    	AND V.ITEM_CODE NOT IN (
																			/* 해당 업장에 예외설정 삭제 품목 */
																			SELECT 
																				ITEM_CODE
																			FROM FMS_ITEM_EXCEPTION
																			WHERE UPJANG = :schUpjang
																			AND    EXCEPTION_TYPE = '-'
																			)
			)  A  INNER JOIN VO_FC_VENDOR C ON A.CUSTCD = C.VD_CD
	  ) S
		ORDER BY S.ITEM_CODE, S.CUST_CD
		]]>
	</statement>


	<!-- 전략이익율 신규 적용 : 20151117-->
	<statement name="selectList" type="select">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.selectList */
		<![CDATA[
		SELECT
		 	 ROWNUM AS ROW_NUM
			, S.CUST_CD
			, S.CUST_NM
			, S.ITEM_CODE
			, S.ITEM_NAME
			, S.ITEM_SIZE
			, S.ITEM_UNIT
			, S.CONTRACT_START
			, S.CONTRACT_END
			, S.CONTRACT_PRICE_S1
			, S.SALE_PRICE1
			, S.MARGIN_RATE1
			, S.CENTER_FLAG1
			--, S.CONTRACT_PRICE2
			, S.CONTRACT_START2
			, S.CONTRACT_END2
			, S.CONTRACT_PRICE_S2
			--, S.NEGO_PRICE2
			, (CASE WHEN S.STRATEGY_PRICE = 0 THEN S.CONTRACT_PRICE_S2 ELSE S.STRATEGY_PRICE END) AS STRATEGY_PRICE
			, (CASE WHEN S.PLANNING_PRICE = 0 THEN
					(CASE WHEN  S.STRATEGY_PRICE = 0 THEN 	S.CONTRACT_PRICE_S2 
						     ELSE S.STRATEGY_PRICE END) 
				ELSE S.PLANNING_PRICE END) AS PLANNING_PRICE
			, S.SALE_PRICE2
			, S.STD_MARGIN_RATE					/* 적용_이익율 */
            , DECODE(S.CONTRACT_PRICE_S2, 0, 0, ROUND(((S.SALE_PRICE2 / S.CONTRACT_PRICE_S2)-1) * 100, 1)) AS MARGIN_RATE2								/* 적용_마진 : 매입금액 대비 판매단가 */
			, S.CENTER_FLAG2
			, S.STRATEGY_RATE
			, S.PLANNING_RATE
			, S.PO_CONTRACT_ID
			, S.TAX_CODE
			, S.CENTER_CODE	
			, S.UPJANG				
			, S.STD_DATE			
			, S.STD_DATE2
			, S.CONTRACT_ID		
			, S.CONTRACT_NM		
			, S.STD_UPJANG			
			, S.SALE_PRICE_START	
			, S.SALE_PRICE_END		
			, S.STD_PDATE			
			, S.VD_SN					
			, S.APPLY_SD				
			, S.FIXED_PRICE
			, S.UPJANG_GRP
			, S.INCOME_PRICE
			, S.WIN_ITEM_CD
		FROM
		(
			SELECT
			  	  A.CUSTCD AS CUST_CD	/* 업체코드 */
				--, C.VD_NM AS CUST_NM	/* 업체명 */
				--,(SELECT /*+ USE_NL(C) PUSH_PRED(C) PUSH_PRED(C.ACC) PUSH_PRED(C.ATTH) */ C.VD_NM  FROM FCUS.VO_FC_VENDOR C WHERE  TO_CHAR(A.CUSTCD) = C.VD_CD) AS CUST_NM
				
				
				,NVL((SELECT VDGL.VD_NM_LOC FROM EPROCUSR.ESMVDGL VDGL WHERE VDGL.SYS_ID='100' AND VDGL.VD_CD=TO_CHAR(A.CUSTCD) AND VD_STS = 'D' AND CARD_VD_YN = 'N' AND ROWNUM<=1) 
                    ,(SELECT VDGL.VD_NM_LOC FROM EPROCUSR.ESMVDGL VDGL 
                                           , EPROCUSR.ESMVDOG VDOG
                                        WHERE  VDGL.SYS_ID = VDOG.SYS_ID
                                        AND    VDGL.VD_SN = VDOG.VD_SN
                                        AND    VDOG.SYS_ID = '100'
                                        AND    VDOG.COMP_CD = 'HFC'
                                        AND    VDOG.OPER_ORG_SN = '414'
                                        AND    VDOG.TRADSTS = 'Y'
                                        AND    VDOG.REG_TYP = 'C'
                                        AND    VDOG.STS <> 'D'
                                        AND    VDGL.CARD_VD_YN = 'N'
                                        AND    VDOG.ERP_VD_CD=TO_CHAR(A.CUSTCD) 
                                        AND    VDOG.SYS_ID='100'
                                        AND    COMP_CD='HFC'
                                        AND  ROWNUM<=1) ) AS CUST_NM
                                        
                                        
				, A.ITEM_CODE				/* 자재코드 */
				, A.ITEM_NAME				/* 자재명 */
				, DECODE(A.TAX_CODE,'100','과)','면)')||A.ITEM_SIZE AS ITEM_SIZE	/* 규격 */
				, A.ITEM_UNIT /* 단위 */
				, TO_CHAR(TO_DATE(A.CONTRACT_START,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_START		/* 기존_단가개시일 */
				, TO_CHAR(TO_DATE(A.CONTRACT_END,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_END			/* 기존_단가종료일 */
				, NVL(A.CONTRACT_PRICE_S,0) AS CONTRACT_PRICE_S1	 /* 기존_매입단가 */
				, 0 AS SALE_PRICE1			/* 기존_판매단가 */
				, 0 AS MARGIN_RATE1		/* 기존_마진 */
				, A.CENTER_FLAG AS CENTER_FLAG1	/* 기존_센터경유 : PO_CONTRACT_F.PROC_TYP_CD의  값 참조 */				
				, NVL(A.CONTRACT_PRICE_M,0)	AS CONTRACT_PRICE2												/* 적용_식재매입단가 */
				, TO_CHAR(TO_DATE(:schDate,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_START2	/* 적용_단가개시일 */
	    		, <#if schDate2?has_content> TO_CHAR(TO_DATE(:schDate2,'YYYYMMDD'),'YYYY-MM-DD') <#else> '' </#if> AS CONTRACT_END2			/* 적용_단가종료일 */
				, NVL(A.CONTRACT_PRICE_S,0) AS CONTRACT_PRICE_S2											/* 적용_매입단가 */
				, 0 AS NEGO_PRICE2																							/* 적용_네고단가 */
				, A.STRATEGY_RATE
				, A.PLANNING_RATE
				-- 종전방식 : 비율
				--, FMS_GETPRICE_TYPE_FUN('S', A.CONTRACT_PRICE_M, A.STRATEGY_RATE, A.PLANNING_RATE, A.MARGIN_RATE, A.FIXED_PRICE) AS STRATEGY_PRICE			/* 전략단가 = 매입단가에 대한 기획율 적용 */
				--, FMS_GETPRICE_TYPE_FUN('P', A.CONTRACT_PRICE_M, A.STRATEGY_RATE, A.PLANNING_RATE, A.MARGIN_RATE, A.FIXED_PRICE) AS PLANNING_PRICE			/* 기획단가 = 전략단가에 대한 전략율 적용 */
				--, FMS_GETPRICE_TYPE_FUN('M', A.CONTRACT_PRICE_M, A.STRATEGY_RATE, A.PLANNING_RATE, A.MARGIN_RATE, A.FIXED_PRICE) AS SALE_PRICE2				/* 판매단가 = 기획단가에 대한 이익율 적용 */
				, (SELECT FCUS.FMS_GETPRICE_TYPE_FUN('S', A.CONTRACT_PRICE_M, A.STRATEGY_RATE, A.PLANNING_RATE, A.MARGIN_RATE, A.FIXED_PRICE) FROM DUAL) AS STRATEGY_PRICE   /* 전략단가 = 매입단가에 대한 기획율 적용 */ -- Function 캐싱화
     			, (SELECT FCUS.FMS_GETPRICE_TYPE_FUN('P', A.CONTRACT_PRICE_M, A.STRATEGY_RATE, A.PLANNING_RATE, A.MARGIN_RATE, A.FIXED_PRICE) FROM DUAL) AS PLANNING_PRICE   /* 기획단가 = 전략단가에 대한 전략율 적용 */
    			, (SELECT FCUS.FMS_GETPRICE_TYPE_FUN('M', A.CONTRACT_PRICE_M, A.STRATEGY_RATE, A.PLANNING_RATE, A.MARGIN_RATE, A.FIXED_PRICE) FROM DUAL) AS SALE_PRICE2    /* 판매단가 = 기획단가에 대한 이익율 적용 */
				
				-- 변경 : 단가기준 재계산
				--, FMS_GETPRICE_TYPE2_FUN('S', A.CONTRACT_PRICE_M, A.STRATEGY_PRICE, A.PLANNING_PRICE, A.MARGIN_RATE, A.FIXED_PRICE) AS STRATEGY_PRICE			/* 전략단가  적용 */
				--, FMS_GETPRICE_TYPE2_FUN('P', A.CONTRACT_PRICE_M, A.STRATEGY_PRICE, A.PLANNING_PRICE, A.MARGIN_RATE, A.FIXED_PRICE) AS PLANNING_PRICE			/* 기획단가 적용 */
				--, FMS_GETPRICE_TYPE2_FUN('M', A.CONTRACT_PRICE_M, A.STRATEGY_PRICE, A.PLANNING_PRICE, A.MARGIN_RATE, A.FIXED_PRICE) AS SALE_PRICE2				/* 판매단가 적용 */
				, A.FIXED_PRICE
				, (A.MARGIN_RATE + A.ADD_MARGIN) AS STD_MARGIN_RATE		/* 적용_이익율 */
				, A.CENTER_FLAG AS CENTER_FLAG2	/* 적용_센터경유 : PO_CONTRACT_F.PROC_TYP_CD의  값 참조 */				
				, A.PO_CONTRACT_ID									/* 구매 : 계약번호 */
				, DECODE(A.TAX_CODE,'100','과세','면세') AS TAX_CODE /* 과_면세 구분 */
				, A.CENTER_CODE										/* 센터코드 */
				, A.UPJANG													/* 업장 */
   	    		, :schDate AS STD_DATE								/* 단가개시일 */
	    		, <#if schDate2?has_content> :schDate2 <#else> '' </#if> AS STD_DATE2			/* 단가종료일 : 개시일 기준 */
				, '' AS CONTRACT_ID									/* 계약번호 */
				, '' AS CONTRACT_NM									/* 계약명 */
				, A.STD_UPJANG											/* 단가계약업장 */
				, A.CONTRACT_START AS SALE_PRICE_START	/* 구매_계약시작일 */
				, A.CONTRACT_END AS SALE_PRICE_END		/* 구매_계약종료일 */
   				, :schPdate AS STD_PDATE							/* 조건 : 자재이익율 기준일자 */
				, A.VD_SN													/* 구매_계약 업체 일련번호 */
				, A.APPLY_SD												/* 구매_계약 적용 시작일자 */
				, A.UPJANG_GRP											/* 구매_계약_업장군 코드 */
				, A.INCOME_PRICE										/* 단위당 물류수입액 */
				, A.WIN_ITEM_CD						/* 88코드 */
		FROM 
			(
					SELECT  
					  	  V.CENTER_CODE
						, V.UPJANG_GRP
						, V.UPJANG
						, V.CUSTCD
						, V.ITEM_CODE
						, V.ITEM_NAME
						, V.ITEM_SIZE
						, V.ITEM_UNIT
						, V.TAX_CODE
						, V.PO_CONTRACT_ID
						, V.CONTRACT_START
						, V.CONTRACT_END
						, NVL(V.CONTRACT_PRICE_M, 0) AS CONTRACT_PRICE_M
						, NVL(V.CONTRACT_PRICE_M, 0) AS CONTRACT_PRICE_S
						 /* 이익율...(단가업장, 자재코드) */
						--, FMS_GETMARGINRATE_FUN(V.UPJANG, V.ITEM_CODE) AS MARGIN_RATE
                        , DECODE(V.RATE1, 0, NVL(M2.MARGIN_RATE,0),  V.RATE1) AS MARGIN_RATE			/* 이익율 GET */
						, 0 AS ADD_MARGIN		-- 추가이익율(장려율)
						 /* 고정단가 */
						, NVL((SELECT Z.FIXED_PRICE
					  		     FROM FMS_MARGIN_V Z
							  	  WHERE Z.CLASS_TYPE = 'M'	/* 조건 : 자재 */ 
							  	    AND  Z.AP_UNITPRICE_UPJANG  = V.UPJANG			/* 조건 : 단가업장 */
					  				AND  Z.ITEM_CODE   = V.ITEM_CODE), 0) AS FIXED_PRICE
						, V.UPJANG AS STD_UPJANG			/* 단가계약업장 */                  												  
						, V.VD_SN									/* 구매_계약 업체 일련번호 */
						, V.APPLY_SD								/* 구매_계약 적용 시작일자 */
						, V.CENTER_FLAG							/* 센터경유 FLAG */
						, CASE WHEN V.ATTR09 = 'Y' THEN 0
								  ELSE (CASE WHEN NVL(FM.STRATEGY_RATE,0) = 0 THEN NVL(FM1.STRATEGY_RATE,0)
								  		  ELSE NVL(FM.STRATEGY_RATE,0) END)
								  END AS STRATEGY_RATE		/* 전략율 */
						, CASE WHEN V.ATTR10 = 'Y' THEN 0
								  ELSE (CASE WHEN NVL(FM.PLANNING_RATE,0) = 0 THEN NVL(FM1.PLANNING_RATE,0)
								  		  ELSE NVL(FM.PLANNING_RATE,0) END)
								  END AS PLANNING_RATE	/* 기획율 */
						, V.INCOME_PRICE /* 단위당 물류수입액 */
						, V.WIN_ITEM_CD /* 88코드 */
					FROM (
								SELECT 
								 	  Y.CENTER_CODE
									, Y.UPJANG_GRP											/* 업장군 */
									, Y.UPJANG
									, Y.CUSTCD
									, Y.ITEM_CODE
									, P.ITEM_NAME
									, P.ITEM_SIZE
									, P.TAX_CODE
									, P.PO_UOM AS ITEM_UNIT
									, P.ITEM_CLASS4
									, Y.CONTRACT_ID AS PO_CONTRACT_ID				/* 계약번호 - PO */
									, Y.CONTRACT_START 										/* 판매단가시작일 - PO */
									, Y.CONTRACT_END 											/* 판매단가종료일 - PO */	
									, Y.CONTRACT_PRICE_M
									, Y.CONTRACT_PRICE_M AS CONTRACT_PRICE_S
									, Y.VD_SN														/* 구매_계약 업체 일련번호 */
									, Y.APPLY_SD													/* 구매_계약 적용 시작일자 */
                   	 				, Y.PROC_TYP_CD AS CENTER_FLAG
									, U.ATTR09														/* 전략이익 제외여부 */
									, U.ATTR10														/* 기획이익 제외여부 */
                                    , NVL(M1.MARGIN_RATE, 0) AS RATE1					/* 자재 : 이익율 */
                                    , ROW_NUMBER() OVER (PARTITION BY Y.CENTER_CODE, Y.UPJANG, Y.ITEM_CODE  ORDER BY Y.CONTRACT_START DESC)  AS SEQ      -- 순서(자재코드 기준으로 부여) : 동일아이템이 2개이상 거래처에 존재 시 필터
                                    , INFO.ITEM_PRICE * ((INFO.DELY_DS_RATE + INFO.DELY_TC_RATE + INFO.DELY_DC_RATE + INFO.DELY_GS_RATE + INFO.DELY_BH_RATE + INFO.DELY_PK_RATE)*(0.01)) AS INCOME_PRICE /* 단위당 물류수입액 */
                                    , MTGL.WIN_ITEM_CD /* 88코드 */
								FROM 
										(
								    		SELECT 
												  Z.CENTER_CODE
									    		, Z.UPJANG    
									    		, Z.CUSTCD
									    		, Z.ITEM_CODE
									    		, MAX(Z.CONTRACT_START) AS CONTRACT_START
								    		FROM PO_CONTRACT_F Z 
											WHERE Z.CENTER_CODE  = :schCenter		/* 조건 : 센터코드 */
											AND    Z.UPJANG	       = :schUpjang		/* 조건 : 업장코드 */
											<#if schCust?has_content>
											AND   Z.CUSTCD = :schCust						/* 조건 : 업체코드 */
											<#else>
											AND    Z.CUSTCD           > 0
											</#if>
											AND    SUBSTR(Z.ITEM_CODE, 1, 1)  = 'F'	/* 조건 : 식자재 */
											AND    :schDate BETWEEN Z.CONTRACT_START AND Z.CONTRACT_END	/* 조건 : 단가개시일 */
											AND    Z.USE_YN         = 'Y'
								    		GROUP BY Z.CENTER_CODE, Z.UPJANG, Z.CUSTCD, Z.ITEM_CODE
								     	) X INNER JOIN PO_CONTRACT_F Y ON  Y.CENTER_CODE = :schCenter		/* 조건 : 센터코드 */
														    						   AND Y.UPJANG = :schUpjang				/* 조건 : 업장코드 */
														    						   AND X.CENTER_CODE = Y.CENTER_CODE
														    						   AND X.UPJANG         = Y.UPJANG
														    						   AND X.CUSTCD         = Y.CUSTCD
														    						   AND X.ITEM_CODE     = Y.ITEM_CODE
														    						   AND X.CONTRACT_START = Y.CONTRACT_START
															    
											/* 전략이익, 기획이익제외 여부 */
											INNER JOIN FMS_UPJANG U ON X.UPJANG = U.UPJANG  
											/* 이익율 : 자재 */
                                            LEFT JOIN FMS_MARGIN_V M1 ON M1.AP_UNITPRICE_UPJANG = :schUpjang	/* 조건 : 단가계약업장 */
                                            											AND M1.CLASS_TYPE = 'M'	/* 조건 : 자재 */
                                                                                   		AND X.ITEM_CODE = M1.ITEM_CODE
                                            /* 조건 : 예외설정에 + 품목 추가 : CK 분류 대상 (2015-09-30) */
											 INNER JOIN HLDC_PO_ITEM_MST P ON P.USE_YN = 'Y'
																				   AND (P.ITEM_CLASS3 NOT IN ('F2612','F2720','F2910') OR 
																				   		   P.ITEM_CODE IN (SELECT ITEM_CODE
																				   		   							FROM   FMS_ITEM_EXCEPTION
																													WHERE UPJANG = :schUpjang
																													AND    EXCEPTION_TYPE = '+'
																				   		   							)
																				   		  )
									    								 		   AND X.ITEM_CODE = P.ITEM_CODE
									    								 		   
												LEFT JOIN EPROCUSR.ESPINFO INFO ON INFO.SYS_ID = '100'
																				AND INFO.COMP_CD = 'HFC'
																				AND INFO.ITEM_CD = X.ITEM_CODE
																				AND INFO.PURC_OPER_ORG_SN IN (SELECT WHC.OPER_ORG_SN_PURC FROM EPROCUSR.ESPSWHC WHC WHERE  WHC.SYS_ID='100' AND WHC.COMP_CD = 'HFC' AND WHC.WH_CNTR_CD = X.CENTER_CODE)
																				AND :schDate BETWEEN  INFO.APPLY_SD AND INFO.APPLY_ED 
											 LEFT JOIN EPROCUSR.ESMMTGL MTGL ON X.ITEM_CODE = MTGL.ITEM_CD AND MTGL.SYS_ID = '100'

                                                                                   		 
							  ) V  LEFT JOIN FMS_MARGIN_V M2 ON M2.AP_UNITPRICE_UPJANG = :schUpjang	/* 조건 : 단가계약업장 */
                                                                 					  AND M2.CLASS_TYPE = 'D' 
                                                                 					  AND V.ITEM_CLASS4 = M2.ITEM_CODE
                                    /* 전략이익율 연계 : 2015-11-17 */                             					  
									LEFT JOIN FMS_STRATEGY_PROFIT FM ON FM.CENTER_CODE = :schCenter        /* 조건 : 센터코드 */
													  								  AND FM.CC_CD IN (SELECT CC_CD FROM ST_UPJANG WHERE UPJANG = :schUpjang)		/* 조건 : 업장코드 */
													  								  AND FM.PROFIT_DATE = :schPdate			/* 조건 : 전략이익율 기준일자 */
													  								  AND FM.CLASS_TYPE = 'M'						/* 조건 : 자재 기준 */
													  								  AND V.ITEM_CODE = FM.ITEM_CODE		 														    							  

									LEFT JOIN FMS_STRATEGY_PROFIT FM1 ON FM1.CENTER_CODE = :schCenter        /* 조건 : 센터코드 */
													  								  AND FM1.CC_CD IN (SELECT CC_CD FROM ST_UPJANG WHERE UPJANG = :schUpjang)		/* 조건 : 업장코드 */
													  								  AND FM1.PROFIT_DATE = :schPdate			/* 조건 : 전략이익율 기준일자 */
													  								  AND FM1.CLASS_TYPE = 'D'					/* 조건 : 세분류 기준 */
													  								  AND V.ITEM_CLASS4 = FM1.ITEM_CODE		 														    							  
                                                                 					  
                                                                 					  
							   WHERE V.SEQ = 1
								/* 예외설정 자재처리 :  FMS_ITEM_EXCEPTION (2015-09-30) */
						    	AND V.ITEM_CODE NOT IN (
																			/* 해당 업장에 예외설정 삭제 품목 */
																			SELECT 
																				ITEM_CODE
																			FROM FMS_ITEM_EXCEPTION
																			WHERE UPJANG = :schUpjang
																			AND    EXCEPTION_TYPE = '-'
																			)
							  
			)  A  --INNER JOIN VO_FC_VENDOR C ON TO_CHAR(A.CUSTCD) = C.VD_CD 제거함
	  ) S
		ORDER BY S.ITEM_CODE, S.CUST_CD
		]]>
	</statement>





	<!-- 식자재영업 판매단가 생성 목록을 조회한다.(계약번호 기준) -->
	<statement name="selectList2" type="select">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.selectList2 */
		<![CDATA[
 		SELECT /*+  USE_NL(B)  INDEX(B MV_ITEM_MST3_IDX01) )  */  -- NL_JOIN 유도 , 인덱스 사용강제 해당 MVIEW는 인덱스의 분포도가 좋지 않아 FULL TABLE SCAN이 발생함 
			  ROWNUM AS ROW_NUM
			, A.CUSTCD AS CUST_CD		/* 업체코드 */
			--, C.VD_NM AS CUST_NM		/* 업체명 */
			/* 중복된 업체가 많기 때문에 서브쿼리 사용으로 JOIN연산을 줄였으며, 해당 VIEW는 FULL TABLE SCAN 이 유도 되기 때문에 INDEX탐색을 위한 힌트 부여*/
    		,( SELECT /*+ USE_NL(C) PUSH_PRED(C.ATTH) PUSH_PRED(C.ACC)  */ C.VD_NM FROM FCUS.VO_FC_VENDOR C WHERE TO_CHAR(A.CUSTCD) = C.VD_CD) AS CUST_NM
			, A.ITEM_CODE					/* 자재코드 */	
			, B.ITEM_NAME					/* 자재명 */
			, DECODE(B.TAX_CODE,'100','과)','면)')||B.ITEM_SIZE	AS ITEM_SIZE	/* 규격 */
			, B.PO_UOM AS ITEM_UNIT	/* 단위 */
			, TO_CHAR(TO_DATE(D.CONTRACT_START,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_START	/* 기존_단가개시일 */
			, TO_CHAR(TO_DATE(D.CONTRACT_END,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_END		/* 기존_단가종료일 */
			, D.CONTRACT_PRICE_S AS CONTRACT_PRICE_S1	 	/* 기존_매입단가 */
			, D.SALE_PRICE AS SALE_PRICE1								/* 기존_판매단가 */
			, D.MARGIN_RATE AS MARGIN_RATE1						/* 기존_마진 */
			, D.CENTER_FLAG AS CENTER_FLAG1									/* 기존_센터경유 */
			--, NVL(A.CONTRACT_PRICE,0) AS CONTRACT_PRICE2			/* 적용_식재매입단가 */
			, TO_CHAR(TO_DATE(A.CONTRACT_START,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_START2	/* 적용_단가개시일 */
			, TO_CHAR(TO_DATE(A.CONTRACT_END,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_END2			/* 적용_단가종료일 */
			, NVL(A.CONTRACT_PRICE_S,0) AS CONTRACT_PRICE_S2	/* 적용_매입단가 */
			--, NVL(A.NEGO_PRICE,0) AS NEGO_PRICE2						/* 적용_네고단가 */
			, A.STRATEGY_PRICE
			, A.PLANNING_PRICE
			, NVL(A.SALE_PRICE,0) AS SALE_PRICE2							/* 적용_판매단가 */
			, NVL(A.STD_MARGIN_RATE,0) AS STD_MARGIN_RATE		/* 적용_이익율 */
			, NVL(A.MARGIN_RATE,0) AS MARGIN_RATE2					/* 적용_마진 */
			, A.CENTER_FLAG AS CENTER_FLAG2					/* 적용_센터경유 */
			, A.STRATEGY_RATE
			, A.PLANNING_RATE
        	, A.PO_CONTRACT_ID								/* 구매 : 계약번호 */
     		, DECODE(B.TAX_CODE,'100','과세','면세') AS TAX_CODE /* 과_면세 구분 */
          	, A.CENTER_CODE									/* 센터코드 */
        	, A.UPJANG												/* 업장 */
    	    , :schDate AS STD_DATE							/* 단가개시일 */
    		, <#if schDate2?has_content> :schDate2 <#else> '' </#if> AS STD_DATE2			/* 단가종료일 : 개시일 기준 */
     		, A.CONTRACT_ID									/* 계약번호 */
     		, A.REMARK AS CONTRACT_NM					/* 계약명 */
     		, :schUpjang AS STD_UPJANG	/* 단가계약업장 */
     		, A.SALE_PRICE_START								/* 구매_계약시작일 */
     		, A.SALE_PRICE_END									/* 구매_계약종료일 */
     		, :schPdate AS STD_PDATE						/* 조건 : 자재이익율 기준일자 */
     		, A.VD_SN												/* 구매_계약 업체 일련번호 */
     		, A.APPLY_SD											/* 구매_계약 적용 시작일자 */
     		, 0 AS FIXED_PRICE
     		, A.UPJANG_GRP										/* 구매_계약_업장군 코드 */
     		, E.WIN_ITEM_CD /* 88코드 */
  		FROM FCUS.PO_CONTRACT_FSALE A INNER JOIN HLDC_PO_ITEM_MST B ON A.ITEM_CODE = B.ITEM_CODE
					     							--LEFT JOIN VO_FC_VENDOR C ON TO_CHAR(A.CUSTCD) = C.VD_CD		/* 이관자료 : 납품업체 정보 누락분 고려 */
					     							LEFT JOIN 	
						  								(SELECT --/*+ INDEX(D PO_CONTRACT_FSALE_PK) */
								  							  D.CENTER_CODE
															, D.UPJANG
															, D.ITEM_CODE
															, D.CONTRACT_START
															, D.CONTRACT_END
															, D.CONTRACT_PRICE
															, D.SALE_PRICE
															, D.MARGIN_RATE
															, D.CENTER_FLAG
															, NVL(D.CONTRACT_PRICE_S, D.CONTRACT_PRICE) AS CONTRACT_PRICE_S
						  								FROM FCUS.PO_CONTRACT_FSALE D
						  								WHERE D.CENTER_CODE = :schCenter		/* 조건 : 센터코드 */
						  								AND    D.UPJANG          = :schUpjang	/* 조건 : 고객사코드(업장) */
						  								--AND    D.ITEM_CODE     > ' '
						  								AND    TO_CHAR(TO_DATE(:schDate,'YYYYMMDD')-1,'YYYYMMDD') BETWEEN D.CONTRACT_START AND NVL(D.CONTRACT_END,'99999999')		/* 조건 : 단가개시일 */
						  								AND    D.USE_YN         = 'Y'
						 							 ) D ON  A.CENTER_CODE = D.CENTER_CODE
						     							 AND A.UPJANG          = D.UPJANG
						      							 AND A.ITEM_CODE     = D.ITEM_CODE
						      		   LEFT JOIN EPROCUSR.ESMMTGL E ON A.ITEM_CODE = E.ITEM_CD AND E.SYS_ID = '100'
 		WHERE A.CONTRACT_ID = :schContractId	/* 조건 : 계약번호 */	
 		AND    A.CENTER_CODE = :schCenter
		<#if schCust?has_content>
   		AND   A.CUSTCD = :schCust						/* 조건 : 업체코드 */
		</#if>
   		AND A.USE_YN      = 'Y'
 		ORDER BY A.ITEM_CODE, A.CUSTCD
		]]>
	</statement>



	<!-- 식자재영업 판매단가 생성 목록을 조회한다.(단가개시일 기준) : 식자재영업 판매단가 조회 -->
	<!-- FoodMaterialsSalePriceView : 2015-10-27 -->
	<statement name="selectListView" type="select">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.selectView */
		<![CDATA[
		SELECT
		 	 ROWNUM AS ROW_NUM
			, S.CUST_CD
			, S.CUST_NM
			, S.ITEM_CODE
			, S.ITEM_NAME
			, S.ITEM_SIZE
			, S.ITEM_UNIT
			, S.CONTRACT_START
			, S.CONTRACT_END
			, S.COST_PRICE_1
			, S.CONTRACT_PRICE_S1
			, S.SALE_PRICE1
			, S.MARGIN_RATE1
			, S.CENTER_FLAG1
			--, S.CONTRACT_PRICE2
			, S.CONTRACT_START2
			, S.CONTRACT_END2
			, S.COST_PRICE_2
			, S.CONTRACT_PRICE_S2
			--, S.NEGO_PRICE2
			, (CASE WHEN S.STRATEGY_PRICE = 0 THEN S.CONTRACT_PRICE_S2 ELSE S.STRATEGY_PRICE END) AS STRATEGY_PRICE
			, (CASE WHEN S.PLANNING_PRICE = 0 THEN
					(CASE WHEN  S.STRATEGY_PRICE = 0 THEN 	S.CONTRACT_PRICE_S2 
						     ELSE S.STRATEGY_PRICE END) 
				ELSE S.PLANNING_PRICE END) AS PLANNING_PRICE
			, S.SALE_PRICE2
			, S.STD_MARGIN_RATE					/* 적용_이익율 */
            , DECODE(S.CONTRACT_PRICE_S2, 0, 0, ROUND(((S.SALE_PRICE2 / S.CONTRACT_PRICE_S2)-1) * 100, 1)) AS MARGIN_RATE2								/* 적용_마진 : 매입금액 대비 판매단가 */
			, S.CENTER_FLAG2
			, S.STRATEGY_RATE
			, S.PLANNING_RATE
			, S.PO_CONTRACT_ID
			, S.TAX_CODE
			, S.CENTER_CODE	
			, S.UPJANG				
			, S.STD_DATE			
			, S.STD_DATE2
			, S.CONTRACT_ID		
			, S.CONTRACT_NM		
			, S.STD_UPJANG			
			, S.SALE_PRICE_START	
			, S.SALE_PRICE_END		
			, S.STD_PDATE			
			, S.VD_SN					
			, S.APPLY_SD				
			, S.FIXED_PRICE
			, S.UPJANG_GRP
		FROM
		(
			SELECT
			  	  A.CUSTCD AS CUST_CD	/* 업체코드 */
				, C.VD_NM AS CUST_NM	/* 업체명 */
				, A.ITEM_CODE				/* 자재코드 */
				, A.ITEM_NAME				/* 자재명 */
				, DECODE(A.TAX_CODE,'100','과)','면)')||A.ITEM_SIZE AS ITEM_SIZE	/* 규격 */
				, A.ITEM_UNIT /* 단위 */
				, TO_CHAR(TO_DATE(A.CONTRACT_START,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_START		/* 기존_단가개시일 */
				, TO_CHAR(TO_DATE(A.CONTRACT_END,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_END			/* 기존_단가종료일 */
				, NVL(A.COST_PRICE_2,0) AS COST_PRICE_1	 /* 기존_매입원가 */
				, NVL(A.CONTRACT_PRICE_S,0) AS CONTRACT_PRICE_S1	 /* 기존_매입단가 */
				, 0 AS SALE_PRICE1			/* 기존_판매단가 */
				, 0 AS MARGIN_RATE1		/* 기존_마진 */
				, A.CENTER_FLAG AS CENTER_FLAG1	/* 기존_센터경유 : PO_CONTRACT_F.PROC_TYP_CD의  값 참조 */				
				, NVL(A.CONTRACT_PRICE_M,0)	AS CONTRACT_PRICE2												/* 적용_식재매입단가 */
				, TO_CHAR(TO_DATE(:schDate,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_START2	/* 적용_단가개시일 */
	    		, <#if schDate2?has_content> TO_CHAR(TO_DATE(:schDate2,'YYYYMMDD'),'YYYY-MM-DD') <#else> '' </#if> AS CONTRACT_END2			/* 적용_단가종료일 */
				, NVL(A.COST_PRICE_2,0) AS COST_PRICE_2											/* 적용_매입원가 */
				, NVL(A.CONTRACT_PRICE_S,0) AS CONTRACT_PRICE_S2											/* 적용_매입단가 */
				, 0 AS NEGO_PRICE2																							/* 적용_네고단가 */
				, A.STRATEGY_RATE
				, A.PLANNING_RATE
				-- 종전방식 : 비율
				, FMS_GETPRICE_TYPE_FUN('S', A.CONTRACT_PRICE_M, A.STRATEGY_RATE, A.PLANNING_RATE, A.MARGIN_RATE, A.FIXED_PRICE) AS STRATEGY_PRICE			/* 전략단가 = 매입단가에 대한 기획율 적용 */
				, FMS_GETPRICE_TYPE_FUN('P', A.CONTRACT_PRICE_M, A.STRATEGY_RATE, A.PLANNING_RATE, A.MARGIN_RATE, A.FIXED_PRICE) AS PLANNING_PRICE			/* 기획단가 = 전략단가에 대한 전략율 적용 */
				, FMS_GETPRICE_TYPE_FUN('M', A.CONTRACT_PRICE_M, A.STRATEGY_RATE, A.PLANNING_RATE, A.MARGIN_RATE, A.FIXED_PRICE) AS SALE_PRICE2				/* 판매단가 = 기획단가에 대한 이익율 적용 */
				-- 변경 : 단가기준 재계산
				--, FMS_GETPRICE_TYPE2_FUN('S', A.CONTRACT_PRICE_M, A.STRATEGY_PRICE, A.PLANNING_PRICE, A.MARGIN_RATE, A.FIXED_PRICE) AS STRATEGY_PRICE			/* 전략단가  적용 */
				--, FMS_GETPRICE_TYPE2_FUN('P', A.CONTRACT_PRICE_M, A.STRATEGY_PRICE, A.PLANNING_PRICE, A.MARGIN_RATE, A.FIXED_PRICE) AS PLANNING_PRICE			/* 기획단가 적용 */
				--, FMS_GETPRICE_TYPE2_FUN('M', A.CONTRACT_PRICE_M, A.STRATEGY_PRICE, A.PLANNING_PRICE, A.MARGIN_RATE, A.FIXED_PRICE) AS SALE_PRICE2				/* 판매단가 적용 */
				, A.FIXED_PRICE
				, (A.MARGIN_RATE + A.ADD_MARGIN) AS STD_MARGIN_RATE		/* 적용_이익율 */
				, A.CENTER_FLAG AS CENTER_FLAG2	/* 적용_센터경유 : PO_CONTRACT_F.PROC_TYP_CD의  값 참조 */				
				, A.PO_CONTRACT_ID									/* 구매 : 계약번호 */
				, DECODE(A.TAX_CODE,'100','과세','면세') AS TAX_CODE /* 과_면세 구분 */
				, A.CENTER_CODE										/* 센터코드 */
				, A.UPJANG													/* 업장 */
   	    		, :schDate AS STD_DATE								/* 단가개시일 */
	    		, <#if schDate2?has_content> :schDate2 <#else> '' </#if> AS STD_DATE2			/* 단가종료일 : 개시일 기준 */
				, '' AS CONTRACT_ID									/* 계약번호 */
				, '' AS CONTRACT_NM									/* 계약명 */
				, A.STD_UPJANG											/* 단가계약업장 */
				, A.CONTRACT_START AS SALE_PRICE_START	/* 구매_계약시작일 */
				, A.CONTRACT_END AS SALE_PRICE_END		/* 구매_계약종료일 */
   				, :schPdate AS STD_PDATE							/* 조건 : 자재이익율 기준일자 */
				, A.VD_SN													/* 구매_계약 업체 일련번호 */
				, A.APPLY_SD												/* 구매_계약 적용 시작일자 */
				, A.UPJANG_GRP											/* 구매_계약_업장군 코드 */
		FROM 
			(
					SELECT  
					  	  V.CENTER_CODE
						, V.UPJANG_GRP
						, V.UPJANG
						, V.CUSTCD
						, V.ITEM_CODE
						, V.ITEM_NAME
						, V.ITEM_SIZE
						, V.ITEM_UNIT
						, V.TAX_CODE
						, V.PO_CONTRACT_ID
						, V.CONTRACT_START
						, V.CONTRACT_END
						, NVL(V.COST_PRICE_2, 0) AS COST_PRICE_2
						, NVL(V.CONTRACT_PRICE_M, 0) AS CONTRACT_PRICE_M
						, NVL(V.CONTRACT_PRICE_M, 0) AS CONTRACT_PRICE_S
						 /* 이익율...(단가업장, 자재코드) */
						--, FMS_GETMARGINRATE_FUN(V.UPJANG, V.ITEM_CODE) AS MARGIN_RATE
                        , DECODE(V.RATE1, 0, NVL(M2.MARGIN_RATE,0),  V.RATE1) AS MARGIN_RATE			/* 이익율 GET */
						, 0 AS ADD_MARGIN		-- 추가이익율(장려율)
						 /* 고정단가 */
						, NVL((SELECT Z.FIXED_PRICE
					  		     FROM FMS_MARGIN_V Z
							  	  WHERE  Z.CLASS_TYPE = 'M'	/* 조건 : 자재 */ 
							  	    AND    Z.AP_UNITPRICE_UPJANG  = V.UPJANG			/* 조건 : 단가업장 */
					  				AND    Z.ITEM_CODE   = V.ITEM_CODE), 0) AS FIXED_PRICE
						, V.UPJANG AS STD_UPJANG			/* 단가계약업장 */                  												  
						, V.VD_SN									/* 구매_계약 업체 일련번호 */
						, V.APPLY_SD								/* 구매_계약 적용 시작일자 */
						, V.CENTER_FLAG							/* 센터경유 FLAG */
						, CASE WHEN V.ATTR09 = 'Y' THEN 0
								  ELSE (CASE WHEN NVL(FM.STRATEGY_RATE,0) = 0 THEN NVL(FM1.STRATEGY_RATE,0)
								  		  ELSE NVL(FM.STRATEGY_RATE,0) END)
								  END AS STRATEGY_RATE		/* 전략율 */
						, CASE WHEN V.ATTR10 = 'Y' THEN 0
								  ELSE (CASE WHEN NVL(FM.PLANNING_RATE,0) = 0 THEN NVL(FM1.PLANNING_RATE,0)
								  		  ELSE NVL(FM.PLANNING_RATE,0) END)
								  END AS PLANNING_RATE	/* 기획율 */
					FROM (
								SELECT 
								 	  Y.CENTER_CODE
									, Y.UPJANG_GRP											/* 업장군 */
									, Y.UPJANG
									, Y.CUSTCD
									, Y.ITEM_CODE
									, P.ITEM_NAME
									, P.ITEM_SIZE
									, P.TAX_CODE
									, P.PO_UOM AS ITEM_UNIT
									, P.ITEM_CLASS4
									, Y.CONTRACT_ID AS PO_CONTRACT_ID				/* 계약번호 - PO */
									, Y.CONTRACT_START 										/* 판매단가시작일 - PO */
									, Y.CONTRACT_END 											/* 판매단가종료일 - PO */
									, Y.CONTRACT_PRICE AS COST_PRICE_2			   /* 매입원가 */
									, Y.CONTRACT_PRICE_M
									, Y.CONTRACT_PRICE_M AS CONTRACT_PRICE_S
									, Y.VD_SN														/* 구매_계약 업체 일련번호 */
									, Y.APPLY_SD													/* 구매_계약 적용 시작일자 */
                   	 				, Y.PROC_TYP_CD AS CENTER_FLAG
									, U.ATTR09														/* 전략이익 제외여부 */
									, U.ATTR10														/* 기획이익 제외여부 */
                                    , NVL(M1.MARGIN_RATE, 0) AS RATE1					/* 자재 : 이익율 */
                                    , ROW_NUMBER() OVER (PARTITION BY Y.CENTER_CODE, Y.UPJANG, Y.ITEM_CODE  ORDER BY Y.CONTRACT_START DESC)  AS SEQ      -- 순서(자재코드 기준으로 부여) : 동일아이템이 2개이상 거래처에 존재 시 필터
								FROM 
										(
								    		SELECT 
												  Z.CENTER_CODE
									    		, Z.UPJANG    
									    		, Z.CUSTCD
									    		, Z.ITEM_CODE
									    		, MAX(Z.CONTRACT_START) AS CONTRACT_START
								    		FROM PO_CONTRACT_F Z 
											WHERE Z.CENTER_CODE  = :schCenter		/* 조건 : 센터코드 */
											AND    Z.UPJANG	       = :schUpjang		/* 조건 : 업장코드 */
											<#if schCust?has_content>
											AND   Z.CUSTCD = :schCust						/* 조건 : 업체코드 */
											<#else>
											AND    Z.CUSTCD           > 0
											</#if>
											AND    SUBSTR(Z.ITEM_CODE, 1, 1)  = 'F'	/* 조건 : 식자재 */
											AND    :schDate BETWEEN Z.CONTRACT_START AND Z.CONTRACT_END	/* 조건 : 단가개시일 */
											AND    Z.USE_YN         = 'Y'
								    		GROUP BY Z.CENTER_CODE, Z.UPJANG, Z.CUSTCD, Z.ITEM_CODE
								     	) X INNER JOIN PO_CONTRACT_F Y ON  Y.CENTER_CODE = :schCenter		/* 조건 : 센터코드 */
														    						   AND Y.UPJANG = :schUpjang				/* 조건 : 업장코드 */
														    						   AND X.CENTER_CODE = Y.CENTER_CODE
														    						   AND X.UPJANG         = Y.UPJANG
														    						   AND X.CUSTCD         = Y.CUSTCD
														    						   AND X.ITEM_CODE     = Y.ITEM_CODE
														    						   AND X.CONTRACT_START = Y.CONTRACT_START
											/* 전략이익, 기획이익제외 여부 */
											INNER JOIN FMS_UPJANG U ON X.UPJANG = U.UPJANG  
											/* 이익율 : 자재 */
                                            LEFT JOIN FMS_MARGIN_V M1 ON M1.AP_UNITPRICE_UPJANG = :schUpjang	/* 조건 : 단가계약업장 */
                                            											AND M1.CLASS_TYPE = 'M'	/* 조건 : 자재 */ 
                                                                                   		AND X.ITEM_CODE = M1.ITEM_CODE
											 INNER JOIN HLDC_PO_ITEM_MST P ON P.USE_YN = 'Y'
									    								 		   AND X.ITEM_CODE = P.ITEM_CODE                                                                                       		
                                                                                   		 
							  ) V  LEFT JOIN FMS_MARGIN_V M2 ON M2.AP_UNITPRICE_UPJANG = :schUpjang	/* 조건 : 단가계약업장 */
                                                                 					  AND M2.CLASS_TYPE = 'D' 
                                                                 					  AND V.ITEM_CLASS4 = M2.ITEM_CODE
                                    /* 전략이익율 연계 : 2015-11-17 */                             					  
									LEFT JOIN FMS_STRATEGY_PROFIT FM ON FM.CENTER_CODE = :schCenter        /* 조건 : 센터코드 */
													  								  AND FM.CC_CD IN (SELECT CC_CD FROM ST_UPJANG WHERE UPJANG = :schUpjang)		/* 조건 : 업장코드 */
													  								  AND FM.PROFIT_DATE = :schPdate			/* 조건 : 전략이익율 기준일자 */
													  								  AND FM.CLASS_TYPE = 'M'						/* 조건 : 자재 기준 */
													  								  AND V.ITEM_CODE = FM.ITEM_CODE		 														    							  

									LEFT JOIN FMS_STRATEGY_PROFIT FM1 ON FM1.CENTER_CODE = :schCenter        /* 조건 : 센터코드 */
													  								  AND FM1.CC_CD IN (SELECT CC_CD FROM ST_UPJANG WHERE UPJANG = :schUpjang)		/* 조건 : 업장코드 */
													  								  AND FM1.PROFIT_DATE = :schPdate			/* 조건 : 전략이익율 기준일자 */
													  								  AND FM1.CLASS_TYPE = 'D'					/* 조건 : 세분류 기준 */
													  								  AND V.ITEM_CLASS4 = FM1.ITEM_CODE		 														    							  
                                                                 					  
							   WHERE V.SEQ = 1
			)  A  INNER JOIN VO_FC_VENDOR C ON A.CUSTCD = C.VD_CD
	  ) S
		ORDER BY S.ITEM_CODE, S.CUST_CD
		]]>
	</statement>




	<!-- 식자재영업 판매단가 생성 목록을 조회한다.(계약번호 기준 : 조회용도) -->
	<!-- FoodMaterialsSalePriceView2 : 2015-10-27 -->
	<statement name="selectListView2" type="select">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.selectListView2 */
		<![CDATA[
 		SELECT 
			  ROWNUM AS ROW_NUM
			, A.CUSTCD AS CUST_CD		/* 업체코드 */
			, C.VD_NM AS CUST_NM		/* 업체명 */
			, A.ITEM_CODE					/* 자재코드 */	
			, B.ITEM_NAME					/* 자재명 */
			, DECODE(B.TAX_CODE,'100','과)','면)')||B.ITEM_SIZE	AS ITEM_SIZE	/* 규격 */
			, B.PO_UOM AS ITEM_UNIT	/* 단위 */
			, TO_CHAR(TO_DATE(D.CONTRACT_START,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_START	/* 기존_단가개시일 */
			, TO_CHAR(TO_DATE(D.CONTRACT_END,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_END		/* 기존_단가종료일 */
			, NVL(D.COST_PRICE_1, 0) AS COST_PRICE_1 	 		/* 기존_매입원가 */
			, D.CONTRACT_PRICE_S AS CONTRACT_PRICE_S1	 	/* 기존_매입단가 */
			, D.SALE_PRICE AS SALE_PRICE1								/* 기존_판매단가 */
			, D.MARGIN_RATE AS MARGIN_RATE1						/* 기존_마진 */
			, D.CENTER_FLAG AS CENTER_FLAG1								/* 기존_센터경유 */
			--, NVL(A.CONTRACT_PRICE,0) AS CONTRACT_PRICE2			/* 적용_식재매입단가 */
			, TO_CHAR(TO_DATE(A.CONTRACT_START,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_START2	/* 적용_단가개시일 */
			, TO_CHAR(TO_DATE(A.CONTRACT_END,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_END2			/* 적용_단가종료일 */
            , FMS_GETCOST_PRICE_FUN(A.CENTER_CODE, A.UPJANG, A.ITEM_CODE, A.CONTRACT_START) AS COST_PRICE_2		/* 적용_매입원가 */
			, NVL(A.CONTRACT_PRICE_S,0) AS CONTRACT_PRICE_S2	/* 적용_매입단가 */
			--, NVL(A.NEGO_PRICE,0) AS NEGO_PRICE2						/* 적용_네고단가 */
			, A.STRATEGY_PRICE
			, A.PLANNING_PRICE
			, NVL(A.SALE_PRICE,0) AS SALE_PRICE2							/* 적용_판매단가 */
			, NVL(A.STD_MARGIN_RATE,0) AS STD_MARGIN_RATE		/* 적용_이익율 */
			, NVL(A.MARGIN_RATE,0) AS MARGIN_RATE2					/* 적용_마진 */
			, A.CENTER_FLAG AS CENTER_FLAG2					/* 적용_센터경유 */
			, A.STRATEGY_RATE
			, A.PLANNING_RATE
        	, A.PO_CONTRACT_ID								/* 구매 : 계약번호 */
     		, DECODE(B.TAX_CODE,'100','과세','면세') AS TAX_CODE /* 과_면세 구분 */
          	, A.CENTER_CODE									/* 센터코드 */
        	, A.UPJANG												/* 업장 */
    	    , :schDate AS STD_DATE							/* 단가개시일 */
    		, <#if schDate2?has_content> :schDate2 <#else> '' </#if> AS STD_DATE2			/* 단가종료일 : 개시일 기준 */
     		, A.CONTRACT_ID									/* 계약번호 */
     		, A.REMARK AS CONTRACT_NM					/* 계약명 */
     		, :schUpjang AS STD_UPJANG	/* 단가계약업장 */
     		, A.SALE_PRICE_START								/* 구매_계약시작일 */
     		, A.SALE_PRICE_END									/* 구매_계약종료일 */
     		, :schPdate AS STD_PDATE						/* 조건 : 자재이익율 기준일자 */
     		, A.VD_SN												/* 구매_계약 업체 일련번호 */
     		, A.APPLY_SD											/* 구매_계약 적용 시작일자 */
     		, 0 AS FIXED_PRICE
     		, A.UPJANG_GRP										/* 구매_계약_업장군 코드 */
  		FROM PO_CONTRACT_FSALE A INNER JOIN HLDC_PO_ITEM_MST B ON A.ITEM_CODE = B.ITEM_CODE
					     							LEFT JOIN VO_FC_VENDOR C ON A.CUSTCD = C.VD_CD		/* 이관자료 : 납품업체 정보 누락분 고려 */
					     							LEFT JOIN 	
						  								(SELECT /*+ INDEX(D PO_CONTRACT_FSALE_PK) */
								  							  D.CENTER_CODE
															, D.UPJANG
															, D.ITEM_CODE
															, D.CONTRACT_START
															, D.CONTRACT_END
															, D.CONTRACT_PRICE
															, D.SALE_PRICE
															, D.MARGIN_RATE
															, D.CENTER_FLAG
															, NVL(D1.CONTRACT_PRICE, 0) AS COST_PRICE_1		/* 구매_매입원가 */
															, NVL(D.CONTRACT_PRICE_S, D.CONTRACT_PRICE) AS CONTRACT_PRICE_S
						  								FROM PO_CONTRACT_FSALE D LEFT JOIN PO_CONTRACT_F D1 ON TO_CHAR(TO_DATE(:schDate,'YYYYMMDD')-1,'YYYYMMDD') BETWEEN D1.CONTRACT_START AND D1.CONTRACT_END
						  																													 AND D.CENTER_CODE = D1.CENTER_CODE
						  																													 AND D.UPJANG = D1.UPJANG
						  																													 AND D.ITEM_CODE = D1.ITEM_CODE
						  								WHERE D.CENTER_CODE = :schCenter		/* 조건 : 센터코드 */
						  								AND    D.UPJANG          = :schUpjang	/* 조건 : 고객사코드(업장) */
						  								AND    D.ITEM_CODE     > ' '
						  								AND    TO_CHAR(TO_DATE(:schDate,'YYYYMMDD')-1,'YYYYMMDD') BETWEEN D.CONTRACT_START AND D.CONTRACT_END		/* 조건 : 단가개시일 */
						  								AND    D.USE_YN         = 'Y'
						 							 ) D ON  A.CENTER_CODE = D.CENTER_CODE
						     							 AND A.UPJANG          = D.UPJANG
						      							 AND A.ITEM_CODE     = D.ITEM_CODE
 		WHERE A.CONTRACT_ID = :schContractId	/* 조건 : 계약번호 */	
 		AND    A.CENTER_CODE = :schCenter
		<#if schCust?has_content>
   		AND   A.CUSTCD = :schCust						/* 조건 : 업체코드 */
		</#if>
   		AND A.USE_YN      = 'Y'
 		ORDER BY A.ITEM_CODE, A.CUSTCD
		]]>
	</statement>




	<!-- 식자재영업 구매단가 관련 자재를 검색한다 -->
	<statement name="selectItem" type="select">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.selectItem */
		<![CDATA[
		SELECT
       		  A.CUSTCD AS CUST_CD    	/* 업체코드 */
     		, C.VD_NM || '(' || A.CUSTCD || ')'  AS CUST_NM		/* 업체명 */
     		, A.ITEM_CODE                	/* 자재코드 */
     		, B.ITEM_NAME                	/* 자재명 */
     		, DECODE(B.TAX_CODE,'100','과)','면)')||B.ITEM_SIZE AS ITEM_SIZE    /* 규격 */
     		, B.PO_UOM AS ITEM_UNIT 					/* 단위 */
     		, A.CENTER_CODE                            	/* 센터코드 */
     		, A.UPJANG                                        /* 업장 */
    		, :schDate AS STD_DATE						/* 단가개시일 */
	    	, <#if schDate2?has_content> :schDate2 <#else> '' </#if> AS STD_DATE2			/* 단가종료일 : 개시일 기준 */
    		, :schOrgDate AS STD_ORG_DATE						/* 단가개시일_ORG */
	    	, <#if schOrgDate2?has_content> :schOrgDate2 <#else> '' </#if> AS STD_ORG_DATE2			/* 단가종료일_ORG : 개시일 기준 */
     		, A.CONTRACT_START                        	/* 계약시작일 */
		FROM 
				(        
	     			SELECT
		    		 	  Z.CENTER_CODE
						, Z.UPJANG    
						, Z.CUSTCD
						, Z.ITEM_CODE
						, Z.CONTRACT_START
						, ROW_NUMBER() OVER (PARTITION BY Z.CENTER_CODE, Z.UPJANG, Z.ITEM_CODE  ORDER BY Z.CONTRACT_START DESC)  AS SEQ      -- 순서(자재코드 기준으로 부여) : 동일아이템이 2개이상 거래처에 존재 시 필터
	     			FROM
		     				(
		    				SELECT 
			    					  S.CENTER_CODE
									, S.UPJANG    
									, S.CUSTCD
									, S.ITEM_CODE
									, MAX(S.CONTRACT_START) AS CONTRACT_START
		    				FROM PO_CONTRACT_F S 
							WHERE S.CENTER_CODE  = :schCenter		/* 조건 : 센터코드 */
							AND    S.UPJANG	       = :schUpjang		/* 조건 : 업장코드 */
							AND    S.CUSTCD           > 0
							AND    SUBSTR(S.ITEM_CODE, 1, 1)  = 'F'	/* 조건 : 식자재 */
							--AND    S.CONTRACT_START <= :schDate		/* 조건 : 단가개시일 */
							AND    :schDate BETWEEN S.CONTRACT_START AND S.CONTRACT_END		/* 조건 : 단가개시일 */
							AND    S.USE_YN         = 'Y'
		    				GROUP BY S.CENTER_CODE, S.UPJANG, S.CUSTCD, S.ITEM_CODE
		    				) Z
	 				)  A  INNER JOIN HLDC_PO_ITEM_MST B ON B.USE_YN = 'Y'
                                            /* 조건 : 예외설정에 + 품목 추가 : CK 분류 대상 (2015-09-30) */                                       		
															      AND (B.ITEM_CLASS3 NOT IN ('F2612','F2720','F2910') OR 
																   		   B.ITEM_CODE IN (SELECT ITEM_CODE
																   		   							FROM   FMS_ITEM_EXCEPTION
																									WHERE UPJANG = :schUpjang
																									AND    EXCEPTION_TYPE = '+'
																   		   							)
																   		  )
						     									AND A.ITEM_CODE = B.ITEM_CODE
               			   INNER JOIN VO_FC_VENDOR C ON A.CUSTCD = C.VD_CD
		WHERE A.SEQ = 1
		AND    A.ITEM_CODE NOT IN (
					   							 /* 해당 업장에 예외설정 삭제 품목 (2015-09-30) */
					       						SELECT 
						  							 ITEM_CODE
					     						FROM FMS_ITEM_EXCEPTION
					    						WHERE UPJANG = :schUpjang
					    						AND    EXCEPTION_TYPE = '-'
					    						)
		<#if schCode?has_content>
		AND     A.ITEM_CODE LIKE '%' || :schCode || '%'
		</#if>
		<#if schName?has_content>
		AND     B.ITEM_NAME LIKE  '%' || :schName || '%'			
		</#if>
		<#if schCustNm?has_content>
		AND     C.VD_NM LIKE  '%' || :schCustNm || '%'			
		</#if>
		ORDER BY A.ITEM_CODE, A.CUSTCD
		]]>
	</statement>


	<!-- 식자재영업 추가 자재에 대한 구매정보를 조회한다 (사용 : X)-->
	<statement name="selectItemPoOld" type="select">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.selectItemPoOld */
		<![CDATA[
		SELECT
			 ROWNUM AS ROW_NUM
     		, S.CUST_CD								/* 업체코드 */
     		, S.CUST_NM								/* 업체명 */
     		, S.ITEM_CODE							/* 자재코드 */
     		, S.ITEM_NAME							/* 자재명 */
     		, S.ITEM_SIZE								/* 규격 */
     		, S.ITEM_UNIT 								/* 단위 */
     		, S.CONTRACT_START					/* 기존_단가개시일 */
     		, S.CONTRACT_END						/* 기존_단가종료일 */
     		, S.CONTRACT_PRICE_S1	 			/* 기존_매입단가 */
     		, S.SALE_PRICE1							/* 기존_판매단가 */
     		, S.MARGIN_RATE1						/* 기존_마진 */
     		, S.CENTER_FLAG1						/* 기존_센터경유 */
     		, S.CONTRACT_PRICE2					/* 적용_식재매입단가 */
			, S.CONTRACT_START2					/* 적용_단가개시일 */
     		, S.CONTRACT_END2					/* 적용_단가종료일 */
     		, S.CONTRACT_PRICE_S2				/* 적용_매입단가 */
     		, S.NEGO_PRICE2							/* 적용_네고단가 */
			, (CASE WHEN S.STRATEGY_PRICE = 0 THEN S.CONTRACT_PRICE_S2 ELSE S.STRATEGY_PRICE END) AS STRATEGY_PRICE
			, (CASE WHEN S.PLANNING_PRICE = 0 THEN
					(CASE WHEN  S.STRATEGY_PRICE = 0 THEN 	S.CONTRACT_PRICE_S2 
						     ELSE S.STRATEGY_PRICE END) 
				ELSE S.PLANNING_PRICE END) AS PLANNING_PRICE
			, S.SALE_PRICE2
			, S.STD_MARGIN_RATE				/* 적용이익율 */
			--, DECODE(S.FIXED_PRICE, 0, S.MARGIN_RATE2, ((S.FIXED_PRICE / S.CONTRACT_PRICE_S2)-1) * 100) AS MARGIN_RATE2								/* 적용_마진 */
            , DECODE(S.CONTRACT_PRICE_S2, 0, 0, ROUND(((S.SALE_PRICE2 / S.CONTRACT_PRICE_S2)-1) * 100, 1)) AS MARGIN_RATE2								/* 적용_마진 : 매입금액 대비 판매단가 */
			, S.CENTER_FLAG2
			, S.STRATEGY_RATE
			, S.PLANNING_RATE
			, S.PO_CONTRACT_ID
			, S.TAX_CODE
       		, S.CENTER_CODE	
    	    , S.UPJANG				
    	    , S.STD_DATE
    	    , S.STD_DATE2
     		, S.CONTRACT_ID		
     		, S.CONTRACT_NM		
     		, S.STD_UPJANG			
     		, S.SALE_PRICE_START	
     		, S.SALE_PRICE_END		
			, S.STD_PDATE			
     		, S.VD_SN					
     		, S.APPLY_SD				
     		, S.FIXED_PRICE
     		, S.UPJANG_GRP
		FROM 
		(
			SELECT
     		  	  A.CUSTCD AS CUST_CD				/* 업체코드 */
     			, C.VD_NM AS CUST_NM				/* 업체명 */
     			, A.ITEM_CODE							/* 자재코드 */
     			, B.ITEM_NAME							/* 자재명 */
     			, DECODE(B.TAX_CODE,'100','과)','면)')||B.ITEM_SIZE AS ITEM_SIZE	/* 규격 */
     			, B.PO_UOM AS ITEM_UNIT 														/* 단위 */
     			, TO_CHAR(TO_DATE(D.CONTRACT_START,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_START		/* 기존_단가개시일 */
     			, TO_CHAR(TO_DATE(D.CONTRACT_END,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_END			/* 기존_단가종료일 */
     			, NVL(D.CONTRACT_PRICE_S,0) AS CONTRACT_PRICE_S1	 			/* 기존_매입단가 */
     			, 0 AS SALE_PRICE1																	/* 기존_판매단가 */
     			, 0 AS MARGIN_RATE1																/* 기존_마진 */
     			--, DECODE(C.PO_CENTER_YN,'N','N',B.CENTER_FLAG) AS CENTER_FLAG1			/* 기존_센터경유 */
				, D.CENTER_FLAG AS  CENTER_FLAG1    	/* 기존_센터경유 */		
     			, NVL(D.CONTRACT_PRICE_M,0)	AS CONTRACT_PRICE2															/* 적용_식재매입단가 */
				, TO_CHAR(TO_DATE(:schDate,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_START2	/* 적용_단가개시일 */
	    		, <#if schDate2?has_content> TO_CHAR(TO_DATE(:schDate2,'YYYYMMDD'),'YYYY-MM-DD') <#else> '' </#if> AS CONTRACT_END2			/* 적용_단가종료일 */
     			, NVL(D.CONTRACT_PRICE_S,0) AS CONTRACT_PRICE_S2	/* 적용_매입단가 */
     			, 0 AS NEGO_PRICE2													/* 적용_네고단가 */
     			, D.STRATEGY_RATE
     			, D.PLANNING_RATE
     			, FMS_GETPRICE_TYPE_FUN('S', D.CONTRACT_PRICE_M, D.STRATEGY_RATE, D.PLANNING_RATE, D.MARGIN_RATE, D.FIXED_PRICE) AS STRATEGY_PRICE
     			, FMS_GETPRICE_TYPE_FUN('P', D.CONTRACT_PRICE_M, D.STRATEGY_RATE, D.PLANNING_RATE, D.MARGIN_RATE, D.FIXED_PRICE) AS PLANNING_PRICE
     			, FMS_GETPRICE_TYPE_FUN('M', D.CONTRACT_PRICE_M, D.STRATEGY_RATE, D.PLANNING_RATE, D.MARGIN_RATE, D.FIXED_PRICE) AS SALE_PRICE2
     			, D.FIXED_PRICE
     			, (D.MARGIN_RATE + D.ADD_MARGIN) AS STD_MARGIN_RATE	/* 적용_이익율 */
        		--, DECODE(D.FIXED_PRICE, 0, 10 * CEIL(D.CONTRACT_PRICE_S / (1 - ((D.MARGIN_RATE + D.ADD_MARGIN) / 100)) / 10), D.FIXED_PRICE) AS SALE_PRICE2			/* 적용_판매단가 */
        		--, DECODE(D.FIXED_PRICE, 0, (D.MARGIN_RATE + D.ADD_MARGIN), 100 * (1 - (D.CONTRACT_PRICE_S / D.FIXED_PRICE))) AS MARGIN_RATE2								/* 적용_마진 */
     			--, DECODE(C.PO_CENTER_YN,'N','N',B.CENTER_FLAG) AS CENTER_FLAG2	/* 적용_센터경유 */
				, D.CENTER_FLAG AS  CENTER_FLAG2    	/* 적용_센터경유 */		
     			, D.PO_CONTRACT_ID									/* 구매 : 계약번호 */
     			, DECODE(B.TAX_CODE,'100','과세','면세') AS TAX_CODE /* 과_면세 구분 */
       			, A.CENTER_CODE										/* 센터코드 */
    			, A.UPJANG													/* 업장 */
    			, :schDate AS STD_DATE								/* 단가개시일 */
	    		, <#if schDate2?has_content> :schDate2 <#else> '' </#if> AS STD_DATE2			/* 단가종료일 : 개시일 기준 */
     			, '' AS CONTRACT_ID									/* 계약번호 */
     			, '' AS CONTRACT_NM									/* 계약명 */
     			, D.STD_UPJANG											/* 단가계약업장 */
     			, D.CONTRACT_START AS SALE_PRICE_START	/* 구매_계약시작일 */
     			, D.CONTRACT_END AS SALE_PRICE_END		/* 구매_계약종료일 */
     			, :schPdate AS STD_PDATE							/* 조건 : 자재이익율 기준일자 */
     			, D.VD_SN													/* 구매_계약 업체 일련번호 */
     			, D.APPLY_SD												/* 구매_계약 적용 시작일자 */
     			, D.UPJANG_GRP											/* 구매_계약 업장군 코드 */
			FROM PO_TREAT_UPJANG_V A  INNER JOIN HLDC_PO_ITEM_MST B ON B.USE_YN = 'Y'
                                                         								 AND A.ITEM_CODE = B.ITEM_CODE   
					  								--INNER JOIN ST_CUST C ON  A.CUSTCD = C.CUSTCD
					     							INNER JOIN VO_FC_VENDOR C ON A.CUSTCD = C.VD_CD
					  								INNER JOIN 
						 											(
																		SELECT 
																 			 	  Y.CENTER_CODE
																				, Y.UPJANG_GRP
																				, Y.UPJANG
																				, Y.CUSTCD
																				, Y.ITEM_CODE
																				, Y.CONTRACT_ID AS PO_CONTRACT_ID	/* 계약번호 - PO */
																				, Y.CONTRACT_START 							/* 판매단가시작일 - PO */
																				, Y.CONTRACT_END 								/* 판매단가종료일 - PO */	
																				, Y.CONTRACT_PRICE_M
																				, Y.CONTRACT_PRICE_M AS CONTRACT_PRICE_S
																 				/* 이익율...(단가업장, 자재코드) */
																				, FMS_GETMARGINRATE_FUN(Y.UPJANG, Y.ITEM_CODE) AS MARGIN_RATE
																				, 0 AS ADD_MARGIN		-- 추가이익율(장려율)
														  						/* 고정단가 */
																				, NVL((SELECT Z.FIXED_PRICE
                  												 		  				 FROM FMS_MARGIN_V Z
		  														 		  				 WHERE  Z.CLASS_TYPE = 'M'	/* 조건 : 자재 */  
		  														 		  				 AND     Z.AP_UNITPRICE_UPJANG  = Y.UPJANG			/* 조건 : 단가업장 */
                  												  						AND      Z.ITEM_CODE   = Y.ITEM_CODE), 0) AS FIXED_PRICE
																				, Y.UPJANG AS STD_UPJANG												/* 단가계약업장 */
																				, Y.VD_SN																		/* 구매_계약 업체 일련번호 */
																				, Y.APPLY_SD																	/* 구매_계약 적용 시작일자 */
                   	 															--, DECODE(Y.PROC_TYP_CD, 'VC', 'N', 'Y') AS CENTER_FLAG		/* 구매_센터경유 */
                   	 															, Y.PROC_TYP_CD AS CENTER_FLAG		/* 구매_센터경유 */
																				, DECODE(U.ATTR09, 'Y', 0, NVL(FM.STRATEGY_RATE, 0)) AS STRATEGY_RATE		/* 전략율 : 전략이익 제외일 경우 0 */
																				, DECODE(U.ATTR10, 'Y', 0, NVL(FM.PLANNING_RATE, 0)) AS PLANNING_RATE		/* 기획율 : 관리이익 제외일 경우 0*/
																		FROM  PO_CONTRACT_F Y 
																												/* 전략이익율 정보 FM_CONTRACT_PROFIT	*/
																												LEFT JOIN FM_CONTRACT_PROFIT FM ON FM.CENTER_CODE = :schCenter		/* 조건 : 센터코드 */
					 																						  													  AND FM.PROFIT_DATE  = :schPdate			/* 조건 : 전략이익율 기준일자 */ 
   				 																							  													  AND Y.ITEM_CODE = FM.ITEM_CODE		/* 조건 : 자재코드 		*/
																												/* 전략이익, 기획이익제외 여부 */
																												INNER JOIN FMS_UPJANG U ON Y.UPJANG = U.UPJANG  
																		WHERE Y.CENTER_CODE  = :schCenter		/* 조건 : 센터코드 */
																		AND    Y.UPJANG	   	   = :schUpjang		/* 조건 : 업장코드 */
																		AND    Y.CUSTCD	   	   = :schCust			/* 조건 : 업체코드 */
																		AND    Y.ITEM_CODE      = :schItemCode	/* 조건 : 자재코드 */
																		--AND    Y.CONTRACT_START = :schContractStart /* 조건 : 계약시작일 */
																		AND    :schContractStart BETWEEN Y.CONTRACT_START AND Y.CONTRACT_END  /* 조건 : 계약시작일 */
                                                					 ) D ON  A.CENTER_CODE = D.CENTER_CODE
                                                     					AND A.UPJANG          = D.UPJANG
                                                     					AND A.CUSTCD          = D.CUSTCD
                                                     					AND A.ITEM_CODE      = D.ITEM_CODE
         	WHERE A.CENTER_CODE = :schCenter        /* 조건 : 센터코드 */
         	AND     A.UPJANG         = :schUpjang        /* 조건 : 업장코드 */
        	AND     A.CUSTCD         = :schCust     		 /* 조건 : 업체코드 */
        	AND     A.ITEM_CODE     = :schItemCode    /* 조건 : 자재코드 */
        ) S	
		]]>
	</statement>


	<!-- 식자재영업 추가 자재에 대한 구매정보를 조회한다 -->
	<statement name="selectItemPo" type="select">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.selectItemPo */
		<![CDATA[
		SELECT
			 ROWNUM AS ROW_NUM
     		, S.CUST_CD								/* 업체코드 */
     		, S.CUST_NM								/* 업체명 */
     		, S.ITEM_CODE							/* 자재코드 */
     		, S.ITEM_NAME							/* 자재명 */
     		, S.ITEM_SIZE								/* 규격 */
     		, S.ITEM_UNIT 								/* 단위 */
     		, S.CONTRACT_START					/* 기존_단가개시일 */
     		, S.CONTRACT_END						/* 기존_단가종료일 */
     		, S.CONTRACT_PRICE_S1	 			/* 기존_매입단가 */
     		, S.SALE_PRICE1							/* 기존_판매단가 */
     		, S.MARGIN_RATE1						/* 기존_마진 */
     		, S.CENTER_FLAG1						/* 기존_센터경유 */
     		--, S.CONTRACT_PRICE2					/* 적용_식재매입단가 */
			, S.CONTRACT_START2					/* 적용_단가개시일 */
     		, S.CONTRACT_END2					/* 적용_단가종료일 */
     		, S.CONTRACT_PRICE_S2				/* 적용_매입단가 */
     		--, S.NEGO_PRICE2							/* 적용_네고단가 */
			, (CASE WHEN S.STRATEGY_PRICE = 0 THEN S.CONTRACT_PRICE_S2 ELSE S.STRATEGY_PRICE END) AS STRATEGY_PRICE
			, (CASE WHEN S.PLANNING_PRICE = 0 THEN
					(CASE WHEN  S.STRATEGY_PRICE = 0 THEN 	S.CONTRACT_PRICE_S2 
						     ELSE S.STRATEGY_PRICE END) 
				ELSE S.PLANNING_PRICE END) AS PLANNING_PRICE
			, S.SALE_PRICE2
			, S.STD_MARGIN_RATE					/* 적용_이익율 */
            , DECODE(S.CONTRACT_PRICE_S2, 0, 0, ROUND(((S.SALE_PRICE2 / S.CONTRACT_PRICE_S2)-1) * 100, 1)) AS MARGIN_RATE2								/* 적용_마진 : 매입금액 대비 판매단가 */
			, S.CENTER_FLAG2
			, S.STRATEGY_RATE
			, S.PLANNING_RATE
			, S.PO_CONTRACT_ID
			, S.TAX_CODE
       		, S.CENTER_CODE	
    	    , S.UPJANG				
    	    , S.STD_DATE
    	    , S.STD_DATE2
     		, S.CONTRACT_ID		
     		, S.CONTRACT_NM		
     		, S.STD_UPJANG			
     		, S.SALE_PRICE_START	
     		, S.SALE_PRICE_END		
			, S.STD_PDATE			
     		, S.VD_SN					
     		, S.APPLY_SD				
     		, S.FIXED_PRICE
     		, S.UPJANG_GRP
		FROM 
		(
			SELECT
     		  	  A.CUSTCD AS CUST_CD				/* 업체코드 */
     			, A.VD_NM AS CUST_NM				/* 업체명 */
     			, A.ITEM_CODE							/* 자재코드 */
     			, A.ITEM_NAME							/* 자재명 */
     			, A.ITEM_SIZE								/* 규격 */
     			, A.ITEM_UNIT 								/* 단위 */
     			, TO_CHAR(TO_DATE(A.CONTRACT_START,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_START		/* 기존_단가개시일 */
     			, TO_CHAR(TO_DATE(A.CONTRACT_END,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_END			/* 기존_단가종료일 */
     			, NVL(A.CONTRACT_PRICE_S,0) AS CONTRACT_PRICE_S1	 			/* 기존_매입단가 */
     			, 0 AS SALE_PRICE1																	/* 기존_판매단가 */
     			, 0 AS MARGIN_RATE1																/* 기존_마진 */
				, A.CENTER_FLAG AS  CENTER_FLAG1    	/* 기존_센터경유 */		
     			, NVL(A.CONTRACT_PRICE_M,0)	AS CONTRACT_PRICE2															/* 적용_식재매입단가 */
				, TO_CHAR(TO_DATE(:schDate,'YYYYMMDD'),'YYYY-MM-DD') AS CONTRACT_START2	/* 적용_단가개시일 */
	    		, <#if schDate2?has_content> TO_CHAR(TO_DATE(:schDate2,'YYYYMMDD'),'YYYY-MM-DD') <#else> '' </#if> AS CONTRACT_END2			/* 적용_단가종료일 */
     			, NVL(A.CONTRACT_PRICE_S,0) AS CONTRACT_PRICE_S2	/* 적용_매입단가 */
     			, 0 AS NEGO_PRICE2													/* 적용_네고단가 */
     			, A.STRATEGY_RATE
     			, A.PLANNING_RATE
     			-- 종전 : 비율 계산
     			, FMS_GETPRICE_TYPE_FUN('S', A.CONTRACT_PRICE_M, A.STRATEGY_RATE, A.PLANNING_RATE, A.MARGIN_RATE, A.FIXED_PRICE) AS STRATEGY_PRICE
     			, FMS_GETPRICE_TYPE_FUN('P', A.CONTRACT_PRICE_M, A.STRATEGY_RATE, A.PLANNING_RATE, A.MARGIN_RATE, A.FIXED_PRICE) AS PLANNING_PRICE
     			, FMS_GETPRICE_TYPE_FUN('M', A.CONTRACT_PRICE_M, A.STRATEGY_RATE, A.PLANNING_RATE, A.MARGIN_RATE, A.FIXED_PRICE) AS SALE_PRICE2
				-- 변경 : 단가기준 재계산
				--, FMS_GETPRICE_TYPE2_FUN('S', A.CONTRACT_PRICE_M, A.STRATEGY_PRICE, A.PLANNING_PRICE, A.MARGIN_RATE, A.FIXED_PRICE) AS STRATEGY_PRICE			/* 전략단가  적용 */
				--, FMS_GETPRICE_TYPE2_FUN('P', A.CONTRACT_PRICE_M, A.STRATEGY_PRICE, A.PLANNING_PRICE, A.MARGIN_RATE, A.FIXED_PRICE) AS PLANNING_PRICE			/* 기획단가 적용 */
				--, FMS_GETPRICE_TYPE2_FUN('M', A.CONTRACT_PRICE_M, A.STRATEGY_PRICE, A.PLANNING_PRICE, A.MARGIN_RATE, A.FIXED_PRICE) AS SALE_PRICE2				/* 판매단가 적용 */
     			, A.FIXED_PRICE
     			, (A.MARGIN_RATE + A.ADD_MARGIN) AS STD_MARGIN_RATE	/* 적용_이익율 */
				, A.CENTER_FLAG AS  CENTER_FLAG2    			/* 적용_센터경유 */		
     			, A.PO_CONTRACT_ID									/* 구매 : 계약번호 */
     			, A.TAX_CODE 											/* 과_면세 구분 */
       			, A.CENTER_CODE										/* 센터코드 */
    			, A.UPJANG													/* 업장 */
    			, :schDate AS STD_DATE								/* 단가개시일 */
	    		, <#if schDate2?has_content> :schDate2 <#else> '' </#if> AS STD_DATE2			/* 단가종료일 : 개시일 기준 */
     			, '' AS CONTRACT_ID									/* 계약번호 */
     			, '' AS CONTRACT_NM									/* 계약명 */
     			, A.STD_UPJANG											/* 단가계약업장 */
     			, A.CONTRACT_START AS SALE_PRICE_START	/* 구매_계약시작일 */
     			, A.CONTRACT_END AS SALE_PRICE_END		/* 구매_계약종료일 */
     			, :schPdate AS STD_PDATE							/* 조건 : 자재이익율 기준일자 */
     			, A.VD_SN													/* 구매_계약 업체 일련번호 */
     			, A.APPLY_SD												/* 구매_계약 적용 시작일자 */
     			, A.UPJANG_GRP											/* 구매_계약 업장군 코드 */
			FROM 
					(
					SELECT
				 		  		  V.CENTER_CODE
								, V.UPJANG_GRP
								, V.UPJANG
								, V.CUSTCD
     							, C.VD_NM 					/* 업체명 */
								, V.ITEM_CODE
								, B.ITEM_CLASS4
     							, B.ITEM_NAME				/* 자재명 */
     							, DECODE(B.TAX_CODE,'100','과)','면)')||B.ITEM_SIZE AS ITEM_SIZE	/* 규격 */
     							, B.PO_UOM AS ITEM_UNIT 														/* 단위 */
								, V.PO_CONTRACT_ID
     							, DECODE(B.TAX_CODE,'100','과세','면세') AS TAX_CODE 				/* 과_면세 구분 */
								, V.CONTRACT_START
								, V.CONTRACT_END	
								, V.CONTRACT_PRICE_M 
								, V.CONTRACT_PRICE_S
								, V.MARGIN_RATE
								, V.ADD_MARGIN
								, V.FIXED_PRICE
								, V.STD_UPJANG
								, V.VD_SN
								, V.APPLY_SD
								, V.CENTER_FLAG
								, CASE WHEN V.ATTR09 = 'Y' THEN 0
								  ELSE (CASE WHEN NVL(FM.STRATEGY_RATE,0) = 0 THEN NVL(FM1.STRATEGY_RATE,0)
								  		  ELSE NVL(FM.STRATEGY_RATE,0) END)
								  END AS STRATEGY_RATE		/* 전략율 */
								, CASE WHEN V.ATTR10 = 'Y' THEN 0
								  ELSE (CASE WHEN NVL(FM.PLANNING_RATE,0) = 0 THEN NVL(FM1.PLANNING_RATE,0)
								  		  ELSE NVL(FM.PLANNING_RATE,0) END)
								  END AS PLANNING_RATE	/* 기획율 */
					FROM
								(
									SELECT 
				 			 	  		  Y.CENTER_CODE
										, Y.UPJANG_GRP
										, Y.UPJANG
										, Y.CUSTCD
										, Y.ITEM_CODE
										, Y.CONTRACT_ID AS PO_CONTRACT_ID	/* 계약번호 - PO */
										, Y.CONTRACT_START 							/* 판매단가시작일 - PO */
										, Y.CONTRACT_END 								/* 판매단가종료일 - PO */	
										, NVL(Y.CONTRACT_PRICE_M, 0) AS CONTRACT_PRICE_M 
										, NVL(Y.CONTRACT_PRICE_M, 0) AS CONTRACT_PRICE_S
				 						/* 이익율...(단가업장, 자재코드) */
										, FMS_GETMARGINRATE_FUN(Y.UPJANG, Y.ITEM_CODE) AS MARGIN_RATE
										, 0 AS ADD_MARGIN		-- 추가이익율(장려율)
		  								/* 고정단가 */
										, NVL((SELECT Z.FIXED_PRICE
				 		  				 		  FROM FMS_MARGIN_V Z
				 		  				 		  WHERE Z.CLASS_TYPE = 'M'	/* 조건 : 자재 */  
				 		  				 		  AND    Z.AP_UNITPRICE_UPJANG  = Y.UPJANG			/* 조건 : 단가업장 */
				  						 		  AND    Z.ITEM_CODE   = Y.ITEM_CODE), 0) AS FIXED_PRICE
										, Y.UPJANG AS STD_UPJANG												/* 단가계약업장 */
										, Y.VD_SN																		/* 구매_계약 업체 일련번호 */
										, Y.APPLY_SD																	/* 구매_계약 적용 시작일자 */
										, Y.PROC_TYP_CD AS CENTER_FLAG		/* 구매_센터경유 */
										, U.ATTR09		/* 전략율 : 전략이익 제외일 경우 0 */
										, U.ATTR10		/* 기획율 : 관리이익 제외일 경우 0*/
									FROM  PO_CONTRACT_F Y 
												/* 전략이익, 기획이익제외 여부 */
												INNER JOIN FMS_UPJANG U ON Y.UPJANG = U.UPJANG 
									WHERE Y.CENTER_CODE  = :schCenter		/* 조건 : 센터코드 */
									AND    Y.UPJANG	   	   = :schUpjang		/* 조건 : 업장코드 */
									AND    Y.CUSTCD	   	   = :schCust			/* 조건 : 업체코드 */
									AND    Y.ITEM_CODE      = :schItemCode	/* 조건 : 자재코드 */
									AND    :schContractStart BETWEEN Y.CONTRACT_START AND Y.CONTRACT_END  /* 조건 : 계약시작일 */
                          		) V	    INNER JOIN HLDC_PO_ITEM_MST B ON B.USE_YN = 'Y'
                                                    								 	   AND V.ITEM_CODE = B.ITEM_CODE
			     							INNER JOIN VO_FC_VENDOR C ON TO_CHAR(V.CUSTCD) = C.VD_CD
                                    		/* 전략이익율 연계 : 2015-11-17 */                             					  
											LEFT JOIN FMS_STRATEGY_PROFIT FM ON FM.CENTER_CODE = :schCenter        /* 조건 : 센터코드 */
													  								  AND FM.CC_CD IN (SELECT CC_CD FROM ST_UPJANG WHERE UPJANG = :schUpjang)		/* 조건 : 업장코드 */
													  								  AND FM.PROFIT_DATE = :schPdate			/* 조건 : 전략이익율 기준일자 */
													  								  AND FM.CLASS_TYPE = 'M'						/* 조건 : 자재 기준 */
													  								  AND V.ITEM_CODE = FM.ITEM_CODE		 														    							  

											LEFT JOIN FMS_STRATEGY_PROFIT FM1 ON FM1.CENTER_CODE = :schCenter        /* 조건 : 센터코드 */
													  								  AND FM1.CC_CD IN (SELECT CC_CD FROM ST_UPJANG WHERE UPJANG = :schUpjang)		/* 조건 : 업장코드 */
													  								  AND FM1.PROFIT_DATE = :schPdate			/* 조건 : 전략이익율 기준일자 */
													  								  AND FM1.CLASS_TYPE = 'D'					/* 조건 : 세분류 기준 */
													  								  AND B.ITEM_CLASS4 = FM1.ITEM_CODE		 														    							  
							) A			     							
        ) S	
		]]>
	</statement>



	<!-- 식자재영업 판매단가 생성(을)를 등록한다. -->
	<!-- 1 ROW INSERT Query -->
	<statement name="insert" type="insert">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.insert */
		<![CDATA[
		INSERT INTO PO_CONTRACT_FSALE 
		(
	 		 CENTER_CODE
			, UPJANG
			, ITEM_CODE
			, CONTRACT_START
			, CONTRACT_ID
			, CUSTCD
			, AP_UNITPRICE_UPJANG
			, PO_CONTRACT_ID
			, SALE_PRICE_START
			, SALE_PRICE_END
			, REMARK
			, CENTER_FLAG
			, CONTRACT_PRICE
			, ORI_CONTRACT_PRICE
			, CONTRACT_PRICE_S
			, STD_MARGIN_RATE
			, MARGIN_RATE
			, SALE_PRICE
			, ORI_SALE_PRICE
			, CONTRACT_END
			, USE_YN
			, NEGO_PRICE
			, PO_PRICE
			, ADD_RATE
			, ADD_PRICE
			, STRATEGY_RATE
			, STRATEGY_PRICE
			, PLANNING_RATE
			, PLANNING_PRICE
			, SUBSIDY_RATE		/* 장려율 : SUBINV_CODE 매핑 X, SO_PR에만 적용 */
			, SUBSIDY_PRICE		/* 장려단가 : SUBINV_CODE 매핑 X, SO_PR에만 적용 */
			, OP_RATE				/* 운영율 */
			, OP_PRICE				/* 운영단가 */
			, VD_SN					/* PO_CONTRACT_F.VD_SN */
			, APPLY_SD				/* PO_CONTRACT_F.APPLY_SD */
			, UPJANG_GRP
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY 
		)
		SELECT
			  S.CENTER_CODE
			, S.UPJANG
			, S.ITEM_CODE
			, S.CONTRACT_START
			, S.CONTRACT_ID
			, S.CUSTCD
			, S.AP_UNITPRICE_UPJANG
			, S.PO_CONTRACT_ID
			, S.SALE_PRICE_START
			, S.SALE_PRICE_END
			, S.REMARK
			, S.CENTER_FLAG
			, S.CONTRACT_PRICE
			, S.ORI_CONTRACT_PRICE
			, S.CONTRACT_PRICE_S
			, S.STD_MARGIN_RATE
			, S.MARGIN_RATE
			, S.SALE_PRICE
			, S.ORI_SALE_PRICE
			, CASE WHEN NVL(S.CONTRACT_END,'1') = '1' THEN <#if stdDate2?has_content> :stdDate2 <#else> '' </#if>
			 ELSE S.CONTRACT_END END AS CONTRACT_END
			, S.USE_YN
			, S.NEGO_PRICE
			, S.PO_PRICE
			, S.ADD_RATE
			, S.ADD_PRICE
			, S.STRATEGY_RATE			
			, S.STRATEGY_PRICE		
			, S.PLANNING_RATE		
			, S.PLANNING_PRICE	
			, S.SUBSIDY_RATE
			, S.SUBSIDY_PRICE
			, S.OP_RATE
			, S.OP_PRICE
			, S.VD_SN
			, S.APPLY_SD
			, S.UPJANG_GRP
			, S.CREATE_DATE
			, S.CREATE_BY
			, S.UPDATE_DATE
			, S.UPDATE_BY
		FROM 
			(		
				SELECT 
	 		  		  :centerCode AS CENTER_CODE
        			, :upjang AS UPJANG
        			, :itemCode AS ITEM_CODE
        			, :stdDate AS CONTRACT_START
					, :stdDate || '-' || :centerCode || '-' || :upjang || '-' || '001' AS CONTRACT_ID		/* 단가계약번호 SET */
					, :custCd AS CUSTCD
					, :upjang AS AP_UNITPRICE_UPJANG
	    			, <#if poContractId?has_content> :poContractId <#else> P.PO_CONTRACT_ID </#if> AS PO_CONTRACT_ID
	    			, <#if salePriceStart?has_content> :salePriceStart <#else> NVL(P.CONTRACT_START, '')</#if> AS SALE_PRICE_START			/* PO_CONTRACT_F.CONTRACT_START */
	    			, <#if salePriceEnd?has_content> :salePriceEnd <#else> NVL(P.CONTRACT_END, '')</#if> AS SALE_PRICE_END			/* PO_CONTRACT_F.CONTRACT_END */
					, :contractNm AS REMARK
					, :centerFlag2 AS CENTER_FLAG
					, :contractPriceS2 AS CONTRACT_PRICE
					, :contractPriceS2 AS ORI_CONTRACT_PRICE
					, :contractPriceS2 AS CONTRACT_PRICE_S
					, :stdMarginRate AS STD_MARGIN_RATE
					, :marginRate2 AS MARGIN_RATE
					, :salePrice2 AS SALE_PRICE
					, :salePrice2  AS ORI_SALE_PRICE
        			, (SELECT /*+ INDEX_ASC(Z PO_CONTRACT_FSALE_PK) */
              		    TO_CHAR(TO_DATE(Z.CONTRACT_START,'YYYYMMDD')-1,'YYYYMMDD')
           			    FROM PO_CONTRACT_FSALE Z
          			    WHERE Z.CENTER_CODE = :centerCode		/* 조건 : 센터코드 */
           				AND    Z.UPJANG          = :upjang				/* 조건 : 업장 */
           				AND    Z.ITEM_CODE     = :itemCode			/* 조건 : 자재코드 */
           				AND    Z.CONTRACT_START > :stdDate		/* 조건 : 판매단가개시일 */
           				AND    ROWNUM <= 1) AS CONTRACT_END
					, 'Y' AS USE_YN
					, 0 AS NEGO_PRICE
	    			, <#if contractPriceS2?has_content> NVL(:contractPriceS2,0) <#else> NVL(P.CONTRACT_PRICE, 0)</#if> AS PO_PRICE	/* 	구매단가 SET */
					, NVL(P.MARGIN_RATE,0) AS ADD_RATE							/* 	구매추가율 SET */
	    			, <#if contractPriceS2?has_content> NVL(:contractPriceS2,0) <#else> NVL(P.CONTRACT_PRICE_M, 0)</#if> AS ADD_PRICE	/* 	구매추가단가 SET */
					, :strategyRate AS  STRATEGY_RATE									/* 전략율 */
					, :strategyPrice AS  STRATEGY_PRICE								/* 전략단가 */
					, :planningRate AS  PLANNING_RATE								/* 기획율 */
					, :planningPrice AS  PLANNING_PRICE								/* 기획단가 */
				   	, 0 AS SUBSIDY_RATE		/* 장려율 : SUBINV_CODE 매핑 X, SO_PR에만 적용 */
					, 0 AS SUBSIDY_PRICE		/* 장려단가 : SUBINV_CODE 매핑 X, SO_PR에만 적용 */
					, FMU_OP_RATE_FUN(:upjang, :itemCode, :stdDate) AS OP_RATE							/* 운영율 */
					, FMU_OP_PRICE_FUN(:upjang, :itemCode, :salePrice2, :stdDate) AS OP_PRICE		/* 운영단가 */
	    			, <#if vdSn?has_content> :vdSn <#else> NVL(P.VD_SN, '')</#if> AS VD_SN 							/* PO_CONTRACT_F.VD_SN */		
	    			, <#if applySd?has_content> :applySd <#else> NVL(P.APPLY_SD, '')</#if> AS APPLY_SD			/* PO_CONTRACT_F.APPLY_SD */
	    			, <#if upjangGrp?has_content> :upjangGrp <#else> NVL(P.UPJANG_GRP, '')</#if> AS UPJANG_GRP			/* PO_CONTRACT_F.UPJANG_GRP */
        			, SYSDATE AS CREATE_DATE
        			, :loginSabun AS CREATE_BY
        			, SYSDATE AS UPDATE_DATE
        			, :loginSabun AS UPDATE_BY
				FROM DUAL
	    				<#if poContractId?has_content>
				 		/* 구매(PO_CONTRACT_F) 정보 SET :  기존자료 존재 시 */
				 		LEFT JOIN PO_CONTRACT_F P ON P.CENTER_CODE = :centerCode				/* 조건 : 센터코드 		*/
				 												AND	P.UPJANG 		   = :upjang					/* 조건 : 업장 				*/					 										
							 									AND P.CUSTCD         = :custCd						/* 조건 : 업체코드 		*/
							 									AND P.ITEM_CODE     = :itemCode					/* 조건 : 자재코드 		*/
							 									AND P.CONTRACT_ID = :poContractId				/* 조건 : 구매계약번호 */
															    AND  :stdDate BETWEEN P.CONTRACT_START AND P.CONTRACT_END	/* 조건 : 단가개시일 */
							 									AND ROWNUM <= 1
						<#else>							
				 		/* 구매(PO_CONTRACT_F) 정보 SET :  엑셀업로드 시 */
				 		/* 자재가 PO_CONTRACT_F에 없으면 저장하면 X */
				 		--INNER JOIN (		/* PO_CONTRACT_F 에 현재 자료가 없어서 임시로 OUTER JOIN 으로 처리 */			
				 		LEFT JOIN (
										SELECT 
			  								  Y.CENTER_CODE
											, Y.UPJANG
											, Y.CUSTCD
											, Y.ITEM_CODE
											, Y.CONTRACT_ID AS PO_CONTRACT_ID				/* 계약번호 - PO */
											, Y.CONTRACT_START 										/* 판매단가시작일 - PO */
											, Y.CONTRACT_END 											/* 판매단가종료일 - PO */	
											, Y.CONTRACT_PRICE
											, Y.CONTRACT_PRICE_M
											, Y.CONTRACT_PRICE_M AS CONTRACT_PRICE_S
											, Y.MARGIN_RATE
											, Y.VD_SN														/* 구매_계약 업체 일련번호 */
											, Y.APPLY_SD													/* 구매_계약 적용 시작일자 */
											, Y.UPJANG_GRP												/* 업장군 */
										FROM PO_CONTRACT_F Y
										WHERE Y.CENTER_CODE  = :centerCode		/* 조건 : 센터코드 */
										AND    Y.UPJANG	       = :upjang			/* 조건 : 업장코드 */
										AND    Y.CUSTCD 		   = :custCd			/* 조건 : 업체코드 */
										AND    Y.ITEM_CODE      = :itemCode			/* 조건 : 자재코드 */
										AND    :stdDate BETWEEN Y.CONTRACT_START AND Y.CONTRACT_END	/* 조건 : 단가개시일 */
										AND    Y.USE_YN         = 'Y'
										AND    ROWNUM <= 1
									) P ON 1 = 1
						</#if>							 							
				) S
		]]>
	</statement>


	<!-- 식자재영업 판매단가 생성(을)를 등록한다. -->
	<!-- 일괄 INSERT Query : 배치 -->
	<statement name="insert2" type="insert">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.insert2 */
		<![CDATA[
		INSERT INTO PO_CONTRACT_FSALE 
		(
	 		 CENTER_CODE
			, UPJANG
			, ITEM_CODE
			, CONTRACT_START
			, CONTRACT_ID
			, CUSTCD
			, AP_UNITPRICE_UPJANG
			, PO_CONTRACT_ID
			, SALE_PRICE_START
			, SALE_PRICE_END
			, REMARK
			, CENTER_FLAG
			, CONTRACT_PRICE
			, ORI_CONTRACT_PRICE
			, CONTRACT_PRICE_S
			, STD_MARGIN_RATE
			, MARGIN_RATE
			, SALE_PRICE
			, ORI_SALE_PRICE
			, CONTRACT_END
			, USE_YN
			, NEGO_PRICE
			, PO_PRICE
			, ADD_RATE
			, ADD_PRICE
			, STRATEGY_RATE
			, STRATEGY_PRICE
			, PLANNING_RATE
			, PLANNING_PRICE
			, SUBSIDY_RATE		/* 장려율 : SUBINV_CODE 매핑 X, SO_PR에만 적용 */
			, SUBSIDY_PRICE		/* 장려단가 : SUBINV_CODE 매핑 X, SO_PR에만 적용 */
			, OP_RATE				/* 운영율 */
			, OP_PRICE				/* 운영단가 */
			, VD_SN					/* PO_CONTRACT_F.VD_SN */
			, APPLY_SD				/* PO_CONTRACT_F.APPLY_SD */
			, UPJANG_GRP
			, CREATE_DATE
			, CREATE_BY
			, UPDATE_DATE
			, UPDATE_BY 
		)
		SELECT
			  S.CENTER_CODE
			, S.UPJANG
			, S.ITEM_CODE
			, S.CONTRACT_START
			, S.CONTRACT_ID
			, S.CUSTCD
			, S.AP_UNITPRICE_UPJANG
			, S.PO_CONTRACT_ID
			, S.SALE_PRICE_START
			, S.SALE_PRICE_END
			, S.REMARK
			, S.CENTER_FLAG
			, S.CONTRACT_PRICE
			, S.ORI_CONTRACT_PRICE
			, S.CONTRACT_PRICE_S
			, S.STD_MARGIN_RATE
			, S.MARGIN_RATE
			, S.SALE_PRICE
			, S.ORI_SALE_PRICE
			, CASE WHEN NVL(S.CONTRACT_END,'1') = '1' THEN :stdDate2 ELSE S.CONTRACT_END END AS CONTRACT_END
			, S.USE_YN
			, S.NEGO_PRICE
			, S.PO_PRICE
			, S.ADD_RATE
			, S.ADD_PRICE
			, S.STRATEGY_RATE			
			, S.STRATEGY_PRICE		
			, S.PLANNING_RATE		
			, S.PLANNING_PRICE	
			, S.SUBSIDY_RATE
			, S.SUBSIDY_PRICE
			, S.OP_RATE
			, S.OP_PRICE
			, S.VD_SN
			, S.APPLY_SD
			, S.UPJANG_GRP
			, S.CREATE_DATE
			, S.CREATE_BY
			, S.UPDATE_DATE
			, S.UPDATE_BY
		FROM 
			(		
				SELECT 
	 		  		  :centerCode AS CENTER_CODE
        			, :upjang AS UPJANG
        			, :itemCode AS ITEM_CODE
        			, :stdDate AS CONTRACT_START
					, :stdDate || '-' || :centerCode || '-' || :upjang || '-' || '001' AS CONTRACT_ID		/* 단가계약번호 SET */
					, :custCd AS CUSTCD
					, :upjang AS AP_UNITPRICE_UPJANG
	    			, CASE WHEN NVL(:poContractId, '') = '' THEN P.PO_CONTRACT_ID ELSE :poContractId END AS PO_CONTRACT_ID
					, P.CONTRACT_START AS SALE_PRICE_START
					, P.CONTRACT_END AS SALE_PRICE_END
					, :contractNm AS REMARK
					, :centerFlag2 AS CENTER_FLAG
					, :contractPriceS2 AS CONTRACT_PRICE
					, :contractPriceS2 AS ORI_CONTRACT_PRICE
					, :contractPriceS2 AS CONTRACT_PRICE_S
					, :stdMarginRate AS STD_MARGIN_RATE
					, :marginRate2 AS MARGIN_RATE
					, :salePrice2 AS SALE_PRICE
					, :salePrice2  AS ORI_SALE_PRICE
        			, (SELECT /*+ INDEX_ASC(Z PO_CONTRACT_FSALE_PK) */
              		    TO_CHAR(TO_DATE(Z.CONTRACT_START,'YYYYMMDD')-1,'YYYYMMDD')
           			    FROM PO_CONTRACT_FSALE Z
          			    WHERE Z.CENTER_CODE = :centerCode		/* 조건 : 센터코드 */
           				AND    Z.UPJANG          = :upjang				/* 조건 : 업장 */
           				AND    Z.ITEM_CODE     = :itemCode			/* 조건 : 자재코드 */
           				AND    Z.CONTRACT_START > :stdDate		/* 조건 : 판매단가개시일 */
           				AND    ROWNUM <= 1) AS CONTRACT_END
					, 'Y' AS USE_YN
					, 0 AS NEGO_PRICE
					, NVL(P.CONTRACT_PRICE,0) AS PO_PRICE						/* 	구매단가 SET */
					, NVL(P.MARGIN_RATE,0) AS ADD_RATE							/* 	구매추가율 SET */
					, NVL(P.CONTRACT_PRICE_M,0) AS ADD_PRICE				/* 	구매추가단가 SET */
					, :strategyRate AS  STRATEGY_RATE									/* 전략율 */
					, :strategyPrice AS  STRATEGY_PRICE								/* 전략단가 */
					, :planningRate AS  PLANNING_RATE								/* 기획율 */
					, :planningPrice AS  PLANNING_PRICE								/* 기획단가 */
				   	, 0 AS SUBSIDY_RATE		/* 장려율 : SUBINV_CODE 매핑 X, SO_PR에만 적용 */
					, 0 AS SUBSIDY_PRICE		/* 장려단가 : SUBINV_CODE 매핑 X, SO_PR에만 적용 */
					, FMU_OP_RATE_FUN(:upjang, :itemCode, :stdDate) AS OP_RATE							/* 운영율 */
					, FMU_OP_PRICE_FUN(:upjang, :itemCode, :salePrice2, :stdDate) AS OP_PRICE		/* 운영단가 */
	    			, CASE WHEN NVL(:vdSn, '') = '' THEN NVL(P.VD_SN, '') ELSE :vdSn END AS VD_SN 							/* PO_CONTRACT_F.VD_SN */		
	    			, CASE WHEN NVL(:applySd, '') = '' THEN NVL(P.APPLY_SD, '') ELSE :applySd END AS APPLY_SD			/* PO_CONTRACT_F.APPLY_SD */
	    			, CASE WHEN NVL(:upjangGrp, '') = '' THEN NVL(P.UPJANG_GRP, '') ELSE :upjangGrp END AS UPJANG_GRP /* PO_CONTRACT_F.UPJANG_GRP */
        			, SYSDATE AS CREATE_DATE
        			, :loginSabun AS CREATE_BY
        			, SYSDATE AS UPDATE_DATE
        			, :loginSabun AS UPDATE_BY
				FROM DUAL
				 		LEFT JOIN (
										SELECT 
			  								  Y.CENTER_CODE
											, Y.UPJANG
											, Y.CUSTCD
											, Y.ITEM_CODE
											, Y.CONTRACT_ID AS PO_CONTRACT_ID				/* 계약번호 - PO */
											, Y.CONTRACT_START 										/* 판매단가시작일 - PO */
											, Y.CONTRACT_END 											/* 판매단가종료일 - PO */	
											, Y.CONTRACT_PRICE
											, Y.CONTRACT_PRICE_M
											, Y.CONTRACT_PRICE_M AS CONTRACT_PRICE_S
											, Y.MARGIN_RATE
											, Y.VD_SN														/* 구매_계약 업체 일련번호 */
											, Y.APPLY_SD													/* 구매_계약 적용 시작일자 */
											, Y.UPJANG_GRP												/* 업장군 */
										FROM 
												(
													SELECT 
						 								  Z.CENTER_CODE
														, Z.UPJANG	
														, Z.CUSTCD
														, Z.ITEM_CODE
														, MAX(Z.CONTRACT_START) AS CONTRACT_START
													FROM PO_CONTRACT_F Z 
													WHERE Z.CENTER_CODE  = :centerCode		/* 조건 : 센터코드 */
													AND    Z.UPJANG	       = :upjang			/* 조건 : 업장코드 */
   													AND    Z.CUSTCD 		   = :custCd			/* 조건 : 업체코드 */
													AND    Z.ITEM_CODE      = :itemCode			/* 조건 : 자재코드 */
													AND    :stdDate BETWEEN Z.CONTRACT_START AND Z.CONTRACT_END	/* 조건 : 단가개시일 */
													AND    Z.USE_YN         = 'Y'
													GROUP BY Z.CENTER_CODE, Z.UPJANG, Z.CUSTCD, Z.ITEM_CODE
									 			) X LEFT JOIN PO_CONTRACT_F Y ON Y.CENTER_CODE = X.CENTER_CODE
																							AND Y.UPJANG         = X.UPJANG
																							AND Y.CUSTCD         = X.CUSTCD
																							AND Y.ITEM_CODE     = X.ITEM_CODE
																							AND Y.CONTRACT_START = X.CONTRACT_START
																							AND ROWNUM <= 1
									) P ON P.CENTER_CODE = :centerCode		/* 조건 : 센터코드 */
									   AND P.UPJANG = :upjang						/* 조건 : 업장코드 */
									   AND P.CUSTCD = :custCd						/* 조건 : 업체코드 */
									   AND P.ITEM_CODE = :itemCode				/* 조건 : 자재코드 */
									   
				) S
		]]>
	</statement>



	
		<!-- 식자재영업 자재에 대한 시작일자를 조회한다 -->
	<statement name="selectItemDate" type="select">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.selectItemDate */
		<![CDATA[
		SELECT /*+ INDEX_ASC(PO_CONTRACT_FSALE PO_CONTRACT_FSALE_PK) */
       			TO_CHAR(TO_DATE(A.CONTRACT_START,'YYYYMMDD')-1,'YYYYMMDD') AS CONTRACT_START
  		FROM PO_CONTRACT_FSALE A
   		WHERE  A.CENTER_CODE  = :centerCode
   		AND     A.UPJANG 			= :upjang
   		AND     A.ITEM_CODE      = :itemCode
   		AND     A.CONTRACT_START > :stdDate
		AND ROWNUM <= 1		
		]]>
	</statement>
	
	<!-- 식자재영업 판매단가 생성(을)를 수정한다. -->
	<statement name="updateDate" type="update">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.updateDate */
		<![CDATA[
		UPDATE PO_CONTRACT_FSALE A
        SET 		A.CONTRACT_END = TO_CHAR(TO_DATE(:stdDate,'YYYYMMDD')-1,'YYYYMMDD')
 		WHERE  A.CENTER_CODE  = :centerCode
   		AND     A.UPJANG 			= :upjang
   		AND     A.ITEM_CODE      = :itemCode
   		AND     A.CONTRACT_START < :stdDate
   		AND   	A.CONTRACT_START = (
   														SELECT /*+ INDEX_DESC(Z PO_CONTRACT_FSALE_PK) */
															Z.CONTRACT_START
	    												FROM PO_CONTRACT_FSALE Z
	    												WHERE Z.CENTER_CODE = :centerCode
            											AND 	   Z.UPJANG = :upjang
            											AND 	   Z.ITEM_CODE = :itemCode
            											AND 	   Z.CONTRACT_START < :stdDate
            											AND 	   ROWNUM <= 1
            										)
		]]>
	</statement>

	<!-- 식자재영업 판매단가 생성(을)를 수정한다. : 최종한번 실행 -->
	<!-- 생성한 CONTRACT_ID를 제외한 모든 아이템(종료일자가 없는)에 대해서 COINTRACT_END 를 UPDATE  한다 -->
	<statement name="updateDateNon" type="update">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.updateDateNon */
		<![CDATA[
		UPDATE PO_CONTRACT_FSALE A
        SET 		A.CONTRACT_END = TO_CHAR(TO_DATE(:stdDate,'YYYYMMDD')-1,'YYYYMMDD')
 		WHERE  A.CENTER_CODE  = :centerCode
   		AND     A.UPJANG 			= :upjang
   		AND     A.CONTRACT_START < :stdDate		/* 조건 : 생성한 계약시작일자 이전 자료 */
   		AND     A.CONTRACT_END IS NULL			/* 조건 : 계약종료일자가 없는 정보 */
		]]>
	</statement>



	<!-- 식자재영업 판매단가 생성(을)를 수정한다. -->
	<statement name="updateDate2" type="update">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.updateDate2 */
		<![CDATA[
		UPDATE /*+ INDEX_DESC(A PO_CONTRACT_FSALE_PK) */ PO_CONTRACT_FSALE A
   			SET A.CONTRACT_END = TO_CHAR(TO_DATE(:stdDate2,'YYYYMMDD')-1,'YYYYMMDD')
 		WHERE A.CENTER_CODE =  :centerCode
   		AND    A.UPJANG = :upjang
   		AND    A.ITEM_CODE = :itemCode
   		AND    A.CONTRACT_START < :stdDate
   		AND ROWNUM = 1 
		]]>
	</statement>


	<!-- 식자재영업 판매단가 생성(을)를 수정한다. : 최종한번 실행 -->
	<!-- 이전 CONTRACT_ID 기준으로 모든 자료에 대해서 종료일자를 SET한다(.0805) -->
	<statement name="updateDate3" type="update">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.updateDate3 */
		<![CDATA[
		UPDATE PO_CONTRACT_FSALE A
        SET 		A.CONTRACT_END = TO_CHAR(TO_DATE(:stdDate,'YYYYMMDD')-1,'YYYYMMDD')
 		WHERE  A.CENTER_CODE  = :centerCode
   		AND     A.UPJANG 			= :upjang
		AND     A.CONTRACT_ID = (
                               					SELECT
                                  						X.CONTRACT_ID  
                               					FROM
                                    					(
                                   							SELECT --/*+ INDEX_DESC(Z PO_CONTRACT_FSALE_PK) */
                                        							Z.CONTRACT_ID
                                    						FROM PO_CONTRACT_FSALE Z
                                    						WHERE Z.CENTER_CODE = :centerCode
                                    						AND 	   Z.UPJANG = :upjang
                                    						AND 	   Z.CONTRACT_START < :stdDate
                                    						GROUP BY Z.CONTRACT_ID      
                                    						ORDER BY Z.CONTRACT_ID DESC
                                    					) X     
                               					WHERE ROWNUM <= 1
                            					)
		]]>
	</statement>



	<!-- 식자재영업 판매단가 일괄 삭제한다. -->
	<statement name="deleteAll" type="delete">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.deleteAll */
		<![CDATA[
		DELETE 
		FROM   PO_CONTRACT_FSALE 
		WHERE  CONTRACT_ID = :contractId		/* 조건 : 계약번호 */
		AND     CENTER_CODE = :centerCode		/* 조건 : 센터코드 */
		]]>
	</statement>

	<!-- 식자재영업 선택한 자재를 삭제한다. -->
	<statement name="deleteItem" type="delete">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.deleteItem */
		<![CDATA[
		DELETE 
		FROM   PO_CONTRACT_FSALE 
		WHERE  CENTER_CODE = :centerCode
		AND     UPJANG          = :upjang
		AND     ITEM_CODE     = :itemCode
		AND     CONTRACT_START = REPLACE(:contractStart2, '-', '')
		]]>
	</statement>

	<!-- 단가계약번호를 삭제한다. -->
	<statement name="deleteFsale" type="delete">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.deleteFsale */
		<![CDATA[
		DELETE 
		FROM   PO_CONTRACT_FSALE 
		WHERE  CONTRACT_ID = :stdDate || '-' || :centerCode || '-' || :upjang || '-' || '001' 	/* 단가계약번호 SET */
		AND     CENTER_CODE = :centerCode		/* 조건 : 센터코드 */
		]]>
	</statement>


	<!-- 판매단가 정보 건수를 구한다. -->
	<statement name="selectCnt" type="select">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.selectCnt */
		<![CDATA[
		SELECT COUNT(*) AS CNT
		FROM  PO_CONTRACT_FSALE
		WHERE  CONTRACT_ID = :stdDate || '-' || :centerCode || '-' || :upjang || '-' || '001' 	/* 단가계약번호 SET */
		AND     CENTER_CODE = :centerCode		/* 조건 : 센터코드 */
		]]>
	</statement>

	<!--  식자재영업 판매단가 작업 결과를 업장정보에 반영한다. (생성이 된 경우에만) -->
	<statement name="updateMsg" type="update">
		/*+ com.hwfs.fm.fms.dao.FoodMaterialsSalePriceDAO.updateMsg */
		<![CDATA[
		UPDATE FMS_UPJANG
        SET 	  SALE_PRICE_AUTO_JEN_ID = :loginSabun
        		, SALE_PRICE_AUTO_JEN_DATE = SYSDATE
        		, SALE_PRICE_AUTO_JEN_MSG  = :msg
 		WHERE  UPJANG 	= :upjang
		]]>
	</statement>


</hqml>
