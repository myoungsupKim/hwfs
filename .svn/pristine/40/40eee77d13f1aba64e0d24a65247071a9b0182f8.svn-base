<?xml version="1.0" encoding="euc-kr"?>
<query dynamic="true">
	<type>select</type>
	<description><![CDATA[효율화식재 실적조회(사업장)]]></description>
	<reload>true</reload>
	<monitoring>true</monitoring>
	<result-count>1</result-count>
	<statement>
SELECT
			 C.ORG_LEVEL_NM3 AS PT_NM
	       , B.TM_NAME
	       , B.TM_CD
		   --, B.JOB_NAME
		   , B.SUB_JOB_NAME
	       , B.SUB_JOB_CD
		   , B.UPJANG
		   , B.UPJANGNM
	       , SUM(DECODE(EFF_GUBUN, 'H001', M_EFF_AMT, 0)) AS H001_M_AMT
	       , SUM(DECODE(EFF_GUBUN, 'H002', M_EFF_AMT, 0)) AS H002_M_AMT
	       , SUM(DECODE(EFF_GUBUN, 'H003', M_EFF_AMT, 0)) AS H003_M_AMT
	       , SUM(DECODE(EFF_GUBUN, 'H004', M_EFF_AMT, 0)) AS H004_M_AMT
	       , SUM(DECODE(EFF_GUBUN, 'H005', M_EFF_AMT, 0)) AS H005_M_AMT
	       , SUM(DECODE(EFF_GUBUN, 'H006', M_EFF_AMT, 0)) AS H006_M_AMT
	       , SUM(DECODE(EFF_GUBUN, 'H007', M_EFF_AMT, 0)) AS H007_M_AMT
	       , SUM(DECODE(EFF_GUBUN, 'H008', M_EFF_AMT, 0)) AS H008_M_AMT
	       , SUM(DECODE(EFF_GUBUN, 'H009', M_EFF_AMT, 0)) AS H009_M_AMT
	       , SUM(DECODE(EFF_GUBUN, 'H010', M_EFF_AMT, 0)) AS H010_M_AMT
	       , SUM(DECODE(EFF_GUBUN, 'H011', M_EFF_AMT, 0)) AS H011_M_AMT
	       
	       , SUM(DECODE(EFF_GUBUN, 'H001', U_EFF_AMT, 0)) AS H001_U_AMT
	       , SUM(DECODE(EFF_GUBUN, 'H002', U_EFF_AMT, 0)) AS H002_U_AMT
	       , SUM(DECODE(EFF_GUBUN, 'H003', U_EFF_AMT, 0)) AS H003_U_AMT 
	       , SUM(DECODE(EFF_GUBUN, 'H004', U_EFF_AMT, 0)) AS H004_U_AMT
	       , SUM(DECODE(EFF_GUBUN, 'H005', U_EFF_AMT, 0)) AS H005_U_AMT
	       , SUM(DECODE(EFF_GUBUN, 'H006', U_EFF_AMT, 0)) AS H006_U_AMT
	       , SUM(DECODE(EFF_GUBUN, 'H007', U_EFF_AMT, 0)) AS H007_U_AMT
	       , SUM(DECODE(EFF_GUBUN, 'H008', U_EFF_AMT, 0)) AS H008_U_AMT
	       , SUM(DECODE(EFF_GUBUN, 'H009', U_EFF_AMT, 0)) AS H009_U_AMT
	       , SUM(DECODE(EFF_GUBUN, 'H010', U_EFF_AMT, 0)) AS H010_U_AMT
	       , SUM(DECODE(EFF_GUBUN, 'H011', U_EFF_AMT, 0)) AS H011_U_AMT
	       
	       --재무금액 기준
	       , ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H001', U_EFF_AMT, 0)) / SUM(A.U_ALL_AMT),2) AS H001_U_RT   --사업장은 금액대신 전체대비 비율로 보여줌
	       , ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H002', U_EFF_AMT, 0)) / SUM(A.U_ALL_AMT),2) AS H002_U_RT
	       , ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H003', U_EFF_AMT, 0)) / SUM(A.U_ALL_AMT),2) AS H003_U_RT
	       , ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H004', U_EFF_AMT, 0)) / SUM(A.U_ALL_AMT),2) AS H004_U_RT
	       , ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H005', U_EFF_AMT, 0)) / SUM(A.U_ALL_AMT),2) AS H005_U_RT
	       , ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H006', U_EFF_AMT, 0)) / SUM(A.U_ALL_AMT),2) AS H006_U_RT
	       , ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H007', U_EFF_AMT, 0)) / SUM(A.U_ALL_AMT),2) AS H007_U_RT
	       , ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H008', U_EFF_AMT, 0)) / SUM(A.U_ALL_AMT),2) AS H008_U_RT
	       , ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H009', U_EFF_AMT, 0)) / SUM(A.U_ALL_AMT),2) AS H009_U_RT
	       , ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H010', U_EFF_AMT, 0)) / SUM(A.U_ALL_AMT),2) AS H010_U_RT
	       , ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H011', U_EFF_AMT, 0)) / SUM(A.U_ALL_AMT),2) AS H011_U_RT
	       
	       --관리금액 기준
	       --, ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H001', M_EFF_AMT, 0)) / SUM(A.M_ALL_AMT),2) AS H001_U_RT   --사업장은 금액대신 전체대비 비율로 보여줌
	       --, ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H002', M_EFF_AMT, 0)) / SUM(A.M_ALL_AMT),2) AS H002_U_RT
	       --, ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H003', M_EFF_AMT, 0)) / SUM(A.M_ALL_AMT),2) AS H003_U_RT
	       --, ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H004', M_EFF_AMT, 0)) / SUM(A.M_ALL_AMT),2) AS H004_U_RT
	       --, ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H005', M_EFF_AMT, 0)) / SUM(A.M_ALL_AMT),2) AS H005_U_RT
	       --, ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H006', M_EFF_AMT, 0)) / SUM(A.M_ALL_AMT),2) AS H006_U_RT
	       --, ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H007', M_EFF_AMT, 0)) / SUM(A.M_ALL_AMT),2) AS H007_U_RT
	       --, ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H008', M_EFF_AMT, 0)) / SUM(A.M_ALL_AMT),2) AS H008_U_RT
	       --, ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H009', M_EFF_AMT, 0)) / SUM(A.M_ALL_AMT),2) AS H009_U_RT
	       --, ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H010', M_EFF_AMT, 0)) / SUM(A.M_ALL_AMT),2) AS H010_U_RT
	       --, ROUND(100 * SUM(DECODE(EFF_GUBUN, 'H011', M_EFF_AMT, 0)) / SUM(A.M_ALL_AMT),2) AS H011_U_RT
	       	       
	       , SUM(A.U_EFF_AMT) AS U_EFF_AMT
	       , SUM(A.M_EFF_AMT) AS M_EFF_AMT
	       , SUM(A.U_ALL_AMT) AS U_ALL_AMT
	       , SUM(A.M_ALL_AMT) AS M_ALL_AMT 
	       , DECODE(SUM(A.U_ALL_AMT), 0, 0, ROUND(SUM(A.U_EFF_AMT) / SUM(A.U_ALL_AMT) * 100, 2)) AS U_EFF_RATE
	       , DECODE(SUM(A.M_ALL_AMT), 0, 0, ROUND(SUM(A.M_EFF_AMT) / SUM(A.M_ALL_AMT) * 100, 2)) AS M_EFF_RATE
	  FROM (
	        SELECT UPJANG
          		 , EFF_GUBUN
	             , SUM(U_EFF_AMT) AS U_EFF_AMT			  --효율화식재 매입액(재무)
	             , SUM(U_ALL_AMT) AS U_ALL_AMT			  --전체 매입액(재무)
	             , SUM(M_EFF_AMT) AS M_EFF_AMT            --효율화식재 매입액(관리)
	             , SUM(M_ALL_AMT) AS M_ALL_AMT            --전체 매입액(관리)

	          FROM (
	                SELECT A.UPJANG
                         , B.ITEM_CODE
                         , B.EFF_GUBUN
	                     , CASE WHEN B.ITEM_CODE IS NOT NULL THEN SUM(ROUND(A.TRANS_UAMOUNT)) ELSE 0 END AS U_EFF_AMT
	                     , CASE WHEN B.ITEM_CODE IS NOT NULL THEN SUM(ROUND(A.TRANS_MAMOUNT)) ELSE 0 END AS M_EFF_AMT
	                     , SUM(ROUND(A.TRANS_UAMOUNT)) AS U_ALL_AMT
	                     , SUM(ROUND(A.TRANS_MAMOUNT)) AS M_ALL_AMT
	                  FROM FSI_EFF_DAILY_SUM A
	                     , FSI_EFF_MST B
	                 WHERE 1=1 --A.CENTER_CODE = B.CENTER_CODE(+) 
	                   AND A.ITEM_CODE = B.ITEM_CODE(+)
	                   AND A.TRANS_DATE BETWEEN #START_DATE# AND #END_DATE#
	                   AND B.START_DATE(+) &lt;= #END_DATE# AND B.END_DATE(+) &gt;= #START_DATE#  
	                   AND B.USE_YN(+) = 'Y'
	                   <isNotNull col="CENTER_CODE">
						    --AND A.CENTER_CODE = #CENTER_CODE#
					   </isNotNull>
	                 GROUP BY A.UPJANG
                   		  , B.ITEM_CODE
                          , B.EFF_GUBUN
	                      , NVL(B.USE_YN, 'N')
	               )
	         GROUP BY UPJANG, EFF_GUBUN
	       ) A
	     , MAC_UPJANG_V B
         , SCC_CC C
	 WHERE A.UPJANG = B.UPJANG
     AND B.CC_CD = C.CC_CD -- 3
	   <isNotNull col="TM_CD">   
           --부문 조회 추가    
           AND (B.TM_CD LIKE #TM_CD# || '%' OR B.PT_CD LIKE #TM_CD# || '%')
	   </isNotNull>      	
	   <isNotNull col="UPJANG">
           AND B.UPJANG = #UPJANG#
	   </isNotNull>
	   <isEqual col="CLOSED" value="1">   
           AND B.CLOSE_DATE IS NULL
       </isEqual>    	

     GROUP BY C.ORG_LEVEL_NM3
         , B.TM_NAME
         , B.TM_CD
	     , B.SUB_JOB_NAME
         , B.SUB_JOB_CD
	     , B.UPJANG
	     , B.UPJANGNM
	 ORDER BY B.TM_CD, B.SUB_JOB_CD, B.UPJANG
	 
    </statement>
	<input default-name="ds_cond">
	</input>
	<output default-name="ds_list">
	</output>
</query>